{"beams": [{"score": -0.9234315697142392, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Acidic Swamp Ooze", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Destroy"}, {"_type": "Call", "func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "EnemyPlayer"}]}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "AcidicSwampOoze", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001438752660760656, -0.07383837550878525, -0.0006826304015703499, -0.00010895135346800089, -4.9591064453125e-05, -8.96453857421875e-05, 0.0, -7.987004210008308e-06, -5.4001786338631064e-05, 0.0, -1.1444091796875e-05, -0.008281707763671875, -0.0001583099365234375, -9.333751950180158e-05, -8.690356480656192e-05, -0.0004978179931640625, -9.72747802734375e-05, -8.046627044677734e-05, 0.0, -0.0003464224864728749, 0.0, -6.687641143798828e-05, 0.0, -0.0010524988174438477, -1.4305104514278355e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.2067298889160156e-05, -1.4305104514278355e-06, -9.5367431640625e-06, -0.0009021759033203125, -1.9073486328125e-06, -0.0032705296762287617, -0.10490504652261734, -0.7102155685424805, -0.0010318756103515625, -1.9073486328125e-05, -1.9073486328125e-06, -0.0049239397048950195, -0.000911712646484375, 0.0, -0.0002880096435546875, -4.9591064453125e-05, 0.0, -0.010679913684725761, -9.369808685733005e-05, 0.0, -0.00028228759765625, -3.814697265625e-06, -1.1920883480343036e-07, 0.0, -1.204010459332494e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Acidic", "Swamp", "Ooze", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Destroy", "<EOS>", 32, 101, 19, 125, "Weapon", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -1.790386170132244, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Acidic Swamp Ooze", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Destroy"}, {"_type": "Template38", "hole0": "SelfSelector"}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "AcidicSwampOoze", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001438752660760656, -0.07383837550878525, -0.0006826304015703499, -0.00010895135346800089, -4.9591064453125e-05, -8.96453857421875e-05, 0.0, -7.987004210008308e-06, -5.4001786338631064e-05, 0.0, -1.1444091796875e-05, -0.008281707763671875, -0.0001583099365234375, -9.333751950180158e-05, -8.690356480656192e-05, -0.0004978179931640625, -9.72747802734375e-05, -8.046627044677734e-05, 0.0, -0.0003464224864728749, 0.0, -6.687641143798828e-05, 0.0, -0.0010524988174438477, -1.4305104514278355e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.2067298889160156e-05, -1.4305104514278355e-06, -9.5367431640625e-06, -0.0009021759033203125, -1.9073486328125e-06, -0.0032705296762287617, -0.10490504652261734, -0.6785573959350586, 0.0, -0.8288426399230957, -0.0010291221551597118, 0.0, -0.08703231811523438, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -4.649158654501662e-06, 0.0], "choice_history": [55, 124, 221, 63, 103, "Acidic", "Swamp", "Ooze", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Destroy", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -1.941530090273929, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Acidic Swamp Ooze", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Destroy"}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "AcidicSwampOoze", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001438752660760656, -0.07383837550878525, -0.0006826304015703499, -0.00010895135346800089, -4.9591064453125e-05, -8.96453857421875e-05, 0.0, -7.987004210008308e-06, -5.4001786338631064e-05, 0.0, -1.1444091796875e-05, -0.008281707763671875, -0.0001583099365234375, -9.333751950180158e-05, -8.690356480656192e-05, -0.0004978179931640625, -9.72747802734375e-05, -8.046627044677734e-05, 0.0, -0.0003464224864728749, 0.0, -6.687641143798828e-05, 0.0, -0.0010524988174438477, -1.4305104514278355e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.2067298889160156e-05, -1.4305104514278355e-06, -9.5367431640625e-06, -0.0009021759033203125, -1.9073486328125e-06, -0.0032705296762287617, -0.10490504652261734, -0.6785573959350586, 0.0, -0.7612853050231934, -0.00012552738189697266, -1.1920928244535389e-07, -0.3066368103027344, -1.9073486328125e-06, -1.1920923270736239e-07, -1.1920928244535389e-07, -4.768367489305092e-06, 0.0], "choice_history": [55, 124, 221, 63, 103, "Acidic", "Swamp", "Ooze", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Destroy", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -2.957606976194363, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Acidic Swamp Ooze", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "DestroyDestroy"}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "AcidicSwampOoze", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001438752660760656, -0.07383837550878525, -0.0006826304015703499, -0.00010895135346800089, -4.9591064453125e-05, -8.96453857421875e-05, 0.0, -7.987004210008308e-06, -5.4001786338631064e-05, 0.0, -1.1444091796875e-05, -0.008281707763671875, -0.0001583099365234375, -9.333751950180158e-05, -8.690356480656192e-05, -0.0004978179931640625, -9.72747802734375e-05, -8.046627044677734e-05, 0.0, -0.0003464224864728749, 0.0, -6.687641143798828e-05, 0.0, -0.0010524988174438477, -1.4305104514278355e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.2067298889160156e-05, -1.4305104514278355e-06, -9.5367431640625e-06, -0.0009021759033203125, -1.9073486328125e-06, -0.0032705296762287617, -2.5391225814819336, -0.0007204942521639168, -0.1472949981689453, 0.0, -0.011868126690387726, -0.00013518333435058594, 0.0, -0.16844558715820312, -1.9073486328125e-06, -2.3841846541472478e-07, -1.1920928244535389e-07, -4.768367489305092e-06, 0.0], "choice_history": [55, 124, 221, 63, 103, "Acidic", "Swamp", "Ooze", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Destroy", "Destroy", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(DestroyDestroy(),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -4.033491467202445, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Acidic Swamp Ooze", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Destroy"}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"hole2": "windfury", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "AcidicSwampOoze", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001438752660760656, -0.07383837550878525, -0.0006826304015703499, -0.00010895135346800089, -4.9591064453125e-05, -8.96453857421875e-05, 0.0, -7.987004210008308e-06, -5.4001786338631064e-05, 0.0, -1.1444091796875e-05, -0.008281707763671875, -0.0001583099365234375, -9.333751950180158e-05, -8.690356480656192e-05, -0.0004978179931640625, -9.72747802734375e-05, -8.046627044677734e-05, 0.0, -0.0003464224864728749, 0.0, -6.687641143798828e-05, 0.0, -0.0010524988174438477, -1.4305104514278355e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.2067298889160156e-05, -1.4305104514278355e-06, -9.5367431640625e-06, -0.0009021759033203125, -1.9073486328125e-06, -0.0032705296762287617, -0.10490504652261734, -0.6785573959350586, 0.0, -0.7612853050231934, -0.00012552738189697266, -1.1920928244535389e-07, -1.3433198928833008, -5.91278076171875e-05, -3.1470732210436836e-05, -6.198863957251888e-06, -0.00011336170427966863, -8.344646857949556e-07, -1.0441943407058716, -2.8014157578581944e-05, -0.010235786437988281, -2.86102294921875e-05, -0.0005855560302734375, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Acidic", "Swamp", "Ooze", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Destroy", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 72, 145, "3", "<EOS>", "2", "<EOS>", "windfury", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2, windfury=True)\n"}, {"score": -4.284007787152291, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Acidic Swamp Ooze", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Destroy"}, {"_type": "Call", "func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "EnemyPlayer"}]}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "AcidicOozeOoze", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001438752660760656, -3.0286552906036377, -0.34181666374206543, -0.00015281491505447775, -7.62939453125e-05, -3.0517578125e-05, 0.0, -1.2636145584110636e-05, -4.756447742693126e-05, 0.0, -1.1444091796875e-05, -0.009975433349609375, -0.0001468658447265625, -7.736452971585095e-05, -5.960464113741182e-05, -0.0004940032958984375, -8.7738037109375e-05, -8.606910705566406e-05, 0.0, -0.0003478529688436538, 0.0, -6.496906280517578e-05, 0.0, -0.0010296106338500977, -1.9073468138230965e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.218650817871094e-05, -1.4305104514278355e-06, -9.5367431640625e-06, -0.00087738037109375, -1.9073486328125e-06, -0.003316036891192198, -0.12641657888889313, -0.7511720657348633, -0.001064300537109375, -1.9073486328125e-05, -1.9073486328125e-06, -0.0050498247146606445, -0.00093841552734375, 0.0, -0.0002994537353515625, -4.9591064453125e-05, 0.0, -0.011012332513928413, -9.190994023811072e-05, 0.0, -0.0002765655517578125, -3.814697265625e-06, 0.0, 0.0, -1.1086437552876305e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Acidic", "Ooze", "Ooze", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Destroy", "<EOS>", 32, 101, 19, 125, "Weapon", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicOozeOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -4.472254571023306, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Acidic Swamp Ooze", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Destroy"}, {"_type": "Template38", "hole0": "Destroy"}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "AcidicSwampOoze", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001438752660760656, -0.07383837550878525, -0.0006826304015703499, -0.00010895135346800089, -4.9591064453125e-05, -8.96453857421875e-05, 0.0, -7.987004210008308e-06, -5.4001786338631064e-05, 0.0, -1.1444091796875e-05, -0.008281707763671875, -0.0001583099365234375, -9.333751950180158e-05, -8.690356480656192e-05, -0.0004978179931640625, -9.72747802734375e-05, -8.046627044677734e-05, 0.0, -0.0003464224864728749, 0.0, -6.687641143798828e-05, 0.0, -0.0010524988174438477, -1.4305104514278355e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.2067298889160156e-05, -1.4305104514278355e-06, -9.5367431640625e-06, -0.0009021759033203125, -1.9073486328125e-06, -0.0032705296762287617, -0.10490504652261734, -0.6785573959350586, 0.0, -3.5199077129364014, -0.06678779423236847, -0.012073516845703125, -1.9073486328125e-06, -5.96045310885529e-07, -1.1920928244535389e-07, -7.510183422709815e-06, 0.0], "choice_history": [55, 124, 221, 63, 103, "Acidic", "Swamp", "Ooze", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Destroy", "<EOS>", 49, 174, "Destroy", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(), Destroy()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -4.6304927813852075, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Acidic Swamp Ooze", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Destroy"}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "AcidicSwampOoze", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001438752660760656, -0.07383837550878525, -0.0006826304015703499, -0.00010895135346800089, -4.9591064453125e-05, -8.96453857421875e-05, 0.0, -7.987004210008308e-06, -5.4001786338631064e-05, 0.0, -1.1444091796875e-05, -0.008281707763671875, -0.0001583099365234375, -9.333751950180158e-05, -8.690356480656192e-05, -0.0004978179931640625, -9.72747802734375e-05, -8.046627044677734e-05, 0.0, -0.0003464224864728749, 0.0, -6.687641143798828e-05, 0.0, -0.0010524988174438477, -1.4305104514278355e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.2067298889160156e-05, -1.4305104514278355e-06, -9.5367431640625e-06, -0.0009021759033203125, -1.9073486328125e-06, -0.0032705296762287617, -0.10490504652261734, -0.6785573959350586, 0.0, -0.7612853050231934, -0.00012552738189697266, -1.1920928244535389e-07, -1.3433198928833008, -5.91278076171875e-05, -3.1470732210436836e-05, -6.198863957251888e-06, -0.00011336170427966863, -8.344646857949556e-07, -1.6088696718215942, -3.4570634852570947e-06, -0.036200523376464844, -1.52587890625e-05, -0.0069866180419921875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Acidic", "Swamp", "Ooze", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Destroy", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 72, 145, "3", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2, charge=True)\n"}, {"score": -4.631804736334971, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Acidic Swamp Ooze", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Destroy"}, {"_type": "Call", "func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "EnemyPlayer"}]}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "Acidic<UNK>Ooze", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001438752660760656, -3.7822115421295166, -0.0006826304015703499, -0.00010895135346800089, -4.9591064453125e-05, -8.96453857421875e-05, 0.0, -7.987004210008308e-06, -5.4001786338631064e-05, 0.0, -1.1444091796875e-05, -0.008281707763671875, -0.0001583099365234375, -9.333751950180158e-05, -8.690356480656192e-05, -0.0004978179931640625, -9.72747802734375e-05, -8.046627044677734e-05, 0.0, -0.0003464224864728749, 0.0, -6.687641143798828e-05, 0.0, -0.0010524988174438477, -1.4305104514278355e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.2067298889160156e-05, -1.4305104514278355e-06, -9.5367431640625e-06, -0.0009021759033203125, -1.9073486328125e-06, -0.0032705296762287617, -0.10490504652261734, -0.7102155685424805, -0.0010318756103515625, -1.9073486328125e-05, -1.9073486328125e-06, -0.0049239397048950195, -0.000911712646484375, 0.0, -0.0002880096435546875, -4.9591064453125e-05, 0.0, -0.010679913684725761, -9.369808685733005e-05, 0.0, -0.00028228759765625, -3.814697265625e-06, -1.1920883480343036e-07, 0.0, -1.204010459332494e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Acidic", "<UNK>", "Ooze", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Destroy", "<EOS>", 32, 101, 19, 125, "Weapon", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class Acidic<UNK>Ooze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -4.642071506647426, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Acidic Swamp Ooze", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "DestroyDestroy"}, {"_type": "Call", "func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "EnemyPlayer"}]}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "AcidicSwampOoze", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001438752660760656, -0.07383837550878525, -0.0006826304015703499, -0.00010895135346800089, -4.9591064453125e-05, -8.96453857421875e-05, 0.0, -7.987004210008308e-06, -5.4001786338631064e-05, 0.0, -1.1444091796875e-05, -0.008281707763671875, -0.0001583099365234375, -9.333751950180158e-05, -8.690356480656192e-05, -0.0004978179931640625, -9.72747802734375e-05, -8.046627044677734e-05, 0.0, -0.0003464224864728749, 0.0, -6.687641143798828e-05, 0.0, -0.0010524988174438477, -1.4305104514278355e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.2067298889160156e-05, -1.4305104514278355e-06, -9.5367431640625e-06, -0.0009021759033203125, -1.9073486328125e-06, -0.0032705296762287617, -2.5391225814819336, -0.0007204942521639168, -1.9943733215332031, -0.0010395050048828125, -2.47955322265625e-05, -9.5367431640625e-06, -0.004101753234863281, -0.000926971435546875, 0.0, -0.000293731689453125, -7.2479248046875e-05, 0.0, -0.01088031567633152, -0.00013780540029983968, 0.0, -0.000339508056640625, -3.814697265625e-06, -1.1920906217710581e-07, 0.0, -1.1801687833212782e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Acidic", "Swamp", "Ooze", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Destroy", "Destroy", "<EOS>", 32, 101, 19, 125, "Weapon", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(DestroyDestroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -4.868010621965105, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Acidic Swamp Ooze", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Destroy"}, {"_type": "Template38", "hole0": "HeroSelector"}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "AcidicSwampOoze", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001438752660760656, -0.07383837550878525, -0.0006826304015703499, -0.00010895135346800089, -4.9591064453125e-05, -8.96453857421875e-05, 0.0, -7.987004210008308e-06, -5.4001786338631064e-05, 0.0, -1.1444091796875e-05, -0.008281707763671875, -0.0001583099365234375, -9.333751950180158e-05, -8.690356480656192e-05, -0.0004978179931640625, -9.72747802734375e-05, -8.046627044677734e-05, 0.0, -0.0003464224864728749, 0.0, -6.687641143798828e-05, 0.0, -0.0010524988174438477, -1.4305104514278355e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.2067298889160156e-05, -1.4305104514278355e-06, -9.5367431640625e-06, -0.0009021759033203125, -1.9073486328125e-06, -0.0032705296762287617, -0.10490504652261734, -0.6785573959350586, 0.0, -3.9344964027404785, -0.0013290643692016602, 0.0, -0.05870246887207031, -1.9073486328125e-06, -1.1920926112907182e-07, -1.1920928244535389e-07, -5.125993993715383e-06, 0.0], "choice_history": [55, 124, 221, 63, 103, "Acidic", "Swamp", "Ooze", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Destroy", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -5.060936361909505, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Acidic Swamp Ooze", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Destroy"}, {"_type": "Template38", "hole0": "SelfSelector"}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "AcidicOozeOoze", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001438752660760656, -3.0286552906036377, -0.34181666374206543, -0.00015281491505447775, -7.62939453125e-05, -3.0517578125e-05, 0.0, -1.2636145584110636e-05, -4.756447742693126e-05, 0.0, -1.1444091796875e-05, -0.009975433349609375, -0.0001468658447265625, -7.736452971585095e-05, -5.960464113741182e-05, -0.0004940032958984375, -8.7738037109375e-05, -8.606910705566406e-05, 0.0, -0.0003478529688436538, 0.0, -6.496906280517578e-05, 0.0, -0.0010296106338500977, -1.9073468138230965e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.218650817871094e-05, -1.4305104514278355e-06, -9.5367431640625e-06, -0.00087738037109375, -1.9073486328125e-06, -0.003316036891192198, -0.12641657888889313, -0.6404571533203125, 0.0, -0.81842440366745, -0.0010708444751799107, 0.0, -0.0869598388671875, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -4.649158654501662e-06, 0.0], "choice_history": [55, 124, 221, 63, 103, "Acidic", "Ooze", "Ooze", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Destroy", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicOozeOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -5.5159551846885435, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Acidic Swamp Ooze", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Destroy"}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "AcidicSwampOoze", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001438752660760656, -0.07383837550878525, -0.0006826304015703499, -0.00010895135346800089, -4.9591064453125e-05, -8.96453857421875e-05, 0.0, -7.987004210008308e-06, -5.4001786338631064e-05, 0.0, -1.1444091796875e-05, -0.008281707763671875, -0.0001583099365234375, -9.333751950180158e-05, -8.690356480656192e-05, -0.0004978179931640625, -9.72747802734375e-05, -8.046627044677734e-05, 0.0, -0.0003464224864728749, 0.0, -6.687641143798828e-05, 0.0, -0.0010524988174438477, -1.4305104514278355e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.2067298889160156e-05, -1.4305104514278355e-06, -9.5367431640625e-06, -0.0009021759033203125, -1.9073486328125e-06, -0.0032705296762287617, -0.10490504652261734, -0.6785573959350586, 0.0, -0.7612853050231934, -0.00012552738189697266, -1.1920928244535389e-07, -1.3433198928833008, -5.91278076171875e-05, -3.1470732210436836e-05, -6.198863957251888e-06, -0.00011336170427966863, -8.344646857949556e-07, -1.8948708772659302, -2.3126602172851562e-05, -0.6351995468139648, -1.9073486328125e-05, -0.00742340087890625, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Acidic", "Swamp", "Ooze", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Destroy", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 72, 145, "3", "<EOS>", "2", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2, stealth=True)\n"}, {"score": -5.646591601876594, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Acidic Swamp Ooze", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "DestroyDestroy"}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"hole2": "windfury", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "AcidicSwampOoze", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001438752660760656, -0.07383837550878525, -0.0006826304015703499, -0.00010895135346800089, -4.9591064453125e-05, -8.96453857421875e-05, 0.0, -7.987004210008308e-06, -5.4001786338631064e-05, 0.0, -1.1444091796875e-05, -0.008281707763671875, -0.0001583099365234375, -9.333751950180158e-05, -8.690356480656192e-05, -0.0004978179931640625, -9.72747802734375e-05, -8.046627044677734e-05, 0.0, -0.0003464224864728749, 0.0, -6.687641143798828e-05, 0.0, -0.0010524988174438477, -1.4305104514278355e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.2067298889160156e-05, -1.4305104514278355e-06, -9.5367431640625e-06, -0.0009021759033203125, -1.9073486328125e-06, -0.0032705296762287617, -2.5391225814819336, -0.0007204942521639168, -0.1472949981689453, 0.0, -0.011868126690387726, -0.00013518333435058594, 0.0, -1.8786029815673828, -4.76837158203125e-05, -4.064951281179674e-05, -5.006777428206988e-06, -0.00010978581849485636, -4.768370445162873e-07, -0.9717378616333008, -2.539156957936939e-05, -0.006260871887207031, -2.6702880859375e-05, -0.0005779266357421875, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Acidic", "Swamp", "Ooze", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Destroy", "Destroy", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 72, 145, "3", "<EOS>", "2", "<EOS>", "windfury", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(DestroyDestroy(),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2, windfury=True)\n"}, {"score": -22.145689010620117, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -3.814697265625e-06, -22.14568519592285], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 0}
{"beams": [{"score": -0.4890246499109949, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AncestralHealing", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.940656698541716e-06, -4.6491513785440475e-06, -8.344646857949556e-07, -4.76837158203125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.000156998576130718, -1.9669481844175607e-05, 0.0, -2.09808349609375e-05, -0.000194549560546875, 0.0, -1.7762085917638615e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00045670827967114747, -2.0265579223632812e-06, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0069122314453125, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -9.298297300119884e-06, -1.3709068298339844e-05, -3.933906555175781e-06, 0.0, -0.007822036743164062, -1.52587890625e-05, -1.33514404296875e-05, -4.410734163684538e-06, -0.00013196468353271484, -4.017311584902927e-05, -9.5367431640625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00010656761878635734, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.05420398712158203, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -5.1856040954589844e-05, -9.298280929215252e-06, -0.0114593505859375, 0.0, -0.000728607177734375, -7.62939453125e-06, 0.0, -0.0014367103576660156, -1.1920928244535389e-07, -0.0001811981201171875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -9.34600830078125e-05, -1.71661376953125e-05, -1.919269561767578e-05, -4.76837158203125e-05, -0.0007959604263305664, -9.393692016601562e-05, -0.00067138671875, -2.288818359375e-05, -9.763240814208984e-05, 0.0, -3.4332275390625e-05, -4.76837158203125e-05, 0.0, -4.768367489305092e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -8.70227722771233e-06, -8.463837730232626e-06, -0.22623825073242188, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, 0.0, -1.3947486877441406e-05, 0.0, -0.00011265277862548828, 0.0, -1.9073486328125e-05, -0.0001087188720703125, 0.0, -3.24249267578125e-05, -1.1920928244535389e-07, -2.09808349609375e-05, 0.0, -4.565715789794922e-05, -4.136537609156221e-05, -0.005889892578125, -3.24249267578125e-05, -0.0023937225341796875, -0.002323150634765625, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, 0.0, -8.022785186767578e-05, -2.861018856492592e-06, -5.245207830739673e-06, -2.3841855067985307e-07, -0.03955721855163574, -4.4226457248441875e-05, -1.33514404296875e-05, -0.000629425048828125, -0.004390716552734375, -8.58306884765625e-05, -5.7220458984375e-06, -0.002429962158203125, 0.0, -0.00014400482177734375, -2.3841855067985307e-07, -0.009006500244140625, -1.1920928244535389e-07, -0.00795745849609375, -0.0017042160034179688, -0.0001544952392578125, -9.34600830078125e-05, -3.814697265625e-06, -0.0012645721435546875, -1.9073486328125e-06, -0.007442474365234375, 0.0, -0.0009337663650512695, -7.152555099310121e-07, -1.0848044439626392e-05, -3.933906555175781e-06, -0.019434690475463867, -2.741813204920618e-06, -0.0017099380493164062, -3.814697265625e-06, -5.53131103515625e-05, -1.1920928244535389e-07, -0.009897232055664062, -5.7220458984375e-06, -9.1552734375e-05, -1.9073486328125e-06, -0.000278472900390625, -0.033652305603027344, 0.0, -0.0002384185791015625, 0.0, -1.9073486328125e-05, -1.1920928244535389e-07, -0.0001316070556640625, -7.987022399902344e-06, -0.02229595184326172, -2.3841855067985307e-07, -0.00041961669921875, -0.00095367431640625, -6.687641143798828e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Ancestral", "Healing", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ancestral", " ", "Healing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n"}, {"score": -4.109902869186172, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AncestralHealing", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.940656698541716e-06, -4.6491513785440475e-06, -8.344646857949556e-07, -4.76837158203125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.000156998576130718, -1.9669481844175607e-05, 0.0, -2.09808349609375e-05, -0.000194549560546875, 0.0, -1.7762085917638615e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00045670827967114747, -2.0265579223632812e-06, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0069122314453125, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -9.298297300119884e-06, -1.3709068298339844e-05, -3.933906555175781e-06, 0.0, -0.007822036743164062, -1.52587890625e-05, -1.33514404296875e-05, -4.410734163684538e-06, -0.00013196468353271484, -4.017311584902927e-05, -9.5367431640625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00010656761878635734, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.614138603210449, -3.576278118089249e-07, -7.62939453125e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.9669532775878906e-05, -2.729855441430118e-05, -0.06922149658203125, -1.9073486328125e-06, -0.00226593017578125, -5.7220458984375e-06, 0.0, -0.001511693000793457, -2.3841855067985307e-07, -0.00019073486328125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.000102996826171875, -1.9073486328125e-05, -2.110004425048828e-05, -5.53131103515625e-05, -0.0009238719940185547, -8.809566497802734e-05, -0.0006866455078125, -2.288818359375e-05, -9.953975677490234e-05, 0.0, -3.4332275390625e-05, -4.76837158203125e-05, 0.0, -4.768367489305092e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -8.70227722771233e-06, -8.463837730232626e-06, -0.22775936126708984, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, 0.0, -1.2040138244628906e-05, 0.0, -9.167194366455078e-05, 0.0, -1.9073486328125e-05, -0.0001068115234375, 0.0, -3.24249267578125e-05, -1.1920928244535389e-07, -2.09808349609375e-05, 0.0, -4.553794860839844e-05, -4.124616680201143e-05, -0.00576019287109375, -3.24249267578125e-05, -0.00240325927734375, -0.00231170654296875, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, 0.0, -8.022785186767578e-05, -2.861018856492592e-06, -5.245207830739673e-06, -2.3841855067985307e-07, -0.039556264877319336, -4.4226457248441875e-05, -1.33514404296875e-05, -0.000629425048828125, -0.004383087158203125, -8.58306884765625e-05, -5.7220458984375e-06, -0.002422332763671875, 0.0, -0.00014400482177734375, -2.3841855067985307e-07, -0.009012222290039062, -1.1920928244535389e-07, -0.007955551147460938, -0.0017032623291015625, -0.0001544952392578125, -9.34600830078125e-05, -3.814697265625e-06, -0.0012664794921875, -1.9073486328125e-06, -0.007442474365234375, 0.0, -0.0009347200393676758, -7.152555099310121e-07, -1.0848044439626392e-05, -3.933906555175781e-06, -0.01943373680114746, -2.741813204920618e-06, -0.0017099380493164062, -3.814697265625e-06, -5.53131103515625e-05, -1.1920928244535389e-07, -0.009894371032714844, -5.7220458984375e-06, -9.1552734375e-05, -1.9073486328125e-06, -0.000278472900390625, -0.03370094299316406, 0.0, -0.0002384185791015625, 0.0, -1.9073486328125e-05, -1.1920928244535389e-07, -0.0001316070556640625, -7.987022399902344e-06, -0.022296905517578125, -2.3841855067985307e-07, -0.00041961669921875, -0.00095367431640625, -6.687641143798828e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Ancestral", "Healing", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ancestral", " ", "Healing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n"}, {"score": -4.83979607725427, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AncestralHealing", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.940656698541716e-06, -4.6491513785440475e-06, -8.344646857949556e-07, -4.76837158203125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.000156998576130718, -1.9669481844175607e-05, 0.0, -2.09808349609375e-05, -0.000194549560546875, 0.0, -1.7762085917638615e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00045670827967114747, -2.0265579223632812e-06, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0069122314453125, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -9.298297300119884e-06, -1.3709068298339844e-05, -3.933906555175781e-06, 0.0, -0.007822036743164062, -1.52587890625e-05, -1.33514404296875e-05, -4.410734163684538e-06, -0.00013196468353271484, -4.017311584902927e-05, -9.5367431640625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00010656761878635734, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.05420398712158203, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -5.1856040954589844e-05, -9.298280929215252e-06, -0.0114593505859375, 0.0, -0.000728607177734375, -7.62939453125e-06, 0.0, -0.0014367103576660156, -1.1920928244535389e-07, -0.0001811981201171875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -9.34600830078125e-05, -1.71661376953125e-05, -1.919269561767578e-05, -4.76837158203125e-05, -0.0007959604263305664, -9.393692016601562e-05, -0.00067138671875, -2.288818359375e-05, -9.763240814208984e-05, 0.0, -3.4332275390625e-05, -4.76837158203125e-05, 0.0, -4.768367489305092e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -8.70227722771233e-06, -8.463837730232626e-06, -0.22623825073242188, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, 0.0, -1.3947486877441406e-05, 0.0, -0.00011265277862548828, 0.0, -1.9073486328125e-05, -0.0001087188720703125, 0.0, -3.24249267578125e-05, -1.1920928244535389e-07, -2.09808349609375e-05, 0.0, -4.565715789794922e-05, -4.136537609156221e-05, -0.005889892578125, -3.24249267578125e-05, -0.0023937225341796875, -0.002323150634765625, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, 0.0, -8.022785186767578e-05, -2.861018856492592e-06, -5.245207830739673e-06, -2.3841855067985307e-07, -3.72715163230896, -1.1920928244535389e-07, -0.019313812255859375, -0.12137985229492188, 0.0, -0.0005044937133789062, -2.3841855067985307e-07, -0.5208301544189453, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0009002685546875, -0.011872291564941406, -1.9073486328125e-06, -0.006140708923339844, 0.0, -4.1961669921875e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -2.1457672119140625e-06, -0.10377979278564453, -2.0265558760002023e-06, -0.00026702880859375, -0.0036373138427734375, -4.029273986816406e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Ancestral", "Healing", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ancestral", " ", "Healing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.taunt = True\n"}, {"score": -4.967173944776029, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AncestralHealing", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.940656698541716e-06, -4.6491513785440475e-06, -8.344646857949556e-07, -4.76837158203125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.000156998576130718, -1.9669481844175607e-05, 0.0, -2.09808349609375e-05, -0.000194549560546875, 0.0, -1.7762085917638615e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00045670827967114747, -2.0265579223632812e-06, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0069122314453125, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -9.298297300119884e-06, -1.3709068298339844e-05, -3.933906555175781e-06, 0.0, -0.007822036743164062, -1.52587890625e-05, -1.33514404296875e-05, -4.410734163684538e-06, -0.00013196468353271484, -4.017311584902927e-05, -9.5367431640625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00010656761878635734, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -4.537357330322266, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -9.191036224365234e-05, -7.986990567587782e-06, -0.0054302215576171875, -1.9073486328125e-06, -0.001201629638671875, -1.33514404296875e-05, 0.0, -0.0013816356658935547, -1.1920928244535389e-07, -0.000186920166015625, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -9.5367431640625e-05, -1.9073486328125e-05, -2.110004425048828e-05, -4.9591064453125e-05, -0.0008437633514404297, -9.012222290039062e-05, -0.000652313232421875, -2.09808349609375e-05, -9.763240814208984e-05, 0.0, -3.4332275390625e-05, -4.9591064453125e-05, 0.0, -4.768367489305092e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -8.70227722771233e-06, -8.463837730232626e-06, -0.2267618179321289, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, 0.0, -1.3947486877441406e-05, 0.0, -0.00010883808135986328, 0.0, -1.9073486328125e-05, -0.0001087188720703125, 0.0, -3.24249267578125e-05, -1.1920928244535389e-07, -2.09808349609375e-05, 0.0, -4.565715789794922e-05, -4.124616680201143e-05, -0.0058746337890625, -3.24249267578125e-05, -0.0023956298828125, -0.0023212432861328125, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, 0.0, -8.022785186767578e-05, -2.861018856492592e-06, -5.245207830739673e-06, -2.3841855067985307e-07, -0.03956007957458496, -4.4226457248441875e-05, -1.33514404296875e-05, -0.000629425048828125, -0.004390716552734375, -8.58306884765625e-05, -5.7220458984375e-06, -0.0024280548095703125, 0.0, -0.00014400482177734375, -2.3841855067985307e-07, -0.009004592895507812, -1.1920928244535389e-07, -0.00795745849609375, -0.0017042160034179688, -0.0001544952392578125, -9.34600830078125e-05, -3.814697265625e-06, -0.0012664794921875, -1.9073486328125e-06, -0.0074405670166015625, 0.0, -0.0009337663650512695, -7.152555099310121e-07, -1.0848044439626392e-05, -3.933906555175781e-06, -0.01943373680114746, -2.741813204920618e-06, -0.0017099380493164062, -3.814697265625e-06, -5.53131103515625e-05, -1.1920928244535389e-07, -0.009892463684082031, -5.7220458984375e-06, -9.1552734375e-05, -1.9073486328125e-06, -0.000278472900390625, -0.033684730529785156, 0.0, -0.0002384185791015625, 0.0, -1.9073486328125e-05, -1.1920928244535389e-07, -0.0001316070556640625, -7.987022399902344e-06, -0.02229595184326172, -2.3841855067985307e-07, -0.00041961669921875, -0.00095367431640625, -6.687641143798828e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Ancestral", "Healing", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ancestral", " ", "Healing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n"}, {"score": -4.9865906348587075, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AncestralHealing", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.940656698541716e-06, -4.6491513785440475e-06, -8.344646857949556e-07, -4.76837158203125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.000156998576130718, -1.9669481844175607e-05, 0.0, -2.09808349609375e-05, -0.000194549560546875, 0.0, -1.7762085917638615e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00045670827967114747, -2.0265579223632812e-06, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0069122314453125, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -9.298297300119884e-06, -1.3709068298339844e-05, -3.933906555175781e-06, 0.0, -0.007822036743164062, -1.52587890625e-05, -1.33514404296875e-05, -4.410734163684538e-06, -0.00013196468353271484, -4.017311584902927e-05, -9.5367431640625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00010656761878635734, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.05420398712158203, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -5.1856040954589844e-05, -9.298280929215252e-06, -0.0114593505859375, 0.0, -0.000728607177734375, -7.62939453125e-06, 0.0, -0.0014367103576660156, -1.1920928244535389e-07, -0.0001811981201171875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -9.34600830078125e-05, -1.71661376953125e-05, -1.919269561767578e-05, -4.76837158203125e-05, -0.0007959604263305664, -9.393692016601562e-05, -0.00067138671875, -2.288818359375e-05, -9.763240814208984e-05, 0.0, -3.4332275390625e-05, -4.76837158203125e-05, 0.0, -4.768367489305092e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -8.70227722771233e-06, -8.463837730232626e-06, -1.9520721435546875, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -8.392333984375e-05, 0.0, -4.291534423828125e-06, 0.0, -7.2479248046875e-05, 0.0, -1.71661376953125e-05, -0.0001049041748046875, 0.0, -4.38690185546875e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.230571746826172e-05, -3.5404991649556905e-05, -0.005767822265625, -1.33514404296875e-05, -0.0002918243408203125, -0.0001430511474609375, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.017353057861328e-05, -2.861018856492592e-06, -5.245207830739673e-06, -5.960462772236497e-07, -0.04905664920806885, -3.254408875363879e-05, -7.62939453125e-06, -0.0005397796630859375, -0.00354766845703125, -8.58306884765625e-05, -7.62939453125e-06, -0.0023212432861328125, 0.0, -0.000156402587890625, -2.3841855067985307e-07, -0.010092496871948242, -1.1920928244535389e-07, -0.008768081665039062, -0.0017271041870117188, -0.000156402587890625, -9.34600830078125e-05, -3.814697265625e-06, -0.0013408660888671875, -1.9073486328125e-06, -0.006988525390625, 0.0, -0.0009576082229614258, -7.152555099310121e-07, -1.0848044439626392e-05, -3.933906555175781e-06, -0.01943182945251465, -2.741813204920618e-06, -0.00177764892578125, -3.814697265625e-06, -5.7220458984375e-05, -1.1920928244535389e-07, -0.19447994232177734, -3.814697265625e-06, -0.0001201629638671875, -1.52587890625e-05, -0.001033782958984375, -0.16150856018066406, -1.9073486328125e-06, -0.0002651214599609375, 0.0, -2.09808349609375e-05, -1.1920928244535389e-07, -0.0001678466796875, -4.172325134277344e-06, -0.022545814514160156, -1.1920928244535389e-07, -0.000446319580078125, -0.0011844635009765625, -5.924701690673828e-05, -1.9073486328125e-06, -1.5086355209350586, -4.38690185546875e-05, -1.1444091796875e-05, -0.47968101501464844, -7.2479248046875e-05, -0.37674808502197266, -9.5367431640625e-06, -0.00017547607421875, 0.0, -2.86102294921875e-05, -1.1920928244535389e-07, -9.34600830078125e-05, -2.0265579223632812e-06, -0.08541584014892578, -2.3841855067985307e-07, -0.0010404586791992188, -4.9591064453125e-05, -5.733966827392578e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Ancestral", "Healing", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ancestral", " ", "Healing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n        self.target.taunt = True\n"}, {"score": -5.035352956109577, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AncestralHealing", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.940656698541716e-06, -4.6491513785440475e-06, -8.344646857949556e-07, -4.76837158203125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.000156998576130718, -1.9669481844175607e-05, 0.0, -2.09808349609375e-05, -0.000194549560546875, 0.0, -1.7762085917638615e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00045670827967114747, -2.0265579223632812e-06, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0069122314453125, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -9.298297300119884e-06, -1.3709068298339844e-05, -3.933906555175781e-06, 0.0, -0.007822036743164062, -1.52587890625e-05, -1.33514404296875e-05, -4.410734163684538e-06, -0.00013196468353271484, -4.017311584902927e-05, -9.5367431640625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00010656761878635734, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.05420398712158203, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -5.1856040954589844e-05, -9.298280929215252e-06, -0.0114593505859375, 0.0, -0.000728607177734375, -7.62939453125e-06, 0.0, -0.0014367103576660156, -1.1920928244535389e-07, -0.0001811981201171875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -9.34600830078125e-05, -1.71661376953125e-05, -1.919269561767578e-05, -4.76837158203125e-05, -0.0007959604263305664, -9.393692016601562e-05, -0.00067138671875, -2.288818359375e-05, -9.763240814208984e-05, 0.0, -3.4332275390625e-05, -4.76837158203125e-05, 0.0, -4.768367489305092e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -8.70227722771233e-06, -8.463837730232626e-06, -0.22623825073242188, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, 0.0, -1.3947486877441406e-05, 0.0, -0.00011265277862548828, 0.0, -1.9073486328125e-05, -0.0001087188720703125, 0.0, -3.24249267578125e-05, -1.1920928244535389e-07, -2.09808349609375e-05, 0.0, -4.565715789794922e-05, -4.136537609156221e-05, -0.005889892578125, -3.24249267578125e-05, -0.0023937225341796875, -0.002323150634765625, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, 0.0, -8.022785186767578e-05, -2.861018856492592e-06, -5.245207830739673e-06, -2.3841855067985307e-07, -0.03955721855163574, -4.4226457248441875e-05, -1.33514404296875e-05, -0.000629425048828125, -0.004390716552734375, -8.58306884765625e-05, -5.7220458984375e-06, -0.002429962158203125, 0.0, -0.00014400482177734375, -2.3841855067985307e-07, -0.009006500244140625, -1.1920928244535389e-07, -0.00795745849609375, -0.0017042160034179688, -0.0001544952392578125, -9.34600830078125e-05, -3.814697265625e-06, -0.0012645721435546875, -1.9073486328125e-06, -0.007442474365234375, 0.0, -0.0009337663650512695, -7.152555099310121e-07, -1.0848044439626392e-05, -3.933906555175781e-06, -4.520348072052002, 0.0, -0.027421951293945312, 0.0, -1.9073486328125e-05, 0.0, -0.016170501708984375, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002593994140625, -0.048645973205566406, 0.0, -0.0002079010009765625, 0.0, -1.9073486328125e-05, -1.1920928244535389e-07, -0.0001201629638671875, -9.894371032714844e-06, -0.020626068115234375, -2.3841855067985307e-07, -0.000408172607421875, -0.001247406005859375, -7.259845733642578e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Ancestral", "Healing", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ancestral", " ", "Healing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_attack()), self)\n        self.target.taunt = True\n"}, {"score": -5.121311436944104, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "divine_shield", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AncestralHealing", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.940656698541716e-06, -4.6491513785440475e-06, -8.344646857949556e-07, -4.76837158203125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.000156998576130718, -1.9669481844175607e-05, 0.0, -2.09808349609375e-05, -0.000194549560546875, 0.0, -1.7762085917638615e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00045670827967114747, -2.0265579223632812e-06, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0069122314453125, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -9.298297300119884e-06, -1.3709068298339844e-05, -3.933906555175781e-06, 0.0, -0.007822036743164062, -1.52587890625e-05, -1.33514404296875e-05, -4.410734163684538e-06, -0.00013196468353271484, -4.017311584902927e-05, -9.5367431640625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00010656761878635734, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.05420398712158203, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -5.1856040954589844e-05, -9.298280929215252e-06, -0.0114593505859375, 0.0, -0.000728607177734375, -7.62939453125e-06, 0.0, -0.0014367103576660156, -1.1920928244535389e-07, -0.0001811981201171875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -9.34600830078125e-05, -1.71661376953125e-05, -1.919269561767578e-05, -4.76837158203125e-05, -0.0007959604263305664, -9.393692016601562e-05, -0.00067138671875, -2.288818359375e-05, -9.763240814208984e-05, 0.0, -3.4332275390625e-05, -4.76837158203125e-05, 0.0, -4.768367489305092e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -8.70227722771233e-06, -8.463837730232626e-06, -0.22623825073242188, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, 0.0, -1.3947486877441406e-05, 0.0, -0.00011265277862548828, 0.0, -1.9073486328125e-05, -0.0001087188720703125, 0.0, -3.24249267578125e-05, -1.1920928244535389e-07, -2.09808349609375e-05, 0.0, -4.565715789794922e-05, -4.136537609156221e-05, -0.005889892578125, -3.24249267578125e-05, -0.0023937225341796875, -0.002323150634765625, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, 0.0, -8.022785186767578e-05, -2.861018856492592e-06, -5.245207830739673e-06, -2.3841855067985307e-07, -0.03955721855163574, -4.4226457248441875e-05, -1.33514404296875e-05, -0.000629425048828125, -0.004390716552734375, -8.58306884765625e-05, -5.7220458984375e-06, -0.002429962158203125, 0.0, -0.00014400482177734375, -2.3841855067985307e-07, -0.009006500244140625, -1.1920928244535389e-07, -0.00795745849609375, -0.0017042160034179688, -0.0001544952392578125, -9.34600830078125e-05, -3.814697265625e-06, -0.0012645721435546875, -1.9073486328125e-06, -0.007442474365234375, 0.0, -0.0009337663650512695, -7.152555099310121e-07, -1.0848044439626392e-05, -3.933906555175781e-06, -0.019434690475463867, -2.741813204920618e-06, -0.0017099380493164062, -3.814697265625e-06, -5.53131103515625e-05, -1.1920928244535389e-07, -0.009897232055664062, -5.7220458984375e-06, -9.1552734375e-05, -1.9073486328125e-06, -0.000278472900390625, -0.033652305603027344, 0.0, -0.0002384185791015625, 0.0, -1.9073486328125e-05, -1.1920928244535389e-07, -0.0001316070556640625, -7.987022399902344e-06, -4.636837005615234, 0.0, -0.001354217529296875, -0.01778411865234375, -4.971027374267578e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Ancestral", "Healing", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ancestral", " ", "Healing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.divine_shield = True\n"}, {"score": -5.248469959734713, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AncestralHealing", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.940656698541716e-06, -4.6491513785440475e-06, -8.344646857949556e-07, -4.76837158203125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.000156998576130718, -1.9669481844175607e-05, 0.0, -2.09808349609375e-05, -0.000194549560546875, 0.0, -1.7762085917638615e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00045670827967114747, -2.0265579223632812e-06, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0069122314453125, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -9.298297300119884e-06, -1.3709068298339844e-05, -3.933906555175781e-06, 0.0, -0.007822036743164062, -1.52587890625e-05, -1.33514404296875e-05, -4.410734163684538e-06, -0.00013196468353271484, -4.017311584902927e-05, -9.5367431640625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00010656761878635734, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.05420398712158203, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -5.1856040954589844e-05, -9.298280929215252e-06, -0.0114593505859375, 0.0, -0.000728607177734375, -7.62939453125e-06, 0.0, -0.0014367103576660156, -1.1920928244535389e-07, -0.0001811981201171875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -9.34600830078125e-05, -1.71661376953125e-05, -1.919269561767578e-05, -4.76837158203125e-05, -0.0007959604263305664, -9.393692016601562e-05, -0.00067138671875, -2.288818359375e-05, -9.763240814208984e-05, 0.0, -3.4332275390625e-05, -4.76837158203125e-05, 0.0, -4.768367489305092e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -8.70227722771233e-06, -8.463837730232626e-06, -0.22623825073242188, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, 0.0, -1.3947486877441406e-05, 0.0, -0.00011265277862548828, 0.0, -1.9073486328125e-05, -0.0001087188720703125, 0.0, -3.24249267578125e-05, -1.1920928244535389e-07, -2.09808349609375e-05, 0.0, -4.565715789794922e-05, -4.136537609156221e-05, -0.005889892578125, -3.24249267578125e-05, -0.0023937225341796875, -0.002323150634765625, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, 0.0, -8.022785186767578e-05, -2.861018856492592e-06, -5.245207830739673e-06, -2.3841855067985307e-07, -3.72715163230896, -1.1920928244535389e-07, -0.019313812255859375, -0.12137985229492188, 0.0, -0.0005044937133789062, -2.3841855067985307e-07, -0.9096965789794922, -3.814697265625e-06, -0.00020599365234375, -0.0003528594970703125, 0.0, 0.0, -3.4332275390625e-05, -5.7220458984375e-06, -0.0010967254638671875, 0.0, -0.0017826557159423828, -8.344646857949556e-07, -5.841255187988281e-06, -8.344646857949556e-07, -0.06508076190948486, -8.34464663057588e-06, -8.0108642578125e-05, -0.0003261566162109375, -0.013274192810058594, -9.72747802734375e-05, -3.814697265625e-06, -0.005931854248046875, 0.0, -0.00010585784912109375, -2.3841855067985307e-07, -0.01121675968170166, -1.1920928244535389e-07, -0.013317108154296875, -0.0015964508056640625, -0.0001678466796875, -9.918212890625e-05, -3.814697265625e-06, -0.001438140869140625, -1.9073486328125e-06, -0.00774383544921875, 0.0, -0.0015794038772583008, -8.344646857949556e-07, -1.2755393072438892e-05, -3.933906555175781e-06, -0.019224047660827637, -2.861022494471399e-06, -0.0016880035400390625, -3.814697265625e-06, -4.76837158203125e-05, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Ancestral", "Healing", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ancestral", " ", "Healing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n"}, {"score": -5.722063935195905, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"hole2": 1, "_type": "Template32", "hole0": "Buff", "hole1": "SpellDamage"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AncestralHealing", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.940656698541716e-06, -4.6491513785440475e-06, -8.344646857949556e-07, -4.76837158203125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.000156998576130718, -1.9669481844175607e-05, 0.0, -2.09808349609375e-05, -0.000194549560546875, 0.0, -1.7762085917638615e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00045670827967114747, -2.0265579223632812e-06, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0069122314453125, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -9.298297300119884e-06, -1.3709068298339844e-05, -3.933906555175781e-06, 0.0, -0.007822036743164062, -1.52587890625e-05, -1.33514404296875e-05, -4.410734163684538e-06, -0.00013196468353271484, -4.017311584902927e-05, -9.5367431640625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00010656761878635734, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.05420398712158203, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -5.1856040954589844e-05, -9.298280929215252e-06, -0.0114593505859375, 0.0, -0.000728607177734375, -7.62939453125e-06, 0.0, -0.0014367103576660156, -1.1920928244535389e-07, -0.0001811981201171875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -9.34600830078125e-05, -1.71661376953125e-05, -1.919269561767578e-05, -4.76837158203125e-05, -0.0007959604263305664, -9.393692016601562e-05, -0.00067138671875, -2.288818359375e-05, -9.763240814208984e-05, 0.0, -3.4332275390625e-05, -4.76837158203125e-05, 0.0, -4.768367489305092e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -8.70227722771233e-06, -8.463837730232626e-06, -1.9520721435546875, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -8.392333984375e-05, 0.0, -4.291534423828125e-06, 0.0, -7.2479248046875e-05, 0.0, -1.71661376953125e-05, -0.0001049041748046875, 0.0, -4.38690185546875e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.230571746826172e-05, -3.5404991649556905e-05, -0.005767822265625, -1.33514404296875e-05, -0.0002918243408203125, -0.0001430511474609375, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.017353057861328e-05, -2.861018856492592e-06, -5.245207830739673e-06, -5.960462772236497e-07, -0.04905664920806885, -3.254408875363879e-05, -7.62939453125e-06, -0.0005397796630859375, -0.00354766845703125, -8.58306884765625e-05, -7.62939453125e-06, -0.0023212432861328125, 0.0, -0.000156402587890625, -2.3841855067985307e-07, -0.010092496871948242, -1.1920928244535389e-07, -0.008768081665039062, -0.0017271041870117188, -0.000156402587890625, -9.34600830078125e-05, -3.814697265625e-06, -0.0013408660888671875, -1.9073486328125e-06, -0.006988525390625, 0.0, -0.0009576082229614258, -7.152555099310121e-07, -1.0848044439626392e-05, -3.933906555175781e-06, -0.01943182945251465, -2.741813204920618e-06, -0.00177764892578125, -3.814697265625e-06, -5.7220458984375e-05, -1.1920928244535389e-07, -0.19447994232177734, -3.814697265625e-06, -0.0001201629638671875, -1.52587890625e-05, -0.001033782958984375, -0.16150856018066406, -1.9073486328125e-06, -0.0002651214599609375, 0.0, -2.09808349609375e-05, -1.1920928244535389e-07, -0.0001678466796875, -4.172325134277344e-06, -0.022545814514160156, -1.1920928244535389e-07, -0.000446319580078125, -0.0011844635009765625, -5.924701690673828e-05, -1.9073486328125e-06, -1.5902938842773438, 0.0, -6.29425048828125e-05, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -5.14984130859375e-05, -7.62939453125e-06, -0.000156402587890625, -0.0003833770751953125, -7.510185241699219e-05, -9.536738616588991e-07, -1.7404556274414062e-05, -2.0265579223632812e-06, -1.0598554611206055, -1.9073486328125e-06, -0.016653060913085938, -0.25803375244140625, -0.0045166015625, -0.0007940039504319429, -4.0411723603028804e-05, -0.012579917907714844, -0.030893325805664062, -3.814697265625e-06, -0.21309585869312286, 0.0], "choice_history": [55, 124, 221, 63, 103, "Ancestral", "Healing", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ancestral", " ", "Healing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 44, 168, "Buff", "<EOS>", "Spell", "Damage", "<EOS>", "1", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n        self.target.add_buff(Buff(SpellDamage(1)))\n"}, {"score": -5.722579967054671, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AncestralHealing", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.940656698541716e-06, -4.6491513785440475e-06, -8.344646857949556e-07, -4.76837158203125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.000156998576130718, -1.9669481844175607e-05, 0.0, -2.09808349609375e-05, -0.000194549560546875, 0.0, -1.7762085917638615e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00045670827967114747, -2.0265579223632812e-06, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0069122314453125, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -9.298297300119884e-06, -1.3709068298339844e-05, -3.933906555175781e-06, 0.0, -0.007822036743164062, -1.52587890625e-05, -1.33514404296875e-05, -4.410734163684538e-06, -0.00013196468353271484, -4.017311584902927e-05, -9.5367431640625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00010656761878635734, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.05420398712158203, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -5.1856040954589844e-05, -9.298280929215252e-06, -0.0114593505859375, 0.0, -0.000728607177734375, -7.62939453125e-06, 0.0, -0.0014367103576660156, -1.1920928244535389e-07, -0.0001811981201171875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -9.34600830078125e-05, -1.71661376953125e-05, -1.919269561767578e-05, -4.76837158203125e-05, -0.0007959604263305664, -9.393692016601562e-05, -0.00067138671875, -2.288818359375e-05, -9.763240814208984e-05, 0.0, -3.4332275390625e-05, -4.76837158203125e-05, 0.0, -4.768367489305092e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -8.70227722771233e-06, -8.463837730232626e-06, -1.9520721435546875, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -8.392333984375e-05, 0.0, -4.291534423828125e-06, 0.0, -7.2479248046875e-05, 0.0, -1.71661376953125e-05, -0.0001049041748046875, 0.0, -4.38690185546875e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.230571746826172e-05, -3.5404991649556905e-05, -0.005767822265625, -1.33514404296875e-05, -0.0002918243408203125, -0.0001430511474609375, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.017353057861328e-05, -2.861018856492592e-06, -5.245207830739673e-06, -5.960462772236497e-07, -0.04905664920806885, -3.254408875363879e-05, -7.62939453125e-06, -0.0005397796630859375, -0.00354766845703125, -8.58306884765625e-05, -7.62939453125e-06, -0.0023212432861328125, 0.0, -0.000156402587890625, -2.3841855067985307e-07, -0.010092496871948242, -1.1920928244535389e-07, -0.008768081665039062, -0.0017271041870117188, -0.000156402587890625, -9.34600830078125e-05, -3.814697265625e-06, -0.0013408660888671875, -1.9073486328125e-06, -0.006988525390625, 0.0, -0.0009576082229614258, -7.152555099310121e-07, -1.0848044439626392e-05, -3.933906555175781e-06, -0.01943182945251465, -2.741813204920618e-06, -0.00177764892578125, -3.814697265625e-06, -5.7220458984375e-05, -1.1920928244535389e-07, -1.7863168716430664, -1.9073486328125e-05, -0.0004596710205078125, -7.43865966796875e-05, -1.9073486328125e-06, 0.0, -0.000339508056640625, -1.9073486328125e-06, -3.0517578125e-05, -2.47955322265625e-05, -6.520748138427734e-05, -1.0728830375228426e-06, -1.5616416931152344e-05, -3.576278118089249e-07, -1.247468113899231, -3.3378591979271732e-06, -1.33514404296875e-05, -0.0002346038818359375, -0.008604049682617188, -7.43865966796875e-05, -5.7220458984375e-06, -0.04029273986816406, 0.0, -0.00045680999755859375, -2.3841855067985307e-07, -0.011102795600891113, -1.1920928244535389e-07, -0.0074825286865234375, -0.0019016265869140625, -0.0001983642578125, -8.58306884765625e-05, -3.814697265625e-06, -0.0014171600341796875, -1.9073486328125e-06, -0.0066089630126953125, 0.0, -0.0011178255081176758, -7.152555099310121e-07, -1.060962586052483e-05, -3.933906555175781e-06, -0.01944899559020996, -2.861022494471399e-06, -0.002105712890625, -3.814697265625e-06, -6.103515625e-05, -1.1920928244535389e-07, -0.23611736297607422, -3.814697265625e-06, -0.0001239776611328125, -1.52587890625e-05, -0.001064300537109375, -0.17181396484375, -1.9073486328125e-06, -0.0002651214599609375, 0.0, -2.09808349609375e-05, -1.1920928244535389e-07, -0.000171661376953125, -6.079673767089844e-06, -0.022542953491210938, -1.1920928244535389e-07, -0.000453948974609375, -0.0011882781982421875, -5.924701690673828e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Ancestral", "Healing", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ancestral", " ", "Healing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n"}, {"score": -5.969430099999585, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AncestralHealing", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.940656698541716e-06, -4.6491513785440475e-06, -8.344646857949556e-07, -4.76837158203125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.000156998576130718, -1.9669481844175607e-05, 0.0, -2.09808349609375e-05, -0.000194549560546875, 0.0, -1.7762085917638615e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00045670827967114747, -2.0265579223632812e-06, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0069122314453125, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -9.298297300119884e-06, -1.3709068298339844e-05, -3.933906555175781e-06, 0.0, -0.007822036743164062, -1.52587890625e-05, -1.33514404296875e-05, -4.410734163684538e-06, -0.00013196468353271484, -4.017311584902927e-05, -9.5367431640625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00010656761878635734, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.05420398712158203, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -5.1856040954589844e-05, -9.298280929215252e-06, -0.0114593505859375, 0.0, -0.000728607177734375, -7.62939453125e-06, 0.0, -0.0014367103576660156, -1.1920928244535389e-07, -0.0001811981201171875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -9.34600830078125e-05, -1.71661376953125e-05, -1.919269561767578e-05, -4.76837158203125e-05, -0.0007959604263305664, -9.393692016601562e-05, -0.00067138671875, -2.288818359375e-05, -9.763240814208984e-05, 0.0, -3.4332275390625e-05, -4.76837158203125e-05, 0.0, -4.768367489305092e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -8.70227722771233e-06, -8.463837730232626e-06, -1.9520721435546875, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -8.392333984375e-05, 0.0, -4.291534423828125e-06, 0.0, -7.2479248046875e-05, 0.0, -1.71661376953125e-05, -0.0001049041748046875, 0.0, -4.38690185546875e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.230571746826172e-05, -3.5404991649556905e-05, -0.005767822265625, -1.33514404296875e-05, -0.0002918243408203125, -0.0001430511474609375, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.017353057861328e-05, -2.861018856492592e-06, -5.245207830739673e-06, -5.960462772236497e-07, -0.04905664920806885, -3.254408875363879e-05, -7.62939453125e-06, -0.0005397796630859375, -0.00354766845703125, -8.58306884765625e-05, -7.62939453125e-06, -0.0023212432861328125, 0.0, -0.000156402587890625, -2.3841855067985307e-07, -0.010092496871948242, -1.1920928244535389e-07, -0.008768081665039062, -0.0017271041870117188, -0.000156402587890625, -9.34600830078125e-05, -3.814697265625e-06, -0.0013408660888671875, -1.9073486328125e-06, -0.006988525390625, 0.0, -0.0009576082229614258, -7.152555099310121e-07, -1.0848044439626392e-05, -3.933906555175781e-06, -0.01943182945251465, -2.741813204920618e-06, -0.00177764892578125, -3.814697265625e-06, -5.7220458984375e-05, -1.1920928244535389e-07, -0.19447994232177734, -3.814697265625e-06, -0.0001201629638671875, -1.52587890625e-05, -0.001033782958984375, -0.16150856018066406, -1.9073486328125e-06, -0.0002651214599609375, 0.0, -2.09808349609375e-05, -1.1920928244535389e-07, -0.0001678466796875, -4.172325134277344e-06, -0.022545814514160156, -1.1920928244535389e-07, -0.000446319580078125, -0.0011844635009765625, -5.924701690673828e-05, -1.9073486328125e-06, -1.5902938842773438, 0.0, -6.29425048828125e-05, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -5.14984130859375e-05, -7.62939453125e-06, -0.000156402587890625, -0.0003833770751953125, -7.510185241699219e-05, -9.536738616588991e-07, -1.7404556274414062e-05, -2.0265579223632812e-06, -1.5066814422607422, 0.0, -0.010102272033691406, -7.43865966796875e-05, -2.47955322265625e-05, -0.32695138454437256, 0.0], "choice_history": [55, 124, 221, 63, 103, "Ancestral", "Healing", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ancestral", " ", "Healing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n        self.target.increase_health(4)\n"}, {"score": -6.230277906916044, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}], "test": {"comparators": [{"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "ops": [{"_type": "IsNot"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AncestralHealing", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.940656698541716e-06, -4.6491513785440475e-06, -8.344646857949556e-07, -4.76837158203125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.000156998576130718, -1.9669481844175607e-05, 0.0, -2.09808349609375e-05, -0.000194549560546875, 0.0, -1.7762085917638615e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00045670827967114747, -2.0265579223632812e-06, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0069122314453125, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -9.298297300119884e-06, -1.3709068298339844e-05, -3.933906555175781e-06, 0.0, -0.007822036743164062, -1.52587890625e-05, -1.33514404296875e-05, -4.410734163684538e-06, -0.00013196468353271484, -4.017311584902927e-05, -9.5367431640625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00010656761878635734, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.05420398712158203, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -5.1856040954589844e-05, -9.298280929215252e-06, -0.0114593505859375, 0.0, -0.000728607177734375, -7.62939453125e-06, 0.0, -0.0014367103576660156, -1.1920928244535389e-07, -0.0001811981201171875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -9.34600830078125e-05, -1.71661376953125e-05, -1.919269561767578e-05, -4.76837158203125e-05, -0.0007959604263305664, -9.393692016601562e-05, -0.00067138671875, -2.288818359375e-05, -9.763240814208984e-05, 0.0, -3.4332275390625e-05, -4.76837158203125e-05, 0.0, -4.768367489305092e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -8.70227722771233e-06, -8.463837730232626e-06, -1.9520721435546875, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -8.392333984375e-05, 0.0, -4.291534423828125e-06, 0.0, -7.2479248046875e-05, 0.0, -1.71661376953125e-05, -0.0001049041748046875, 0.0, -4.38690185546875e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.230571746826172e-05, -3.5404991649556905e-05, -0.005767822265625, -1.33514404296875e-05, -0.0002918243408203125, -0.0001430511474609375, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.017353057861328e-05, -2.861018856492592e-06, -5.245207830739673e-06, -5.960462772236497e-07, -0.04905664920806885, -3.254408875363879e-05, -7.62939453125e-06, -0.0005397796630859375, -0.00354766845703125, -8.58306884765625e-05, -7.62939453125e-06, -0.0023212432861328125, 0.0, -0.000156402587890625, -2.3841855067985307e-07, -0.010092496871948242, -1.1920928244535389e-07, -0.008768081665039062, -0.0017271041870117188, -0.000156402587890625, -9.34600830078125e-05, -3.814697265625e-06, -0.0013408660888671875, -1.9073486328125e-06, -0.006988525390625, 0.0, -0.0009576082229614258, -7.152555099310121e-07, -1.0848044439626392e-05, -3.933906555175781e-06, -0.01943182945251465, -2.741813204920618e-06, -0.00177764892578125, -3.814697265625e-06, -5.7220458984375e-05, -1.1920928244535389e-07, -0.19447994232177734, -3.814697265625e-06, -0.0001201629638671875, -1.52587890625e-05, -0.001033782958984375, -0.16150856018066406, -1.9073486328125e-06, -0.0002651214599609375, 0.0, -2.09808349609375e-05, -1.1920928244535389e-07, -0.0001678466796875, -4.172325134277344e-06, -0.022545814514160156, -1.1920928244535389e-07, -0.000446319580078125, -0.0011844635009765625, -5.924701690673828e-05, -1.9073486328125e-06, -0.6713008880615234, -0.0210113525390625, -0.0011157989501953125, -0.0002155303955078125, -0.6843042373657227, 0.0, -0.0003719329833984375, 0.0, -0.00080108642578125, 0.0, -0.00010132789611816406, -3.933906555175781e-06, -9.5367431640625e-06, -0.5592174530029297, -0.0006561279296875, -0.3862190246582031, -5.7220458984375e-06, -0.012258529663085938, 0.0, -0.07222843170166016, 0.0, -0.0013265609741210938, -6.198873961693607e-06, -0.0011997222900390625, -0.004485130310058594, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.19426250457763672, 0.0, -0.30724549293518066, -4.768367489305092e-06, -0.2357579469680786, -1.9073486328125e-06, -7.62939453125e-06, -0.001434326171875, -0.4619131088256836, -7.2479248046875e-05, 0.0, -0.022932052612304688, 0.0, -0.00027561187744140625, -2.3841855067985307e-07, -0.014352917671203613, -1.1920928244535389e-07, -0.004825592041015625, -0.0017118453979492188, -0.0001678466796875, -8.58306884765625e-05, -3.814697265625e-06, -0.003711700439453125, -1.9073486328125e-06, -0.008501052856445312, 0.0, -0.001156926155090332, -5.960462772236497e-07, -1.251697449333733e-05, -3.933906555175781e-06, -0.01854097843170166, -2.622604142743512e-06, -0.001834869384765625, -1.9073486328125e-06, -7.152557373046875e-05, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Ancestral", "Healing", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ancestral", " ", "Healing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n        if self.target is not self.target:\n            minion.damage(player.effective_heal_power(self.target.\n                calculate_max_health()), self)\n"}, {"score": -6.281490292226778, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "NameConstant", "value": "Null"}]}}], "test": {"comparators": [{"_type": "Num", "n": 0}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AncestralHealing", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.940656698541716e-06, -4.6491513785440475e-06, -8.344646857949556e-07, -4.76837158203125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.000156998576130718, -1.9669481844175607e-05, 0.0, -2.09808349609375e-05, -0.000194549560546875, 0.0, -1.7762085917638615e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00045670827967114747, -2.0265579223632812e-06, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0069122314453125, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -9.298297300119884e-06, -1.3709068298339844e-05, -3.933906555175781e-06, 0.0, -0.007822036743164062, -1.52587890625e-05, -1.33514404296875e-05, -4.410734163684538e-06, -0.00013196468353271484, -4.017311584902927e-05, -9.5367431640625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00010656761878635734, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.05420398712158203, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -5.1856040954589844e-05, -9.298280929215252e-06, -0.0114593505859375, 0.0, -0.000728607177734375, -7.62939453125e-06, 0.0, -0.0014367103576660156, -1.1920928244535389e-07, -0.0001811981201171875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -9.34600830078125e-05, -1.71661376953125e-05, -1.919269561767578e-05, -4.76837158203125e-05, -0.0007959604263305664, -9.393692016601562e-05, -0.00067138671875, -2.288818359375e-05, -9.763240814208984e-05, 0.0, -3.4332275390625e-05, -4.76837158203125e-05, 0.0, -4.768367489305092e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -8.70227722771233e-06, -8.463837730232626e-06, -1.9520721435546875, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -8.392333984375e-05, 0.0, -4.291534423828125e-06, 0.0, -7.2479248046875e-05, 0.0, -1.71661376953125e-05, -0.0001049041748046875, 0.0, -4.38690185546875e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.230571746826172e-05, -3.5404991649556905e-05, -0.005767822265625, -1.33514404296875e-05, -0.0002918243408203125, -0.0001430511474609375, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.017353057861328e-05, -2.861018856492592e-06, -5.245207830739673e-06, -5.960462772236497e-07, -0.04905664920806885, -3.254408875363879e-05, -7.62939453125e-06, -0.0005397796630859375, -0.00354766845703125, -8.58306884765625e-05, -7.62939453125e-06, -0.0023212432861328125, 0.0, -0.000156402587890625, -2.3841855067985307e-07, -0.010092496871948242, -1.1920928244535389e-07, -0.008768081665039062, -0.0017271041870117188, -0.000156402587890625, -9.34600830078125e-05, -3.814697265625e-06, -0.0013408660888671875, -1.9073486328125e-06, -0.006988525390625, 0.0, -0.0009576082229614258, -7.152555099310121e-07, -1.0848044439626392e-05, -3.933906555175781e-06, -0.01943182945251465, -2.741813204920618e-06, -0.00177764892578125, -3.814697265625e-06, -5.7220458984375e-05, -1.1920928244535389e-07, -0.19447994232177734, -3.814697265625e-06, -0.0001201629638671875, -1.52587890625e-05, -0.001033782958984375, -0.16150856018066406, -1.9073486328125e-06, -0.0002651214599609375, 0.0, -2.09808349609375e-05, -1.1920928244535389e-07, -0.0001678466796875, -4.172325134277344e-06, -0.022545814514160156, -1.1920928244535389e-07, -0.000446319580078125, -0.0011844635009765625, -5.924701690673828e-05, -1.9073486328125e-06, -0.6713008880615234, -0.0210113525390625, -0.0011157989501953125, -0.0002155303955078125, -0.6843042373657227, 0.0, -0.0003719329833984375, 0.0, -0.00080108642578125, 0.0, -0.00010132789611816406, -3.933906555175781e-06, -9.5367431640625e-06, -1.4676132202148438, -5.7220458984375e-06, -0.008209228515625, 0.0, -0.0032664090394973755, 0.0, -0.024560928344726562, -0.02757549285888672, 0.0, -0.00125885009765625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0041942596435546875, -8.96453857421875e-05, -5.53131103515625e-05, -3.814697265625e-06, -0.031587839126586914, -5.960462772236497e-07, -6.139278411865234e-05, -4.768371127283899e-06, -0.7428677082061768, 0.0, -0.011592864990234375, -0.044663429260253906, -6.29425048828125e-05, -4.8995018005371094e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Ancestral", "Healing", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ancestral", " ", "Healing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 2, 208, 39, 130, "0", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 38, 127, "Null", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n        if self.target == 0:\n            self.target.die(Null)\n"}, {"score": -6.731318604015172, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}, {"id": "self", "_type": "Name"}]}}], "test": {"comparators": [{"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "ops": [{"_type": "IsNot"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AncestralHealing", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.940656698541716e-06, -4.6491513785440475e-06, -8.344646857949556e-07, -4.76837158203125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.000156998576130718, -1.9669481844175607e-05, 0.0, -2.09808349609375e-05, -0.000194549560546875, 0.0, -1.7762085917638615e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00045670827967114747, -2.0265579223632812e-06, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0069122314453125, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -9.298297300119884e-06, -1.3709068298339844e-05, -3.933906555175781e-06, 0.0, -0.007822036743164062, -1.52587890625e-05, -1.33514404296875e-05, -4.410734163684538e-06, -0.00013196468353271484, -4.017311584902927e-05, -9.5367431640625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00010656761878635734, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.05420398712158203, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -5.1856040954589844e-05, -9.298280929215252e-06, -0.0114593505859375, 0.0, -0.000728607177734375, -7.62939453125e-06, 0.0, -0.0014367103576660156, -1.1920928244535389e-07, -0.0001811981201171875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -9.34600830078125e-05, -1.71661376953125e-05, -1.919269561767578e-05, -4.76837158203125e-05, -0.0007959604263305664, -9.393692016601562e-05, -0.00067138671875, -2.288818359375e-05, -9.763240814208984e-05, 0.0, -3.4332275390625e-05, -4.76837158203125e-05, 0.0, -4.768367489305092e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -8.70227722771233e-06, -8.463837730232626e-06, -1.9520721435546875, -2.6702880859375e-05, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -8.392333984375e-05, 0.0, -4.291534423828125e-06, 0.0, -7.2479248046875e-05, 0.0, -1.71661376953125e-05, -0.0001049041748046875, 0.0, -4.38690185546875e-05, -1.1920928244535389e-07, -1.71661376953125e-05, 0.0, -3.230571746826172e-05, -3.5404991649556905e-05, -0.005767822265625, -1.33514404296875e-05, -0.0002918243408203125, -0.0001430511474609375, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.017353057861328e-05, -2.861018856492592e-06, -5.245207830739673e-06, -5.960462772236497e-07, -0.04905664920806885, -3.254408875363879e-05, -7.62939453125e-06, -0.0005397796630859375, -0.00354766845703125, -8.58306884765625e-05, -7.62939453125e-06, -0.0023212432861328125, 0.0, -0.000156402587890625, -2.3841855067985307e-07, -0.010092496871948242, -1.1920928244535389e-07, -0.008768081665039062, -0.0017271041870117188, -0.000156402587890625, -9.34600830078125e-05, -3.814697265625e-06, -0.0013408660888671875, -1.9073486328125e-06, -0.006988525390625, 0.0, -0.0009576082229614258, -7.152555099310121e-07, -1.0848044439626392e-05, -3.933906555175781e-06, -0.01943182945251465, -2.741813204920618e-06, -0.00177764892578125, -3.814697265625e-06, -5.7220458984375e-05, -1.1920928244535389e-07, -0.19447994232177734, -3.814697265625e-06, -0.0001201629638671875, -1.52587890625e-05, -0.001033782958984375, -0.16150856018066406, -1.9073486328125e-06, -0.0002651214599609375, 0.0, -2.09808349609375e-05, -1.1920928244535389e-07, -0.0001678466796875, -4.172325134277344e-06, -0.022545814514160156, -1.1920928244535389e-07, -0.000446319580078125, -0.0011844635009765625, -5.924701690673828e-05, -1.9073486328125e-06, -0.6713008880615234, -0.0210113525390625, -0.0011157989501953125, -0.0002155303955078125, -0.6843042373657227, 0.0, -0.0003719329833984375, 0.0, -0.00080108642578125, 0.0, -0.00010132789611816406, -3.933906555175781e-06, -9.5367431640625e-06, -0.5592174530029297, -0.0006561279296875, -0.3862190246582031, -5.7220458984375e-06, -0.012258529663085938, 0.0, -0.07222843170166016, 0.0, -0.0013265609741210938, -6.198873961693607e-06, -0.0011997222900390625, -0.004485130310058594, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.19426250457763672, 0.0, -0.30724549293518066, -4.768367489305092e-06, -0.2357579469680786, -1.9073486328125e-06, -7.62939453125e-06, -0.001434326171875, -0.9995670318603516, -2.6702880859375e-05, -3.814697265625e-06, -8.20159912109375e-05, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.00041294097900390625, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.03427612781524658, -3.933906555175781e-06, -0.006381988525390625, -1.9073486328125e-06, -0.00022220611572265625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Ancestral", "Healing", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ancestral", " ", "Healing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n        if self.target is not self.target:\n            minion.damage(self.target.calculate_max_health(), self)\n"}, {"score": -23.482553482055664, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -23.4825439453125], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 1}
{"beams": [{"score": -3.712131735732207, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template4", "hole0": "Animal Companion", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}]}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "card", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 7}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}, "hole1": [{"_type": "Lt"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AnimalCompanion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.00019560330838430673, -0.0019712080247700214, -0.0009434557869099081, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00010156629286939278, -6.318092346191406e-06, -1.71661376953125e-05, -0.003154754638671875, -0.002330780029296875, -0.00264739990234375, -1.1444026313256472e-05, -3.814697265625e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.6927573597058654e-05, -3.8146954466355965e-06, -0.020366191864013672, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0007891654968261719, -1.1920928244535389e-07, -6.4849853515625e-05, -0.0001049041748046875, 0.0, -2.861022494471399e-06, 0.0, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, 0.0, -9.655952453613281e-06, -1.0371208190917969e-05, -0.20910358428955078, -0.0004291534423828125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -9.417505680175964e-06, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -0.0001544952392578125, 0.0, 0.0, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -7.748603820800781e-06, -4.5656361180590466e-05, -0.016269683837890625, -1.33514404296875e-05, -0.0001068115234375, -5.91278076171875e-05, 0.0, -0.0017075524665415287, -1.9788545614574105e-05, -0.06723976135253906, -0.0043354034423828125, -0.015641212463378906, -0.000537872314453125, -0.000896453857421875, -0.0001430511474609375, -0.0004444122314453125, -0.0001659393310546875, -0.0002536773681640625, -0.002532958984375, -0.000537872314453125, -0.012041091918945312, -0.0002651214599609375, -0.0409698486328125, 0.0, -0.0005514621734619141, -3.814697265625e-05, -0.0033559799194335938, -0.000102996826171875, -0.0022317166440188885, -6.914138793945312e-05, -0.014428973197937012, -0.00011634825932560489, -1.055777907371521, -0.0006862878799438477, -0.0002536773681640625, -0.000156402587890625, -4.57763671875e-05, -0.0002994537353515625, -3.814697265625e-05, -0.000186920166015625, -0.00153350830078125, -4.9591064453125e-05, -0.03755760192871094, -4.00543212890625e-05, -0.011991500854492188, 0.0, -0.0004482269287109375, -0.000102996826171875, -0.0032262802124023438, -3.814697265625e-05, -0.0028649510350078344, -0.0003421306610107422, -0.012038946151733398, -0.0002572536177467555, -0.8101654648780823, -0.002293229103088379, -0.0002422332763671875, -0.00011444091796875, -7.2479248046875e-05, -0.0003833770751953125, -3.24249267578125e-05, -0.0002574920654296875, -0.00130462646484375, -5.340576171875e-05, -0.022510528564453125, -3.24249267578125e-05, -0.026208877563476562, 0.0, -0.0003814697265625, -8.96453857421875e-05, -0.0044116973876953125, -3.814697265625e-05, -0.002990598091855645, -0.0003192424774169922, -0.012052297592163086, -0.0002324581000721082, -0.8050493001937866, -0.002156972885131836, -0.001239776611328125, -9.34600830078125e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.016298294067382812, -3.099436753473128e-06, -0.0003795623779296875, -0.0001087188720703125, -0.00069427490234375, 0.0, -0.0045146942138671875, 0.0, -0.0059566497802734375, -8.702239938429557e-06, -0.009640691801905632, 0.0, -0.08507919311523438, -0.0009059906005859375, 0.0, -0.009019136428833008, -0.00021455410751514137, -0.0015106201171875, -3.4332275390625e-05, -2.47955322265625e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.0001735687255859375, 0.0, -0.011630058288574219, -2.3841855067985307e-07, -0.007167816162109375, 0.0, -0.000186920166015625, -0.00618743896484375, -1.9073486328125e-06, -0.0048465728759765625, -3.933898824470816e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.05477714538574219, -2.0265579223632812e-06, -0.0009750127792358398, -3.814697265625e-06, -0.000461578369140625, -0.1797027587890625, -0.029013633728027344, 0.0, -0.0008410215377807617, -4.100737351109274e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004055023193359375, 0.0, -0.004444122314453125, -2.2649765014648438e-06, -0.0005487203598022461, -1.9073486328125e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.0003910064697265625, -1.1920928244535389e-07, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, 0.0, -0.012493133544921875, -3.576278118089249e-07, -1.9073486328125e-06, -0.00015306472778320312, -2.6225792680634186e-05, -0.0012054443359375, -0.0011425018310546875, -0.0008697509765625, -0.000743865966796875, -0.0001087188720703125, -0.00125885009765625, -4.1961669921875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -6.747218139935285e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0011806488037109375, 0.0, -0.0001068115234375, -1.3470649719238281e-05, -0.00079512590309605, -1.9073486328125e-06, -0.000164031982421875, -0.00041961669921875, -9.5367431640625e-06, -0.000354766845703125, -3.814697265625e-06, -0.0017063617706298828, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Animal", "Companion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 17, 120, 210, 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 93, 208, 37, 125, "card", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -3.8430569726714268, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template4", "hole0": "Animal Companion", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}]}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "card", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 7}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}, "hole1": [{"_type": "Lt"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AnimalCompanion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.00019560330838430673, -0.0019712080247700214, -0.0009434557869099081, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00010156629286939278, -6.318092346191406e-06, -1.71661376953125e-05, -0.003154754638671875, -0.002330780029296875, -0.00264739990234375, -1.1444026313256472e-05, -3.814697265625e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.6927573597058654e-05, -3.8146954466355965e-06, -0.020366191864013672, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0007891654968261719, -1.1920928244535389e-07, -6.4849853515625e-05, -0.0001049041748046875, 0.0, -2.861022494471399e-06, 0.0, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, 0.0, -9.655952453613281e-06, -1.0371208190917969e-05, -0.20910358428955078, -0.0004291534423828125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -9.417505680175964e-06, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -0.0001544952392578125, 0.0, 0.0, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -7.748603820800781e-06, -4.5656361180590466e-05, -0.016269683837890625, -1.33514404296875e-05, -0.0001068115234375, -5.91278076171875e-05, 0.0, -0.0017075524665415287, -1.9788545614574105e-05, -0.06723976135253906, -0.0043354034423828125, -0.015641212463378906, -0.000537872314453125, -0.000896453857421875, -0.0001430511474609375, -0.0004444122314453125, -0.0001659393310546875, -0.0002536773681640625, -0.002532958984375, -0.000537872314453125, -0.012041091918945312, -0.0002651214599609375, -0.0409698486328125, 0.0, -0.0005514621734619141, -3.814697265625e-05, -0.0033559799194335938, -0.000102996826171875, -0.0022317166440188885, -6.914138793945312e-05, -0.014428973197937012, -0.00011634825932560489, -1.2114375829696655, -1.728534698486328e-05, -0.0027761459350585938, -7.82012939453125e-05, -3.62396240234375e-05, -0.0002288818359375, -4.9591064453125e-05, -0.0002269744873046875, -0.001323699951171875, -6.29425048828125e-05, -0.021654129028320312, -3.814697265625e-05, -0.009351730346679688, 0.0, -0.0003948211669921875, -7.82012939453125e-05, -0.0032320022583007812, -3.62396240234375e-05, -0.002980463672429323, -0.0002753734588623047, -0.01109933853149414, -0.00022375582193490118, -0.8031011819839478, -0.0028200149536132812, -0.00027561187744140625, -0.0001220703125, -7.43865966796875e-05, -0.0003719329833984375, -3.24249267578125e-05, -0.0002498626708984375, -0.0012798309326171875, -5.14984130859375e-05, -0.02127838134765625, -3.0517578125e-05, -0.02631378173828125, 0.0, -0.0003910064697265625, -8.96453857421875e-05, -0.004486083984375, -3.814697265625e-05, -0.0029491132590919733, -0.0003345012664794922, -0.012207746505737305, -0.00023233889078255743, -0.8059654235839844, -0.001973748207092285, -0.001216888427734375, -9.5367431640625e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.016264915466308594, -3.099436753473128e-06, -0.0003833770751953125, -0.0001087188720703125, -0.00069427490234375, 0.0, -0.004520416259765625, 0.0, -0.005959510803222656, -8.702239938429557e-06, -0.009626148268580437, 0.0, -0.08511734008789062, -0.0009069442749023438, 0.0, -0.009020090103149414, -0.00021479248243849725, -0.001514434814453125, -3.4332275390625e-05, -2.47955322265625e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.0001735687255859375, 0.0, -0.011632919311523438, -2.3841855067985307e-07, -0.0071659088134765625, 0.0, -0.000186920166015625, -0.006186485290527344, -1.9073486328125e-06, -0.004845619201660156, -3.933898824470816e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.05476665496826172, -2.0265579223632812e-06, -0.0009750127792358398, -3.814697265625e-06, -0.000461578369140625, -0.1797161102294922, -0.029007911682128906, 0.0, -0.0008410215377807617, -4.100737351109274e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004055023193359375, 0.0, -0.004444122314453125, -2.2649765014648438e-06, -0.0005487203598022461, -1.9073486328125e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.0003910064697265625, -1.1920928244535389e-07, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, 0.0, -0.0124969482421875, -3.576278118089249e-07, -1.9073486328125e-06, -0.00015306472778320312, -2.6225792680634186e-05, -0.0012054443359375, -0.0011425018310546875, -0.0008697509765625, -0.000743865966796875, -0.0001087188720703125, -0.00125885009765625, -4.1961669921875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -6.747218139935285e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0011806488037109375, 0.0, -0.0001068115234375, -1.1563301086425781e-05, -0.0007941722287796438, -1.9073486328125e-06, -0.000164031982421875, -0.00041961669921875, -9.5367431640625e-06, -0.000354766845703125, -3.814697265625e-06, -0.0017063617706298828, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Animal", "Companion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 17, 120, 210, 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 93, 208, 37, 125, "card", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.04641055702438, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template4", "hole0": "Animal Companion", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}]}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "card", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 7}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}, "hole1": [{"_type": "Lt"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AnimalCompanion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.00019560330838430673, -0.0019712080247700214, -0.0009434557869099081, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00010156629286939278, -6.318092346191406e-06, -1.71661376953125e-05, -0.003154754638671875, -0.002330780029296875, -0.00264739990234375, -1.1444026313256472e-05, -3.814697265625e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.6927573597058654e-05, -3.8146954466355965e-06, -0.020366191864013672, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0007891654968261719, -1.1920928244535389e-07, -6.4849853515625e-05, -0.0001049041748046875, 0.0, -2.861022494471399e-06, 0.0, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, 0.0, -9.655952453613281e-06, -1.0371208190917969e-05, -0.20910358428955078, -0.0004291534423828125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -9.417505680175964e-06, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -0.0001544952392578125, 0.0, 0.0, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -7.748603820800781e-06, -4.5656361180590466e-05, -0.016269683837890625, -1.33514404296875e-05, -0.0001068115234375, -5.91278076171875e-05, 0.0, -0.0017075524665415287, -1.9788545614574105e-05, -0.06723976135253906, -0.0043354034423828125, -0.015641212463378906, -0.000537872314453125, -0.000896453857421875, -0.0001430511474609375, -0.0004444122314453125, -0.0001659393310546875, -0.0002536773681640625, -0.002532958984375, -0.000537872314453125, -0.012041091918945312, -0.0002651214599609375, -0.0409698486328125, 0.0, -0.0005514621734619141, -3.814697265625e-05, -0.0033559799194335938, -0.000102996826171875, -0.0022317166440188885, -6.914138793945312e-05, -0.014428973197937012, -0.00011634825932560489, -1.055777907371521, -0.0006862878799438477, -0.0002536773681640625, -0.000156402587890625, -4.57763671875e-05, -0.0002994537353515625, -3.814697265625e-05, -0.000186920166015625, -0.00153350830078125, -4.9591064453125e-05, -0.03755760192871094, -4.00543212890625e-05, -0.011991500854492188, 0.0, -0.0004482269287109375, -0.000102996826171875, -0.0032262802124023438, -3.814697265625e-05, -0.0028649510350078344, -0.0003421306610107422, -0.012038946151733398, -0.0002572536177467555, -1.1545745134353638, -1.1801719665527344e-05, -0.0009527206420898438, -7.82012939453125e-05, -7.43865966796875e-05, -0.00054931640625, -3.62396240234375e-05, -0.00029754638671875, -0.0011920928955078125, -7.82012939453125e-05, -0.013696670532226562, -4.9591064453125e-05, -0.025259017944335938, 0.0, -0.000324249267578125, -5.91278076171875e-05, -0.0048351287841796875, -3.62396240234375e-05, -0.003297561313956976, -0.0002639293670654297, -0.011518716812133789, -0.0002298354811500758, -0.8062806725502014, -0.0025616884231567383, -0.001277923583984375, -8.7738037109375e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.01607799530029297, -3.099436753473128e-06, -0.000377655029296875, -0.0001049041748046875, -0.0006847381591796875, 0.0, -0.0045166015625, 0.0, -0.005963325500488281, -8.583032467868179e-06, -0.009698150679469109, 0.0, -0.08469200134277344, -0.0009002685546875, 0.0, -0.009020090103149414, -0.00021431574714370072, -0.0015048980712890625, -3.4332275390625e-05, -2.47955322265625e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.0001735687255859375, 0.0, -0.011689066886901855, -2.3841855067985307e-07, -0.007172584533691406, 0.0, -0.000186920166015625, -0.006191253662109375, -1.9073486328125e-06, -0.004832267761230469, -3.933898824470816e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.05478858947753906, -2.0265579223632812e-06, -0.0009750127792358398, -3.814697265625e-06, -0.000461578369140625, -0.179595947265625, -0.02899646759033203, 0.0, -0.0008429288864135742, -4.100737351109274e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004055023193359375, 0.0, -0.004444122314453125, -2.2649765014648438e-06, -0.0005487203598022461, -1.9073486328125e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00039196014404296875, -1.1920928244535389e-07, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, 0.0, -0.012500762939453125, -3.576278118089249e-07, -1.9073486328125e-06, -0.00015306472778320312, -2.6225792680634186e-05, -0.0012054443359375, -0.001140594482421875, -0.0008697509765625, -0.000743865966796875, -0.0001087188720703125, -0.00125885009765625, -4.1961669921875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -6.747218139935285e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0011806488037109375, 0.0, -0.0001068115234375, -1.3470649719238281e-05, -0.00079512590309605, -1.9073486328125e-06, -0.000164031982421875, -0.00041961669921875, -9.5367431640625e-06, -0.000354766845703125, -3.814697265625e-06, -0.0017063617706298828, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Animal", "Companion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 17, 120, 210, 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 93, 208, 37, 125, "card", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.08428203845812, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template4", "hole0": "Animal Companion", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}]}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "card", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 7}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}, "hole1": [{"_type": "Lt"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AnimalCompanion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.00019560330838430673, -0.0019712080247700214, -0.0009434557869099081, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00010156629286939278, -6.318092346191406e-06, -1.71661376953125e-05, -0.003154754638671875, -0.002330780029296875, -0.00264739990234375, -1.1444026313256472e-05, -3.814697265625e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.6927573597058654e-05, -3.8146954466355965e-06, -0.020366191864013672, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0007891654968261719, -1.1920928244535389e-07, -6.4849853515625e-05, -0.0001049041748046875, 0.0, -2.861022494471399e-06, 0.0, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, 0.0, -9.655952453613281e-06, -1.0371208190917969e-05, -0.20910358428955078, -0.0004291534423828125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -9.417505680175964e-06, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -0.0001544952392578125, 0.0, 0.0, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -7.748603820800781e-06, -4.5656361180590466e-05, -0.016269683837890625, -1.33514404296875e-05, -0.0001068115234375, -5.91278076171875e-05, 0.0, -0.0017075524665415287, -1.9788545614574105e-05, -0.06723976135253906, -0.0043354034423828125, -0.015641212463378906, -0.000537872314453125, -0.000896453857421875, -0.0001430511474609375, -0.0004444122314453125, -0.0001659393310546875, -0.0002536773681640625, -0.002532958984375, -0.000537872314453125, -0.012041091918945312, -0.0002651214599609375, -0.0409698486328125, 0.0, -0.0005514621734619141, -3.814697265625e-05, -0.0033559799194335938, -0.000102996826171875, -0.0022317166440188885, -6.914138793945312e-05, -0.014428973197937012, -0.00011634825932560489, -1.055777907371521, -0.0006862878799438477, -0.0002536773681640625, -0.000156402587890625, -4.57763671875e-05, -0.0002994537353515625, -3.814697265625e-05, -0.000186920166015625, -0.00153350830078125, -4.9591064453125e-05, -0.03755760192871094, -4.00543212890625e-05, -0.011991500854492188, 0.0, -0.0004482269287109375, -0.000102996826171875, -0.0032262802124023438, -3.814697265625e-05, -0.0028649510350078344, -0.0003421306610107422, -0.012038946151733398, -0.0002572536177467555, -0.8101654648780823, -0.002293229103088379, -0.0002422332763671875, -0.00011444091796875, -7.2479248046875e-05, -0.0003833770751953125, -3.24249267578125e-05, -0.0002574920654296875, -0.00130462646484375, -5.340576171875e-05, -0.022510528564453125, -3.24249267578125e-05, -0.026208877563476562, 0.0, -0.0003814697265625, -8.96453857421875e-05, -0.0044116973876953125, -3.814697265625e-05, -0.002990598091855645, -0.0003192424774169922, -0.012052297592163086, -0.0002324581000721082, -1.1769145727157593, -9.894371032714844e-06, -0.0015316009521484375, -6.29425048828125e-05, 0.0, -3.62396240234375e-05, 0.0, -0.01693558692932129, -2.622600959512056e-06, -0.0002841949462890625, -9.72747802734375e-05, -0.00032806396484375, 0.0, -0.0053348541259765625, 0.0, -0.006134033203125, -7.629365427419543e-06, -0.009930966421961784, 0.0, -0.08638381958007812, -0.0009031295776367188, 0.0, -0.00879979133605957, -0.00021085940534248948, -0.0013179779052734375, -3.0517578125e-05, -2.6702880859375e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.0001773834228515625, 0.0, -0.011480331420898438, -2.3841855067985307e-07, -0.007197380065917969, 0.0, -0.000186920166015625, -0.006228446960449219, -1.9073486328125e-06, -0.004924774169921875, -3.933898824470816e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.054862022399902344, -2.0265579223632812e-06, -0.0009740591049194336, -3.814697265625e-06, -0.0004596710205078125, -0.1794910430908203, -0.029007911682128906, 0.0, -0.0008391141891479492, -4.112657916266471e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004055023193359375, 0.0, -0.0044460296630859375, -2.2649765014648438e-06, -0.0005487203598022461, -1.9073486328125e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00039196014404296875, -1.1920928244535389e-07, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, 0.0, -0.012475013732910156, -3.576278118089249e-07, -1.9073486328125e-06, -0.00015306472778320312, -2.6225792680634186e-05, -0.0012063980102539062, -0.001140594482421875, -0.0008697509765625, -0.000743865966796875, -0.0001087188720703125, -0.0012569427490234375, -4.1961669921875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -6.747218139935285e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0011806488037109375, 0.0, -0.0001068115234375, -1.3470649719238281e-05, -0.00079512590309605, -1.9073486328125e-06, -0.000164031982421875, -0.00041961669921875, -9.5367431640625e-06, -0.000354766845703125, -3.814697265625e-06, -0.0017063617706298828, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Animal", "Companion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 17, 120, 210, 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 60, 93, 208, 37, 125, "card", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.138753708315441, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template4", "hole0": "Animal Companion", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Huffer", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}]}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "card", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 7}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}, "hole1": [{"_type": "Lt"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AnimalCompanion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.00019560330838430673, -0.0019712080247700214, -0.0009434557869099081, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00010156629286939278, -6.318092346191406e-06, -1.71661376953125e-05, -0.003154754638671875, -0.002330780029296875, -0.00264739990234375, -1.1444026313256472e-05, -3.814697265625e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.6927573597058654e-05, -3.8146954466355965e-06, -0.020366191864013672, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0007891654968261719, -1.1920928244535389e-07, -6.4849853515625e-05, -0.0001049041748046875, 0.0, -2.861022494471399e-06, 0.0, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, 0.0, -9.655952453613281e-06, -1.0371208190917969e-05, -0.20910358428955078, -0.0004291534423828125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -9.417505680175964e-06, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -0.0001544952392578125, 0.0, 0.0, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -7.748603820800781e-06, -4.5656361180590466e-05, -0.016269683837890625, -1.33514404296875e-05, -0.0001068115234375, -5.91278076171875e-05, 0.0, -0.0017075524665415287, -1.9788545614574105e-05, -0.06723976135253906, -0.0043354034423828125, -0.015641212463378906, -0.000537872314453125, -0.000896453857421875, -0.0001430511474609375, -0.0004444122314453125, -0.0001659393310546875, -0.0002536773681640625, -0.002532958984375, -0.000537872314453125, -0.012041091918945312, -0.0002651214599609375, -0.0409698486328125, 0.0, -0.0005514621734619141, -3.814697265625e-05, -0.0033559799194335938, -0.000102996826171875, -0.0022317166440188885, -6.914138793945312e-05, -0.014428973197937012, -0.00011634825932560489, -1.5013021230697632, -8.0108642578125e-05, -0.0018405914306640625, -0.0001392364501953125, -6.67572021484375e-05, -0.000591278076171875, -4.57763671875e-05, -0.0001964569091796875, -0.0011386871337890625, -8.7738037109375e-05, -0.011699676513671875, -2.86102294921875e-05, -0.014410018920898438, 0.0, -0.0005950927734375, -8.58306884765625e-05, -0.0029811859130859375, -4.00543212890625e-05, -0.0023977686651051044, -0.0003552436828613281, -0.011765003204345703, -0.00024950504302978516, -0.8175801634788513, -0.0011903047561645508, -0.00022792816162109375, -0.0001201629638671875, -7.82012939453125e-05, -0.0004100799560546875, -3.4332275390625e-05, -0.000247955322265625, -0.001293182373046875, -5.53131103515625e-05, -0.020029067993164062, -2.47955322265625e-05, -0.026575088500976562, 0.0, -0.0003643035888671875, -8.392333984375e-05, -0.004374504089355469, -4.00543212890625e-05, -0.003000254277139902, -0.0003383159637451172, -0.01206958293914795, -0.0002343654487049207, -0.805263102054596, -0.0020815134048461914, -0.0012340545654296875, -9.34600830078125e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.016391754150390625, -3.099436753473128e-06, -0.0003871917724609375, -0.0001068115234375, -0.00069427490234375, 0.0, -0.0045013427734375, 0.0, -0.00595855712890625, -8.702239938429557e-06, -0.009642599150538445, 0.0, -0.08515548706054688, -0.0009050369262695312, 0.0, -0.00902104377746582, -0.0002146732877008617, -0.0015106201171875, -3.4332275390625e-05, -2.47955322265625e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.0001735687255859375, 0.0, -0.011648178100585938, -2.3841855067985307e-07, -0.0071659088134765625, 0.0, -0.000186920166015625, -0.006182670593261719, -1.9073486328125e-06, -0.0048427581787109375, -3.933898824470816e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.05478382110595703, -2.0265579223632812e-06, -0.0009750127792358398, -3.814697265625e-06, -0.000461578369140625, -0.1797008514404297, -0.029000282287597656, 0.0, -0.0008410215377807617, -4.100737351109274e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004055023193359375, 0.0, -0.004444122314453125, -2.2649765014648438e-06, -0.0005487203598022461, -1.9073486328125e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.0003910064697265625, -1.1920928244535389e-07, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, 0.0, -0.01247406005859375, -3.576278118089249e-07, -1.9073486328125e-06, -0.00015306472778320312, -2.6225792680634186e-05, -0.0012063980102539062, -0.0011425018310546875, -0.0008697509765625, -0.000743865966796875, -0.0001087188720703125, -0.00125885009765625, -4.1961669921875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -6.735297210980207e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0011806488037109375, 0.0, -0.0001068115234375, -1.1563301086425781e-05, -0.0007941722287796438, -1.9073486328125e-06, -0.000164031982421875, -0.00041961669921875, -9.5367431640625e-06, -0.000354766845703125, -3.814697265625e-06, -0.0017063617706298828, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Animal", "Companion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 17, 120, 210, 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 93, 208, 37, 125, "card", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.196884686996661, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template4", "hole0": "Animal Companion", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}]}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "card", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 7}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}, "hole1": [{"_type": "Lt"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AnimalCompanion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.00019560330838430673, -0.0019712080247700214, -0.0009434557869099081, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00010156629286939278, -6.318092346191406e-06, -1.71661376953125e-05, -0.003154754638671875, -0.002330780029296875, -0.00264739990234375, -1.1444026313256472e-05, -3.814697265625e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.6927573597058654e-05, -3.8146954466355965e-06, -0.020366191864013672, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0007891654968261719, -1.1920928244535389e-07, -6.4849853515625e-05, -0.0001049041748046875, 0.0, -2.861022494471399e-06, 0.0, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, 0.0, -9.655952453613281e-06, -1.0371208190917969e-05, -0.20910358428955078, -0.0004291534423828125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -9.417505680175964e-06, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -0.0001544952392578125, 0.0, 0.0, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -7.748603820800781e-06, -4.5656361180590466e-05, -0.016269683837890625, -1.33514404296875e-05, -0.0001068115234375, -5.91278076171875e-05, 0.0, -0.0017075524665415287, -1.9788545614574105e-05, -0.06723976135253906, -0.0043354034423828125, -0.015641212463378906, -0.000537872314453125, -0.000896453857421875, -0.0001430511474609375, -0.0004444122314453125, -0.0001659393310546875, -0.0002536773681640625, -0.002532958984375, -0.000537872314453125, -0.012041091918945312, -0.0002651214599609375, -0.0409698486328125, 0.0, -0.0005514621734619141, -3.814697265625e-05, -0.0033559799194335938, -0.000102996826171875, -0.0022317166440188885, -6.914138793945312e-05, -0.014428973197937012, -0.00011634825932560489, -1.2114375829696655, -1.728534698486328e-05, -0.0027761459350585938, -7.82012939453125e-05, -3.62396240234375e-05, -0.0002288818359375, -4.9591064453125e-05, -0.0002269744873046875, -0.001323699951171875, -6.29425048828125e-05, -0.021654129028320312, -3.814697265625e-05, -0.009351730346679688, 0.0, -0.0003948211669921875, -7.82012939453125e-05, -0.0032320022583007812, -3.62396240234375e-05, -0.002980463672429323, -0.0002753734588623047, -0.01109933853149414, -0.00022375582193490118, -1.1667085886001587, -1.3709068298339844e-05, -0.0008697509765625, -8.0108642578125e-05, -7.2479248046875e-05, -0.000499725341796875, -3.4332275390625e-05, -0.0002880096435546875, -0.0011749267578125, -7.43865966796875e-05, -0.013460159301757812, -4.38690185546875e-05, -0.025583267211914062, 0.0, -0.0003261566162109375, -5.91278076171875e-05, -0.004845619201660156, -3.62396240234375e-05, -0.003295415546745062, -0.0002753734588623047, -0.011688470840454102, -0.00022971628641244024, -0.8071383237838745, -0.0023622512817382812, -0.001251220703125, -8.7738037109375e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.016027450561523438, -3.099436753473128e-06, -0.0003795623779296875, -0.0001049041748046875, -0.0006847381591796875, 0.0, -0.0045223236083984375, 0.0, -0.005962371826171875, -8.583032467868179e-06, -0.009692428633570671, 0.0, -0.08468055725097656, -0.0009002685546875, 0.0, -0.009020090103149414, -0.00021431574714370072, -0.001506805419921875, -3.4332275390625e-05, -2.47955322265625e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.0001735687255859375, 0.0, -0.01168525218963623, -2.3841855067985307e-07, -0.007172584533691406, 0.0, -0.000186920166015625, -0.006190299987792969, -1.9073486328125e-06, -0.004832267761230469, -3.933898824470816e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.054779052734375, -2.0265579223632812e-06, -0.0009750127792358398, -3.814697265625e-06, -0.000461578369140625, -0.17960548400878906, -0.028992652893066406, 0.0, -0.0008429288864135742, -4.100737351109274e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004055023193359375, 0.0, -0.004444122314453125, -2.2649765014648438e-06, -0.0005487203598022461, -1.9073486328125e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00039196014404296875, -1.1920928244535389e-07, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, 0.0, -0.012503623962402344, -3.576278118089249e-07, -1.9073486328125e-06, -0.00015306472778320312, -2.6225792680634186e-05, -0.0012044906616210938, -0.001140594482421875, -0.0008697509765625, -0.000743865966796875, -0.0001087188720703125, -0.00125885009765625, -4.1961669921875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -6.747218139935285e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0011806488037109375, 0.0, -0.0001068115234375, -1.1563301086425781e-05, -0.00079512590309605, -1.9073486328125e-06, -0.000164031982421875, -0.00041961669921875, -9.5367431640625e-06, -0.000354766845703125, -3.814697265625e-06, -0.0017063617706298828, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Animal", "Companion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 17, 120, 210, 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 93, 208, 37, 125, "card", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.214083966276455, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template4", "hole0": "Animal Companion", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}]}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "card", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 7}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}, "hole1": [{"_type": "Lt"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AnimalCompanion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.00019560330838430673, -0.0019712080247700214, -0.0009434557869099081, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00010156629286939278, -6.318092346191406e-06, -1.71661376953125e-05, -0.003154754638671875, -0.002330780029296875, -0.00264739990234375, -1.1444026313256472e-05, -3.814697265625e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.6927573597058654e-05, -3.8146954466355965e-06, -0.020366191864013672, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0007891654968261719, -1.1920928244535389e-07, -6.4849853515625e-05, -0.0001049041748046875, 0.0, -2.861022494471399e-06, 0.0, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, 0.0, -9.655952453613281e-06, -1.0371208190917969e-05, -0.20910358428955078, -0.0004291534423828125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -9.417505680175964e-06, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -0.0001544952392578125, 0.0, 0.0, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -7.748603820800781e-06, -4.5656361180590466e-05, -0.016269683837890625, -1.33514404296875e-05, -0.0001068115234375, -5.91278076171875e-05, 0.0, -0.0017075524665415287, -1.9788545614574105e-05, -0.06723976135253906, -0.0043354034423828125, -0.015641212463378906, -0.000537872314453125, -0.000896453857421875, -0.0001430511474609375, -0.0004444122314453125, -0.0001659393310546875, -0.0002536773681640625, -0.002532958984375, -0.000537872314453125, -0.012041091918945312, -0.0002651214599609375, -0.0409698486328125, 0.0, -0.0005514621734619141, -3.814697265625e-05, -0.0033559799194335938, -0.000102996826171875, -0.0022317166440188885, -6.914138793945312e-05, -0.014428973197937012, -0.00011634825932560489, -1.2114375829696655, -1.728534698486328e-05, -0.0027761459350585938, -7.82012939453125e-05, -3.62396240234375e-05, -0.0002288818359375, -4.9591064453125e-05, -0.0002269744873046875, -0.001323699951171875, -6.29425048828125e-05, -0.021654129028320312, -3.814697265625e-05, -0.009351730346679688, 0.0, -0.0003948211669921875, -7.82012939453125e-05, -0.0032320022583007812, -3.62396240234375e-05, -0.002980463672429323, -0.0002753734588623047, -0.01109933853149414, -0.00022375582193490118, -0.8031011819839478, -0.0028200149536132812, -0.00027561187744140625, -0.0001220703125, -7.43865966796875e-05, -0.0003719329833984375, -3.24249267578125e-05, -0.0002498626708984375, -0.0012798309326171875, -5.14984130859375e-05, -0.02127838134765625, -3.0517578125e-05, -0.02631378173828125, 0.0, -0.0003910064697265625, -8.96453857421875e-05, -0.004486083984375, -3.814697265625e-05, -0.0029491132590919733, -0.0003345012664794922, -0.012207746505737305, -0.00023233889078255743, -1.176405906677246, -9.894371032714844e-06, -0.0015544891357421875, -6.29425048828125e-05, 0.0, -3.62396240234375e-05, 0.0, -0.01688981056213379, -2.622600959512056e-06, -0.0002841949462890625, -9.72747802734375e-05, -0.0003261566162109375, 0.0, -0.0053348541259765625, 0.0, -0.006145477294921875, -7.629365427419543e-06, -0.009926078841090202, 0.0, -0.08651924133300781, -0.000904083251953125, 0.0, -0.008797883987426758, -0.0002109785855282098, -0.001316070556640625, -3.0517578125e-05, -2.6702880859375e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.0001773834228515625, 0.0, -0.01148223876953125, -2.3841855067985307e-07, -0.0071964263916015625, 0.0, -0.000186920166015625, -0.006229400634765625, -1.9073486328125e-06, -0.004924774169921875, -3.933898824470816e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.05485725402832031, -2.0265579223632812e-06, -0.0009740591049194336, -3.814697265625e-06, -0.0004596710205078125, -0.1794872283935547, -0.029001235961914062, 0.0, -0.0008391141891479492, -4.112657916266471e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004055023193359375, 0.0, -0.0044460296630859375, -2.2649765014648438e-06, -0.0005487203598022461, -1.9073486328125e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00039196014404296875, -1.1920928244535389e-07, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, 0.0, -0.012477874755859375, -3.576278118089249e-07, -1.9073486328125e-06, -0.00015306472778320312, -2.6225792680634186e-05, -0.0012054443359375, -0.0011386871337890625, -0.0008697509765625, -0.000743865966796875, -0.0001087188720703125, -0.0012569427490234375, -4.1961669921875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -6.747218139935285e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0011806488037109375, 0.0, -0.0001068115234375, -1.3470649719238281e-05, -0.00079512590309605, -1.9073486328125e-06, -0.000164031982421875, -0.00041961669921875, -9.5367431640625e-06, -0.000354766845703125, -3.814697265625e-06, -0.0017063617706298828, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Animal", "Companion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 17, 120, 210, 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 60, 93, 208, 37, 125, "card", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.416383204139144, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template4", "hole0": "Animal Companion", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}]}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "card", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 7}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}, "hole1": [{"_type": "Lt"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AnimalCompanion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.00019560330838430673, -0.0019712080247700214, -0.0009434557869099081, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00010156629286939278, -6.318092346191406e-06, -1.71661376953125e-05, -0.003154754638671875, -0.002330780029296875, -0.00264739990234375, -1.1444026313256472e-05, -3.814697265625e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.6927573597058654e-05, -3.8146954466355965e-06, -0.020366191864013672, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0007891654968261719, -1.1920928244535389e-07, -6.4849853515625e-05, -0.0001049041748046875, 0.0, -2.861022494471399e-06, 0.0, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, 0.0, -9.655952453613281e-06, -1.0371208190917969e-05, -0.20910358428955078, -0.0004291534423828125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -9.417505680175964e-06, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -0.0001544952392578125, 0.0, 0.0, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -7.748603820800781e-06, -4.5656361180590466e-05, -0.016269683837890625, -1.33514404296875e-05, -0.0001068115234375, -5.91278076171875e-05, 0.0, -0.0017075524665415287, -1.9788545614574105e-05, -0.06723976135253906, -0.0043354034423828125, -0.015641212463378906, -0.000537872314453125, -0.000896453857421875, -0.0001430511474609375, -0.0004444122314453125, -0.0001659393310546875, -0.0002536773681640625, -0.002532958984375, -0.000537872314453125, -0.012041091918945312, -0.0002651214599609375, -0.0409698486328125, 0.0, -0.0005514621734619141, -3.814697265625e-05, -0.0033559799194335938, -0.000102996826171875, -0.0022317166440188885, -6.914138793945312e-05, -0.014428973197937012, -0.00011634825932560489, -1.055777907371521, -0.0006862878799438477, -0.0002536773681640625, -0.000156402587890625, -4.57763671875e-05, -0.0002994537353515625, -3.814697265625e-05, -0.000186920166015625, -0.00153350830078125, -4.9591064453125e-05, -0.03755760192871094, -4.00543212890625e-05, -0.011991500854492188, 0.0, -0.0004482269287109375, -0.000102996826171875, -0.0032262802124023438, -3.814697265625e-05, -0.0028649510350078344, -0.0003421306610107422, -0.012038946151733398, -0.0002572536177467555, -1.1545745134353638, -1.1801719665527344e-05, -0.0009527206420898438, -7.82012939453125e-05, -7.43865966796875e-05, -0.00054931640625, -3.62396240234375e-05, -0.00029754638671875, -0.0011920928955078125, -7.82012939453125e-05, -0.013696670532226562, -4.9591064453125e-05, -0.025259017944335938, 0.0, -0.000324249267578125, -5.91278076171875e-05, -0.0048351287841796875, -3.62396240234375e-05, -0.003297561313956976, -0.0002639293670654297, -0.011518716812133789, -0.0002298354811500758, -1.176857590675354, -1.0013580322265625e-05, -0.0012950897216796875, -6.103515625e-05, 0.0, -3.814697265625e-05, 0.0, -0.01728367805480957, -2.50339189733495e-06, -0.00028228759765625, -9.918212890625e-05, -0.0003261566162109375, 0.0, -0.005359649658203125, 0.0, -0.0060787200927734375, -7.629365427419543e-06, -0.009985802695155144, 0.0, -0.085235595703125, -0.0008955001831054688, 0.0, -0.008806467056274414, -0.00021014429512433708, -0.00133514404296875, -3.0517578125e-05, -2.6702880859375e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.0001773834228515625, 0.0, -0.01149451732635498, -2.3841855067985307e-07, -0.007199287414550781, 0.0, -0.000186920166015625, -0.0062255859375, -1.9073486328125e-06, -0.004917144775390625, -3.933898824470816e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.054862022399902344, -2.0265579223632812e-06, -0.0009740591049194336, -3.814697265625e-06, -0.0004596710205078125, -0.17941856384277344, -0.029001235961914062, 0.0, -0.0008410215377807617, -4.112657916266471e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004055023193359375, 0.0, -0.0044460296630859375, -2.2649765014648438e-06, -0.0005487203598022461, -1.9073486328125e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00039196014404296875, -1.1920928244535389e-07, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, 0.0, -0.012477874755859375, -3.576278118089249e-07, -1.9073486328125e-06, -0.00015306472778320312, -2.6225792680634186e-05, -0.0012054443359375, -0.0011386871337890625, -0.0008697509765625, -0.000743865966796875, -0.0001087188720703125, -0.0012569427490234375, -4.1961669921875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -6.747218139935285e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0011806488037109375, 0.0, -0.0001068115234375, -1.3470649719238281e-05, -0.00079512590309605, -1.9073486328125e-06, -0.000164031982421875, -0.00041961669921875, -9.5367431640625e-06, -0.000354766845703125, -3.814697265625e-06, -0.0017063617706298828, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Animal", "Companion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 17, 120, 210, 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 60, 93, 208, 37, 125, "card", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.456519598967013, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template4", "hole0": "Animal Companion", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Huffer", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}]}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "card", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 7}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}, "hole1": [{"_type": "Lt"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AnimalCompanion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.00019560330838430673, -0.0019712080247700214, -0.0009434557869099081, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00010156629286939278, -6.318092346191406e-06, -1.71661376953125e-05, -0.003154754638671875, -0.002330780029296875, -0.00264739990234375, -1.1444026313256472e-05, -3.814697265625e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.6927573597058654e-05, -3.8146954466355965e-06, -0.020366191864013672, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0007891654968261719, -1.1920928244535389e-07, -6.4849853515625e-05, -0.0001049041748046875, 0.0, -2.861022494471399e-06, 0.0, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, 0.0, -9.655952453613281e-06, -1.0371208190917969e-05, -0.20910358428955078, -0.0004291534423828125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -9.417505680175964e-06, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -0.0001544952392578125, 0.0, 0.0, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -7.748603820800781e-06, -4.5656361180590466e-05, -0.016269683837890625, -1.33514404296875e-05, -0.0001068115234375, -5.91278076171875e-05, 0.0, -0.0017075524665415287, -1.9788545614574105e-05, -0.06723976135253906, -0.0043354034423828125, -0.015641212463378906, -0.000537872314453125, -0.000896453857421875, -0.0001430511474609375, -0.0004444122314453125, -0.0001659393310546875, -0.0002536773681640625, -0.002532958984375, -0.000537872314453125, -0.012041091918945312, -0.0002651214599609375, -0.0409698486328125, 0.0, -0.0005514621734619141, -3.814697265625e-05, -0.0033559799194335938, -0.000102996826171875, -0.0022317166440188885, -6.914138793945312e-05, -0.014428973197937012, -0.00011634825932560489, -1.5013021230697632, -8.0108642578125e-05, -0.0018405914306640625, -0.0001392364501953125, -6.67572021484375e-05, -0.000591278076171875, -4.57763671875e-05, -0.0001964569091796875, -0.0011386871337890625, -8.7738037109375e-05, -0.011699676513671875, -2.86102294921875e-05, -0.014410018920898438, 0.0, -0.0005950927734375, -8.58306884765625e-05, -0.0029811859130859375, -4.00543212890625e-05, -0.0023977686651051044, -0.0003552436828613281, -0.011765003204345703, -0.00024950504302978516, -1.146809458732605, -7.867813110351562e-06, -0.001308441162109375, -7.2479248046875e-05, -7.05718994140625e-05, -0.0004444122314453125, -3.62396240234375e-05, -0.000240325927734375, -0.001194000244140625, -6.4849853515625e-05, -0.012624740600585938, -3.24249267578125e-05, -0.024982452392578125, 0.0, -0.00034332275390625, -7.05718994140625e-05, -0.004343986511230469, -3.814697265625e-05, -0.003171676304191351, -0.0002925395965576172, -0.011592864990234375, -0.00022566317056771368, -0.8036108613014221, -0.0024204254150390625, -0.0012569427490234375, -8.7738037109375e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.01616954803466797, -3.099436753473128e-06, -0.0003871917724609375, -0.0001049041748046875, -0.000682830810546875, 0.0, -0.0045013427734375, 0.0, -0.00595855712890625, -8.583032467868179e-06, -0.009704826399683952, 0.0, -0.08481788635253906, -0.0009002685546875, 0.0, -0.009020090103149414, -0.00021455410751514137, -0.00150299072265625, -3.4332275390625e-05, -2.47955322265625e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.0001735687255859375, 0.0, -0.011693835258483887, -2.3841855067985307e-07, -0.0071697235107421875, 0.0, -0.000186920166015625, -0.0061893463134765625, -1.9073486328125e-06, -0.004830360412597656, -3.933898824470816e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.05478668212890625, -2.0265579223632812e-06, -0.0009750127792358398, -3.814697265625e-06, -0.000461578369140625, -0.1796417236328125, -0.02899456024169922, 0.0, -0.0008429288864135742, -4.100737351109274e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004055023193359375, 0.0, -0.004444122314453125, -2.2649765014648438e-06, -0.0005487203598022461, -1.9073486328125e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.0003910064697265625, -1.1920928244535389e-07, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, 0.0, -0.012477874755859375, -3.576278118089249e-07, -1.9073486328125e-06, -0.00015306472778320312, -2.6225792680634186e-05, -0.0012054443359375, -0.0011425018310546875, -0.0008697509765625, -0.000743865966796875, -0.0001087188720703125, -0.00125885009765625, -4.1961669921875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -6.747218139935285e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0011806488037109375, 0.0, -0.0001068115234375, -1.3470649719238281e-05, -0.00079512590309605, -1.9073486328125e-06, -0.000164031982421875, -0.00041961669921875, -9.5367431640625e-06, -0.000354766845703125, -3.814697265625e-06, -0.0017063617706298828, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Animal", "Companion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 17, 120, 210, 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 93, 208, 37, 125, "card", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.509471771032047, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template4", "hole0": "Animal Companion", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Huffer", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}]}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "card", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 7}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}, "hole1": [{"_type": "Lt"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AnimalCompanion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.00019560330838430673, -0.0019712080247700214, -0.0009434557869099081, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00010156629286939278, -6.318092346191406e-06, -1.71661376953125e-05, -0.003154754638671875, -0.002330780029296875, -0.00264739990234375, -1.1444026313256472e-05, -3.814697265625e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.6927573597058654e-05, -3.8146954466355965e-06, -0.020366191864013672, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0007891654968261719, -1.1920928244535389e-07, -6.4849853515625e-05, -0.0001049041748046875, 0.0, -2.861022494471399e-06, 0.0, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, 0.0, -9.655952453613281e-06, -1.0371208190917969e-05, -0.20910358428955078, -0.0004291534423828125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -9.417505680175964e-06, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -0.0001544952392578125, 0.0, 0.0, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -7.748603820800781e-06, -4.5656361180590466e-05, -0.016269683837890625, -1.33514404296875e-05, -0.0001068115234375, -5.91278076171875e-05, 0.0, -0.0017075524665415287, -1.9788545614574105e-05, -0.06723976135253906, -0.0043354034423828125, -0.015641212463378906, -0.000537872314453125, -0.000896453857421875, -0.0001430511474609375, -0.0004444122314453125, -0.0001659393310546875, -0.0002536773681640625, -0.002532958984375, -0.000537872314453125, -0.012041091918945312, -0.0002651214599609375, -0.0409698486328125, 0.0, -0.0005514621734619141, -3.814697265625e-05, -0.0033559799194335938, -0.000102996826171875, -0.0022317166440188885, -6.914138793945312e-05, -0.014428973197937012, -0.00011634825932560489, -1.5013021230697632, -8.0108642578125e-05, -0.0018405914306640625, -0.0001392364501953125, -6.67572021484375e-05, -0.000591278076171875, -4.57763671875e-05, -0.0001964569091796875, -0.0011386871337890625, -8.7738037109375e-05, -0.011699676513671875, -2.86102294921875e-05, -0.014410018920898438, 0.0, -0.0005950927734375, -8.58306884765625e-05, -0.0029811859130859375, -4.00543212890625e-05, -0.0023977686651051044, -0.0003552436828613281, -0.011765003204345703, -0.00024950504302978516, -0.8175801634788513, -0.0011903047561645508, -0.00022792816162109375, -0.0001201629638671875, -7.82012939453125e-05, -0.0004100799560546875, -3.4332275390625e-05, -0.000247955322265625, -0.001293182373046875, -5.53131103515625e-05, -0.020029067993164062, -2.47955322265625e-05, -0.026575088500976562, 0.0, -0.0003643035888671875, -8.392333984375e-05, -0.004374504089355469, -4.00543212890625e-05, -0.003000254277139902, -0.0003383159637451172, -0.01206958293914795, -0.0002343654487049207, -1.1755871772766113, -9.894371032714844e-06, -0.0015583038330078125, -6.29425048828125e-05, 0.0, -3.62396240234375e-05, 0.0, -0.016971826553344727, -2.622600959512056e-06, -0.000286102294921875, -9.72747802734375e-05, -0.0003261566162109375, 0.0, -0.005313873291015625, 0.0, -0.006144523620605469, -7.629365427419543e-06, -0.009932873770594597, 0.0, -0.08652877807617188, -0.0009031295776367188, 0.0, -0.00879979133605957, -0.0002109785855282098, -0.0013141632080078125, -3.0517578125e-05, -2.6702880859375e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.0001773834228515625, 0.0, -0.011493682861328125, -2.3841855067985307e-07, -0.0071964263916015625, 0.0, -0.000186920166015625, -0.006224632263183594, -1.9073486328125e-06, -0.004921913146972656, -3.933898824470816e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.054874420166015625, -2.0265579223632812e-06, -0.0009740591049194336, -3.814697265625e-06, -0.0004596710205078125, -0.17947959899902344, -0.028992652893066406, 0.0, -0.0008391141891479492, -4.112657916266471e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004055023193359375, 0.0, -0.004445075988769531, -2.2649765014648438e-06, -0.0005487203598022461, -1.9073486328125e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00039196014404296875, -1.1920928244535389e-07, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, 0.0, -0.012455940246582031, -3.576278118089249e-07, -1.9073486328125e-06, -0.00015306472778320312, -2.6225792680634186e-05, -0.0012063980102539062, -0.001140594482421875, -0.0008716583251953125, -0.000743865966796875, -0.0001087188720703125, -0.00125885009765625, -4.1961669921875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -6.747218139935285e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0011806488037109375, 0.0, -0.0001068115234375, -1.3470649719238281e-05, -0.00079512590309605, -1.9073486328125e-06, -0.000164031982421875, -0.00041961669921875, -9.5367431640625e-06, -0.000354766845703125, -3.814697265625e-06, -0.0017063617706298828, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Animal", "Companion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 17, 120, 210, 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 60, 93, 208, 37, 125, "card", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.566333826516363, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template4", "hole0": "Animal Companion", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}]}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "card", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 7}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}, "hole1": [{"_type": "Lt"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AnimalCompanion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.00019560330838430673, -0.0019712080247700214, -0.0009434557869099081, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00010156629286939278, -6.318092346191406e-06, -1.71661376953125e-05, -0.003154754638671875, -0.002330780029296875, -0.00264739990234375, -1.1444026313256472e-05, -3.814697265625e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.6927573597058654e-05, -3.8146954466355965e-06, -0.020366191864013672, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0007891654968261719, -1.1920928244535389e-07, -6.4849853515625e-05, -0.0001049041748046875, 0.0, -2.861022494471399e-06, 0.0, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, 0.0, -9.655952453613281e-06, -1.0371208190917969e-05, -0.20910358428955078, -0.0004291534423828125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -9.417505680175964e-06, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -0.0001544952392578125, 0.0, 0.0, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -7.748603820800781e-06, -4.5656361180590466e-05, -0.016269683837890625, -1.33514404296875e-05, -0.0001068115234375, -5.91278076171875e-05, 0.0, -0.0017075524665415287, -1.9788545614574105e-05, -0.06723976135253906, -0.0043354034423828125, -0.015641212463378906, -0.000537872314453125, -0.000896453857421875, -0.0001430511474609375, -0.0004444122314453125, -0.0001659393310546875, -0.0002536773681640625, -0.002532958984375, -0.000537872314453125, -0.012041091918945312, -0.0002651214599609375, -0.0409698486328125, 0.0, -0.0005514621734619141, -3.814697265625e-05, -0.0033559799194335938, -0.000102996826171875, -0.0022317166440188885, -6.914138793945312e-05, -0.014428973197937012, -0.00011634825932560489, -1.2114375829696655, -1.728534698486328e-05, -0.0027761459350585938, -7.82012939453125e-05, -3.62396240234375e-05, -0.0002288818359375, -4.9591064453125e-05, -0.0002269744873046875, -0.001323699951171875, -6.29425048828125e-05, -0.021654129028320312, -3.814697265625e-05, -0.009351730346679688, 0.0, -0.0003948211669921875, -7.82012939453125e-05, -0.0032320022583007812, -3.62396240234375e-05, -0.002980463672429323, -0.0002753734588623047, -0.01109933853149414, -0.00022375582193490118, -1.1667085886001587, -1.3709068298339844e-05, -0.0008697509765625, -8.0108642578125e-05, -7.2479248046875e-05, -0.000499725341796875, -3.4332275390625e-05, -0.0002880096435546875, -0.0011749267578125, -7.43865966796875e-05, -0.013460159301757812, -4.38690185546875e-05, -0.025583267211914062, 0.0, -0.0003261566162109375, -5.91278076171875e-05, -0.004845619201660156, -3.62396240234375e-05, -0.003295415546745062, -0.0002753734588623047, -0.011688470840454102, -0.00022971628641244024, -1.176899790763855, -1.0013580322265625e-05, -0.0012989044189453125, -6.103515625e-05, 0.0, -3.814697265625e-05, 0.0, -0.017243623733520508, -2.50339189733495e-06, -0.0002841949462890625, -9.918212890625e-05, -0.000324249267578125, 0.0, -0.0053558349609375, 0.0, -0.006084442138671875, -7.629365427419543e-06, -0.009981987997889519, 0.0, -0.08529281616210938, -0.0008955001831054688, 0.0, -0.008803606033325195, -0.00021014429512433708, -0.0013332366943359375, -3.0517578125e-05, -2.6702880859375e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.0001773834228515625, 0.0, -0.011495471000671387, -2.3841855067985307e-07, -0.007199287414550781, 0.0, -0.000186920166015625, -0.006226539611816406, -1.9073486328125e-06, -0.004916191101074219, -3.933898824470816e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.054856300354003906, -2.0265579223632812e-06, -0.0009740591049194336, -3.814697265625e-06, -0.0004596710205078125, -0.1794109344482422, -0.02899456024169922, 0.0, -0.0008410215377807617, -4.112657916266471e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004055023193359375, 0.0, -0.0044460296630859375, -2.2649765014648438e-06, -0.0005487203598022461, -1.9073486328125e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00039196014404296875, -1.1920928244535389e-07, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, 0.0, -0.012480735778808594, -3.576278118089249e-07, -1.9073486328125e-06, -0.00015306472778320312, -2.6225792680634186e-05, -0.0012054443359375, -0.0011386871337890625, -0.0008697509765625, -0.000743865966796875, -0.0001087188720703125, -0.0012569427490234375, -4.1961669921875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -6.747218139935285e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0011806488037109375, 0.0, -0.0001068115234375, -1.3470649719238281e-05, -0.00079512590309605, -1.9073486328125e-06, -0.000164031982421875, -0.00041961669921875, -9.5367431640625e-06, -0.000354766845703125, -3.814697265625e-06, -0.0017063617706298828, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Animal", "Companion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 17, 120, 210, 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 60, 93, 208, 37, 125, "card", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.829437430774867, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template4", "hole0": "Animal Companion", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Huffer", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}]}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "card", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 7}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}, "hole1": [{"_type": "Lt"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AnimalCompanion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.00019560330838430673, -0.0019712080247700214, -0.0009434557869099081, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00010156629286939278, -6.318092346191406e-06, -1.71661376953125e-05, -0.003154754638671875, -0.002330780029296875, -0.00264739990234375, -1.1444026313256472e-05, -3.814697265625e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.6927573597058654e-05, -3.8146954466355965e-06, -0.020366191864013672, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0007891654968261719, -1.1920928244535389e-07, -6.4849853515625e-05, -0.0001049041748046875, 0.0, -2.861022494471399e-06, 0.0, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, 0.0, -9.655952453613281e-06, -1.0371208190917969e-05, -0.20910358428955078, -0.0004291534423828125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -9.417505680175964e-06, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -0.0001544952392578125, 0.0, 0.0, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -7.748603820800781e-06, -4.5656361180590466e-05, -0.016269683837890625, -1.33514404296875e-05, -0.0001068115234375, -5.91278076171875e-05, 0.0, -0.0017075524665415287, -1.9788545614574105e-05, -0.06723976135253906, -0.0043354034423828125, -0.015641212463378906, -0.000537872314453125, -0.000896453857421875, -0.0001430511474609375, -0.0004444122314453125, -0.0001659393310546875, -0.0002536773681640625, -0.002532958984375, -0.000537872314453125, -0.012041091918945312, -0.0002651214599609375, -0.0409698486328125, 0.0, -0.0005514621734619141, -3.814697265625e-05, -0.0033559799194335938, -0.000102996826171875, -0.0022317166440188885, -6.914138793945312e-05, -0.014428973197937012, -0.00011634825932560489, -1.5013021230697632, -8.0108642578125e-05, -0.0018405914306640625, -0.0001392364501953125, -6.67572021484375e-05, -0.000591278076171875, -4.57763671875e-05, -0.0001964569091796875, -0.0011386871337890625, -8.7738037109375e-05, -0.011699676513671875, -2.86102294921875e-05, -0.014410018920898438, 0.0, -0.0005950927734375, -8.58306884765625e-05, -0.0029811859130859375, -4.00543212890625e-05, -0.0023977686651051044, -0.0003552436828613281, -0.011765003204345703, -0.00024950504302978516, -1.146809458732605, -7.867813110351562e-06, -0.001308441162109375, -7.2479248046875e-05, -7.05718994140625e-05, -0.0004444122314453125, -3.62396240234375e-05, -0.000240325927734375, -0.001194000244140625, -6.4849853515625e-05, -0.012624740600585938, -3.24249267578125e-05, -0.024982452392578125, 0.0, -0.00034332275390625, -7.05718994140625e-05, -0.004343986511230469, -3.814697265625e-05, -0.003171676304191351, -0.0002925395965576172, -0.011592864990234375, -0.00022566317056771368, -1.1768399477005005, -1.0013580322265625e-05, -0.0013370513916015625, -6.103515625e-05, 0.0, -3.62396240234375e-05, 0.0, -0.01720261573791504, -2.50339189733495e-06, -0.0002880096435546875, -9.72747802734375e-05, -0.0003261566162109375, 0.0, -0.0053272247314453125, 0.0, -0.006103515625, -7.629365427419543e-06, -0.00997614674270153, 0.0, -0.08563995361328125, -0.0008974075317382812, 0.0, -0.008806467056274414, -0.00021050185023341328, -0.0013294219970703125, -3.0517578125e-05, -2.6702880859375e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.0001773834228515625, 0.0, -0.011502265930175781, -2.3841855067985307e-07, -0.007195472717285156, 0.0, -0.000186920166015625, -0.006224632263183594, -1.9073486328125e-06, -0.004916191101074219, -3.933898824470816e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.054866790771484375, -2.0265579223632812e-06, -0.0009740591049194336, -3.814697265625e-06, -0.0004596710205078125, -0.17944908142089844, -0.028992652893066406, 0.0, -0.0008410215377807617, -4.112657916266471e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004055023193359375, 0.0, -0.0044460296630859375, -2.2649765014648438e-06, -0.0005487203598022461, -1.9073486328125e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00039196014404296875, -1.1920928244535389e-07, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, 0.0, -0.012457847595214844, -3.576278118089249e-07, -1.9073486328125e-06, -0.00015306472778320312, -2.6225792680634186e-05, -0.0012054443359375, -0.0011386871337890625, -0.0008716583251953125, -0.000743865966796875, -0.0001087188720703125, -0.00125885009765625, -4.1961669921875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -6.747218139935285e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0011806488037109375, 0.0, -0.0001068115234375, -1.3470649719238281e-05, -0.00079512590309605, -1.9073486328125e-06, -0.000164031982421875, -0.00041961669921875, -9.5367431640625e-06, -0.000354766845703125, -3.814697265625e-06, -0.0017063617706298828, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Animal", "Companion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 17, 120, 210, 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 60, 93, 208, 37, 125, "card", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.861511823315247, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template4", "hole0": "Animal Companion", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Huffer", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}]}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "card", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 7}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}, "hole1": [{"_type": "Lt"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AnimalCompanion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.00019560330838430673, -0.0019712080247700214, -0.0009434557869099081, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00010156629286939278, -6.318092346191406e-06, -1.71661376953125e-05, -0.003154754638671875, -0.002330780029296875, -0.00264739990234375, -1.1444026313256472e-05, -3.814697265625e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.6927573597058654e-05, -3.8146954466355965e-06, -0.020366191864013672, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0007891654968261719, -1.1920928244535389e-07, -6.4849853515625e-05, -0.0001049041748046875, 0.0, -2.861022494471399e-06, 0.0, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, 0.0, -9.655952453613281e-06, -1.0371208190917969e-05, -0.20910358428955078, -0.0004291534423828125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -9.417505680175964e-06, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -0.0001544952392578125, 0.0, 0.0, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -7.748603820800781e-06, -4.5656361180590466e-05, -0.016269683837890625, -1.33514404296875e-05, -0.0001068115234375, -5.91278076171875e-05, 0.0, -0.0017075524665415287, -1.9788545614574105e-05, -0.06723976135253906, -0.0043354034423828125, -0.015641212463378906, -0.000537872314453125, -0.000896453857421875, -0.0001430511474609375, -0.0004444122314453125, -0.0001659393310546875, -0.0002536773681640625, -0.002532958984375, -0.000537872314453125, -0.012041091918945312, -0.0002651214599609375, -0.0409698486328125, 0.0, -0.0005514621734619141, -3.814697265625e-05, -0.0033559799194335938, -0.000102996826171875, -0.0022317166440188885, -6.914138793945312e-05, -0.014428973197937012, -0.00011634825932560489, -1.055777907371521, -0.0006862878799438477, -0.0002536773681640625, -0.000156402587890625, -4.57763671875e-05, -0.0002994537353515625, -3.814697265625e-05, -0.000186920166015625, -0.00153350830078125, -4.9591064453125e-05, -0.03755760192871094, -4.00543212890625e-05, -0.011991500854492188, 0.0, -0.0004482269287109375, -0.000102996826171875, -0.0032262802124023438, -3.814697265625e-05, -0.0028649510350078344, -0.0003421306610107422, -0.012038946151733398, -0.0002572536177467555, -0.8101654648780823, -0.002293229103088379, -0.0002422332763671875, -0.00011444091796875, -7.2479248046875e-05, -0.0003833770751953125, -3.24249267578125e-05, -0.0002574920654296875, -0.00130462646484375, -5.340576171875e-05, -0.022510528564453125, -3.24249267578125e-05, -0.026208877563476562, 0.0, -0.0003814697265625, -8.96453857421875e-05, -0.0044116973876953125, -3.814697265625e-05, -0.002990598091855645, -0.0003192424774169922, -0.012052297592163086, -0.0002324581000721082, -1.9369786977767944, -0.00012409687042236328, -0.004024505615234375, -5.53131103515625e-05, 0.0, -3.814697265625e-05, 0.0, -0.022288799285888672, -3.4570634852570947e-06, -0.000308990478515625, -0.00011444091796875, -0.0005950927734375, 0.0, -0.0052433013916015625, 0.0, -0.006031990051269531, -7.748573807475623e-06, -0.009506938979029655, 0.0, -0.09523773193359375, -0.0010023117065429688, 0.0, -0.008703470230102539, -0.00021586513321381062, -0.0012035369873046875, -3.24249267578125e-05, -2.6702880859375e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.0001773834228515625, 0.0, -0.011400222778320312, -2.3841855067985307e-07, -0.0071659088134765625, 0.0, -0.000186920166015625, -0.00623321533203125, -1.9073486328125e-06, -0.004955291748046875, -3.933898824470816e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.05480384826660156, -2.0265579223632812e-06, -0.0009740591049194336, -3.814697265625e-06, -0.0004596710205078125, -0.1802959442138672, -0.029102325439453125, 0.0, -0.0008391141891479492, -4.100737351109274e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004055023193359375, 0.0, -0.0044460296630859375, -2.2649765014648438e-06, -0.0005487203598022461, -1.9073486328125e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00039196014404296875, -1.1920928244535389e-07, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, 0.0, -0.012475967407226562, -3.576278118089249e-07, -1.9073486328125e-06, -0.00015306472778320312, -2.6225792680634186e-05, -0.0012054443359375, -0.001140594482421875, -0.0008716583251953125, -0.000743865966796875, -0.0001087188720703125, -0.00125885009765625, -4.1961669921875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -6.747218139935285e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0011806488037109375, 0.0, -0.0001068115234375, -1.3470649719238281e-05, -0.0007960795774124563, -1.9073486328125e-06, -0.000164031982421875, -0.00041961669921875, -9.5367431640625e-06, -0.000354766845703125, -3.814697265625e-06, -0.0017063617706298828, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Animal", "Companion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 17, 120, 210, 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 60, 93, 208, 37, 125, "card", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Huffer()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -4.88693421666914, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template4", "hole0": "Animal Companion", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Huffer", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}]}}, {"_type": "Assign", "targets": [{"id": "card", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "card", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 7}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}, "hole1": [{"_type": "Lt"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "AnimalCompanion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.00019560330838430673, -0.0019712080247700214, -0.0009434557869099081, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00010156629286939278, -6.318092346191406e-06, -1.71661376953125e-05, -0.003154754638671875, -0.002330780029296875, -0.00264739990234375, -1.1444026313256472e-05, -3.814697265625e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.6927573597058654e-05, -3.8146954466355965e-06, -0.020366191864013672, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0007891654968261719, -1.1920928244535389e-07, -6.4849853515625e-05, -0.0001049041748046875, 0.0, -2.861022494471399e-06, 0.0, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, 0.0, -9.655952453613281e-06, -1.0371208190917969e-05, -0.20910358428955078, -0.0004291534423828125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -9.417505680175964e-06, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -0.0001544952392578125, 0.0, 0.0, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -7.748603820800781e-06, -4.5656361180590466e-05, -0.016269683837890625, -1.33514404296875e-05, -0.0001068115234375, -5.91278076171875e-05, 0.0, -0.0017075524665415287, -1.9788545614574105e-05, -0.06723976135253906, -0.0043354034423828125, -0.015641212463378906, -0.000537872314453125, -0.000896453857421875, -0.0001430511474609375, -0.0004444122314453125, -0.0001659393310546875, -0.0002536773681640625, -0.002532958984375, -0.000537872314453125, -0.012041091918945312, -0.0002651214599609375, -0.0409698486328125, 0.0, -0.0005514621734619141, -3.814697265625e-05, -0.0033559799194335938, -0.000102996826171875, -0.0022317166440188885, -6.914138793945312e-05, -0.014428973197937012, -0.00011634825932560489, -1.055777907371521, -0.0006862878799438477, -0.0002536773681640625, -0.000156402587890625, -4.57763671875e-05, -0.0002994537353515625, -3.814697265625e-05, -0.000186920166015625, -0.00153350830078125, -4.9591064453125e-05, -0.03755760192871094, -4.00543212890625e-05, -0.011991500854492188, 0.0, -0.0004482269287109375, -0.000102996826171875, -0.0032262802124023438, -3.814697265625e-05, -0.0028649510350078344, -0.0003421306610107422, -0.012038946151733398, -0.0002572536177467555, -1.9529486894607544, -0.00011646747589111328, -0.0016508102416992188, -0.000152587890625, -7.62939453125e-05, -0.00084686279296875, -3.24249267578125e-05, -0.00017547607421875, -0.0010623931884765625, -8.96453857421875e-05, -0.0071506500244140625, -3.62396240234375e-05, -0.06025886535644531, 0.0, -0.00054168701171875, -7.43865966796875e-05, -0.0038709640502929688, -4.00543212890625e-05, -0.002467864193022251, -0.0003439188003540039, -0.011899948120117188, -0.000240206703892909, -0.8210066556930542, -0.0010405778884887695, -0.0010318756103515625, -9.34600830078125e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.01643359661102295, -2.9802276912960224e-06, -0.000385284423828125, -0.0001068115234375, -0.0006771087646484375, 0.0, -0.0045928955078125, 0.0, -0.0058879852294921875, -8.583032467868179e-06, -0.009679196402430534, 0.0, -0.08520126342773438, -0.0009021759033203125, 0.0, -0.00900578498840332, -0.0002146732877008617, -0.001491546630859375, -3.4332275390625e-05, -2.47955322265625e-05, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.0001735687255859375, 0.0, -0.011690139770507812, -2.3841855067985307e-07, -0.007168769836425781, 0.0, -0.000186920166015625, -0.006171226501464844, -1.9073486328125e-06, -0.004834175109863281, -3.933898824470816e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.05478668212890625, -2.0265579223632812e-06, -0.0009750127792358398, -3.814697265625e-06, -0.000461578369140625, -0.1797027587890625, -0.029027938842773438, 0.0, -0.0008429288864135742, -4.100737351109274e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.0040569305419921875, 0.0, -0.004444122314453125, -2.2649765014648438e-06, -0.0005487203598022461, -1.9073486328125e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.0003910064697265625, -1.1920928244535389e-07, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, 0.0, -0.012456893920898438, -3.576278118089249e-07, -1.9073486328125e-06, -0.00015306472778320312, -2.6225792680634186e-05, -0.0012063980102539062, -0.0011425018310546875, -0.0008697509765625, -0.000743865966796875, -0.0001087188720703125, -0.00125885009765625, -4.1961669921875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -6.747218139935285e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0011806488037109375, 0.0, -0.0001068115234375, -1.1563301086425781e-05, -0.0007941722287796438, -1.9073486328125e-06, -0.000164031982421875, -0.00041961669921875, -9.5367431640625e-06, -0.000354766845703125, -3.814697265625e-06, -0.0017063617706298828, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Animal", "Companion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 17, 120, 210, 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 93, 208, 37, 125, "card", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Huffer(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"score": -22.38798713684082, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -22.387977600097656], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 2}
{"beams": [{"score": -0.15521083439915628, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Explosion", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneExplosion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -4.732529851025902e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.254413604736328e-05, -3.1948089599609375e-05, -5.7220458984375e-06, -0.00017547607421875, -0.01834392547607422, -0.00045013427734375, -4.470248313737102e-05, -4.172325134277344e-05, -7.867813110351562e-06, 0.0, -5.125993993715383e-06, -1.6689286894688848e-06, -0.06945490837097168, -4.768370445162873e-07, -0.0029697418212890625, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -6.103515625e-05, -3.62396240234375e-05, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-06, -0.000164031982421875, -3.814697265625e-06, -0.04518699645996094, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.52587890625e-05, 0.0, -3.814697265625e-05, 0.0, -4.410743713378906e-06, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -0.0001010894775390625, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -6.29425048828125e-05, -6.520748138427734e-05, -0.0002002716064453125, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.0002846717834472656, -1.8238888515043072e-05, -0.0002651214599609375, -0.000274658203125, -0.0002956390380859375, 0.0, -3.814697265625e-05, 0.0, -0.0001277923583984375, -5.960462772236497e-07, -0.00019848346710205078, 0.0, -0.0005435943603515625, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.000286102294921875, -1.9073486328125e-06, -0.00077056884765625, -1.71661376953125e-05, -0.0011883974075317383, 0.0, -9.119509923039004e-05, 0.0, -0.0002460479736328125, -0.0001239776611328125, -2.288818359375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -0.0014362335205078125, -3.814697265625e-06, -0.004463315010070801, -4.887569048150908e-06, -0.0004311800003051758, 0.0, -1.9073486328125e-06, -0.0016078948974609375, -0.000385284423828125, -0.003579838899895549, -7.534006726928055e-05, -3.814697265625e-05, -0.0001316070556640625, -7.43865966796875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Explosion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -3.070123296635586, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template6", "hole0": "Arcane Explosion", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneExplosion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -4.732529851025902e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.254413604736328e-05, -3.1948089599609375e-05, -5.7220458984375e-06, -0.00017547607421875, -0.01834392547607422, -0.00045013427734375, -4.470248313737102e-05, -4.172325134277344e-05, -7.867813110351562e-06, 0.0, -5.125993993715383e-06, -1.6689286894688848e-06, -2.9311864376068115, 0.0, -0.02220916748046875, -3.814697265625e-06, -0.00013184547424316406, 0.0, -4.38690185546875e-05, -3.24249267578125e-05, 0.0, -2.491474151611328e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -3.814697265625e-06, -0.00020802021026611328, -5.7220458984375e-06, -0.07901477813720703, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -3.814697265625e-05, 0.0, -4.410743713378906e-06, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, -6.29425048828125e-05, -0.0001049041748046875, -9.1552734375e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -6.29425048828125e-05, -6.330013275146484e-05, -0.0002155303955078125, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.0002827644348144531, -1.8119681044481695e-05, -0.000263214111328125, -0.000274658203125, -0.0002956390380859375, 0.0, -3.814697265625e-05, 0.0, -0.0001277923583984375, -5.960462772236497e-07, -0.00019848346710205078, 0.0, -0.0005435943603515625, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.000286102294921875, -1.9073486328125e-06, -0.0007724761962890625, -1.71661376953125e-05, -0.0011883974075317383, 0.0, -9.119509923039004e-05, 0.0, -0.0002460479736328125, -0.0001239776611328125, -2.288818359375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -0.001438140869140625, -3.814697265625e-06, -0.004455685615539551, -4.887569048150908e-06, -0.0004311800003051758, 0.0, -1.9073486328125e-06, -0.0016078948974609375, -0.000385284423828125, -0.0035778123419731855, -7.534006726928055e-05, -3.814697265625e-05, -0.0001316070556640625, -7.43865966796875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Explosion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -4.071910780724124, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Explosion", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "extend", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "current_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneExplosion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -4.732529851025902e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.254413604736328e-05, -3.1948089599609375e-05, -5.7220458984375e-06, -0.00017547607421875, -0.01834392547607422, -0.00045013427734375, -4.470248313737102e-05, -4.172325134277344e-05, -7.867813110351562e-06, 0.0, -5.125993993715383e-06, -1.6689286894688848e-06, -0.06945490837097168, -4.768370445162873e-07, -0.0029697418212890625, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -6.103515625e-05, -3.62396240234375e-05, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-06, -0.000164031982421875, -3.814697265625e-06, -3.8410873413085938, -3.814697265625e-06, -3.814697265625e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -3.4332275390625e-05, 0.0, -6.198883056640625e-06, 0.0, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -0.0001049041748046875, -3.0517578125e-05, -0.000152587890625, 0.0, -3.0517578125e-05, -3.814697265625e-06, -5.7220458984375e-05, -4.494190216064453e-05, -0.001796722412109375, -2.47955322265625e-05, -0.0001392364501953125, -0.0014133453369140625, -9.5367431640625e-06, -0.004092216491699219, -3.814697265625e-06, -5.91278076171875e-05, -1.33514404296875e-05, -5.14984130859375e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0001201629638671875, -1.680836794548668e-05, -0.0008573532104492188, 0.0, -0.0008182525634765625, -2.47955322265625e-05, -1.1444091796875e-05, -2.09808349609375e-05, -9.5367431640625e-06, -0.0002079010009765625, -1.9073486328125e-06, -0.00069427490234375, -2.09808349609375e-05, -0.00133514404296875, 0.0, -8.714198338566348e-05, 0.0, -0.005535125732421875, -9.1552734375e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.014187812805175781, -1.9073486328125e-06, -0.0029993057250976562, -1.9073486328125e-06, -0.010936737060546875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -0.00055694580078125, -7.2479248046875e-05, -0.000370025634765625, -2.86102294921875e-05, -0.000995635986328125, -3.457069396972656e-05, -0.0429002046585083, 0.0, -0.0022090673446655273, 0.0, -0.00809478759765625, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.0013837814331054688, -2.2649765014648438e-06, -0.009234428405761719, -0.0013885498046875, -0.0023441314697265625, 0.0, -0.0029382705688476562, -0.0048656463623046875, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0003604888916015625, -1.71661376953125e-05, -0.0020399093627929688, -3.099436753473128e-06, -0.0038805007934570312, 0.0, -1.9073486328125e-06, -0.0038728713989257812, -0.0002117156982421875, -0.004319830797612667, -5.257126031210646e-05, -1.71661376953125e-05, -9.1552734375e-05, -6.771087646484375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Explosion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -4.578547220984547, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Explosion", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneExplosion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -4.732529851025902e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.254413604736328e-05, -3.1948089599609375e-05, -5.7220458984375e-06, -0.00017547607421875, -0.01834392547607422, -0.00045013427734375, -4.470248313737102e-05, -4.172325134277344e-05, -7.867813110351562e-06, 0.0, -5.125993993715383e-06, -1.6689286894688848e-06, -0.06945490837097168, -4.768370445162873e-07, -0.0029697418212890625, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -6.103515625e-05, -3.62396240234375e-05, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-06, -0.000164031982421875, -3.814697265625e-06, -4.037300109863281, -1.9073486328125e-06, -6.103515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -4.291534423828125e-06, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, -0.0001392364501953125, -0.000118255615234375, -0.0001087188720703125, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -6.103515625e-05, -6.008148193359375e-05, -0.006720542907714844, -6.67572021484375e-05, -8.392333984375e-05, -1.9073486328125e-06, -0.0003757476806640625, -5.841247457283316e-06, -0.00040435791015625, -0.00043487548828125, -0.0001430511474609375, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.000133514404296875, -8.344646857949556e-07, -0.00017940998077392578, 0.0, -0.000461578369140625, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0002727508544921875, -1.9073486328125e-06, -0.000751495361328125, -1.71661376953125e-05, -0.0011712312698364258, 0.0, -9.107588994083926e-05, 0.0, -0.000156402587890625, -0.000133514404296875, -2.09808349609375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -0.00130462646484375, -3.814697265625e-06, -0.006334424018859863, -5.245195097813848e-06, -0.0004044771194458008, 0.0, -1.9073486328125e-06, -0.001705169677734375, -0.000370025634765625, -0.0035872296430170536, -7.307510531973094e-05, -4.00543212890625e-05, -0.0001277923583984375, -7.2479248046875e-05, 0.0, -0.3089752197265625, -3.814697265625e-06, -0.000179290771484375, -0.07146072387695312, -4.1961669921875e-05, -0.000286102294921875, -0.011014938354492188, -3.814697265625e-06, -0.0245819091796875, -2.1457672119140625e-06, -0.005972146987915039, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Explosion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -5.197747094062208, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Arcane Explosion", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneExplosion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -4.732529851025902e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.254413604736328e-05, -3.1948089599609375e-05, -5.7220458984375e-06, -0.00017547607421875, -4.857086181640625, -0.0002574920654296875, -9.655922440288123e-06, -4.088878631591797e-05, -1.919269561767578e-05, -1.9073486328125e-06, -6.4373016357421875e-06, -4.887569048150908e-06, -0.11556637287139893, 0.0, -0.0009355545043945312, -1.33514404296875e-05, -6.306171417236328e-05, 0.0, -2.6702880859375e-05, -4.1961669921875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -3.814697265625e-06, -0.00012028217315673828, -5.841255187988281e-06, -0.2051982879638672, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, 0.0, -3.814697265625e-05, 0.0, -4.410743713378906e-06, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -6.29425048828125e-05, -0.0001068115234375, -9.34600830078125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -6.29425048828125e-05, -6.711483001708984e-05, -0.0002231597900390625, -1.9073486328125e-05, -2.288818359375e-05, 0.0, -0.0002837181091308594, -1.8238888515043072e-05, -0.0002574920654296875, -0.000274658203125, -0.000301361083984375, 0.0, -3.62396240234375e-05, 0.0, -0.000125885009765625, -5.960462772236497e-07, -0.00019848346710205078, 0.0, -0.0005474090576171875, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.000286102294921875, -1.9073486328125e-06, -0.00077056884765625, -1.71661376953125e-05, -0.0011883974075317383, 0.0, -9.119509923039004e-05, 0.0, -0.0002460479736328125, -0.0001239776611328125, -2.288818359375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -0.001430511474609375, -3.814697265625e-06, -0.004404187202453613, -4.887569048150908e-06, -0.0004330873489379883, 0.0, -1.9073486328125e-06, -0.0016078948974609375, -0.000385284423828125, -0.0035757857840508223, -7.534006726928055e-05, -3.814697265625e-05, -0.0001316070556640625, -7.43865966796875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Explosion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -5.597364758976539, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template5", "hole0": "Arcane Explosion", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneExplosion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -4.732529851025902e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.254413604736328e-05, -3.1948089599609375e-05, -5.7220458984375e-06, -0.00017547607421875, -4.7494707107543945, -0.000598907470703125, -0.00011491115583339706, -4.470348358154297e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -2.9086782888043672e-05, -1.966933996300213e-05, -0.2613811492919922, -0.00012969970703125, -0.0002422332763671875, -3.814697265625e-06, -0.0001506805419921875, 0.0, -8.20159912109375e-05, -3.0517578125e-05, 0.0, -2.110004425048828e-05, 0.0, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -3.814697265625e-06, -0.00016224384307861328, -7.748603820800781e-06, -0.5663957595825195, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-05, 0.0, -4.1961669921875e-05, 0.0, -2.384185791015625e-06, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -6.67572021484375e-05, -0.00011444091796875, -9.918212890625e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -6.29425048828125e-05, -7.092952728271484e-05, -0.0002422332763671875, -2.09808349609375e-05, -2.288818359375e-05, 0.0, -0.0002856254577636719, -1.9311753931106068e-05, -0.0002536773681640625, -0.0002841949462890625, -0.0002994537353515625, 0.0, -3.62396240234375e-05, 0.0, -0.0001277923583984375, -5.960462772236497e-07, -0.00019848346710205078, 0.0, -0.000545501708984375, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.000286102294921875, -1.9073486328125e-06, -0.0007724761962890625, -1.71661376953125e-05, -0.0011883974075317383, 0.0, -9.119509923039004e-05, 0.0, -0.000247955322265625, -0.0001239776611328125, -2.288818359375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -0.001438140869140625, -3.814697265625e-06, -0.004409909248352051, -4.887569048150908e-06, -0.0004330873489379883, 0.0, -1.9073486328125e-06, -0.0016078948974609375, -0.000385284423828125, -0.0035738784354180098, -7.534006726928055e-05, -3.814697265625e-05, -0.0001316070556640625, -7.43865966796875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Explosion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -5.730588765295522, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Explosion", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneExplosion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -4.732529851025902e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.254413604736328e-05, -3.1948089599609375e-05, -5.7220458984375e-06, -0.00017547607421875, -0.01834392547607422, -0.00045013427734375, -4.470248313737102e-05, -4.172325134277344e-05, -7.867813110351562e-06, 0.0, -5.125993993715383e-06, -1.6689286894688848e-06, -0.06945490837097168, -4.768370445162873e-07, -0.0029697418212890625, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -6.103515625e-05, -3.62396240234375e-05, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-06, -0.000164031982421875, -3.814697265625e-06, -4.037300109863281, -1.9073486328125e-06, -6.103515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -4.291534423828125e-06, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, -0.0001392364501953125, -0.000118255615234375, -0.0001087188720703125, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -6.103515625e-05, -6.008148193359375e-05, -0.006720542907714844, -6.67572021484375e-05, -8.392333984375e-05, -1.9073486328125e-06, -0.0003757476806640625, -5.841247457283316e-06, -0.00040435791015625, -0.00043487548828125, -0.0001430511474609375, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.000133514404296875, -8.344646857949556e-07, -0.00017940998077392578, 0.0, -0.000461578369140625, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0002727508544921875, -1.9073486328125e-06, -0.000751495361328125, -1.71661376953125e-05, -0.0011712312698364258, 0.0, -9.107588994083926e-05, 0.0, -0.000156402587890625, -0.000133514404296875, -2.09808349609375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -0.00130462646484375, -3.814697265625e-06, -0.006334424018859863, -5.245195097813848e-06, -0.0004044771194458008, 0.0, -1.9073486328125e-06, -0.001705169677734375, -0.000370025634765625, -0.0035872296430170536, -7.307510531973094e-05, -4.00543212890625e-05, -0.0001277923583984375, -7.2479248046875e-05, 0.0, -1.3813447952270508, -0.0005130767822265625, -0.023836135864257812, 0.0, -0.0001983642578125, -3.576278118089249e-07, -0.08432292938232422, -7.62939453125e-06, -0.0032787322998046875, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0023708343505859375, 0.0, -0.0019540786743164062, 0.0, -0.00019776701810769737, -7.62939453125e-06, -2.86102294921875e-05, -0.0004787445068359375, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -0.020490646362304688, -7.62939453125e-06, -0.00033867359161376953, -1.311301275563892e-06, -0.045886993408203125, 0.0, -1.9073486328125e-06, -0.0056018829345703125, -0.00014495849609375, -0.0031639249064028263, -4.2676827433751896e-05, -4.1961669921875e-05, -0.0001430511474609375, -6.866455078125e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Explosion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -5.807626706030362, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "Arcane Explosion", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneExplosion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -4.732529851025902e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.254413604736328e-05, -3.1948089599609375e-05, -5.7220458984375e-06, -0.00017547607421875, -0.01834392547607422, -0.00045013427734375, -4.470248313737102e-05, -4.172325134277344e-05, -7.867813110351562e-06, 0.0, -5.125993993715383e-06, -1.6689286894688848e-06, -5.730726718902588, 0.0, -0.0009613037109375, -3.814697265625e-06, -0.00014889240264892578, 0.0, -5.14984130859375e-05, -3.4332275390625e-05, 0.0, -2.491474151611328e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -0.00019466876983642578, -5.7220458984375e-06, -0.038249969482421875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -4.00543212890625e-05, 0.0, -4.410743713378906e-06, 0.0, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -0.000102996826171875, -8.7738037109375e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -6.29425048828125e-05, -6.520748138427734e-05, -0.000202178955078125, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.0002751350402832031, -1.8000473573920317e-05, -0.0002689361572265625, -0.0002727508544921875, -0.0002956390380859375, 0.0, -3.814697265625e-05, 0.0, -0.0001277923583984375, -5.960462772236497e-07, -0.00019657611846923828, 0.0, -0.000545501708984375, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.000286102294921875, -1.9073486328125e-06, -0.00077056884765625, -1.71661376953125e-05, -0.0011883974075317383, 0.0, -9.119509923039004e-05, 0.0, -0.000247955322265625, -0.0001239776611328125, -2.288818359375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -0.001430511474609375, -3.814697265625e-06, -0.004449009895324707, -4.887569048150908e-06, -0.0004311800003051758, 0.0, -1.9073486328125e-06, -0.0016078948974609375, -0.000385284423828125, -0.003575904993340373, -7.522086525568739e-05, -3.814697265625e-05, -0.0001316070556640625, -7.43865966796875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Explosion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -5.831453678993682, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Explosion", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneExplosion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -4.732529851025902e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.254413604736328e-05, -3.1948089599609375e-05, -5.7220458984375e-06, -0.00017547607421875, -0.01834392547607422, -0.00045013427734375, -4.470248313737102e-05, -4.172325134277344e-05, -7.867813110351562e-06, 0.0, -5.125993993715383e-06, -1.6689286894688848e-06, -0.06945490837097168, -4.768370445162873e-07, -0.0029697418212890625, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -6.103515625e-05, -3.62396240234375e-05, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-06, -0.000164031982421875, -3.814697265625e-06, -0.04518699645996094, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.52587890625e-05, 0.0, -3.814697265625e-05, 0.0, -4.410743713378906e-06, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -0.0001010894775390625, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -6.29425048828125e-05, -6.520748138427734e-05, -0.0002002716064453125, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.0002846717834472656, -1.8238888515043072e-05, -0.0002651214599609375, -0.000274658203125, -0.0002956390380859375, 0.0, -3.814697265625e-05, 0.0, -0.0001277923583984375, -5.960462772236497e-07, -0.00019848346710205078, 0.0, -0.0005435943603515625, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.000286102294921875, -1.9073486328125e-06, -0.00077056884765625, -1.71661376953125e-05, -0.0011883974075317383, 0.0, -9.119509923039004e-05, 0.0, -0.0002460479736328125, -0.0001239776611328125, -2.288818359375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -0.0014362335205078125, -3.814697265625e-06, -0.004463315010070801, -4.887569048150908e-06, -0.0004311800003051758, 0.0, -1.9073486328125e-06, -0.0016078948974609375, -0.000385284423828125, -5.679726600646973, -5.686278745997697e-05, -9.5367431640625e-06, -0.0001544952392578125, -0.00019466876983642578, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Explosion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.05745814401854, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Arcane Explosion", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneExplosion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -4.732529851025902e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.254413604736328e-05, -3.1948089599609375e-05, -5.7220458984375e-06, -0.00017547607421875, -0.01834392547607422, -0.00045013427734375, -4.470248313737102e-05, -4.172325134277344e-05, -7.867813110351562e-06, 0.0, -5.125993993715383e-06, -1.6689286894688848e-06, -5.881049633026123, -1.1444026313256472e-05, -0.09285449981689453, 0.0, -9.167194366455078e-05, 0.0, -5.340576171875e-05, -3.0517578125e-05, 0.0, -2.491474151611328e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -3.814697265625e-06, -0.0001544952392578125, -3.814697265625e-06, -0.04596138000488281, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.52587890625e-05, 0.0, -3.814697265625e-05, 0.0, -4.410743713378906e-06, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -0.000102996826171875, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -6.29425048828125e-05, -6.330013275146484e-05, -0.0002002716064453125, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.0002827644348144531, -1.8238888515043072e-05, -0.0002613067626953125, -0.000270843505859375, -0.0002994537353515625, 0.0, -3.814697265625e-05, 0.0, -0.0001277923583984375, -5.960462772236497e-07, -0.00019848346710205078, 0.0, -0.0005435943603515625, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.000286102294921875, -1.9073486328125e-06, -0.00077056884765625, -1.71661376953125e-05, -0.0011883974075317383, 0.0, -9.119509923039004e-05, 0.0, -0.0002460479736328125, -0.0001239776611328125, -2.288818359375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -0.001438140869140625, -3.814697265625e-06, -0.004448056221008301, -4.887569048150908e-06, -0.0004311800003051758, 0.0, -1.9073486328125e-06, -0.0016078948974609375, -0.000385284423828125, -0.003579719690605998, -7.534006726928055e-05, -3.814697265625e-05, -0.0001316070556640625, -7.43865966796875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Explosion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -6.2553741157614695, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template6", "hole0": "Arcane Explosion", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "extend", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "current_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneExplosion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -4.732529851025902e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.254413604736328e-05, -3.1948089599609375e-05, -5.7220458984375e-06, -0.00017547607421875, -0.01834392547607422, -0.00045013427734375, -4.470248313737102e-05, -4.172325134277344e-05, -7.867813110351562e-06, 0.0, -5.125993993715383e-06, -1.6689286894688848e-06, -2.9311864376068115, 0.0, -0.02220916748046875, -3.814697265625e-06, -0.00013184547424316406, 0.0, -4.38690185546875e-05, -3.24249267578125e-05, 0.0, -2.491474151611328e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -3.814697265625e-06, -0.00020802021026611328, -5.7220458984375e-06, -3.1434249877929688, -3.814697265625e-06, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -3.24249267578125e-05, 0.0, -6.198883056640625e-06, 0.0, -2.47955322265625e-05, 0.0, -2.6702880859375e-05, -0.0001068115234375, -3.0517578125e-05, -0.000152587890625, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -5.7220458984375e-05, -4.684925079345703e-05, -0.001819610595703125, -2.47955322265625e-05, -0.0001468658447265625, -0.0014095306396484375, -9.5367431640625e-06, -0.00418853759765625, -3.814697265625e-06, -5.91278076171875e-05, -1.33514404296875e-05, -5.14984130859375e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0001201629638671875, -1.680836794548668e-05, -0.0008554458618164062, 0.0, -0.000827789306640625, -2.47955322265625e-05, -1.1444091796875e-05, -2.09808349609375e-05, -9.5367431640625e-06, -0.0002079010009765625, -1.9073486328125e-06, -0.00069427490234375, -2.09808349609375e-05, -0.0013332366943359375, 0.0, -8.714198338566348e-05, 0.0, -0.00513458251953125, -9.34600830078125e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.014254570007324219, -1.9073486328125e-06, -0.0030355453491210938, -1.9073486328125e-06, -0.010855674743652344, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -0.0005550384521484375, -7.2479248046875e-05, -0.000370025634765625, -2.86102294921875e-05, -0.000995635986328125, -3.457069396972656e-05, -0.04289066791534424, 0.0, -0.0022891759872436523, 0.0, -0.008573532104492188, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.0013790130615234375, -2.2649765014648438e-06, -0.009075164794921875, -0.001392364501953125, -0.0023336410522460938, 0.0, -0.002902984619140625, -0.0048160552978515625, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0003604888916015625, -1.71661376953125e-05, -0.0020475387573242188, -3.099436753473128e-06, -0.003879547119140625, 0.0, -1.9073486328125e-06, -0.0038747787475585938, -0.0002117156982421875, -0.0043195923790335655, -5.257126031210646e-05, -1.71661376953125e-05, -9.1552734375e-05, -6.771087646484375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Explosion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -6.301739848080842, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template5", "hole0": "Arcane Explosion", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "extend", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "current_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneExplosion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -4.732529851025902e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.254413604736328e-05, -3.1948089599609375e-05, -5.7220458984375e-06, -0.00017547607421875, -4.7494707107543945, -0.000598907470703125, -0.00011491115583339706, -4.470348358154297e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -2.9086782888043672e-05, -1.966933996300213e-05, -0.2613811492919922, -0.00012969970703125, -0.0002422332763671875, -3.814697265625e-06, -0.0001506805419921875, 0.0, -8.20159912109375e-05, -3.0517578125e-05, 0.0, -2.110004425048828e-05, 0.0, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -3.814697265625e-06, -0.00016224384307861328, -7.748603820800781e-06, -1.149001121520996, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -2.6702880859375e-05, 0.0, -4.172325134277344e-06, 0.0, -2.288818359375e-05, 0.0, -2.6702880859375e-05, -0.00011444091796875, -3.62396240234375e-05, -0.0001659393310546875, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -5.91278076171875e-05, -5.269050598144531e-05, -0.0019989013671875, -2.47955322265625e-05, -0.000156402587890625, -0.0013065338134765625, -1.1444091796875e-05, -0.0035915374755859375, -3.814697265625e-06, -5.91278076171875e-05, -1.1444091796875e-05, -4.9591064453125e-05, 0.0, -3.24249267578125e-05, 0.0, -0.000118255615234375, -1.645074735279195e-05, -0.0008544921875, 0.0, -0.000843048095703125, -2.47955322265625e-05, -1.1444091796875e-05, -2.09808349609375e-05, -9.5367431640625e-06, -0.0002079010009765625, -1.9073486328125e-06, -0.00069427490234375, -2.09808349609375e-05, -0.0013332366943359375, 0.0, -8.714198338566348e-05, 0.0, -0.004024505615234375, -9.918212890625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.01515960693359375, -1.9073486328125e-06, -0.00304412841796875, -1.9073486328125e-06, -0.010569572448730469, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -0.000560760498046875, -7.43865966796875e-05, -0.000370025634765625, -2.86102294921875e-05, -0.00099945068359375, -3.457069396972656e-05, -0.04320251941680908, 0.0, -0.002093672752380371, 0.0, -0.010385513305664062, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.001338958740234375, -2.2649765014648438e-06, -0.009165763854980469, -0.001468658447265625, -0.0022935867309570312, 0.0, -0.0028219223022460938, -0.004749298095703125, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0003566741943359375, -1.71661376953125e-05, -0.0020856857299804688, -3.099436753473128e-06, -0.0038623809814453125, 0.0, -1.9073486328125e-06, -0.0038957595825195312, -0.0002117156982421875, -0.004321142565459013, -5.257126031210646e-05, -1.71661376953125e-05, -9.1552734375e-05, -6.771087646484375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Explosion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -6.5268604737365195, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Explosion", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneExplosion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -4.732529851025902e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.254413604736328e-05, -3.1948089599609375e-05, -5.7220458984375e-06, -0.00017547607421875, -0.01834392547607422, -0.00045013427734375, -4.470248313737102e-05, -4.172325134277344e-05, -7.867813110351562e-06, 0.0, -5.125993993715383e-06, -1.6689286894688848e-06, -0.06945490837097168, -4.768370445162873e-07, -0.0029697418212890625, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -6.103515625e-05, -3.62396240234375e-05, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-06, -0.000164031982421875, -3.814697265625e-06, -6.392946243286133, -0.04118156433105469, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.52587890625e-05, 0.0, -9.918212890625e-05, 0.0, -5.125998541188892e-06, 0.0, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -8.0108642578125e-05, -0.0001468658447265625, -8.392333984375e-05, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -4.38690185546875e-05, -4.839897155761719e-05], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Explosion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n"}, {"score": -6.603787046318814, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "Did", "_type": "Template6", "hole0": "Arcane Explosion", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneExplosion", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -4.732529851025902e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.254413604736328e-05, -3.1948089599609375e-05, -5.7220458984375e-06, -0.00017547607421875, -0.01834392547607422, -0.00045013427734375, -4.470248313737102e-05, -4.172325134277344e-05, -7.867813110351562e-06, 0.0, -5.125993993715383e-06, -1.6689286894688848e-06, -6.513123512268066, -1.1920922133867862e-06, -0.006846427917480469, -3.814697265625e-06, -0.0002557039260864258, 0.0, -7.2479248046875e-05, -3.4332275390625e-05, 0.0, -2.3126602172851562e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -3.814697265625e-06, -0.0002574920654296875, -3.814697265625e-06, -0.04592704772949219, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -4.00543212890625e-05, 0.0, -4.410743713378906e-06, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, -6.29425048828125e-05, -0.0001010894775390625, -8.7738037109375e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -6.29425048828125e-05, -6.330013275146484e-05, -0.0001964569091796875, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.0002884864807128906, -1.871571657829918e-05, -0.0002613067626953125, -0.0002727508544921875, -0.0002956390380859375, 0.0, -3.814697265625e-05, 0.0, -0.0001277923583984375, -5.960462772236497e-07, -0.00019848346710205078, 0.0, -0.0005435943603515625, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.000286102294921875, -1.9073486328125e-06, -0.00077056884765625, -1.71661376953125e-05, -0.0011883974075317383, 0.0, -9.119509923039004e-05, 0.0, -0.000247955322265625, -0.0001239776611328125, -2.288818359375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -0.001438140869140625, -3.814697265625e-06, -0.004457592964172363, -4.887569048150908e-06, -0.0004311800003051758, 0.0, -1.9073486328125e-06, -0.0016078948974609375, -0.000385284423828125, -0.003579719690605998, -7.534006726928055e-05, -3.814697265625e-05, -0.0001316070556640625, -7.43865966796875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Explosion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "Did", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.Did,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -23.720975875854492, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -23.720970153808594], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 3}
{"beams": [{"score": -0.2721697120531985, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Intellect", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "_type": "For", "target": {"id": "c", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneIntellect", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -7.784063927829266e-05, -4.136505594942719e-05, -0.0006580743356607854, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0010771751403808594, -5.7220440794480965e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.024137496948242188, -0.000255584716796875, -0.001912789884954691, -0.0001342296600341797, -2.1219253540039062e-05, -1.9073486328125e-06, -5.364409389585489e-06, -7.152555099310121e-07, -0.20325279235839844, -2.8132995794294402e-05, -0.0009784698486328125, -1.9073486328125e-06, -1.4901160284352954e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.447862349683419e-05, -1.1920928244535389e-07, -2.09808349609375e-05, -1.3470649719238281e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0001895427703857422, -1.7881340681924485e-05, -0.00394439697265625, -0.0009613037109375, 0.0, 0.0, -7.62939453125e-06, -0.0002841949462890625, 0.0, -0.0006103515625, 0.0, -4.2318933992646635e-05, -2.3841855067985307e-07, -2.491474151611328e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.1920928244535389e-07, -5.14984130859375e-05, -3.814697265625e-06, -1.0132789611816406e-05, -9.369479812448844e-05, -0.0005512237548828125, -9.5367431640625e-06, -0.0002193450927734375, 0.0, -0.012544512748718262, -4.160325261182152e-05, -8.392333984375e-05, -0.0009899139404296875, -0.000179290771484375, -1.9073486328125e-06, -0.0005967617034912109, -5.006777428206988e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00041698600398376584, -1.9073486328125e-06, -0.0010623931884765625, -1.33514404296875e-05, -0.000920221209526062, -2.2649765014648438e-06, -0.0012989044189453125, -0.0002727508544921875, -1.1444091796875e-05, -2.288818359375e-05, -0.005657196044921875, -2.86102294921875e-05, -1.9073486328125e-06, -0.000301361083984375, 0.0, -0.0009183883666992188, -1.2636104656849056e-05, -0.006751039065420628, -2.503394853192731e-06], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Intellect", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "c", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -2.5978758266737216, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Arcane Intellect", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "_type": "For", "target": {"id": "c", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneIntellect", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -7.784063927829266e-05, -4.136505594942719e-05, -0.0006580743356607854, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0010771751403808594, -5.7220440794480965e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.024137496948242188, -0.000255584716796875, -0.001912789884954691, -0.0001342296600341797, -2.1219253540039062e-05, -1.9073486328125e-06, -5.364409389585489e-06, -7.152555099310121e-07, -2.5261154174804688, -0.0002522150462027639, -0.002277374267578125, -1.9073486328125e-06, -1.5854835510253906e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.125997995492071e-05, -1.1920928244535389e-07, -2.47955322265625e-05, -1.537799835205078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -0.00020134449005126953, -2.1219184418441728e-05, -0.0053234100341796875, -0.0009288787841796875, 0.0, 0.0, -5.7220458984375e-06, -0.000244140625, 0.0, -0.000614166259765625, 0.0, -4.3510990508366376e-05, -2.3841855067985307e-07, -2.491474151611328e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.1920928244535389e-07, -5.14984130859375e-05, -3.814697265625e-06, -1.0132789611816406e-05, -9.429079364053905e-05, -0.000606536865234375, -9.5367431640625e-06, -0.0002193450927734375, 0.0, -0.012567400932312012, -4.172245826339349e-05, -8.20159912109375e-05, -0.0009899139404296875, -0.0001773834228515625, -1.9073486328125e-06, -0.0005948543548583984, -5.006777428206988e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00041758199222385883, -1.9073486328125e-06, -0.001049041748046875, -1.33514404296875e-05, -0.0009170249104499817, -2.2649765014648438e-06, -0.0013103485107421875, -0.000274658203125, -1.1444091796875e-05, -2.09808349609375e-05, -0.005626678466796875, -2.86102294921875e-05, -1.9073486328125e-06, -0.0002956390380859375, 0.0, -0.0009164810180664062, -1.2636104656849056e-05, -0.006709076929837465, -2.503394853192731e-06], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Intellect", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "c", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -2.8096970043239438, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "Arcane Intellect", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "_type": "For", "target": {"id": "c", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneIntellect", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -7.784063927829266e-05, -4.136505594942719e-05, -0.0006580743356607854, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0010771751403808594, -5.7220440794480965e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.024137496948242188, -0.000255584716796875, -0.001912789884954691, -0.0001342296600341797, -2.1219253540039062e-05, -1.9073486328125e-06, -5.364409389585489e-06, -7.152555099310121e-07, -2.736825942993164, -8.344646857949556e-07, -0.0040531158447265625, -1.9073486328125e-06, -2.956390380859375e-05, 0.0, 0.0, -1.52587890625e-05, 0.0, -4.529951547738165e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -1.537799835205078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -0.0001933574676513672, -1.9669481844175607e-05, -0.005116462707519531, -0.00086212158203125, 0.0, 0.0, -7.62939453125e-06, -0.000244140625, 0.0, -0.0006866455078125, 0.0, -4.601431282935664e-05, -2.3841855067985307e-07, -2.491474151611328e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -9.72747802734375e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.1920928244535389e-07, -5.14984130859375e-05, -3.814697265625e-06, -1.0132789611816406e-05, -9.405239688931033e-05, -0.000545501708984375, -9.5367431640625e-06, -0.0002231597900390625, 0.0, -0.012526392936706543, -4.100723162991926e-05, -8.20159912109375e-05, -0.0009899139404296875, -0.000179290771484375, -1.9073486328125e-06, -0.0005967617034912109, -5.006777428206988e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00041758199222385883, -1.9073486328125e-06, -0.001018524169921875, -1.33514404296875e-05, -0.0009138733148574829, -2.2649765014648438e-06, -0.0013103485107421875, -0.000274658203125, -1.1444091796875e-05, -2.288818359375e-05, -0.00559234619140625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0002918243408203125, 0.0, -0.0009107589721679688, -1.2636104656849056e-05, -0.006666876375675201, -2.503394853192731e-06], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Intellect", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "c", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -4.015063757266667, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template6", "hole0": "Arcane Intellect", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "_type": "For", "target": {"id": "c", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneIntellect", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -7.784063927829266e-05, -4.136505594942719e-05, -0.0006580743356607854, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0010771751403808594, -5.7220440794480965e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.024137496948242188, -0.000255584716796875, -0.001912789884954691, -0.0001342296600341797, -2.1219253540039062e-05, -1.9073486328125e-06, -5.364409389585489e-06, -7.152555099310121e-07, -3.936452865600586, -2.622604142743512e-06, -0.010318756103515625, -1.9073486328125e-06, -1.0371208190917969e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.376338231144473e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -1.3470649719238281e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0001895427703857422, -1.8119757442036644e-05, -0.00464630126953125, -0.001087188720703125, 0.0, 0.0, -5.7220458984375e-06, -0.0002689361572265625, 0.0, -0.0005359649658203125, 0.0, -3.790829941863194e-05, -2.3841855067985307e-07, -2.300739288330078e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -1.52587890625e-05, -1.1920928244535389e-07, -5.14984130859375e-05, -3.814697265625e-06, -1.0132789611816406e-05, -9.417159162694588e-05, -0.000591278076171875, -9.5367431640625e-06, -0.0002193450927734375, 0.0, -0.01231074333190918, -4.1364844946656376e-05, -8.20159912109375e-05, -0.0009899139404296875, -0.000179290771484375, -1.9073486328125e-06, -0.0006005764007568359, -5.006777428206988e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000416270864661783, -1.9073486328125e-06, -0.001010894775390625, -1.33514404296875e-05, -0.0009165182709693909, -2.2649765014648438e-06, -0.0013141632080078125, -0.0002765655517578125, -1.1444091796875e-05, -2.09808349609375e-05, -0.0056667327880859375, -2.86102294921875e-05, -1.9073486328125e-06, -0.0002880096435546875, 0.0, -0.000919342041015625, -1.2755313036905136e-05, -0.006634689401835203, -2.503394853192731e-06], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Intellect", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "c", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -4.895748129184945, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Arcane Intellect", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "_type": "For", "target": {"id": "c", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneIntellect", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -7.784063927829266e-05, -4.136505594942719e-05, -0.0006580743356607854, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0010771751403808594, -5.7220440794480965e-06, -1.9073486328125e-06, -2.288818359375e-05, -4.2213640213012695, -0.0001811981201171875, -0.00014363715308718383, -0.00010132789611816406, -0.00035512447357177734, -3.24249267578125e-05, -7.271760750882095e-06, -2.264974000354414e-06, -0.6312731504440308, -1.1801719665527344e-05, -0.000362396240234375, 0.0, -1.823902130126953e-05, -1.1920928244535389e-07, 0.0, -2.288818359375e-05, 0.0, -5.2690502343466505e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0001633167266845703, -1.9073420844506472e-05, -0.0046844482421875, -0.0009746551513671875, 0.0, 0.0, -5.7220458984375e-06, -0.000225067138671875, 0.0, -0.0007381439208984375, 0.0, -4.637192978407256e-05, -2.3841855067985307e-07, -2.300739288330078e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -9.72747802734375e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.1920928244535389e-07, -5.14984130859375e-05, -3.814697265625e-06, -1.0132789611816406e-05, -9.44099883781746e-05, -0.0005626678466796875, -9.5367431640625e-06, -0.00022125244140625, 0.0, -0.012442588806152344, -4.3033709516748786e-05, -8.0108642578125e-05, -0.000988006591796875, -0.000179290771484375, -1.9073486328125e-06, -0.0005987882614135742, -5.245195097813848e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004161516553722322, -1.9073486328125e-06, -0.001087188720703125, -1.52587890625e-05, -0.0009309053421020508, -2.1457672119140625e-06, -0.0011425018310546875, -0.0003108978271484375, -1.1444091796875e-05, -2.09808349609375e-05, -0.0055065155029296875, -2.86102294921875e-05, -1.9073486328125e-06, -0.000301361083984375, 0.0, -0.0009212493896484375, -1.2636104656849056e-05, -0.006761648692190647, -2.503394853192731e-06], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Intellect", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "c", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -5.034616848687534, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Intellect", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneIntellect", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -7.784063927829266e-05, -4.136505594942719e-05, -0.0006580743356607854, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0010771751403808594, -5.7220440794480965e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.024137496948242188, -0.000255584716796875, -0.001912789884954691, -0.0001342296600341797, -2.1219253540039062e-05, -1.9073486328125e-06, -5.364409389585489e-06, -7.152555099310121e-07, -0.20325279235839844, -2.8132995794294402e-05, -0.0009784698486328125, -1.9073486328125e-06, -1.4901160284352954e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.447862349683419e-05, -1.1920928244535389e-07, -2.09808349609375e-05, -1.3470649719238281e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0001895427703857422, -1.7881340681924485e-05, -0.00394439697265625, -0.0009613037109375, 0.0, 0.0, -7.62939453125e-06, -0.0002841949462890625, 0.0, -0.0006103515625, 0.0, -4.2318933992646635e-05, -2.3841855067985307e-07, -2.491474151611328e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.1920928244535389e-07, -5.14984130859375e-05, -3.814697265625e-06, -1.0132789611816406e-05, -9.369479812448844e-05, -0.0005512237548828125, -9.5367431640625e-06, -0.0002193450927734375, 0.0, -4.773237705230713, -1.168244216387393e-05, -0.0001983642578125, -0.00026702880859375, -6.866455078125e-05, -1.9073486328125e-06, -0.0006865262985229492, -4.0531076592742465e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0002876480284612626, -1.9073486328125e-06, -0.002155303955078125, -1.71661376953125e-05, -0.001130513846874237, -2.3841855067985307e-07, -0.0014209747314453125, -0.0002079010009765625, -1.1444091796875e-05, -2.288818359375e-05, -0.006244659423828125, -2.47955322265625e-05, -1.9073486328125e-06, -0.0003757476806640625, 0.0, -0.0008764266967773438, -1.2040065485052764e-05, -0.007316811941564083, -2.503394853192731e-06], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Intellect", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            player.draw()\n"}, {"score": -5.058917942036203, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "SHAMAN", "_type": "Template6", "hole0": "Arcane Intellect", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "_type": "For", "target": {"id": "c", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneIntellect", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -7.784063927829266e-05, -4.136505594942719e-05, -0.0006580743356607854, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0010771751403808594, -5.7220440794480965e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.024137496948242188, -0.000255584716796875, -0.001912789884954691, -0.0001342296600341797, -2.1219253540039062e-05, -1.9073486328125e-06, -5.364409389585489e-06, -7.152555099310121e-07, -4.962747097015381, -1.1920928244535389e-07, -0.028806686401367188, 0.0, -2.002716064453125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.947184061165899e-05, -1.1920928244535389e-07, -2.47955322265625e-05, -1.3470649719238281e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0001761913299560547, -1.7642923921812326e-05, -0.0035152435302734375, -0.0010528564453125, 0.0, 0.0, -7.62939453125e-06, -0.0002765655517578125, 0.0, -0.00060272216796875, 0.0, -4.041163265355863e-05, -2.3841855067985307e-07, -2.300739288330078e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.1920928244535389e-07, -5.14984130859375e-05, -3.814697265625e-06, -1.0132789611816406e-05, -9.429079364053905e-05, -0.0005588531494140625, -9.5367431640625e-06, -0.00022125244140625, 0.0, -0.012498736381530762, -4.172245826339349e-05, -8.392333984375e-05, -0.0009860992431640625, -0.000179290771484375, -1.9073486328125e-06, -0.0005986690521240234, -5.125986263010418e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00041650922503322363, -1.9073486328125e-06, -0.0010280609130859375, -1.33514404296875e-05, -0.0009173005819320679, -2.2649765014648438e-06, -0.001316070556640625, -0.000274658203125, -1.1444091796875e-05, -2.288818359375e-05, -0.00562286376953125, -2.86102294921875e-05, -1.9073486328125e-06, -0.0002918243408203125, 0.0, -0.0009136199951171875, -1.2636104656849056e-05, -0.0066815391182899475, -2.503394853192731e-06], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Intellect", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "c", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -5.544433667496982, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template5", "hole0": "Arcane Intellect", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "_type": "For", "target": {"id": "c", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneIntellect", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -7.784063927829266e-05, -4.136505594942719e-05, -0.0006580743356607854, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0010771751403808594, -5.7220440794480965e-06, -1.9073486328125e-06, -2.288818359375e-05, -5.095067024230957, -0.000148773193359375, -0.0016812250250950456, -5.4955482482910156e-05, -0.0033206939697265625, -0.0064907073974609375, -4.9112924898508936e-05, 0.0, -0.380520224571228, -2.3841855067985307e-07, -0.0001621246337890625, -3.814697265625e-06, -8.976459503173828e-05, 0.0, 0.0, -2.288818359375e-05, 0.0, -4.3988209654344246e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -1.728534698486328e-05, -2.1457672119140625e-06, -1.71661376953125e-05, -0.00023245811462402344, -2.19344328797888e-05, -0.02016735076904297, -0.0006008148193359375, 0.0, 0.0, -7.62939453125e-06, -0.00020599365234375, 0.0, -0.0006999969482421875, 0.0, -4.637186793843284e-05, -2.3841855067985307e-07, -2.491474151611328e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -9.72747802734375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -3.814697265625e-06, -1.0132789611816406e-05, -9.405239688931033e-05, -0.0006160736083984375, -9.5367431640625e-06, -0.000225067138671875, 0.0, -0.012356877326965332, -4.100723162991926e-05, -7.62939453125e-05, -0.0009708404541015625, -0.0001773834228515625, -1.9073486328125e-06, -0.0005948543548583984, -5.245195097813848e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00041782064363360405, -1.9073486328125e-06, -0.0009670257568359375, -1.33514404296875e-05, -0.0009136795997619629, -2.1457672119140625e-06, -0.001331329345703125, -0.0002841949462890625, -1.1444091796875e-05, -2.288818359375e-05, -0.0055103302001953125, -2.86102294921875e-05, -1.9073486328125e-06, -0.0002841949462890625, 0.0, -0.000911712646484375, -1.2755313036905136e-05, -0.006617642007768154, -2.503394853192731e-06], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Intellect", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "c", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -5.719018245169707, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Intellect", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "player", "_type": "Name"}}}}], "_type": "For", "target": {"id": "c", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneIntellect", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -7.784063927829266e-05, -4.136505594942719e-05, -0.0006580743356607854, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0010771751403808594, -5.7220440794480965e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.024137496948242188, -0.000255584716796875, -0.001912789884954691, -0.0001342296600341797, -2.1219253540039062e-05, -1.9073486328125e-06, -5.364409389585489e-06, -7.152555099310121e-07, -0.20325279235839844, -2.8132995794294402e-05, -0.0009784698486328125, -1.9073486328125e-06, -1.4901160284352954e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.447862349683419e-05, -1.1920928244535389e-07, -2.09808349609375e-05, -1.3470649719238281e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0001895427703857422, -1.7881340681924485e-05, -0.00394439697265625, -0.0009613037109375, 0.0, 0.0, -7.62939453125e-06, -0.0002841949462890625, 0.0, -0.0006103515625, 0.0, -4.2318933992646635e-05, -2.3841855067985307e-07, -2.491474151611328e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.1920928244535389e-07, -5.14984130859375e-05, -3.814697265625e-06, -1.0132789611816406e-05, -9.369479812448844e-05, -0.0005512237548828125, -9.5367431640625e-06, -0.0002193450927734375, 0.0, -0.012544512748718262, -4.160325261182152e-05, -8.392333984375e-05, -0.0009899139404296875, -0.000179290771484375, -1.9073486328125e-06, -0.0005967617034912109, -5.006777428206988e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00041698600398376584, -1.9073486328125e-06, -0.0010623931884765625, -1.33514404296875e-05, -0.000920221209526062, -2.2649765014648438e-06, -0.0012989044189453125, -0.0002727508544921875, -1.1444091796875e-05, -2.288818359375e-05, -0.005657196044921875, -2.86102294921875e-05, -1.9073486328125e-06, -0.000301361083984375, 0.0, -0.0009183883666992188, -1.2636104656849056e-05, -5.453541278839111, -6.079673767089844e-05], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Intellect", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "c", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.<UNK>()\n"}, {"score": -5.8819979325412035, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Arcane Intellect", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "_type": "For", "target": {"id": "c", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneIntellect", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -7.784063927829266e-05, -4.136505594942719e-05, -0.0006580743356607854, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0010771751403808594, -5.7220440794480965e-06, -1.9073486328125e-06, -2.288818359375e-05, -4.2213640213012695, -0.0001811981201171875, -0.00014363715308718383, -0.00010132789611816406, -0.00035512447357177734, -3.24249267578125e-05, -7.271760750882095e-06, -2.264974000354414e-06, -1.6170471906661987, -6.222531374078244e-05, -0.00063323974609375, -1.9073486328125e-06, -1.549720582261216e-05, -1.1920928244535389e-07, 0.0, -4.1961669921875e-05, 0.0, -6.270407902775332e-05, 0.0, -7.62939453125e-06, -1.1563301086425781e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -0.00017273426055908203, -1.7881340681924485e-05, -0.0046024322509765625, -0.0008945465087890625, 0.0, 0.0, -7.62939453125e-06, -0.000225067138671875, 0.0, -0.0008029937744140625, 0.0, -4.947120396536775e-05, -2.3841855067985307e-07, -2.491474151611328e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -3.814697265625e-06, -1.0132789611816406e-05, -9.381400013808161e-05, -0.00052642822265625, -9.5367431640625e-06, -0.00022125244140625, 0.0, -0.012578964233398438, -4.315291153034195e-05, -8.392333984375e-05, -0.00098419189453125, -0.0001811981201171875, -1.9073486328125e-06, -0.0005987882614135742, -5.245195097813848e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004163900448475033, -1.9073486328125e-06, -0.00115203857421875, -1.52587890625e-05, -0.0009405612945556641, -2.1457672119140625e-06, -0.00110626220703125, -0.0003070831298828125, -1.1444091796875e-05, -2.09808349609375e-05, -0.0054779052734375, -2.6702880859375e-05, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.0009183883666992188, -1.2516897186287679e-05, -0.006861427798867226, -2.503394853192731e-06], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Intellect", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "c", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -6.003466587500441, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Intellect", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Attribute", "attr": "hand", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 2}]}}], "_type": "For", "target": {"id": "c", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneIntellect", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -7.784063927829266e-05, -4.136505594942719e-05, -0.0006580743356607854, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0010771751403808594, -5.7220440794480965e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.024137496948242188, -0.000255584716796875, -0.001912789884954691, -0.0001342296600341797, -2.1219253540039062e-05, -1.9073486328125e-06, -5.364409389585489e-06, -7.152555099310121e-07, -0.20325279235839844, -2.8132995794294402e-05, -0.0009784698486328125, -1.9073486328125e-06, -1.4901160284352954e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.447862349683419e-05, -1.1920928244535389e-07, -2.09808349609375e-05, -1.3470649719238281e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0001895427703857422, -1.7881340681924485e-05, -0.00394439697265625, -0.0009613037109375, 0.0, 0.0, -7.62939453125e-06, -0.0002841949462890625, 0.0, -0.0006103515625, 0.0, -4.2318933992646635e-05, -2.3841855067985307e-07, -2.491474151611328e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.1920928244535389e-07, -5.14984130859375e-05, -3.814697265625e-06, -1.0132789611816406e-05, -9.369479812448844e-05, -0.0005512237548828125, -9.5367431640625e-06, -0.0002193450927734375, 0.0, -0.012544512748718262, -4.160325261182152e-05, -8.392333984375e-05, -0.0009899139404296875, -0.000179290771484375, -1.9073486328125e-06, -0.0005967617034912109, -5.006777428206988e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00041698600398376584, -1.9073486328125e-06, -0.0010623931884765625, -1.33514404296875e-05, -0.000920221209526062, -2.2649765014648438e-06, -0.0012989044189453125, -0.0002727508544921875, -1.1444091796875e-05, -2.288818359375e-05, -5.21818733215332, -1.9073486328125e-05, -1.9073486328125e-06, -0.22683048248291016, 0.0, -0.000164031982421875, 0.0, -0.0007867813110351562, -9.059865078597795e-06, -0.010887360200285912, -1.6450776456622407e-05, -0.02943694405257702, -1.1920922133867862e-06, -0.002506256103515625, -0.22594738006591797, -3.62396240234375e-05, -0.030140025541186333, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Intellect", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "c", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hand", "<EOS>", "append", "<EOS>", 208, 39, 130, "2", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.hand.append(2)\n"}, {"score": -6.059938649251592, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARLOCK", "_type": "Template6", "hole0": "Arcane Intellect", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "_type": "For", "target": {"id": "c", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneIntellect", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -7.784063927829266e-05, -4.136505594942719e-05, -0.0006580743356607854, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0010771751403808594, -5.7220440794480965e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.024137496948242188, -0.000255584716796875, -0.001912789884954691, -0.0001342296600341797, -2.1219253540039062e-05, -1.9073486328125e-06, -5.364409389585489e-06, -7.152555099310121e-07, -5.980399131774902, -4.768370445162873e-07, -0.010564804077148438, -3.814697265625e-06, -1.430511474609375e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.257127486402169e-05, -1.1920928244535389e-07, -2.288818359375e-05, -1.537799835205078e-05, -2.0265579223632812e-06, -1.33514404296875e-05, -0.00019156932830810547, -2.0742354536196217e-05, -0.004939079284667969, -0.0011234283447265625, 0.0, 0.0, -7.62939453125e-06, -0.0002803802490234375, 0.0, -0.0005855560302734375, 0.0, -3.9696395106147975e-05, -2.3841855067985307e-07, -2.300739288330078e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.1920928244535389e-07, -5.14984130859375e-05, -3.814697265625e-06, -1.0132789611816406e-05, -9.417159162694588e-05, -0.0005626678466796875, -9.5367431640625e-06, -0.00022125244140625, 0.0, -0.01259303092956543, -4.12456392950844e-05, -8.20159912109375e-05, -0.0009860992431640625, -0.0001773834228515625, -1.9073486328125e-06, -0.0005967617034912109, -5.125986263010418e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004166284343227744, -1.9073486328125e-06, -0.00102996826171875, -1.33514404296875e-05, -0.0009184107184410095, -2.2649765014648438e-06, -0.001308441162109375, -0.000274658203125, -1.1444091796875e-05, -2.288818359375e-05, -0.005634307861328125, -2.86102294921875e-05, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.00091552734375, -1.2636104656849056e-05, -0.006685234606266022, -2.503394853192731e-06], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Intellect", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "WARLOCK", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "c", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -6.146158358102582, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Arcane Intellect", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "_type": "For", "target": {"id": "c", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneIntellect", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -7.784063927829266e-05, -4.136505594942719e-05, -0.0006580743356607854, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0010771751403808594, -5.7220440794480965e-06, -1.9073486328125e-06, -2.288818359375e-05, -4.2213640213012695, -0.0001811981201171875, -0.00014363715308718383, -0.00010132789611816406, -0.00035512447357177734, -3.24249267578125e-05, -7.271760750882095e-06, -2.264974000354414e-06, -1.8819130659103394, -4.887569048150908e-06, -0.000194549560546875, 0.0, -1.823902130126953e-05, -1.1920928244535389e-07, 0.0, -3.62396240234375e-05, 0.0, -5.0783153710654005e-05, 0.0, -7.62939453125e-06, -9.655952453613281e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -0.0001652240753173828, -1.823896491259802e-05, -0.004634857177734375, -0.000865936279296875, 0.0, 0.0, -5.7220458984375e-06, -0.000240325927734375, 0.0, -0.0007228851318359375, 0.0, -4.506066761678085e-05, -2.3841855067985307e-07, -2.491474151611328e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.1920928244535389e-07, -5.14984130859375e-05, -3.814697265625e-06, -1.0132789611816406e-05, -9.393319487571716e-05, -0.0005435943603515625, -9.5367431640625e-06, -0.0002231597900390625, 0.0, -0.012572526931762695, -4.267609620001167e-05, -8.20159912109375e-05, -0.000988006591796875, -0.0001811981201171875, -1.9073486328125e-06, -0.0005968809127807617, -5.245195097813848e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00041734360274858773, -1.9073486328125e-06, -0.0011081695556640625, -1.52587890625e-05, -0.0009333193302154541, -2.1457672119140625e-06, -0.0011348724365234375, -0.00030517578125, -1.1444091796875e-05, -2.09808349609375e-05, -0.0054531097412109375, -2.86102294921875e-05, -1.9073486328125e-06, -0.0003032684326171875, 0.0, -0.0009183883666992188, -1.2636104656849056e-05, -0.006782987155020237, -2.503394853192731e-06], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Intellect", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "c", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -6.552705711514768, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template5", "hole0": "Arcane Intellect", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "_type": "For", "target": {"id": "c", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneIntellect", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -7.784063927829266e-05, -4.136505594942719e-05, -0.0006580743356607854, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0010771751403808594, -5.7220440794480965e-06, -1.9073486328125e-06, -2.288818359375e-05, -5.095067024230957, -0.000148773193359375, -0.0016812250250950456, -5.4955482482910156e-05, -0.0033206939697265625, -0.0064907073974609375, -4.9112924898508936e-05, 0.0, -1.3868659734725952, -5.7220458984375e-06, -0.0001964569091796875, -1.9073486328125e-06, -2.491474151611328e-05, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.8279751354129985e-05, -1.1920928244535389e-07, -3.24249267578125e-05, -1.537799835205078e-05, -2.0265579223632812e-06, -1.52587890625e-05, -0.00021696090698242188, -2.0503937776084058e-05, -0.02211284637451172, -0.000614166259765625, 0.0, 0.0, -5.7220458984375e-06, -0.00020599365234375, 0.0, -0.0006656646728515625, 0.0, -4.4822198105975986e-05, -2.3841855067985307e-07, -2.491474151611328e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -9.72747802734375e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -3.814697265625e-06, -1.0132789611816406e-05, -9.429079364053905e-05, -0.000644683837890625, -9.5367431640625e-06, -0.0002269744873046875, 0.0, -0.012315869331359863, -4.1364844946656376e-05, -7.62939453125e-05, -0.00096893310546875, -0.000179290771484375, -1.9073486328125e-06, -0.0005986690521240234, -5.364403477869928e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00041698626591823995, -1.9073486328125e-06, -0.0009403228759765625, -1.52587890625e-05, -0.0009103342890739441, -2.1457672119140625e-06, -0.00133514404296875, -0.0002841949462890625, -1.1444091796875e-05, -2.288818359375e-05, -0.005611419677734375, -2.86102294921875e-05, -1.9073486328125e-06, -0.00028228759765625, 0.0, -0.0009241104125976562, -1.2874520507466514e-05, -0.006581997964531183, -2.503394853192731e-06], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Intellect", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "c", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"score": -23.265073776245117, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -23.265066146850586], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 4}
{"beams": [{"score": -0.5742331380470489, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Missiles", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Template33", "hole0": 3}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneMissiles", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -3.45700973412022e-05, -8.34461570775602e-06, -1.609317769180052e-05, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00016415119171142578, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-05, -0.1013193130493164, -0.0013980865478515625, -0.00019131260341964662, -6.568430399056524e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -4.768370445162873e-07, -0.09150004386901855, -3.516612196108326e-05, -0.004311561584472656, 0.0, -6.437301635742188e-05, 0.0, -3.0517578125e-05, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -3.4332275390625e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -5.7220458984375e-06, -0.0032558441162109375, -2.47955322265625e-05, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -0.000118255615234375, 0.0, -7.748602001811378e-06, 0.0, -0.00018310546875, 0.0, -2.09808349609375e-05, -7.05718994140625e-05, -2.6702880859375e-05, -0.000125885009765625, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.2755393072438892e-05, -0.000400543212890625, -3.814697265625e-06, -7.43865966796875e-05, 0.0, -0.05732762813568115, -1.1920928244535389e-07, -3.814697265625e-06, -3.0517578125e-05, -0.0004177093505859375, 0.0, -0.0004696846008300781, -5.960462772236497e-07, -0.001018524169921875, -0.00016021728515625, -7.62939453125e-06, -0.00019800575682893395, -0.00010120868682861328, -0.017106056213378906, -4.38690185546875e-05, -0.12156405299901962, -4.696760879596695e-05, -0.008162498474121094, -0.0005741119384765625, -0.00032806396484375, -3.4332275390625e-05, -0.00044727325439453125, -3.814697265625e-06, -0.0025397539138793945, -1.1444091796875e-05, -4.38690185546875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0016632080078125, 0.0, -0.0014810562133789062, -4.768370445162873e-07, -0.0014944076538085938, -1.1920928244535389e-07, -0.000156402587890625, -0.000194549560546875, 0.0, -3.814697265625e-05, 0.0, -0.000522613525390625, 0.0, -0.000640869140625, -1.1920928244535389e-07, -0.0008422136306762695, 0.0, -0.004295287188142538, 0.0, -0.0035762786865234375, -0.0013551712036132812, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00051116943359375, 0.0, -0.05034446716308594, 0.0, -0.01186370849609375, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.000728607177734375, -2.47955322265625e-05, -0.000537872314453125, -1.9073486328125e-06, -0.0009555816650390625, -2.1457672119140625e-06, -0.009966135025024414, 0.0, -0.002503783907741308, -5.7220458984375e-06, -0.0123443603515625, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, 0.0, -0.0028285980224609375, -1.5497195136049413e-06, -0.000347137451171875, -1.33514404296875e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.0001678466796875, 0.0, -0.000690460205078125, -4.768370445162873e-07, -0.00442051887512207, 0.0, -0.0050640106201171875, -0.0004730224609375, -1.9073486328125e-06, -0.0019588470458984375, 0.0, -5.340576171875e-05, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00016021728515625, -1.1920928244535389e-07, -0.009610176086425781, 0.0, -3.814697265625e-06, -0.000186920166015625, -0.000118255615234375, -0.01503168884664774, -3.814697265625e-06, -0.008619308471679688, -1.1444091796875e-05, -0.0034093856811523438, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Missiles", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 45, 169, "3", "<EOS>", 224, 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "append", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 60, 93, 208, 37, 125, "target", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "targets", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -2.6454534294398684, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Missiles", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Template33", "hole0": 1}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneMissiles", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -3.45700973412022e-05, -8.34461570775602e-06, -1.609317769180052e-05, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00016415119171142578, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-05, -0.1013193130493164, -0.0013980865478515625, -0.00019131260341964662, -6.568430399056524e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -4.768370445162873e-07, -0.09150004386901855, -3.516612196108326e-05, -0.004311561584472656, 0.0, -6.437301635742188e-05, 0.0, -3.0517578125e-05, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -3.4332275390625e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -5.7220458984375e-06, -0.0032558441162109375, -2.47955322265625e-05, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -0.000118255615234375, 0.0, -7.748602001811378e-06, 0.0, -0.00018310546875, 0.0, -2.09808349609375e-05, -7.05718994140625e-05, -2.6702880859375e-05, -0.000125885009765625, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.2755393072438892e-05, -0.000400543212890625, -3.814697265625e-06, -7.43865966796875e-05, 0.0, -0.05732762813568115, -1.1920928244535389e-07, -3.814697265625e-06, -3.0517578125e-05, -0.0004177093505859375, 0.0, -0.0004696846008300781, -5.960462772236497e-07, -0.001018524169921875, -0.00016021728515625, -7.62939453125e-06, -0.00019800575682893395, -0.00010120868682861328, -0.017106056213378906, -4.38690185546875e-05, -2.168196678161621, -7.641052070539445e-05, -0.024715423583984375, -0.0006561279296875, -0.000385284423828125, -4.57763671875e-05, -0.0014753341674804688, -5.7220458984375e-06, -0.001969456672668457, -1.33514404296875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.001613616943359375, 0.0, -0.001750946044921875, -4.768370445162873e-07, -0.0014619827270507812, -1.1920928244535389e-07, -0.00016021728515625, -0.0001735687255859375, 0.0, -3.814697265625e-05, 0.0, -0.000457763671875, 0.0, -0.0006999969482421875, -1.1920928244535389e-07, -0.0008480548858642578, 0.0, -0.004059652332216501, 0.0, -0.0030651092529296875, -0.0013828277587890625, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.000545501708984375, 0.0, -0.050812721252441406, 0.0, -0.011890411376953125, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.0007266998291015625, -2.47955322265625e-05, -0.000537872314453125, -1.9073486328125e-06, -0.000949859619140625, -2.1457672119140625e-06, -0.009970903396606445, 0.0, -0.002512119710445404, -5.7220458984375e-06, -0.02022266387939453, -1.9073486328125e-06, -3.814697265625e-06, -5.91278076171875e-05, 0.0, -0.0030918121337890625, -1.5497195136049413e-06, -0.000354766845703125, -1.33514404296875e-05, -0.0001220703125, -1.9073486328125e-06, -0.000171661376953125, 0.0, -0.0007143020629882812, -4.768370445162873e-07, -0.0044252872467041016, 0.0, -0.0051822662353515625, -0.0004634857177734375, -1.9073486328125e-06, -0.0019855499267578125, 0.0, -4.57763671875e-05, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.0001659393310546875, -1.1920928244535389e-07, -0.009057998657226562, 0.0, -1.9073486328125e-06, -0.00017547607421875, -0.000118255615234375, -0.014962431974709034, -3.814697265625e-06, -0.008443832397460938, -1.1444091796875e-05, -0.0033092498779296875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Missiles", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 45, 169, "1", "<EOS>", 224, 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "append", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 60, 93, 208, 37, 125, "target", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "targets", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(1)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -3.1231554496049228, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "hole3": "EPIC", "_type": "Template7", "hole0": "Arcane Missiles", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Template33", "hole0": 3}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneMissiles", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -3.45700973412022e-05, -8.34461570775602e-06, -1.609317769180052e-05, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00016415119171142578, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-05, -2.686840057373047, -0.00173187255859375, -6.508615479106084e-05, -4.410742985783145e-05, -1.52587890625e-05, -5.7220458984375e-06, -3.09944016407826e-06, -3.576278118089249e-07, -0.05941927433013916, -1.9073486328125e-06, -0.0005117654800415039, 0.0, -0.000438690185546875, 0.0, -0.00048160552978515625, 0.0, -1.1444091796875e-05, -2.288818359375e-05, 0.0, -2.288818359375e-05, 0.0, -3.24249267578125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -0.00365447998046875, -4.57763671875e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001354217529296875, 0.0, -8.702273589733522e-06, 0.0, -0.000194549560546875, 0.0, -2.09808349609375e-05, -7.43865966796875e-05, -2.86102294921875e-05, -0.000133514404296875, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.2755393072438892e-05, -0.0003814697265625, -3.814697265625e-06, -7.62939453125e-05, 0.0, -0.05522012710571289, -1.1920928244535389e-07, -3.814697265625e-06, -3.0517578125e-05, -0.000408172607421875, 0.0, -0.0004754066467285156, -5.960462772236497e-07, -0.00102996826171875, -0.0001544952392578125, -7.62939453125e-06, -0.00019812496611848474, -0.00010120868682861328, -0.017101287841796875, -4.38690185546875e-05, -0.12156977504491806, -4.708681444753893e-05, -0.0081329345703125, -0.0005750656127929688, -0.00032806396484375, -3.4332275390625e-05, -0.00044536590576171875, -3.814697265625e-06, -0.0025578737258911133, -1.1444091796875e-05, -4.38690185546875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.001659393310546875, 0.0, -0.0014829635620117188, -4.768370445162873e-07, -0.0014972686767578125, -1.1920928244535389e-07, -0.000156402587890625, -0.0001926422119140625, 0.0, -3.814697265625e-05, 0.0, -0.000522613525390625, 0.0, -0.000640869140625, -1.1920928244535389e-07, -0.0008422136306762695, 0.0, -0.004296949598938227, 0.0, -0.00356292724609375, -0.00135040283203125, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0005130767822265625, 0.0, -0.05025672912597656, 0.0, -0.011867523193359375, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.000728607177734375, -2.47955322265625e-05, -0.000537872314453125, -1.9073486328125e-06, -0.0009555816650390625, -2.1457672119140625e-06, -0.009962320327758789, 0.0, -0.0025036646984517574, -5.7220458984375e-06, -0.01238250732421875, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, 0.0, -0.0028362274169921875, -1.5497195136049413e-06, -0.000347137451171875, -1.33514404296875e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.0001678466796875, 0.0, -0.000690460205078125, -4.768370445162873e-07, -0.00442051887512207, 0.0, -0.0050678253173828125, -0.0004730224609375, -1.9073486328125e-06, -0.0019598007202148438, 0.0, -5.340576171875e-05, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00016021728515625, -1.1920928244535389e-07, -0.009604454040527344, 0.0, -3.814697265625e-06, -0.000186920166015625, -0.000118255615234375, -0.01503252424299717, -3.814697265625e-06, -0.008619308471679688, -1.1444091796875e-05, -0.0034074783325195312, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Missiles", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 86, 179, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "EPIC", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 45, 169, "3", "<EOS>", 224, 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "append", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 60, 93, 208, 37, 125, "target", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "targets", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -3.4566452195768136, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Arcane Missiles", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Template33", "hole0": 3}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneMissiles", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -3.45700973412022e-05, -8.34461570775602e-06, -1.609317769180052e-05, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00016415119171142578, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-05, -0.1013193130493164, -0.0013980865478515625, -0.00019131260341964662, -6.568430399056524e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -4.768370445162873e-07, -2.9698407649993896, -0.00013100242358632386, -0.006167411804199219, 0.0, -0.00011742115020751953, 0.0, -2.47955322265625e-05, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, 0.0, -3.814697265625e-05, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -9.5367431640625e-06, -0.00409698486328125, -2.47955322265625e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -7.6293927122605965e-06, 0.0, -0.0002040863037109375, 0.0, -2.288818359375e-05, -7.2479248046875e-05, -2.6702880859375e-05, -0.0001201629638671875, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.4662741705251392e-05, -0.0004482269287109375, -3.814697265625e-06, -7.62939453125e-05, 0.0, -0.05851411819458008, -1.1920928244535389e-07, -3.814697265625e-06, -3.0517578125e-05, -0.000408172607421875, 0.0, -0.0004734992980957031, -5.960462772236497e-07, -0.001026153564453125, -0.0001621246337890625, -7.62939453125e-06, -0.00019824417540803552, -0.00010120868682861328, -0.017128944396972656, -4.38690185546875e-05, -0.12151290476322174, -4.708681444753893e-05, -0.008195877075195312, -0.0005712509155273438, -0.0003261566162109375, -3.4332275390625e-05, -0.0004425048828125, -3.814697265625e-06, -0.0025712251663208008, -1.1444091796875e-05, -4.38690185546875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0016651153564453125, 0.0, -0.0014772415161132812, -4.768370445162873e-07, -0.001491546630859375, -1.1920928244535389e-07, -0.000156402587890625, -0.000194549560546875, 0.0, -3.814697265625e-05, 0.0, -0.0005245208740234375, 0.0, -0.000640869140625, -1.1920928244535389e-07, -0.0008431673049926758, 0.0, -0.004289943724870682, 0.0, -0.003566741943359375, -0.0013561248779296875, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00051116943359375, 0.0, -0.05030345916748047, 0.0, -0.011866569519042969, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.000728607177734375, -2.47955322265625e-05, -0.000537872314453125, -1.9073486328125e-06, -0.0009555816650390625, -2.1457672119140625e-06, -0.009966135025024414, 0.0, -0.0025036646984517574, -5.7220458984375e-06, -0.012375831604003906, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, 0.0, -0.002826690673828125, -1.5497195136049413e-06, -0.000347137451171875, -1.33514404296875e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.0001678466796875, 0.0, -0.000690460205078125, -4.768370445162873e-07, -0.004419565200805664, 0.0, -0.0050640106201171875, -0.0004730224609375, -1.9073486328125e-06, -0.0019588470458984375, 0.0, -5.340576171875e-05, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00016021728515625, -1.1920928244535389e-07, -0.009612083435058594, 0.0, -3.814697265625e-06, -0.000186920166015625, -0.000118255615234375, -0.015030735172331333, -3.814697265625e-06, -0.008619308471679688, -1.1444091796875e-05, -0.0034074783325195312, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Missiles", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 45, 169, "3", "<EOS>", 224, 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "append", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 60, 93, 208, 37, 125, "target", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "targets", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -4.024592815279902, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Missiles", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneMissiles", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -3.45700973412022e-05, -8.34461570775602e-06, -1.609317769180052e-05, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00016415119171142578, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-05, -0.1013193130493164, -0.0013980865478515625, -0.00019131260341964662, -6.568430399056524e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -4.768370445162873e-07, -0.09150004386901855, -3.516612196108326e-05, -0.004311561584472656, 0.0, -6.437301635742188e-05, 0.0, -3.0517578125e-05, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -3.4332275390625e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -5.7220458984375e-06, -0.0032558441162109375, -2.47955322265625e-05, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -0.000118255615234375, 0.0, -7.748602001811378e-06, 0.0, -0.00018310546875, 0.0, -2.09808349609375e-05, -7.05718994140625e-05, -2.6702880859375e-05, -0.000125885009765625, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.2755393072438892e-05, -0.000400543212890625, -3.814697265625e-06, -7.43865966796875e-05, 0.0, -3.624664545059204, -7.033334895822918e-06, -0.005352973937988281, -9.5367431640625e-05, -0.07816028594970703, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.029059410095214844, -8.344646857949556e-07, -0.0021364688873291016, 0.0, -0.000278472900390625, -2.86102294921875e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.00023651123046875, 0.0, -0.000446319580078125, -2.0265579223632812e-06, -0.0008586645126342773, -1.9073486328125e-06, -0.004319993779063225, 0.0, -0.0006771087646484375, -0.007862091064453125, -0.000102996826171875, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -0.0010986328125, 0.0, -0.008966565132141113, -3.2066785934148356e-05, -0.011193394660949707, 0.0, -1.9073486328125e-06, -0.00379180908203125, -0.000324249267578125, -0.028623929247260094, -3.814697265625e-06, -0.011559486389160156, -1.1444091796875e-05, -0.0004863739013671875, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Missiles", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(1, self)\n"}, {"score": -4.31648727339504, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "Arcane Missiles", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Template33", "hole0": 3}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneMissiles", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -3.45700973412022e-05, -8.34461570775602e-06, -1.609317769180052e-05, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00016415119171142578, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-05, -0.1013193130493164, -0.0013980865478515625, -0.00019131260341964662, -6.568430399056524e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -4.768370445162873e-07, -3.8359439373016357, -3.576278118089249e-07, -0.0026340484619140625, 0.0, -0.00011372566223144531, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -2.288818359375e-05, 0.0, -3.814697265625e-05, -8.0108642578125e-05, 0.0, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -0.0032176971435546875, -3.4332275390625e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001277923583984375, 0.0, -7.867811291362159e-06, 0.0, -0.0002193450927734375, 0.0, -2.09808349609375e-05, -7.43865966796875e-05, -2.6702880859375e-05, -0.0001354217529296875, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.2755393072438892e-05, -0.0003910064697265625, -3.814697265625e-06, -7.43865966796875e-05, 0.0, -0.05659520626068115, -1.1920928244535389e-07, -3.814697265625e-06, -3.0517578125e-05, -0.00041961669921875, 0.0, -0.0004715919494628906, -5.960462772236497e-07, -0.001026153564453125, -0.00016021728515625, -7.62939453125e-06, -0.00019812496611848474, -0.00010120868682861328, -0.01709747314453125, -4.38690185546875e-05, -0.12180258333683014, -4.708681444753893e-05, -0.008209228515625, -0.0005750656127929688, -0.00032806396484375, -3.4332275390625e-05, -0.00044727325439453125, -3.814697265625e-06, -0.0025473833084106445, -1.1444091796875e-05, -4.38690185546875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0016632080078125, 0.0, -0.0014820098876953125, -4.768370445162873e-07, -0.0014944076538085938, -1.1920928244535389e-07, -0.000156402587890625, -0.000194549560546875, 0.0, -3.814697265625e-05, 0.0, -0.0005245208740234375, 0.0, -0.000640869140625, -1.1920928244535389e-07, -0.0008422136306762695, 0.0, -0.004294455982744694, 0.0, -0.003574371337890625, -0.001354217529296875, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0005130767822265625, 0.0, -0.05030536651611328, 0.0, -0.011864662170410156, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.000728607177734375, -2.47955322265625e-05, -0.000537872314453125, -1.9073486328125e-06, -0.0009555816650390625, -2.1457672119140625e-06, -0.00996708869934082, 0.0, -0.002503783907741308, -5.7220458984375e-06, -0.012288093566894531, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, 0.0, -0.0028257369995117188, -1.5497195136049413e-06, -0.000347137451171875, -1.33514404296875e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.0001678466796875, 0.0, -0.000690460205078125, -4.768370445162873e-07, -0.0044214725494384766, 0.0, -0.0050640106201171875, -0.0004730224609375, -1.9073486328125e-06, -0.0019588470458984375, 0.0, -5.340576171875e-05, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00016021728515625, -1.1920928244535389e-07, -0.009599685668945312, 0.0, -3.814697265625e-06, -0.000186920166015625, -0.000118255615234375, -0.015031689777970314, -3.814697265625e-06, -0.008617401123046875, -1.1444091796875e-05, -0.0034074783325195312, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Missiles", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 45, 169, "3", "<EOS>", 224, 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "append", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 60, 93, 208, 37, 125, "target", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "targets", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -4.66733173197256, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Missiles", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "target", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Template33", "hole0": 3}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneMissiles", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -3.45700973412022e-05, -8.34461570775602e-06, -1.609317769180052e-05, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00016415119171142578, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-05, -0.1013193130493164, -0.0013980865478515625, -0.00019131260341964662, -6.568430399056524e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -4.768370445162873e-07, -0.09150004386901855, -3.516612196108326e-05, -0.004311561584472656, 0.0, -6.437301635742188e-05, 0.0, -3.0517578125e-05, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -3.4332275390625e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -5.7220458984375e-06, -0.0032558441162109375, -2.47955322265625e-05, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -0.000118255615234375, 0.0, -7.748602001811378e-06, 0.0, -0.00018310546875, 0.0, -2.09808349609375e-05, -7.05718994140625e-05, -2.6702880859375e-05, -0.000125885009765625, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.2755393072438892e-05, -0.000400543212890625, -3.814697265625e-06, -7.43865966796875e-05, 0.0, -3.612065553665161, -1.7046782886609435e-05, -0.0038299560546875, -0.0001888275146484375, -0.5151844024658203, 0.0, -0.0009224414825439453, -1.6689286894688848e-06, -0.000835418701171875, -0.0002040863037109375, -5.7220458984375e-06, -0.002024649176746607, -0.00016033649444580078, -0.02337360382080078, -3.814697265625e-05, -0.13180947303771973, -6.699362711515278e-05, -0.008840560913085938, -0.0006046295166015625, -0.000335693359375, -3.24249267578125e-05, -0.0004425048828125, -3.814697265625e-06, -0.0025826692581176758, -1.33514404296875e-05, -4.38690185546875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0016307830810546875, 0.0, -0.001506805419921875, -4.768370445162873e-07, -0.0015211105346679688, -1.1920928244535389e-07, -0.0001544952392578125, -0.0001926422119140625, 0.0, -3.814697265625e-05, 0.0, -0.00051116943359375, 0.0, -0.000640869140625, -1.1920928244535389e-07, -0.0008461475372314453, 0.0, -0.004301343113183975, 0.0, -0.0037393569946289062, -0.0013580322265625, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0005054473876953125, 0.0, -0.05040740966796875, 0.0, -0.011864662170410156, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.000728607177734375, -2.47955322265625e-05, -0.000537872314453125, -1.9073486328125e-06, -0.0009479522705078125, -2.1457672119140625e-06, -0.009986162185668945, 0.0, -0.0025033093988895416, -5.7220458984375e-06, -0.012133598327636719, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, 0.0, -0.0028247833251953125, -1.5497195136049413e-06, -0.0003509521484375, -1.33514404296875e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.0001659393310546875, 0.0, -0.0006885528564453125, -4.768370445162873e-07, -0.0044252872467041016, 0.0, -0.005084991455078125, -0.0004711151123046875, -1.9073486328125e-06, -0.00196075439453125, 0.0, -5.340576171875e-05, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00015926361083984375, -1.1920928244535389e-07, -0.009639739990234375, 0.0, -3.814697265625e-06, -0.000186920166015625, -0.000118255615234375, -0.015040270984172821, -3.814697265625e-06, -0.008632659912109375, -1.1444091796875e-05, -0.0034093856811523438, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Missiles", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "target", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 45, 169, "3", "<EOS>", 224, 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "append", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 60, 93, 208, 37, 125, "target", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "targets", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for target in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -4.839772077391672, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Missiles", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "target", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneMissiles", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -3.45700973412022e-05, -8.34461570775602e-06, -1.609317769180052e-05, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00016415119171142578, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-05, -0.1013193130493164, -0.0013980865478515625, -0.00019131260341964662, -6.568430399056524e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -4.768370445162873e-07, -0.09150004386901855, -3.516612196108326e-05, -0.004311561584472656, 0.0, -6.437301635742188e-05, 0.0, -3.0517578125e-05, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -3.4332275390625e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -5.7220458984375e-06, -0.0032558441162109375, -2.47955322265625e-05, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -0.000118255615234375, 0.0, -7.748602001811378e-06, 0.0, -0.00018310546875, 0.0, -2.09808349609375e-05, -7.05718994140625e-05, -2.6702880859375e-05, -0.000125885009765625, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.2755393072438892e-05, -0.000400543212890625, -3.814697265625e-06, -7.43865966796875e-05, 0.0, -3.612065553665161, -1.7046782886609435e-05, -0.0038299560546875, -0.0001888275146484375, -0.9134273529052734, -9.5367431640625e-06, -0.000213623046875, 0.0, -0.019494056701660156, -1.4305104514278355e-06, -0.0014702081680297852, 0.0, -0.0004425048828125, -3.62396240234375e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.0002384185791015625, 0.0, -0.0003833770751953125, -2.0265579223632812e-06, -0.0008147954940795898, -1.9073486328125e-06, -0.004904508590698242, 0.0, -0.000591278076171875, -0.0073795318603515625, -0.000102996826171875, -7.62939453125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.0010356903076171875, 0.0, -0.009435772895812988, -3.397406908334233e-05, -0.01044464111328125, 0.0, -1.9073486328125e-06, -0.0034046173095703125, -0.0003814697265625, -0.03135441988706589, -3.814697265625e-06, -0.013432502746582031, -9.5367431640625e-06, -0.0005044937133789062, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Missiles", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "target", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for target in copy.copy(game.other_player.minions):\n            minion.damage(1, self)\n"}, {"score": -5.194461823590785, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "hole3": "EPIC", "_type": "Template7", "hole0": "Arcane Missiles", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Template33", "hole0": 1}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneMissiles", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -3.45700973412022e-05, -8.34461570775602e-06, -1.609317769180052e-05, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00016415119171142578, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-05, -2.686840057373047, -0.00173187255859375, -6.508615479106084e-05, -4.410742985783145e-05, -1.52587890625e-05, -5.7220458984375e-06, -3.09944016407826e-06, -3.576278118089249e-07, -0.05941927433013916, -1.9073486328125e-06, -0.0005117654800415039, 0.0, -0.000438690185546875, 0.0, -0.00048160552978515625, 0.0, -1.1444091796875e-05, -2.288818359375e-05, 0.0, -2.288818359375e-05, 0.0, -3.24249267578125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -0.00365447998046875, -4.57763671875e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001354217529296875, 0.0, -8.702273589733522e-06, 0.0, -0.000194549560546875, 0.0, -2.09808349609375e-05, -7.43865966796875e-05, -2.86102294921875e-05, -0.000133514404296875, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.2755393072438892e-05, -0.0003814697265625, -3.814697265625e-06, -7.62939453125e-05, 0.0, -0.05522012710571289, -1.1920928244535389e-07, -3.814697265625e-06, -3.0517578125e-05, -0.000408172607421875, 0.0, -0.0004754066467285156, -5.960462772236497e-07, -0.00102996826171875, -0.0001544952392578125, -7.62939453125e-06, -0.00019812496611848474, -0.00010120868682861328, -0.017101287841796875, -4.38690185546875e-05, -2.168146848678589, -7.664891745662317e-05, -0.02484607696533203, -0.0006570816040039062, -0.000385284423828125, -4.57763671875e-05, -0.001453399658203125, -5.7220458984375e-06, -0.0019799470901489258, -1.33514404296875e-05, -4.9591064453125e-05, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0016117095947265625, 0.0, -0.0017528533935546875, -4.768370445162873e-07, -0.0014638900756835938, -1.1920928244535389e-07, -0.00016021728515625, -0.0001735687255859375, 0.0, -3.814697265625e-05, 0.0, -0.0004558563232421875, 0.0, -0.0006999969482421875, -1.1920928244535389e-07, -0.0008471012115478516, 0.0, -0.004055844619870186, 0.0, -0.0030574798583984375, -0.0013761520385742188, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0005474090576171875, 0.0, -0.05071830749511719, 0.0, -0.01189422607421875, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.0007266998291015625, -2.47955322265625e-05, -0.000537872314453125, -1.9073486328125e-06, -0.000949859619140625, -2.1457672119140625e-06, -0.00996708869934082, 0.0, -0.0025120005011558533, -5.7220458984375e-06, -0.020272254943847656, -1.9073486328125e-06, -3.814697265625e-06, -5.91278076171875e-05, 0.0, -0.0031003952026367188, -1.5497195136049413e-06, -0.000354766845703125, -1.33514404296875e-05, -0.0001220703125, -1.9073486328125e-06, -0.000171661376953125, 0.0, -0.0007152557373046875, -4.768370445162873e-07, -0.004426240921020508, 0.0, -0.0051860809326171875, -0.0004634857177734375, -1.9073486328125e-06, -0.0019865036010742188, 0.0, -4.57763671875e-05, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.0001659393310546875, -1.1920928244535389e-07, -0.009054183959960938, 0.0, -1.9073486328125e-06, -0.00017547607421875, -0.000118255615234375, -0.014963386580348015, -3.814697265625e-06, -0.008443832397460938, -1.1444091796875e-05, -0.0033082962036132812, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Missiles", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 86, 179, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "EPIC", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 45, 169, "1", "<EOS>", 224, 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "append", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 60, 93, 208, 37, 125, "target", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "targets", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(1)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -5.291603626262635, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Missiles", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Template33", "hole0": 3}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneMissiles", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -3.45700973412022e-05, -8.34461570775602e-06, -1.609317769180052e-05, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00016415119171142578, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-05, -0.1013193130493164, -0.0013980865478515625, -0.00019131260341964662, -6.568430399056524e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -4.768370445162873e-07, -0.09150004386901855, -3.516612196108326e-05, -0.004311561584472656, 0.0, -6.437301635742188e-05, 0.0, -3.0517578125e-05, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -3.4332275390625e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -5.7220458984375e-06, -0.0032558441162109375, -2.47955322265625e-05, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -0.000118255615234375, 0.0, -7.748602001811378e-06, 0.0, -0.00018310546875, 0.0, -2.09808349609375e-05, -7.05718994140625e-05, -2.6702880859375e-05, -0.000125885009765625, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.2755393072438892e-05, -0.000400543212890625, -3.814697265625e-06, -7.43865966796875e-05, 0.0, -0.05732762813568115, -1.1920928244535389e-07, -3.814697265625e-06, -3.0517578125e-05, -0.0004177093505859375, 0.0, -0.0004696846008300781, -5.960462772236497e-07, -0.001018524169921875, -0.00016021728515625, -7.62939453125e-06, -0.00019800575682893395, -0.00010120868682861328, -0.017106056213378906, -4.38690185546875e-05, -0.12156405299901962, -4.696760879596695e-05, -0.008162498474121094, -0.0005741119384765625, -0.00032806396484375, -3.4332275390625e-05, -0.00044727325439453125, -3.814697265625e-06, -0.0025397539138793945, -1.1444091796875e-05, -4.38690185546875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0016632080078125, 0.0, -0.0014810562133789062, -4.768370445162873e-07, -0.0014944076538085938, -1.1920928244535389e-07, -0.000156402587890625, -0.000194549560546875, 0.0, -3.814697265625e-05, 0.0, -0.000522613525390625, 0.0, -0.000640869140625, -1.1920928244535389e-07, -0.0008422136306762695, 0.0, -0.004295287188142538, 0.0, -0.0035762786865234375, -0.0013551712036132812, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00051116943359375, 0.0, -0.05034446716308594, 0.0, -0.01186370849609375, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.000728607177734375, -2.47955322265625e-05, -0.000537872314453125, -1.9073486328125e-06, -0.0009555816650390625, -2.1457672119140625e-06, -0.009966135025024414, 0.0, -0.002503783907741308, -5.7220458984375e-06, -4.588954925537109, -0.0015411376953125, -1.33514404296875e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.001361846923828125, 0.0, -0.11217784881591797, 0.0, -0.015379905700683594, 0.0, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0013713836669921875, -2.288818359375e-05, -0.000392913818359375, -1.9073486328125e-06, -0.000514984130859375, -1.728534698486328e-05, -0.0355677604675293, 0.0, -0.0024157478474080563, -7.62939453125e-06, -0.006798744201660156, -1.9073486328125e-06, -1.9073486328125e-06, -0.00011444091796875, 0.0, -0.0030088424682617188, -1.311301275563892e-06, -0.0004177093505859375, -1.33514404296875e-05, -0.0001220703125, -1.9073486328125e-06, -0.000179290771484375, 0.0, -0.0006742477416992188, -4.768370445162873e-07, -0.0043604373931884766, 0.0, -0.005146026611328125, -0.0004901885986328125, -1.9073486328125e-06, -0.0020380020141601562, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Missiles", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 45, 169, "3", "<EOS>", 224, 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "append", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "append", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 60, 93, 208, 37, 125, "target", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "targets", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n"}, {"score": -5.352792544800906, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Missiles", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "extend", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Template33", "hole0": 3}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneMissiles", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -3.45700973412022e-05, -8.34461570775602e-06, -1.609317769180052e-05, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00016415119171142578, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-05, -0.1013193130493164, -0.0013980865478515625, -0.00019131260341964662, -6.568430399056524e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -4.768370445162873e-07, -0.09150004386901855, -3.516612196108326e-05, -0.004311561584472656, 0.0, -6.437301635742188e-05, 0.0, -3.0517578125e-05, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -3.4332275390625e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -5.7220458984375e-06, -0.0032558441162109375, -2.47955322265625e-05, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -0.000118255615234375, 0.0, -7.748602001811378e-06, 0.0, -0.00018310546875, 0.0, -2.09808349609375e-05, -7.05718994140625e-05, -2.6702880859375e-05, -0.000125885009765625, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.2755393072438892e-05, -0.000400543212890625, -3.814697265625e-06, -7.43865966796875e-05, 0.0, -0.05732762813568115, -1.1920928244535389e-07, -3.814697265625e-06, -3.0517578125e-05, -0.0004177093505859375, 0.0, -0.0004696846008300781, -5.960462772236497e-07, -0.001018524169921875, -0.00016021728515625, -7.62939453125e-06, -0.00019800575682893395, -0.00010120868682861328, -0.017106056213378906, -4.38690185546875e-05, -0.12156405299901962, -4.696760879596695e-05, -0.008162498474121094, -0.0005741119384765625, -0.00032806396484375, -3.4332275390625e-05, -0.00044727325439453125, -3.814697265625e-06, -0.0025397539138793945, -1.1444091796875e-05, -4.38690185546875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0016632080078125, 0.0, -0.0014810562133789062, -4.768370445162873e-07, -0.0014944076538085938, -1.1920928244535389e-07, -0.000156402587890625, -0.000194549560546875, 0.0, -3.814697265625e-05, 0.0, -0.000522613525390625, 0.0, -0.000640869140625, -1.1920928244535389e-07, -0.0008422136306762695, 0.0, -0.004295287188142538, 0.0, -0.0035762786865234375, -0.0013551712036132812, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00051116943359375, 0.0, -0.05034446716308594, 0.0, -4.776167869567871, 0.0, -3.62396240234375e-05, -8.96453857421875e-05, 0.0, -0.00153350830078125, -1.52587890625e-05, -0.0004405975341796875, -1.9073486328125e-06, -0.00052642822265625, -1.1563301086425781e-05, -0.016819000244140625, 0.0, -0.005917183123528957, -3.814697265625e-06, -0.016521453857421875, -1.9073486328125e-06, -3.814697265625e-06, -6.866455078125e-05, 0.0, -0.00241851806640625, -1.4305104514278355e-06, -0.0003147125244140625, -1.33514404296875e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.000171661376953125, 0.0, -0.000713348388671875, -4.768370445162873e-07, -0.004419565200805664, 0.0, -0.0047702789306640625, -0.0005092620849609375, -1.9073486328125e-06, -0.00193023681640625, 0.0, -5.14984130859375e-05, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00016021728515625, -1.1920928244535389e-07, -0.009706497192382812, 0.0, -3.814697265625e-06, -0.000186920166015625, -0.000118255615234375, -0.01503645721822977, -3.814697265625e-06, -0.008655548095703125, -1.1444091796875e-05, -0.0034208297729492188, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Missiles", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 45, 169, "3", "<EOS>", 224, 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 60, 93, 208, 37, 125, "target", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "targets", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.extend(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"score": -5.944470607720206, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Missiles", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Assign", "targets": [{"id": "target", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "targets", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Template33", "hole0": 3}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneMissiles", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -3.45700973412022e-05, -8.34461570775602e-06, -1.609317769180052e-05, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00016415119171142578, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-05, -0.1013193130493164, -0.0013980865478515625, -0.00019131260341964662, -6.568430399056524e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -4.768370445162873e-07, -0.09150004386901855, -3.516612196108326e-05, -0.004311561584472656, 0.0, -6.437301635742188e-05, 0.0, -3.0517578125e-05, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -3.4332275390625e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -5.7220458984375e-06, -0.0032558441162109375, -2.47955322265625e-05, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -0.000118255615234375, 0.0, -7.748602001811378e-06, 0.0, -0.00018310546875, 0.0, -2.09808349609375e-05, -7.05718994140625e-05, -2.6702880859375e-05, -0.000125885009765625, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.2755393072438892e-05, -0.000400543212890625, -3.814697265625e-06, -7.43865966796875e-05, 0.0, -0.05732762813568115, -1.1920928244535389e-07, -3.814697265625e-06, -3.0517578125e-05, -0.0004177093505859375, 0.0, -0.0004696846008300781, -5.960462772236497e-07, -0.001018524169921875, -0.00016021728515625, -7.62939453125e-06, -0.00019800575682893395, -0.00010120868682861328, -0.017106056213378906, -4.38690185546875e-05, -0.12156405299901962, -4.696760879596695e-05, -0.008162498474121094, -0.0005741119384765625, -0.00032806396484375, -3.4332275390625e-05, -0.00044727325439453125, -3.814697265625e-06, -0.0025397539138793945, -1.1444091796875e-05, -4.38690185546875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0016632080078125, 0.0, -0.0014810562133789062, -4.768370445162873e-07, -0.0014944076538085938, -1.1920928244535389e-07, -0.000156402587890625, -0.000194549560546875, 0.0, -3.814697265625e-05, 0.0, -0.000522613525390625, 0.0, -0.000640869140625, -1.1920928244535389e-07, -0.0008422136306762695, 0.0, -0.004295287188142538, 0.0, -0.0035762786865234375, -0.0013551712036132812, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00051116943359375, 0.0, -0.05034446716308594, 0.0, -0.01186370849609375, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.000728607177734375, -2.47955322265625e-05, -0.000537872314453125, -1.9073486328125e-06, -0.0009555816650390625, -2.1457672119140625e-06, -0.009966135025024414, 0.0, -0.002503783907741308, -5.7220458984375e-06, -0.0123443603515625, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, 0.0, -0.0028285980224609375, -1.5497195136049413e-06, -0.000347137451171875, -1.33514404296875e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.0001678466796875, 0.0, -0.000690460205078125, -4.768370445162873e-07, -0.00442051887512207, 0.0, -0.0050640106201171875, -0.0004730224609375, -1.9073486328125e-06, -0.0019588470458984375, 0.0, -5.340576171875e-05, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00016021728515625, -1.1920928244535389e-07, -0.009610176086425781, 0.0, -3.814697265625e-06, -0.000186920166015625, -0.000118255615234375, -0.01503168884664774, -3.814697265625e-06, -4.8253984451293945, -5.7220458984375e-06, -0.5568734407424927, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Missiles", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 45, 169, "3", "<EOS>", 224, 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "append", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 60, 93, 208, 37, 125, "target", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "targets", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "1", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, 1)\n"}, {"score": -6.285623469647042, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Missiles", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "target", "_type": "Name"}}, "args": [{"_type": "Num", "n": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ArcaneMissiles", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -3.45700973412022e-05, -8.34461570775602e-06, -1.609317769180052e-05, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00016415119171142578, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-05, -0.1013193130493164, -0.0013980865478515625, -0.00019131260341964662, -6.568430399056524e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -4.768370445162873e-07, -0.09150004386901855, -3.516612196108326e-05, -0.004311561584472656, 0.0, -6.437301635742188e-05, 0.0, -3.0517578125e-05, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -3.4332275390625e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -5.7220458984375e-06, -0.0032558441162109375, -2.47955322265625e-05, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -0.000118255615234375, 0.0, -7.748602001811378e-06, 0.0, -0.00018310546875, 0.0, -2.09808349609375e-05, -7.05718994140625e-05, -2.6702880859375e-05, -0.000125885009765625, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.2755393072438892e-05, -0.000400543212890625, -3.814697265625e-06, -7.43865966796875e-05, 0.0, -0.05732762813568115, -1.1920928244535389e-07, -3.814697265625e-06, -3.0517578125e-05, -0.0004177093505859375, 0.0, -0.0004696846008300781, -5.960462772236497e-07, -0.001018524169921875, -0.00016021728515625, -7.62939453125e-06, -0.00019800575682893395, -0.00010120868682861328, -4.500551223754883, -3.814697265625e-06, -0.06637665629386902, -2.384185791015625e-06, -0.26525211334228516, -0.056514739990234375, -0.0029764175415039062, -0.0009098052978515625, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-05, -0.6226720809936523, -1.9073486328125e-06, -0.0031828880310058594, -0.00024673278676345944, -0.04779529571533203, -2.3841855067985307e-07, -1.9073486328125e-06, -0.002223968505859375, -0.0001049041748046875, -0.1359095573425293, -3.814697265625e-06, -0.3041200637817383, -1.9073486328125e-05, -0.012938499450683594, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Missiles", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            target.damage(1, self)\n"}, {"score": -6.887542026162805, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Arcane Missiles", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 3}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "ArcaneMissiles", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -3.45700973412022e-05, -8.34461570775602e-06, -1.609317769180052e-05, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00016415119171142578, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-05, -0.1013193130493164, -0.0013980865478515625, -0.00019131260341964662, -6.568430399056524e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -4.768370445162873e-07, -0.09150004386901855, -3.516612196108326e-05, -6.143730163574219, -0.0023365020751953125, -8.96453857421875e-05, -2.09808349609375e-05, -0.0967397689819336, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.05028533935546875, -2.0265579223632812e-06, -0.029445886611938477, -1.9073486328125e-06, -0.014894954860210419, -1.9073486328125e-06, -0.1212015151977539, 0.0, -1.33514404296875e-05, -0.008447647094726562, -6.866455078125e-05, -0.22508661448955536, -3.9934315282152966e-05, -7.62939453125e-06, 0.0, -0.00014591217041015625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Missiles", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n"}, {"score": -23.57294273376465, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.814697265625e-06, 0.0, -23.572938919067383], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 5}
{"beams": [{"score": -0.8766409275807661, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "ArcaneShot", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.2636104656849056e-05, -8.583032467868179e-06, -2.52720492426306e-05, -5.53131103515625e-05, -0.0002460479736328125, -7.05718994140625e-05, -7.843970524845645e-05, -3.600119089242071e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.001026153564453125, 0.0, -4.196165536995977e-05, -1.1920928244535389e-07, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001491284347139299, -5.9604644775390625e-06, -9.5367431640625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002574920654296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.6689286894688848e-06, -1.9073486328125e-06, -6.687641143798828e-05, 0.0, -0.000629425048828125, -2.86102294921875e-05, -0.0002040863037109375, -9.894321920000948e-06, -0.0001087188720703125, -0.0004375240532681346, -0.0013275146484375, -0.000255584716796875, -7.62939453125e-06, -5.3642688726540655e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.00029480457305908203, -2.0265558760002023e-06, -0.8107777833938599, 0.0, -7.2479248046875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -7.05718994140625e-05, -0.00020599365234375, -1.1920922133867862e-06, -0.002498626708984375, 0.0, -0.0013027191162109375, -1.52587890625e-05, -1.1444091796875e-05, -0.00017189979553222656, 0.0, -0.0003032684326171875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0001068115234375, -3.814697265625e-06, -0.006786346435546875, -1.9073486328125e-05, -0.0001735687255859375, -3.24249267578125e-05, -7.62939453125e-06, -1.1444091796875e-05, -4.00543212890625e-05, -2.86102294921875e-05, -5.340576171875e-05, -3.576278118089249e-07, -7.069110870361328e-05, -2.3841855067985307e-07, -0.0002676248550415039, -7.62939453125e-06, -1.9073486328125e-06, -0.0002765655517578125, -2.86102294921875e-05, -0.04708181694149971, -5.006777428206988e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002593994140625, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Arcane", " ", "Shot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -1.1720960257343123, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "ArcaneShot", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.2636104656849056e-05, -8.583032467868179e-06, -2.52720492426306e-05, -5.53131103515625e-05, -0.0002460479736328125, -7.05718994140625e-05, -7.843970524845645e-05, -3.600119089242071e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.001026153564453125, 0.0, -4.196165536995977e-05, -1.1920928244535389e-07, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001491284347139299, -5.9604644775390625e-06, -9.5367431640625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002574920654296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.6689286894688848e-06, -1.9073486328125e-06, -6.687641143798828e-05, 0.0, -0.000629425048828125, -2.86102294921875e-05, -0.0002040863037109375, -9.894321920000948e-06, -0.0001087188720703125, -0.0004375240532681346, -0.0013275146484375, -0.000255584716796875, -7.62939453125e-06, -5.3642688726540655e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.00029480457305908203, -2.0265558760002023e-06, -1.1073905229568481, 0.0, -2.86102294921875e-05, -0.000133514404296875, -2.09808349609375e-05, -8.392333984375e-05, -0.000293731689453125, -7.152555099310121e-07, -0.0013446807861328125, 0.0, -0.0009059906005859375, -1.52587890625e-05, -9.5367431640625e-06, -0.00015664100646972656, 0.0, -0.0003185272216796875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.0517578125e-05, -5.340576171875e-05, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.006948590278625488, -1.71661376953125e-05, -0.0001735687255859375, -3.4332275390625e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.4332275390625e-05, -2.6702880859375e-05, -5.14984130859375e-05, -3.576278118089249e-07, -7.069110870361328e-05, -1.1920928244535389e-07, -0.0002638101577758789, -7.62939453125e-06, -1.9073486328125e-06, -0.000274658203125, -2.86102294921875e-05, -0.04717027023434639, -4.887569048150908e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002574920654296875, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Arcane", " ", "Shot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -2.1550641176992045, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "ArcaneShot", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.2636104656849056e-05, -8.583032467868179e-06, -2.52720492426306e-05, -5.53131103515625e-05, -0.0002460479736328125, -7.05718994140625e-05, -7.843970524845645e-05, -3.600119089242071e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.001026153564453125, 0.0, -4.196165536995977e-05, -1.1920928244535389e-07, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001491284347139299, -5.9604644775390625e-06, -9.5367431640625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002574920654296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.6689286894688848e-06, -1.9073486328125e-06, -6.687641143798828e-05, 0.0, -0.000629425048828125, -2.86102294921875e-05, -0.0002040863037109375, -9.894321920000948e-06, -0.0001087188720703125, -0.0004375240532681346, -0.0013275146484375, -0.000255584716796875, -7.62939453125e-06, -5.3642688726540655e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.00029480457305908203, -2.0265558760002023e-06, -2.0924501419067383, 0.0, -3.24249267578125e-05, -3.4332275390625e-05, -3.4332275390625e-05, -7.62939453125e-05, -0.0002422332763671875, -3.576278118089249e-07, -0.00122833251953125, 0.0, -0.000278472900390625, -9.5367431640625e-06, -1.33514404296875e-05, -0.00015461444854736328, 0.0, -0.00032806396484375, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -8.392333984375e-05, -7.62939453125e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0058356523513793945, -2.09808349609375e-05, -0.0001850128173828125, -3.4332275390625e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -2.6702880859375e-05, -5.14984130859375e-05, -3.576278118089249e-07, -7.069110870361328e-05, -1.1920928244535389e-07, -0.0002657175064086914, -7.62939453125e-06, -1.9073486328125e-06, -0.0002765655517578125, -2.86102294921875e-05, -0.04701422527432442, -4.887569048150908e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002593994140625, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Arcane", " ", "Shot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -3.1172077772896643, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "ArcaneShot", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.2636104656849056e-05, -8.583032467868179e-06, -2.52720492426306e-05, -5.53131103515625e-05, -0.0002460479736328125, -7.05718994140625e-05, -7.843970524845645e-05, -3.600119089242071e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.001026153564453125, 0.0, -4.196165536995977e-05, -1.1920928244535389e-07, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001491284347139299, -5.9604644775390625e-06, -9.5367431640625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002574920654296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.6689286894688848e-06, -1.9073486328125e-06, -6.687641143798828e-05, 0.0, -0.000629425048828125, -2.86102294921875e-05, -0.0002040863037109375, -9.894321920000948e-06, -0.0001087188720703125, -0.0004375240532681346, -0.0013275146484375, -0.000255584716796875, -7.62939453125e-06, -5.3642688726540655e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.00029480457305908203, -2.0265558760002023e-06, -3.048214912414551, -1.71661376953125e-05, -1.71661376953125e-05, -1.9073486328125e-05, -1.9073486328125e-05, -1.9073486328125e-05, -0.000278472900390625, -1.5497195136049413e-06, -0.0030364990234375, 0.0, -0.0027027130126953125, -1.71661376953125e-05, -9.5367431640625e-06, -0.00017964839935302734, 0.0, -0.0002918243408203125, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -4.76837158203125e-05, -7.62939453125e-06, -9.5367431640625e-05, -3.814697265625e-06, -0.007950782775878906, -1.71661376953125e-05, -0.000164031982421875, -3.24249267578125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, -2.86102294921875e-05, -5.340576171875e-05, -3.576278118089249e-07, -6.878376007080078e-05, -2.3841855067985307e-07, -0.0002638101577758789, -7.62939453125e-06, -1.9073486328125e-06, -0.0002765655517578125, -2.86102294921875e-05, -0.047180403023958206, -4.887569048150908e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00025844573974609375, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Arcane", " ", "Shot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -3.601157676939671, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "ArcaneShot", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.2636104656849056e-05, -8.583032467868179e-06, -2.52720492426306e-05, -5.53131103515625e-05, -0.0002460479736328125, -7.05718994140625e-05, -7.843970524845645e-05, -3.600119089242071e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.001026153564453125, 0.0, -4.196165536995977e-05, -1.1920928244535389e-07, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001491284347139299, -5.9604644775390625e-06, -9.5367431640625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002574920654296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.6689286894688848e-06, -1.9073486328125e-06, -6.687641143798828e-05, 0.0, -0.000629425048828125, -2.86102294921875e-05, -0.0002040863037109375, -9.894321920000948e-06, -0.0001087188720703125, -0.0004375240532681346, -0.0013275146484375, -0.000255584716796875, -7.62939453125e-06, -5.3642688726540655e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.00029480457305908203, -2.0265558760002023e-06, -3.5336198806762695, -7.033323527139146e-06, -5.91278076171875e-05, -0.0002155303955078125, -1.1444091796875e-05, -5.91278076171875e-05, -0.00019073486328125, -5.960462772236497e-07, -0.00322723388671875, 0.0, -0.0029888153076171875, -1.71661376953125e-05, -9.5367431640625e-06, -0.00017380714416503906, 0.0, -0.0003147125244140625, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, -6.103515625e-05, -7.62939453125e-06, -0.000110626220703125, -3.814697265625e-06, -0.005853772163391113, -2.09808349609375e-05, -0.0001811981201171875, -3.4332275390625e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.4332275390625e-05, -2.6702880859375e-05, -5.14984130859375e-05, -3.576278118089249e-07, -7.259845733642578e-05, -1.1920928244535389e-07, -0.0002638101577758789, -7.62939453125e-06, -1.9073486328125e-06, -0.0002765655517578125, -2.86102294921875e-05, -0.04709743335843086, -4.887569048150908e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00025844573974609375, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Arcane", " ", "Shot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -3.9125701417987315, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "ArcaneShot", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.2636104656849056e-05, -8.583032467868179e-06, -2.52720492426306e-05, -5.53131103515625e-05, -0.0002460479736328125, -7.05718994140625e-05, -7.843970524845645e-05, -3.600119089242071e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.001026153564453125, 0.0, -4.196165536995977e-05, -1.1920928244535389e-07, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001491284347139299, -5.9604644775390625e-06, -9.5367431640625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002574920654296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.6689286894688848e-06, -1.9073486328125e-06, -6.687641143798828e-05, 0.0, -0.000629425048828125, -2.86102294921875e-05, -0.0002040863037109375, -9.894321920000948e-06, -0.0001087188720703125, -0.0004375240532681346, -0.0013275146484375, -0.000255584716796875, -7.62939453125e-06, -5.3642688726540655e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.00029480457305908203, -2.0265558760002023e-06, -0.8107777833938599, 0.0, -7.2479248046875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -7.05718994140625e-05, -0.00020599365234375, -1.1920922133867862e-06, -0.002498626708984375, 0.0, -0.0013027191162109375, -1.52587890625e-05, -1.1444091796875e-05, -0.00017189979553222656, 0.0, -0.0003032684326171875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0001068115234375, -3.814697265625e-06, -0.006786346435546875, -1.9073486328125e-05, -0.0001735687255859375, -3.24249267578125e-05, -7.62939453125e-06, -1.1444091796875e-05, -4.00543212890625e-05, -2.86102294921875e-05, -5.340576171875e-05, -3.576278118089249e-07, -7.069110870361328e-05, -2.3841855067985307e-07, -0.0002676248550415039, -7.62939453125e-06, -1.9073486328125e-06, -0.0002765655517578125, -2.86102294921875e-05, -3.0824077129364014, -2.861018856492592e-06, -0.0001392364501953125, -1.9073486328125e-06, -0.0007390975952148438, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Arcane", " ", "Shot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score": -4.206061266906019, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "ArcaneShot", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.2636104656849056e-05, -8.583032467868179e-06, -2.52720492426306e-05, -5.53131103515625e-05, -0.0002460479736328125, -7.05718994140625e-05, -7.843970524845645e-05, -3.600119089242071e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.001026153564453125, 0.0, -4.196165536995977e-05, -1.1920928244535389e-07, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001491284347139299, -5.9604644775390625e-06, -9.5367431640625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002574920654296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.6689286894688848e-06, -1.9073486328125e-06, -6.687641143798828e-05, 0.0, -0.000629425048828125, -2.86102294921875e-05, -0.0002040863037109375, -9.894321920000948e-06, -0.0001087188720703125, -0.0004375240532681346, -0.0013275146484375, -0.000255584716796875, -7.62939453125e-06, -5.3642688726540655e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.00029480457305908203, -2.0265558760002023e-06, -1.1073905229568481, 0.0, -2.86102294921875e-05, -0.000133514404296875, -2.09808349609375e-05, -8.392333984375e-05, -0.000293731689453125, -7.152555099310121e-07, -0.0013446807861328125, 0.0, -0.0009059906005859375, -1.52587890625e-05, -9.5367431640625e-06, -0.00015664100646972656, 0.0, -0.0003185272216796875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.0517578125e-05, -5.340576171875e-05, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.006948590278625488, -1.71661376953125e-05, -0.0001735687255859375, -3.4332275390625e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.4332275390625e-05, -2.6702880859375e-05, -5.14984130859375e-05, -3.576278118089249e-07, -7.069110870361328e-05, -1.1920928244535389e-07, -0.0002638101577758789, -7.62939453125e-06, -1.9073486328125e-06, -0.000274658203125, -2.86102294921875e-05, -3.0805368423461914, -2.861018856492592e-06, -0.0001430511474609375, -1.9073486328125e-06, -0.000728607177734375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Arcane", " ", "Shot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score": -5.015470874099869, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "ArcaneShot", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.2636104656849056e-05, -8.583032467868179e-06, -2.52720492426306e-05, -5.53131103515625e-05, -0.0002460479736328125, -7.05718994140625e-05, -7.843970524845645e-05, -3.600119089242071e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.001026153564453125, 0.0, -4.196165536995977e-05, -1.1920928244535389e-07, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001491284347139299, -5.9604644775390625e-06, -9.5367431640625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002574920654296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.6689286894688848e-06, -1.9073486328125e-06, -6.687641143798828e-05, 0.0, -0.000629425048828125, -2.86102294921875e-05, -0.0002040863037109375, -9.894321920000948e-06, -0.0001087188720703125, -0.0004375240532681346, -0.0013275146484375, -0.000255584716796875, -7.62939453125e-06, -5.3642688726540655e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.00029480457305908203, -2.0265558760002023e-06, -4.949049949645996, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -4.38690185546875e-05, -0.00014495849609375, -0.00021946430206298828, -9.536738616588991e-07, -0.0034236907958984375, 0.0, -0.001140594482421875, -1.9073486328125e-05, -9.5367431640625e-06, -0.00016236305236816406, 0.0, -0.000301361083984375, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -5.91278076171875e-05, -7.62939453125e-06, -0.0001087188720703125, -3.814697265625e-06, -0.006449699401855469, -1.9073486328125e-05, -0.0001773834228515625, -3.24249267578125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -2.6702880859375e-05, -5.14984130859375e-05, -3.576278118089249e-07, -7.069110870361328e-05, -1.1920928244535389e-07, -0.0002657175064086914, -7.62939453125e-06, -1.9073486328125e-06, -0.0002765655517578125, -2.86102294921875e-05, -0.04714022949337959, -4.887569048150908e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00025844573974609375, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Arcane", " ", "Shot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.047685396461709, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "ArcaneShot", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.2636104656849056e-05, -8.583032467868179e-06, -2.52720492426306e-05, -5.53131103515625e-05, -0.0002460479736328125, -7.05718994140625e-05, -7.843970524845645e-05, -3.600119089242071e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.001026153564453125, 0.0, -4.196165536995977e-05, -1.1920928244535389e-07, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001491284347139299, -5.9604644775390625e-06, -9.5367431640625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002574920654296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.6689286894688848e-06, -1.9073486328125e-06, -6.687641143798828e-05, 0.0, -0.000629425048828125, -2.86102294921875e-05, -0.0002040863037109375, -9.894321920000948e-06, -0.0001087188720703125, -0.0004375240532681346, -0.0013275146484375, -0.000255584716796875, -7.62939453125e-06, -5.3642688726540655e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.00029480457305908203, -2.0265558760002023e-06, -4.9814958572387695, -1.1920928244535389e-07, -0.0002956390380859375, -2.09808349609375e-05, -4.00543212890625e-05, -7.05718994140625e-05, -0.0001888275146484375, -8.344646857949556e-07, -0.00391387939453125, 0.0, -0.0005512237548828125, -1.33514404296875e-05, -9.5367431640625e-06, -0.00016045570373535156, 0.0, -0.0003204345703125, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.91278076171875e-05, -7.62939453125e-06, -0.0001087188720703125, -3.814697265625e-06, -0.0062160491943359375, -1.9073486328125e-05, -0.00017547607421875, -3.24249267578125e-05, -7.62939453125e-06, -1.1444091796875e-05, -4.00543212890625e-05, -2.86102294921875e-05, -5.340576171875e-05, -3.576278118089249e-07, -7.069110870361328e-05, -2.3841855067985307e-07, -0.0002676248550415039, -7.62939453125e-06, -1.9073486328125e-06, -0.0002765655517578125, -2.86102294921875e-05, -0.04707096889615059, -4.887569048150908e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002593994140625, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Arcane", " ", "Shot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.192475341803956, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "ArcaneShot", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.2636104656849056e-05, -8.583032467868179e-06, -2.52720492426306e-05, -5.53131103515625e-05, -0.0002460479736328125, -7.05718994140625e-05, -7.843970524845645e-05, -3.600119089242071e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.001026153564453125, 0.0, -4.196165536995977e-05, -1.1920928244535389e-07, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001491284347139299, -5.9604644775390625e-06, -9.5367431640625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002574920654296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.6689286894688848e-06, -1.9073486328125e-06, -6.687641143798828e-05, 0.0, -0.000629425048828125, -2.86102294921875e-05, -0.0002040863037109375, -9.894321920000948e-06, -0.0001087188720703125, -0.0004375240532681346, -0.0013275146484375, -0.000255584716796875, -7.62939453125e-06, -5.3642688726540655e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.00029480457305908203, -2.0265558760002023e-06, -2.0924501419067383, 0.0, -3.24249267578125e-05, -3.4332275390625e-05, -3.4332275390625e-05, -7.62939453125e-05, -0.0002422332763671875, -3.576278118089249e-07, -0.00122833251953125, 0.0, -0.000278472900390625, -9.5367431640625e-06, -1.33514404296875e-05, -0.00015461444854736328, 0.0, -0.00032806396484375, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -8.392333984375e-05, -7.62939453125e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0058356523513793945, -2.09808349609375e-05, -0.0001850128173828125, -3.4332275390625e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -2.6702880859375e-05, -5.14984130859375e-05, -3.576278118089249e-07, -7.069110870361328e-05, -1.1920928244535389e-07, -0.0002657175064086914, -7.62939453125e-06, -1.9073486328125e-06, -0.0002765655517578125, -2.86102294921875e-05, -3.0838229656219482, -2.861018856492592e-06, -0.000141143798828125, -1.9073486328125e-06, -0.000736236572265625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Arcane", " ", "Shot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score": -5.596780907896267, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "ArcaneShot", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.2636104656849056e-05, -8.583032467868179e-06, -2.52720492426306e-05, -5.53131103515625e-05, -0.0002460479736328125, -7.05718994140625e-05, -7.843970524845645e-05, -3.600119089242071e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.001026153564453125, 0.0, -4.196165536995977e-05, -1.1920928244535389e-07, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001491284347139299, -5.9604644775390625e-06, -9.5367431640625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002574920654296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.6689286894688848e-06, -1.9073486328125e-06, -6.687641143798828e-05, 0.0, -0.000629425048828125, -2.86102294921875e-05, -0.0002040863037109375, -9.894321920000948e-06, -0.0001087188720703125, -0.0004375240532681346, -0.0013275146484375, -0.000255584716796875, -7.62939453125e-06, -5.3642688726540655e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.00029480457305908203, -2.0265558760002023e-06, -5.529338359832764, -5.7220458984375e-06, -9.5367431640625e-06, -3.0517578125e-05, -4.57763671875e-05, -7.2479248046875e-05, -0.000141143798828125, -2.145764938177308e-06, -0.004047393798828125, 0.0, -0.001468658447265625, -1.9073486328125e-05, -1.33514404296875e-05, -0.00017762184143066406, 0.0, -0.00032806396484375, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.71661376953125e-05, -5.91278076171875e-05, -7.62939453125e-06, -0.0001068115234375, -3.814697265625e-06, -0.00666046142578125, -1.9073486328125e-05, -0.0001735687255859375, -3.24249267578125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, -2.6702880859375e-05, -5.340576171875e-05, -3.576278118089249e-07, -7.069110870361328e-05, -1.1920928244535389e-07, -0.0002657175064086914, -7.62939453125e-06, -1.9073486328125e-06, -0.0002765655517578125, -2.86102294921875e-05, -0.047132719308137894, -4.887569048150908e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002593994140625, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Arcane", " ", "Shot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.991572980372794, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "ArcaneShot", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.2636104656849056e-05, -8.583032467868179e-06, -2.52720492426306e-05, -5.53131103515625e-05, -0.0002460479736328125, -7.05718994140625e-05, -7.843970524845645e-05, -3.600119089242071e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.001026153564453125, 0.0, -4.196165536995977e-05, -1.1920928244535389e-07, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001491284347139299, -5.9604644775390625e-06, -9.5367431640625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002574920654296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.6689286894688848e-06, -1.9073486328125e-06, -6.687641143798828e-05, 0.0, -0.000629425048828125, -2.86102294921875e-05, -0.0002040863037109375, -9.894321920000948e-06, -0.0001087188720703125, -0.0004375240532681346, -0.0013275146484375, -0.000255584716796875, -7.62939453125e-06, -5.3642688726540655e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.00029480457305908203, -2.0265558760002023e-06, -0.8107777833938599, 0.0, -7.2479248046875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -7.05718994140625e-05, -0.00020599365234375, -1.1920922133867862e-06, -0.002498626708984375, 0.0, -0.0013027191162109375, -1.52587890625e-05, -1.1444091796875e-05, -0.00017189979553222656, 0.0, -0.0003032684326171875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0001068115234375, -3.814697265625e-06, -5.121668815612793, -0.00011456012725830078, -0.00037384033203125, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.05718994140625e-05, -1.71661376953125e-05, -5.7220458984375e-05, -2.3841855067985307e-07, -6.866455078125e-05, -3.576278118089249e-07, -0.0002676248550415039, -3.814697265625e-06, -1.9073486328125e-06, -0.00034332275390625, -2.6702880859375e-05, -0.04673193022608757, -4.887569048150908e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00029468536376953125, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Arcane", " ", "Shot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -8.079209344272343, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Arcane Shot", "hole2": "WARLOCK", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "ArcaneShot", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.2636104656849056e-05, -8.583032467868179e-06, -2.52720492426306e-05, -5.53131103515625e-05, -0.0002460479736328125, -7.05718994140625e-05, -7.843970524845645e-05, -3.600119089242071e-05, -7.62939453125e-06, -1.33514404296875e-05, -7.956151962280273, -4.1961669921875e-05, -0.0010808884399011731, -0.0001678466796875, -2.861022494471399e-06, 0.0, -2.1099296645843424e-05, 0.0, -0.029575705528259277, 0.0, -7.009505497990176e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -0.0001163482666015625, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.030814528465270996, -2.6702880859375e-05, -0.000675201416015625, -7.2479248046875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0001125335693359375, -1.1444091796875e-05, -5.340576171875e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -2.3841855067985307e-07, -0.00032520294189453125, -7.62939453125e-06, -1.9073486328125e-06, -0.000286102294921875, -3.24249267578125e-05, -0.05843710899353027, -6.794906312279636e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00021946430206298828, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Arcane", " ", "Shot", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -10.171226519852084, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "Arcane Shot", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "index", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "ArcaneShot", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.2636104656849056e-05, -8.583032467868179e-06, -2.52720492426306e-05, -5.53131103515625e-05, -0.0002460479736328125, -7.05718994140625e-05, -7.843970524845645e-05, -3.600119089242071e-05, -7.62939453125e-06, -1.33514404296875e-05, -8.009322166442871, -0.01855182647705078, -0.001520790858194232, -0.00010573863983154297, -1.01327859738376e-05, -3.814697265625e-06, -6.079299055272713e-06, 0.0, -0.26434648036956787, 0.0, -0.7215261459350586, -0.0022754669189453125, -1.1444091796875e-05, -7.62939453125e-06, -0.0182647705078125, -3.814697265625e-06, -2.288818359375e-05, -4.00543212890625e-05, -0.007587432861328125, -1.1920928244535389e-07, -1.919269561767578e-05, 0.0, -1.0788471698760986, 0.0, -0.01244354248046875, -7.62939453125e-06, -3.814697265625e-06, -0.000301361083984375, -2.47955322265625e-05, -0.03497777506709099, -1.4185804502631072e-05, -2.6702880859375e-05, 0.0, -0.00025844573974609375, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Shot", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.index.damage(player.effective_spell_damage(2), self)\n"}, {"score": -22.92156410217285, "model_output": {"_type": "Module", "body": []}, "score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -22.921485900878906], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 6}
{"beams": [{"score": -0.12687841701954738, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Arcanite Reaper", "hole1": 5}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "ArcaniteReaper", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-3.0517578125e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0018130784155800939, -0.00010930894495686516, -2.6226003683404997e-05, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0004121065139770508, -0.0002884864807128906, -2.09808349609375e-05, -7.62939453125e-06, -0.03546142578125, -4.9591064453125e-05, -7.319182623177767e-05, -2.384185791015625e-05, -1.9073486328125e-06, -0.000732421875, -5.149726348463446e-05, -7.271740287251305e-06, -0.071114182472229, -0.002246856689453125, -0.0016384124755859375, -1.9073486328125e-06, -0.0006469488143920898, 0.0, 0.0, -0.0001430511474609375, -2.86102294921875e-05, -6.282326648943126e-05, -5.960462772236497e-07, -1.9073486328125e-06, -1.3470649719238281e-05, -7.629365427419543e-06, -0.005809783935546875, -0.0001316070556640625, -0.0001659393310546875, -9.34600830078125e-05, -0.0004405975341796875, -3.814697265625e-05, 0.0, -0.00012838741531595588, -0.0003625154204200953, -1.33514404296875e-05, -7.05718994140625e-05, -1.9073486328125e-06, -7.343021570704877e-05, -1.728529969113879e-05, -3.814697265625e-05, 0.0, -0.004307534079998732, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcanite", "Reaper", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "5", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -3.3487031746552063, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Arcanite Reaper", "hole1": 5}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "ArcaniteReaper", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-3.0517578125e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0018130784155800939, -0.00010930894495686516, -2.6226003683404997e-05, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0004121065139770508, -0.0002884864807128906, -2.09808349609375e-05, -7.62939453125e-06, -0.03546142578125, -4.9591064453125e-05, -7.319182623177767e-05, -2.384185791015625e-05, -1.9073486328125e-06, -0.000732421875, -5.149726348463446e-05, -7.271740287251305e-06, -3.2895703315734863, -1.33514404296875e-05, -0.008996963500976562, -5.7220458984375e-06, -0.0010892152786254883, 0.0, -5.7220458984375e-06, -0.000629425048828125, -2.288818359375e-05, -0.00010275839304085821, -5.960462772236497e-07, -1.9073486328125e-06, -3.063678741455078e-05, -1.0013530300057027e-05, -0.003414154052734375, -0.000152587890625, -0.0001163482666015625, -8.58306884765625e-05, -0.0005207061767578125, -4.00543212890625e-05, 0.0, -0.00012648029951378703, -0.0003235340118408203, -1.33514404296875e-05, -6.866455078125e-05, -1.9073486328125e-06, -7.23574121366255e-05, -1.621242699911818e-05, -4.00543212890625e-05, 0.0, -0.003952044062316418, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcanite", "Reaper", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "5", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -4.140574390580461, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "Arcanite Reaper", "hole1": 5}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "ArcaniteReaper", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-3.0517578125e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0018130784155800939, -0.00010930894495686516, -2.6226003683404997e-05, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0004121065139770508, -0.0002884864807128906, -2.09808349609375e-05, -7.62939453125e-06, -3.9328575134277344, -0.001148223876953125, -0.020479068160057068, -0.0006526708602905273, -1.8477439880371094e-05, -0.0001468658447265625, -4.887487375526689e-05, -4.0531076592742465e-06, -0.16969048976898193, 0.0, -0.0028533935546875, -1.9073486328125e-06, -0.0015221834182739258, 0.0, -7.62939453125e-06, -0.000209808349609375, -4.9591064453125e-05, -3.349781036376953e-05, -2.503394853192731e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.364403477869928e-06, -0.0005016326904296875, -0.0001983642578125, -0.000125885009765625, -0.0001220703125, -0.000499725341796875, -4.00543212890625e-05, 0.0, -0.0001257646654266864, -0.0004861354536842555, -1.1444091796875e-05, -4.76837158203125e-05, -1.9073486328125e-06, -8.380060899071395e-05, -1.9907896785298362e-05, -2.86102294921875e-05, 0.0, -0.005659637041389942, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcanite", "Reaper", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "5", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -4.4885685936873685, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Arcanite Reaper", "hole1": 5}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "ArcaniteReaper", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-3.0517578125e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0018130784155800939, -0.00010930894495686516, -2.6226003683404997e-05, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0004121065139770508, -0.0002884864807128906, -2.09808349609375e-05, -7.62939453125e-06, -0.03546142578125, -4.9591064453125e-05, -7.319182623177767e-05, -2.384185791015625e-05, -1.9073486328125e-06, -0.000732421875, -5.149726348463446e-05, -7.271740287251305e-06, -4.138391017913818, -0.0003223419189453125, -0.2966451644897461, -1.9073486328125e-06, -0.001876235008239746, 0.0, -1.9073486328125e-06, -0.0001697540283203125, -2.47955322265625e-05, -7.545947300968692e-05, -3.576278118089249e-07, -1.9073486328125e-06, -9.655952453613281e-06, -6.794906312279636e-06, -0.0053386688232421875, -0.0001468658447265625, -0.000118255615234375, -9.1552734375e-05, -0.0004558563232421875, -4.00543212890625e-05, 0.0, -0.00012457280536182225, -0.0003435611433815211, -1.33514404296875e-05, -6.103515625e-05, -1.9073486328125e-06, -8.070142212091014e-05, -1.7642923921812326e-05, -3.4332275390625e-05, 0.0, -0.004893580451607704, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcanite", "Reaper", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "5", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -4.975931182782425, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Arcanite Reaper", "hole2": "HUNTER", "hole1": 5, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "ArcaniteReaper", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-3.0517578125e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0018130784155800939, -0.00010930894495686516, -2.6226003683404997e-05, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0004121065139770508, -0.0002884864807128906, -2.09808349609375e-05, -7.62939453125e-06, -4.611118316650391, -0.0001010894775390625, -0.00011264643399044871, -0.00012636184692382812, -5.9604644775390625e-06, -1.1444091796875e-05, -2.5868259399430826e-05, -2.3841855067985307e-07, -0.10354757308959961, -1.9073486328125e-06, -0.10449875891208649, -0.0003157852333970368, -7.62939453125e-06, 0.0, -0.000141143798828125, 0.0, -0.0032922029495239258, -4.768370445162873e-07, -0.018805503845214844, -2.2649765014648438e-06, -0.06143665313720703, 0.0, -0.037117958068847656, 0.0, -1.1444091796875e-05, -0.0006628036499023438, -1.1444091796875e-05, -4.124630868318491e-05, -8.344646857949556e-07, -1.9073486328125e-06, -1.537799835205078e-05, -9.417489309271332e-06, -0.026288986206054688, -0.0001163482666015625, -0.0002536773681640625, -8.58306884765625e-05, -0.0004596710205078125, -3.4332275390625e-05, 0.0, -0.0001385197974741459, -0.000419378251535818, -1.33514404296875e-05, -8.20159912109375e-05, -1.9073486328125e-06, -7.104620453901589e-05, -1.621242699911818e-05, -4.1961669921875e-05, 0.0, -0.0036054777447134256, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcanite", "Reaper", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 80, 165, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "5", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -5.16486090970912, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template4", "hole0": "Arcanite Reaper", "hole1": 5}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "ArcaniteReaper", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-3.0517578125e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0018130784155800939, -0.00010930894495686516, -2.6226003683404997e-05, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0004121065139770508, -0.0002884864807128906, -2.09808349609375e-05, -7.62939453125e-06, -0.03546142578125, -4.9591064453125e-05, -7.319182623177767e-05, -2.384185791015625e-05, -1.9073486328125e-06, -0.000732421875, -5.149726348463446e-05, -7.271740287251305e-06, -5.069261074066162, -3.504752748995088e-05, -0.04224395751953125, -3.814697265625e-06, -0.0014755725860595703, 0.0, -7.62939453125e-06, -0.00024318695068359375, -2.47955322265625e-05, -6.890296208439395e-05, -3.576278118089249e-07, -1.9073486328125e-06, -1.1444091796875e-05, -5.364403477869928e-06, -0.0047855377197265625, -0.0002288818359375, -0.0001068115234375, -8.58306884765625e-05, -0.00031280517578125, -3.814697265625e-05, 0.0, -0.00013232104538474232, -0.00036871430347673595, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.297890937887132e-05, -1.8000548152485862e-05, -3.4332275390625e-05, 0.0, -0.005913909990340471, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "Arcanite", "Reaper", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "5", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -5.6170486863969415, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template4", "hole0": "Arcanite Reaper", "hole1": 5}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "ArcaniteReaper", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-3.0517578125e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0018130784155800939, -0.00010930894495686516, -2.6226003683404997e-05, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0004121065139770508, -0.0002884864807128906, -2.09808349609375e-05, -7.62939453125e-06, -0.03546142578125, -4.9591064453125e-05, -7.319182623177767e-05, -2.384185791015625e-05, -1.9073486328125e-06, -0.000732421875, -5.149726348463446e-05, -7.271740287251305e-06, -5.549326419830322, -0.000102996826171875, -0.013826370239257812, -1.9073486328125e-06, -0.0006276369094848633, 0.0, -9.5367431640625e-06, -0.000179290771484375, -2.09808349609375e-05, -6.592270074179396e-05, -4.768370445162873e-07, 0.0, -1.52587890625e-05, -5.602820692729438e-06, -0.006134033203125, -0.0002918243408203125, -0.000125885009765625, -9.34600830078125e-05, -0.0002288818359375, -3.62396240234375e-05, 0.0, -0.00014042672410141677, -0.00041139122913591564, -1.52587890625e-05, -6.866455078125e-05, -1.9073486328125e-06, -0.00010013077553594485, -1.83581723831594e-05, -3.4332275390625e-05, 0.0, -0.00588601641356945, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "Arcanite", "Reaper", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "HUNTER", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "5", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -5.622496615547618, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Arcanite Reaper", "hole1": 5}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 5}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "ArcaniteReaper", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-3.0517578125e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0018130784155800939, -0.00010930894495686516, -2.6226003683404997e-05, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0004121065139770508, -0.0002884864807128906, -2.09808349609375e-05, -7.62939453125e-06, -0.03546142578125, -4.9591064453125e-05, -7.319182623177767e-05, -2.384185791015625e-05, -1.9073486328125e-06, -0.000732421875, -5.149726348463446e-05, -7.271740287251305e-06, -0.071114182472229, -0.002246856689453125, -0.0016384124755859375, -1.9073486328125e-06, -0.0006469488143920898, 0.0, 0.0, -0.0001430511474609375, -2.86102294921875e-05, -6.282326648943126e-05, -5.960462772236497e-07, -1.9073486328125e-06, -1.3470649719238281e-05, -7.629365427419543e-06, -0.005809783935546875, -0.0001316070556640625, -0.0001659393310546875, -9.34600830078125e-05, -0.0004405975341796875, -3.814697265625e-05, 0.0, -0.00012838741531595588, -0.0003625154204200953, -1.33514404296875e-05, -7.05718994140625e-05, -1.9073486328125e-06, -7.343021570704877e-05, -1.728529969113879e-05, -3.814697265625e-05, 0.0, -5.4999189376831055, -6.914134246471804e-06], "choice_history": [55, 124, 221, 63, 103, "Arcanite", "Reaper", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "5", "<EOS>", 39, 130, "5", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 5)\n"}, {"score": -6.15875644051772, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "ArcaniteReaper", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-3.0517578125e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0018130784155800939, -0.00010930894495686516, -2.6226003683404997e-05, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0004121065139770508, -0.0002884864807128906, -2.09808349609375e-05, -7.62939453125e-06, -5.688803672790527, -1.9073486328125e-06, -1.3828277587890625e-05, -8.225440979003906e-06, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0005806665867567062, -0.0002561807632446289, -2.6702880859375e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -0.003879547119140625, -4.38690185546875e-05, -3.814697265625e-06, -0.000148773193359375, 0.0, -7.390969585685525e-06, -3.814697265625e-06, -8.213520050048828e-05, 0.0, -0.0071811676025390625, -9.5367431640625e-06, -9.5367431640625e-06, -6.735317583661526e-05, -2.47955322265625e-05, -3.7670135498046875e-05, -0.000152587890625, 0.0, 0.0, -8.701920887688175e-05, -1.8477434423402883e-05, 0.0, 0.0, -2.288818359375e-05, 0.0, -0.0001049041748046875, -3.3378591979271732e-06, -0.10106384754180908, -2.1457672119140625e-06, -0.0003871917724609375, -1.1444091796875e-05, -2.288818359375e-05, 0.0, -8.0108642578125e-05, -4.875540980719961e-05, -0.32744598388671875, -1.9073486328125e-06, -0.000560760498046875, -0.00020599365234375, -0.0003445148468017578, -1.4901160284352954e-05, -0.002651214599609375, -1.9073486328125e-06, -0.0034742355346679688, 0.0, -9.34600830078125e-05, -0.0002574920654296875, -2.47955322265625e-05, -0.00017499922250863165, -8.344646857949556e-07, -1.9073486328125e-06, -1.919269561767578e-05, -1.4185804502631072e-05, -0.01036834716796875, -0.0005893707275390625, -0.00017547607421875, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-05, 0.0, -0.00019084835366811603, -0.0008336305036209524, -1.71661376953125e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0001224204315803945, -1.8119757442036644e-05, -3.4332275390625e-05, 0.0, -0.0047138407826423645, -3.576278118089249e-07], "choice_history": [55, 124, 221, 63, 103, "Arcanite", "Reaper", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Arcanite", " ", "Reaper", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "5", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, True)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -6.289006991280921, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR<UNK>", "_type": "Template4", "hole0": "Arcanite Reaper", "hole1": 5}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "ArcaniteReaper", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-3.0517578125e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0018130784155800939, -0.00010930894495686516, -2.6226003683404997e-05, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0004121065139770508, -0.0002884864807128906, -2.09808349609375e-05, -7.62939453125e-06, -0.03546142578125, -4.9591064453125e-05, -7.319182623177767e-05, -2.384185791015625e-05, -1.9073486328125e-06, -0.000732421875, -5.149726348463446e-05, -7.271740287251305e-06, -0.071114182472229, -6.151498794555664, -8.940695806813892e-06, -0.016082763671875, -3.814697265625e-06, -0.000978708267211914, 0.0, -1.9073486328125e-06, -0.00020599365234375, -2.47955322265625e-05, -7.963179814396426e-05, -3.576278118089249e-07, -1.9073486328125e-06, -1.3470649719238281e-05, -8.940656698541716e-06, -0.0036945343017578125, -0.00014495849609375, -0.0001220703125, -9.1552734375e-05, -0.0004329681396484375, -4.00543212890625e-05, 0.0, -0.00013053325528744608, -0.0003112554259132594, -1.33514404296875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -7.4026218499057e-05, -1.6450841940240934e-05, -3.814697265625e-05, 0.0, -0.004524859134107828, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcanite", "Reaper", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<UNK>", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "5", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR<UNK>,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -6.411404529346264, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "Weapon", "_type": "Template4", "hole0": "Arcanite Reaper", "hole1": 5}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "ArcaniteReaper", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-3.0517578125e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0018130784155800939, -0.00010930894495686516, -2.6226003683404997e-05, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0004121065139770508, -0.0002884864807128906, -2.09808349609375e-05, -7.62939453125e-06, -0.03546142578125, -4.9591064453125e-05, -7.319182623177767e-05, -2.384185791015625e-05, -1.9073486328125e-06, -0.000732421875, -5.149726348463446e-05, -7.271740287251305e-06, -6.35231351852417, -7.43865966796875e-05, -0.00913238525390625, -1.9073486328125e-06, -0.0012133121490478516, 0.0, -1.9073486328125e-06, -0.0001773834228515625, -2.6702880859375e-05, -6.008147829561494e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.62939453125e-06, -6.437280717364047e-06, -0.0030498504638671875, -0.000156402587890625, -0.000118255615234375, -0.0001049041748046875, -0.00048828125, -3.814697265625e-05, 0.0, -0.0001264802267542109, -0.00033557412098161876, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -7.819822349119931e-05, -1.6570051229791716e-05, -3.62396240234375e-05, 0.0, -0.004476337227970362, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcanite", "Reaper", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "Weapon", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "5", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.Weapon,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -6.431321769996195, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Arcanite Reaper", "hole1": 5}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "ArcaniteReaper", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-3.0517578125e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0018130784155800939, -0.00010930894495686516, -2.6226003683404997e-05, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0004121065139770508, -0.0002884864807128906, -2.09808349609375e-05, -7.62939453125e-06, -0.03546142578125, -4.9591064453125e-05, -7.319182623177767e-05, -2.384185791015625e-05, -1.9073486328125e-06, -0.000732421875, -5.149726348463446e-05, -7.271740287251305e-06, -6.2160115242004395, -5.340576171875e-05, -0.16442298889160156, -1.9073486328125e-06, -0.0006142854690551758, 0.0, -3.814697265625e-06, -0.0002002716064453125, -2.09808349609375e-05, -6.294249033089727e-05, -7.152555099310121e-07, -1.9073486328125e-06, -1.1563301086425781e-05, -8.821448318485636e-06, -0.0048770904541015625, -0.000141143798828125, -0.000202178955078125, -0.000102996826171875, -0.0004215240478515625, -3.62396240234375e-05, 0.0, -0.00013041379861533642, -0.00038135048816911876, -1.33514404296875e-05, -7.43865966796875e-05, -1.9073486328125e-06, -7.581422687508166e-05, -1.740450898068957e-05, -4.00543212890625e-05, 0.0, -0.0041114287450909615, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcanite", "Reaper", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "5", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"score": -7.533957475277788, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Arcanite Reaper", "hole1": 5}, {"hole2": "Did", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 5, "hole1": 2}], "_type": "ClassDef", "name": "ArcaniteReaper", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-3.0517578125e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0018130784155800939, -0.00010930894495686516, -2.6226003683404997e-05, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0004121065139770508, -0.0002884864807128906, -2.09808349609375e-05, -7.62939453125e-06, -0.03546142578125, -4.9591064453125e-05, -7.319182623177767e-05, -2.384185791015625e-05, -1.9073486328125e-06, -0.000732421875, -5.149726348463446e-05, -7.271740287251305e-06, -4.138391017913818, -0.0003223419189453125, -1.3640718460083008, -3.814697265625e-06, -1.2636104656849056e-05, -1.4305104514278355e-06, -0.15181468427181244, -2.3841855067985307e-07, -1.2599449157714844, -3.254413604736328e-05, -0.5699195861816406, -0.000148773193359375, -0.010014409199357033, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcanite", "Reaper", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", 72, 145, "5", "<EOS>", "2", "<EOS>", "Did", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(5, 2, Did=1)\n"}, {"score": -18.77796173095703, "model_output": {"_type": "Module", "body": [{"_type": "Break"}]}, "score_history": [-3.0517578125e-05, -1.1444091796875e-05, -1.52587890625e-05, -18.777904510498047], "choice_history": [55, 124, 221, 62], "inferred_code": "break\n"}, {"score": -22.36808204650879, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.0517578125e-05, -1.1444091796875e-05, -22.368040084838867], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 7}
{"beams": [{"score": -0.16672944269401313, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Assassinate", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -2.0265558760002023e-06, -0.00014710056711919606, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.428096771240234e-05, -0.0001114606493501924, -9.5367431640625e-06, -0.0001010894775390625, -0.004146575927734375, -7.62939453125e-06, -5.1377883210079744e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -6.97356226737611e-05, -1.919269561767578e-05, -0.00038909912109375, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006046295166015625, -4.57763671875e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -2.300717096659355e-05, 0.0, -8.7738037109375e-05, 0.0, -0.000152587890625, -0.0019073486328125, -2.47955322265625e-05, -3.576278118089249e-07, -2.1457672119140625e-06, -2.6702880859375e-05, -0.0001201629638671875, -2.9682672902708873e-05, -4.410743713378906e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.000110626220703125, -0.12218272686004639, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00026702880859375, -7.987019671418238e-06, -0.0017322301864624023, -1.9073486328125e-06, -0.02095317840576172, -0.0001678466796875, 0.0, -0.0005208253860473633, 0.0, -5.7220458984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.000152587890625, -1.9073486328125e-05, -0.0002346038818359375, -0.0005817413330078125, -0.007639050483703613, -1.71661376953125e-05, -0.0002307891845703125, -0.0008983612060546875, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002689361572265625, -1.1920928244535389e-07, -2.1457672119140625e-06, 0.0, -0.0011148452758789062, 0.0, -0.000827789306640625, -0.0001354217529296875, 0.0, -0.0001201629638671875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Assassinate", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Assassinate", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -2.4448723717320533, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Assassinate", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -2.0265558760002023e-06, -0.00014710056711919606, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.428096771240234e-05, -0.0001114606493501924, -9.5367431640625e-06, -0.0001010894775390625, -0.004146575927734375, -7.62939453125e-06, -5.1377883210079744e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -6.97356226737611e-05, -1.919269561767578e-05, -0.00038909912109375, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006046295166015625, -4.57763671875e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -2.300717096659355e-05, 0.0, -8.7738037109375e-05, 0.0, -0.000152587890625, -0.0019073486328125, -2.47955322265625e-05, -3.576278118089249e-07, -2.1457672119140625e-06, -2.6702880859375e-05, -0.0001201629638671875, -2.9682672902708873e-05, -4.410743713378906e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.000110626220703125, -2.360560178756714, -2.1457672119140625e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.340576171875e-05, -1.1086422091466375e-05, -0.0021228790283203125, -1.9073486328125e-06, -0.06062507629394531, -0.000152587890625, 0.0, -0.0005536079406738281, 0.0, -6.103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0001659393310546875, -1.9073486328125e-05, -0.0002460479736328125, -0.000652313232421875, -0.007425069808959961, -1.71661376953125e-05, -0.0002269744873046875, -0.0009098052978515625, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.000263214111328125, -1.1920928244535389e-07, -4.0531158447265625e-06, 0.0, -0.0011196136474609375, 0.0, -0.0008373260498046875, -0.0001354217529296875, 0.0, -0.0001201629638671875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Assassinate", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Assassinate", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -4.925419919111533, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Assassinate", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -2.0265558760002023e-06, -0.00014710056711919606, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.428096771240234e-05, -0.0001114606493501924, -9.5367431640625e-06, -0.0001010894775390625, -0.004146575927734375, -7.62939453125e-06, -5.1377883210079744e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -6.97356226737611e-05, -1.919269561767578e-05, -0.00038909912109375, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006046295166015625, -4.57763671875e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -2.300717096659355e-05, 0.0, -8.7738037109375e-05, 0.0, -0.000152587890625, -0.0019073486328125, -2.47955322265625e-05, -3.576278118089249e-07, -2.1457672119140625e-06, -2.6702880859375e-05, -0.0001201629638671875, -2.9682672902708873e-05, -4.410743713378906e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.000110626220703125, -0.12218272686004639, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00026702880859375, -7.987019671418238e-06, -0.0017322301864624023, -1.9073486328125e-06, -3.8976259231567383, -6.67572021484375e-05, -9.5367431640625e-06, -0.00203704833984375, 0.0, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0002269744873046875, -4.9591064453125e-05, -0.0003300905227661133, -0.000835418701171875, -0.00666654109954834, -3.0517578125e-05, -0.0023784637451171875, -5.7220458984375e-06, -0.011724472045898438, 0.0, -0.0003814697265625, -0.0024166107177734375, -3.814697265625e-06, -5.340576171875e-05, -2.288818359375e-05, -0.002768278121948242, -7.62939453125e-06, -0.00254058837890625, -7.2479248046875e-05, -0.0022029876708984375, -0.00019073486328125, -0.0006542205810546875, -0.0006046295166015625, -0.000194549560546875, -0.0028228759765625, -0.000759124755859375, -1.9073486328125e-06, -0.0006685256958007812, 0.0, -0.02963268756866455, 0.0, -2.288818359375e-05, -0.019309043884277344, -1.52587890625e-05, -0.02096080780029297, -0.00016021728515625, -0.0001506805419921875, -9.5367431640625e-06, -0.037403106689453125, 0.0, -0.0008268356323242188, -2.3841855067985307e-07, -0.0795823335647583, 0.0, -0.013942718505859375, -0.001617431640625, -0.000194549560546875, -0.0080108642578125, -0.009403228759765625, 0.0, -0.00046062469482421875, 0.0, -0.6300802230834961, 0.0, -0.0003528594970703125, -0.0001220703125, -5.7220458984375e-06, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0002956390380859375, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0009425878524780273, 0.0, -0.0003566741943359375, -0.0001659393310546875, 0.0, -0.00018310546875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Assassinate", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Assassinate", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.216076128103538, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Assassinate", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -2.0265558760002023e-06, -0.00014710056711919606, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.428096771240234e-05, -0.0001114606493501924, -9.5367431640625e-06, -0.0001010894775390625, -0.004146575927734375, -7.62939453125e-06, -5.1377883210079744e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -6.97356226737611e-05, -1.919269561767578e-05, -0.00038909912109375, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006046295166015625, -4.57763671875e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -2.300717096659355e-05, 0.0, -8.7738037109375e-05, 0.0, -0.000152587890625, -0.0019073486328125, -2.47955322265625e-05, -3.576278118089249e-07, -2.1457672119140625e-06, -2.6702880859375e-05, -0.0001201629638671875, -2.9682672902708873e-05, -4.410743713378906e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.000110626220703125, -0.12218272686004639, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00026702880859375, -7.987019671418238e-06, -0.0017322301864624023, -1.9073486328125e-06, -3.8976259231567383, -6.67572021484375e-05, -9.5367431640625e-06, -0.00203704833984375, 0.0, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0002269744873046875, -4.9591064453125e-05, -0.0003300905227661133, -0.000835418701171875, -0.00666654109954834, -3.0517578125e-05, -0.0023784637451171875, -5.7220458984375e-06, -0.011724472045898438, 0.0, -0.0003814697265625, -0.0024166107177734375, -3.814697265625e-06, -5.340576171875e-05, -2.288818359375e-05, -0.002768278121948242, -7.62939453125e-06, -0.00254058837890625, -7.2479248046875e-05, -0.0022029876708984375, -0.00019073486328125, -0.0006542205810546875, -0.0006046295166015625, -0.000194549560546875, -0.0028228759765625, -0.000759124755859375, -1.9073486328125e-06, -0.0006685256958007812, 0.0, -0.02963268756866455, 0.0, -2.288818359375e-05, -0.019309043884277344, -1.52587890625e-05, -0.02096080780029297, -0.00016021728515625, -0.0001506805419921875, -9.5367431640625e-06, -0.037403106689453125, 0.0, -0.0008268356323242188, -2.3841855067985307e-07, -0.0795823335647583, 0.0, -0.013942718505859375, -0.001617431640625, -0.000194549560546875, -0.0080108642578125, -0.009403228759765625, 0.0, -0.00046062469482421875, 0.0, -0.9202308654785156, 0.0, -0.0004425048828125, -0.00020599365234375, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.00017547607421875, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.0010857582092285156, 0.0, -0.0006351470947265625, -0.0002384185791015625, 0.0, -0.0001373291015625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Assassinate", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Assassinate", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.406749836965609, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Assassinate", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -2.0265558760002023e-06, -0.00014710056711919606, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.428096771240234e-05, -0.0001114606493501924, -9.5367431640625e-06, -0.0001010894775390625, -0.004146575927734375, -7.62939453125e-06, -5.1377883210079744e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -6.97356226737611e-05, -1.919269561767578e-05, -0.00038909912109375, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006046295166015625, -4.57763671875e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -2.300717096659355e-05, 0.0, -8.7738037109375e-05, 0.0, -0.000152587890625, -0.0019073486328125, -2.47955322265625e-05, -3.576278118089249e-07, -2.1457672119140625e-06, -2.6702880859375e-05, -0.0001201629638671875, -2.9682672902708873e-05, -4.410743713378906e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.000110626220703125, -5.34810733795166, 0.0, -7.62939453125e-06, -7.62939453125e-06, -7.62939453125e-06, -1.71661376953125e-05, -7.2479248046875e-05, -1.2516919014160521e-05, -0.0017056465148925781, 0.0, -0.035300254821777344, -0.0001850128173828125, 0.0, -0.0004197359085083008, 0.0, -5.91278076171875e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-05, -0.000244140625, -0.0006122589111328125, -0.007570028305053711, -1.71661376953125e-05, -0.000232696533203125, -0.000926971435546875, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002593994140625, -1.1920928244535389e-07, -2.1457672119140625e-06, 0.0, -0.0011320114135742188, 0.0, -0.0008220672607421875, -0.0001354217529296875, 0.0, -0.0001220703125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Assassinate", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Assassinate", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.438125841209107, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Assassinate", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -2.0265558760002023e-06, -0.00014710056711919606, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.428096771240234e-05, -0.0001114606493501924, -9.5367431640625e-06, -0.0001010894775390625, -0.004146575927734375, -7.62939453125e-06, -5.1377883210079744e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -6.97356226737611e-05, -1.919269561767578e-05, -0.00038909912109375, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006046295166015625, -4.57763671875e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -2.300717096659355e-05, 0.0, -8.7738037109375e-05, 0.0, -0.000152587890625, -0.0019073486328125, -2.47955322265625e-05, -3.576278118089249e-07, -2.1457672119140625e-06, -2.6702880859375e-05, -0.0001201629638671875, -2.9682672902708873e-05, -4.410743713378906e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.000110626220703125, -5.3743414878845215, -1.4305104514278355e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -7.43865966796875e-05, -9.775130820344202e-06, -0.0026160478591918945, 0.0, -0.03947734832763672, -0.000148773193359375, 0.0, -0.0005784034729003906, 0.0, -5.91278076171875e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0001659393310546875, -1.9073486328125e-05, -0.000247955322265625, -0.000629425048828125, -0.007550954818725586, -1.9073486328125e-05, -0.000232696533203125, -0.00090789794921875, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.000270843505859375, -1.1920928244535389e-07, -4.0531158447265625e-06, 0.0, -0.0011129379272460938, 0.0, -0.0008182525634765625, -0.0001354217529296875, 0.0, -0.0001201629638671875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Assassinate", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Assassinate", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.462194792845075, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Assassinate", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -2.0265558760002023e-06, -0.00014710056711919606, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.428096771240234e-05, -0.0001114606493501924, -9.5367431640625e-06, -0.0001010894775390625, -0.004146575927734375, -7.62939453125e-06, -5.1377883210079744e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -6.97356226737611e-05, -1.919269561767578e-05, -0.00038909912109375, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006046295166015625, -4.57763671875e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -2.300717096659355e-05, 0.0, -8.7738037109375e-05, 0.0, -0.000152587890625, -0.0019073486328125, -2.47955322265625e-05, -3.576278118089249e-07, -2.1457672119140625e-06, -2.6702880859375e-05, -0.0001201629638671875, -2.9682672902708873e-05, -4.410743713378906e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.000110626220703125, -0.12218272686004639, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00026702880859375, -7.987019671418238e-06, -0.0017322301864624023, -1.9073486328125e-06, -0.02095317840576172, -0.0001678466796875, 0.0, -0.0005208253860473633, 0.0, -5.7220458984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.000152587890625, -1.9073486328125e-05, -0.0002346038818359375, -0.0005817413330078125, -5.304105758666992, -3.933906555175781e-06, -0.000431060791015625, -0.000247955322265625, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.0001068115234375, -1.1920928244535389e-07, -4.0531158447265625e-06, 0.0, -0.0010727643966674805, 0.0, -0.0004673004150390625, -0.0001316070556640625, 0.0, -0.0001125335693359375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Assassinate", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Assassinate", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -6.452429406265473, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Assassinate", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -2.0265558760002023e-06, -0.00014710056711919606, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.428096771240234e-05, -0.0001114606493501924, -9.5367431640625e-06, -0.0001010894775390625, -0.004146575927734375, -7.62939453125e-06, -5.1377883210079744e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -6.97356226737611e-05, -1.919269561767578e-05, -0.00038909912109375, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006046295166015625, -4.57763671875e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -2.300717096659355e-05, 0.0, -8.7738037109375e-05, 0.0, -0.000152587890625, -0.0019073486328125, -2.47955322265625e-05, -3.576278118089249e-07, -2.1457672119140625e-06, -2.6702880859375e-05, -0.0001201629638671875, -2.9682672902708873e-05, -4.410743713378906e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.000110626220703125, -6.4155378341674805, -2.0265579223632812e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001983642578125, -9.179114385915454e-06, -0.0025451183319091797, -1.9073486328125e-06, -0.012783050537109375, -0.0001678466796875, 0.0, -0.0005475282669067383, 0.0, -5.91278076171875e-05, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.000152587890625, -1.9073486328125e-05, -0.0002384185791015625, -0.0005741119384765625, -0.007410407066345215, -1.71661376953125e-05, -0.000213623046875, -0.000896453857421875, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00026702880859375, -1.1920928244535389e-07, -2.1457672119140625e-06, 0.0, -0.0011129379272460938, 0.0, -0.00083160400390625, -0.000133514404296875, 0.0, -0.000118255615234375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Assassinate", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Assassinate", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -6.574145428755109, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Assassinate", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -2.0265558760002023e-06, -0.00014710056711919606, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.428096771240234e-05, -0.0001114606493501924, -9.5367431640625e-06, -0.0001010894775390625, -0.004146575927734375, -7.62939453125e-06, -5.1377883210079744e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -6.97356226737611e-05, -1.919269561767578e-05, -0.00038909912109375, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006046295166015625, -4.57763671875e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -2.300717096659355e-05, 0.0, -8.7738037109375e-05, 0.0, -0.000152587890625, -0.0019073486328125, -2.47955322265625e-05, -3.576278118089249e-07, -2.1457672119140625e-06, -2.6702880859375e-05, -0.0001201629638671875, -2.9682672902708873e-05, -4.410743713378906e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.000110626220703125, -0.12218272686004639, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00026702880859375, -7.987019671418238e-06, -6.428931713104248, -1.1444091796875e-05, -0.000244140625, -0.000278472900390625, 0.0, -0.0004520416259765625, 0.0, -6.866455078125e-05, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0001544952392578125, -2.09808349609375e-05, -0.000217437744140625, -0.0005664825439453125, -0.008402466773986816, -2.09808349609375e-05, -0.000293731689453125, -0.0007648468017578125, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002841949462890625, -1.1920928244535389e-07, -4.0531158447265625e-06, 0.0, -0.0011283159255981445, 0.0, -0.00096893310546875, -0.0001468658447265625, 0.0, -0.0001087188720703125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Assassinate", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Assassinate", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -8.651165891581506, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "Assassinate", "hole1": 5}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "die"}], "_type": "ClassDef", "name": "Assassinate", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -2.0265558760002023e-06, -0.00014710056711919606, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.428096771240234e-05, -0.0001114606493501924, -9.5367431640625e-06, -0.0001010894775390625, -5.946186065673828, -0.0052490234375, -0.005333836190402508, -3.099440846199286e-06, -7.1403817855753e-05, -3.480901796137914e-05, -1.154451608657837, 0.0, -0.34639930725097656, -0.025615692138671875, -3.814697265625e-06, -5.53131103515625e-05, -0.00058746337890625, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -0.5863876342773438, 0.0, -7.748603820800781e-06, -3.933906555175781e-06, -0.5739109516143799, -1.1920928244535389e-07, -0.002062678337097168, 0.0, -0.0034122467041015625, -0.0005893707275390625, 0.0, -0.00014400482177734375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Assassinate", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Assassinate", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.target.die(self)\n"}, {"score": -8.726271720680188, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Assassinate", "hole1": 5}, {"hole2": [{"_type": "Template33", "hole0": 5}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Assassinate", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -2.0265558760002023e-06, -0.00014710056711919606, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.428096771240234e-05, -0.0001114606493501924, -9.5367431640625e-06, -0.0001010894775390625, -5.946186065673828, -0.0052490234375, -0.005333836190402508, -3.099440846199286e-06, -7.1403817855753e-05, -3.480901796137914e-05, -0.5068457126617432, -2.0265558760002023e-06, -0.018568038940429688, -0.0071926116943359375, -1.9073486328125e-06, -2.6702880859375e-05, -0.001544952392578125, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.145477294921875, -7.62939453125e-06, -0.0038133859634399414, 0.0, -0.34449175000190735, 0.0, -0.5118331909179688, 0.0, -0.001190185546875, -1.2246379852294922, -0.000476837158203125, -0.00262786285020411, -2.4318398573086597e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.0265579223632812e-06], "choice_history": [55, 124, 221, 63, 103, "Assassinate", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Assassinate", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "5", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score": -8.792442757777053, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Assassinate", "hole1": 5}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "die"}], "_type": "ClassDef", "name": "Assassinate", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -2.0265558760002023e-06, -0.00014710056711919606, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.428096771240234e-05, -0.0001114606493501924, -9.5367431640625e-06, -0.0001010894775390625, -5.946186065673828, -0.0052490234375, -0.005333836190402508, -3.099440846199286e-06, -7.1403817855753e-05, -3.480901796137914e-05, -0.5068457126617432, -2.0265558760002023e-06, -0.018568038940429688, -0.0071926116943359375, -1.9073486328125e-06, -2.6702880859375e-05, -0.001544952392578125, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.145477294921875, -7.62939453125e-06, -0.0038133859634399414, 0.0, -0.34449175000190735, 0.0, -1.7910170555114746, 0.0, -0.014131546020507812, -0.0017518997192382812, 0.0, -7.2479248046875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Assassinate", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Assassinate", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.die(self)\n"}, {"score": -8.983935881546806, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Assassinate", "hole1": 5}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "die"}], "_type": "ClassDef", "name": "Assassinate", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -2.0265558760002023e-06, -0.00014710056711919606, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.428096771240234e-05, -0.0001114606493501924, -9.5367431640625e-06, -0.0001010894775390625, -5.946186065673828, -0.0052490234375, -0.005333836190402508, -3.099440846199286e-06, -7.1403817855753e-05, -3.480901796137914e-05, -0.5068457126617432, -2.0265558760002023e-06, -0.018568038940429688, -0.0071926116943359375, -1.9073486328125e-06, -2.6702880859375e-05, -0.001544952392578125, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -2.020462989807129, 0.0, -9.775161743164062e-06, -2.2649765014648438e-06, -0.4635140895843506, -1.1920928244535389e-07, -0.002254962921142578, 0.0, -0.0055141448974609375, -0.0003833770751953125, 0.0, -0.00011444091796875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Assassinate", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Assassinate", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.target.die(self)\n"}, {"score": -9.729846913508254, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Assassinate", "hole1": 5}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "Damaged"}], "_type": "ClassDef", "name": "Assassinate", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -2.0265558760002023e-06, -0.00014710056711919606, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.428096771240234e-05, -0.0001114606493501924, -9.5367431640625e-06, -0.0001010894775390625, -5.946186065673828, -0.0052490234375, -0.005333836190402508, -3.099440846199286e-06, -7.1403817855753e-05, -3.480901796137914e-05, -0.5068457126617432, -2.0265558760002023e-06, -0.018568038940429688, -0.0071926116943359375, -1.9073486328125e-06, -2.6702880859375e-05, -0.001544952392578125, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.145477294921875, -7.62939453125e-06, -0.0038133859634399414, 0.0, -0.34449175000190735, 0.0, -2.2287607192993164, 0.0, -0.2581806182861328, -0.25713443756103516, 0.0, -0.000301361083984375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Assassinate", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Assassinate", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "Damaged", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.Damaged(self)\n"}, {"score": -23.01710319519043, "model_output": {"_type": "Module", "body": []}, "score_history": [-4.38690185546875e-05, 0.0, -23.017059326171875], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 8}
{"beams": [{"score": -0.3717832471617939, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -0.00019178935326635838, -0.0004836319130845368, -8.58306884765625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -2.5510787963867188e-05, -0.0007424351642839611, -1.9073486328125e-06, -3.814697265625e-05, -0.0039424896240234375, -7.62939453125e-06, -2.0503857740550302e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.0980818590032868e-05, -6.103515625e-05, -8.96453857421875e-05, -1.52587890625e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.000213623046875, -7.43865966796875e-05, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -2.503394853192731e-06, -3.814697265625e-06, -6.496906280517578e-05, 0.0, -0.0004863739013671875, -8.96453857421875e-05, -5.91278076171875e-05, -4.0531076592742465e-06, -4.768370445162873e-07, -4.76837158203125e-05, -4.76837158203125e-05, -0.00010144187399419025, -3.933906555175781e-06, -3.24249267578125e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000164031982421875, -0.0006333589553833008, -3.0517578125e-05, -0.009534716606140137, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-05, -4.29153169534402e-06, -0.007282376289367676, 0.0, -0.019331932067871094, -0.000102996826171875, -5.7220458984375e-06, -0.0003434419631958008, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.14984130859375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -7.62939453125e-06, -0.0035543441772460938, -5.7220458984375e-06, -0.0028743743896484375, -0.0001773834228515625, -0.0019865036010742188, -3.814697265625e-06, -0.0004100799560546875, -0.0007724761962890625, -3.814697265625e-06, -0.0001239776611328125, -1.33514404296875e-05, -0.0049953460693359375, -4.0531158447265625e-06, -0.007615089416503906, -5.340576171875e-05, -0.016541481018066406, -0.0005741119384765625, -0.0013637542724609375, -0.000263214111328125, -0.001125335693359375, -5.53131103515625e-05, -0.030516624450683594, -9.5367431640625e-06, -0.0022439956665039062, -2.622600959512056e-06, -0.0031243562698364258, 0.0, -2.09808349609375e-05, -0.09781360626220703, -5.53131103515625e-05, -0.010313034057617188, -0.008440971374511719, -2.288818359375e-05, -7.62939453125e-06, -0.01116180419921875, 0.0, -0.008465766906738281, -4.768370445162873e-07, -0.0143280029296875, 0.0, -0.0030164718627929688, -0.0004024505615234375, -9.5367431640625e-06, -4.38690185546875e-05, -0.00592803955078125, 0.0, -0.0038309097290039062, -1.1920928244535389e-07, -0.039028167724609375, -1.9073486328125e-06, -0.001796722412109375, -9.1552734375e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0002574920654296875, -7.62939453125e-06, -1.52587890625e-05, -2.3841855067985307e-07, -1.1563301086425781e-05, 0.0, -0.03167724609375, -3.814697265625e-06, -5.14984130859375e-05, -0.0010738372802734375, -1.71661376953125e-05, -0.010245099663734436, -5.9604562920867465e-06, -1.9073486328125e-05, 0.0, -0.00016605854034423828, 0.0], "choice_history": [55, 124, 221, 63, 103, "Backstab", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Backstab", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 2, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -3.2066912343164446, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -0.00019178935326635838, -0.0004836319130845368, -8.58306884765625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -2.5510787963867188e-05, -0.0007424351642839611, -1.9073486328125e-06, -3.814697265625e-05, -0.0039424896240234375, -7.62939453125e-06, -2.0503857740550302e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.0980818590032868e-05, -6.103515625e-05, -8.96453857421875e-05, -1.52587890625e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.000213623046875, -7.43865966796875e-05, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -2.503394853192731e-06, -3.814697265625e-06, -6.496906280517578e-05, 0.0, -0.0004863739013671875, -8.96453857421875e-05, -5.91278076171875e-05, -4.0531076592742465e-06, -4.768370445162873e-07, -4.76837158203125e-05, -4.76837158203125e-05, -0.00010144187399419025, -3.933906555175781e-06, -3.24249267578125e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000164031982421875, -0.0006333589553833008, -3.0517578125e-05, -0.009534716606140137, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-05, -4.29153169534402e-06, -0.007282376289367676, 0.0, -0.019331932067871094, -0.000102996826171875, -5.7220458984375e-06, -0.0003434419631958008, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.14984130859375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -7.62939453125e-06, -0.0035543441772460938, -5.7220458984375e-06, -0.0028743743896484375, -0.0001773834228515625, -0.0019865036010742188, -3.814697265625e-06, -0.0004100799560546875, -0.0007724761962890625, -3.814697265625e-06, -0.0001239776611328125, -1.33514404296875e-05, -0.0049953460693359375, -4.0531158447265625e-06, -0.007615089416503906, -5.340576171875e-05, -0.016541481018066406, -0.0005741119384765625, -0.0013637542724609375, -0.000263214111328125, -0.001125335693359375, -5.53131103515625e-05, -0.030516624450683594, -9.5367431640625e-06, -0.0022439956665039062, -2.622600959512056e-06, -0.0031243562698364258, 0.0, -2.09808349609375e-05, -2.8986330032348633, -4.9591064453125e-05, -0.030303001403808594, -0.006009101867675781, -1.71661376953125e-05, -2.288818359375e-05, -0.024127960205078125, 0.0, -0.010425567626953125, -2.3841855067985307e-07, -0.012160301208496094, 0.0, -0.0030193328857421875, -0.0005207061767578125, -1.1444091796875e-05, -5.340576171875e-05, -0.0052471160888671875, 0.0, -0.0038957595825195312, -1.1920928244535389e-07, -0.04010009765625, -1.9073486328125e-06, -0.001964569091796875, -9.5367431640625e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.000263214111328125, -7.62939453125e-06, -1.52587890625e-05, -2.3841855067985307e-07, -1.3470649719238281e-05, 0.0, -0.034996986389160156, -3.814697265625e-06, -5.340576171875e-05, -0.0010519027709960938, -1.71661376953125e-05, -0.009946220554411411, -6.079665126890177e-06, -1.9073486328125e-05, 0.0, -0.00016605854034423828, 0.0], "choice_history": [55, 124, 221, 63, 103, "Backstab", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Backstab", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -3.7584682916678602, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -0.00019178935326635838, -0.0004836319130845368, -8.58306884765625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -2.5510787963867188e-05, -0.0007424351642839611, -1.9073486328125e-06, -3.814697265625e-05, -0.0039424896240234375, -7.62939453125e-06, -2.0503857740550302e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.0980818590032868e-05, -6.103515625e-05, -8.96453857421875e-05, -1.52587890625e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.000213623046875, -7.43865966796875e-05, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -2.503394853192731e-06, -3.814697265625e-06, -6.496906280517578e-05, 0.0, -0.0004863739013671875, -8.96453857421875e-05, -5.91278076171875e-05, -4.0531076592742465e-06, -4.768370445162873e-07, -4.76837158203125e-05, -4.76837158203125e-05, -0.00010144187399419025, -3.933906555175781e-06, -3.24249267578125e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000164031982421875, -0.0006333589553833008, -3.0517578125e-05, -0.009534716606140137, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-05, -4.29153169534402e-06, -0.007282376289367676, 0.0, -0.019331932067871094, -0.000102996826171875, -5.7220458984375e-06, -0.0003434419631958008, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.14984130859375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -7.62939453125e-06, -0.0035543441772460938, -5.7220458984375e-06, -0.0028743743896484375, -0.0001773834228515625, -0.0019865036010742188, -3.814697265625e-06, -0.0004100799560546875, -0.0007724761962890625, -3.814697265625e-06, -0.0001239776611328125, -1.33514404296875e-05, -0.0049953460693359375, -4.0531158447265625e-06, -0.007615089416503906, -5.340576171875e-05, -0.016541481018066406, -0.0005741119384765625, -0.0013637542724609375, -0.000263214111328125, -0.001125335693359375, -5.53131103515625e-05, -0.030516624450683594, -9.5367431640625e-06, -0.0022439956665039062, -2.622600959512056e-06, -0.0031243562698364258, 0.0, -2.09808349609375e-05, -0.09781360626220703, -5.53131103515625e-05, -0.010313034057617188, -0.008440971374511719, -2.288818359375e-05, -7.62939453125e-06, -0.01116180419921875, 0.0, -0.008465766906738281, -4.768370445162873e-07, -0.0143280029296875, 0.0, -0.0030164718627929688, -0.0004024505615234375, -9.5367431640625e-06, -4.38690185546875e-05, -0.00592803955078125, 0.0, -0.0038309097290039062, -1.1920928244535389e-07, -3.411968231201172, 0.0, -0.0028362274169921875, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-05, -0.00029754638671875, -3.814697265625e-06, -1.9073486328125e-05, -2.3841855067985307e-07, -1.1563301086425781e-05, 0.0, -0.04507160186767578, -5.7220458984375e-06, -4.00543212890625e-05, -0.0012054443359375, -1.9073486328125e-05, -0.009344861842691898, -5.6028297876764555e-06, -1.9073486328125e-05, 0.0, -0.00017750263214111328, 0.0], "choice_history": [55, 124, 221, 63, 103, "Backstab", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Backstab", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 2, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.091054218272859, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -0.00019178935326635838, -0.0004836319130845368, -8.58306884765625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -2.5510787963867188e-05, -0.0007424351642839611, -1.9073486328125e-06, -3.814697265625e-05, -0.0039424896240234375, -7.62939453125e-06, -2.0503857740550302e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.0980818590032868e-05, -6.103515625e-05, -8.96453857421875e-05, -1.52587890625e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.000213623046875, -7.43865966796875e-05, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -2.503394853192731e-06, -3.814697265625e-06, -6.496906280517578e-05, 0.0, -0.0004863739013671875, -8.96453857421875e-05, -5.91278076171875e-05, -4.0531076592742465e-06, -4.768370445162873e-07, -4.76837158203125e-05, -4.76837158203125e-05, -0.00010144187399419025, -3.933906555175781e-06, -3.24249267578125e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000164031982421875, -0.0006333589553833008, -3.0517578125e-05, -0.009534716606140137, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-05, -4.29153169534402e-06, -0.007282376289367676, 0.0, -4.0365705490112305, -0.0003070831298828125, 0.0, -0.00029623505542986095, 0.0, -7.2479248046875e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.4332275390625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.0006742477416992188, -3.814697265625e-06, -0.0001392364501953125, -4.57763671875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0001316070556640625, -1.9073486328125e-06, -1.9073486328125e-05, -3.576278118089249e-07, -4.971027374267578e-05, 0.0, -0.0161895751953125, -9.5367431640625e-06, -3.4332275390625e-05, -0.0033349990844726562, -1.1444091796875e-05, -0.00764922471717, -4.410734163684538e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0003091096878051758, 0.0], "choice_history": [55, 124, 221, 63, 103, "Backstab", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Backstab", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.215306138572224, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -0.00019178935326635838, -0.0004836319130845368, -8.58306884765625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -2.5510787963867188e-05, -0.0007424351642839611, -1.9073486328125e-06, -3.814697265625e-05, -0.0039424896240234375, -7.62939453125e-06, -2.0503857740550302e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.0980818590032868e-05, -6.103515625e-05, -8.96453857421875e-05, -1.52587890625e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.000213623046875, -7.43865966796875e-05, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -2.503394853192731e-06, -3.814697265625e-06, -6.496906280517578e-05, 0.0, -0.0004863739013671875, -8.96453857421875e-05, -5.91278076171875e-05, -4.0531076592742465e-06, -4.768370445162873e-07, -4.76837158203125e-05, -4.76837158203125e-05, -0.00010144187399419025, -3.933906555175781e-06, -3.24249267578125e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000164031982421875, -0.0006333589553833008, -3.0517578125e-05, -0.009534716606140137, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-05, -4.29153169534402e-06, -0.007282376289367676, 0.0, -0.019331932067871094, -0.000102996826171875, -5.7220458984375e-06, -0.0003434419631958008, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.14984130859375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -7.62939453125e-06, -0.0035543441772460938, -5.7220458984375e-06, -0.0028743743896484375, -0.0001773834228515625, -0.0019865036010742188, -3.814697265625e-06, -0.0004100799560546875, -0.0007724761962890625, -3.814697265625e-06, -0.0001239776611328125, -1.33514404296875e-05, -0.0049953460693359375, -4.0531158447265625e-06, -0.007615089416503906, -5.340576171875e-05, -0.016541481018066406, -0.0005741119384765625, -0.0013637542724609375, -0.000263214111328125, -0.001125335693359375, -5.53131103515625e-05, -0.030516624450683594, -9.5367431640625e-06, -0.0022439956665039062, -2.622600959512056e-06, -0.0031243562698364258, 0.0, -2.09808349609375e-05, -0.09781360626220703, -5.53131103515625e-05, -0.010313034057617188, -0.008440971374511719, -2.288818359375e-05, -7.62939453125e-06, -0.01116180419921875, 0.0, -0.008465766906738281, -4.768370445162873e-07, -0.0143280029296875, 0.0, -0.0030164718627929688, -0.0004024505615234375, -9.5367431640625e-06, -4.38690185546875e-05, -0.00592803955078125, 0.0, -0.0038309097290039062, -1.1920928244535389e-07, -0.039028167724609375, -1.9073486328125e-06, -0.001796722412109375, -9.1552734375e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0002574920654296875, -7.62939453125e-06, -1.52587890625e-05, -2.3841855067985307e-07, -1.1563301086425781e-05, 0.0, -3.8831119537353516, 0.0, -8.20159912109375e-05, -0.0032367706298828125, 0.0, -0.00035190582275390625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Backstab", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Backstab", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 2, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -4.769882195573523, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Lt"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -0.00019178935326635838, -0.0004836319130845368, -8.58306884765625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -2.5510787963867188e-05, -0.0007424351642839611, -1.9073486328125e-06, -3.814697265625e-05, -0.0039424896240234375, -7.62939453125e-06, -2.0503857740550302e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.0980818590032868e-05, -6.103515625e-05, -8.96453857421875e-05, -1.52587890625e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.000213623046875, -7.43865966796875e-05, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -2.503394853192731e-06, -3.814697265625e-06, -6.496906280517578e-05, 0.0, -0.0004863739013671875, -8.96453857421875e-05, -5.91278076171875e-05, -4.0531076592742465e-06, -4.768370445162873e-07, -4.76837158203125e-05, -4.76837158203125e-05, -0.00010144187399419025, -3.933906555175781e-06, -3.24249267578125e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000164031982421875, -0.0006333589553833008, -3.0517578125e-05, -0.009534716606140137, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-05, -4.29153169534402e-06, -0.007282376289367676, 0.0, -0.019331932067871094, -0.000102996826171875, -5.7220458984375e-06, -0.0003434419631958008, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.14984130859375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -7.62939453125e-06, -0.0035543441772460938, -5.7220458984375e-06, -0.0028743743896484375, -0.0001773834228515625, -0.0019865036010742188, -3.814697265625e-06, -0.0004100799560546875, -0.0007724761962890625, -3.814697265625e-06, -0.0001239776611328125, -1.33514404296875e-05, -0.0049953460693359375, -4.0531158447265625e-06, -0.007615089416503906, -5.340576171875e-05, -0.016541481018066406, -0.0005741119384765625, -0.0013637542724609375, -0.000263214111328125, -0.001125335693359375, -5.53131103515625e-05, -0.030516624450683594, -9.5367431640625e-06, -0.0022439956665039062, -2.622600959512056e-06, -0.0031243562698364258, 0.0, -2.09808349609375e-05, -4.445457935333252, -0.000499725341796875, -0.05845069885253906, -0.010167121887207031, -1.52587890625e-05, -7.62939453125e-06, -0.01892375946044922, -1.9073486328125e-06, -0.0071811676025390625, -2.3841855067985307e-07, -0.009879112243652344, 0.0, -0.003574371337890625, -0.0004329681396484375, -1.1444091796875e-05, -4.38690185546875e-05, -0.00585174560546875, 0.0, -0.004001617431640625, -1.1920928244535389e-07, -0.03810882568359375, -1.9073486328125e-06, -0.0018100738525390625, -8.7738037109375e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0002574920654296875, -7.62939453125e-06, -1.52587890625e-05, -2.3841855067985307e-07, -1.1563301086425781e-05, 0.0, -0.03016376495361328, -3.814697265625e-06, -5.14984130859375e-05, -0.0010690689086914062, -1.71661376953125e-05, -0.01011230330914259, -5.9604562920867465e-06, -1.9073486328125e-05, 0.0, -0.00016605854034423828, 0.0], "choice_history": [55, 124, 221, 63, 103, "Backstab", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Backstab", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 8, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health < target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.923203095737989, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -0.00019178935326635838, -0.0004836319130845368, -8.58306884765625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -2.5510787963867188e-05, -0.0007424351642839611, -1.9073486328125e-06, -3.814697265625e-05, -0.0039424896240234375, -7.62939453125e-06, -2.0503857740550302e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.0980818590032868e-05, -6.103515625e-05, -8.96453857421875e-05, -1.52587890625e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.000213623046875, -7.43865966796875e-05, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -2.503394853192731e-06, -3.814697265625e-06, -6.496906280517578e-05, 0.0, -0.0004863739013671875, -8.96453857421875e-05, -5.91278076171875e-05, -4.0531076592742465e-06, -4.768370445162873e-07, -4.76837158203125e-05, -4.76837158203125e-05, -0.00010144187399419025, -3.933906555175781e-06, -3.24249267578125e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000164031982421875, -0.0006333589553833008, -3.0517578125e-05, -0.009534716606140137, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-05, -4.29153169534402e-06, -0.007282376289367676, 0.0, -0.019331932067871094, -0.000102996826171875, -5.7220458984375e-06, -0.0003434419631958008, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.14984130859375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -7.62939453125e-06, -0.0035543441772460938, -5.7220458984375e-06, -0.0028743743896484375, -0.0001773834228515625, -0.0019865036010742188, -3.814697265625e-06, -0.0004100799560546875, -0.0007724761962890625, -3.814697265625e-06, -0.0001239776611328125, -1.33514404296875e-05, -0.0049953460693359375, -4.0531158447265625e-06, -0.007615089416503906, -5.340576171875e-05, -0.016541481018066406, -0.0005741119384765625, -0.0013637542724609375, -0.000263214111328125, -0.001125335693359375, -5.53131103515625e-05, -0.030516624450683594, -9.5367431640625e-06, -0.0022439956665039062, -2.622600959512056e-06, -0.0031243562698364258, 0.0, -2.09808349609375e-05, -0.09781360626220703, -5.53131103515625e-05, -0.010313034057617188, -0.008440971374511719, -2.288818359375e-05, -7.62939453125e-06, -0.01116180419921875, 0.0, -0.008465766906738281, -4.768370445162873e-07, -4.552584648132324, -2.0265579223632812e-06, -0.014364242553710938, -0.0003871917724609375, -1.71661376953125e-05, -7.43865966796875e-05, -0.0041980743408203125, 0.0, -0.0029773712158203125, 0.0, -0.045658111572265625, -1.9073486328125e-06, -0.001781463623046875, -0.0001010894775390625, -5.7220458984375e-06, -1.52587890625e-05, -0.0003299713134765625, -7.62939453125e-06, -1.52587890625e-05, -2.3841855067985307e-07, -9.655952453613281e-06, 0.0, -0.02925586700439453, -3.814697265625e-06, -5.14984130859375e-05, -0.0011110305786132812, -1.71661376953125e-05, -0.010306725278496742, -5.9604562920867465e-06, -1.9073486328125e-05, 0.0, -0.00016796588897705078, 0.0], "choice_history": [55, 124, 221, 63, 103, "Backstab", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Backstab", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 2, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.spell_targetable() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.926037657017353, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "Or"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -0.00019178935326635838, -0.0004836319130845368, -8.58306884765625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -2.5510787963867188e-05, -0.0007424351642839611, -1.9073486328125e-06, -3.814697265625e-05, -0.0039424896240234375, -7.62939453125e-06, -2.0503857740550302e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.0980818590032868e-05, -6.103515625e-05, -8.96453857421875e-05, -1.52587890625e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.000213623046875, -7.43865966796875e-05, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -2.503394853192731e-06, -3.814697265625e-06, -6.496906280517578e-05, 0.0, -0.0004863739013671875, -8.96453857421875e-05, -5.91278076171875e-05, -4.0531076592742465e-06, -4.768370445162873e-07, -4.76837158203125e-05, -4.76837158203125e-05, -0.00010144187399419025, -3.933906555175781e-06, -3.24249267578125e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000164031982421875, -0.0006333589553833008, -3.0517578125e-05, -0.009534716606140137, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-05, -4.29153169534402e-06, -0.007282376289367676, 0.0, -0.019331932067871094, -0.000102996826171875, -5.7220458984375e-06, -0.0003434419631958008, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.14984130859375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -7.62939453125e-06, -0.0035543441772460938, -5.7220458984375e-06, -0.0028743743896484375, -0.0001773834228515625, -0.0019865036010742188, -3.814697265625e-06, -0.0004100799560546875, -0.0007724761962890625, -3.814697265625e-06, -0.0001239776611328125, -1.33514404296875e-05, -0.0049953460693359375, -4.0531158447265625e-06, -0.007615089416503906, -5.340576171875e-05, -4.491632461547852, -0.008984565734863281, -0.008203506469726562, -0.0003185272216796875, -0.0009489059448242188, -5.340576171875e-05, -0.06329154968261719, -1.52587890625e-05, -0.0029554367065429688, -2.9802276912960224e-06, -0.0028439760208129883, 0.0, -3.4332275390625e-05, -0.1174020767211914, -6.29425048828125e-05, -0.013527870178222656, -0.006161689758300781, -2.6702880859375e-05, -9.5367431640625e-06, -0.009352684020996094, 0.0, -0.008639335632324219, -3.576278118089249e-07, -0.01620769500732422, 0.0, -0.004702568054199219, -0.000362396240234375, -9.5367431640625e-06, -4.38690185546875e-05, -0.00519561767578125, 0.0, -0.0036897659301757812, -1.1920928244535389e-07, -0.047661781311035156, -1.9073486328125e-06, -0.0017852783203125, -9.5367431640625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.0002765655517578125, -7.62939453125e-06, -1.52587890625e-05, -2.3841855067985307e-07, -1.1563301086425781e-05, 0.0, -0.0323638916015625, -3.814697265625e-06, -5.14984130859375e-05, -0.0010576248168945312, -1.71661376953125e-05, -0.010185492224991322, -6.079665126890177e-06, -1.9073486328125e-05, 0.0, -0.00016510486602783203, 0.0], "choice_history": [55, 124, 221, 63, 103, "Backstab", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Backstab", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 1, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 2, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() or target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.021901583246937, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "Eq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 0}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -0.00019178935326635838, -0.0004836319130845368, -8.58306884765625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -2.5510787963867188e-05, -0.0007424351642839611, -1.9073486328125e-06, -3.814697265625e-05, -0.0039424896240234375, -7.62939453125e-06, -2.0503857740550302e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.0980818590032868e-05, -6.103515625e-05, -8.96453857421875e-05, -1.52587890625e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.000213623046875, -7.43865966796875e-05, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -2.503394853192731e-06, -3.814697265625e-06, -6.496906280517578e-05, 0.0, -0.0004863739013671875, -8.96453857421875e-05, -5.91278076171875e-05, -4.0531076592742465e-06, -4.768370445162873e-07, -4.76837158203125e-05, -4.76837158203125e-05, -0.00010144187399419025, -3.933906555175781e-06, -3.24249267578125e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000164031982421875, -0.0006333589553833008, -3.0517578125e-05, -0.009534716606140137, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-05, -4.29153169534402e-06, -0.007282376289367676, 0.0, -0.019331932067871094, -0.000102996826171875, -5.7220458984375e-06, -0.0003434419631958008, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.14984130859375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -7.62939453125e-06, -0.0035543441772460938, -5.7220458984375e-06, -0.0028743743896484375, -0.0001773834228515625, -0.0019865036010742188, -3.814697265625e-06, -0.0004100799560546875, -0.0007724761962890625, -3.814697265625e-06, -0.0001239776611328125, -1.33514404296875e-05, -0.0049953460693359375, -4.0531158447265625e-06, -0.007615089416503906, -5.340576171875e-05, -0.016541481018066406, -0.0005741119384765625, -0.0013637542724609375, -0.000263214111328125, -0.001125335693359375, -5.53131103515625e-05, -0.030516624450683594, -9.5367431640625e-06, -0.0022439956665039062, -2.622600959512056e-06, -0.0031243562698364258, 0.0, -2.09808349609375e-05, -0.09781360626220703, -5.53131103515625e-05, -0.010313034057617188, -0.008440971374511719, -2.288818359375e-05, -7.62939453125e-06, -0.01116180419921875, 0.0, -0.008465766906738281, -4.768370445162873e-07, -0.0143280029296875, 0.0, -0.0030164718627929688, -0.0004024505615234375, -9.5367431640625e-06, -4.38690185546875e-05, -0.00592803955078125, 0.0, -0.0038309097290039062, -1.1920928244535389e-07, -0.039028167724609375, -1.9073486328125e-06, -0.001796722412109375, -9.1552734375e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0002574920654296875, -7.62939453125e-06, -1.52587890625e-05, -2.3841855067985307e-07, -1.1563301086425781e-05, 0.0, -0.03167724609375, -3.814697265625e-06, -5.14984130859375e-05, -0.0010738372802734375, -1.71661376953125e-05, -4.6598591804504395, -1.4424319488171022e-05, -0.0006561279296875, -1.9073486328125e-06, -2.288818359375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Backstab", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Backstab", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 2, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "0", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n"}, {"score": -5.227192296591568, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -0.00019178935326635838, -0.0004836319130845368, -8.58306884765625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -2.5510787963867188e-05, -0.0007424351642839611, -1.9073486328125e-06, -3.814697265625e-05, -0.0039424896240234375, -7.62939453125e-06, -2.0503857740550302e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.0980818590032868e-05, -6.103515625e-05, -8.96453857421875e-05, -1.52587890625e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.000213623046875, -7.43865966796875e-05, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -2.503394853192731e-06, -3.814697265625e-06, -6.496906280517578e-05, 0.0, -0.0004863739013671875, -8.96453857421875e-05, -5.91278076171875e-05, -4.0531076592742465e-06, -4.768370445162873e-07, -4.76837158203125e-05, -4.76837158203125e-05, -0.00010144187399419025, -3.933906555175781e-06, -3.24249267578125e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000164031982421875, -0.0006333589553833008, -3.0517578125e-05, -0.009534716606140137, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-05, -4.29153169534402e-06, -5.132020950317383, -7.62939453125e-06, -0.04851818084716797, -0.0003147125244140625, -1.9073486328125e-06, -0.00015604496002197266, 0.0, -0.0001220703125, -1.52587890625e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.4332275390625e-05, -4.1961669921875e-05, -7.62939453125e-06, -0.000583648681640625, -3.814697265625e-06, -0.0001220703125, -4.76837158203125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.000133514404296875, -1.9073486328125e-06, -1.9073486328125e-05, -3.576278118089249e-07, -5.161762237548828e-05, 0.0, -0.01566314697265625, -9.5367431640625e-06, -3.4332275390625e-05, -0.0032939910888671875, -1.1444091796875e-05, -0.00784472469240427, -4.6491513785440475e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00030434131622314453, 0.0], "choice_history": [55, 124, 221, 63, 103, "Backstab", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Backstab", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.440270836277698, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Backstab", "hole2": "WARLOCK", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -0.00019178935326635838, -0.0004836319130845368, -8.58306884765625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -2.5510787963867188e-05, -0.0007424351642839611, -1.9073486328125e-06, -3.814697265625e-05, -5.893603324890137, -0.0002231597900390625, -0.0001586549769854173, 0.0, -0.0016262407880276442, 0.0, -0.4933573007583618, 0.0, -0.0001082418966689147, 0.0, -3.0517578125e-05, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -9.34600830078125e-05, -1.9073486328125e-06, -0.0001087188720703125, -3.814697265625e-06, -0.000408172607421875, -1.71661376953125e-05, -0.0026798248291015625, -5.91278076171875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0022640228271484375, 0.0, -2.09808349609375e-05, -1.1920928244535389e-07, -2.6702880859375e-05, 0.0, -0.031256675720214844, -1.33514404296875e-05, -1.71661376953125e-05, -0.0062103271484375, -1.1444091796875e-05, -0.005865195766091347, -8.34461570775602e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0003082752227783203, 0.0], "choice_history": [55, 124, 221, 63, 103, "Backstab", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Backstab", "<EOS>", "0", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.978833730281615, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Backstab", "hole2": "ROGUE", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -0.00019178935326635838, -0.0004836319130845368, -8.58306884765625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -2.5510787963867188e-05, -0.0007424351642839611, -1.9073486328125e-06, -3.814697265625e-05, -5.893603324890137, -0.0002231597900390625, -0.0001586549769854173, 0.0, -0.0016262407880276442, 0.0, -1.0310932397842407, -1.9073486328125e-06, -0.0005300045013427734, 0.0, -3.4332275390625e-05, 0.0, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.0001010894775390625, -3.814697265625e-06, -0.0002956390380859375, -1.33514404296875e-05, -0.00260162353515625, -4.9591064453125e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.0018157958984375, 0.0, -2.288818359375e-05, -1.1920928244535389e-07, -2.86102294921875e-05, 0.0, -0.0326690673828125, -1.33514404296875e-05, -1.52587890625e-05, -0.005854606628417969, -1.1444091796875e-05, -0.005915382876992226, -8.583032467868179e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0003025531768798828, 0.0], "choice_history": [55, 124, 221, 63, 103, "Backstab", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -8.743092781363984, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Backstab", "hole1": 0}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "card", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -0.00019178935326635838, -0.0004836319130845368, -8.58306884765625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -2.5510787963867188e-05, -0.0007424351642839611, -1.9073486328125e-06, -3.814697265625e-05, -7.46286678314209, -0.025182723999023438, -0.033187318593263626, -1.7881377516459906e-06, -0.0023311551194638014, -4.768370445162873e-07, -0.34384775161743164, -1.1920928244535389e-07, -0.003170013427734375, -0.0016803741455078125, -9.5367431640625e-06, -0.0001049041748046875, -0.000698089599609375, -5.7220458984375e-06, -1.9073486328125e-05, -7.05718994140625e-05, -0.0009593963623046875, -1.1920928244535389e-07, -9.417533874511719e-05, -5.841255187988281e-06, -0.586418867111206, 0.0, -0.2673912048339844, -3.814697265625e-06, -0.0001583099365234375, -0.00487518310546875, -8.96453857421875e-05, -0.007919985800981522, -1.0013547580456361e-05, -1.33514404296875e-05, 0.0, -0.00023365020751953125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Backstab", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Backstab", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.card.damage(player.effective_spell_damage(2), self)\n"}, {"score": -10.190126448399596, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Backstab", "hole1": 0}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "player", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Backstab", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -0.00019178935326635838, -0.0004836319130845368, -8.58306884765625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -2.5510787963867188e-05, -0.0007424351642839611, -1.9073486328125e-06, -3.814697265625e-05, -7.46286678314209, -0.025182723999023438, -0.033187318593263626, -1.7881377516459906e-06, -0.0023311551194638014, -4.768370445162873e-07, -0.34384775161743164, -1.1920928244535389e-07, -0.003170013427734375, -0.0016803741455078125, -9.5367431640625e-06, -0.0001049041748046875, -0.000698089599609375, -5.7220458984375e-06, -1.9073486328125e-05, -7.05718994140625e-05, -0.0009593963623046875, -1.1920928244535389e-07, -9.417533874511719e-05, -5.841255187988281e-06, -2.0041921138763428, 0.0, -0.2926974296569824, -1.9073486328125e-06, -1.1444091796875e-05, -0.0111541748046875, -1.71661376953125e-05, -0.00570951122790575, -2.3841830625315197e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.00035393238067626953, 0.0], "choice_history": [55, 124, 221, 63, 103, "Backstab", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Backstab", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.player.damage(player.effective_spell_damage(2), self)\n"}, {"score": -20.38976287841797, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -20.389759063720703], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 9}
{"beams": [{"score": -1.1530869273000803, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Blessing of Kings", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 4}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "BlessingOfKings", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-8.0108642578125e-05, -0.000492095947265625, -5.91278076171875e-05, -0.0018482208251953125, -2.6702880859375e-05, -2.610649426060263e-05, -0.0008650663658045232, -0.04605865478515625, -0.0002617835416458547, -0.0002613067626953125, -5.340576171875e-05, -3.814697265625e-06, -0.0001581907126819715, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0048656463623046875, -0.004344940185546875, -1.71661376953125e-05, -0.000910328992176801, -0.0005348920822143555, -0.00010847726662177593, -0.0011589527130126953, -3.409367855056189e-05, -1.9073486328125e-06, -0.0001613961358089, 0.0, -0.004573822021484375, 0.0, -0.008217096328735352, 0.0, -0.001277923583984375, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -0.0018520355224609375, 0.0, -0.0014801025390625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00016427040100097656, -1.1563301086425781e-05, -0.0020294189453125, -3.4332275390625e-05, -2.181529998779297e-05, -1.1801719665527344e-05, -3.0517578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.2993811651540454e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.283687591552734e-05, -1.5020368664409034e-05, -0.9499721527099609, -1.1444091796875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000233053884585388, 0.0, -2.682209014892578e-05, 0.0, -3.62396240234375e-05, -0.00135040283203125, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -2.8848648071289062e-05, -3.802764695137739e-05, -0.03334236145019531, -0.0006017684936523438, -0.03455543518066406, -0.000362396240234375, -0.007003392092883587, -7.987022399902344e-06, -0.00012969970703125, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-05, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000682830810546875, -7.62939453125e-06, -0.0032634735107421875, 0.0, -0.000247955322265625, -4.2319297790527344e-05, -0.03264141082763672, 0.0, -0.000202178955078125, -3.0517578125e-05, -7.62939453125e-06, -0.0053955987095832825, 0.0], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Kings", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score": -2.969337749006101, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Blessing of Kings", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 4}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "BlessingOfKings", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-8.0108642578125e-05, -0.000492095947265625, -5.91278076171875e-05, -0.0018482208251953125, -2.6702880859375e-05, -2.610649426060263e-05, -0.0008650663658045232, -0.04605865478515625, -0.0002617835416458547, -0.0002613067626953125, -5.340576171875e-05, -3.814697265625e-06, -0.0001581907126819715, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0048656463623046875, -0.004344940185546875, -1.71661376953125e-05, -0.000910328992176801, -0.0005348920822143555, -0.00010847726662177593, -0.0011589527130126953, -3.409367855056189e-05, -1.9073486328125e-06, -0.0001613961358089, 0.0, -0.004573822021484375, 0.0, -0.008217096328735352, 0.0, -0.001277923583984375, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -0.0018520355224609375, 0.0, -0.0014801025390625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00016427040100097656, -1.1563301086425781e-05, -0.0020294189453125, -3.4332275390625e-05, -2.181529998779297e-05, -1.1801719665527344e-05, -3.0517578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.2993811651540454e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.283687591552734e-05, -1.5020368664409034e-05, -0.9544401168823242, -5.53131103515625e-05, -2.09808349609375e-05, -0.0001316070556640625, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -8.356553735211492e-05, 0.0, -2.300739288330078e-05, 0.0, -0.0001468658447265625, -0.00064849853515625, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -2.8848648071289062e-05, -3.409376950003207e-05, -0.97479248046875, -0.0001583099365234375, -0.07136249542236328, -0.00041961669921875, -0.0066140079870820045, -2.741813204920618e-06, -0.000904083251953125, -8.7738037109375e-05, -2.288818359375e-05, -3.814697265625e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.00016021728515625, -1.9073486328125e-05, -0.0001773834228515625, -5.7220458984375e-06, -0.00127410888671875, -1.1920928244535389e-07, -0.0004127025604248047, -1.7404556274414062e-05, -0.05964398384094238, 0.0, -0.0001087188720703125, -1.71661376953125e-05, -1.33514404296875e-05, -0.006238803267478943, 0.0, -0.0025768280029296875, -3.0517578125e-05, -8.0108642578125e-05, -0.15486526489257812, -4.00543212890625e-05, -7.43865966796875e-05, -0.0002002716064453125, -1.9073486328125e-06, -2.47955322265625e-05, -6.4849853515625e-05, -0.0021077394485473633, -1.1920928244535389e-07, -0.00032770633697509766, -1.3828277587890625e-05, -0.6416022777557373, 0.0, -0.0001773834228515625, -7.62939453125e-06, -8.58306884765625e-05, -0.006237417459487915, 0.0], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Kings", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n"}, {"score": -3.6026607050466026, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Blessing of Kings", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 4}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "BlessingOfKings", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-8.0108642578125e-05, -0.000492095947265625, -5.91278076171875e-05, -0.0018482208251953125, -2.6702880859375e-05, -2.610649426060263e-05, -0.0008650663658045232, -0.04605865478515625, -0.0002617835416458547, -0.0002613067626953125, -5.340576171875e-05, -3.814697265625e-06, -0.0001581907126819715, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0048656463623046875, -0.004344940185546875, -1.71661376953125e-05, -0.000910328992176801, -0.0005348920822143555, -0.00010847726662177593, -0.0011589527130126953, -3.409367855056189e-05, -1.9073486328125e-06, -0.0001613961358089, 0.0, -0.004573822021484375, 0.0, -0.008217096328735352, 0.0, -0.001277923583984375, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -0.0018520355224609375, 0.0, -0.0014801025390625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00016427040100097656, -1.1563301086425781e-05, -0.0020294189453125, -3.4332275390625e-05, -2.181529998779297e-05, -1.1801719665527344e-05, -3.0517578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.2993811651540454e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.283687591552734e-05, -1.5020368664409034e-05, -0.9544401168823242, -5.53131103515625e-05, -2.09808349609375e-05, -0.0001316070556640625, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -8.356553735211492e-05, 0.0, -2.300739288330078e-05, 0.0, -0.0001468658447265625, -0.00064849853515625, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -2.8848648071289062e-05, -3.409376950003207e-05, -0.97479248046875, -0.0001583099365234375, -0.07136249542236328, -0.00041961669921875, -0.0066140079870820045, -2.741813204920618e-06, -0.000904083251953125, -8.7738037109375e-05, -2.288818359375e-05, -3.814697265625e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.00016021728515625, -1.9073486328125e-05, -0.0001773834228515625, -5.7220458984375e-06, -0.00127410888671875, -1.1920928244535389e-07, -0.0004127025604248047, -1.7404556274414062e-05, -0.05964398384094238, 0.0, -0.0001087188720703125, -1.71661376953125e-05, -1.33514404296875e-05, -0.006238803267478943, 0.0, -0.0025768280029296875, -3.0517578125e-05, -8.0108642578125e-05, -0.15486526489257812, -4.00543212890625e-05, -7.43865966796875e-05, -0.0002002716064453125, -1.9073486328125e-06, -2.47955322265625e-05, -6.4849853515625e-05, -0.0021077394485473633, -1.1920928244535389e-07, -0.00032770633697509766, -1.3828277587890625e-05, -1.2516086101531982, 0.0, -1.71661376953125e-05, -0.015726089477539062, -4.00543212890625e-05, -0.01404157467186451, 0.0], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Kings", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "4", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        self.target.change_attack(4)\n"}, {"score": -4.337157506886314, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Blessing of Kings", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 4}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "BlessingOfTheKings", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-8.0108642578125e-05, -0.000492095947265625, -5.91278076171875e-05, -0.0018482208251953125, -2.6702880859375e-05, -2.610649426060263e-05, -0.0008650663658045232, -3.2569501399993896, -1.6689286894688848e-06, -1.1563301086425781e-05, -0.0001277923583984375, -9.5367431640625e-05, -1.9073486328125e-06, -0.0001542568061267957, -4.112720489501953e-05, 0.0, -0.0032672882080078125, -0.00403594970703125, -1.52587890625e-05, -0.0007129319710657, -0.0005655288696289062, -9.810641495278105e-05, -0.0007479190826416016, -0.00047004185034893453, -3.814697265625e-06, -0.0001697394618531689, 0.0, -0.00464630126953125, 0.0, -0.008827567100524902, 0.0, -0.001438140869140625, -3.814697265625e-06, -0.0001621246337890625, -9.5367431640625e-06, -0.001598358154296875, 0.0, -0.0014495849609375, -3.814697265625e-06, -6.103515625e-05, -1.9073486328125e-06, -0.00016808509826660156, -1.1563301086425781e-05, -0.0023059844970703125, -3.4332275390625e-05, -1.990795135498047e-05, -1.1801719665527344e-05, -2.86102294921875e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.2993811651540454e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -2.3841855067985307e-07, -3.814697265625e-06, -7.283687591552734e-05, -1.5020368664409034e-05, -0.9249944686889648, -1.1444091796875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-05, 0.0, -4.9591064453125e-05, 0.0, -0.00023317309387493879, 0.0, -2.682209014892578e-05, 0.0, -3.62396240234375e-05, -0.001346588134765625, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -2.8848648071289062e-05, -3.802764695137739e-05, -0.033104896545410156, -0.0006017684936523438, -0.03453254699707031, -0.000362396240234375, -0.0070225573144853115, -7.987022399902344e-06, -0.00012969970703125, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-05, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.0006866455078125, -7.62939453125e-06, -0.0032520294189453125, 0.0, -0.000247955322265625, -4.2319297790527344e-05, -0.03258991241455078, 0.0, -0.000202178955078125, -3.0517578125e-05, -7.62939453125e-06, -0.005394533276557922, 0.0], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "The", "Kings", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>"], "inferred_code": "class BlessingOfTheKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score": -5.076423514330983, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Blessing of Kings", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 4}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"hole2": 1, "_type": "Template32", "hole0": "Buff", "hole1": "SpellDamage"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "BlessingOfKings", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-8.0108642578125e-05, -0.000492095947265625, -5.91278076171875e-05, -0.0018482208251953125, -2.6702880859375e-05, -2.610649426060263e-05, -0.0008650663658045232, -0.04605865478515625, -0.0002617835416458547, -0.0002613067626953125, -5.340576171875e-05, -3.814697265625e-06, -0.0001581907126819715, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0048656463623046875, -0.004344940185546875, -1.71661376953125e-05, -0.000910328992176801, -0.0005348920822143555, -0.00010847726662177593, -0.0011589527130126953, -3.409367855056189e-05, -1.9073486328125e-06, -0.0001613961358089, 0.0, -0.004573822021484375, 0.0, -0.008217096328735352, 0.0, -0.001277923583984375, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -0.0018520355224609375, 0.0, -0.0014801025390625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00016427040100097656, -1.1563301086425781e-05, -0.0020294189453125, -3.4332275390625e-05, -2.181529998779297e-05, -1.1801719665527344e-05, -3.0517578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.2993811651540454e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.283687591552734e-05, -1.5020368664409034e-05, -0.9544401168823242, -5.53131103515625e-05, -2.09808349609375e-05, -0.0001316070556640625, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -8.356553735211492e-05, 0.0, -2.300739288330078e-05, 0.0, -0.0001468658447265625, -0.00064849853515625, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -2.8848648071289062e-05, -3.409376950003207e-05, -0.97479248046875, -0.0001583099365234375, -0.07136249542236328, -0.00041961669921875, -0.0066140079870820045, -2.741813204920618e-06, -0.000904083251953125, -8.7738037109375e-05, -2.288818359375e-05, -3.814697265625e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.00016021728515625, -1.9073486328125e-05, -0.0001773834228515625, -5.7220458984375e-06, -0.00127410888671875, -1.1920928244535389e-07, -0.0004127025604248047, -1.7404556274414062e-05, -0.05964398384094238, 0.0, -0.0001087188720703125, -1.71661376953125e-05, -1.33514404296875e-05, -0.006238803267478943, 0.0, -0.0025768280029296875, -3.0517578125e-05, -8.0108642578125e-05, -0.15486526489257812, -4.00543212890625e-05, -7.43865966796875e-05, -0.0002002716064453125, -1.9073486328125e-06, -2.47955322265625e-05, -6.4849853515625e-05, -0.0021077394485473633, -1.1920928244535389e-07, -0.00032770633697509766, -1.3828277587890625e-05, -2.254589796066284, -1.52587890625e-05, -0.00054931640625, -0.19743728637695312, -0.01169586181640625, -0.21141445636749268, -0.00021827219461556524, -0.01800084114074707, -0.04671645164489746, -2.6702880859375e-05, -0.014532060362398624, 0.0], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Kings", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 44, 168, "Buff", "<EOS>", "Spell", "Damage", "<EOS>", "1", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        self.target.add_buff(Buff(SpellDamage(1)))\n"}, {"score": -5.18861068196059, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Blessing of Kings", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 4}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "reveal", "value": {"_type": "Template38", "hole0": "super"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "BlessingOfKings", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-8.0108642578125e-05, -0.000492095947265625, -5.91278076171875e-05, -0.0018482208251953125, -2.6702880859375e-05, -2.610649426060263e-05, -0.0008650663658045232, -0.04605865478515625, -0.0002617835416458547, -0.0002613067626953125, -5.340576171875e-05, -3.814697265625e-06, -0.0001581907126819715, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0048656463623046875, -0.004344940185546875, -1.71661376953125e-05, -0.000910328992176801, -0.0005348920822143555, -0.00010847726662177593, -0.0011589527130126953, -3.409367855056189e-05, -1.9073486328125e-06, -0.0001613961358089, 0.0, -0.004573822021484375, 0.0, -0.008217096328735352, 0.0, -0.001277923583984375, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -0.0018520355224609375, 0.0, -0.0014801025390625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00016427040100097656, -1.1563301086425781e-05, -0.0020294189453125, -3.4332275390625e-05, -2.181529998779297e-05, -1.1801719665527344e-05, -3.0517578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.2993811651540454e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.283687591552734e-05, -1.5020368664409034e-05, -0.9544401168823242, -5.53131103515625e-05, -2.09808349609375e-05, -0.0001316070556640625, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -8.356553735211492e-05, 0.0, -2.300739288330078e-05, 0.0, -0.0001468658447265625, -0.00064849853515625, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -2.8848648071289062e-05, -3.409376950003207e-05, -0.97479248046875, -0.0001583099365234375, -0.07136249542236328, -0.00041961669921875, -0.0066140079870820045, -2.741813204920618e-06, -0.000904083251953125, -8.7738037109375e-05, -2.288818359375e-05, -3.814697265625e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.00016021728515625, -1.9073486328125e-05, -0.0001773834228515625, -5.7220458984375e-06, -0.00127410888671875, -1.1920928244535389e-07, -0.0004127025604248047, -1.7404556274414062e-05, -0.05964398384094238, 0.0, -0.0001087188720703125, -1.71661376953125e-05, -1.33514404296875e-05, -0.006238803267478943, 0.0, -0.0025768280029296875, -3.0517578125e-05, -8.0108642578125e-05, -1.9447669982910156, -7.62939453125e-06, -1.9073486328125e-06, -1.0319499969482422, 0.0, -0.00013529414718504995, 0.0, -0.04824256896972656, 0.0], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Kings", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        super().reveal()\n"}, {"score": -5.206233042003468, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Blessing of Kings", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 4}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "BlessingOfKings", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-8.0108642578125e-05, -0.000492095947265625, -5.91278076171875e-05, -0.0018482208251953125, -2.6702880859375e-05, -2.610649426060263e-05, -0.0008650663658045232, -0.04605865478515625, -0.0002617835416458547, -0.0002613067626953125, -5.340576171875e-05, -3.814697265625e-06, -0.0001581907126819715, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0048656463623046875, -0.004344940185546875, -1.71661376953125e-05, -0.000910328992176801, -0.0005348920822143555, -0.00010847726662177593, -0.0011589527130126953, -3.409367855056189e-05, -1.9073486328125e-06, -0.0001613961358089, 0.0, -0.004573822021484375, 0.0, -0.008217096328735352, 0.0, -0.001277923583984375, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -0.0018520355224609375, 0.0, -0.0014801025390625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00016427040100097656, -1.1563301086425781e-05, -0.0020294189453125, -3.4332275390625e-05, -2.181529998779297e-05, -1.1801719665527344e-05, -3.0517578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.2993811651540454e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.283687591552734e-05, -1.5020368664409034e-05, -0.9544401168823242, -5.53131103515625e-05, -2.09808349609375e-05, -0.0001316070556640625, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -8.356553735211492e-05, 0.0, -2.300739288330078e-05, 0.0, -0.0001468658447265625, -0.00064849853515625, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -2.8848648071289062e-05, -3.409376950003207e-05, -0.97479248046875, -0.0001583099365234375, -0.07136249542236328, -0.00041961669921875, -0.0066140079870820045, -2.741813204920618e-06, -0.000904083251953125, -8.7738037109375e-05, -2.288818359375e-05, -3.814697265625e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.00016021728515625, -1.9073486328125e-05, -0.0001773834228515625, -5.7220458984375e-06, -0.00127410888671875, -1.1920928244535389e-07, -0.0004127025604248047, -1.7404556274414062e-05, -0.05964398384094238, 0.0, -0.0001087188720703125, -1.71661376953125e-05, -1.33514404296875e-05, -0.006238803267478943, 0.0, -0.0025768280029296875, -3.0517578125e-05, -8.0108642578125e-05, -1.9447669982910156, -7.62939453125e-06, -1.9073486328125e-06, -1.0000057220458984, 0.0, -0.09642219543457031, 0.0, -0.0015223026275634766, 0.0], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Kings", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        player.draw()\n"}, {"score": -5.36822205939125, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Blessing of Kings", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "player", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"id": "player", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "BlessingOfKings", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-8.0108642578125e-05, -0.000492095947265625, -5.91278076171875e-05, -0.0018482208251953125, -2.6702880859375e-05, -2.610649426060263e-05, -0.0008650663658045232, -0.04605865478515625, -0.0002617835416458547, -0.0002613067626953125, -5.340576171875e-05, -3.814697265625e-06, -0.0001581907126819715, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0048656463623046875, -0.004344940185546875, -1.71661376953125e-05, -0.000910328992176801, -0.0005348920822143555, -0.00010847726662177593, -0.0011589527130126953, -3.409367855056189e-05, -1.9073486328125e-06, -0.0001613961358089, 0.0, -0.004573822021484375, 0.0, -0.008217096328735352, 0.0, -0.001277923583984375, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -0.0018520355224609375, 0.0, -0.0014801025390625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00016427040100097656, -1.1563301086425781e-05, -0.0020294189453125, -3.4332275390625e-05, -2.181529998779297e-05, -1.1801719665527344e-05, -3.0517578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.2993811651540454e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.283687591552734e-05, -1.5020368664409034e-05, -0.9544401168823242, -5.53131103515625e-05, -2.09808349609375e-05, -0.0001316070556640625, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -8.356553735211492e-05, 0.0, -2.300739288330078e-05, 0.0, -0.0001468658447265625, -0.00064849853515625, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -2.8848648071289062e-05, -3.409376950003207e-05, -0.5556812286376953, -0.00014495849609375, -1.52587890625e-05, -0.9786338806152344, -0.03531646728515625, -0.0006542205810546875, 0.0, -0.000823974609375, 0.0, -0.0003986358642578125, 0.0, -0.0009393692016601562, -4.0531158447265625e-06, -0.7544281482696533, 0.0, -0.0123291015625, 0.0, -0.0129241943359375, -1.0728830375228426e-06, -0.02457427978515625, -3.814697265625e-06, -0.0005130767822265625, -0.000339508056640625, -1.9073486328125e-06, -0.0003223419189453125, -0.18820762634277344, -1.9073486328125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.003101825714111328, -1.9073468138230965e-06, -7.033348083496094e-05, -2.0265579223632812e-06, -0.6577337980270386, 0.0, -1.71661376953125e-05, -0.35834217071533203, -1.9073486328125e-06, -0.14093878865242004, 0.0, -0.0049343109130859375, -1.71661376953125e-05, -0.0001068115234375, -0.0267486572265625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0008373260498046875, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -0.002635955810546875, -1.1920928244535389e-07, -0.00039327144622802734, -1.2278556823730469e-05, -0.5604938268661499, 0.0, -0.000152587890625, -1.33514404296875e-05, -3.4332275390625e-05, -0.006969250738620758, 0.0], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Kings", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.player = player\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"score": -5.54047461274962, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Blessing of Kings", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 4}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "BlessingOfKings", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-8.0108642578125e-05, -0.000492095947265625, -5.91278076171875e-05, -0.0018482208251953125, -2.6702880859375e-05, -2.610649426060263e-05, -0.0008650663658045232, -0.04605865478515625, -0.0002617835416458547, -0.0002613067626953125, -5.340576171875e-05, -3.814697265625e-06, -0.0001581907126819715, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0048656463623046875, -0.004344940185546875, -1.71661376953125e-05, -0.000910328992176801, -0.0005348920822143555, -0.00010847726662177593, -0.0011589527130126953, -3.409367855056189e-05, -1.9073486328125e-06, -0.0001613961358089, 0.0, -0.004573822021484375, 0.0, -0.008217096328735352, 0.0, -0.001277923583984375, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -0.0018520355224609375, 0.0, -0.0014801025390625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00016427040100097656, -1.1563301086425781e-05, -0.0020294189453125, -3.4332275390625e-05, -2.181529998779297e-05, -1.1801719665527344e-05, -3.0517578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.2993811651540454e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.283687591552734e-05, -1.5020368664409034e-05, -0.9499721527099609, -1.1444091796875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000233053884585388, 0.0, -2.682209014892578e-05, 0.0, -3.62396240234375e-05, -0.00135040283203125, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -2.8848648071289062e-05, -3.802764695137739e-05, -0.03334236145019531, -0.0006017684936523438, -0.03455543518066406, -0.000362396240234375, -0.007003392092883587, -7.987022399902344e-06, -0.00012969970703125, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-05, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000682830810546875, -7.62939453125e-06, -0.0032634735107421875, 0.0, -0.000247955322265625, -4.2319297790527344e-05, -4.386639595031738, -2.1457672119140625e-06, -0.0005893707275390625, -0.036968231201171875, 0.0, -0.0013322830200195312, 0.0, -8.0108642578125e-05, -3.4332275390625e-05, -7.62939453125e-06, -1.1324854312988464e-05], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Kings", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.use(player, game)\n"}, {"score": -5.73123103537629, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Blessing of Kings", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "divine_shield", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "BlessingOfKings", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-8.0108642578125e-05, -0.000492095947265625, -5.91278076171875e-05, -0.0018482208251953125, -2.6702880859375e-05, -2.610649426060263e-05, -0.0008650663658045232, -0.04605865478515625, -0.0002617835416458547, -0.0002613067626953125, -5.340576171875e-05, -3.814697265625e-06, -0.0001581907126819715, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0048656463623046875, -0.004344940185546875, -1.71661376953125e-05, -0.000910328992176801, -0.0005348920822143555, -0.00010847726662177593, -0.0011589527130126953, -3.409367855056189e-05, -1.9073486328125e-06, -0.0001613961358089, 0.0, -0.004573822021484375, 0.0, -0.008217096328735352, 0.0, -0.001277923583984375, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -0.0018520355224609375, 0.0, -0.0014801025390625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00016427040100097656, -1.1563301086425781e-05, -0.0020294189453125, -3.4332275390625e-05, -2.181529998779297e-05, -1.1801719665527344e-05, -3.0517578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.2993811651540454e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.283687591552734e-05, -1.5020368664409034e-05, -0.9544401168823242, -5.53131103515625e-05, -2.09808349609375e-05, -0.0001316070556640625, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -8.356553735211492e-05, 0.0, -2.300739288330078e-05, 0.0, -0.0001468658447265625, -0.00064849853515625, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -2.8848648071289062e-05, -3.409376950003207e-05, -0.5556812286376953, -0.00014495849609375, -1.52587890625e-05, -0.9786338806152344, -0.03531646728515625, -0.0006542205810546875, 0.0, -0.000823974609375, 0.0, -0.0003986358642578125, 0.0, -0.0009393692016601562, -4.0531158447265625e-06, -1.9632999897003174, -1.1920928244535389e-07, -0.0004329681396484375, -0.000446319580078125, -2.288818359375e-05, 0.0, -0.044022560119628906, -1.9073486328125e-06, -0.052623748779296875, -9.5367431640625e-06, -1.9073486328125e-06, -0.00029754638671875, -0.0003490447998046875, -1.9073486328125e-06, -0.0006771087646484375, -4.1961669921875e-05, -0.001664280891418457, -1.1920928244535389e-07, -0.00017774105072021484, -1.9073486328125e-05, -0.47750771045684814, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -2.47955322265625e-05, -0.008475100621581078, 0.0, -0.008016586303710938, -2.47955322265625e-05, -9.5367431640625e-05, -0.036808013916015625, -9.72747802734375e-05, -3.814697265625e-05, -0.001453399658203125, -3.814697265625e-06, -1.71661376953125e-05, -3.4332275390625e-05, -0.0024977922439575195, -1.1920928244535389e-07, -0.0006157159805297852, -1.1920928955078125e-05, -0.5137804746627808, 0.0, -0.0001506805419921875, -9.5367431640625e-06, -8.58306884765625e-05, -0.006413968279957771, 0.0], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Kings", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 20, 126, "True", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n"}, {"score": -6.107503885112514, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Blessing of Kings", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "player", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"id": "player", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "BlessingOfKings", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-8.0108642578125e-05, -0.000492095947265625, -5.91278076171875e-05, -0.0018482208251953125, -2.6702880859375e-05, -2.610649426060263e-05, -0.0008650663658045232, -0.04605865478515625, -0.0002617835416458547, -0.0002613067626953125, -5.340576171875e-05, -3.814697265625e-06, -0.0001581907126819715, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0048656463623046875, -0.004344940185546875, -1.71661376953125e-05, -0.000910328992176801, -0.0005348920822143555, -0.00010847726662177593, -0.0011589527130126953, -3.409367855056189e-05, -1.9073486328125e-06, -0.0001613961358089, 0.0, -0.004573822021484375, 0.0, -0.008217096328735352, 0.0, -0.001277923583984375, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -0.0018520355224609375, 0.0, -0.0014801025390625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00016427040100097656, -1.1563301086425781e-05, -0.0020294189453125, -3.4332275390625e-05, -2.181529998779297e-05, -1.1801719665527344e-05, -3.0517578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.2993811651540454e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.283687591552734e-05, -1.5020368664409034e-05, -0.9544401168823242, -5.53131103515625e-05, -2.09808349609375e-05, -0.0001316070556640625, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -8.356553735211492e-05, 0.0, -2.300739288330078e-05, 0.0, -0.0001468658447265625, -0.00064849853515625, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -2.8848648071289062e-05, -3.409376950003207e-05, -0.5556812286376953, -0.00014495849609375, -1.52587890625e-05, -0.9786338806152344, -0.03531646728515625, -0.0006542205810546875, 0.0, -0.000823974609375, 0.0, -0.0003986358642578125, 0.0, -0.0009393692016601562, -4.0531158447265625e-06, -0.7544281482696533, 0.0, -0.0123291015625, 0.0, -0.0129241943359375, -1.0728830375228426e-06, -0.02457427978515625, -3.814697265625e-06, -0.0005130767822265625, -0.000339508056640625, -1.9073486328125e-06, -0.0003223419189453125, -0.18820762634277344, -1.9073486328125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.003101825714111328, -1.9073468138230965e-06, -7.033348083496094e-05, -2.0265579223632812e-06, -0.6577337980270386, 0.0, -1.71661376953125e-05, -0.35834217071533203, -1.9073486328125e-06, -0.14093878865242004, 0.0, -0.0049343109130859375, -1.71661376953125e-05, -0.0001068115234375, -0.0267486572265625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0008373260498046875, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -0.002635955810546875, -1.1920928244535389e-07, -0.00039327144622802734, -1.2278556823730469e-05, -1.268983244895935, 0.0, -1.9073486328125e-05, -0.022485733032226562, -1.33514404296875e-05, -0.015443772077560425, 0.0], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Kings", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "4", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.player = player\n        self.target.change_attack(4)\n        self.target.change_attack(4)\n"}, {"score": -9.351583792534278, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Blessing of Kings", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "draw_player", "_type": "Name"}], "value": {"_type": "Template38", "hole0": "<UNK>"}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "lightwarden", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "orelse": [{"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "lightwarden", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "test": {"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "ops": [{"_type": "NotEq"}]}}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "ops": [{"_type": "Is"}]}}, {"_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "draw_player", "_type": "Name"}], "value": {"_type": "Template38", "hole0": "Player<UNK>"}}], "orelse": [{"_type": "Assign", "targets": [{"id": "draw_player", "_type": "Name"}], "value": {"_type": "Template38", "hole0": "Player<UNK>"}}], "test": {"comparators": [{"slice": {"_type": "Index", "value": {"_type": "Num", "n": 1}}, "_type": "Subscript", "value": {"_type": "Attribute", "attr": "players", "value": {"id": "game", "_type": "Name"}}}], "_type": "Compare", "left": {"id": "player", "_type": "Name"}, "ops": [{"_type": "Is"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "BlessingOfKings", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-8.0108642578125e-05, -0.000492095947265625, -5.91278076171875e-05, -0.0018482208251953125, -2.6702880859375e-05, -2.610649426060263e-05, -0.0008650663658045232, -0.04605865478515625, -0.0002617835416458547, -0.0002613067626953125, -5.340576171875e-05, -3.814697265625e-06, -0.0001581907126819715, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0048656463623046875, -0.004344940185546875, -1.71661376953125e-05, -0.000910328992176801, -0.0005348920822143555, -0.00010847726662177593, -0.0011589527130126953, -3.409367855056189e-05, -1.9073486328125e-06, -0.0001613961358089, 0.0, -0.004573822021484375, 0.0, -0.008217096328735352, 0.0, -0.001277923583984375, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -0.0018520355224609375, 0.0, -0.0014801025390625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00016427040100097656, -1.1563301086425781e-05, -0.0020294189453125, -3.4332275390625e-05, -2.181529998779297e-05, -1.1801719665527344e-05, -3.0517578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.2993811651540454e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.283687591552734e-05, -1.5020368664409034e-05, -0.9544401168823242, -5.53131103515625e-05, -2.09808349609375e-05, -0.0001316070556640625, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -8.356553735211492e-05, 0.0, -2.300739288330078e-05, 0.0, -0.0001468658447265625, -0.00064849853515625, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -2.8848648071289062e-05, -3.409376950003207e-05, -0.5556812286376953, -0.00014495849609375, -1.52587890625e-05, -0.47860240936279297, -3.814697265625e-06, -1.6191539764404297, -4.768367489305092e-06, -0.026247024536132812, -4.38690185546875e-05, -0.17871665954589844, -0.038032952696084976, -0.015832901000976562, -0.0004634857177734375, -0.004649162292480469, -0.002178192138671875, -0.0056171417236328125, -1.9073486328125e-06, -5.340576171875e-05, -7.62939453125e-06, -0.03946876525878906, 0.0, -0.00193023681640625, -9.655952453613281e-06, -0.0003490447998046875, -0.03357887268066406, -0.0001277923583984375, -0.06577110290527344, -4.1961669921875e-05, -4.172325134277344e-06, 0.0, -0.005859375, -0.000858306884765625, 0.0, -0.007758140563964844, -0.007099151611328125, -0.0001068115234375, -0.0019121170043945312, -0.008487701416015625, -3.814697265625e-06, -0.1973341703414917, -2.0265579223632812e-06, -0.002681136131286621, 0.0, -1.9073486328125e-05, -0.000659942626953125, -1.9073486328125e-06, -0.0022573471069335938, -1.1920928244535389e-07, -0.1524505615234375, 0.0, -2.86102294921875e-05, 0.0, -0.4663982391357422, -1.9073486328125e-06, -0.0022929906845092773, -1.1444091796875e-05, -0.000415802001953125, -0.0015430450439453125, -5.14984130859375e-05, -2.47955322265625e-05, -0.006365060806274414, -8.4638240878121e-06, -1.9073486328125e-06, -0.0010194778442382812, -4.76837158203125e-05, -0.0010433197021484375, 0.0, -0.00039768218994140625, 0.0, -0.0001288652274524793, -1.1444091796875e-05, -0.000545501708984375, -0.030447006225585938, -0.0002460479736328125, -0.0033636093139648438, -3.0517578125e-05, -0.006038665771484375, 0.0, -0.020174026489257812, -5.7220458984375e-06, -0.0005159378051757812, -1.33514404296875e-05, -0.0016689300537109375, 0.0, -0.00037217140197753906, -7.450579869328067e-05, -0.41881537437438965, -2.861022494471399e-06, -0.000263214111328125, -0.06831645965576172, -0.0001010894775390625, -0.007046699523925781, -0.0003414154052734375, -3.62396240234375e-05, -3.814697265625e-06, -0.0003681182861328125, -5.7220458984375e-06, -0.07556438446044922, 0.0, -0.015379905700683594, -9.894371032714844e-06, -0.0007786750793457031, -9.28640365600586e-05, -0.017623066902160645, -9.775161743164062e-06, -0.00067901611328125, -0.0029382705688476562, -1.9073486328125e-06, -6.103515625e-05, -2.288818359375e-05, -0.015146255493164062, -0.0006809234619140625, -0.00026702880859375, 0.0, -0.20969748497009277, -3.576278118089249e-07, -0.06347441673278809, 0.0, -1.52587890625e-05, -0.001247406005859375, -2.09808349609375e-05, -0.0036449432373046875, -2.3841855067985307e-07, -0.06697654724121094, 0.0, -4.9591064453125e-05, 0.0, -0.735295295715332, -1.9073486328125e-06, -0.0027871131896972656, -9.5367431640625e-06, -0.0002899169921875, -0.00641632080078125, -3.62396240234375e-05, -2.09808349609375e-05, -0.00713658332824707, -4.529942543740617e-06, -1.9073486328125e-06, -0.002178192138671875, -2.47955322265625e-05, -0.0006809234619140625, 0.0, -0.0005712509155273438, 0.0, -0.0001378059241687879, -9.5367431640625e-06, -0.07155513763427734, -0.000507354736328125, -0.0047817230224609375, -2.47955322265625e-05, -0.0968170166015625, 0.0, -0.4395108222961426, -2.3841855067985307e-07, -0.0007724761962890625, -0.08130264282226562, -0.000255584716796875, -0.14566802978515625, -0.007876396179199219, -3.0517578125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.009757041931152344, -2.622604142743512e-06, -0.06627285480499268, -2.3841855067985307e-07, -0.05533885955810547, -0.0002880096435546875, -0.02048206329345703, -0.0001239776611328125, -0.5853486061096191, 0.0, -0.002521514892578125, -0.11119651794433594, -1.1444091796875e-05, -0.006679534912109375, -0.0003948211669921875, -0.000164031982421875, -0.11739528179168701, -1.752376374497544e-05, -0.0009937286376953125, -5.7220458984375e-06, -0.115862175822258, -0.07124602794647217, -0.00046979531180113554, -0.0002899169921875, -0.23569583892822266, -0.000225067138671875, -0.0031175613403320312, -0.0008344650268554688, -0.0001277923583984375, -0.24419665336608887, -1.1920896213268861e-05, -0.0033931732177734375, -0.0001087188720703125, -0.05269229784607887, -0.03573274239897728, -0.00034616352058947086], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Kings", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "draw_player", "<EOS>", 26, 174, "<UNK>", "<EOS>", 67, 112, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "lightwarden", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 67, 111, 15, 104, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "lightwarden", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 67, 112, 15, 104, 19, 125, "player", "<EOS>", 205, 6, 208, 41, 136, 11, 94, 19, 125, "game", "<EOS>", "players", "<EOS>", 58, 115, 21, 130, "1", "<EOS>", 221, 60, 93, 208, 37, 125, "draw_player", "<EOS>", 26, 174, "Player", "<UNK>", "<EOS>", 221, 60, 93, 208, 37, 125, "draw_player", "<EOS>", 26, 174, "Player", "<UNK>", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        draw_player = <UNK>()\n        if self.target is Null:\n            lightwarden.summon(player, player.game, len(player.minions))\n        elif self.target.health != self.target.calculate_max_health():\n            lightwarden.summon(player, player.game, len(player.minions))\n        if player is game.players[1]:\n            draw_player = Player<UNK>()\n        else:\n            draw_player = Player<UNK>()\n"}, {"score": -9.567634084175573, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Blessing of Kings", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "draw_player", "_type": "Name"}], "value": {"_type": "Template38", "hole0": "<UNK>"}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "lightwarden", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "orelse": [{"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "lightwarden", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "test": {"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "ops": [{"_type": "NotEq"}]}}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "ops": [{"_type": "Is"}]}}, {"_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "draw_player", "_type": "Name"}], "value": {"_type": "Template38", "hole0": "Player<UNK>"}}], "orelse": [{"_type": "Assign", "targets": [{"id": "draw_player", "_type": "Name"}], "value": {"_type": "Template38", "hole0": "Player<UNK>"}}], "test": {"comparators": [{"slice": {"_type": "Index", "value": {"_type": "Num", "n": 0}}, "_type": "Subscript", "value": {"_type": "Attribute", "attr": "players", "value": {"id": "game", "_type": "Name"}}}], "_type": "Compare", "left": {"id": "player", "_type": "Name"}, "ops": [{"_type": "Is"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "BlessingOfKings", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-8.0108642578125e-05, -0.000492095947265625, -5.91278076171875e-05, -0.0018482208251953125, -2.6702880859375e-05, -2.610649426060263e-05, -0.0008650663658045232, -0.04605865478515625, -0.0002617835416458547, -0.0002613067626953125, -5.340576171875e-05, -3.814697265625e-06, -0.0001581907126819715, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0048656463623046875, -0.004344940185546875, -1.71661376953125e-05, -0.000910328992176801, -0.0005348920822143555, -0.00010847726662177593, -0.0011589527130126953, -3.409367855056189e-05, -1.9073486328125e-06, -0.0001613961358089, 0.0, -0.004573822021484375, 0.0, -0.008217096328735352, 0.0, -0.001277923583984375, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -0.0018520355224609375, 0.0, -0.0014801025390625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00016427040100097656, -1.1563301086425781e-05, -0.0020294189453125, -3.4332275390625e-05, -2.181529998779297e-05, -1.1801719665527344e-05, -3.0517578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.2993811651540454e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.283687591552734e-05, -1.5020368664409034e-05, -0.9544401168823242, -5.53131103515625e-05, -2.09808349609375e-05, -0.0001316070556640625, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -8.356553735211492e-05, 0.0, -2.300739288330078e-05, 0.0, -0.0001468658447265625, -0.00064849853515625, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -2.8848648071289062e-05, -3.409376950003207e-05, -0.5556812286376953, -0.00014495849609375, -1.52587890625e-05, -0.47860240936279297, -3.814697265625e-06, -1.6191539764404297, -4.768367489305092e-06, -0.026247024536132812, -4.38690185546875e-05, -0.17871665954589844, -0.038032952696084976, -0.015832901000976562, -0.0004634857177734375, -0.004649162292480469, -0.002178192138671875, -0.0056171417236328125, -1.9073486328125e-06, -5.340576171875e-05, -7.62939453125e-06, -0.03946876525878906, 0.0, -0.00193023681640625, -9.655952453613281e-06, -0.0003490447998046875, -0.03357887268066406, -0.0001277923583984375, -0.06577110290527344, -4.1961669921875e-05, -4.172325134277344e-06, 0.0, -0.005859375, -0.000858306884765625, 0.0, -0.007758140563964844, -0.007099151611328125, -0.0001068115234375, -0.0019121170043945312, -0.008487701416015625, -3.814697265625e-06, -0.1973341703414917, -2.0265579223632812e-06, -0.002681136131286621, 0.0, -1.9073486328125e-05, -0.000659942626953125, -1.9073486328125e-06, -0.0022573471069335938, -1.1920928244535389e-07, -0.1524505615234375, 0.0, -2.86102294921875e-05, 0.0, -0.4663982391357422, -1.9073486328125e-06, -0.0022929906845092773, -1.1444091796875e-05, -0.000415802001953125, -0.0015430450439453125, -5.14984130859375e-05, -2.47955322265625e-05, -0.006365060806274414, -8.4638240878121e-06, -1.9073486328125e-06, -0.0010194778442382812, -4.76837158203125e-05, -0.0010433197021484375, 0.0, -0.00039768218994140625, 0.0, -0.0001288652274524793, -1.1444091796875e-05, -0.000545501708984375, -0.030447006225585938, -0.0002460479736328125, -0.0033636093139648438, -3.0517578125e-05, -0.006038665771484375, 0.0, -0.020174026489257812, -5.7220458984375e-06, -0.0005159378051757812, -1.33514404296875e-05, -0.0016689300537109375, 0.0, -0.00037217140197753906, -7.450579869328067e-05, -0.41881537437438965, -2.861022494471399e-06, -0.000263214111328125, -0.06831645965576172, -0.0001010894775390625, -0.007046699523925781, -0.0003414154052734375, -3.62396240234375e-05, -3.814697265625e-06, -0.0003681182861328125, -5.7220458984375e-06, -0.07556438446044922, 0.0, -0.015379905700683594, -9.894371032714844e-06, -0.0007786750793457031, -9.28640365600586e-05, -0.017623066902160645, -9.775161743164062e-06, -0.00067901611328125, -0.0029382705688476562, -1.9073486328125e-06, -6.103515625e-05, -2.288818359375e-05, -0.015146255493164062, -0.0006809234619140625, -0.00026702880859375, 0.0, -0.20969748497009277, -3.576278118089249e-07, -0.06347441673278809, 0.0, -1.52587890625e-05, -0.001247406005859375, -2.09808349609375e-05, -0.0036449432373046875, -2.3841855067985307e-07, -0.06697654724121094, 0.0, -4.9591064453125e-05, 0.0, -0.735295295715332, -1.9073486328125e-06, -0.0027871131896972656, -9.5367431640625e-06, -0.0002899169921875, -0.00641632080078125, -3.62396240234375e-05, -2.09808349609375e-05, -0.00713658332824707, -4.529942543740617e-06, -1.9073486328125e-06, -0.002178192138671875, -2.47955322265625e-05, -0.0006809234619140625, 0.0, -0.0005712509155273438, 0.0, -0.0001378059241687879, -9.5367431640625e-06, -0.07155513763427734, -0.000507354736328125, -0.0047817230224609375, -2.47955322265625e-05, -0.0968170166015625, 0.0, -0.4395108222961426, -2.3841855067985307e-07, -0.0007724761962890625, -0.08130264282226562, -0.000255584716796875, -0.14566802978515625, -0.007876396179199219, -3.0517578125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.009757041931152344, -2.622604142743512e-06, -0.06627285480499268, -2.3841855067985307e-07, -0.05533885955810547, -0.0002880096435546875, -0.02048206329345703, -0.0001239776611328125, -0.8676981925964355, -1.9073486328125e-06, -0.0006122589111328125, -0.005344390869140625, -3.814697265625e-06, -0.0076389312744140625, -0.000446319580078125, -0.00016021728515625, -0.11285507678985596, -9.059905096364673e-06, -0.0008487701416015625, -5.7220458984375e-06, -0.184981107711792, -0.07457995414733887, -0.0004211570485495031, -0.000339508056640625, -0.20470237731933594, -0.000278472900390625, -0.003101348876953125, -0.0007658004760742188, -0.0002040863037109375, -0.24447715282440186, -1.4662683497590479e-05, -0.004021644592285156, -0.0001373291015625, -0.05650598928332329, -0.03465652093291283, -0.00031755625968798995], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Kings", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "draw_player", "<EOS>", 26, 174, "<UNK>", "<EOS>", 67, 112, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "lightwarden", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 67, 111, 15, 104, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "lightwarden", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 67, 112, 15, 104, 19, 125, "player", "<EOS>", 205, 6, 208, 41, 136, 11, 94, 19, 125, "game", "<EOS>", "players", "<EOS>", 58, 115, 21, 130, "0", "<EOS>", 221, 60, 93, 208, 37, 125, "draw_player", "<EOS>", 26, 174, "Player", "<UNK>", "<EOS>", 221, 60, 93, 208, 37, 125, "draw_player", "<EOS>", 26, 174, "Player", "<UNK>", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        draw_player = <UNK>()\n        if self.target is Null:\n            lightwarden.summon(player, player.game, len(player.minions))\n        elif self.target.health != self.target.calculate_max_health():\n            lightwarden.summon(player, player.game, len(player.minions))\n        if player is game.players[0]:\n            draw_player = Player<UNK>()\n        else:\n            draw_player = Player<UNK>()\n"}, {"score": -11.07551470070122, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Blessing of Kings", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "draw_player", "_type": "Name"}], "value": {"_type": "Template38", "hole0": "<UNK>"}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "lightwarden", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "orelse": [{"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"id": "lightwarden", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}]}]}}], "test": {"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "ops": [{"_type": "NotEq"}]}}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "ops": [{"_type": "Is"}]}}, {"_type": "If", "body": [{"_type": "Assign", "targets": [{"id": "draw_player", "_type": "Name"}], "value": {"_type": "Template38", "hole0": "Player<UNK>"}}], "orelse": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}]}}], "test": {"comparators": [{"slice": {"_type": "Index", "value": {"_type": "Num", "n": 1}}, "_type": "Subscript", "value": {"_type": "Attribute", "attr": "players", "value": {"id": "game", "_type": "Name"}}}], "_type": "Compare", "left": {"id": "player", "_type": "Name"}, "ops": [{"_type": "Is"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "BlessingOfKings", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-8.0108642578125e-05, -0.000492095947265625, -5.91278076171875e-05, -0.0018482208251953125, -2.6702880859375e-05, -2.610649426060263e-05, -0.0008650663658045232, -0.04605865478515625, -0.0002617835416458547, -0.0002613067626953125, -5.340576171875e-05, -3.814697265625e-06, -0.0001581907126819715, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0048656463623046875, -0.004344940185546875, -1.71661376953125e-05, -0.000910328992176801, -0.0005348920822143555, -0.00010847726662177593, -0.0011589527130126953, -3.409367855056189e-05, -1.9073486328125e-06, -0.0001613961358089, 0.0, -0.004573822021484375, 0.0, -0.008217096328735352, 0.0, -0.001277923583984375, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -0.0018520355224609375, 0.0, -0.0014801025390625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00016427040100097656, -1.1563301086425781e-05, -0.0020294189453125, -3.4332275390625e-05, -2.181529998779297e-05, -1.1801719665527344e-05, -3.0517578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.2993811651540454e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.283687591552734e-05, -1.5020368664409034e-05, -0.9544401168823242, -5.53131103515625e-05, -2.09808349609375e-05, -0.0001316070556640625, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -8.356553735211492e-05, 0.0, -2.300739288330078e-05, 0.0, -0.0001468658447265625, -0.00064849853515625, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -2.8848648071289062e-05, -3.409376950003207e-05, -0.5556812286376953, -0.00014495849609375, -1.52587890625e-05, -0.47860240936279297, -3.814697265625e-06, -1.6191539764404297, -4.768367489305092e-06, -0.026247024536132812, -4.38690185546875e-05, -0.17871665954589844, -0.038032952696084976, -0.015832901000976562, -0.0004634857177734375, -0.004649162292480469, -0.002178192138671875, -0.0056171417236328125, -1.9073486328125e-06, -5.340576171875e-05, -7.62939453125e-06, -0.03946876525878906, 0.0, -0.00193023681640625, -9.655952453613281e-06, -0.0003490447998046875, -0.03357887268066406, -0.0001277923583984375, -0.06577110290527344, -4.1961669921875e-05, -4.172325134277344e-06, 0.0, -0.005859375, -0.000858306884765625, 0.0, -0.007758140563964844, -0.007099151611328125, -0.0001068115234375, -0.0019121170043945312, -0.008487701416015625, -3.814697265625e-06, -0.1973341703414917, -2.0265579223632812e-06, -0.002681136131286621, 0.0, -1.9073486328125e-05, -0.000659942626953125, -1.9073486328125e-06, -0.0022573471069335938, -1.1920928244535389e-07, -0.1524505615234375, 0.0, -2.86102294921875e-05, 0.0, -0.4663982391357422, -1.9073486328125e-06, -0.0022929906845092773, -1.1444091796875e-05, -0.000415802001953125, -0.0015430450439453125, -5.14984130859375e-05, -2.47955322265625e-05, -0.006365060806274414, -8.4638240878121e-06, -1.9073486328125e-06, -0.0010194778442382812, -4.76837158203125e-05, -0.0010433197021484375, 0.0, -0.00039768218994140625, 0.0, -0.0001288652274524793, -1.1444091796875e-05, -0.000545501708984375, -0.030447006225585938, -0.0002460479736328125, -0.0033636093139648438, -3.0517578125e-05, -0.006038665771484375, 0.0, -0.020174026489257812, -5.7220458984375e-06, -0.0005159378051757812, -1.33514404296875e-05, -0.0016689300537109375, 0.0, -0.00037217140197753906, -7.450579869328067e-05, -0.41881537437438965, -2.861022494471399e-06, -0.000263214111328125, -0.06831645965576172, -0.0001010894775390625, -0.007046699523925781, -0.0003414154052734375, -3.62396240234375e-05, -3.814697265625e-06, -0.0003681182861328125, -5.7220458984375e-06, -0.07556438446044922, 0.0, -0.015379905700683594, -9.894371032714844e-06, -0.0007786750793457031, -9.28640365600586e-05, -0.017623066902160645, -9.775161743164062e-06, -0.00067901611328125, -0.0029382705688476562, -1.9073486328125e-06, -6.103515625e-05, -2.288818359375e-05, -0.015146255493164062, -0.0006809234619140625, -0.00026702880859375, 0.0, -0.20969748497009277, -3.576278118089249e-07, -0.06347441673278809, 0.0, -1.52587890625e-05, -0.001247406005859375, -2.09808349609375e-05, -0.0036449432373046875, -2.3841855067985307e-07, -0.06697654724121094, 0.0, -4.9591064453125e-05, 0.0, -0.735295295715332, -1.9073486328125e-06, -0.0027871131896972656, -9.5367431640625e-06, -0.0002899169921875, -0.00641632080078125, -3.62396240234375e-05, -2.09808349609375e-05, -0.00713658332824707, -4.529942543740617e-06, -1.9073486328125e-06, -0.002178192138671875, -2.47955322265625e-05, -0.0006809234619140625, 0.0, -0.0005712509155273438, 0.0, -0.0001378059241687879, -9.5367431640625e-06, -0.07155513763427734, -0.000507354736328125, -0.0047817230224609375, -2.47955322265625e-05, -0.0968170166015625, 0.0, -0.4395108222961426, -2.3841855067985307e-07, -0.0007724761962890625, -0.08130264282226562, -0.000255584716796875, -0.14566802978515625, -0.007876396179199219, -3.0517578125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.009757041931152344, -2.622604142743512e-06, -0.06627285480499268, -2.3841855067985307e-07, -0.05533885955810547, -0.0002880096435546875, -0.02048206329345703, -0.0001239776611328125, -0.5853486061096191, 0.0, -0.002521514892578125, -0.11119651794433594, -1.1444091796875e-05, -0.006679534912109375, -0.0003948211669921875, -0.000164031982421875, -0.11739528179168701, -1.752376374497544e-05, -0.0009937286376953125, -5.7220458984375e-06, -0.115862175822258, -0.07124602794647217, -0.00046979531180113554, -0.0002899169921875, -1.6004772186279297, 0.0, -0.005795478820800781, -0.0005245208740234375, -7.62939453125e-06, -1.9073486328125e-06, -0.010345458984375, -3.814697265625e-06, -0.04171466827392578, -3.814697265625e-06, -0.021908879280090332, -1.1920928244535389e-07, -0.00447535514831543, -4.0531158447265625e-06, -0.6041175127029419, 0.0, -0.0004119873046875, -0.004473686218261719, -0.00019073486328125, -0.005956463515758514, 0.0], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Kings", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "draw_player", "<EOS>", 26, 174, "<UNK>", "<EOS>", 67, 112, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "lightwarden", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 67, 111, 15, 104, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "lightwarden", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 67, 112, 15, 104, 19, 125, "player", "<EOS>", 205, 6, 208, 41, 136, 11, 94, 19, 125, "game", "<EOS>", "players", "<EOS>", 58, 115, 21, 130, "1", "<EOS>", 221, 60, 93, 208, 37, 125, "draw_player", "<EOS>", 26, 174, "Player", "<UNK>", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        draw_player = <UNK>()\n        if self.target is Null:\n            lightwarden.summon(player, player.game, len(player.minions))\n        elif self.target.health != self.target.calculate_max_health():\n            lightwarden.summon(player, player.game, len(player.minions))\n        if player is game.players[1]:\n            draw_player = Player<UNK>()\n        else:\n            self.target.increase_health(4)\n"}, {"score": -19.938684463500977, "model_output": {"_type": "Module", "body": []}, "score_history": [-8.0108642578125e-05, -0.000492095947265625, -19.938112258911133], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 10}
{"beams": [{"score": -0.6411677094570649, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "BlessingOfMight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.57763671875e-05, -0.000476837158203125, -5.91278076171875e-05, -0.001789093017578125, -3.0517578125e-05, -2.8252303309272975e-05, -0.0008657812140882015, -0.03291149437427521, -0.3832813501358032, -3.814697265625e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.00047278404235839844, -4.4345855712890625e-05, -5.7220458984375e-06, -0.0030803680419921875, -0.001132965087890625, -5.7220458984375e-06, -0.0003282534016761929, -7.987022399902344e-06, -3.24249267578125e-05, -2.6702880859375e-05, -2.47955322265625e-05, -0.00016331326332874596, -1.9073486328125e-05, -0.00272369384765625, -3.62396240234375e-05, -7.62939453125e-06, -1.52587890625e-05, -0.0015411376953125, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.483621498569846e-05, -3.814697265625e-06, -8.404254913330078e-05, 0.0, -0.000659942626953125, -4.57763671875e-05, -0.0002002716064453125, -7.343049946939573e-05, -0.0005460977554321289, -0.00018882608856074512, -0.00030517578125, -6.830690836068243e-05, -0.0002079010009765625, -0.000606536865234375, -0.000194549560546875, -0.0005078210378997028, -8.0108642578125e-05, -1.9073486328125e-06, -0.0006256103515625, -0.0027589797973632812, -1.9073486328125e-06, -0.031366944313049316, -1.1920928244535389e-07, -0.0069844722747802734, -1.9073486328125e-06, -1.33514404296875e-05, -3.62396240234375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0014736652374267578, -5.960462772236497e-07, -0.0063582658767700195, -1.1920928244535389e-07, -8.58306884765625e-05, -0.00067138671875, -7.62939453125e-06, -0.018906712532043457, -2.741813204920618e-06, -0.0013179779052734375, -0.0002899169921875, -0.00042724609375, -6.4849853515625e-05, -0.0015697479248046875, -1.9073486328125e-06, -0.000423431396484375, 0.0, -0.000179290771484375, -1.9073486328125e-06, -0.0024824142456054688, -1.5616416931152344e-05, -0.00165557861328125, -0.000171661376953125, -1.1444091796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00019276142120361328, -1.1920922133867862e-06, -0.0009864568710327148, -2.384185791015625e-06, -0.1214747428894043, 0.0, -0.0001087188720703125, -0.00226593017578125, -3.814697265625e-05, -0.005041696596890688, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Might", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessing", " ", "of", " ", "Might", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -1.6463450250949663, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "BlessingOfMightOfMight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.57763671875e-05, -0.000476837158203125, -5.91278076171875e-05, -0.001789093017578125, -3.0517578125e-05, -2.8252303309272975e-05, -0.0008657812140882015, -0.03291149437427521, -1.242165207862854, -0.029350072145462036, -0.0015443741576746106, -1.52587890625e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004652738571166992, -5.2094459533691406e-05, -7.62939453125e-06, -0.002979278564453125, -0.001056671142578125, -5.7220458984375e-06, -0.0003755649086087942, -8.106231689453125e-06, -4.38690185546875e-05, -4.57763671875e-05, -4.57763671875e-05, -0.00022267666645348072, -4.9591064453125e-05, -0.009387969970703125, -4.76837158203125e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00150299072265625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -9.620182390790433e-05, -3.814697265625e-06, -5.543231964111328e-05, 0.0, -0.0007266998291015625, -4.38690185546875e-05, -0.00020599365234375, -7.331129745580256e-05, -0.0005050897598266602, -0.00014555318921338767, -0.00019073486328125, -0.015175223350524902, -0.07061958312988281, -0.00048065185546875, -0.0001773834228515625, -0.0005392247112467885, -0.00011420249938964844, -1.9073486328125e-06, -0.000579833984375, -0.0027008056640625, -1.9073486328125e-06, -0.04484844207763672, -2.3841855067985307e-07, -0.0059130191802978516, -1.9073486328125e-06, -1.33514404296875e-05, -4.9591064453125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.001742362859658897, -7.152555099310121e-07, -0.0073424577713012695, -1.1920928244535389e-07, -8.0108642578125e-05, -0.0006256103515625, -9.5367431640625e-06, -0.02969646453857422, -2.384185791015625e-06, -0.0011272430419921875, -0.000278472900390625, -0.0003299713134765625, -5.91278076171875e-05, -0.0009059906005859375, -1.9073486328125e-06, -0.0003871917724609375, 0.0, -0.0001621246337890625, -1.9073486328125e-06, -0.0025871992111206055, -1.5616416931152344e-05, -0.0013332366943359375, -0.0001659393310546875, -1.1444091796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.00019466876983642578, -1.0728830375228426e-06, -0.0008901357650756836, -2.384185791015625e-06, -0.122123122215271, 0.0, -0.0001049041748046875, -0.0023040771484375, -3.62396240234375e-05, -0.004849147982895374, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Might", "Of", "Might", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessing", " ", "of", " ", "Might", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class BlessingOfMightOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -3.522335869578953, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "increase_health"}], "_type": "ClassDef", "name": "BlessingOfMight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.57763671875e-05, -0.000476837158203125, -5.91278076171875e-05, -0.001789093017578125, -3.0517578125e-05, -2.8252303309272975e-05, -0.0008657812140882015, -0.03291149437427521, -0.3832813501358032, -3.814697265625e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.00047278404235839844, -4.4345855712890625e-05, -5.7220458984375e-06, -0.0030803680419921875, -0.001132965087890625, -5.7220458984375e-06, -0.0003282534016761929, -7.987022399902344e-06, -3.24249267578125e-05, -2.6702880859375e-05, -2.47955322265625e-05, -0.00016331326332874596, -1.9073486328125e-05, -0.00272369384765625, -3.62396240234375e-05, -7.62939453125e-06, -1.52587890625e-05, -0.0015411376953125, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.483621498569846e-05, -3.814697265625e-06, -8.404254913330078e-05, 0.0, -0.000659942626953125, -4.57763671875e-05, -0.0002002716064453125, -7.343049946939573e-05, -0.0005460977554321289, -0.00018882608856074512, -0.00030517578125, -6.830690836068243e-05, -0.0002079010009765625, -0.000606536865234375, -0.000194549560546875, -0.0005078210378997028, -8.0108642578125e-05, -1.9073486328125e-06, -0.0006256103515625, -0.0027589797973632812, -1.9073486328125e-06, -0.031366944313049316, -1.1920928244535389e-07, -0.0069844722747802734, -1.9073486328125e-06, -1.33514404296875e-05, -3.62396240234375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0014736652374267578, -5.960462772236497e-07, -0.0063582658767700195, -1.1920928244535389e-07, -8.58306884765625e-05, -0.00067138671875, -7.62939453125e-06, -0.018906712532043457, -2.741813204920618e-06, -0.0013179779052734375, -0.0002899169921875, -0.00042724609375, -6.4849853515625e-05, -0.0015697479248046875, -1.9073486328125e-06, -0.000423431396484375, 0.0, -0.000179290771484375, -1.9073486328125e-06, -0.0024824142456054688, -1.5616416931152344e-05, -0.00165557861328125, -0.000171661376953125, -1.1444091796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00019276142120361328, -1.1920922133867862e-06, -0.0009864568710327148, -2.384185791015625e-06, -2.877492904663086, 0.0, -1.71661376953125e-05, -0.09420299530029297, -7.82012939453125e-05, -0.038308035582304, 0.0], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Might", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessing", " ", "of", " ", "Might", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(3)\n"}, {"score": -3.8894267873027246, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "BlessingOfTheMight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.57763671875e-05, -0.000476837158203125, -5.91278076171875e-05, -0.001789093017578125, -3.0517578125e-05, -2.8252303309272975e-05, -0.0008657812140882015, -3.6530439853668213, -4.768370445162873e-07, -0.0007209515897557139, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.00042688846588134766, -5.5789947509765625e-05, -5.7220458984375e-06, -0.00305938720703125, -0.0010318756103515625, -5.7220458984375e-06, -0.00033635765430517495, -7.987022399902344e-06, -3.814697265625e-05, -3.4332275390625e-05, -3.0517578125e-05, -0.0001765448396326974, -2.47955322265625e-05, -0.0047359466552734375, -4.1961669921875e-05, -7.62939453125e-06, -1.52587890625e-05, -0.001499176025390625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -6.747238512616605e-05, -3.814697265625e-06, -6.687641143798828e-05, 0.0, -0.0006809234619140625, -4.38690185546875e-05, -0.000202178955078125, -7.414570427499712e-05, -0.0005241632461547852, -0.00015139432798605412, -0.0002079010009765625, -0.0007674693479202688, -0.002368927001953125, -0.0005588531494140625, -0.0001621246337890625, -0.0005223657935857773, -0.00010478496551513672, -1.9073486328125e-06, -0.00057220458984375, -0.002742767333984375, -1.9073486328125e-06, -0.0336759090423584, -1.1920928244535389e-07, -0.00638270378112793, -1.9073486328125e-06, -1.33514404296875e-05, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0015720127848908305, -5.960462772236497e-07, -0.0068503618240356445, -1.1920928244535389e-07, -8.20159912109375e-05, -0.0006198883056640625, -9.5367431640625e-06, -0.022873997688293457, -2.622604142743512e-06, -0.0013599395751953125, -0.000274658203125, -0.0003871917724609375, -6.4849853515625e-05, -0.0013790130615234375, -1.9073486328125e-06, -0.0004100799560546875, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -0.002498626708984375, -1.5616416931152344e-05, -0.0014934539794921875, -0.0001678466796875, -1.1444091796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.00019466876983642578, -1.0728830375228426e-06, -0.0009149312973022461, -2.384185791015625e-06, -0.12202882766723633, 0.0, -0.0001049041748046875, -0.0022678375244140625, -3.62396240234375e-05, -0.0049485876224935055, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "The", "Might", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessing", " ", "of", " ", "Might", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class BlessingOfTheMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -4.201855037213441, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "self", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "BlessingOfMight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.57763671875e-05, -0.000476837158203125, -5.91278076171875e-05, -0.001789093017578125, -3.0517578125e-05, -2.8252303309272975e-05, -0.0008657812140882015, -0.03291149437427521, -0.3832813501358032, -3.814697265625e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.00047278404235839844, -4.4345855712890625e-05, -5.7220458984375e-06, -0.0030803680419921875, -0.001132965087890625, -5.7220458984375e-06, -0.0003282534016761929, -7.987022399902344e-06, -3.24249267578125e-05, -2.6702880859375e-05, -2.47955322265625e-05, -0.00016331326332874596, -1.9073486328125e-05, -0.00272369384765625, -3.62396240234375e-05, -7.62939453125e-06, -1.52587890625e-05, -0.0015411376953125, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.483621498569846e-05, -3.814697265625e-06, -8.404254913330078e-05, 0.0, -0.000659942626953125, -4.57763671875e-05, -0.0002002716064453125, -7.343049946939573e-05, -0.0005460977554321289, -0.00018882608856074512, -0.00030517578125, -6.830690836068243e-05, -0.0002079010009765625, -0.000606536865234375, -0.000194549560546875, -0.0005078210378997028, -8.0108642578125e-05, -1.9073486328125e-06, -0.0006256103515625, -0.0027589797973632812, -1.9073486328125e-06, -3.5927624702453613, -2.3841855067985307e-07, -0.006157875061035156, -4.0531158447265625e-06, -1.71661376953125e-05, -2.86102294921875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.0024044509045779705, -1.5497195136049413e-06, -0.009047627449035645, -1.1920928244535389e-07, -7.62939453125e-05, -0.000743865966796875, -2.09808349609375e-05, -0.014281392097473145, -2.741813204920618e-06, -0.0015268325805664062, -0.0003681182861328125, -0.0004405975341796875, -4.76837158203125e-05, -0.0039234161376953125, -1.9073486328125e-06, -0.000545501708984375, 0.0, -0.0002498626708984375, -1.9073486328125e-06, -0.002325892448425293, -1.7523765563964844e-05, -0.0021495819091796875, -0.0002002716064453125, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.00017750263214111328, -1.1920922133867862e-06, -0.0009292364120483398, -2.384185791015625e-06, -0.11891889572143555, 0.0, -0.0001163482666015625, -0.00234222412109375, -3.814697265625e-05, -0.005424979142844677, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Might", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessing", " ", "of", " ", "Might", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, self.PALADIN, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -4.271388282496602, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Blessing of Might Might"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "BlessingOfMightOfMight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.57763671875e-05, -0.000476837158203125, -5.91278076171875e-05, -0.001789093017578125, -3.0517578125e-05, -2.8252303309272975e-05, -0.0008657812140882015, -0.03291149437427521, -1.242165207862854, -0.029350072145462036, -0.0015443741576746106, -1.52587890625e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004652738571166992, -5.2094459533691406e-05, -7.62939453125e-06, -0.002979278564453125, -0.001056671142578125, -5.7220458984375e-06, -0.0003755649086087942, -8.106231689453125e-06, -4.38690185546875e-05, -4.57763671875e-05, -4.57763671875e-05, -0.00022267666645348072, -4.9591064453125e-05, -0.009387969970703125, -4.76837158203125e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00150299072265625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -9.620182390790433e-05, -3.814697265625e-06, -5.543231964111328e-05, 0.0, -0.0007266998291015625, -4.38690185546875e-05, -0.00020599365234375, -7.331129745580256e-05, -0.0005050897598266602, -0.00014555318921338767, -0.00019073486328125, -0.015175223350524902, -2.6996068954467773, -6.198862683959305e-05, -3.4332275390625e-05, -0.0011692047119140625, -0.000247955322265625, -0.0008173638489097357, -3.62396240234375e-05, -3.814697265625e-06, -0.000732421875, -0.0025148391723632812, -1.9073486328125e-06, -0.027694225311279297, -1.1920928244535389e-07, -0.006264209747314453, -1.9073486328125e-06, -1.33514404296875e-05, -6.103515625e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0021224019583314657, -4.768370445162873e-07, -0.005256772041320801, -1.1920928244535389e-07, -8.20159912109375e-05, -0.002590179443359375, -1.1444091796875e-05, -0.03929626941680908, -3.576278118089249e-07, -0.0009746551513671875, -0.0002841949462890625, -0.0002727508544921875, -4.57763671875e-05, -0.0004329681396484375, -1.9073486328125e-06, -0.0004444122314453125, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -0.0026279687881469727, -1.5616416931152344e-05, -0.001171112060546875, -0.0001583099365234375, -1.1444091796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.00019657611846923828, -1.0728830375228426e-06, -0.0010188817977905273, -2.384185791015625e-06, -0.124625563621521, 0.0, -0.000102996826171875, -0.0023708343505859375, -3.62396240234375e-05, -0.004888090305030346, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Might", "Of", "Might", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessing", " ", "of", " ", "Might", " ", "Might", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class BlessingOfMightOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might Might', 1, CHARACTER_CLASS.\n            PALADIN, CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -4.546997790391366, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "increase_health"}], "_type": "ClassDef", "name": "BlessingOfMightOfMight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.57763671875e-05, -0.000476837158203125, -5.91278076171875e-05, -0.001789093017578125, -3.0517578125e-05, -2.8252303309272975e-05, -0.0008657812140882015, -0.03291149437427521, -1.242165207862854, -0.029350072145462036, -0.0015443741576746106, -1.52587890625e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004652738571166992, -5.2094459533691406e-05, -7.62939453125e-06, -0.002979278564453125, -0.001056671142578125, -5.7220458984375e-06, -0.0003755649086087942, -8.106231689453125e-06, -4.38690185546875e-05, -4.57763671875e-05, -4.57763671875e-05, -0.00022267666645348072, -4.9591064453125e-05, -0.009387969970703125, -4.76837158203125e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00150299072265625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -9.620182390790433e-05, -3.814697265625e-06, -5.543231964111328e-05, 0.0, -0.0007266998291015625, -4.38690185546875e-05, -0.00020599365234375, -7.331129745580256e-05, -0.0005050897598266602, -0.00014555318921338767, -0.00019073486328125, -0.015175223350524902, -0.07061958312988281, -0.00048065185546875, -0.0001773834228515625, -0.0005392247112467885, -0.00011420249938964844, -1.9073486328125e-06, -0.000579833984375, -0.0027008056640625, -1.9073486328125e-06, -0.04484844207763672, -2.3841855067985307e-07, -0.0059130191802978516, -1.9073486328125e-06, -1.33514404296875e-05, -4.9591064453125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.001742362859658897, -7.152555099310121e-07, -0.0073424577713012695, -1.1920928244535389e-07, -8.0108642578125e-05, -0.0006256103515625, -9.5367431640625e-06, -0.02969646453857422, -2.384185791015625e-06, -0.0011272430419921875, -0.000278472900390625, -0.0003299713134765625, -5.91278076171875e-05, -0.0009059906005859375, -1.9073486328125e-06, -0.0003871917724609375, 0.0, -0.0001621246337890625, -1.9073486328125e-06, -0.0025871992111206055, -1.5616416931152344e-05, -0.0013332366943359375, -0.0001659393310546875, -1.1444091796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.00019466876983642578, -1.0728830375228426e-06, -0.0008901357650756836, -2.384185791015625e-06, -2.888028860092163, 0.0, -1.71661376953125e-05, -0.10440826416015625, -7.82012939453125e-05, -0.03753967210650444, 0.0], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Might", "Of", "Might", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessing", " ", "of", " ", "Might", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class BlessingOfMightOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(3)\n"}, {"score": -4.617074744462045, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "BlessingOfMightMight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.57763671875e-05, -0.000476837158203125, -5.91278076171875e-05, -0.001789093017578125, -3.0517578125e-05, -2.8252303309272975e-05, -0.0008657812140882015, -0.03291149437427521, -4.346424579620361, -0.0012253106106072664, -1.52587890625e-05, -4.76837158203125e-05, -1.9073486328125e-06, -0.0005376338958740234, -4.4345855712890625e-05, -7.62939453125e-06, -0.0030193328857421875, -0.0009708404541015625, -5.7220458984375e-06, -0.00033743082894943655, -8.106231689453125e-06, -4.1961669921875e-05, -4.1961669921875e-05, -3.4332275390625e-05, -0.0002031276235356927, -2.6702880859375e-05, -0.0049114227294921875, -4.1961669921875e-05, -7.62939453125e-06, -1.52587890625e-05, -0.0014820098876953125, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -6.949894304852933e-05, -3.814697265625e-06, -6.306171417236328e-05, 0.0, -0.0006771087646484375, -4.38690185546875e-05, -0.000202178955078125, -7.414570427499712e-05, -0.0005174875259399414, -0.00015127513324841857, -0.00020599365234375, -0.0007539986982010305, -0.0023517608642578125, -0.0005626678466796875, -0.000164031982421875, -0.0005211723037064075, -0.00010478496551513672, -1.9073486328125e-06, -0.0005702972412109375, -0.0027370452880859375, -1.9073486328125e-06, -0.033796072006225586, -1.1920928244535389e-07, -0.006369352340698242, -1.9073486328125e-06, -1.33514404296875e-05, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0015778540400788188, -5.960462772236497e-07, -0.006857037544250488, -1.1920928244535389e-07, -8.20159912109375e-05, -0.0006103515625, -9.5367431640625e-06, -0.02364170551300049, -2.622604142743512e-06, -0.0013523101806640625, -0.0002727508544921875, -0.0003814697265625, -6.4849853515625e-05, -0.0012989044189453125, -1.9073486328125e-06, -0.000408172607421875, 0.0, -0.000171661376953125, -1.9073486328125e-06, -0.0025081634521484375, -1.5616416931152344e-05, -0.0014495849609375, -0.0001678466796875, -1.1444091796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.00019276142120361328, -1.0728830375228426e-06, -0.0009063482284545898, -2.384185791015625e-06, -0.12201344966888428, 0.0, -0.0001068115234375, -0.0022602081298828125, -3.62396240234375e-05, -0.0049309441819787025, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Might", "Might", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessing", " ", "of", " ", "Might", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class BlessingOfMightMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -4.834551680220599, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "append"}], "_type": "ClassDef", "name": "BlessingOfMight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.57763671875e-05, -0.000476837158203125, -5.91278076171875e-05, -0.001789093017578125, -3.0517578125e-05, -2.8252303309272975e-05, -0.0008657812140882015, -0.03291149437427521, -0.3832813501358032, -3.814697265625e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.00047278404235839844, -4.4345855712890625e-05, -5.7220458984375e-06, -0.0030803680419921875, -0.001132965087890625, -5.7220458984375e-06, -0.0003282534016761929, -7.987022399902344e-06, -3.24249267578125e-05, -2.6702880859375e-05, -2.47955322265625e-05, -0.00016331326332874596, -1.9073486328125e-05, -0.00272369384765625, -3.62396240234375e-05, -7.62939453125e-06, -1.52587890625e-05, -0.0015411376953125, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.483621498569846e-05, -3.814697265625e-06, -8.404254913330078e-05, 0.0, -0.000659942626953125, -4.57763671875e-05, -0.0002002716064453125, -7.343049946939573e-05, -0.0005460977554321289, -0.00018882608856074512, -0.00030517578125, -6.830690836068243e-05, -0.0002079010009765625, -0.000606536865234375, -0.000194549560546875, -0.0005078210378997028, -8.0108642578125e-05, -1.9073486328125e-06, -0.0006256103515625, -0.0027589797973632812, -1.9073486328125e-06, -0.031366944313049316, -1.1920928244535389e-07, -0.0069844722747802734, -1.9073486328125e-06, -1.33514404296875e-05, -3.62396240234375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0014736652374267578, -5.960462772236497e-07, -0.0063582658767700195, -1.1920928244535389e-07, -8.58306884765625e-05, -0.00067138671875, -7.62939453125e-06, -0.018906712532043457, -2.741813204920618e-06, -0.0013179779052734375, -0.0002899169921875, -0.00042724609375, -6.4849853515625e-05, -0.0015697479248046875, -1.9073486328125e-06, -0.000423431396484375, 0.0, -0.000179290771484375, -1.9073486328125e-06, -0.0024824142456054688, -1.5616416931152344e-05, -0.00165557861328125, -0.000171661376953125, -1.1444091796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00019276142120361328, -1.1920922133867862e-06, -0.0009864568710327148, -2.384185791015625e-06, -4.27060604095459, 0.0, -1.33514404296875e-05, -0.035843849182128906, -2.86102294921875e-05, -0.015819447115063667, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Might", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessing", " ", "of", " ", "Might", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "append", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.append(3)\n"}, {"score": -4.835793896393135, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "self", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "BlessingOfMightOfMight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.57763671875e-05, -0.000476837158203125, -5.91278076171875e-05, -0.001789093017578125, -3.0517578125e-05, -2.8252303309272975e-05, -0.0008657812140882015, -0.03291149437427521, -1.242165207862854, -0.029350072145462036, -0.0015443741576746106, -1.52587890625e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.0004652738571166992, -5.2094459533691406e-05, -7.62939453125e-06, -0.002979278564453125, -0.001056671142578125, -5.7220458984375e-06, -0.0003755649086087942, -8.106231689453125e-06, -4.38690185546875e-05, -4.57763671875e-05, -4.57763671875e-05, -0.00022267666645348072, -4.9591064453125e-05, -0.009387969970703125, -4.76837158203125e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00150299072265625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -9.620182390790433e-05, -3.814697265625e-06, -5.543231964111328e-05, 0.0, -0.0007266998291015625, -4.38690185546875e-05, -0.00020599365234375, -7.331129745580256e-05, -0.0005050897598266602, -0.00014555318921338767, -0.00019073486328125, -0.015175223350524902, -0.07061958312988281, -0.00048065185546875, -0.0001773834228515625, -0.0005392247112467885, -0.00011420249938964844, -1.9073486328125e-06, -0.000579833984375, -0.0027008056640625, -1.9073486328125e-06, -3.2421302795410156, -2.3841855067985307e-07, -0.005994081497192383, -4.0531158447265625e-06, -1.71661376953125e-05, -3.24249267578125e-05, -4.38690185546875e-05, -1.9073486328125e-06, -0.0025967354886233807, -1.9073468138230965e-06, -0.010532617568969727, -1.1920928244535389e-07, -6.866455078125e-05, -0.000812530517578125, -7.62939453125e-06, -0.014812588691711426, -2.741813204920618e-06, -0.0013942718505859375, -0.0002727508544921875, -0.000415802001953125, -4.38690185546875e-05, -0.003536224365234375, -1.9073486328125e-06, -0.0004901885986328125, 0.0, -0.0002346038818359375, -1.9073486328125e-06, -0.0022640228271484375, -1.7523765563964844e-05, -0.00194549560546875, -0.00019073486328125, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.00017940998077392578, -1.311301275563892e-06, -0.0008214712142944336, -2.384185791015625e-06, -0.12096071243286133, 0.0, -0.000110626220703125, -0.0022916793823242188, -3.62396240234375e-05, -0.005396595224738121, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Might", "Of", "Might", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessing", " ", "of", " ", "Might", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class BlessingOfMightOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, self.PALADIN, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -5.320704772455926, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "set_health_to"}], "_type": "ClassDef", "name": "BlessingOfMight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.57763671875e-05, -0.000476837158203125, -5.91278076171875e-05, -0.001789093017578125, -3.0517578125e-05, -2.8252303309272975e-05, -0.0008657812140882015, -0.03291149437427521, -0.3832813501358032, -3.814697265625e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.00047278404235839844, -4.4345855712890625e-05, -5.7220458984375e-06, -0.0030803680419921875, -0.001132965087890625, -5.7220458984375e-06, -0.0003282534016761929, -7.987022399902344e-06, -3.24249267578125e-05, -2.6702880859375e-05, -2.47955322265625e-05, -0.00016331326332874596, -1.9073486328125e-05, -0.00272369384765625, -3.62396240234375e-05, -7.62939453125e-06, -1.52587890625e-05, -0.0015411376953125, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.483621498569846e-05, -3.814697265625e-06, -8.404254913330078e-05, 0.0, -0.000659942626953125, -4.57763671875e-05, -0.0002002716064453125, -7.343049946939573e-05, -0.0005460977554321289, -0.00018882608856074512, -0.00030517578125, -6.830690836068243e-05, -0.0002079010009765625, -0.000606536865234375, -0.000194549560546875, -0.0005078210378997028, -8.0108642578125e-05, -1.9073486328125e-06, -0.0006256103515625, -0.0027589797973632812, -1.9073486328125e-06, -0.031366944313049316, -1.1920928244535389e-07, -0.0069844722747802734, -1.9073486328125e-06, -1.33514404296875e-05, -3.62396240234375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0014736652374267578, -5.960462772236497e-07, -0.0063582658767700195, -1.1920928244535389e-07, -8.58306884765625e-05, -0.00067138671875, -7.62939453125e-06, -0.018906712532043457, -2.741813204920618e-06, -0.0013179779052734375, -0.0002899169921875, -0.00042724609375, -6.4849853515625e-05, -0.0015697479248046875, -1.9073486328125e-06, -0.000423431396484375, 0.0, -0.000179290771484375, -1.9073486328125e-06, -0.0024824142456054688, -1.5616416931152344e-05, -0.00165557861328125, -0.000171661376953125, -1.1444091796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00019276142120361328, -1.1920922133867862e-06, -0.0009864568710327148, -2.384185791015625e-06, -4.7764811515808105, 0.0, -0.0001087188720703125, -0.005443572998046875, -8.7738037109375e-05, -0.026345117017626762, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Might", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessing", " ", "of", " ", "Might", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(3)\n"}, {"score": -5.322129181785201, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "BlessingOfMightcards", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.57763671875e-05, -0.000476837158203125, -5.91278076171875e-05, -0.001789093017578125, -3.0517578125e-05, -2.8252303309272975e-05, -0.0008657812140882015, -0.03291149437427521, -5.052628517150879, -5.960410271654837e-05, -3.4332275390625e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.0006518363952636719, -3.8504600524902344e-05, -9.5367431640625e-06, -0.0030975341796875, -0.0012111663818359375, -5.7220458984375e-06, -0.00035756928264163435, -7.987022399902344e-06, -3.62396240234375e-05, -3.62396240234375e-05, -3.4332275390625e-05, -0.00019740575226023793, -2.6702880859375e-05, -0.004956245422363281, -4.00543212890625e-05, -7.62939453125e-06, -1.52587890625e-05, -0.001537322998046875, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.069104321999475e-05, -3.814697265625e-06, -6.878376007080078e-05, 0.0, -0.0006866455078125, -4.38690185546875e-05, -0.000202178955078125, -7.35497014829889e-05, -0.0005174875259399414, -0.00015091751993168145, -0.0002079010009765625, -0.000729203165974468, -0.002292633056640625, -0.0005626678466796875, -0.000164031982421875, -0.0005214113043621182, -0.00010478496551513672, -1.9073486328125e-06, -0.00057220458984375, -0.0027408599853515625, -1.9073486328125e-06, -0.033562421798706055, -1.1920928244535389e-07, -0.006394147872924805, -1.9073486328125e-06, -1.33514404296875e-05, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.001566290738992393, -5.960462772236497e-07, -0.006840825080871582, -1.1920928244535389e-07, -8.20159912109375e-05, -0.0006046295166015625, -9.5367431640625e-06, -0.023058056831359863, -2.622604142743512e-06, -0.0013599395751953125, -0.000274658203125, -0.000385284423828125, -6.4849853515625e-05, -0.0013370513916015625, -1.9073486328125e-06, -0.0004119873046875, 0.0, -0.000171661376953125, -1.9073486328125e-06, -0.0025014877319335938, -1.5616416931152344e-05, -0.0015010833740234375, -0.0001697540283203125, -1.1444091796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.00019276142120361328, -1.1920922133867862e-06, -0.0008891820907592773, -2.384185791015625e-06, -0.1222766637802124, 0.0, -0.0001068115234375, -0.00225830078125, -3.62396240234375e-05, -0.004936547949910164, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Might", "cards", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessing", " ", "of", " ", "Might", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class BlessingOfMightcards(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -5.371563549981985, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "BlessingOfOfMight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.57763671875e-05, -0.000476837158203125, -5.91278076171875e-05, -0.001789093017578125, -3.0517578125e-05, -2.8252303309272975e-05, -0.0008657812140882015, -5.125187873840332, -0.00825446005910635, -0.001785483444109559, -1.52587890625e-05, -5.7220458984375e-05, -1.9073486328125e-06, -0.0004597902297973633, -4.6372413635253906e-05, -9.5367431640625e-06, -0.00296783447265625, -0.001041412353515625, -5.7220458984375e-06, -0.0003467255155555904, -8.106231689453125e-06, -4.00543212890625e-05, -3.62396240234375e-05, -3.4332275390625e-05, -0.00018751142488326877, -2.6702880859375e-05, -0.004607200622558594, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.001529693603515625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.081025250954553e-05, -3.814697265625e-06, -6.687641143798828e-05, 0.0, -0.0006809234619140625, -4.38690185546875e-05, -0.000202178955078125, -7.331129745580256e-05, -0.0005155801773071289, -0.00015091751993168145, -0.00020599365234375, -0.000767350138630718, -0.0023956298828125, -0.00055694580078125, -0.000164031982421875, -0.0005216480349190533, -0.00010478496551513672, -1.9073486328125e-06, -0.0005702972412109375, -0.0027399063110351562, -1.9073486328125e-06, -0.033577680587768555, -1.1920928244535389e-07, -0.006384611129760742, -1.9073486328125e-06, -1.33514404296875e-05, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0015729664592072368, -5.960462772236497e-07, -0.006853222846984863, -1.1920928244535389e-07, -8.392333984375e-05, -0.0006122589111328125, -9.5367431640625e-06, -0.02394402027130127, -2.622604142743512e-06, -0.0013484954833984375, -0.0002727508544921875, -0.000377655029296875, -6.4849853515625e-05, -0.0012607574462890625, -1.9073486328125e-06, -0.000408172607421875, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -0.00251007080078125, -1.5616416931152344e-05, -0.001495361328125, -0.0001678466796875, -1.1444091796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.00019276142120361328, -1.0728830375228426e-06, -0.0008949041366577148, -2.384185791015625e-06, -0.12201833724975586, 0.0, -0.0001068115234375, -0.0022706985473632812, -3.62396240234375e-05, -0.004914015531539917, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Of", "Might", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessing", " ", "of", " ", "Might", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class BlessingOfOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -10.878363789378035, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"id": "player", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "<UNK>"}, {"_type": "Call", "func": {"id": "WeaponSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "<UNK>Selector"}]}]}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_buff"}], "_type": "ClassDef", "name": "BlessingOfMight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.57763671875e-05, -0.000476837158203125, -5.91278076171875e-05, -0.001789093017578125, -3.0517578125e-05, -2.8252303309272975e-05, -0.0008657812140882015, -0.03291149437427521, -0.3832813501358032, -3.814697265625e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.00047278404235839844, -4.4345855712890625e-05, -5.7220458984375e-06, -0.0030803680419921875, -0.001132965087890625, -5.7220458984375e-06, -0.0003282534016761929, -7.987022399902344e-06, -3.24249267578125e-05, -2.6702880859375e-05, -2.47955322265625e-05, -0.00016331326332874596, -1.9073486328125e-05, -0.00272369384765625, -3.62396240234375e-05, -7.62939453125e-06, -1.52587890625e-05, -0.0015411376953125, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.483621498569846e-05, -3.814697265625e-06, -8.404254913330078e-05, 0.0, -0.000659942626953125, -4.57763671875e-05, -0.0002002716064453125, -7.343049946939573e-05, -0.0005460977554321289, -0.00018882608856074512, -0.00030517578125, -6.830690836068243e-05, -0.0002079010009765625, -0.000606536865234375, -0.000194549560546875, -0.0005078210378997028, -8.0108642578125e-05, -1.9073486328125e-06, -0.0006256103515625, -0.0027589797973632812, -1.9073486328125e-06, -0.031366944313049316, -1.1920928244535389e-07, -0.0069844722747802734, -1.9073486328125e-06, -1.33514404296875e-05, -3.62396240234375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0014736652374267578, -5.960462772236497e-07, -0.0063582658767700195, -1.1920928244535389e-07, -8.58306884765625e-05, -0.00067138671875, -7.62939453125e-06, -0.018906712532043457, -2.741813204920618e-06, -0.0013179779052734375, -0.0002899169921875, -0.00042724609375, -6.4849853515625e-05, -0.0015697479248046875, -1.9073486328125e-06, -0.000423431396484375, 0.0, -0.000179290771484375, -1.9073486328125e-06, -0.0024824142456054688, -1.5616416931152344e-05, -0.00165557861328125, -0.000171661376953125, -1.1444091796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00019276142120361328, -1.1920922133867862e-06, -0.0009864568710327148, -2.384185791015625e-06, -4.0108323097229, 0.0, -2.288818359375e-05, -0.08948421478271484, -0.11289310455322266, -0.00061798095703125, -1.9073486328125e-06, -0.5032855272293091, -1.1920928244535389e-07, -0.0717010498046875, -0.1977825164794922, -2.47955322265625e-05, -0.948403000831604, -0.27236196398735046, -0.47776031494140625, -0.05488014221191406, -6.103515625e-05, -1.71661376953125e-05, -0.33607470989227295, -0.08869743347167969, -1.9073486328125e-06, -3.24249267578125e-05, -0.20651721954345703, 0.0, -1.8031892776489258, -1.1914842128753662, 0.0], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Might", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessing", " ", "of", " ", "Might", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "player", "<EOS>", 209, 49, 174, "<UNK>", "<EOS>", 32, 101, 19, 125, "Weapon", "Selector", "<EOS>", 208, 49, 174, "<UNK>", "Selector", "<EOS>"], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(player(<UNK>(), WeaponSelector(<UNK>Selector())))\n"}, {"score": -19.997053146362305, "model_output": {"_type": "Module", "body": []}, "score_history": [-4.57763671875e-05, -0.000476837158203125, -19.996530532836914], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 11}
{"beams": [{"score": -0.4542582868559677, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"hole3": "minion_type", "hole0": "Bloodfen Raptor", "hole2": "FREE", "hole1": 2, "_type": "Template14", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "BloodfenRaptor", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -8.392333984375e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.02917155809700489, -0.01733122393488884, -0.043100591748952866, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.00018346309661865234, -2.6702880859375e-05, -1.9073486328125e-05, -0.00371551513671875, -1.52587890625e-05, -0.0016521215438842773, -1.9073486328125e-06, -4.00543212890625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0003819454868789762, -1.0371208190917969e-05, -5.14984130859375e-05, -0.3450345993041992, -0.0002307891845703125, -0.0001408954558428377, -4.076952609466389e-05, -3.6954863844584906e-06, -3.814697265625e-06, -0.0008192489622160792, 0.0, -0.0015774965286254883, -1.3351438610698096e-05, -7.438641478074715e-05, -9.059892363438848e-06, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.340576171875e-05, -1.1920928244535389e-07, -0.0073299407958984375, -6.79492904964718e-06, -0.0016584396362304688, -0.0008392333984375, -0.00018332690524403006, -4.172325134277344e-06, -1.2755334864777979e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodfen", "Raptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -2.3215289257222977, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "BloodfenRaptor", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -8.392333984375e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.02917155809700489, -0.01733122393488884, -0.043100591748952866, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.00018346309661865234, -2.6702880859375e-05, -1.9073486328125e-05, -0.00371551513671875, -1.52587890625e-05, -0.0016521215438842773, -1.9073486328125e-06, -4.00543212890625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0003819454868789762, -1.0371208190917969e-05, -5.14984130859375e-05, -1.2808599472045898, -0.00011444091796875, -1.9073486328125e-06, -0.02341461181640625, -5.14984130859375e-05, -3.0517578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-06, -0.008989334106445312, 0.0, -0.6135225296020508, -0.0007839202880859375, -0.0002593994140625, -0.00012456618424039334, -1.3470649719238281e-05, -1.0251987987430766e-05, -2.0265579223632812e-06, 0.0, -1.9073486328125e-06, -0.0012059079017490149, 0.0, -5.53131103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0018253326416015625, -1.1920928244535389e-07, -0.0014133453369140625, 0.0, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.24249267578125e-05, -9.536697689327411e-06, -0.047908782958984375, -1.9431105101830326e-05, -2.6702880859375e-05, -1.9073486328125e-05, -0.00010538101196289062, -5.841255187988281e-06, -0.24338531494140625, -0.0001926422119140625, -0.0007478863699361682, -4.410743713378906e-06, -1.8477303456165828e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Bloodfen", "Raptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bloodfen", " ", "Raptor", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -3.0638239592560055, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "BloodfenRaptor", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -8.392333984375e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.02917155809700489, -0.01733122393488884, -0.043100591748952866, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.00018346309661865234, -2.6702880859375e-05, -1.9073486328125e-05, -0.00371551513671875, -1.52587890625e-05, -0.0016521215438842773, -1.9073486328125e-06, -4.00543212890625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0003819454868789762, -1.0371208190917969e-05, -5.14984130859375e-05, -1.2808599472045898, -0.00011444091796875, -1.9073486328125e-06, -0.02341461181640625, -5.14984130859375e-05, -3.0517578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-06, -0.008989334106445312, 0.0, -0.7894582748413086, -0.0009937286376953125, -6.29425048828125e-05, -0.0005115154199302197, -1.728534698486328e-05, -2.777570807666052e-05, -7.748603820800781e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.01754656806588173, 0.0, -0.0001277923583984375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.00138092041015625, 0.0, -0.0092620849609375, 0.0, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -3.60006233677268e-05, -0.006793975830078125, -8.82148651726311e-06, -8.7738037109375e-05, -3.0517578125e-05, -6.496906280517578e-05, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.0012111663818359375, -5.960462772236497e-07, -0.001171112060546875, -4.768370445162873e-07, -0.8229379653930664, -0.0017681121826171875, -0.00036733492743223906, -9.894371032714844e-06, -1.7762085917638615e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodfen", "Raptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Bloodfen", " ", "Raptor", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -3.4557989514601033, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"hole3": "minion_type", "hole0": "Bloodfen Raptor", "hole2": "FREE", "hole1": 2, "_type": "Template14", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "BloodfenRaptorRaptor", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -8.392333984375e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.02917155809700489, -0.01733122393488884, -3.1685173511505127, -0.00012432779476512223, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -3.814697265625e-06, -0.00019288063049316406, -2.47955322265625e-05, -1.71661376953125e-05, -0.00350189208984375, -9.5367431640625e-06, -0.0014804601669311523, -3.814697265625e-06, -6.4849853515625e-05, -0.000209808349609375, -1.9073486328125e-06, -0.00032555992947891355, -1.049041748046875e-05, -6.4849853515625e-05, -0.22179889678955078, -0.000217437744140625, -0.00013672371278516948, -3.874296817230061e-05, -8.10622896096902e-06, -1.71661376953125e-05, -0.0008280753390863538, 0.0, -0.0015412569046020508, -1.3589857189799659e-05, -8.118132245726883e-05, -9.059892363438848e-06, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.340576171875e-05, -1.1920928244535389e-07, -0.007171630859375, -6.675719760096399e-06, -0.0016489028930664062, -0.0007381439208984375, -0.00017438783834222704, -4.172325134277344e-06, -1.2755334864777979e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodfen", "Raptor", "Raptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptorRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -3.983044904505263, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "BloodfenRaptor", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -8.392333984375e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.02917155809700489, -0.01733122393488884, -0.043100591748952866, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.00018346309661865234, -2.6702880859375e-05, -1.9073486328125e-05, -0.00371551513671875, -1.52587890625e-05, -0.0016521215438842773, -1.9073486328125e-06, -4.00543212890625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0003819454868789762, -1.0371208190917969e-05, -5.14984130859375e-05, -1.2808599472045898, -0.00011444091796875, -1.9073486328125e-06, -0.02341461181640625, -5.14984130859375e-05, -3.0517578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-06, -0.008989334106445312, 0.0, -0.6135225296020508, -0.0007839202880859375, -0.0002593994140625, -0.00012456618424039334, -1.3470649719238281e-05, -1.0251987987430766e-05, -2.0265579223632812e-06, 0.0, -1.9073486328125e-06, -0.0012059079017490149, 0.0, -5.53131103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0018253326416015625, -1.1920928244535389e-07, -0.0014133453369140625, 0.0, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.24249267578125e-05, -9.536697689327411e-06, -0.047908782958984375, -1.9431105101830326e-05, -2.6702880859375e-05, -1.9073486328125e-05, -0.00010538101196289062, -5.841255187988281e-06, -1.6369991302490234, -0.0046863555908203125, -7.867797648941632e-06, -1.013275596051244e-05, -0.00010346849012421444, -1.1920928244535389e-07, -0.2629103660583496, -6.675719760096399e-06, -0.0007534027099609375, -1.71661376953125e-05, -0.0003662109375, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodfen", "Raptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bloodfen", " ", "Raptor", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 72, 145, "3", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(3, 2, charge=True)\n"}, {"score": -4.036998979277762, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"hole3": "minion_type", "hole0": "Bloodfen Raptor", "hole2": "FREE", "hole1": 2, "_type": "Template14", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "<UNK>Raptor", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -8.392333984375e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.611912250518799, -0.01733122393488884, -0.043100591748952866, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.00018346309661865234, -2.6702880859375e-05, -1.9073486328125e-05, -0.00371551513671875, -1.52587890625e-05, -0.0016521215438842773, -1.9073486328125e-06, -4.00543212890625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0003819454868789762, -1.0371208190917969e-05, -5.14984130859375e-05, -0.3450345993041992, -0.0002307891845703125, -0.0001408954558428377, -4.076952609466389e-05, -3.6954863844584906e-06, -3.814697265625e-06, -0.0008192489622160792, 0.0, -0.0015774965286254883, -1.3351438610698096e-05, -7.438641478074715e-05, -9.059892363438848e-06, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.340576171875e-05, -1.1920928244535389e-07, -0.0073299407958984375, -6.79492904964718e-06, -0.0016584396362304688, -0.0008392333984375, -0.00018332690524403006, -4.172325134277344e-06, -1.2755334864777979e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Raptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class <UNK>Raptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -4.501070243768247, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"hole3": "minion_type", "hole0": "Bloodfen Raptor", "hole2": "FREE", "hole1": 2, "_type": "Template14", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "Bloodfen<UNK>", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -8.392333984375e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.02917155809700489, -4.064143180847168, -0.043100591748952866, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.00018346309661865234, -2.6702880859375e-05, -1.9073486328125e-05, -0.00371551513671875, -1.52587890625e-05, -0.0016521215438842773, -1.9073486328125e-06, -4.00543212890625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0003819454868789762, -1.0371208190917969e-05, -5.14984130859375e-05, -0.3450345993041992, -0.0002307891845703125, -0.0001408954558428377, -4.076952609466389e-05, -3.6954863844584906e-06, -3.814697265625e-06, -0.0008192489622160792, 0.0, -0.0015774965286254883, -1.3351438610698096e-05, -7.438641478074715e-05, -9.059892363438848e-06, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.340576171875e-05, -1.1920928244535389e-07, -0.0073299407958984375, -6.79492904964718e-06, -0.0016584396362304688, -0.0008392333984375, -0.00018332690524403006, -4.172325134277344e-06, -1.2755334864777979e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodfen", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class Bloodfen<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -4.6397208040485935, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Minion", "_type": "Name"}, "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "_"}]}}], "_type": "ClassDef", "name": "BloodfenRaptor", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -8.392333984375e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.02917155809700489, -0.01733122393488884, -0.043100591748952866, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.00018346309661865234, -2.6702880859375e-05, -1.9073486328125e-05, -0.00371551513671875, -1.52587890625e-05, -0.0016521215438842773, -1.9073486328125e-06, -4.00543212890625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0003819454868789762, -1.0371208190917969e-05, -5.14984130859375e-05, -1.2808599472045898, -0.00011444091796875, -1.9073486328125e-06, -0.02341461181640625, -5.14984130859375e-05, -3.0517578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-06, -0.008989334106445312, 0.0, -0.7894582748413086, -0.0009937286376953125, -6.29425048828125e-05, -0.0005115154199302197, -1.728534698486328e-05, -2.777570807666052e-05, -7.748603820800781e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.01754656806588173, 0.0, -0.0001277923583984375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.00138092041015625, 0.0, -0.0092620849609375, 0.0, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -3.60006233677268e-05, -0.006793975830078125, -8.82148651726311e-06, -8.7738037109375e-05, -3.0517578125e-05, -6.496906280517578e-05, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.0012111663818359375, -5.960462772236497e-07, -0.001171112060546875, -4.768370445162873e-07, -0.7335977554321289, -0.0002155303955078125, -0.0003458261489868164, -7.069110870361328e-05, -1.71661376953125e-05, -0.0013036727905273438, -6.866455078125e-05, -0.03371703624725342, -1.1920858014491387e-05, -9.918212890625e-05, -0.8320744037628174, -7.76023807702586e-05, -0.019435882568359375, -0.024707794189453125, -0.0021209716796875, -0.0001239776611328125, -0.012407302856445312, -1.9073486328125e-05, -0.0002117156982421875, -0.00681793550029397, -0.0025603771209716797, -0.46271610260009766, -0.0019941329956054688, -0.000141143798828125, -0.10946625471115112, -3.933898824470816e-06, -0.03502845764160156, -1.1444091796875e-05, -0.028950553387403488, -2.3841855067985307e-07, -0.03394889831542969, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.05613517761230469, -1.1920928244535389e-07, -0.0025883913040161133, -2.861018856492592e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodfen", "Raptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Bloodfen", " ", "Raptor", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "_", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Minion", "<EOS>", 210, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, _):\n        return Minion(3, 2, MINION_TYPE.BEAST)\n"}, {"score": -4.913874414517231, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Minion", "_type": "Name"}, "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "_"}]}}], "_type": "ClassDef", "name": "BloodfenRaptor", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -8.392333984375e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.02917155809700489, -0.01733122393488884, -0.043100591748952866, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.00018346309661865234, -2.6702880859375e-05, -1.9073486328125e-05, -0.00371551513671875, -1.52587890625e-05, -0.0016521215438842773, -1.9073486328125e-06, -4.00543212890625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0003819454868789762, -1.0371208190917969e-05, -5.14984130859375e-05, -1.2808599472045898, -0.00011444091796875, -1.9073486328125e-06, -0.02341461181640625, -5.14984130859375e-05, -3.0517578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-06, -0.008989334106445312, 0.0, -0.7894582748413086, -0.0009937286376953125, -6.29425048828125e-05, -0.0005115154199302197, -1.728534698486328e-05, -2.777570807666052e-05, -7.748603820800781e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.01754656806588173, 0.0, -0.0001277923583984375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.00138092041015625, 0.0, -0.0092620849609375, 0.0, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -3.60006233677268e-05, -0.006793975830078125, -8.82148651726311e-06, -8.7738037109375e-05, -3.0517578125e-05, -6.496906280517578e-05, -1.1920928244535389e-07, -1.52587890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.0012111663818359375, -5.960462772236497e-07, -0.001171112060546875, -4.768370445162873e-07, -0.7335977554321289, -0.0002155303955078125, -0.0003458261489868164, -7.069110870361328e-05, -1.71661376953125e-05, -0.0013036727905273438, -6.866455078125e-05, -0.03371703624725342, -1.1920858014491387e-05, -9.918212890625e-05, -0.8320744037628174, -7.76023807702586e-05, -0.019435882568359375, -0.024707794189453125, -0.0021209716796875, -0.0001239776611328125, -0.012407302856445312, -1.9073486328125e-05, -0.0002117156982421875, -0.00681793550029397, -0.0025603771209716797, -0.9967861175537109, -0.0001049041748046875, -5.53131103515625e-05, -0.006936807185411453, -1.9073468138230965e-06, -7.62939453125e-05, -1.9073486328125e-06, -0.001185698201879859, 0.0], "choice_history": [55, 124, 221, 63, 103, "Bloodfen", "Raptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Bloodfen", " ", "Raptor", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "_", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Minion", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, _):\n        return Minion(3, 2)\n"}, {"score": -5.2577565634182974, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "BloodfenRaptor", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -8.392333984375e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.02917155809700489, -0.01733122393488884, -0.043100591748952866, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.00018346309661865234, -2.6702880859375e-05, -1.9073486328125e-05, -0.00371551513671875, -1.52587890625e-05, -0.0016521215438842773, -1.9073486328125e-06, -4.00543212890625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0003819454868789762, -1.0371208190917969e-05, -5.14984130859375e-05, -1.2808599472045898, -0.00011444091796875, -1.9073486328125e-06, -3.7689208984375, -3.814697265625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.000598907470703125, -3.0517578125e-05, -1.9073486328125e-06, -0.0032520294189453125, 0.0, -0.02608489990234375, -0.001556396484375, -0.0001697540283203125, -0.0001264730526600033, -1.1682510375976562e-05, -1.2755381249007769e-05, -3.933906555175781e-06, 0.0, -1.9073486328125e-06, -0.0011675296118482947, 0.0, -6.103515625e-05, 0.0, -3.814697265625e-06, 0.0, -0.0022144317626953125, 0.0, -0.001140594482421875, 0.0, 0.0, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-05, -9.536697689327411e-06, -0.023908615112304688, -1.1444084520917386e-05, -2.6702880859375e-05, -2.09808349609375e-05, -0.00010907649993896484, -5.7220458984375e-06, -1.71661376953125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001697540283203125, -0.00010693073272705078, -0.0001049041748046875, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0358048677444458, -2.968311309814453e-05, -0.00038909912109375, -0.0129852294921875, -0.001349964295513928, -5.9604644775390625e-06, -1.728522875055205e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodfen", "Raptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bloodfen", " ", "Raptor", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -5.4265547216227645, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "BloodfenRaptor", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -8.392333984375e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.02917155809700489, -0.01733122393488884, -0.043100591748952866, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.00018346309661865234, -2.6702880859375e-05, -1.9073486328125e-05, -0.00371551513671875, -1.52587890625e-05, -0.0016521215438842773, -1.9073486328125e-06, -4.00543212890625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0003819454868789762, -1.0371208190917969e-05, -5.14984130859375e-05, -1.2808599472045898, -0.00011444091796875, -1.9073486328125e-06, -0.02341461181640625, -5.14984130859375e-05, -3.0517578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-06, -0.008989334106445312, 0.0, -0.6135225296020508, -0.0007839202880859375, -0.0002593994140625, -0.00012456618424039334, -1.3470649719238281e-05, -1.0251987987430766e-05, -2.0265579223632812e-06, 0.0, -1.9073486328125e-06, -0.0012059079017490149, 0.0, -5.53131103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0018253326416015625, -1.1920928244535389e-07, -0.0014133453369140625, 0.0, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.24249267578125e-05, -9.536697689327411e-06, -0.047908782958984375, -1.9431105101830326e-05, -2.6702880859375e-05, -1.9073486328125e-05, -0.00010538101196289062, -5.841255187988281e-06, -1.6369991302490234, -0.0046863555908203125, -7.867797648941632e-06, -1.013275596051244e-05, -0.00010346849012421444, -1.1920928244535389e-07, -1.7070927619934082, -3.576272320060525e-06, -0.000244140625, -3.814697265625e-06, -0.00022125244140625, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodfen", "Raptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bloodfen", " ", "Raptor", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 72, 145, "3", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(3, 2, taunt=True)\n"}, {"score": -5.47563765464087, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"hole3": "minion_type", "hole0": "Bloodfen Raptor", "hole2": "FREE", "hole1": 2, "_type": "Template14", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "BloodfenRaptor", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -8.392333984375e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.02917155809700489, -0.01733122393488884, -0.043100591748952866, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.00018346309661865234, -2.6702880859375e-05, -1.9073486328125e-05, -0.00371551513671875, -1.52587890625e-05, -0.0016521215438842773, -1.9073486328125e-06, -4.00543212890625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0003819454868789762, -1.0371208190917969e-05, -5.14984130859375e-05, -0.3450345993041992, -0.0002307891845703125, -0.0001408954558428377, -4.076952609466389e-05, -3.6954863844584906e-06, -3.814697265625e-06, -0.0008192489622160792, 0.0, -0.0015774965286254883, -1.3351438610698096e-05, -7.438641478074715e-05, -9.059892363438848e-06, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.340576171875e-05, -1.1920928244535389e-07, -5.0310468673706055, -1.1563301086425781e-05, -0.0002880096435546875, -1.71661376953125e-05, -4.064950189786032e-05, -4.172325134277344e-06, -5.6028297876764555e-06, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodfen", "Raptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -5.715139979130974, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "BloodfenRaptor", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -8.392333984375e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.02917155809700489, -0.01733122393488884, -0.043100591748952866, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.00018346309661865234, -2.6702880859375e-05, -1.9073486328125e-05, -0.00371551513671875, -1.52587890625e-05, -0.0016521215438842773, -1.9073486328125e-06, -4.00543212890625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0003819454868789762, -1.0371208190917969e-05, -5.14984130859375e-05, -1.2808599472045898, -0.00011444091796875, -1.9073486328125e-06, -0.02341461181640625, -5.14984130859375e-05, -3.0517578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.0001392364501953125, -3.814697265625e-06, -0.008989334106445312, 0.0, -0.6135225296020508, -0.0007839202880859375, -0.0002593994140625, -0.00012456618424039334, -1.3470649719238281e-05, -1.0251987987430766e-05, -2.0265579223632812e-06, 0.0, -1.9073486328125e-06, -0.0012059079017490149, 0.0, -5.53131103515625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0018253326416015625, -1.1920928244535389e-07, -0.0014133453369140625, 0.0, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.24249267578125e-05, -9.536697689327411e-06, -3.4055986404418945, -3.814697265625e-06, -0.00042724609375, -4.9591064453125e-05, -0.00015842914581298828, -3.814697265625e-06, -0.27886962890625, -0.0001201629638671875, -0.0007900663767941296, -4.410743713378906e-06, -1.919254646054469e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Bloodfen", "Raptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bloodfen", " ", "Raptor", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, True)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -6.082407497025088, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Bloodfen Raptor", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 3, "hole1": 2}], "_type": "ClassDef", "name": "BloodfenRaptor", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -8.392333984375e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.02917155809700489, -0.01733122393488884, -0.043100591748952866, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.00018346309661865234, -2.6702880859375e-05, -1.9073486328125e-05, -5.952106475830078, -5.7220458984375e-05, -0.0002037079248111695, -1.5258781786542386e-05, -2.47955322265625e-05, -2.0265579223632812e-06, -0.00032925617415457964, 0.0, -0.00010311603546142578, 0.0, -2.0861623852397315e-05, -2.2530550268129446e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.037311673164367676, -1.1801716937043238e-05, -0.0001697540283203125, -0.001705169677734375, -0.0002257567539345473, -4.0531158447265625e-06, -1.728522875055205e-05, -5.7220458984375e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodfen", "Raptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"score": -21.153465270996094, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-05, -8.392333984375e-05, -21.153362274169922], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 12}
{"beams": [{"score": -0.13245261978743628, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "SHAMAN", "_type": "Template4", "hole0": "Bloodlust", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Num", "n": 3}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Bloodlust", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.099436753473128e-06, -0.000187516154255718, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00017189979553222656, -6.663799285888672e-05, -1.9073486328125e-06, -0.00017547607421875, -0.009004592895507812, -3.62396240234375e-05, -3.576272320060525e-06, -3.540466059348546e-05, -0.00016080040950328112, -1.931178485392593e-05, -0.04144775867462158, -1.9073486328125e-06, -0.006590843200683594, 0.0, -0.0008126497268676758, -1.9073486328125e-06, -7.62939453125e-06, -0.000102996826171875, 0.0, -1.919269561767578e-05, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.103515625e-05, -0.00025177001953125, -1.7404556274414062e-05, -0.032036781311035156, -1.33514404296875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.00012969970703125, -1.1444091796875e-05, -0.0002880095271393657, -3.576278118089249e-07, -0.00010883808135986328, 0.0, -5.7220458984375e-06, -0.000255584716796875, -1.9073486328125e-06, -4.38690185546875e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -4.589557647705078e-05, -0.00290179206058383, -0.0002384185791015625, -2.288818359375e-05, -7.2479248046875e-05, 0.0, -0.0013066529063507915, -4.494140375754796e-05, -0.000331878662109375, -1.1444091796875e-05, -0.0001678466796875, 0.0, -0.004474639892578125, -2.384185791015625e-06, -0.00021398067474365234, 0.0, -0.0001850128173828125, -0.0039501190185546875, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001430511474609375, 0.0, -0.001044154167175293, -1.025196434056852e-05, -0.01905810832977295, 0.0, -1.33514404296875e-05, -0.0002689361572265625, 0.0, -0.0055676973424851894, -1.33514404296875e-05], "choice_history": [55, 124, 221, 63, 103, "Bloodlust", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "change_temp_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n"}, {"score": -3.4576606844108824, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template4", "hole0": "Bloodlust", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Num", "n": 3}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Bloodlust", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.099436753473128e-06, -0.000187516154255718, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00017189979553222656, -6.663799285888672e-05, -1.9073486328125e-06, -0.00017547607421875, -0.009004592895507812, -3.62396240234375e-05, -3.576272320060525e-06, -3.540466059348546e-05, -0.00016080040950328112, -1.931178485392593e-05, -3.354804039001465, 0.0, -0.0052738189697265625, 0.0, -0.0009961128234863281, -5.7220458984375e-06, -1.9073486328125e-06, -0.000110626220703125, 0.0, -2.1457672119140625e-05, 0.0, -6.103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.67572021484375e-05, -0.0002574920654296875, -1.7404556274414062e-05, -0.04496574401855469, -1.33514404296875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.0001239776611328125, -1.1444091796875e-05, -0.0003107785014435649, -3.576278118089249e-07, -0.00010693073272705078, 0.0, -5.7220458984375e-06, -0.000255584716796875, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -3.814697265625e-05, 0.0, -4.589557647705078e-05, -0.0029612774960696697, -0.00023651123046875, -2.288818359375e-05, -7.2479248046875e-05, 0.0, -0.0012866257457062602, -4.529902071226388e-05, -0.000331878662109375, -1.1444091796875e-05, -0.0001678466796875, 0.0, -0.0044803619384765625, -2.384185791015625e-06, -0.00021588802337646484, 0.0, -0.0001850128173828125, -0.003948211669921875, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000141143798828125, 0.0, -0.0010451078414916992, -1.025196434056852e-05, -0.01899421215057373, 0.0, -1.33514404296875e-05, -0.0002689361572265625, 0.0, -0.005572700873017311, -1.33514404296875e-05], "choice_history": [55, 124, 221, 63, 103, "Bloodlust", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Bloodlust", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "change_temp_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.DRUID, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n"}, {"score": -4.59465934132416, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "SHAMAN", "_type": "Template4", "hole0": "Bloodlust", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Num", "n": 3}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}, {"_type": "Template29", "hole0": 2}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Bloodlust", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.099436753473128e-06, -0.000187516154255718, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00017189979553222656, -6.663799285888672e-05, -1.9073486328125e-06, -0.00017547607421875, -0.009004592895507812, -3.62396240234375e-05, -3.576272320060525e-06, -3.540466059348546e-05, -0.00016080040950328112, -1.931178485392593e-05, -0.04144775867462158, -1.9073486328125e-06, -0.006590843200683594, 0.0, -0.0008126497268676758, -1.9073486328125e-06, -7.62939453125e-06, -0.000102996826171875, 0.0, -1.919269561767578e-05, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.103515625e-05, -0.00025177001953125, -1.7404556274414062e-05, -3.499112129211426, -9.918212890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -5.14984130859375e-05, -9.5367431640625e-06, -0.00045966904144734144, -5.960462772236497e-07, -8.26120376586914e-05, -2.3841855067985307e-07, -4.9591064453125e-05, -0.0021734237670898438, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -3.814697265625e-05, 0.0, -6.866455078125e-05, -0.0033382175024598837, -0.5348424911499023, -0.000316619873046875, -4.57763671875e-05, -1.9073486328125e-06, -0.00039589405059814453, -2.4676177417859435e-05, -0.0001316070556640625, -7.62939453125e-06, -0.0002593994140625, 0.0, -0.0013837814331054688, -2.2649765014648438e-06, -0.00017404556274414062, -3.814697265625e-06, -7.43865966796875e-05, -0.0021343231201171875, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0001735687255859375, 0.0, -0.0011137723922729492, -1.0848005331354216e-05, -0.01937580108642578, 0.0, -1.33514404296875e-05, -0.00025177001953125, 0.0, -0.005331396125257015, -1.33514404296875e-05, -0.02036762237548828, -0.0009918212890625, -0.4422471821308136, -7.62939453125e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodlust", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "change_temp_attack", "<EOS>", 208, 39, 130, "3", "<EOS>", 79, 164, "2", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n        player.hero.change_temp_attack(2)\n"}, {"score": -5.513376967571894, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Bloodlust", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Num", "n": 3}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Bloodlust", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.099436753473128e-06, -0.000187516154255718, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00017189979553222656, -6.663799285888672e-05, -1.9073486328125e-06, -0.00017547607421875, -0.009004592895507812, -3.62396240234375e-05, -3.576272320060525e-06, -3.540466059348546e-05, -0.00016080040950328112, -1.931178485392593e-05, -5.3989763259887695, 0.0, -0.00098419189453125, 0.0, -0.00034737586975097656, -1.9073486328125e-06, -3.814697265625e-06, -0.0001010894775390625, 0.0, -1.9311904907226562e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.05718994140625e-05, -0.00023090839385986328, -2.5033950805664062e-05, -0.061470985412597656, -1.52587890625e-05, -4.38690185546875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.0001163482666015625, -1.1444091796875e-05, -0.0003004072932526469, -3.576278118089249e-07, -0.00011074542999267578, 0.0, -5.7220458984375e-06, -0.0002689361572265625, -1.9073486328125e-06, -4.38690185546875e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -4.589557647705078e-05, -0.0029767747037112713, -0.000240325927734375, -2.288818359375e-05, -7.43865966796875e-05, 0.0, -0.001236557844094932, -4.5060609409119934e-05, -0.00033092498779296875, -1.1444091796875e-05, -0.0001659393310546875, 0.0, -0.004433631896972656, -2.384185791015625e-06, -0.00021398067474365234, 0.0, -0.000186920166015625, -0.004039764404296875, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.000141143798828125, 0.0, -0.0010460615158081055, -1.025196434056852e-05, -0.019019007682800293, 0.0, -1.33514404296875e-05, -0.0002689361572265625, 0.0, -0.0055673434399068356, -1.33514404296875e-05], "choice_history": [55, 124, 221, 63, 103, "Bloodlust", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Bloodlust", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "change_temp_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n"}, {"score": -5.620269654329121, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "SHAMAN", "_type": "Template4", "hole0": "Bloodlust", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Template29", "hole0": 2}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 5}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Bloodlust", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.099436753473128e-06, -0.000187516154255718, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00017189979553222656, -6.663799285888672e-05, -1.9073486328125e-06, -0.00017547607421875, -0.009004592895507812, -3.62396240234375e-05, -3.576272320060525e-06, -3.540466059348546e-05, -0.00016080040950328112, -1.931178485392593e-05, -0.04144775867462158, -1.9073486328125e-06, -0.006590843200683594, 0.0, -0.0008126497268676758, -1.9073486328125e-06, -7.62939453125e-06, -0.000102996826171875, 0.0, -1.919269561767578e-05, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.103515625e-05, -0.00025177001953125, -1.7404556274414062e-05, -3.499112129211426, -9.918212890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -5.14984130859375e-05, -9.5367431640625e-06, -0.00045966904144734144, -5.960462772236497e-07, -8.26120376586914e-05, -2.3841855067985307e-07, -4.9591064453125e-05, -0.0021734237670898438, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -3.814697265625e-05, 0.0, -6.866455078125e-05, -0.0033382175024598837, -1.306687355041504, -0.01673603057861328, -0.21214504539966583, 0.0, -0.0008087158203125, -3.24249267578125e-05, -0.0002613067626953125, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.00017547607421875, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.016692161560058594, -6.079673767089844e-06, -0.005728482268750668, -3.576278118089249e-07, -0.13117778301239014, -4.0531158447265625e-06, -0.001148223876953125, -0.00738525390625, -1.9073486328125e-06, -0.35628968477249146, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodlust", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "5", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(5)\n"}, {"score": -5.793470989083225, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Bloodlust", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Num", "n": 3}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Bloodlust", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.099436753473128e-06, -0.000187516154255718, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00017189979553222656, -6.663799285888672e-05, -1.9073486328125e-06, -0.00017547607421875, -5.638218879699707, -0.0040798187255859375, -8.713819261174649e-05, -2.3841830625315197e-06, -7.390948667307384e-06, -6.556510470545618e-06, -0.0014458894729614258, -2.7418097943154862e-06, -0.007412910461425781, 0.0, -3.063678741455078e-05, -1.9073486328125e-06, -1.1444091796875e-05, -8.7738037109375e-05, 0.0, -1.9550323486328125e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001239776611328125, -0.00023663043975830078, -2.682209014892578e-05, -0.09991645812988281, -1.52587890625e-05, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.000118255615234375, -1.1444091796875e-05, -0.0002740620111580938, -3.576278118089249e-07, -0.00010693073272705078, 0.0, -5.7220458984375e-06, -0.000274658203125, -1.9073486328125e-06, -4.57763671875e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -4.780292510986328e-05, -0.0029460187070071697, -0.0002307891845703125, -2.09808349609375e-05, -7.43865966796875e-05, 0.0, -0.0012110471725463867, -4.434537549968809e-05, -0.0003261566162109375, -1.1444091796875e-05, -0.000164031982421875, 0.0, -0.0044097900390625, -2.384185791015625e-06, -0.00021207332611083984, 0.0, -0.0001926422119140625, -0.0040416717529296875, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001392364501953125, 0.0, -0.0010432004928588867, -1.013275596051244e-05, -0.018999934196472168, 0.0, -1.33514404296875e-05, -0.0002689361572265625, 0.0, -0.005560294259339571, -1.33514404296875e-05], "choice_history": [55, 124, 221, 63, 103, "Bloodlust", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Bloodlust", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "change_temp_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.DRUID, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n"}, {"score": -5.978518590390813, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "SHAMAN", "_type": "Template4", "hole0": "Bloodlust", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Num", "n": 5}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Bloodlust", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.099436753473128e-06, -0.000187516154255718, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00017189979553222656, -6.663799285888672e-05, -1.9073486328125e-06, -0.00017547607421875, -0.009004592895507812, -3.62396240234375e-05, -3.576272320060525e-06, -3.540466059348546e-05, -0.00016080040950328112, -1.931178485392593e-05, -0.04144775867462158, -1.9073486328125e-06, -0.006590843200683594, 0.0, -0.0008126497268676758, -1.9073486328125e-06, -7.62939453125e-06, -0.000102996826171875, 0.0, -1.919269561767578e-05, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.103515625e-05, -0.00025177001953125, -1.7404556274414062e-05, -0.032036781311035156, -1.33514404296875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.00012969970703125, -1.1444091796875e-05, -0.0002880095271393657, -3.576278118089249e-07, -0.00010883808135986328, 0.0, -5.7220458984375e-06, -0.000255584716796875, -1.9073486328125e-06, -4.38690185546875e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -4.589557647705078e-05, -0.00290179206058383, -0.0002384185791015625, -2.288818359375e-05, -7.2479248046875e-05, 0.0, -0.0013066529063507915, -4.494140375754796e-05, -0.000331878662109375, -1.1444091796875e-05, -0.0001678466796875, 0.0, -0.004474639892578125, -2.384185791015625e-06, -0.00021398067474365234, 0.0, -0.0001850128173828125, -0.0039501190185546875, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001430511474609375, 0.0, -0.001044154167175293, -1.025196434056852e-05, -0.01905810832977295, 0.0, -1.33514404296875e-05, -0.0002689361572265625, 0.0, -5.851603031158447, -4.398822784423828e-05], "choice_history": [55, 124, 221, 63, 103, "Bloodlust", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "change_temp_attack", "<EOS>", 208, 39, 130, "5", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(5)\n"}, {"score": -6.37466667598499, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "SHAMAN", "_type": "Template4", "hole0": "Bloodlust", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Bloodlust", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.099436753473128e-06, -0.000187516154255718, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00017189979553222656, -6.663799285888672e-05, -1.9073486328125e-06, -0.00017547607421875, -0.009004592895507812, -3.62396240234375e-05, -3.576272320060525e-06, -3.540466059348546e-05, -0.00016080040950328112, -1.931178485392593e-05, -0.04144775867462158, -1.9073486328125e-06, -0.006590843200683594, 0.0, -0.0008126497268676758, -1.9073486328125e-06, -7.62939453125e-06, -0.000102996826171875, 0.0, -1.919269561767578e-05, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.103515625e-05, -0.00025177001953125, -1.7404556274414062e-05, -0.032036781311035156, -1.33514404296875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.00012969970703125, -1.1444091796875e-05, -0.0002880095271393657, -3.576278118089249e-07, -0.00010883808135986328, 0.0, -5.7220458984375e-06, -0.000255584716796875, -1.9073486328125e-06, -4.38690185546875e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -4.589557647705078e-05, -0.00290179206058383, -0.0002384185791015625, -2.288818359375e-05, -7.2479248046875e-05, 0.0, -0.0013066529063507915, -4.494140375754796e-05, -0.000331878662109375, -1.1444091796875e-05, -0.0001678466796875, 0.0, -0.004474639892578125, -2.384185791015625e-06, -0.00021398067474365234, 0.0, -0.0001850128173828125, -0.0039501190185546875, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001430511474609375, 0.0, -0.001044154167175293, -1.025196434056852e-05, -0.01905810832977295, 0.0, -1.33514404296875e-05, -0.0002689361572265625, 0.0, -6.247791290283203, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodlust", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "change_temp_attack", "<EOS>", 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n"}, {"score": -6.47182851844579, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "SHAMAN", "_type": "Template4", "hole0": "Bloodlust", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Template29", "hole0": 2}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 3}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Bloodlust", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.099436753473128e-06, -0.000187516154255718, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00017189979553222656, -6.663799285888672e-05, -1.9073486328125e-06, -0.00017547607421875, -0.009004592895507812, -3.62396240234375e-05, -3.576272320060525e-06, -3.540466059348546e-05, -0.00016080040950328112, -1.931178485392593e-05, -0.04144775867462158, -1.9073486328125e-06, -0.006590843200683594, 0.0, -0.0008126497268676758, -1.9073486328125e-06, -7.62939453125e-06, -0.000102996826171875, 0.0, -1.919269561767578e-05, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.103515625e-05, -0.00025177001953125, -1.7404556274414062e-05, -3.499112129211426, -9.918212890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -5.14984130859375e-05, -9.5367431640625e-06, -0.00045966904144734144, -5.960462772236497e-07, -8.26120376586914e-05, -2.3841855067985307e-07, -4.9591064453125e-05, -0.0021734237670898438, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -3.814697265625e-05, 0.0, -6.866455078125e-05, -0.0033382175024598837, -1.306687355041504, -0.01673603057861328, -0.21214504539966583, 0.0, -0.0008087158203125, -3.24249267578125e-05, -0.0002613067626953125, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.00017547607421875, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.016692161560058594, -6.079673767089844e-06, -0.005728482268750668, -3.576278118089249e-07, -0.13117778301239014, -4.0531158447265625e-06, -0.001148223876953125, -0.00738525390625, -1.9073486328125e-06, -1.2078447341918945, -7.62939453125e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodlust", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(3)\n"}, {"score": -6.76620403659188, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "SHAMAN", "_type": "Template4", "hole0": "Bloodlust", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"id": "BuffUntil", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "minionsFrozen"}, {"_type": "Template38", "hole0": "TurnEnded"}]}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Bloodlust", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.099436753473128e-06, -0.000187516154255718, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00017189979553222656, -6.663799285888672e-05, -1.9073486328125e-06, -0.00017547607421875, -0.009004592895507812, -3.62396240234375e-05, -3.576272320060525e-06, -3.540466059348546e-05, -0.00016080040950328112, -1.931178485392593e-05, -0.04144775867462158, -1.9073486328125e-06, -0.006590843200683594, 0.0, -0.0008126497268676758, -1.9073486328125e-06, -7.62939453125e-06, -0.000102996826171875, 0.0, -1.919269561767578e-05, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.103515625e-05, -0.00025177001953125, -1.7404556274414062e-05, -0.032036781311035156, -1.33514404296875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.00012969970703125, -1.1444091796875e-05, -0.0002880095271393657, -3.576278118089249e-07, -0.00010883808135986328, 0.0, -5.7220458984375e-06, -0.000255584716796875, -1.9073486328125e-06, -4.38690185546875e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -4.589557647705078e-05, -0.00290179206058383, -0.0002384185791015625, -2.288818359375e-05, -7.2479248046875e-05, 0.0, -0.0013066529063507915, -4.494140375754796e-05, -0.000331878662109375, -1.1444091796875e-05, -0.0001678466796875, 0.0, -0.004474639892578125, -2.384185791015625e-06, -0.00021398067474365234, 0.0, -0.0001850128173828125, -0.0039501190185546875, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001430511474609375, 0.0, -0.001044154167175293, -1.025196434056852e-05, -4.329770088195801, -1.9073486328125e-06, -0.0002288818359375, -0.0016574859619140625, -0.0002288818359375, -4.9591064453125e-05, 0.0, -0.0025218722876161337, -0.21201491355895996, -3.778933751164004e-05, -0.0035114288330078125, -0.03365898132324219, -5.53131103515625e-05, -0.016789637506008148, -1.7724276781082153, 0.0, -0.02442455291748047, -1.71661376953125e-05, -0.2602784335613251, -0.0009658336639404297, -3.24249267578125e-05], "choice_history": [55, 124, 221, 63, 103, "Bloodlust", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "Until", "<EOS>", 209, 49, 174, "minions", "Frozen", "<EOS>", 49, 174, "Turn", "Ended", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.add_buff(BuffUntil(minionsFrozen(), TurnEnded()))\n"}, {"score": -6.929730944229725, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "SHAMAN", "_type": "Template4", "hole0": "Bloodlust", "hole1": 5}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 5, "hole1": 5}], "_type": "ClassDef", "name": "Bloodlust", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.099436753473128e-06, -0.000187516154255718, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00017189979553222656, -6.663799285888672e-05, -1.9073486328125e-06, -0.00017547607421875, -0.009004592895507812, -3.62396240234375e-05, -3.576272320060525e-06, -3.540466059348546e-05, -0.00016080040950328112, -1.931178485392593e-05, -0.04144775867462158, -1.9073486328125e-06, -5.412422180175781, -6.4849853515625e-05, -0.0023117423988878727, -2.1457672119140625e-06, -0.15823271870613098, -2.0265579223632812e-06, -1.3040095567703247, -1.1920928244535389e-07, -0.0009784698486328125, -4.57763671875e-05, -0.00020599365234375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Bloodlust", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 72, 145, "5", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(5, 5, taunt=True)\n"}, {"score": -7.475046686722401, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "SHAMAN", "_type": "Template4", "hole0": "Bloodlust", "hole1": 5}, {"hole2": "divine_shield", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 5, "hole1": 5}], "_type": "ClassDef", "name": "Bloodlust", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.099436753473128e-06, -0.000187516154255718, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00017189979553222656, -6.663799285888672e-05, -1.9073486328125e-06, -0.00017547607421875, -0.009004592895507812, -3.62396240234375e-05, -3.576272320060525e-06, -3.540466059348546e-05, -0.00016080040950328112, -1.931178485392593e-05, -0.04144775867462158, -1.9073486328125e-06, -5.412422180175781, -6.4849853515625e-05, -0.0023117423988878727, -2.1457672119140625e-06, -0.15823271870613098, -2.0265579223632812e-06, -1.8473149538040161, -1.1920928244535389e-07, -0.0030765533447265625, -3.24249267578125e-05, -0.0001316070556640625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Bloodlust", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 72, 145, "5", "<EOS>", "5", "<EOS>", "divine_shield", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(5, 5, divine_shield=True)\n"}, {"score": -7.903016744541446, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "SHAMAN", "_type": "Template4", "hole0": "Bloodlust", "hole1": 5}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_temp_attack"}], "_type": "ClassDef", "name": "Bloodlust", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.099436753473128e-06, -0.000187516154255718, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00017189979553222656, -6.663799285888672e-05, -1.9073486328125e-06, -0.00017547607421875, -0.009004592895507812, -3.62396240234375e-05, -3.576272320060525e-06, -3.540466059348546e-05, -0.00016080040950328112, -1.931178485392593e-05, -0.04144775867462158, -1.9073486328125e-06, -7.705159664154053, -0.006213188171386719, -0.0003566741943359375, -7.62939453125e-06, -0.00119781494140625, 0.0, -0.030249595642089844, 0.0, -0.008039474487304688, 0.0, -0.08066320419311523, 0.0, -1.71661376953125e-05, -0.012072563171386719, -3.814697265625e-06, -0.007578683085739613, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodlust", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(3)\n"}, {"score": -8.354155950142506, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "SHAMAN", "_type": "Template4", "hole0": "Bloodlust", "hole1": 5}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 5, "hole1": 5}], "_type": "ClassDef", "name": "Bloodlust", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.099436753473128e-06, -0.000187516154255718, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00017189979553222656, -6.663799285888672e-05, -1.9073486328125e-06, -0.00017547607421875, -0.009004592895507812, -3.62396240234375e-05, -3.576272320060525e-06, -3.540466059348546e-05, -0.00016080040950328112, -1.931178485392593e-05, -0.04144775867462158, -1.9073486328125e-06, -5.412422180175781, -6.4849853515625e-05, -0.0023117423988878727, -2.1457672119140625e-06, -0.15823271870613098, -2.0265579223632812e-06, -2.726984977722168, -1.1920928244535389e-07, -0.00243377685546875, -9.34600830078125e-05, -0.000152587890625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Bloodlust", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 72, 145, "5", "<EOS>", "5", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(5, 5, charge=True)\n"}, {"score": -23.147127151489258, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -23.147104263305664], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 13}
{"beams": [{"score": -0.14573292424181972, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Bluegill Warrior", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "BluegillWarrior", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.429045167053118e-05, -0.00017212370585184544, -0.0017200212460011244, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -2.0265579223632812e-06, -5.614757537841797e-05, -3.933906555175781e-06, -1.52587890625e-05, -0.0010128021240234375, -0.0001468658447265625, -3.695439227158204e-05, -6.079601735109463e-05, -6.377696990966797e-05, -1.1920928244535389e-07, -0.00022077529865782708, -3.576278118089249e-07, -7.593620830448344e-05, 0.0, -2.9325288778636605e-05, -2.4914723326219246e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.3378546504536644e-06, -0.05781972408294678, -0.00018346309661865234, -0.06793498992919922, -1.52587890625e-05, -2.7418097943154862e-06, -4.577531944960356e-05, -0.005664825439453125, -5.364403477869928e-06, -0.009188649244606495, -3.755022044060752e-05, -0.0004520416259765625, -1.1444091796875e-05, -0.00051116943359375, -1.52587890625e-05], "choice_history": [55, 124, 221, 63, 103, "Bluegill", "Warrior", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -2.9756103969611374, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Bluegill Warrior", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "BluegillWarrior", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.429045167053118e-05, -0.00017212370585184544, -0.0017200212460011244, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -2.0265579223632812e-06, -5.614757537841797e-05, -3.933906555175781e-06, -1.52587890625e-05, -0.0010128021240234375, -0.0001468658447265625, -3.695439227158204e-05, -6.079601735109463e-05, -6.377696990966797e-05, -1.1920928244535389e-07, -0.00022077529865782708, -3.576278118089249e-07, -7.593620830448344e-05, 0.0, -2.9325288778636605e-05, -2.4914723326219246e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.3378546504536644e-06, -0.05781972408294678, -0.00018346309661865234, -2.910738945007324, -0.00019073486328125, -1.311301275563892e-06, -0.0002348147245356813, -0.0025882720947265625, -8.4638240878121e-06], "choice_history": [55, 124, 221, 63, 103, "Bluegill", "Warrior", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -3.7301815029140286, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Bluegill Warrior", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "BluegillWarrior", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.429045167053118e-05, -0.00017212370585184544, -0.0017200212460011244, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -2.0265579223632812e-06, -5.614757537841797e-05, -3.933906555175781e-06, -1.52587890625e-05, -0.0010128021240234375, -0.0001468658447265625, -3.695439227158204e-05, -6.079601735109463e-05, -6.377696990966797e-05, -1.1920928244535389e-07, -0.00022077529865782708, -3.576278118089249e-07, -7.593620830448344e-05, 0.0, -2.9325288778636605e-05, -2.4914723326219246e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.3378546504536644e-06, -3.688342332839966, -3.862365338136442e-05, -0.022762298583984375, -5.7220458984375e-06, -9.536738616588991e-07, -2.7179348762729205e-05, -0.004240155220031738, -3.933898824470816e-06, -0.010006069205701351, -3.0278757549240254e-05, -0.000518798828125, -1.71661376953125e-05, -0.000331878662109375, -1.1444091796875e-05], "choice_history": [55, 124, 221, 63, 103, "Bluegill", "Warrior", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -3.7466280923603605, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Bluegill Warrior", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "BluegillWarrior", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.429045167053118e-05, -0.00017212370585184544, -0.0017200212460011244, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -2.0265579223632812e-06, -5.614757537841797e-05, -3.933906555175781e-06, -1.52587890625e-05, -0.0010128021240234375, -0.0001468658447265625, -3.695439227158204e-05, -6.079601735109463e-05, -6.377696990966797e-05, -1.1920928244535389e-07, -0.00022077529865782708, -3.576278118089249e-07, -7.593620830448344e-05, 0.0, -2.9325288778636605e-05, -2.4914723326219246e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.3378546504536644e-06, -3.70678448677063, -6.675718759652227e-05, -0.016904830932617188, -9.5367431640625e-06, -9.536738616588991e-07, -3.111314072157256e-05, -0.0064868927001953125, -5.8412379075889476e-06, -0.011690018698573112, -3.0517112463712692e-05, -0.000308990478515625, -1.52587890625e-05, -0.000438690185546875, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Bluegill", "Warrior", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -5.327811405121842, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Bluegill Warrior", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "BluegillWarrior", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.429045167053118e-05, -0.00017212370585184544, -0.0017200212460011244, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -2.0265579223632812e-06, -5.614757537841797e-05, -3.933906555175781e-06, -1.52587890625e-05, -0.0010128021240234375, -0.0001468658447265625, -3.695439227158204e-05, -6.079601735109463e-05, -6.377696990966797e-05, -1.1920928244535389e-07, -0.00022077529865782708, -3.576278118089249e-07, -7.593620830448344e-05, 0.0, -2.9325288778636605e-05, -2.4914723326219246e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.3378546504536644e-06, -0.05781972408294678, -0.00018346309661865234, -0.06793498992919922, -1.52587890625e-05, -2.7418097943154862e-06, -4.577531944960356e-05, -5.176151275634766, -1.0728830375228426e-06, -0.020321011543273926, -8.189342770492658e-05, -0.0006275177001953125, -1.71661376953125e-05, -0.000751495361328125, -1.33514404296875e-05], "choice_history": [55, 124, 221, 63, 103, "Bluegill", "Warrior", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 2, charge=True)\n"}, {"score": -5.365335265594176, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Bluegill Warrior", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template31", "hole0": 2, "hole1": 1}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}}], "_type": "ClassDef", "name": "BluegillWarrior", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.429045167053118e-05, -0.00017212370585184544, -0.0017200212460011244, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -2.0265579223632812e-06, -5.614757537841797e-05, -3.933906555175781e-06, -1.52587890625e-05, -0.0010128021240234375, -0.0001468658447265625, -3.695439227158204e-05, -6.079601735109463e-05, -6.377696990966797e-05, -1.1920928244535389e-07, -0.00022077529865782708, -3.576278118089249e-07, -7.593620830448344e-05, 0.0, -2.9325288778636605e-05, -2.4914723326219246e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.3378546504536644e-06, -0.05781972408294678, -0.00018346309661865234, -4.521991729736328, -3.814697265625e-06, -0.00032484522671438754, -0.00017665419727563858, -2.09808349609375e-05, -0.0008153915405273438, -1.52587890625e-05, -0.00011301037739031017, -0.0008297099848277867, -0.00103759765625, -0.08684265613555908, -7.629365427419543e-06, -0.0001506805419921875, -0.02529144287109375, -0.007086753845214844, -0.00010394509445177391, -0.0023884144611656666, -0.00012743461411446333, -9.536738616588991e-07, -0.6053780913352966, -1.1444026313256472e-05, -0.049546241760253906, -8.392333984375e-05, -0.0011310577392578125, -7.748603820800781e-06], "choice_history": [55, 124, 221, 63, 103, "Bluegill", "Warrior", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 81, 167, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, p):\n        return Minion(2, 1, charge=True)\n"}, {"score": -5.998320438678483, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Bluegill Warrior", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"hole2": "windfury", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template31", "hole0": 2, "hole1": 1}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}}], "_type": "ClassDef", "name": "BluegillWarrior", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.429045167053118e-05, -0.00017212370585184544, -0.0017200212460011244, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -2.0265579223632812e-06, -5.614757537841797e-05, -3.933906555175781e-06, -1.52587890625e-05, -0.0010128021240234375, -0.0001468658447265625, -3.695439227158204e-05, -6.079601735109463e-05, -6.377696990966797e-05, -1.1920928244535389e-07, -0.00022077529865782708, -3.576278118089249e-07, -7.593620830448344e-05, 0.0, -2.9325288778636605e-05, -2.4914723326219246e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.3378546504536644e-06, -0.05781972408294678, -0.00018346309661865234, -4.521991729736328, -3.814697265625e-06, -0.00032484522671438754, -0.00017665419727563858, -2.09808349609375e-05, -0.0008153915405273438, -1.52587890625e-05, -0.00011301037739031017, -0.0008297099848277867, -0.00103759765625, -0.08684265613555908, -7.629365427419543e-06, -0.0001506805419921875, -0.02529144287109375, -0.007086753845214844, -0.00010394509445177391, -0.0023884144611656666, -0.00012743461411446333, -9.536738616588991e-07, -1.2840404510498047, -5.721882189391181e-05, -0.004681587219238281, -4.57763671875e-05, -0.00031280517578125, -5.841255187988281e-06], "choice_history": [55, 124, 221, 63, 103, "Bluegill", "Warrior", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 81, 167, "2", "<EOS>", "1", "<EOS>", "windfury", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, p):\n        return Minion(2, 1, windfury=True)\n"}, {"score": -6.1471467498938, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Bluegill Warrior", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "BluegillWarrior", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.429045167053118e-05, -0.00017212370585184544, -0.0017200212460011244, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -2.0265579223632812e-06, -5.614757537841797e-05, -3.933906555175781e-06, -1.52587890625e-05, -0.0010128021240234375, -0.0001468658447265625, -3.695439227158204e-05, -6.079601735109463e-05, -6.377696990966797e-05, -1.1920928244535389e-07, -0.00022077529865782708, -3.576278118089249e-07, -7.593620830448344e-05, 0.0, -2.9325288778636605e-05, -2.4914723326219246e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.3378546504536644e-06, -0.05781972408294678, -0.00018346309661865234, -0.06793498992919922, -1.52587890625e-05, -2.7418097943154862e-06, -4.577531944960356e-05, -0.005664825439453125, -5.364403477869928e-06, -6.010538101196289, -2.3722626792732626e-05, -0.000499725341796875, -7.62939453125e-06, -0.0005340576171875, -2.6702880859375e-05], "choice_history": [55, 124, 221, 63, 103, "Bluegill", "Warrior", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n"}, {"score": -6.375585722627697, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Bluegill Warrior", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "ALL", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "BluegillWarrior", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.429045167053118e-05, -0.00017212370585184544, -0.0017200212460011244, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -2.0265579223632812e-06, -5.614757537841797e-05, -3.933906555175781e-06, -1.52587890625e-05, -0.0010128021240234375, -0.0001468658447265625, -3.695439227158204e-05, -6.079601735109463e-05, -6.377696990966797e-05, -1.1920928244535389e-07, -0.00022077529865782708, -3.576278118089249e-07, -7.593620830448344e-05, 0.0, -2.9325288778636605e-05, -2.4914723326219246e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.3378546504536644e-06, -6.340366840362549, -5.447864532470703e-05, -0.0163726806640625, -5.7220458984375e-06, -1.4305104514278355e-06, -2.002696055569686e-05, -0.0008450746536254883, -4.0531076592742465e-06, -0.013203381560742855, -3.576214658096433e-05, -0.00048828125, -1.33514404296875e-05, -0.0003185272216796875, -1.1444091796875e-05], "choice_history": [55, 124, 221, 63, 103, "Bluegill", "Warrior", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.ALL)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -6.521914384837089, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Bluegill Warrior", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "BluegillWarriorWarrior", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.429045167053118e-05, -0.00017212370585184544, -6.366322040557861, -0.013710427097976208, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -5.0187110900878906e-05, -3.933906555175781e-06, -1.1444091796875e-05, -0.0014247894287109375, -0.000125885009765625, -3.96960494981613e-05, -6.532562110805884e-05, -0.0033713579177856445, -3.063678741455078e-05, -0.0001891849096864462, -3.576278118089249e-07, -7.462489884346724e-05, 0.0, -2.7298694476485252e-05, -2.3603428417118266e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.4570634852570947e-06, -0.05764806270599365, -0.00019109249114990234, -0.062027931213378906, -1.33514404296875e-05, -2.50339189733495e-06, -4.494089080253616e-05, -0.0058116912841796875, -5.722029527532868e-06, -0.009306189604103565, -4.0649541915627196e-05, -0.0004558563232421875, -1.1444091796875e-05, -0.0005054473876953125, -1.52587890625e-05], "choice_history": [55, 124, 221, 63, 103, "Bluegill", "Warrior", "Warrior", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BluegillWarriorWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -6.980329677939089, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Bluegill Warrior", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MINION_TYPE", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "BluegillWarrior", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.429045167053118e-05, -0.00017212370585184544, -0.0017200212460011244, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -2.0265579223632812e-06, -5.614757537841797e-05, -3.933906555175781e-06, -1.52587890625e-05, -0.0010128021240234375, -0.0001468658447265625, -3.695439227158204e-05, -6.079601735109463e-05, -6.377696990966797e-05, -1.1920928244535389e-07, -0.00022077529865782708, -3.576278118089249e-07, -7.593620830448344e-05, 0.0, -2.9325288778636605e-05, -2.4914723326219246e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.3378546504536644e-06, -6.7887187004089355, -1.1920858014491387e-05, -0.16918277740478516, -1.33514404296875e-05, -1.9073468138230965e-06, -4.053033626405522e-05, -0.006519317626953125, -9.179073458653875e-06, -0.011042116209864616, -5.066275844001211e-05, -0.000400543212890625, -1.1444091796875e-05, -0.00046539306640625, -1.71661376953125e-05], "choice_history": [55, 124, 221, 63, 103, "Bluegill", "Warrior", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MINION_TYPE", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MINION_TYPE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -7.027841610090768, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Bluegill Warrior", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "DRAGON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "BluegillWarrior", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.429045167053118e-05, -0.00017212370585184544, -0.0017200212460011244, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -2.0265579223632812e-06, -5.614757537841797e-05, -3.933906555175781e-06, -1.52587890625e-05, -0.0010128021240234375, -0.0001468658447265625, -3.695439227158204e-05, -6.079601735109463e-05, -6.377696990966797e-05, -1.1920928244535389e-07, -0.00022077529865782708, -3.576278118089249e-07, -7.593620830448344e-05, 0.0, -2.9325288778636605e-05, -2.4914723326219246e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.3378546504536644e-06, -6.677257061004639, -0.002198457717895508, -0.34108448028564453, -1.33514404296875e-05, -4.768370445162873e-07, -0.00011884459672728553, -0.0033206939697265625, -3.576272320060525e-06], "choice_history": [55, 124, 221, 63, 103, "Bluegill", "Warrior", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -7.169630097906293, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"hole3": "minion_type", "hole0": "Bluegill Warrior", "hole2": "FREE", "hole1": 2, "_type": "Template14", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "BluegillWarrior", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.429045167053118e-05, -0.00017212370585184544, -0.0017200212460011244, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -2.0265579223632812e-06, -5.614757537841797e-05, -3.933906555175781e-06, -1.52587890625e-05, -6.995669364929199, -0.0001163482666015625, -0.00012886524200439453, -1.6689286894688848e-06, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -5.614757174043916e-05, -2.622604142743512e-06, -0.000217437744140625, -0.0596771240234375, -0.0001010894775390625, -2.7417760065873154e-05, -0.00018906530749518424, -4.768371127283899e-06, 0.0, -0.00017857541388366371, -1.1920922133867862e-06, -0.0014879703521728516, -3.218649908376392e-06, -0.00020754328579641879, -5.6028297876764555e-06, -5.7220458984375e-06, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -4.6491513785440475e-06, -0.06241333484649658, -0.0001379251480102539, -0.033481597900390625, -1.1444091796875e-05, -2.264974000354414e-06, -2.455681169521995e-05, -0.0018100738525390625, -4.0531076592742465e-06, -0.010205505415797234, -2.729855441430118e-05, -0.000675201416015625, -1.52587890625e-05, -0.00049591064453125, -1.1444091796875e-05], "choice_history": [55, 124, 221, 63, 103, "Bluegill", "Warrior", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"score": -7.277891084247749, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Bluegill Warrior", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "windfury", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "BluegillWarrior", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.429045167053118e-05, -0.00017212370585184544, -0.0017200212460011244, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -2.0265579223632812e-06, -5.614757537841797e-05, -3.933906555175781e-06, -1.52587890625e-05, -0.0010128021240234375, -0.0001468658447265625, -3.695439227158204e-05, -6.079601735109463e-05, -6.377696990966797e-05, -1.1920928244535389e-07, -0.00022077529865782708, -3.576278118089249e-07, -7.593620830448344e-05, 0.0, -2.9325288778636605e-05, -2.4914723326219246e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.3378546504536644e-06, -0.05781972408294678, -0.00018346309661865234, -0.06793498992919922, -1.52587890625e-05, -2.7418097943154862e-06, -4.577531944960356e-05, -0.005664825439453125, -5.364403477869928e-06, -7.141687393188477, -9.178744949167594e-05, -8.20159912109375e-05, -2.09808349609375e-05, -0.0004787445068359375, -1.33514404296875e-05], "choice_history": [55, 124, 221, 63, 103, "Bluegill", "Warrior", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "windfury", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, windfury=True)\n"}, {"score": -22.27875328063965, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -1.52587890625e-05, -22.278738021850586], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 14}
{"beams": [{"score": -0.788143169410624, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "Boar", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -6.103515625e-05, -3.814697265625e-05, -0.0001087188720703125, -2.50339189733495e-06, -6.020063301548362e-05, -5.7220458984375e-06, -0.0001678466796875, 0.0, -4.220007031108253e-05, -5.6385990319540724e-05, -3.814697265625e-06, -1.52587890625e-05, -0.08246135711669922, -0.00018310546875, -1.7046926586772315e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.5629758965806104e-05, -8.344650268554688e-06, -6.29425048828125e-05, -0.00043487548828125, -1.9073486328125e-05, -1.1444091796875e-05, -0.00876617431640625, -1.9073486328125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.7418136596679688e-05, -7.62939453125e-06, -0.0005475282669067383, -2.0265579223632812e-06, -0.0014057159423828125, -0.000232696533203125, -3.814697265625e-06, -2.622604142743512e-06, -2.384185791015625e-06, -1.9073486328125e-06, 0.0, -0.025239359587430954, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.09808349609375e-05, -5.245195097813848e-06, -0.0008183717727661133, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -0.000110626220703125, -6.01988795096986e-05, -0.6581497192382812, -2.491474151611328e-05, -4.38690185546875e-05, -9.5367431640625e-06, -1.9669532775878906e-05, -2.2649765014648438e-06, -5.53131103515625e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -6.29425048828125e-05, 0.0, -0.000415802001953125, 0.0, -0.0067234039306640625, -7.748603820800781e-06, -0.0004482269287109375, -0.00081634521484375, -1.7761856724973768e-05, -2.3841855067985307e-07, -1.5023122614366002e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Boar", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -0.8703202118169742, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "Boar", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -6.103515625e-05, -3.814697265625e-05, -0.0001087188720703125, -2.50339189733495e-06, -6.020063301548362e-05, -5.7220458984375e-06, -0.0001678466796875, 0.0, -4.220007031108253e-05, -5.6385990319540724e-05, -3.814697265625e-06, -1.52587890625e-05, -0.08246135711669922, -0.00018310546875, -1.7046926586772315e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.5629758965806104e-05, -8.344650268554688e-06, -6.29425048828125e-05, -0.00043487548828125, -1.9073486328125e-05, -1.1444091796875e-05, -0.00876617431640625, -1.9073486328125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.7418136596679688e-05, -7.62939453125e-06, -0.0005475282669067383, -2.0265579223632812e-06, -0.0014057159423828125, -0.000232696533203125, -3.814697265625e-06, -2.622604142743512e-06, -2.384185791015625e-06, -1.9073486328125e-06, 0.0, -0.025239359587430954, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.09808349609375e-05, -5.245195097813848e-06, -0.0008183717727661133, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -0.000110626220703125, -6.01988795096986e-05, -0.7371501922607422, -4.684925079345703e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.7881393432617188e-05, -3.933906555175781e-06, -7.62939453125e-05, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -0.0005340576171875, 0.0, -0.009394645690917969, -7.748603820800781e-06, -0.000453948974609375, -0.0011692047119140625, -2.0980382032576017e-05, -1.1920928244535389e-07, -1.6691623386577703e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Boar", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -2.675734798454151, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Boar", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "Boar", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -6.103515625e-05, -3.814697265625e-05, -0.0001087188720703125, -2.50339189733495e-06, -6.020063301548362e-05, -5.7220458984375e-06, -0.0001678466796875, 0.0, -4.220007031108253e-05, -5.6385990319540724e-05, -3.814697265625e-06, -1.52587890625e-05, -2.5669078826904297, -0.012246131896972656, -0.00039891392225399613, -1.3470649719238281e-05, -2.0742327251355164e-05, -1.1920928244535389e-07, -7.009506225585938e-05, 0.0, -7.021418423391879e-05, -4.291534423828125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.08516979217529297, -2.503394853192731e-06, -0.009985923767089844, -0.00014495849609375, -3.457067123235902e-06, -4.529942543740617e-06, -1.9080589481745847e-06, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Boar", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -5.102112413449717, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "Boar", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -6.103515625e-05, -3.814697265625e-05, -0.0001087188720703125, -2.50339189733495e-06, -6.020063301548362e-05, -5.7220458984375e-06, -0.0001678466796875, 0.0, -4.220007031108253e-05, -5.6385990319540724e-05, -3.814697265625e-06, -1.52587890625e-05, -0.08246135711669922, -0.00018310546875, -1.7046926586772315e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.5629758965806104e-05, -8.344650268554688e-06, -6.29425048828125e-05, -0.00043487548828125, -1.9073486328125e-05, -1.1444091796875e-05, -0.00876617431640625, -1.9073486328125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.7418136596679688e-05, -7.62939453125e-06, -0.0005475282669067383, -2.0265579223632812e-06, -0.0014057159423828125, -0.000232696533203125, -3.814697265625e-06, -2.622604142743512e-06, -2.384185791015625e-06, -1.9073486328125e-06, 0.0, -4.3805928230285645, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, -1.847726889536716e-05, -0.0021592378616333008, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0001087188720703125, -4.577531944960356e-05, -0.6155414581298828, -1.537799835205078e-05, -4.38690185546875e-05, -1.1444091796875e-05, -1.9788742065429688e-05, -2.2649765014648438e-06, -5.53131103515625e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -6.4849853515625e-05, 0.0, -0.0004100799560546875, 0.0, -0.0066509246826171875, -7.748603820800781e-06, -0.00043487548828125, -0.0007953643798828125, -1.8119475498679094e-05, -1.1920928244535389e-07, -1.5380874174297787e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Boar", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -5.165897888318533, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Boar", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "Boar", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -6.103515625e-05, -3.814697265625e-05, -0.0001087188720703125, -2.50339189733495e-06, -6.020063301548362e-05, -5.7220458984375e-06, -0.0001678466796875, 0.0, -4.220007031108253e-05, -5.6385990319540724e-05, -3.814697265625e-06, -1.52587890625e-05, -2.5669078826904297, -0.012246131896972656, -0.00039891392225399613, -1.3470649719238281e-05, -2.0742327251355164e-05, -1.1920928244535389e-07, -7.009506225585938e-05, 0.0, -7.021418423391879e-05, -4.291534423828125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -2.583735466003418, -9.5367431640625e-06, -0.0016994476318359375, -2.09808349609375e-05, -1.6689293715899112e-06, -8.106198947643861e-06, -9.564246283844113e-07, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Boar", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -5.203819933529431, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template34", "hole0": 1, "hole1": 1}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}}], "_type": "ClassDef", "name": "Boar", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -6.103515625e-05, -3.814697265625e-05, -0.0001087188720703125, -2.50339189733495e-06, -6.020063301548362e-05, -5.7220458984375e-06, -0.0001678466796875, 0.0, -4.220007031108253e-05, -5.6385990319540724e-05, -3.814697265625e-06, -1.52587890625e-05, -0.08246135711669922, -0.00018310546875, -1.7046926586772315e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.5629758965806104e-05, -8.344650268554688e-06, -6.29425048828125e-05, -0.00043487548828125, -1.9073486328125e-05, -1.1444091796875e-05, -4.814759254455566, -0.0007867813110351562, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -3.4809112548828125e-05, -9.5367431640625e-06, -0.0023021697998046875, -2.0265579223632812e-06, -0.00711822509765625, -6.866455078125e-05, -5.7220458984375e-06, -8.821448318485636e-06, -7.987022399902344e-06, 0.0, -7.62939453125e-06, -0.2487667351961136, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -3.4332275390625e-05, 0.0, -1.52587890625e-05, -3.576278118089249e-07, -0.0002651214599609375, -3.814697265625e-06, -1.9073486328125e-06, -0.0007572174072265625, -2.6702880859375e-05, 0.0, -0.000621795654296875, -9.929640509653836e-05, -0.00439453125, -6.258487701416016e-05, -0.0005054473876953125, -2.09808349609375e-05, -8.487701416015625e-05, -7.152555099310121e-07, -0.0003681182861328125, 0.0, -0.000225067138671875, 0.0, -0.0009517669677734375, -3.814689989667386e-06, -0.005298733711242676, -1.311301275563892e-06, -0.00318145751953125, -4.38690185546875e-05, -0.0012428760528564453, -1.549716034787707e-05, -5.7220458984375e-06, -0.0003299713134765625, -7.62939453125e-06, -0.00011110305786132812, -3.766942609217949e-05, -0.0001220703125, -0.007848024368286133, -2.3841855067985307e-07, -0.009862899780273438, -0.009152412414550781, -6.103515625e-05, -4.625208384823054e-05, -3.60006233677268e-05, -0.00013553680037148297, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Boar", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 82, 170, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n"}, {"score": -5.272216558854993, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "Boar", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -6.103515625e-05, -3.814697265625e-05, -0.0001087188720703125, -2.50339189733495e-06, -6.020063301548362e-05, -5.7220458984375e-06, -0.0001678466796875, 0.0, -4.220007031108253e-05, -5.6385990319540724e-05, -3.814697265625e-06, -1.52587890625e-05, -0.08246135711669922, -0.00018310546875, -1.7046926586772315e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.5629758965806104e-05, -8.344650268554688e-06, -6.29425048828125e-05, -0.00043487548828125, -1.9073486328125e-05, -1.1444091796875e-05, -0.00876617431640625, -1.9073486328125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.7418136596679688e-05, -7.62939453125e-06, -0.0005475282669067383, -2.0265579223632812e-06, -0.0014057159423828125, -0.000232696533203125, -3.814697265625e-06, -2.622604142743512e-06, -2.384185791015625e-06, -1.9073486328125e-06, 0.0, -4.3805928230285645, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, -1.847726889536716e-05, -0.0021592378616333008, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0001087188720703125, -4.577531944960356e-05, -0.782353401184082, -3.516674041748047e-05, -2.47955322265625e-05, -5.7220458984375e-06, -1.5974044799804688e-05, -3.933906555175781e-06, -7.43865966796875e-05, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -7.43865966796875e-05, 0.0, -0.0005340576171875, 0.0, -0.009439468383789062, -7.748603820800781e-06, -0.000438690185546875, -0.0011501312255859375, -2.1338000806281343e-05, -1.1920928244535389e-07, -1.7526168448966928e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Boar", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -5.509799957293772, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "Boar", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -6.103515625e-05, -3.814697265625e-05, -0.0001087188720703125, -2.50339189733495e-06, -6.020063301548362e-05, -5.7220458984375e-06, -0.0001678466796875, 0.0, -4.220007031108253e-05, -5.6385990319540724e-05, -3.814697265625e-06, -1.52587890625e-05, -0.08246135711669922, -0.00018310546875, -1.7046926586772315e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.5629758965806104e-05, -8.344650268554688e-06, -6.29425048828125e-05, -0.00043487548828125, -1.9073486328125e-05, -1.1444091796875e-05, -0.00876617431640625, -1.9073486328125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.7418136596679688e-05, -7.62939453125e-06, -0.0005475282669067383, -2.0265579223632812e-06, -0.0014057159423828125, -0.000232696533203125, -3.814697265625e-06, -2.622604142743512e-06, -2.384185791015625e-06, -1.9073486328125e-06, 0.0, -4.757376194000244, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -7.152531907195225e-06, -0.0006295442581176758, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001010894775390625, -6.270212179515511e-05, -0.647770881652832, -2.682209014892578e-05, -4.38690185546875e-05, -9.5367431640625e-06, -1.9669532775878906e-05, -2.2649765014648438e-06, -5.340576171875e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -0.00041961669921875, 0.0, -0.0067005157470703125, -7.748603820800781e-06, -0.000461578369140625, -0.000911712646484375, -1.8000262571149506e-05, -2.3841855067985307e-07, -1.4069368262425996e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Boar", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 0, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -5.613485455023884, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "Boar", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -6.103515625e-05, -3.814697265625e-05, -0.0001087188720703125, -2.50339189733495e-06, -6.020063301548362e-05, -5.7220458984375e-06, -0.0001678466796875, 0.0, -4.220007031108253e-05, -5.6385990319540724e-05, -3.814697265625e-06, -1.52587890625e-05, -0.08246135711669922, -0.00018310546875, -1.7046926586772315e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.5629758965806104e-05, -8.344650268554688e-06, -6.29425048828125e-05, -0.00043487548828125, -1.9073486328125e-05, -1.1444091796875e-05, -0.00876617431640625, -1.9073486328125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.7418136596679688e-05, -7.62939453125e-06, -0.0005475282669067383, -2.0265579223632812e-06, -0.0014057159423828125, -0.000232696533203125, -3.814697265625e-06, -2.622604142743512e-06, -2.384185791015625e-06, -1.9073486328125e-06, 0.0, -4.757376194000244, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -7.152531907195225e-06, -0.0006295442581176758, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001010894775390625, -6.270212179515511e-05, -0.7483024597167969, -4.863739013671875e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.5974044799804688e-05, -2.0265579223632812e-06, -7.82012939453125e-05, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -6.866455078125e-05, 0.0, -0.0005435943603515625, 0.0, -0.009372711181640625, -7.748603820800781e-06, -0.0004634857177734375, -0.0012416839599609375, -2.0980380213586614e-05, -2.3841855067985307e-07, -1.7168416889035143e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Boar", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -5.82164884750658, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "Boar", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -6.103515625e-05, -3.814697265625e-05, -0.0001087188720703125, -2.50339189733495e-06, -6.020063301548362e-05, -5.7220458984375e-06, -0.0001678466796875, 0.0, -4.220007031108253e-05, -5.6385990319540724e-05, -3.814697265625e-06, -1.52587890625e-05, -0.08246135711669922, -0.00018310546875, -1.7046926586772315e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.5629758965806104e-05, -8.344650268554688e-06, -6.29425048828125e-05, -0.00043487548828125, -1.9073486328125e-05, -1.1444091796875e-05, -0.00876617431640625, -1.9073486328125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.7418136596679688e-05, -7.62939453125e-06, -0.0005475282669067383, -2.0265579223632812e-06, -0.0014057159423828125, -0.000232696533203125, -3.814697265625e-06, -2.622604142743512e-06, -2.384185791015625e-06, -1.9073486328125e-06, 0.0, -0.025239359587430954, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.09808349609375e-05, -5.245195097813848e-06, -0.0008183717727661133, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -0.000110626220703125, -6.01988795096986e-05, -0.7371501922607422, -4.684925079345703e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.7881393432617188e-05, -3.933906555175781e-06, -7.62939453125e-05, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -0.0005340576171875, 0.0, -4.961503028869629, -1.9073486328125e-05, -0.0003795623779296875, -0.0004482269287109375, -2.8728609322570264e-05, -1.1920928244535389e-07, -1.3235404367151204e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Boar", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -6.051318299066416, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "Boar", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -6.103515625e-05, -3.814697265625e-05, -0.0001087188720703125, -2.50339189733495e-06, -6.020063301548362e-05, -5.7220458984375e-06, -0.0001678466796875, 0.0, -4.220007031108253e-05, -5.6385990319540724e-05, -3.814697265625e-06, -1.52587890625e-05, -0.08246135711669922, -0.00018310546875, -1.7046926586772315e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.5629758965806104e-05, -8.344650268554688e-06, -6.29425048828125e-05, -0.00043487548828125, -1.9073486328125e-05, -1.1444091796875e-05, -0.00876617431640625, -1.9073486328125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.7418136596679688e-05, -7.62939453125e-06, -0.0005475282669067383, -2.0265579223632812e-06, -0.0014057159423828125, -0.000232696533203125, -3.814697265625e-06, -2.622604142743512e-06, -2.384185791015625e-06, -1.9073486328125e-06, 0.0, -0.025239359587430954, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.09808349609375e-05, -5.245195097813848e-06, -0.0008183717727661133, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -0.000110626220703125, -6.01988795096986e-05, -5.917963027954102, -4.9591064453125e-05, -0.00185394287109375, -9.5367431640625e-06, -2.0265579223632812e-05, -7.867813110351562e-06, -4.76837158203125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -5.7220458984375e-06, -6.103515625e-05, 0.0, -0.0004177093505859375, 0.0, -0.008345603942871094, -7.748603820800781e-06, -0.000400543212890625, -0.000782012939453125, -1.9430734027992003e-05, -2.3841855067985307e-07, -1.6930289348238148e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Boar", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "ALL", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.ALL,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -6.166643989208964, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "Boar", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -6.103515625e-05, -3.814697265625e-05, -0.0001087188720703125, -2.50339189733495e-06, -6.020063301548362e-05, -5.7220458984375e-06, -0.0001678466796875, 0.0, -4.220007031108253e-05, -5.6385990319540724e-05, -3.814697265625e-06, -1.52587890625e-05, -0.08246135711669922, -0.00018310546875, -1.7046926586772315e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.5629758965806104e-05, -8.344650268554688e-06, -6.29425048828125e-05, -0.00043487548828125, -1.9073486328125e-05, -1.1444091796875e-05, -0.00876617431640625, -1.9073486328125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.7418136596679688e-05, -7.62939453125e-06, -0.0005475282669067383, -2.0265579223632812e-06, -0.0014057159423828125, -0.000232696533203125, -3.814697265625e-06, -2.622604142743512e-06, -2.384185791015625e-06, -1.9073486328125e-06, 0.0, -0.025239359587430954, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.09808349609375e-05, -5.245195097813848e-06, -0.0008183717727661133, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -0.000110626220703125, -6.01988795096986e-05, -0.6581497192382812, -2.491474151611328e-05, -4.38690185546875e-05, -9.5367431640625e-06, -1.9669532775878906e-05, -2.2649765014648438e-06, -5.53131103515625e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -6.29425048828125e-05, 0.0, -0.000415802001953125, 0.0, -5.385805130004883, -2.288818359375e-05, -0.0003719329833984375, -0.000293731689453125, -2.348363705095835e-05, -1.1920928244535389e-07, -1.2282166608201806e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Boar", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -7.694578351035702, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Boar", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "Boar", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -6.103515625e-05, -3.814697265625e-05, -0.0001087188720703125, -2.50339189733495e-06, -6.020063301548362e-05, -5.7220458984375e-06, -0.0001678466796875, 0.0, -4.220007031108253e-05, -5.6385990319540724e-05, -3.814697265625e-06, -1.52587890625e-05, -2.5669078826904297, -0.012246131896972656, -0.00039891392225399613, -1.3470649719238281e-05, -2.0742327251355164e-05, -1.1920928244535389e-07, -7.009506225585938e-05, 0.0, -7.021418423391879e-05, -4.291534423828125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -0.08516979217529297, -2.503394853192731e-06, -4.773829460144043, -0.000675201416015625, -3.3138472645077854e-05, -2.9802276912960224e-06, -8.907272422220558e-05, -1.1920928244535389e-07, -0.2536832094192505, -2.288818359375e-05, -0.000179290771484375, -2.288818359375e-05, -0.000438690185546875, -7.62939453125e-06], "choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Boar", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, stealth=True)\n"}, {"score": -7.924526731988827, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Boar", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "Boar", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -6.103515625e-05, -3.814697265625e-05, -0.0001087188720703125, -2.50339189733495e-06, -6.020063301548362e-05, -5.7220458984375e-06, -0.0001678466796875, 0.0, -4.220007031108253e-05, -5.6385990319540724e-05, -3.814697265625e-06, -1.52587890625e-05, -2.5669078826904297, -0.012246131896972656, -0.00039891392225399613, -1.3470649719238281e-05, -2.0742327251355164e-05, -1.1920928244535389e-07, -7.009506225585938e-05, 0.0, -7.021418423391879e-05, -4.291534423828125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, 0.0, -5.341899871826172, -2.0265579223632812e-06, -0.00213623046875, -5.7220458984375e-05, -1.6689291442162357e-06, -5.722029527532868e-06, -2.2661661205347627e-06, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Boar", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -20.327529907226562, "model_output": {"_type": "Module", "body": []}, "score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -20.327434539794922], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 15}
{"beams": [{"score": -0.3710893921229115, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 2}}, {"_type": "Template25", "hole0": "<UNK>"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.9591064453125e-05, -8.0108642578125e-05, -3.71926071238704e-05, -0.00013887141540180892, -3.814697265625e-06, -4.1961669921875e-05, -9.5367431640625e-06, -2.348422094655689e-05, -0.00014209638175088912, -1.9073486328125e-05, -7.62939453125e-06, -0.000682830810546875, -1.52587890625e-05, -2.3364969820249826e-05, 0.0, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0003934426058549434, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001220703125, -0.011846542358398438, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.4185804502631072e-05, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -0.000743865966796875, -1.52587890625e-05, -3.4332275390625e-05, -9.536738616588991e-07, -3.4332275390625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00041524512926116586, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.3947486877441406e-05, -0.000141143798828125, -0.042793866246938705, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9550323486328125e-05, -5.936446541454643e-05, -0.01181793212890625, -1.9073486328125e-06, -0.0022220611572265625, -1.1444091796875e-05, 0.0, -0.0009289979934692383, 0.0, -0.000194549560546875, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.00023663043975830078, -1.9073486328125e-06, -0.01860499382019043, -0.00026285648345947266, -0.023698806762695312, -3.0517578125e-05, -5.173683166503906e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.6293927122605965e-06, 0.0, 0.0, -7.62939453125e-06, -2.0265558760002023e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -0.12376880645751953, -3.814697265625e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -4.57763671875e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.539145316404756e-05, 0.0, -0.00025010108947753906, 0.0, -2.09808349609375e-05, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -2.3841855067985307e-07, -1.1444091796875e-05, 0.0, -1.2159347534179688e-05, -5.674361455021426e-05, -0.0074901580810546875, -0.0002269744873046875, -0.0733795166015625, -0.0001277923583984375, -0.0076584285125136375, -9.536738616588991e-07, -0.030660629272460938, -0.0032873153686523438, -0.007453948259353638, -8.022785186767578e-05], "choice_history": [55, 124, 221, 63, 103, "Charge", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Charge", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "2", "<EOS>", 78, 161, "<UNK>", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"score": -4.273645485394326, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 2}}, {"_type": "Template25", "hole0": "<UNK>"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.9591064453125e-05, -8.0108642578125e-05, -3.71926071238704e-05, -0.00013887141540180892, -3.814697265625e-06, -4.1961669921875e-05, -9.5367431640625e-06, -2.348422094655689e-05, -0.00014209638175088912, -1.9073486328125e-05, -7.62939453125e-06, -0.000682830810546875, -1.52587890625e-05, -2.3364969820249826e-05, 0.0, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0003934426058549434, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001220703125, -0.011846542358398438, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.4185804502631072e-05, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -0.000743865966796875, -1.52587890625e-05, -3.4332275390625e-05, -9.536738616588991e-07, -3.4332275390625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00041524512926116586, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.3947486877441406e-05, -0.000141143798828125, -3.9536890983581543, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -9.357929229736328e-05, -8.583032467868179e-06, -0.0037860870361328125, 0.0, -0.0002422332763671875, -1.52587890625e-05, 0.0, -0.000821232795715332, 0.0, -0.0001850128173828125, -1.71661376953125e-05, -2.09808349609375e-05, 0.0, -9.5367431640625e-06, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.00023853778839111328, -1.9073486328125e-06, -0.018454909324645996, -0.00027430057525634766, -0.027090072631835938, -3.24249267578125e-05, -5.936622619628906e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.6293927122605965e-06, 0.0, 0.0, -7.62939453125e-06, -2.0265558760002023e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -0.12172794342041016, -3.814697265625e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -4.57763671875e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.539145316404756e-05, 0.0, -0.00025200843811035156, 0.0, -2.09808349609375e-05, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -2.3841855067985307e-07, -1.1444091796875e-05, 0.0, -1.2159347534179688e-05, -5.674361455021426e-05, -0.007508277893066406, -0.0002269744873046875, -0.07377910614013672, -0.00012969970703125, -0.007675978820770979, -9.536738616588991e-07, -0.030698776245117188, -0.0032777786254882812, -0.0074686105363070965, -7.832050323486328e-05], "choice_history": [55, 124, 221, 63, 103, "Charge", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Charge", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "2", "<EOS>", 78, 161, "<UNK>", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"score": -4.637148994626301, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 2}}, {"_type": "Template25", "hole0": "<UNK>"}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 2}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.9591064453125e-05, -8.0108642578125e-05, -3.71926071238704e-05, -0.00013887141540180892, -3.814697265625e-06, -4.1961669921875e-05, -9.5367431640625e-06, -2.348422094655689e-05, -0.00014209638175088912, -1.9073486328125e-05, -7.62939453125e-06, -0.000682830810546875, -1.52587890625e-05, -2.3364969820249826e-05, 0.0, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0003934426058549434, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001220703125, -0.011846542358398438, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.4185804502631072e-05, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -0.000743865966796875, -1.52587890625e-05, -3.4332275390625e-05, -9.536738616588991e-07, -3.4332275390625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00041524512926116586, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.3947486877441406e-05, -0.000141143798828125, -0.042793866246938705, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9550323486328125e-05, -5.936446541454643e-05, -0.01181793212890625, -1.9073486328125e-06, -0.0022220611572265625, -1.1444091796875e-05, 0.0, -0.0009289979934692383, 0.0, -0.000194549560546875, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.00023663043975830078, -1.9073486328125e-06, -0.01860499382019043, -0.00026285648345947266, -0.023698806762695312, -3.0517578125e-05, -5.173683166503906e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.6293927122605965e-06, 0.0, 0.0, -7.62939453125e-06, -2.0265558760002023e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -2.172260284423828, -7.62939453125e-06, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.3139949664473534e-05, 0.0, -0.0009900331497192383, 0.0, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.3841855067985307e-07, -9.5367431640625e-06, 0.0, -1.0251998901367188e-05, -3.826617466984317e-05, -0.02531719207763672, -5.14984130859375e-05, -0.2650127410888672, -0.000209808349609375, -0.010306159034371376, -3.576278118089249e-07, -1.9350385665893555, -0.008143424987792969, -0.00849632453173399, -0.0002002716064453125, -0.018415451049804688, 0.0, -0.07395458221435547, -0.0005245208740234375, -0.0015387358143925667, -4.768371127283899e-06], "choice_history": [55, 124, 221, 63, 103, "Charge", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Charge", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "2", "<EOS>", 78, 161, "<UNK>", "<EOS>", 64, 106, 25, 166, "2", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.change_attack(2)\n"}, {"score": -4.904226543298506, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.9591064453125e-05, -8.0108642578125e-05, -3.71926071238704e-05, -0.00013887141540180892, -3.814697265625e-06, -4.1961669921875e-05, -9.5367431640625e-06, -2.348422094655689e-05, -0.00014209638175088912, -1.9073486328125e-05, -7.62939453125e-06, -0.000682830810546875, -1.52587890625e-05, -2.3364969820249826e-05, 0.0, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0003934426058549434, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001220703125, -0.011846542358398438, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.4185804502631072e-05, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -0.000743865966796875, -1.52587890625e-05, -3.4332275390625e-05, -9.536738616588991e-07, -3.4332275390625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00041524512926116586, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.3947486877441406e-05, -0.000141143798828125, -0.042793866246938705, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9550323486328125e-05, -5.936446541454643e-05, -0.01181793212890625, -1.9073486328125e-06, -0.0022220611572265625, -1.1444091796875e-05, 0.0, -0.0009289979934692383, 0.0, -0.000194549560546875, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.00023663043975830078, -1.9073486328125e-06, -0.01860499382019043, -0.00026285648345947266, -3.7964706420898438, -8.96453857421875e-05, 0.0, 0.0, -0.00078582763671875, 0.0, -2.6702880859375e-05, -3.576278118089249e-07, -2.0861623852397315e-05, -2.3841855067985307e-07, -0.8838201761245728, 0.0, -5.7220458984375e-06, -0.03931903839111328, -1.9073486328125e-06, -0.09112052619457245, 0.0], "choice_history": [55, 124, 221, 63, 103, "Charge", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Charge", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"score": -5.072260245925435, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 2}}, {"_type": "Template25", "hole0": "<UNK>"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.9591064453125e-05, -8.0108642578125e-05, -3.71926071238704e-05, -0.00013887141540180892, -3.814697265625e-06, -4.1961669921875e-05, -9.5367431640625e-06, -2.348422094655689e-05, -0.00014209638175088912, -1.9073486328125e-05, -7.62939453125e-06, -0.000682830810546875, -1.52587890625e-05, -2.3364969820249826e-05, 0.0, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0003934426058549434, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001220703125, -0.011846542358398438, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.4185804502631072e-05, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -0.000743865966796875, -1.52587890625e-05, -3.4332275390625e-05, -9.536738616588991e-07, -3.4332275390625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00041524512926116586, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.3947486877441406e-05, -0.000141143798828125, -0.042793866246938705, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9550323486328125e-05, -5.936446541454643e-05, -4.696913719177246, -7.62939453125e-06, -0.0001983642578125, -7.62939453125e-06, 0.0, -0.0007749795913696289, 0.0, -0.0001678466796875, -2.47955322265625e-05, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -9.167194366455078e-05, -3.814697265625e-06, -0.029495954513549805, -0.00017893314361572266, -0.015813827514648438, -2.6702880859375e-05, -3.2782554626464844e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.867811291362159e-06, 0.0, 0.0, -7.62939453125e-06, -2.264974000354414e-06, -3.24249267578125e-05, -1.33514404296875e-05, -7.152555099310121e-07, -0.1411600112915039, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -4.38690185546875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -2.551066063460894e-05, 0.0, -0.00025010108947753906, 0.0, -2.09808349609375e-05, -2.288818359375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.3841855067985307e-07, -1.1444091796875e-05, 0.0, -1.2159347534179688e-05, -5.686282383976504e-05, -0.007449150085449219, -0.0002307891845703125, -0.07163524627685547, -0.0001277923583984375, -0.007576235104352236, -9.536738616588991e-07, -0.030676841735839844, -0.0033159255981445312, -0.0074098315089941025, -8.022785186767578e-05], "choice_history": [55, 124, 221, 63, 103, "Charge", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Charge", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "2", "<EOS>", 78, 161, "<UNK>", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"score": -5.421852560359547, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Charge"}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.9591064453125e-05, -8.0108642578125e-05, -3.71926071238704e-05, -0.00013887141540180892, -3.814697265625e-06, -4.1961669921875e-05, -9.5367431640625e-06, -2.348422094655689e-05, -0.00014209638175088912, -1.9073486328125e-05, -7.62939453125e-06, -0.000682830810546875, -1.52587890625e-05, -2.3364969820249826e-05, 0.0, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0003934426058549434, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001220703125, -0.011846542358398438, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.4185804502631072e-05, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -0.000743865966796875, -1.52587890625e-05, -3.4332275390625e-05, -9.536738616588991e-07, -3.4332275390625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00041524512926116586, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.3947486877441406e-05, -0.000141143798828125, -0.042793866246938705, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9550323486328125e-05, -5.936446541454643e-05, -0.01181793212890625, -1.9073486328125e-06, -0.0022220611572265625, -1.1444091796875e-05, 0.0, -0.0009289979934692383, 0.0, -0.000194549560546875, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.00023663043975830078, -1.9073486328125e-06, -0.01860499382019043, -0.00026285648345947266, -0.023698806762695312, -3.0517578125e-05, -5.173683166503906e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.6293927122605965e-06, 0.0, 0.0, -7.62939453125e-06, -2.0265558760002023e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -0.12376880645751953, -3.814697265625e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -4.57763671875e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.539145316404756e-05, 0.0, -0.00025010108947753906, 0.0, -2.09808349609375e-05, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -2.3841855067985307e-07, -1.1444091796875e-05, 0.0, -1.2159347534179688e-05, -5.674361455021426e-05, -0.0074901580810546875, -0.0002269744873046875, -2.6771230697631836, -0.21030807495117188, -5.7220458984375e-06, -6.67572021484375e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0001468658447265625, -7.271740287251305e-06, -1.5616367818438448e-05, -3.576278118089249e-07, -0.662254810333252, 0.0, -1.33514404296875e-05, -0.0013303756713867188, 0.0, -0.00027000904083251953, -1.1920928244535389e-07, -0.0070972442626953125, -1.9073486328125e-06, -0.15492630004882812, -0.16222763061523438, -1.9073486328125e-06, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.0001049041748046875, 0.0, -0.0012111663818359375, -1.6689286894688848e-06, -4.649161837733118e-06, -9.536738616588991e-07, -0.8680839538574219, -1.9073486328125e-06, -4.1961669921875e-05, -0.3544301986694336, -1.52587890625e-05, -8.0108642578125e-05, 0.0, -0.0007306336774490774, -0.03295588493347168, -0.00272369384765625, -0.0063323974609375, -0.00034332275390625, -0.028656497597694397, -0.0018496513366699219], "choice_history": [55, 124, 221, 63, 103, "Charge", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Charge", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Charge", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.add_buff(Buff(Charge()))\n"}, {"score": -5.448756012834139, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 2}}, {"_type": "Template25", "hole0": "<UNK>"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.9591064453125e-05, -8.0108642578125e-05, -3.71926071238704e-05, -0.00013887141540180892, -3.814697265625e-06, -4.1961669921875e-05, -9.5367431640625e-06, -2.348422094655689e-05, -0.00014209638175088912, -1.9073486328125e-05, -7.62939453125e-06, -0.000682830810546875, -1.52587890625e-05, -2.3364969820249826e-05, 0.0, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0003934426058549434, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001220703125, -0.011846542358398438, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.4185804502631072e-05, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -0.000743865966796875, -1.52587890625e-05, -3.4332275390625e-05, -9.536738616588991e-07, -3.4332275390625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00041524512926116586, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.3947486877441406e-05, -0.000141143798828125, -0.042793866246938705, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9550323486328125e-05, -5.936446541454643e-05, -0.01181793212890625, -1.9073486328125e-06, -0.0022220611572265625, -1.1444091796875e-05, 0.0, -0.0009289979934692383, 0.0, -0.000194549560546875, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.00023663043975830078, -1.9073486328125e-06, -5.022982120513916, -3.230571746826172e-05, -0.1199350357055664, -0.0001392364501953125, -5.0187110900878906e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -7.867811291362159e-06, 0.0, 0.0, -7.62939453125e-06, -2.7418097943154862e-06, -3.4332275390625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -0.10213279724121094, -3.814697265625e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -4.57763671875e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.6106697987415828e-05, 0.0, -0.00025963783264160156, 0.0, -2.09808349609375e-05, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -2.3841855067985307e-07, -1.1444091796875e-05, 0.0, -1.2040138244628906e-05, -5.674361455021426e-05, -0.007305145263671875, -0.0002288818359375, -0.07260417938232422, -0.0001277923583984375, -0.007408473640680313, -9.536738616588991e-07, -0.03063488006591797, -0.0032358169555664062, -0.007535560056567192, -8.022785186767578e-05], "choice_history": [55, 124, 221, 63, 103, "Charge", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Charge", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "2", "<EOS>", 78, 161, "<UNK>", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"score": -5.757499473086142, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 3}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "set_health_to"}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.9591064453125e-05, -8.0108642578125e-05, -3.71926071238704e-05, -0.00013887141540180892, -3.814697265625e-06, -4.1961669921875e-05, -9.5367431640625e-06, -2.348422094655689e-05, -0.00014209638175088912, -1.9073486328125e-05, -7.62939453125e-06, -0.000682830810546875, -1.52587890625e-05, -2.3364969820249826e-05, 0.0, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0003934426058549434, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001220703125, -0.011846542358398438, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.4185804502631072e-05, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -0.000743865966796875, -1.52587890625e-05, -3.4332275390625e-05, -9.536738616588991e-07, -3.4332275390625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00041524512926116586, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.3947486877441406e-05, -0.000141143798828125, -0.042793866246938705, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9550323486328125e-05, -5.936446541454643e-05, -0.01181793212890625, -1.9073486328125e-06, -0.0022220611572265625, -1.1444091796875e-05, 0.0, -0.0009289979934692383, 0.0, -0.000194549560546875, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.00023663043975830078, -1.9073486328125e-06, -0.01860499382019043, -0.00026285648345947266, -3.7964706420898438, -8.96453857421875e-05, 0.0, 0.0, -0.00078582763671875, 0.0, -2.6702880859375e-05, -3.576278118089249e-07, -2.0861623852397315e-05, -2.3841855067985307e-07, -1.2655330896377563, -4.291534423828125e-06, -1.1444091796875e-05, -0.03402900695800781, -7.62939453125e-06, -0.5679548382759094, 0.0], "choice_history": [55, 124, 221, 63, 103, "Charge", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Charge", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(3)\n"}, {"score": -5.951940594771571, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 2}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"hole2": 1, "_type": "Template32", "hole0": "Buff", "hole1": "SpellDamage"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.9591064453125e-05, -8.0108642578125e-05, -3.71926071238704e-05, -0.00013887141540180892, -3.814697265625e-06, -4.1961669921875e-05, -9.5367431640625e-06, -2.348422094655689e-05, -0.00014209638175088912, -1.9073486328125e-05, -7.62939453125e-06, -0.000682830810546875, -1.52587890625e-05, -2.3364969820249826e-05, 0.0, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0003934426058549434, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001220703125, -0.011846542358398438, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.4185804502631072e-05, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -0.000743865966796875, -1.52587890625e-05, -3.4332275390625e-05, -9.536738616588991e-07, -3.4332275390625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00041524512926116586, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.3947486877441406e-05, -0.000141143798828125, -0.042793866246938705, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9550323486328125e-05, -5.936446541454643e-05, -0.01181793212890625, -1.9073486328125e-06, -0.0022220611572265625, -1.1444091796875e-05, 0.0, -0.0009289979934692383, 0.0, -0.000194549560546875, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.00023663043975830078, -1.9073486328125e-06, -0.01860499382019043, -0.00026285648345947266, -0.023698806762695312, -3.0517578125e-05, -5.173683166503906e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.6293927122605965e-06, 0.0, 0.0, -7.62939453125e-06, -2.0265558760002023e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -2.172260284423828, -7.62939453125e-06, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.3139949664473534e-05, 0.0, -0.0009900331497192383, 0.0, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.3841855067985307e-07, -9.5367431640625e-06, 0.0, -1.0251998901367188e-05, -3.826617466984317e-05, -0.02531719207763672, -5.14984130859375e-05, -0.2650127410888672, -0.000209808349609375, -0.010306159034371376, -3.576278118089249e-07, -0.20761489868164062, -7.62939453125e-06, -0.07517623901367188, -0.0011119842529296875, -3.4332275390625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.000125885009765625, -3.099436753473128e-06, -1.3232186574896332e-05, -2.622604142743512e-06, -0.3720341920852661, -2.1457672119140625e-06, -1.9073486328125e-05, -0.9825649261474609, -0.0005645751953125, -0.012484739534556866, -7.295608520507812e-05, -0.1568070650100708, -0.05210554599761963, -2.491474151611328e-05, -0.07598089426755905, -1.9073486328125e-06, -0.9315814971923828, -1.9073486328125e-06, -0.004124641418457031, -0.0065555572509765625, -1.33514404296875e-05, -9.5367431640625e-06, -0.10418701171875, 0.0, -5.7220458984375e-05, 0.0, -0.001220703125, -3.576278118089249e-07, -3.170964555465616e-05, -2.1457672119140625e-06, -0.37649106979370117, -6.198883056640625e-06], "choice_history": [55, 124, 221, 63, 103, "Charge", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Charge", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 44, 168, "Buff", "<EOS>", "Spell", "Damage", "<EOS>", "1", "<EOS>", 64, 106, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(SpellDamage(1)))\n        self.target.<UNK>()\n"}, {"score": -6.110500113955283, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Num", "n": 0}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "set_health_to"}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.9591064453125e-05, -8.0108642578125e-05, -3.71926071238704e-05, -0.00013887141540180892, -3.814697265625e-06, -4.1961669921875e-05, -9.5367431640625e-06, -2.348422094655689e-05, -0.00014209638175088912, -1.9073486328125e-05, -7.62939453125e-06, -0.000682830810546875, -1.52587890625e-05, -2.3364969820249826e-05, 0.0, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0003934426058549434, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001220703125, -0.011846542358398438, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.4185804502631072e-05, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -0.000743865966796875, -1.52587890625e-05, -3.4332275390625e-05, -9.536738616588991e-07, -3.4332275390625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00041524512926116586, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.3947486877441406e-05, -0.000141143798828125, -0.042793866246938705, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9550323486328125e-05, -5.936446541454643e-05, -0.01181793212890625, -1.9073486328125e-06, -0.0022220611572265625, -1.1444091796875e-05, 0.0, -0.0009289979934692383, 0.0, -0.000194549560546875, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.00023663043975830078, -1.9073486328125e-06, -0.01860499382019043, -0.00026285648345947266, -3.7964706420898438, -8.96453857421875e-05, 0.0, 0.0, -0.00078582763671875, 0.0, -2.6702880859375e-05, -3.576278118089249e-07, -2.0861623852397315e-05, -2.3841855067985307e-07, -1.2655330896377563, -4.291534423828125e-06, -1.1444091796875e-05, -0.03402900695800781, -7.62939453125e-06, -0.92095547914505, 0.0], "choice_history": [55, 124, 221, 63, 103, "Charge", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Charge", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 39, 130, "Charge", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(0)\n"}, {"score": -6.5710970886013556, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.9591064453125e-05, -8.0108642578125e-05, -3.71926071238704e-05, -0.00013887141540180892, -3.814697265625e-06, -4.1961669921875e-05, -9.5367431640625e-06, -2.348422094655689e-05, -0.00014209638175088912, -1.9073486328125e-05, -7.62939453125e-06, -0.000682830810546875, -1.52587890625e-05, -2.3364969820249826e-05, 0.0, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0003934426058549434, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001220703125, -0.011846542358398438, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.4185804502631072e-05, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -0.000743865966796875, -1.52587890625e-05, -3.4332275390625e-05, -9.536738616588991e-07, -3.4332275390625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00041524512926116586, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.3947486877441406e-05, -0.000141143798828125, -0.042793866246938705, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9550323486328125e-05, -5.936446541454643e-05, -0.01181793212890625, -1.9073486328125e-06, -0.0022220611572265625, -1.1444091796875e-05, 0.0, -0.0009289979934692383, 0.0, -0.000194549560546875, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.00023663043975830078, -1.9073486328125e-06, -0.01860499382019043, -0.00026285648345947266, -0.023698806762695312, -3.0517578125e-05, -5.173683166503906e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.6293927122605965e-06, 0.0, 0.0, -7.62939453125e-06, -2.0265558760002023e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -0.12376880645751953, -3.814697265625e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -4.57763671875e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.539145316404756e-05, 0.0, -0.00025010108947753906, 0.0, -2.09808349609375e-05, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -2.3841855067985307e-07, -1.1444091796875e-05, 0.0, -1.2159347534179688e-05, -5.674361455021426e-05, -0.0074901580810546875, -0.0002269744873046875, -2.6771230697631836, -0.21030807495117188, -5.7220458984375e-06, -6.67572021484375e-05, -9.5367431640625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0001468658447265625, -7.271740287251305e-06, -1.5616367818438448e-05, -3.576278118089249e-07, -0.662254810333252, 0.0, -1.33514404296875e-05, -0.0013303756713867188, 0.0, -0.00027000904083251953, -1.1920928244535389e-07, -0.0070972442626953125, -1.9073486328125e-06, -0.15492630004882812, -0.16222763061523438, -1.9073486328125e-06, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.0001049041748046875, 0.0, -0.0012111663818359375, -1.6689286894688848e-06, -4.649161837733118e-06, -9.536738616588991e-07, -1.3179941177368164, -5.960462772236497e-07, -4.1961669921875e-05, -0.042911529541015625, 0.0, -1.0844545364379883, -8.725739462533966e-05], "choice_history": [55, 124, 221, 63, 103, "Charge", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Charge", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.<UNK>(<UNK>)\n"}, {"score": -7.227921658748443, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 2}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Charge"}]}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Template28", "hole0": 3}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.9591064453125e-05, -8.0108642578125e-05, -3.71926071238704e-05, -0.00013887141540180892, -3.814697265625e-06, -4.1961669921875e-05, -9.5367431640625e-06, -2.348422094655689e-05, -0.00014209638175088912, -1.9073486328125e-05, -7.62939453125e-06, -0.000682830810546875, -1.52587890625e-05, -2.3364969820249826e-05, 0.0, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0003934426058549434, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001220703125, -0.011846542358398438, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.4185804502631072e-05, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -0.000743865966796875, -1.52587890625e-05, -3.4332275390625e-05, -9.536738616588991e-07, -3.4332275390625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00041524512926116586, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.3947486877441406e-05, -0.000141143798828125, -0.042793866246938705, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9550323486328125e-05, -5.936446541454643e-05, -0.01181793212890625, -1.9073486328125e-06, -0.0022220611572265625, -1.1444091796875e-05, 0.0, -0.0009289979934692383, 0.0, -0.000194549560546875, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.00023663043975830078, -1.9073486328125e-06, -0.01860499382019043, -0.00026285648345947266, -0.023698806762695312, -3.0517578125e-05, -5.173683166503906e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.6293927122605965e-06, 0.0, 0.0, -7.62939453125e-06, -2.0265558760002023e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -2.172260284423828, -7.62939453125e-06, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.3139949664473534e-05, 0.0, -0.0009900331497192383, 0.0, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.3841855067985307e-07, -9.5367431640625e-06, 0.0, -1.0251998901367188e-05, -3.826617466984317e-05, -0.02531719207763672, -5.14984130859375e-05, -0.2650127410888672, -0.000209808349609375, -0.010306159034371376, -3.576278118089249e-07, -0.20761489868164062, -7.62939453125e-06, -0.07517623901367188, -0.0011119842529296875, -3.4332275390625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.000125885009765625, -3.099436753473128e-06, -1.3232186574896332e-05, -2.622604142743512e-06, -0.3720341920852661, -2.1457672119140625e-06, -1.9073486328125e-05, -1.0813484191894531, -9.5367431640625e-06, -9.34600830078125e-05, 0.0, -0.0006766319274902344, -0.03064417839050293, -0.003360748291015625, -0.0065059661865234375, -0.0002269744873046875, -0.02571493200957775, -0.0016683340072631836, -0.005772590637207031, 0.0, -0.11885643005371094, -0.20116233825683594, -3.814697265625e-06, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.0002536773681640625, -2.3841830625315197e-06, -9.894371032714844e-06, -2.741813204920618e-06, -0.7378371953964233, -1.9073486328125e-06, -0.0002994537353515625, -0.9460391998291016, -0.000278472900390625, -0.8199992179870605, -4.38690185546875e-05], "choice_history": [55, 124, 221, 63, 103, "Charge", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Charge", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Charge", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 43, 163, "3", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(Charge()))\n        self.target.add_buff(Buff(ChangeAttack(3)))\n"}, {"score": -7.2870286047324555, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 2}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Charge"}]}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "minion", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Charge", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.9591064453125e-05, -8.0108642578125e-05, -3.71926071238704e-05, -0.00013887141540180892, -3.814697265625e-06, -4.1961669921875e-05, -9.5367431640625e-06, -2.348422094655689e-05, -0.00014209638175088912, -1.9073486328125e-05, -7.62939453125e-06, -0.000682830810546875, -1.52587890625e-05, -2.3364969820249826e-05, 0.0, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0003934426058549434, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001220703125, -0.011846542358398438, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.4185804502631072e-05, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -0.000743865966796875, -1.52587890625e-05, -3.4332275390625e-05, -9.536738616588991e-07, -3.4332275390625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00041524512926116586, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.3947486877441406e-05, -0.000141143798828125, -0.042793866246938705, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9550323486328125e-05, -5.936446541454643e-05, -0.01181793212890625, -1.9073486328125e-06, -0.0022220611572265625, -1.1444091796875e-05, 0.0, -0.0009289979934692383, 0.0, -0.000194549560546875, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.00023663043975830078, -1.9073486328125e-06, -0.01860499382019043, -0.00026285648345947266, -0.023698806762695312, -3.0517578125e-05, -5.173683166503906e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.6293927122605965e-06, 0.0, 0.0, -7.62939453125e-06, -2.0265558760002023e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -2.172260284423828, -7.62939453125e-06, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -3.3139949664473534e-05, 0.0, -0.0009900331497192383, 0.0, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.3841855067985307e-07, -9.5367431640625e-06, 0.0, -1.0251998901367188e-05, -3.826617466984317e-05, -0.02531719207763672, -5.14984130859375e-05, -0.2650127410888672, -0.000209808349609375, -0.010306159034371376, -3.576278118089249e-07, -0.20761489868164062, -7.62939453125e-06, -0.07517623901367188, -0.0011119842529296875, -3.4332275390625e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.91278076171875e-05, 0.0, -0.000125885009765625, -3.099436753473128e-06, -1.3232186574896332e-05, -2.622604142743512e-06, -0.3720341920852661, -2.1457672119140625e-06, -1.9073486328125e-05, -1.0813484191894531, -9.5367431640625e-06, -9.34600830078125e-05, 0.0, -0.0006766319274902344, -0.03064417839050293, -0.003360748291015625, -0.0065059661865234375, -0.0002269744873046875, -0.02571493200957775, -0.0016683340072631836, -0.005772590637207031, 0.0, -0.11885643005371094, -0.20116233825683594, -3.814697265625e-06, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.0002536773681640625, -2.3841830625315197e-06, -9.894371032714844e-06, -2.741813204920618e-06, -1.033190131187439, -7.152555099310121e-07, -0.000171661376953125, -0.3386812210083008, 0.0, -1.1915338039398193, -2.8729431505780667e-05], "choice_history": [55, 124, 221, 63, 103, "Charge", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Charge", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Charge", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(Charge()))\n        self.target.<UNK>(minion)\n"}, {"score": -17.167522430419922, "model_output": {"_type": "Module", "body": [{"_type": "Break"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -17.167497634887695], "choice_history": [55, 124, 221, 62], "inferred_code": "break\n"}, {"score": -20.86408042907715, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -20.864076614379883], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 16}
{"beams": [{"score": -0.04570890387401505, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Chillwind Yeti", "hole1": 4}, {"_type": "Template11", "hole0": 4, "hole1": 5}], "_type": "ClassDef", "name": "ChillwindYeti", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0024835001677274704, -0.020717179402709007, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.009952545166015625, -0.0003757476806640625, -0.000271879427600652, -7.867813110351562e-06, -1.7523765563964844e-05, -5.841255187988281e-06, -3.778930476983078e-05, -8.583057933719829e-06, -3.123283386230469e-05, -2.0265579223632812e-06, -0.00737762451171875, -1.9073486328125e-05, -0.003443320281803608, -1.311301275563892e-06, -0.0004433771246112883, -0.0003129243850708008], "choice_history": [55, 124, 221, 63, 103, "Chillwind", "Yeti", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -3.9106936075685326, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Chillwind Yeti", "hole1": 4}, {"_type": "Template11", "hole0": 4, "hole1": 5}], "_type": "ClassDef", "name": "Chillwind<UNK>", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0024835001677274704, -3.8873815536499023, -0.0006750990869477391, -3.814697265625e-06, -0.000118255615234375, 0.0, -2.0265579223632812e-06, -1.1563301086425781e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.007701873779296875, -0.00030517578125, -0.0002475670480635017, -7.867813110351562e-06, -1.7404556274414062e-05, -5.841255187988281e-06, -3.492828909656964e-05, -8.344639354618266e-06, -3.135204315185547e-05, -2.0265579223632812e-06, -0.007556915283203125, -1.71661376953125e-05, -0.0032536271028220654, -1.4305104514278355e-06, -0.00045040680561214685, -0.0003052949905395508], "choice_history": [55, 124, 221, 63, 103, "Chillwind", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class Chillwind<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -5.1204957513958504, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 4, "hole1": 5}], "_type": "ClassDef", "name": "ChillwindYeti", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0024835001677274704, -0.020717179402709007, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.99282169342041, -0.0003986358642578125, -0.00012146688823122531, -1.859664735093247e-05, -5.7220458984375e-06, 0.0, -0.00011825512046925724, 0.0, -7.069110870361328e-05, 0.0, -0.0018025636672973633, -2.2649765014648438e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -3.62396240234375e-05, 0.0, -0.10077440738677979, -9.965896606445312e-05, -0.000148773193359375, -3.814697265625e-06, -0.0003911683161277324, -2.3841855067985307e-07, -0.00017439440125599504, -7.832050323486328e-05], "choice_history": [55, 124, 221, 63, 103, "Chillwind", "Yeti", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -5.4444627786917295, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Chillwind Yeti", "hole1": 4}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 5}], "_type": "ClassDef", "name": "ChillwindYeti", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0024835001677274704, -0.020717179402709007, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.009952545166015625, -0.0003757476806640625, -0.000271879427600652, -7.867813110351562e-06, -1.7523765563964844e-05, -5.841255187988281e-06, -3.778930476983078e-05, -8.583057933719829e-06, -3.123283386230469e-05, -2.0265579223632812e-06, -4.918344497680664, -0.0010528564453125, -0.00011300369806122035, -5.245071224635467e-05, -0.0017932645278051496, -2.3365011657006107e-05, -0.488422155380249, -5.960462772236497e-07, -8.58306884765625e-05, -0.0003337860107421875, -0.000125885009765625, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Chillwind", "Yeti", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "4", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5, taunt=True)\n"}, {"score": -5.855209957935017, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Chillwind Yeti", "hole1": 4}, {"_type": "Template11", "hole0": 1, "hole1": 5}], "_type": "ClassDef", "name": "ChillwindYeti", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0024835001677274704, -0.020717179402709007, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.009952545166015625, -0.0003757476806640625, -0.000271879427600652, -7.867813110351562e-06, -1.7523765563964844e-05, -5.841255187988281e-06, -3.778930476983078e-05, -8.583057933719829e-06, -3.123283386230469e-05, -2.0265579223632812e-06, -0.00737762451171875, -1.9073486328125e-05, -5.813431262969971, -2.0265579223632812e-06, -5.507457899511792e-05, -0.000213623046875], "choice_history": [55, 124, 221, 63, 103, "Chillwind", "Yeti", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 73, 146, "1", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 5)\n"}, {"score": -6.0878976608559014, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Chillwind Yeti", "hole1": 4}, {"hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 5}], "_type": "ClassDef", "name": "ChillwindYeti", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0024835001677274704, -0.020717179402709007, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.009952545166015625, -0.0003757476806640625, -0.000271879427600652, -7.867813110351562e-06, -1.7523765563964844e-05, -5.841255187988281e-06, -3.778930476983078e-05, -8.583057933719829e-06, -3.123283386230469e-05, -2.0265579223632812e-06, -4.918344497680664, -0.0010528564453125, -0.00011300369806122035, -5.245071224635467e-05, -0.0017932645278051496, -2.3365011657006107e-05, -1.1318175792694092, -0.000118255615234375, -0.0001430511474609375, -0.0001773834228515625, -0.00014495849609375, -5.7220458984375e-06], "choice_history": [55, 124, 221, 63, 103, "Chillwind", "Yeti", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "4", "<EOS>", "5", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5, stealth=True)\n"}, {"score": -6.120687600056385, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Chillwind Yeti", "hole1": 4}, {"_type": "Template11", "hole0": 4, "hole1": 5}], "_type": "ClassDef", "name": "<UNK>Yeti", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -6.077462196350098, -0.020717179402709007, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.009952545166015625, -0.0003757476806640625, -0.000271879427600652, -7.867813110351562e-06, -1.7523765563964844e-05, -5.841255187988281e-06, -3.778930476983078e-05, -8.583057933719829e-06, -3.123283386230469e-05, -2.0265579223632812e-06, -0.00737762451171875, -1.9073486328125e-05, -0.003443320281803608, -1.311301275563892e-06, -0.0004433771246112883, -0.0003129243850708008], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Yeti", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class <UNK>Yeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -6.443441519433009, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template6", "hole0": "Chillwind Yeti", "hole1": 4}, {"_type": "Template11", "hole0": 4, "hole1": 5}], "_type": "ClassDef", "name": "ChillwindYeti", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0024835001677274704, -0.020717179402709007, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.3700761795043945, -0.011097908020019531, -0.0021401620469987392, -3.790854680119082e-05, -8.225440979003906e-06, -1.9073486328125e-06, -0.0001165866560768336, -1.3828277587890625e-05, -0.0008682012557983398, 0.0, -0.0325927734375, -1.9073486328125e-05, -0.0027519252616912127, -4.768370445162873e-07, -0.0001882158248918131, -0.00012791156768798828], "choice_history": [55, 124, 221, 63, 103, "Chillwind", "Yeti", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -7.6211250930331005, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 4, "hole1": 5}], "_type": "ClassDef", "name": "ChillwindYeti", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0024835001677274704, -0.020717179402709007, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.99282169342041, -0.0003986358642578125, -0.00012146688823122531, -1.859664735093247e-05, -5.7220458984375e-06, 0.0, -0.00011825512046925724, 0.0, -7.069110870361328e-05, 0.0, -0.0018025636672973633, -2.2649765014648438e-06, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -3.62396240234375e-05, 0.0, -2.600437641143799, -0.0012180805206298828, -0.0001201629638671875, -1.9073486328125e-06, -0.00028415449196472764, -2.3841855067985307e-07, -0.00020538849639706314, -3.254413604736328e-05], "choice_history": [55, 124, 221, 63, 103, "Chillwind", "Yeti", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -7.97985538957289, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Chillwind Yeti", "hole1": 4}, {"_type": "Template11", "hole0": 4, "hole1": 4}], "_type": "ClassDef", "name": "ChillwindYeti", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0024835001677274704, -0.020717179402709007, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.009952545166015625, -0.0003757476806640625, -0.000271879427600652, -7.867813110351562e-06, -1.7523765563964844e-05, -5.841255187988281e-06, -3.778930476983078e-05, -8.583057933719829e-06, -3.123283386230469e-05, -2.0265579223632812e-06, -0.00737762451171875, -1.9073486328125e-05, -0.003443320281803608, -1.311301275563892e-06, -7.934898853302002, -3.933906555175781e-06], "choice_history": [55, 124, 221, 63, 103, "Chillwind", "Yeti", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 73, 146, "4", "<EOS>", "4", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n"}, {"score": -8.169810065685283, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Chillwind Yeti", "hole1": 4}, {"_type": "Template11", "hole0": 4, "hole1": 51}], "_type": "ClassDef", "name": "ChillwindYeti", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0024835001677274704, -0.020717179402709007, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.009952545166015625, -0.0003757476806640625, -0.000271879427600652, -7.867813110351562e-06, -1.7523765563964844e-05, -5.841255187988281e-06, -3.778930476983078e-05, -8.583057933719829e-06, -3.123283386230469e-05, -2.0265579223632812e-06, -0.00737762451171875, -1.9073486328125e-05, -0.003443320281803608, -1.311301275563892e-06, -0.0004433771246112883, -8.124303817749023, -0.00011026844731532037], "choice_history": [55, 124, 221, 63, 103, "Chillwind", "Yeti", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 73, 146, "4", "<EOS>", "5", "1", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 51)\n"}, {"score": -8.585489843272057, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Chillwind Yeti", "hole1": 4}, {"_type": "Template11", "hole0": 0, "hole1": 5}], "_type": "ClassDef", "name": "ChillwindYeti", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0024835001677274704, -0.020717179402709007, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.009952545166015625, -0.0003757476806640625, -0.000271879427600652, -7.867813110351562e-06, -1.7523765563964844e-05, -5.841255187988281e-06, -3.778930476983078e-05, -8.583057933719829e-06, -3.123283386230469e-05, -2.0265579223632812e-06, -0.00737762451171875, -1.9073486328125e-05, -8.542623519897461, -7.867804924899247e-06, -0.0010165795683860779, -0.0003339052200317383], "choice_history": [55, 124, 221, 63, 103, "Chillwind", "Yeti", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 73, 146, "ALL", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 5)\n"}, {"score": -8.967437319703379, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template5", "hole0": "Chillwind Yeti", "hole1": 4}, {"_type": "Template11", "hole0": 4, "hole1": 5}], "_type": "ClassDef", "name": "ChillwindYeti", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0024835001677274704, -0.020717179402709007, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.9073486328125e-06, -8.808311462402344, -0.01856231689453125, -0.0006138585740700364, -1.2755393072438892e-05, -1.728534698486328e-05, -1.9073486328125e-05, -0.00017237030260730535, -2.3841855067985307e-07, -1.9073486328125e-05, 0.0, -0.11526775360107422, -9.5367431640625e-06, -0.0007240492268465459, -2.3841855067985307e-07, -0.00018488196656107903, -0.00012218952178955078], "choice_history": [55, 124, 221, 63, 103, "Chillwind", "Yeti", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -9.538907356048867, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": " Yeti", "hole1": 4}, {"_type": "Template11", "hole0": 4, "hole1": 5}], "_type": "ClassDef", "name": "ChillwindYeti", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0024835001677274704, -0.020717179402709007, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.009952545166015625, -0.0003757476806640625, -8.216964721679688, -0.009397505782544613, -1.266365885734558, -1.931183214765042e-05, -1.251697449333733e-05, -2.384185791015625e-05, -3.814697265625e-06, -0.008066177368164062, -2.09808349609375e-05, -0.0036202194169163704, -1.0728830375228426e-06, -0.0003603170916903764, -0.0003224611282348633], "choice_history": [55, 124, 221, 63, 103, "Chillwind", "Yeti", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__(' Yeti', 4, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"score": -20.508909225463867, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.814697265625e-06, -7.62939453125e-06, -20.50889778137207], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 17}
{"beams": [{"score": -0.20077112867411273, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Claw", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Template29", "hole0": 2}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Claw", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.9802317840221804e-06, -0.004856968764215708, -1.1444091796875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.00011336803436279297, -9.417532055522315e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.011888504028320312, -0.0006427764892578125, -0.00012170527770649642, -0.0003272957692388445, -3.576169547159225e-07, -1.1920928244535389e-07, -0.0008469820022583008, -1.311301275563892e-06, -0.002574920654296875, 0.0, -9.059905096364673e-06, -3.933906555175781e-06, -1.9073486328125e-06, -0.000133514404296875, 0.0, -2.0742414562846534e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.57763671875e-05, -0.0002117156982421875, -1.71661376953125e-05, -0.0064258575439453125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.224082946777344e-05, 0.0, -1.52587890625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -0.0001773834228515625, -6.103515625e-05, -6.508827209472656e-05, 0.0, -3.4332275390625e-05, 0.0, -6.520748138427734e-05, -0.00013673304056283087, -0.02089214324951172, -0.0026273727416992188, -0.10333019495010376, -1.6689286894688848e-06, -0.000423431396484375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.000423431396484375, -2.3841855067985307e-07, -0.001599879702553153, -7.867804924899247e-06, -0.03467237949371338, 0.0, -0.001522064208984375, -0.0001277923583984375, 0.0, -0.0057360329665243626, 0.0], "choice_history": [55, 124, 221, 63, 103, "Claw", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n"}, {"score": -2.414236942867227, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Claw", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Template29", "hole0": 1}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Claw", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.9802317840221804e-06, -0.004856968764215708, -1.1444091796875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.00011336803436279297, -9.417532055522315e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.011888504028320312, -0.0006427764892578125, -0.00012170527770649642, -0.0003272957692388445, -3.576169547159225e-07, -1.1920928244535389e-07, -0.0008469820022583008, -1.311301275563892e-06, -0.002574920654296875, 0.0, -9.059905096364673e-06, -3.933906555175781e-06, -1.9073486328125e-06, -0.000133514404296875, 0.0, -2.0742414562846534e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.57763671875e-05, -0.0002117156982421875, -1.71661376953125e-05, -0.0064258575439453125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.224082946777344e-05, 0.0, -1.52587890625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -0.0001773834228515625, -6.103515625e-05, -6.508827209472656e-05, 0.0, -3.4332275390625e-05, 0.0, -6.520748138427734e-05, -0.00013673304056283087, -0.02089214324951172, -0.0026273727416992188, -2.3211851119995117, -0.0001373290433548391, -0.0020112991333007812, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -0.00031280517578125, -2.3841855067985307e-07, -0.0015736604109406471, -6.675716122117592e-06, -0.028792858123779297, 0.0, -0.0011138916015625, -9.918212890625e-05, 0.0, -0.006026245653629303, 0.0], "choice_history": [55, 124, 221, 63, 103, "Claw", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "1", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(1)\n        player.hero.increase_armor(2)\n"}, {"score": -4.0052889559036515, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Claw", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Template29", "hole0": 2}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Claw", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.9802317840221804e-06, -0.004856968764215708, -1.1444091796875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.00011336803436279297, -9.417532055522315e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.011888504028320312, -0.0006427764892578125, -0.00012170527770649642, -0.0003272957692388445, -3.576169547159225e-07, -1.1920928244535389e-07, -0.0008469820022583008, -1.311301275563892e-06, -0.002574920654296875, 0.0, -9.059905096364673e-06, -3.933906555175781e-06, -1.9073486328125e-06, -0.000133514404296875, 0.0, -2.0742414562846534e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.57763671875e-05, -0.0002117156982421875, -1.71661376953125e-05, -0.0064258575439453125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.224082946777344e-05, 0.0, -1.52587890625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -0.0001773834228515625, -6.103515625e-05, -6.508827209472656e-05, 0.0, -3.4332275390625e-05, 0.0, -6.520748138427734e-05, -0.00013673304056283087, -0.02089214324951172, -0.0026273727416992188, -0.10333019495010376, -1.6689286894688848e-06, -0.000423431396484375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.000423431396484375, -2.3841855067985307e-07, -0.001599879702553153, -7.867804924899247e-06, -3.791813373565674, -5.3882598876953125e-05, -3.814697265625e-06, -0.0005435943603515625, -7.2479248046875e-05, -0.023904800415039062, 0.0, -3.0517578125e-05, 0.0, -0.0028235912322998047, -2.3841855067985307e-07, -0.01438901387155056, -1.1920928244535389e-07, -8.7738037109375e-05, -0.003101348876953125, -1.9073486328125e-06, -0.0013586541172116995, 0.0, -0.0057735443115234375, -3.814697265625e-05, -0.0025773048400878906, -2.0265579223632812e-06], "choice_history": [55, 124, 221, 63, 103, "Claw", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -5.4840327790306205, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template5", "hole0": "Claw", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Template29", "hole0": 2}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Claw", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.9802317840221804e-06, -0.004856968764215708, -1.1444091796875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.00011336803436279297, -9.417532055522315e-06, -3.814697265625e-06, -1.71661376953125e-05, -5.296113014221191, -0.0006656646728515625, -9.083335316972807e-05, -0.0028171183075755835, -0.0013228867901489139, -4.0531158447265625e-06, -0.0029109716415405273, -2.9802276912960224e-06, -0.00084686279296875, -1.9073486328125e-06, -2.872943878173828e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001544952392578125, 0.0, -2.0742414562846534e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.76837158203125e-05, -0.00021374225616455078, -2.09808349609375e-05, -0.0036296844482421875, -2.6702880859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -8.392333984375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -3.576278118089249e-07, -1.9073486328125e-05, -0.0001811981201171875, -3.62396240234375e-05, -5.936622619628906e-05, 0.0, -3.4332275390625e-05, 0.0, -6.520748138427734e-05, -0.00013446806406136602, -0.021178245544433594, -0.002582550048828125, -0.10139907896518707, -1.6689286894688848e-06, -0.0004177093505859375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.0001430511474609375, 0.0, -0.000415802001953125, -2.3841855067985307e-07, -0.0015872440999373794, -1.0371197276981547e-05, -0.03408479690551758, 0.0, -0.00145721435546875, -0.0001201629638671875, 0.0, -0.005746638402342796, 0.0], "choice_history": [55, 124, 221, 63, 103, "Claw", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n"}, {"score": -5.528787442092288, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Claw", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Template29", "hole0": 2}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ClawClaw", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.9802317840221804e-06, -5.331366062164307, -0.00045253525604493916, -0.000110626220703125, -0.0002880096435546875, -1.9073486328125e-06, -0.00017976760864257812, -8.82148651726311e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.012468338012695312, -0.00058746337890625, -0.00013124081306159496, -0.0004744719190057367, -3.576169547159225e-07, -1.1920928244535389e-07, -0.0008889436721801758, -1.6689286894688848e-06, -0.0026645660400390625, 0.0, -9.059905096364673e-06, -3.933906555175781e-06, -1.9073486328125e-06, -0.00012969970703125, 0.0, -2.0742414562846534e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -4.57763671875e-05, -0.000209808349609375, -1.71661376953125e-05, -0.0066928863525390625, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.224082946777344e-05, 0.0, -1.52587890625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -0.0001773834228515625, -5.91278076171875e-05, -6.318092346191406e-05, 0.0, -3.4332275390625e-05, 0.0, -6.520748138427734e-05, -0.00013661383127328008, -0.0208892822265625, -0.00261688232421875, -0.10346396267414093, -1.6689286894688848e-06, -0.0004253387451171875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.00041961669921875, -2.3841855067985307e-07, -0.0015958263538777828, -7.987013304955326e-06, -0.03429675102233887, 0.0, -0.0014858245849609375, -0.000125885009765625, 0.0, -0.005768531933426857, 0.0], "choice_history": [55, 124, 221, 63, 103, "Claw", "Claw", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "2", "<EOS>"], "inferred_code": "class ClawClaw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n"}, {"score": -5.6133514599959184, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Claw", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Template29", "hole0": 2}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 3}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Claw", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.9802317840221804e-06, -0.004856968764215708, -1.1444091796875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.00011336803436279297, -9.417532055522315e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.011888504028320312, -0.0006427764892578125, -0.00012170527770649642, -0.0003272957692388445, -3.576169547159225e-07, -1.1920928244535389e-07, -0.0008469820022583008, -1.311301275563892e-06, -0.002574920654296875, 0.0, -9.059905096364673e-06, -3.933906555175781e-06, -1.9073486328125e-06, -0.000133514404296875, 0.0, -2.0742414562846534e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.57763671875e-05, -0.0002117156982421875, -1.71661376953125e-05, -0.0064258575439453125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.224082946777344e-05, 0.0, -1.52587890625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -0.0001773834228515625, -6.103515625e-05, -6.508827209472656e-05, 0.0, -3.4332275390625e-05, 0.0, -6.520748138427734e-05, -0.00013673304056283087, -0.02089214324951172, -0.0026273727416992188, -0.10333019495010376, -1.6689286894688848e-06, -0.000423431396484375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.000423431396484375, -2.3841855067985307e-07, -0.001599879702553153, -7.867804924899247e-06, -0.03467237949371338, 0.0, -0.001522064208984375, -0.0001277923583984375, 0.0, -5.41831636428833, 0.0], "choice_history": [55, 124, 221, 63, 103, "Claw", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(3)\n"}, {"score": -6.456664610400239, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Claw", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Template29", "hole0": 1}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Claw", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.9802317840221804e-06, -0.004856968764215708, -1.1444091796875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.00011336803436279297, -9.417532055522315e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.011888504028320312, -0.0006427764892578125, -0.00012170527770649642, -0.0003272957692388445, -3.576169547159225e-07, -1.1920928244535389e-07, -0.0008469820022583008, -1.311301275563892e-06, -0.002574920654296875, 0.0, -9.059905096364673e-06, -3.933906555175781e-06, -1.9073486328125e-06, -0.000133514404296875, 0.0, -2.0742414562846534e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.57763671875e-05, -0.0002117156982421875, -1.71661376953125e-05, -0.0064258575439453125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.224082946777344e-05, 0.0, -1.52587890625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -0.0001773834228515625, -6.103515625e-05, -6.508827209472656e-05, 0.0, -3.4332275390625e-05, 0.0, -6.520748138427734e-05, -0.00013673304056283087, -0.02089214324951172, -0.0026273727416992188, -2.3211851119995117, -0.0001373290433548391, -0.0020112991333007812, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -0.00031280517578125, -2.3841855067985307e-07, -0.0015736604109406471, -6.675716122117592e-06, -4.012653827667236, -5.3763389587402344e-05, -5.7220458984375e-06, -0.000682830810546875, -6.29425048828125e-05, -0.033392906188964844, 0.0, -3.24249267578125e-05, 0.0, -0.0037603378295898438, -2.3841855067985307e-07, -0.014261456206440926, -1.1920928244535389e-07, -8.20159912109375e-05, -0.0029354095458984375, -1.9073486328125e-06, -0.0012064120965078473, 0.0, -0.0064258575439453125, -4.00543212890625e-05, -0.0028595924377441406, -2.0265579223632812e-06], "choice_history": [55, 124, 221, 63, 103, "Claw", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "1", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(1)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -6.638103792040901, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Claw", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Num", "n": 3}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}, {"_type": "Template29", "hole0": 2}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Claw", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.9802317840221804e-06, -0.004856968764215708, -1.1444091796875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.00011336803436279297, -9.417532055522315e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.011888504028320312, -0.0006427764892578125, -0.00012170527770649642, -0.0003272957692388445, -3.576169547159225e-07, -1.1920928244535389e-07, -0.0008469820022583008, -1.311301275563892e-06, -0.002574920654296875, 0.0, -9.059905096364673e-06, -3.933906555175781e-06, -1.9073486328125e-06, -0.000133514404296875, 0.0, -2.0742414562846534e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.57763671875e-05, -0.0002117156982421875, -1.71661376953125e-05, -0.0064258575439453125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.224082946777344e-05, 0.0, -1.52587890625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -0.0001773834228515625, -6.103515625e-05, -6.508827209472656e-05, 0.0, -3.4332275390625e-05, 0.0, -6.520748138427734e-05, -0.00013673304056283087, -4.443660736083984, -0.000209808349609375, -4.00543212890625e-05, 0.0, -0.0001633167266845703, -1.752367097651586e-05, -0.0029878616333007812, 0.0, -0.004444122314453125, 0.0, -0.0018796920776367188, 0.0, -0.00044167041778564453, -1.9073486328125e-06, -7.05718994140625e-05, -0.5414648056030273, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.002002716064453125, 0.0, -0.0009398460388183594, -2.741813204920618e-06, -1.0120773315429688, 0.0, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.4799501299858093, -1.9073486328125e-06, -0.026726722717285156, -0.0014429092407226562, -0.09030811488628387, -7.62939453125e-06], "choice_history": [55, 124, 221, 63, 103, "Claw", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "change_temp_attack", "<EOS>", 208, 39, 130, "3", "<EOS>", 79, 164, "2", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n        player.hero.change_temp_attack(2)\n"}, {"score": -6.739022048572579, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Claw", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 2}]}}, {"_type": "Template29", "hole0": 2}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Claw", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.9802317840221804e-06, -0.004856968764215708, -1.1444091796875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.00011336803436279297, -9.417532055522315e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.011888504028320312, -0.0006427764892578125, -0.00012170527770649642, -0.0003272957692388445, -3.576169547159225e-07, -1.1920928244535389e-07, -0.0008469820022583008, -1.311301275563892e-06, -0.002574920654296875, 0.0, -9.059905096364673e-06, -3.933906555175781e-06, -1.9073486328125e-06, -0.000133514404296875, 0.0, -2.0742414562846534e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.57763671875e-05, -0.0002117156982421875, -1.71661376953125e-05, -0.0064258575439453125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.224082946777344e-05, 0.0, -1.52587890625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -0.0001773834228515625, -6.103515625e-05, -6.508827209472656e-05, 0.0, -3.4332275390625e-05, 0.0, -6.520748138427734e-05, -0.00013673304056283087, -6.462631702423096, -1.9073486328125e-05, -0.000621795654296875, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -4.57763671875e-05, 0.0, -0.002147674560546875, -2.3841855067985307e-07, -0.0008654168341308832, -9.775153557711747e-06, -0.05177414417266846, -1.1920928244535389e-07, -0.0003871917724609375, -0.00017547607421875, 0.0, -0.00367452809587121, 0.0, -0.0189056396484375, -0.000743865966796875, -0.16765114665031433, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Claw", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "2", "<EOS>", 79, 164, "2", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.change_temp_attack(2)\n"}, {"score": -6.801755223384326, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "SHAMAN", "_type": "Template4", "hole0": "Claw", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Template29", "hole0": 2}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Claw", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.9802317840221804e-06, -0.004856968764215708, -1.1444091796875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.00011336803436279297, -9.417532055522315e-06, -3.814697265625e-06, -1.71661376953125e-05, -6.203010559082031, -5.53131103515625e-05, -5.960462772236497e-07, -4.4941134547116235e-05, -3.336754161864519e-06, -5.364416665543104e-06, -0.40958988666534424, -2.0265579223632812e-06, -0.00244140625, 0.0, -2.396106719970703e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.000377655029296875, 0.0, -1.823902130126953e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.76837158203125e-05, -0.00018322467803955078, -2.288818359375e-05, -0.0053958892822265625, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.987022399902344e-05, 0.0, -1.52587890625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -0.0001697540283203125, -5.7220458984375e-05, -6.318092346191406e-05, 0.0, -3.4332275390625e-05, 0.0, -6.520748138427734e-05, -0.00013661383127328008, -0.020551681518554688, -0.0025463104248046875, -0.1075432226061821, -1.6689286894688848e-06, -0.0003662109375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.000152587890625, -1.9073486328125e-06, -0.000408172607421875, -2.3841855067985307e-07, -0.00160536402836442, -7.867804924899247e-06, -0.03404700756072998, 0.0, -0.001522064208984375, -0.0001220703125, 0.0, -0.005677388049662113, 0.0], "choice_history": [55, 124, 221, 63, 103, "Claw", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Claw", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n"}, {"score": -7.091770136437937, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Claw", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Claw", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.9802317840221804e-06, -0.004856968764215708, -1.1444091796875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.00011336803436279297, -9.417532055522315e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.011888504028320312, -0.0006427764892578125, -0.00012170527770649642, -0.0003272957692388445, -3.576169547159225e-07, -1.1920928244535389e-07, -0.0008469820022583008, -1.311301275563892e-06, -6.157564163208008, -0.0013866424560546875, -0.0001850128173828125, -0.0002040863037109375, -0.2995014190673828, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.01715087890625, -1.1920928244535389e-07, -0.003641366958618164, 0.0, -0.2757798433303833, -2.0265579223632812e-06, -0.13889014720916748, -1.1920928244535389e-07, -5.7220458984375e-06, -0.028623580932617188, -0.0006122589111328125, -0.14798271656036377, -7.152555099310121e-07, -8.20159912109375e-05, -1.9073486328125e-06, -0.0010856389999389648, -4.768370445162873e-07], "choice_history": [55, 124, 221, 63, 103, "Claw", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -8.290016162736421, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Claw", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}}], "test": {"comparators": [{"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"id": "minion", "_type": "Name"}}}, "ops": [{"_type": "Eq"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}, {"_type": "Template29", "hole0": 2}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Claw", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.9802317840221804e-06, -0.004856968764215708, -1.1444091796875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.00011336803436279297, -9.417532055522315e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.011888504028320312, -0.0006427764892578125, -0.00012170527770649642, -0.0003272957692388445, -3.576169547159225e-07, -1.1920928244535389e-07, -0.0008469820022583008, -1.311301275563892e-06, -0.002574920654296875, 0.0, -9.059905096364673e-06, -3.933906555175781e-06, -1.9073486328125e-06, -0.000133514404296875, 0.0, -2.0742414562846534e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.57763671875e-05, -0.0002117156982421875, -1.71661376953125e-05, -0.0064258575439453125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.224082946777344e-05, 0.0, -1.52587890625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -0.0001773834228515625, -6.103515625e-05, -6.508827209472656e-05, 0.0, -3.4332275390625e-05, 0.0, -6.520748138427734e-05, -0.00013673304056283087, -4.443660736083984, -0.000209808349609375, -4.00543212890625e-05, 0.0, -0.0001633167266845703, -1.752367097651586e-05, -0.0029878616333007812, 0.0, -0.004444122314453125, 0.0, -0.0018796920776367188, 0.0, -0.00044167041778564453, -1.9073486328125e-06, -7.05718994140625e-05, -0.8775873184204102, -0.000102996826171875, -0.004405975341796875, -5.340576171875e-05, -1.1444091796875e-05, 0.0, -0.016801834106445312, 0.0, -1.33514404296875e-05, 0.0, -0.46649932861328125, -4.0531158447265625e-06, -0.011538026854395866, -1.7881377516459906e-06, -0.005903363227844238, -1.1920928244535389e-07, -3.814697265625e-05, -0.619633674621582, -7.62939453125e-06, -0.0162200927734375, 0.0, -2.288818359375e-05, 0.0, -0.0005359649658203125, 0.0, -0.09778118133544922, 0.0, -0.0008869171142578125, -6.4849853515625e-05, -7.62939453125e-06, -0.0009403228759765625, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0018463134765625, 0.0, -0.02001774311065674, -1.5616416931152344e-05, -1.0964841842651367, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.5320829153060913, 0.0, -0.004939079284667969, -0.0016450881958007812, -0.030732538551092148, -7.62939453125e-06], "choice_history": [55, 124, 221, 63, 103, "Claw", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 67, 111, 15, 104, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 2, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "change_temp_attack", "<EOS>", 208, 39, 130, "2", "<EOS>", 79, 164, "2", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            if minion.card.minion_type == MINION_TYPE.TOTEM:\n                minion.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n"}, {"score": -8.451906367266623, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Claw", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}, {"id": "self", "_type": "Name"}]}}], "test": {"comparators": [{"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"id": "minion", "_type": "Name"}}}, "ops": [{"_type": "Eq"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}, {"_type": "Template29", "hole0": 2}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Claw", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.9802317840221804e-06, -0.004856968764215708, -1.1444091796875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.00011336803436279297, -9.417532055522315e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.011888504028320312, -0.0006427764892578125, -0.00012170527770649642, -0.0003272957692388445, -3.576169547159225e-07, -1.1920928244535389e-07, -0.0008469820022583008, -1.311301275563892e-06, -0.002574920654296875, 0.0, -9.059905096364673e-06, -3.933906555175781e-06, -1.9073486328125e-06, -0.000133514404296875, 0.0, -2.0742414562846534e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.57763671875e-05, -0.0002117156982421875, -1.71661376953125e-05, -0.0064258575439453125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.224082946777344e-05, 0.0, -1.52587890625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -0.0001773834228515625, -6.103515625e-05, -6.508827209472656e-05, 0.0, -3.4332275390625e-05, 0.0, -6.520748138427734e-05, -0.00013673304056283087, -4.443660736083984, -0.000209808349609375, -4.00543212890625e-05, 0.0, -0.0001633167266845703, -1.752367097651586e-05, -0.0029878616333007812, 0.0, -0.004444122314453125, 0.0, -0.0018796920776367188, 0.0, -0.00044167041778564453, -1.9073486328125e-06, -7.05718994140625e-05, -0.8775873184204102, -0.000102996826171875, -0.004405975341796875, -5.340576171875e-05, -1.1444091796875e-05, 0.0, -0.016801834106445312, 0.0, -1.33514404296875e-05, 0.0, -0.46649932861328125, -4.0531158447265625e-06, -0.011538026854395866, -1.7881377516459906e-06, -0.005903363227844238, -1.1920928244535389e-07, -3.814697265625e-05, -0.619633674621582, -7.62939453125e-06, -0.0162200927734375, 0.0, -2.288818359375e-05, 0.0, -0.0005359649658203125, 0.0, -0.09778118133544922, 0.0, -0.0008869171142578125, -6.4849853515625e-05, -7.62939453125e-06, -0.0009403228759765625, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0018463134765625, 0.0, -0.02001774311065674, -1.5616416931152344e-05, -1.3565645217895508, -3.933906555175781e-06, -9.5367431640625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -0.20327186584472656, 0.0, -1.9073486328125e-05, 0.0, -0.0007030963897705078, 0.0, -0.07398974895477295, -1.1920928244535389e-07, -0.0001087188720703125, -0.039574623107910156, 0.0, -0.0008827815763652325, 0.0, -0.04226112365722656, -5.14984130859375e-05, -0.02031409740447998, -2.0265579223632812e-06, -0.003421783447265625, -0.0032815933227539062, -0.08325664699077606, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Claw", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 67, 111, 15, 104, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 2, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>", 79, 164, "2", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            if minion.card.minion_type == MINION_TYPE.TOTEM:\n                minion.heal(player.effective_heal_power(2), self)\n        player.hero.change_temp_attack(2)\n"}, {"score": -9.049500808120222, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Claw", "hole1": 1}, {"hole3": "target_func", "hole0": "Claw", "hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "ClassDef", "name": "Claw", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.9802317840221804e-06, -0.004856968764215708, -1.1444091796875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.00011336803436279297, -9.417532055522315e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.011888504028320312, -0.0006427764892578125, -0.00012170527770649642, -0.0003272957692388445, -3.576169547159225e-07, -1.1920928244535389e-07, -0.0008469820022583008, -1.311301275563892e-06, -8.174687385559082, -0.0783395767211914, -0.013106858357787132, -1.9073486328125e-06, -0.00016211002366617322, -1.9073486328125e-06, -0.009105682373046875, 0.0, -0.2956531047821045, 0.0, -0.000164031982421875, -5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.01576709747314453, 0.0, -0.00023674964904785156, -1.9073486328125e-06, -0.44313251972198486, -9.655952453613281e-06], "choice_history": [55, 124, 221, 63, 103, "Claw", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 80, 165, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n"}, {"score": -23.394533157348633, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -23.394527435302734], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 18}
{"beams": [{"score": -0.6662974382390416, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Cleave", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 2}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}, "hole1": [{"_type": "GtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Cleave", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001220703125, -7.62939453125e-06, -2.2172740500536747e-05, -0.00013637541269417852, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0002595186233520508, -1.3947486877441406e-05, 0.0, -0.007565498352050781, -0.007755279541015625, -7.43865966796875e-05, -4.327203714638017e-05, -8.344646857949556e-07, -0.00013231286720838398, -3.2186049793381244e-05, -0.01263892650604248, -0.0013027191162109375, -0.000453948974609375, -0.0002880096435546875, -0.00020623207092285156, 0.0, -8.58306884765625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.1682510375976562e-05, -1.9073486328125e-06, -0.03538703918457031, -1.1444091796875e-05, -0.0004673004150390625, 0.0, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -6.103515625e-05, -3.8862031942699105e-05, 0.0, -4.00543212890625e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00067901611328125, -7.62939453125e-06, -8.58306884765625e-05, 0.0, -0.0002231597900390625, 0.0, -2.09808349609375e-05, -1.2874562344222795e-05, -0.0010128021240234375, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0023708343505859375, -5.7220458984375e-06, -0.000209808349609375, -7.62939453125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.0053863525390625, -2.0146166207268834e-05, -0.003911375999450684, -2.3841855067985307e-07, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.0018596649169921875, -0.0003833770751953125, -0.0004119873046875, 0.0, -0.0009937286376953125, -6.079665126890177e-06, -0.0015960931777954102, 0.0, -0.0005908854654990137, -1.9073486328125e-06, -0.0047702789306640625, -0.0001010894775390625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0098801851272583, 0.0, -8.58306884765625e-05, -1.52587890625e-05, -0.000713348388671875, -7.62939453125e-06, -0.0001392364501953125, -1.9073486328125e-06, -8.58306884765625e-05, -0.0012149810791015625, -3.814697265625e-06, -0.00011551380157470703, -3.0517578125e-05, -0.004654884338378906, -7.62939453125e-06, -0.0005396604537963867, 0.0, -0.006850242614746094, -0.0004062652587890625, -2.09808349609375e-05, -6.67572021484375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.010035514831542969, -2.3126602172851562e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001163482666015625, 0.0, -0.0013856887817382812, -1.5497195136049413e-06, -0.003182053565979004, -5.7220458984375e-06, -0.0053653717041015625, -0.000484466552734375, -1.9073486328125e-06, -0.0017728805541992188, -2.09808349609375e-05, -2.09808349609375e-05, -0.00017547607421875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.0072956085205078125, -9.5367431640625e-06, -0.019354939460754395, 0.0, -0.0004634857177734375, -0.0031728744506835938, -3.814697265625e-06, -0.0284881591796875, -3.933906555175781e-06, -0.0010700225830078125, -6.866455078125e-05, -2.47955322265625e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0003814697265625, -1.9073486328125e-06, -0.3626232147216797, -1.537799835205078e-05, -0.022002220153808594, 0.0, -0.0008296966552734375, -0.00760650634765625, -3.814697265625e-06, -0.027396202087402344, -3.933906555175781e-06, -0.002223968505859375, -0.0003681182861328125, -0.0007791519165039062, 0.0, -0.0001583099365234375, -0.0005207061767578125, -1.9073486328125e-06, -3.814697265625e-05, 0.0, 0.0, -0.0021772384643554688, 0.0, -1.9073486328125e-06, -0.00016021728515625, 0.0, -0.00069427490234375, -0.005161285400390625, -0.000156402587890625, -0.00038909912109375, -7.82012939453125e-05, -0.0001888275146484375, -3.0517578125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -9.083747863769531e-05, 0.0, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0014896392822265625, -1.52587890625e-05, -0.0012416839599609375, -3.814697265625e-06, -0.0014362335205078125, -4.649161837733118e-06, -0.00041556358337402344, 0.0, -0.0004616273217834532, 0.0, -0.00470733642578125, -0.005451202392578125, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.015948772430419922, 0.0], "choice_history": [55, 124, 221, 63, 103, "Cleave", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -1.5217262161096983, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Cleave", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 2}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}, "hole1": [{"_type": "GtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Cleave", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001220703125, -7.62939453125e-06, -2.2172740500536747e-05, -0.00013637541269417852, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0002595186233520508, -1.3947486877441406e-05, 0.0, -0.007565498352050781, -0.007755279541015625, -7.43865966796875e-05, -4.327203714638017e-05, -8.344646857949556e-07, -0.00013231286720838398, -3.2186049793381244e-05, -0.01263892650604248, -0.0013027191162109375, -0.000453948974609375, -0.0002880096435546875, -0.00020623207092285156, 0.0, -8.58306884765625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.1682510375976562e-05, -1.9073486328125e-06, -0.03538703918457031, -1.1444091796875e-05, -0.0004673004150390625, 0.0, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -6.103515625e-05, -3.8862031942699105e-05, 0.0, -4.00543212890625e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00067901611328125, -7.62939453125e-06, -8.58306884765625e-05, 0.0, -0.0002231597900390625, 0.0, -2.09808349609375e-05, -1.2874562344222795e-05, -0.0010128021240234375, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0023708343505859375, -5.7220458984375e-06, -0.000209808349609375, -7.62939453125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.0053863525390625, -2.0146166207268834e-05, -0.003911375999450684, -2.3841855067985307e-07, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.0018596649169921875, -0.0003833770751953125, -0.0004119873046875, 0.0, -0.0009937286376953125, -6.079665126890177e-06, -0.0015960931777954102, 0.0, -0.0005908854654990137, -1.9073486328125e-06, -0.0047702789306640625, -0.0001010894775390625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0098801851272583, 0.0, -8.58306884765625e-05, -1.52587890625e-05, -0.000713348388671875, -7.62939453125e-06, -0.0001392364501953125, -1.9073486328125e-06, -8.58306884765625e-05, -0.0012149810791015625, -3.814697265625e-06, -0.00011551380157470703, -3.0517578125e-05, -0.004654884338378906, -7.62939453125e-06, -0.0005396604537963867, 0.0, -0.006850242614746094, -0.0004062652587890625, -2.09808349609375e-05, -6.67572021484375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.010035514831542969, -2.3126602172851562e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001163482666015625, 0.0, -0.0013856887817382812, -1.5497195136049413e-06, -0.003182053565979004, -5.7220458984375e-06, -0.0053653717041015625, -0.000484466552734375, -1.9073486328125e-06, -0.0017728805541992188, -2.09808349609375e-05, -2.09808349609375e-05, -0.00017547607421875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.0072956085205078125, -9.5367431640625e-06, -0.019354939460754395, 0.0, -0.0004634857177734375, -0.0031728744506835938, -3.814697265625e-06, -0.0284881591796875, -3.933906555175781e-06, -0.0010700225830078125, -6.866455078125e-05, -2.47955322265625e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0003814697265625, -1.9073486328125e-06, -1.2225494384765625, -7.390969585685525e-06, -0.0006277561187744141, 0.0, -1.9073486328125e-06, -0.0005626678466796875, -0.0002994537353515625, -0.05658348649740219, -2.9206255931057967e-05, -8.7738037109375e-05, 0.0, -0.0002384185791015625, -9.5367431640625e-06, -0.00026702880859375, -5.7220458984375e-06, -0.000385284423828125, 0.0, -4.9591064453125e-05, -7.62939453125e-05, 0.0, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -0.0001506805419921875, 0.0, -1.9073486328125e-06, -0.0003337860107421875, -1.9073486328125e-06, -0.0007457733154296875, -0.005504608154296875, -0.0001430511474609375, -0.0004062652587890625, -8.392333984375e-05, -0.0001773834228515625, -3.4332275390625e-05, -2.6702880859375e-05, -7.62939453125e-06, -0.00010645389556884766, 0.0, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0017242431640625, -1.33514404296875e-05, -0.0010986328125, -3.814697265625e-06, -0.001514434814453125, -4.649161837733118e-06, -0.0004080533981323242, 0.0, -0.00046651516458950937, 0.0, -0.0047779083251953125, -0.0055866241455078125, -1.52587890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.015185832977294922, 0.0], "choice_history": [55, 124, 221, 63, 103, "Cleave", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -4.366756800269457, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Cleave", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 3}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 2}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}, "hole1": [{"_type": "GtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Cleave", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001220703125, -7.62939453125e-06, -2.2172740500536747e-05, -0.00013637541269417852, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0002595186233520508, -1.3947486877441406e-05, 0.0, -0.007565498352050781, -0.007755279541015625, -7.43865966796875e-05, -4.327203714638017e-05, -8.344646857949556e-07, -0.00013231286720838398, -3.2186049793381244e-05, -0.01263892650604248, -0.0013027191162109375, -0.000453948974609375, -0.0002880096435546875, -0.00020623207092285156, 0.0, -8.58306884765625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.1682510375976562e-05, -1.9073486328125e-06, -0.03538703918457031, -1.1444091796875e-05, -0.0004673004150390625, 0.0, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -6.103515625e-05, -3.8862031942699105e-05, 0.0, -4.00543212890625e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00067901611328125, -7.62939453125e-06, -8.58306884765625e-05, 0.0, -0.0002231597900390625, 0.0, -2.09808349609375e-05, -1.2874562344222795e-05, -0.0010128021240234375, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0023708343505859375, -5.7220458984375e-06, -0.000209808349609375, -7.62939453125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.0053863525390625, -2.0146166207268834e-05, -0.003911375999450684, -2.3841855067985307e-07, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.0018596649169921875, -0.0003833770751953125, -0.0004119873046875, 0.0, -0.0009937286376953125, -6.079665126890177e-06, -0.0015960931777954102, 0.0, -0.0005908854654990137, -1.9073486328125e-06, -0.0047702789306640625, -0.0001010894775390625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0098801851272583, 0.0, -8.58306884765625e-05, -1.52587890625e-05, -0.000713348388671875, -7.62939453125e-06, -0.0001392364501953125, -1.9073486328125e-06, -8.58306884765625e-05, -0.0012149810791015625, -3.814697265625e-06, -0.00011551380157470703, -3.0517578125e-05, -0.004654884338378906, -7.62939453125e-06, -0.0005396604537963867, 0.0, -0.006850242614746094, -0.0004062652587890625, -2.09808349609375e-05, -6.67572021484375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.010035514831542969, -2.3126602172851562e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001163482666015625, 0.0, -0.0013856887817382812, -1.5497195136049413e-06, -0.003182053565979004, -5.7220458984375e-06, -0.0053653717041015625, -0.000484466552734375, -1.9073486328125e-06, -0.0017728805541992188, -2.09808349609375e-05, -2.09808349609375e-05, -0.00017547607421875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.0072956085205078125, -9.5367431640625e-06, -0.019354939460754395, 0.0, -0.0004634857177734375, -0.0031728744506835938, -3.814697265625e-06, -0.0284881591796875, -3.933906555175781e-06, -0.0010700225830078125, -6.866455078125e-05, -2.47955322265625e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0003814697265625, -1.9073486328125e-06, -1.2225494384765625, -7.390969585685525e-06, -0.0006277561187744141, 0.0, -1.9073486328125e-06, -0.0005626678466796875, -0.0002994537353515625, -2.901733160018921, -0.00010347366333007812, -0.0001239776611328125, -1.9073486328125e-06, -0.0005970001220703125, -2.288818359375e-05, -0.0003108978271484375, -7.62939453125e-06, -0.0003910064697265625, 0.0, -3.814697265625e-05, -8.0108642578125e-05, 0.0, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.000118255615234375, 0.0, -1.9073486328125e-06, -0.0004100799560546875, -1.9073486328125e-06, -0.0007343292236328125, -0.005336761474609375, -0.0001430511474609375, -0.0003986358642578125, -8.58306884765625e-05, -0.00017547607421875, -3.62396240234375e-05, -2.6702880859375e-05, -9.5367431640625e-06, -0.00010848045349121094, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.001705169677734375, -1.33514404296875e-05, -0.0011043548583984375, -3.814697265625e-06, -0.001506805419921875, -4.649161837733118e-06, -0.0004080533981323242, 0.0, -0.00046270116581581533, 0.0, -0.0046825408935546875, -0.005530357360839844, -1.52587890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.014857888221740723, 0.0], "choice_history": [55, 124, 221, 63, 103, "Cleave", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -4.398124458796872, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Cleave", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 2}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}, "hole1": [{"_type": "GtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Cleave", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001220703125, -7.62939453125e-06, -2.2172740500536747e-05, -0.00013637541269417852, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0002595186233520508, -1.3947486877441406e-05, 0.0, -0.007565498352050781, -0.007755279541015625, -7.43865966796875e-05, -4.327203714638017e-05, -8.344646857949556e-07, -0.00013231286720838398, -3.2186049793381244e-05, -0.01263892650604248, -0.0013027191162109375, -0.000453948974609375, -0.0002880096435546875, -0.00020623207092285156, 0.0, -8.58306884765625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.1682510375976562e-05, -1.9073486328125e-06, -0.03538703918457031, -1.1444091796875e-05, -0.0004673004150390625, 0.0, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -6.103515625e-05, -3.8862031942699105e-05, 0.0, -4.00543212890625e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00067901611328125, -7.62939453125e-06, -8.58306884765625e-05, 0.0, -0.0002231597900390625, 0.0, -2.09808349609375e-05, -1.2874562344222795e-05, -0.0010128021240234375, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0023708343505859375, -5.7220458984375e-06, -0.000209808349609375, -7.62939453125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.0053863525390625, -2.0146166207268834e-05, -0.003911375999450684, -2.3841855067985307e-07, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.0018596649169921875, -0.0003833770751953125, -0.0004119873046875, 0.0, -0.0009937286376953125, -6.079665126890177e-06, -0.0015960931777954102, 0.0, -0.0005908854654990137, -1.9073486328125e-06, -0.0047702789306640625, -0.0001010894775390625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0098801851272583, 0.0, -8.58306884765625e-05, -1.52587890625e-05, -0.000713348388671875, -7.62939453125e-06, -0.0001392364501953125, -1.9073486328125e-06, -8.58306884765625e-05, -0.0012149810791015625, -3.814697265625e-06, -0.00011551380157470703, -3.0517578125e-05, -0.004654884338378906, -7.62939453125e-06, -0.0005396604537963867, 0.0, -0.006850242614746094, -0.0004062652587890625, -2.09808349609375e-05, -6.67572021484375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.010035514831542969, -2.3126602172851562e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001163482666015625, 0.0, -0.0013856887817382812, -1.5497195136049413e-06, -0.003182053565979004, -5.7220458984375e-06, -0.0053653717041015625, -0.000484466552734375, -1.9073486328125e-06, -0.0017728805541992188, -2.09808349609375e-05, -2.09808349609375e-05, -0.00017547607421875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.0072956085205078125, -9.5367431640625e-06, -0.019354939460754395, 0.0, -0.0004634857177734375, -0.0031728744506835938, -3.814697265625e-06, -4.009681701660156, -9.5367431640625e-06, -0.0001583099365234375, -0.0001163482666015625, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0005435943603515625, 0.0, -0.11042308807373047, -1.1563301086425781e-05, -0.023401379585266113, 0.0, -0.001056671142578125, -0.00882720947265625, -7.62939453125e-06, -0.027738571166992188, -3.933906555175781e-06, -0.0019378662109375, -0.0003204345703125, -0.000823974609375, 0.0, -0.0001697540283203125, -0.00051116943359375, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, 0.0, -0.0027933120727539062, 0.0, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -0.0006961822509765625, -0.0051364898681640625, -0.000152587890625, -0.0003948211669921875, -7.43865966796875e-05, -0.000194549560546875, -3.0517578125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -9.083747863769531e-05, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0014781951904296875, -1.52587890625e-05, -0.001247406005859375, -3.814697265625e-06, -0.0014324188232421875, -4.649161837733118e-06, -0.00041556358337402344, 0.0, -0.0004618656530510634, 0.0, -0.0047283172607421875, -0.0054416656494140625, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.016002178192138672, 0.0], "choice_history": [55, 124, 221, 63, 103, "Cleave", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minions)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -4.6141296667094025, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Cleave", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 2}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}, "hole1": [{"_type": "GtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Cleave", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001220703125, -7.62939453125e-06, -2.2172740500536747e-05, -0.00013637541269417852, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0002595186233520508, -1.3947486877441406e-05, 0.0, -0.007565498352050781, -0.007755279541015625, -7.43865966796875e-05, -4.327203714638017e-05, -8.344646857949556e-07, -0.00013231286720838398, -3.2186049793381244e-05, -0.01263892650604248, -0.0013027191162109375, -0.000453948974609375, -0.0002880096435546875, -0.00020623207092285156, 0.0, -8.58306884765625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.1682510375976562e-05, -1.9073486328125e-06, -0.03538703918457031, -1.1444091796875e-05, -0.0004673004150390625, 0.0, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -6.103515625e-05, -3.8862031942699105e-05, 0.0, -4.00543212890625e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00067901611328125, -7.62939453125e-06, -8.58306884765625e-05, 0.0, -0.0002231597900390625, 0.0, -2.09808349609375e-05, -1.2874562344222795e-05, -0.0010128021240234375, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0023708343505859375, -5.7220458984375e-06, -0.000209808349609375, -7.62939453125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.0053863525390625, -2.0146166207268834e-05, -0.003911375999450684, -2.3841855067985307e-07, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.0018596649169921875, -0.0003833770751953125, -0.0004119873046875, 0.0, -0.0009937286376953125, -6.079665126890177e-06, -0.0015960931777954102, 0.0, -0.0005908854654990137, -1.9073486328125e-06, -0.0047702789306640625, -0.0001010894775390625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0098801851272583, 0.0, -8.58306884765625e-05, -1.52587890625e-05, -0.000713348388671875, -7.62939453125e-06, -0.0001392364501953125, -1.9073486328125e-06, -8.58306884765625e-05, -0.0012149810791015625, -3.814697265625e-06, -0.00011551380157470703, -3.0517578125e-05, -0.004654884338378906, -7.62939453125e-06, -0.0005396604537963867, 0.0, -0.006850242614746094, -0.0004062652587890625, -2.09808349609375e-05, -6.67572021484375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.010035514831542969, -2.3126602172851562e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001163482666015625, 0.0, -0.0013856887817382812, -1.5497195136049413e-06, -0.003182053565979004, -5.7220458984375e-06, -0.0053653717041015625, -0.000484466552734375, -1.9073486328125e-06, -0.0017728805541992188, -2.09808349609375e-05, -2.09808349609375e-05, -0.00017547607421875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.0072956085205078125, -9.5367431640625e-06, -0.019354939460754395, 0.0, -0.0004634857177734375, -0.0031728744506835938, -3.814697265625e-06, -0.0284881591796875, -3.933906555175781e-06, -0.0010700225830078125, -6.866455078125e-05, -2.47955322265625e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0003814697265625, -1.9073486328125e-06, -0.3626232147216797, -1.537799835205078e-05, -0.022002220153808594, 0.0, -0.0008296966552734375, -0.00760650634765625, -3.814697265625e-06, -3.951007843017578, -7.62939453125e-06, -0.021848678588867188, -0.0010223388671875, -0.001987457275390625, 0.0, -0.000152587890625, -0.0009870529174804688, 0.0, -0.00012969970703125, 0.0, 0.0, -0.004618644714355469, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.9073486328125e-06, -0.0010833740234375, -0.005107879638671875, -0.00018310546875, -0.000377655029296875, -8.0108642578125e-05, -0.000217437744140625, -3.24249267578125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -8.893013000488281e-05, 0.0, -7.62939453125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.001434326171875, -1.52587890625e-05, -0.0012836456298828125, -3.814697265625e-06, -0.0014324188232421875, -4.649161837733118e-06, -0.00041365623474121094, 0.0, -0.0004569798766169697, 0.0, -0.00481414794921875, -0.0053806304931640625, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.015246987342834473, 0.0], "choice_history": [55, 124, 221, 63, 103, "Cleave", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minions)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -4.829646774142439, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Cleave", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "extend", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "current_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 2}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}, "hole1": [{"_type": "GtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Cleave", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001220703125, -7.62939453125e-06, -2.2172740500536747e-05, -0.00013637541269417852, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0002595186233520508, -1.3947486877441406e-05, 0.0, -0.007565498352050781, -0.007755279541015625, -7.43865966796875e-05, -4.327203714638017e-05, -8.344646857949556e-07, -0.00013231286720838398, -3.2186049793381244e-05, -0.01263892650604248, -0.0013027191162109375, -0.000453948974609375, -0.0002880096435546875, -0.00020623207092285156, 0.0, -8.58306884765625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.1682510375976562e-05, -1.9073486328125e-06, -3.6898536682128906, -0.0001010894775390625, -0.0004138946533203125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -2.2888036255608313e-05, 0.0, -6.67572021484375e-05, -4.768370445162873e-07, -1.9073486328125e-06, -0.000518798828125, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.0002765655517578125, 0.0, -2.47955322265625e-05, -1.41858699862496e-05, -0.0001430511474609375, -4.76837158203125e-05, -0.0003948211669921875, -2.6702880859375e-05, -1.9073486328125e-06, -0.0807342529296875, -1.9073486328125e-06, -9.918212890625e-05, -9.5367431640625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.0001354217529296875, 0.0, -0.027283668518066406, -1.6569954823353328e-05, -0.003783702850341797, -1.1920928244535389e-07, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -0.002101898193359375, -0.0003643035888671875, -0.0003910064697265625, 0.0, -0.0009937286376953125, -5.722038622479886e-06, -0.001475214958190918, 0.0, -0.0005799242644570768, -1.9073486328125e-06, -0.040378570556640625, -0.0003490447998046875, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.002105712890625, 0.0, -0.0049419403076171875, -1.9073486328125e-06, -0.011458158493041992, 0.0, -1.71661376953125e-05, -0.000179290771484375, 0.0, -0.007434844970703125, -0.0001220703125, -0.0016994476318359375, -9.5367431640625e-06, -0.0011005401611328125, -9.07182547962293e-05, -0.543454647064209, -2.3841855067985307e-07, -0.00012481189332902431, 0.0, -0.022658348083496094, -0.0002288818359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0075054168701171875, -2.861018856492592e-06, -0.035094261169433594, -9.5367431640625e-06, -0.0015382766723632812, 0.0, -0.0992116928100586, -0.13585376739501953, -4.00543212890625e-05, -0.000125885009765625, -3.814697265625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0002079010009765625, -7.62939453125e-06, -0.0055179595947265625, -1.311301275563892e-06, -0.0003553628921508789, 0.0, -1.9073486328125e-06, -0.0004730224609375, -0.0002155303955078125, -0.025116385892033577, -2.6106794393854216e-05, -0.000156402587890625, 0.0, -0.00021839141845703125, -3.933906555175781e-06, -0.000308990478515625, -2.09808349609375e-05, -0.00045871734619140625, 0.0, -6.67572021484375e-05, -7.82012939453125e-05, 0.0, -5.53131103515625e-05, 0.0, -1.9073486328125e-06, -0.00017547607421875, 0.0, -1.9073486328125e-06, -0.00025177001953125, -1.9073486328125e-06, -0.00077056884765625, -0.005573272705078125, -0.0001373291015625, -0.000400543212890625, -8.96453857421875e-05, -0.000194549560546875, -3.24249267578125e-05, -2.6702880859375e-05, -7.62939453125e-06, -0.0001004934310913086, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0017566680908203125, -1.33514404296875e-05, -0.0011234283447265625, -3.814697265625e-06, -0.0015010833740234375, -4.649161837733118e-06, -0.0004080533981323242, 0.0, -0.0004712810041382909, 0.0, -0.0050182342529296875, -0.005593299865722656, -1.52587890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.01515340805053711, 0.0], "choice_history": [55, 124, 221, 63, 103, "Cleave", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -4.8671474481572545, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Cleave", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 1}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}, "hole1": [{"_type": "GtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Cleave", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001220703125, -7.62939453125e-06, -2.2172740500536747e-05, -0.00013637541269417852, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0002595186233520508, -1.3947486877441406e-05, 0.0, -0.007565498352050781, -0.007755279541015625, -7.43865966796875e-05, -4.327203714638017e-05, -8.344646857949556e-07, -0.00013231286720838398, -3.2186049793381244e-05, -0.01263892650604248, -0.0013027191162109375, -0.000453948974609375, -0.0002880096435546875, -0.00020623207092285156, 0.0, -8.58306884765625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.1682510375976562e-05, -1.9073486328125e-06, -0.03538703918457031, -1.1444091796875e-05, -0.0004673004150390625, 0.0, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -6.103515625e-05, -3.8862031942699105e-05, 0.0, -4.00543212890625e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00067901611328125, -7.62939453125e-06, -8.58306884765625e-05, 0.0, -0.0002231597900390625, 0.0, -2.09808349609375e-05, -1.2874562344222795e-05, -0.0010128021240234375, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0023708343505859375, -5.7220458984375e-06, -0.000209808349609375, -7.62939453125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.0053863525390625, -2.0146166207268834e-05, -0.003911375999450684, -2.3841855067985307e-07, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.0018596649169921875, -0.0003833770751953125, -0.0004119873046875, 0.0, -0.0009937286376953125, -6.079665126890177e-06, -0.0015960931777954102, 0.0, -0.0005908854654990137, -1.9073486328125e-06, -0.0047702789306640625, -0.0001010894775390625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0098801851272583, 0.0, -8.58306884765625e-05, -1.52587890625e-05, -0.000713348388671875, -7.62939453125e-06, -0.0001392364501953125, -1.9073486328125e-06, -8.58306884765625e-05, -0.0012149810791015625, -3.814697265625e-06, -0.00011551380157470703, -3.0517578125e-05, -0.004654884338378906, -7.62939453125e-06, -0.0005396604537963867, 0.0, -0.006850242614746094, -0.0004062652587890625, -2.09808349609375e-05, -6.67572021484375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.010035514831542969, -2.3126602172851562e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001163482666015625, 0.0, -0.0013856887817382812, -1.5497195136049413e-06, -0.003182053565979004, -5.7220458984375e-06, -0.0053653717041015625, -0.000484466552734375, -1.9073486328125e-06, -0.0017728805541992188, -2.09808349609375e-05, -2.09808349609375e-05, -0.00017547607421875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.0072956085205078125, -9.5367431640625e-06, -0.019354939460754395, 0.0, -0.0004634857177734375, -0.0031728744506835938, -3.814697265625e-06, -0.0284881591796875, -3.933906555175781e-06, -0.0010700225830078125, -6.866455078125e-05, -2.47955322265625e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0003814697265625, -1.9073486328125e-06, -0.3626232147216797, -1.537799835205078e-05, -0.022002220153808594, 0.0, -0.0008296966552734375, -0.00760650634765625, -3.814697265625e-06, -0.027396202087402344, -3.933906555175781e-06, -0.002223968505859375, -0.0003681182861328125, -0.0007791519165039062, 0.0, -0.0001583099365234375, -0.0005207061767578125, -1.9073486328125e-06, -3.814697265625e-05, 0.0, 0.0, -0.0021772384643554688, 0.0, -1.9073486328125e-06, -0.00016021728515625, 0.0, -0.00069427490234375, -0.005161285400390625, -0.000156402587890625, -0.00038909912109375, -7.82012939453125e-05, -0.0001888275146484375, -3.0517578125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -9.083747863769531e-05, 0.0, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0014896392822265625, -1.52587890625e-05, -0.0012416839599609375, -3.814697265625e-06, -0.0014362335205078125, -4.649161837733118e-06, -0.00041556358337402344, 0.0, -0.0004616273217834532, 0.0, -0.00470733642578125, -0.005451202392578125, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.216798782348633, 0.0], "choice_history": [55, 124, 221, 63, 103, "Cleave", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n"}, {"score": -5.247588945034352, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Cleave", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 2}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}, "hole1": [{"_type": "GtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Cleave", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001220703125, -7.62939453125e-06, -2.2172740500536747e-05, -0.00013637541269417852, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0002595186233520508, -1.3947486877441406e-05, 0.0, -0.007565498352050781, -0.007755279541015625, -7.43865966796875e-05, -4.327203714638017e-05, -8.344646857949556e-07, -0.00013231286720838398, -3.2186049793381244e-05, -0.01263892650604248, -0.0013027191162109375, -0.000453948974609375, -0.0002880096435546875, -0.00020623207092285156, 0.0, -8.58306884765625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.1682510375976562e-05, -1.9073486328125e-06, -0.03538703918457031, -1.1444091796875e-05, -0.0004673004150390625, 0.0, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -6.103515625e-05, -3.8862031942699105e-05, 0.0, -4.00543212890625e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00067901611328125, -7.62939453125e-06, -8.58306884765625e-05, 0.0, -0.0002231597900390625, 0.0, -2.09808349609375e-05, -1.2874562344222795e-05, -0.0010128021240234375, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0023708343505859375, -5.7220458984375e-06, -0.000209808349609375, -7.62939453125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.0053863525390625, -2.0146166207268834e-05, -0.003911375999450684, -2.3841855067985307e-07, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.0018596649169921875, -0.0003833770751953125, -0.0004119873046875, 0.0, -0.0009937286376953125, -6.079665126890177e-06, -0.0015960931777954102, 0.0, -0.0005908854654990137, -1.9073486328125e-06, -0.0047702789306640625, -0.0001010894775390625, -2.86102294921875e-05, -1.9073486328125e-06, -4.899565696716309, -2.6345078367739916e-05, -0.03527355194091797, -0.0055084228515625, -0.12041473388671875, 0.0, -0.0001163482666015625, 0.0, -0.005222320556640625, -9.536738616588991e-07, -0.0008165836334228516, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -0.0067806243896484375, -0.0003032684326171875, -0.0003528594970703125, 0.0, -0.001018524169921875, -6.19888032815652e-06, -0.0009777545928955078, 0.0, -0.0003879701835103333, 0.0, -0.0023450851440429688, -0.00014495849609375, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.0002307891845703125, -1.9073486328125e-06, -0.003692626953125, -4.0531076592742465e-06, -9.965896606445312e-05, 0.0, -1.9073486328125e-06, -0.0003566741943359375, -0.000240325927734375, -0.030599482357501984, -2.300734558957629e-05, -0.0001544952392578125, 0.0, -0.00033473968505859375, -2.0265579223632812e-06, -0.00029754638671875, -2.288818359375e-05, -0.000347137451171875, 0.0, -8.0108642578125e-05, -7.82012939453125e-05, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -1.9073486328125e-06, -0.000255584716796875, -1.9073486328125e-06, -0.000789642333984375, -0.0053653717041015625, -0.0001392364501953125, -0.0004062652587890625, -8.7738037109375e-05, -0.000186920166015625, -3.4332275390625e-05, -2.6702880859375e-05, -7.62939453125e-06, -0.0001024007797241211, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.001728057861328125, -1.33514404296875e-05, -0.00110626220703125, -3.814697265625e-06, -0.00150299072265625, -4.649161837733118e-06, -0.0004080533981323242, 0.0, -0.0004672294307965785, 0.0, -0.00494384765625, -0.005600929260253906, -1.52587890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.015431880950927734, 0.0], "choice_history": [55, 124, 221, 63, 103, "Cleave", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -5.434386136876299, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Cleave", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 2}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}, "hole1": [{"_type": "GtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Cleave", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001220703125, -7.62939453125e-06, -2.2172740500536747e-05, -0.00013637541269417852, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0002595186233520508, -1.3947486877441406e-05, 0.0, -0.007565498352050781, -0.007755279541015625, -7.43865966796875e-05, -4.327203714638017e-05, -8.344646857949556e-07, -0.00013231286720838398, -3.2186049793381244e-05, -4.78120231628418, -0.000385284423828125, -0.0003528594970703125, -6.4849853515625e-05, -0.0001322031021118164, 0.0, -8.0108642578125e-05, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.47955322265625e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1682510375976562e-05, -1.9073486328125e-06, -0.03645801544189453, -1.1444091796875e-05, -0.0004711151123046875, 0.0, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -5.91278076171875e-05, -3.600102718337439e-05, 0.0, -3.814697265625e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00067138671875, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.00022125244140625, 0.0, -2.09808349609375e-05, -1.2993770724278875e-05, -0.00106048583984375, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0023822784423828125, -5.7220458984375e-06, -0.0002079010009765625, -7.62939453125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.0053577423095703125, -2.0146166207268834e-05, -0.00391995906829834, -2.3841855067985307e-07, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.001861572265625, -0.0003871917724609375, -0.0004100799560546875, 0.0, -0.0009937286376953125, -6.079665126890177e-06, -0.001595139503479004, 0.0, -0.000590528070461005, -1.9073486328125e-06, -0.0044078826904296875, -9.918212890625e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.009896397590637207, 0.0, -8.58306884765625e-05, -1.52587890625e-05, -0.0007266998291015625, -7.62939453125e-06, -0.0001373291015625, -1.9073486328125e-06, -8.58306884765625e-05, -0.001216888427734375, -3.814697265625e-06, -0.00011742115020751953, -3.0517578125e-05, -0.004651069641113281, -7.62939453125e-06, -0.0005321502685546875, 0.0, -0.0069122314453125, -0.0004062652587890625, -2.09808349609375e-05, -6.67572021484375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.010015487670898438, -2.3126602172851562e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001163482666015625, 0.0, -0.0013856887817382812, -1.5497195136049413e-06, -0.003182053565979004, -5.7220458984375e-06, -0.005367279052734375, -0.000484466552734375, -1.9073486328125e-06, -0.001773834228515625, -2.09808349609375e-05, -2.09808349609375e-05, -0.00017547607421875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.007288932800292969, -9.5367431640625e-06, -0.019356846809387207, 0.0, -0.0004634857177734375, -0.0031709671020507812, -3.814697265625e-06, -0.028491973876953125, -3.933906555175781e-06, -0.001068115234375, -6.866455078125e-05, -2.47955322265625e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0003814697265625, -1.9073486328125e-06, -0.3627185821533203, -1.537799835205078e-05, -0.021994590759277344, 0.0, -0.0008296966552734375, -0.007605552673339844, -3.814697265625e-06, -0.02739715576171875, -3.933906555175781e-06, -0.002223968505859375, -0.0003681182861328125, -0.0007791519165039062, 0.0, -0.0001583099365234375, -0.0005207061767578125, -1.9073486328125e-06, -3.814697265625e-05, 0.0, 0.0, -0.0021791458129882812, 0.0, -1.9073486328125e-06, -0.00016021728515625, 0.0, -0.00069427490234375, -0.005161285400390625, -0.000156402587890625, -0.00038909912109375, -7.82012939453125e-05, -0.0001888275146484375, -3.0517578125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -9.083747863769531e-05, 0.0, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0014896392822265625, -1.52587890625e-05, -0.0012416839599609375, -3.814697265625e-06, -0.0014362335205078125, -4.649161837733118e-06, -0.00041556358337402344, 0.0, -0.0004616273217834532, 0.0, -0.00470733642578125, -0.005450248718261719, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.015948772430419922, 0.0], "choice_history": [55, 124, 221, 63, 103, "Cleave", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Cleave", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON\n            )\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -5.451319458346177, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Cleave", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 2}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}, "hole1": [{"_type": "GtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Cleave", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001220703125, -7.62939453125e-06, -2.2172740500536747e-05, -0.00013637541269417852, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0002595186233520508, -1.3947486877441406e-05, 0.0, -0.007565498352050781, -0.007755279541015625, -7.43865966796875e-05, -4.327203714638017e-05, -8.344646857949556e-07, -0.00013231286720838398, -3.2186049793381244e-05, -0.01263892650604248, -0.0013027191162109375, -0.000453948974609375, -0.0002880096435546875, -0.00020623207092285156, 0.0, -8.58306884765625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.1682510375976562e-05, -1.9073486328125e-06, -0.03538703918457031, -1.1444091796875e-05, -0.0004673004150390625, 0.0, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -6.103515625e-05, -3.8862031942699105e-05, 0.0, -4.00543212890625e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00067901611328125, -7.62939453125e-06, -8.58306884765625e-05, 0.0, -0.0002231597900390625, 0.0, -2.09808349609375e-05, -1.2874562344222795e-05, -0.0010128021240234375, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0023708343505859375, -5.7220458984375e-06, -0.000209808349609375, -7.62939453125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.0053863525390625, -2.0146166207268834e-05, -0.003911375999450684, -2.3841855067985307e-07, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.0018596649169921875, -0.0003833770751953125, -0.0004119873046875, 0.0, -0.0009937286376953125, -6.079665126890177e-06, -0.0015960931777954102, 0.0, -0.0005908854654990137, -1.9073486328125e-06, -0.0047702789306640625, -0.0001010894775390625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0098801851272583, 0.0, -8.58306884765625e-05, -1.52587890625e-05, -0.000713348388671875, -7.62939453125e-06, -0.0001392364501953125, -1.9073486328125e-06, -8.58306884765625e-05, -0.0012149810791015625, -3.814697265625e-06, -0.00011551380157470703, -3.0517578125e-05, -0.004654884338378906, -7.62939453125e-06, -0.0005396604537963867, 0.0, -0.006850242614746094, -0.0004062652587890625, -2.09808349609375e-05, -6.67572021484375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.010035514831542969, -2.3126602172851562e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001163482666015625, 0.0, -0.0013856887817382812, -1.5497195136049413e-06, -0.003182053565979004, -5.7220458984375e-06, -0.0053653717041015625, -0.000484466552734375, -1.9073486328125e-06, -0.0017728805541992188, -2.09808349609375e-05, -2.09808349609375e-05, -0.00017547607421875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.0072956085205078125, -9.5367431640625e-06, -0.019354939460754395, 0.0, -0.0004634857177734375, -0.0031728744506835938, -3.814697265625e-06, -0.0284881591796875, -3.933906555175781e-06, -0.0010700225830078125, -6.866455078125e-05, -2.47955322265625e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0003814697265625, -1.9073486328125e-06, -0.3626232147216797, -1.537799835205078e-05, -4.7647223472595215, 0.0, -0.0003070831298828125, -0.01672649383544922, 0.0, -0.06232643127441406, -3.933906555175781e-06, -0.00118255615234375, -0.0002994537353515625, -0.000782012939453125, 0.0, -0.0001506805419921875, -0.000499725341796875, -1.9073486328125e-06, -3.814697265625e-05, 0.0, 0.0, -0.0015878677368164062, 0.0, -1.9073486328125e-06, -0.0001544952392578125, 0.0, -0.0007495880126953125, -0.0052318572998046875, -0.0001506805419921875, -0.000396728515625, -7.82012939453125e-05, -0.00019073486328125, -2.86102294921875e-05, -2.86102294921875e-05, -1.9073486328125e-06, -9.47713851928711e-05, 0.0, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.001499176025390625, -1.52587890625e-05, -0.001251220703125, -3.814697265625e-06, -0.0014438629150390625, -4.649161837733118e-06, -0.00041556358337402344, 0.0, -0.0004622231354005635, 0.0, -0.004756927490234375, -0.005475044250488281, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.016225337982177734, 0.0], "choice_history": [55, 124, 221, 63, 103, "Cleave", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "append", "<EOS>", 208, 37, 125, "minion", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.append(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -5.529927256143139, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Cleave", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 2}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}, "hole1": [{"_type": "GtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Cleave", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001220703125, -7.62939453125e-06, -2.2172740500536747e-05, -0.00013637541269417852, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0002595186233520508, -1.3947486877441406e-05, 0.0, -0.007565498352050781, -0.007755279541015625, -7.43865966796875e-05, -4.327203714638017e-05, -8.344646857949556e-07, -0.00013231286720838398, -3.2186049793381244e-05, -0.01263892650604248, -0.0013027191162109375, -0.000453948974609375, -0.0002880096435546875, -0.00020623207092285156, 0.0, -8.58306884765625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.1682510375976562e-05, -1.9073486328125e-06, -0.03538703918457031, -1.1444091796875e-05, -0.0004673004150390625, 0.0, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -6.103515625e-05, -3.8862031942699105e-05, 0.0, -4.00543212890625e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00067901611328125, -7.62939453125e-06, -8.58306884765625e-05, 0.0, -0.0002231597900390625, 0.0, -2.09808349609375e-05, -1.2874562344222795e-05, -0.0010128021240234375, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0023708343505859375, -5.7220458984375e-06, -0.000209808349609375, -7.62939453125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.0053863525390625, -2.0146166207268834e-05, -0.003911375999450684, -2.3841855067985307e-07, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.0018596649169921875, -0.0003833770751953125, -0.0004119873046875, 0.0, -0.0009937286376953125, -6.079665126890177e-06, -0.0015960931777954102, 0.0, -0.0005908854654990137, -1.9073486328125e-06, -0.0047702789306640625, -0.0001010894775390625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0098801851272583, 0.0, -8.58306884765625e-05, -1.52587890625e-05, -0.000713348388671875, -7.62939453125e-06, -0.0001392364501953125, -1.9073486328125e-06, -8.58306884765625e-05, -0.0012149810791015625, -3.814697265625e-06, -0.00011551380157470703, -3.0517578125e-05, -0.004654884338378906, -7.62939453125e-06, -0.0005396604537963867, 0.0, -0.006850242614746094, -0.0004062652587890625, -2.09808349609375e-05, -6.67572021484375e-05, -3.0517578125e-05, -3.814697265625e-06, -4.864555835723877, -1.52587890625e-05, -2.09808349609375e-05, -6.103515625e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.012089729309082031, -1.7881377516459906e-06, -0.005650043487548828, -1.9073486328125e-06, -0.008037567138671875, -0.000980377197265625, -1.9073486328125e-06, -0.0024137496948242188, -9.5367431640625e-06, -2.6702880859375e-05, -0.0002346038818359375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0003795623779296875, 0.0, -0.007970809936523438, -9.5367431640625e-06, -0.01919376850128174, 0.0, -0.000453948974609375, -0.0033807754516601562, -3.814697265625e-06, -0.028362274169921875, -3.933906555175781e-06, -0.00109100341796875, -6.67572021484375e-05, -2.47955322265625e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.00038909912109375, -1.9073486328125e-06, -0.3542814254760742, -1.537799835205078e-05, -0.022011756896972656, 0.0, -0.0008392333984375, -0.0076389312744140625, -3.814697265625e-06, -0.027408599853515625, -3.933906555175781e-06, -0.002223968505859375, -0.0003662109375, -0.0007772445678710938, 0.0, -0.0001583099365234375, -0.0005207061767578125, -1.9073486328125e-06, -3.814697265625e-05, 0.0, 0.0, -0.0022706985473632812, 0.0, -1.9073486328125e-06, -0.00016021728515625, 0.0, -0.00069427490234375, -0.0051555633544921875, -0.000156402587890625, -0.00038909912109375, -7.82012939453125e-05, -0.0001888275146484375, -3.0517578125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -9.083747863769531e-05, 0.0, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.001491546630859375, -1.52587890625e-05, -0.0012416839599609375, -3.814697265625e-06, -0.0014362335205078125, -4.649161837733118e-06, -0.00041556358337402344, 0.0, -0.0004617464728653431, 0.0, -0.004711151123046875, -0.005452156066894531, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.01593923568725586, 0.0], "choice_history": [55, 124, 221, 63, 103, "Cleave", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minions = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -5.621505739783231, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Cleave", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 2}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}, "hole1": [{"_type": "GtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Cleave", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001220703125, -7.62939453125e-06, -2.2172740500536747e-05, -0.00013637541269417852, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0002595186233520508, -1.3947486877441406e-05, 0.0, -0.007565498352050781, -0.007755279541015625, -7.43865966796875e-05, -4.327203714638017e-05, -8.344646857949556e-07, -0.00013231286720838398, -3.2186049793381244e-05, -0.01263892650604248, -0.0013027191162109375, -0.000453948974609375, -0.0002880096435546875, -0.00020623207092285156, 0.0, -8.58306884765625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.1682510375976562e-05, -1.9073486328125e-06, -0.03538703918457031, -1.1444091796875e-05, -0.0004673004150390625, 0.0, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -6.103515625e-05, -3.8862031942699105e-05, 0.0, -4.00543212890625e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00067901611328125, -7.62939453125e-06, -8.58306884765625e-05, 0.0, -0.0002231597900390625, 0.0, -2.09808349609375e-05, -1.2874562344222795e-05, -0.0010128021240234375, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0023708343505859375, -5.7220458984375e-06, -0.000209808349609375, -7.62939453125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.0053863525390625, -2.0146166207268834e-05, -0.003911375999450684, -2.3841855067985307e-07, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.0018596649169921875, -0.0003833770751953125, -0.0004119873046875, 0.0, -0.0009937286376953125, -6.079665126890177e-06, -0.0015960931777954102, 0.0, -0.0005908854654990137, -1.9073486328125e-06, -0.0047702789306640625, -0.0001010894775390625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0098801851272583, 0.0, -8.58306884765625e-05, -1.52587890625e-05, -0.000713348388671875, -7.62939453125e-06, -0.0001392364501953125, -1.9073486328125e-06, -8.58306884765625e-05, -0.0012149810791015625, -3.814697265625e-06, -0.00011551380157470703, -3.0517578125e-05, -0.004654884338378906, -7.62939453125e-06, -0.0005396604537963867, 0.0, -0.006850242614746094, -0.0004062652587890625, -2.09808349609375e-05, -6.67572021484375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.010035514831542969, -2.3126602172851562e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001163482666015625, 0.0, -0.0013856887817382812, -1.5497195136049413e-06, -0.003182053565979004, -5.7220458984375e-06, -0.0053653717041015625, -0.000484466552734375, -1.9073486328125e-06, -0.0017728805541992188, -2.09808349609375e-05, -2.09808349609375e-05, -0.00017547607421875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.0072956085205078125, -9.5367431640625e-06, -4.674540996551514, 0.0, -0.0002155303955078125, -0.005408287048339844, 0.0, -0.07099246978759766, -2.1457672119140625e-06, -0.00138092041015625, -6.4849853515625e-05, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0004024505615234375, -1.9073486328125e-06, -0.6175260543823242, -1.1563301086425781e-05, -0.022327423095703125, 0.0, -0.000667572021484375, -0.008221626281738281, -3.814697265625e-06, -0.02721118927001953, -3.933906555175781e-06, -0.002216339111328125, -0.0003662109375, -0.0007600784301757812, 0.0, -0.0001583099365234375, -0.0005168914794921875, -1.9073486328125e-06, -3.814697265625e-05, 0.0, 0.0, -0.00196075439453125, 0.0, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -0.00069427490234375, -0.00518035888671875, -0.000156402587890625, -0.0003871917724609375, -7.82012939453125e-05, -0.0001850128173828125, -3.0517578125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -9.083747863769531e-05, 0.0, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0015010833740234375, -1.52587890625e-05, -0.0012378692626953125, -3.814697265625e-06, -0.001438140869140625, -4.649161837733118e-06, -0.00041556358337402344, 0.0, -0.0004616273217834532, 0.0, -0.0047054290771484375, -0.005452156066894531, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.015891551971435547, 0.0], "choice_history": [55, 124, 221, 63, 103, "Cleave", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "append", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.append(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"score": -5.765394772323077, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Cleave", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 1}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}, "hole1": [{"_type": "GtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Cleave", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001220703125, -7.62939453125e-06, -2.2172740500536747e-05, -0.00013637541269417852, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0002595186233520508, -1.3947486877441406e-05, 0.0, -0.007565498352050781, -0.007755279541015625, -7.43865966796875e-05, -4.327203714638017e-05, -8.344646857949556e-07, -0.00013231286720838398, -3.2186049793381244e-05, -0.01263892650604248, -0.0013027191162109375, -0.000453948974609375, -0.0002880096435546875, -0.00020623207092285156, 0.0, -8.58306884765625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.1682510375976562e-05, -1.9073486328125e-06, -0.03538703918457031, -1.1444091796875e-05, -0.0004673004150390625, 0.0, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -6.103515625e-05, -3.8862031942699105e-05, 0.0, -4.00543212890625e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00067901611328125, -7.62939453125e-06, -8.58306884765625e-05, 0.0, -0.0002231597900390625, 0.0, -2.09808349609375e-05, -1.2874562344222795e-05, -0.0010128021240234375, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0023708343505859375, -5.7220458984375e-06, -0.000209808349609375, -7.62939453125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.0053863525390625, -2.0146166207268834e-05, -0.003911375999450684, -2.3841855067985307e-07, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.0018596649169921875, -0.0003833770751953125, -0.0004119873046875, 0.0, -0.0009937286376953125, -6.079665126890177e-06, -0.0015960931777954102, 0.0, -0.0005908854654990137, -1.9073486328125e-06, -0.0047702789306640625, -0.0001010894775390625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0098801851272583, 0.0, -8.58306884765625e-05, -1.52587890625e-05, -0.000713348388671875, -7.62939453125e-06, -0.0001392364501953125, -1.9073486328125e-06, -8.58306884765625e-05, -0.0012149810791015625, -3.814697265625e-06, -0.00011551380157470703, -3.0517578125e-05, -0.004654884338378906, -7.62939453125e-06, -0.0005396604537963867, 0.0, -0.006850242614746094, -0.0004062652587890625, -2.09808349609375e-05, -6.67572021484375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.010035514831542969, -2.3126602172851562e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001163482666015625, 0.0, -0.0013856887817382812, -1.5497195136049413e-06, -0.003182053565979004, -5.7220458984375e-06, -0.0053653717041015625, -0.000484466552734375, -1.9073486328125e-06, -0.0017728805541992188, -2.09808349609375e-05, -2.09808349609375e-05, -0.00017547607421875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.0072956085205078125, -9.5367431640625e-06, -0.019354939460754395, 0.0, -0.0004634857177734375, -0.0031728744506835938, -3.814697265625e-06, -0.0284881591796875, -3.933906555175781e-06, -0.0010700225830078125, -6.866455078125e-05, -2.47955322265625e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0003814697265625, -1.9073486328125e-06, -1.2225494384765625, -7.390969585685525e-06, -0.0006277561187744141, 0.0, -1.9073486328125e-06, -0.0005626678466796875, -0.0002994537353515625, -0.05658348649740219, -2.9206255931057967e-05, -8.7738037109375e-05, 0.0, -0.0002384185791015625, -9.5367431640625e-06, -0.00026702880859375, -5.7220458984375e-06, -0.000385284423828125, 0.0, -4.9591064453125e-05, -7.62939453125e-05, 0.0, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -0.0001506805419921875, 0.0, -1.9073486328125e-06, -0.0003337860107421875, -1.9073486328125e-06, -0.0007457733154296875, -0.005504608154296875, -0.0001430511474609375, -0.0004062652587890625, -8.392333984375e-05, -0.0001773834228515625, -3.4332275390625e-05, -2.6702880859375e-05, -7.62939453125e-06, -0.00010645389556884766, 0.0, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0017242431640625, -1.33514404296875e-05, -0.0010986328125, -3.814697265625e-06, -0.001514434814453125, -4.649161837733118e-06, -0.0004080533981323242, 0.0, -0.00046651516458950937, 0.0, -0.0047779083251953125, -0.0055866241455078125, -1.52587890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.258854389190674, 0.0], "choice_history": [55, 124, 221, 63, 103, "Cleave", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n"}, {"score": -6.910287829519113, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Cleave", "hole1": 2}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"hole2": [{"_type": "Num", "n": 2}], "_type": "Template21", "hole0": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}, "hole1": [{"_type": "GtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"id": "game", "_type": "Name"}}, "args": [{"id": "minions", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"id": "minions", "_type": "Name"}}, "args": [{"id": "minion", "_type": "Name"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"_type": "Call", "func": {"id": "range", "_type": "Name"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Cleave", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001220703125, -7.62939453125e-06, -2.2172740500536747e-05, -0.00013637541269417852, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0002595186233520508, -1.3947486877441406e-05, 0.0, -5.061656951904297, -0.007689476013183594, -7.05718994140625e-05, -3.45700973412022e-05, -1.4305104514278355e-06, -4.148390507907607e-05, -7.402637129416689e-05, -0.027234554290771484, -0.0001068115234375, -0.0004024505615234375, -0.000118255615234375, -0.00044655799865722656, 0.0, -6.29425048828125e-05, -0.000186920166015625, -1.9073486328125e-06, -2.110004425048828e-05, 0.0, -8.392333984375e-05, -6.306171417236328e-05, 0.0, -1.9073486328125e-06, -7.748603820800781e-06, -2.0265579223632812e-06, -0.05361366271972656, -1.1444091796875e-05, -0.0003261566162109375, -1.9073486328125e-06, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -5.91278076171875e-05, -3.635865141404793e-05, 0.0, -4.1961669921875e-05, -3.576278118089249e-07, -1.9073486328125e-06, -0.000644683837890625, -9.5367431640625e-06, -8.7738037109375e-05, 0.0, -0.000209808349609375, 0.0, -2.288818359375e-05, -1.2755353964166716e-05, -0.000980377197265625, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0023298263549804688, -7.62939453125e-06, -0.000209808349609375, -7.62939453125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.000179290771484375, 0.0, -0.005400657653808594, -1.9907753085135482e-05, -0.003932356834411621, -2.3841855067985307e-07, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.0018901824951171875, -0.000392913818359375, -0.000408172607421875, 0.0, -0.0009937286376953125, -6.079665126890177e-06, -0.001595139503479004, 0.0, -0.0005908854654990137, -1.9073486328125e-06, -0.00521087646484375, -9.918212890625e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00969231128692627, 0.0, -8.96453857421875e-05, -1.33514404296875e-05, -0.00063323974609375, -7.62939453125e-06, -0.0001392364501953125, -1.9073486328125e-06, -8.392333984375e-05, -0.0011882781982421875, -3.814697265625e-06, -0.00011551380157470703, -3.0517578125e-05, -0.0046539306640625, -7.62939453125e-06, -0.0005739927291870117, 0.0, -0.006793975830078125, -0.00040435791015625, -2.09808349609375e-05, -6.67572021484375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.009937286376953125, -2.5033950805664062e-05, -0.00031280517578125, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001163482666015625, 0.0, -0.001384735107421875, -1.5497195136049413e-06, -0.003185868263244629, -5.7220458984375e-06, -0.005397796630859375, -0.000476837158203125, -1.9073486328125e-06, -0.0017852783203125, -2.09808349609375e-05, -2.09808349609375e-05, -0.00017547607421875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0003986358642578125, 0.0, -0.00730133056640625, -9.5367431640625e-06, -0.019417881965637207, 0.0, -0.00046539306640625, -0.0031633377075195312, -3.814697265625e-06, -0.02850341796875, -3.933906555175781e-06, -0.0010700225830078125, -6.866455078125e-05, -2.47955322265625e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0003833770751953125, -1.9073486328125e-06, -0.3626708984375, -1.537799835205078e-05, -0.02201080322265625, 0.0, -0.000827789306640625, -0.0076084136962890625, -3.814697265625e-06, -0.02739238739013672, -3.933906555175781e-06, -0.02154064178466797, -7.62939453125e-05, -0.00440216064453125, 0.0, -4.76837158203125e-05, -0.0003757476806640625, -1.9073486328125e-06, -0.0001201629638671875, 0.0, 0.0, -0.0053081512451171875, 0.0, -1.9073486328125e-06, -0.0002079010009765625, 0.0, -0.0007610321044921875, -0.0047664642333984375, -0.0001316070556640625, -0.0003986358642578125, -6.866455078125e-05, -0.0003070831298828125, -2.86102294921875e-05, -2.6702880859375e-05, -1.9073486328125e-06, -7.37905502319336e-05, 0.0, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.00152587890625, -1.71661376953125e-05, -0.0012836456298828125, -1.9073486328125e-06, -0.0014019012451171875, -4.5299530029296875e-06, -0.00041365623474121094, 0.0, -0.00045864604180678725, 0.0, -0.0052433013916015625, -0.005421638488769531, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.015254616737365723, 0.0, -0.0005245208740234375, -0.0001373291015625, -0.0004940032958984375, 0.0, -0.001628875732421875, -0.0001659393310546875, 0.0, -8.392333984375e-05, 0.0, -3.4332275390625e-05, -8.7738037109375e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.5741443634033203, -7.62939453125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -8.392333984375e-05, -3.373611980350688e-05, 0.0, -3.24249267578125e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0010890960693359375, -7.62939453125e-06, -9.34600830078125e-05, 0.0, -0.0001983642578125, 0.0, -2.288818359375e-05, -1.6570085790590383e-05, -0.0026311874389648438, -1.9073486328125e-06, -4.57763671875e-05, -0.000522613525390625, -9.5367431640625e-06, -0.0027408599853515625, -7.62939453125e-06, -0.00022125244140625, -7.62939453125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.0001697540283203125, 0.0, -0.006899833679199219, -3.099393507000059e-05, -0.002652764320373535, -2.3841855067985307e-07, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.0019588470458984375, -0.0003681182861328125, -0.0004329681396484375, 0.0, -0.0010128021240234375, -6.079665126890177e-06, -0.0015590190887451172, 0.0, -0.0005912429187446833, -1.9073486328125e-06, -0.005462646484375, -8.392333984375e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.00998985767364502, 0.0, -0.000110626220703125, -1.33514404296875e-05, -0.0005931854248046875, -9.5367431640625e-06, -0.000141143798828125, -1.9073486328125e-06, -8.392333984375e-05, -0.0010986328125, -3.814697265625e-06, -0.00011551380157470703, -3.0517578125e-05, -0.004654884338378906, -7.62939453125e-06, -0.0006464720354415476, 0.0, -0.0067081451416015625, -0.0004119873046875, -1.9073486328125e-05, -6.67572021484375e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.00977325439453125, -2.3126602172851562e-05, -0.000316619873046875, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001163482666015625, 0.0, -0.001377105712890625, -1.4305104514278355e-06, -0.0032001733779907227, -5.7220458984375e-06, -0.005359649658203125, -0.0004787445068359375, -1.9073486328125e-06, -0.0017642974853515625, -2.09808349609375e-05, -2.288818359375e-05, -0.00017547607421875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.00040435791015625, 0.0, -0.007311820983886719, -9.5367431640625e-06, -0.019466519355773926, 0.0, -0.00046539306640625, -0.00316619873046875, -3.814697265625e-06, -0.028491973876953125, -3.933906555175781e-06, -0.0010585784912109375, -6.866455078125e-05, -2.288818359375e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.000385284423828125, -1.9073486328125e-06, -0.3601875305175781, -1.537799835205078e-05, -0.022069931030273438, 0.0, -0.000823974609375, -0.007628440856933594, -3.814697265625e-06, -0.02736663818359375, -3.933906555175781e-06], "choice_history": [55, 124, 221, 63, 103, "Cleave", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 224, 83, 176, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "2", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n"}, {"score": -21.868425369262695, "model_output": {"_type": "Module", "body": []}, "score_history": [-7.62939453125e-06, -7.62939453125e-06, -21.868410110473633], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 19}
{"beams": [{"score": -0.32631918914173497, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Consecration", "hole1": 4}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Consecration", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -3.4332275390625e-05, -2.09808349609375e-05, -3.015949550899677e-05, -0.00015401840209960938, -9.5367431640625e-06, -4.76837158203125e-05, -3.814697265625e-06, -7.82012939453125e-05, -8.821487426757812e-05, -5.7220458984375e-06, -0.0004558563232421875, -0.0712137222290039, -0.0001163482666015625, -3.9934315282152966e-05, -4.887576324108522e-06, -2.706014311115723e-05, -1.4066622497921344e-05, -0.0023660659790039062, 0.0, -0.015104293823242188, -1.9073486328125e-06, -1.263618378288811e-05, 0.0, -8.58306884765625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -5.733966827392578e-05, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -2.0265579223632812e-06, -0.050772666931152344, -5.7220458984375e-06, -0.00014495849609375, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0002275705337524414, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0014591217041015625, -1.71661376953125e-05, -0.000102996826171875, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -4.160325261182152e-05, -0.006834983825683594, -4.38690185546875e-05, -9.72747802734375e-05, 0.0, -0.000942230224609375, -3.7431014789035544e-05, -0.0001430511474609375, -0.0003910064697265625, -0.0001773834228515625, 0.0, -2.47955322265625e-05, 0.0, -0.0004558563232421875, -1.2516897186287679e-05, -8.630752563476562e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-05, -2.288818359375e-05, -0.00038909912109375, -1.9073486328125e-06, -0.0006351470947265625, -2.384185791015625e-06, -0.0009124279022216797, 0.0, -0.00016915719606913626, 0.0, -0.0001983642578125, -0.0007648468017578125, -3.814697265625e-06, -4.1961669921875e-05, -1.1444091796875e-05, -6.67572021484375e-05, -1.52587890625e-05, -0.000324249267578125, -3.814697265625e-06, -0.0026694536209106445, -8.940656698541716e-06, -0.00025773048400878906, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0002918243408203125, -0.0001697540283203125, -0.0020786458626389503, -1.4781950994802173e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.00033664703369140625, -1.1920928244535389e-07, -0.13533973693847656, -3.814697265625e-06, -3.62396240234375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005702972412109375, -7.62939453125e-06, -0.00200653076171875, -7.62939453125e-06, -0.001285552978515625, -3.814697265625e-06, -0.0024051666259765625, -2.1457672119140625e-06, -0.006669402122497559, 0.0, -0.008612626232206821, -3.576278118089249e-07, -0.0038979053497314453, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001735687255859375, -0.0002880096435546875, -0.002991664921864867, -2.384185791015625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0001220703125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Consecration", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -2.856103484127061, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Consecration", "hole1": 4}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Consecration", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -3.4332275390625e-05, -2.09808349609375e-05, -3.015949550899677e-05, -0.00015401840209960938, -9.5367431640625e-06, -4.76837158203125e-05, -3.814697265625e-06, -7.82012939453125e-05, -8.821487426757812e-05, -5.7220458984375e-06, -0.0004558563232421875, -0.0712137222290039, -0.0001163482666015625, -3.9934315282152966e-05, -4.887576324108522e-06, -2.706014311115723e-05, -1.4066622497921344e-05, -0.0023660659790039062, 0.0, -0.015104293823242188, -1.9073486328125e-06, -1.263618378288811e-05, 0.0, -8.58306884765625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -5.733966827392578e-05, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -2.0265579223632812e-06, -0.050772666931152344, -5.7220458984375e-06, -0.00014495849609375, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0002275705337524414, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0014591217041015625, -1.71661376953125e-05, -0.000102996826171875, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -4.160325261182152e-05, -0.006834983825683594, -4.38690185546875e-05, -9.72747802734375e-05, 0.0, -0.000942230224609375, -3.7431014789035544e-05, -0.0001430511474609375, -0.0003910064697265625, -0.0001773834228515625, 0.0, -2.47955322265625e-05, 0.0, -0.0004558563232421875, -1.2516897186287679e-05, -8.630752563476562e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-05, -2.288818359375e-05, -0.00038909912109375, -1.9073486328125e-06, -0.0006351470947265625, -2.384185791015625e-06, -0.0009124279022216797, 0.0, -0.00016915719606913626, 0.0, -0.0001983642578125, -0.0007648468017578125, -3.814697265625e-06, -4.1961669921875e-05, -1.1444091796875e-05, -6.67572021484375e-05, -1.52587890625e-05, -0.000324249267578125, -3.814697265625e-06, -0.0026694536209106445, -8.940656698541716e-06, -0.00025773048400878906, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0002918243408203125, -0.0001697540283203125, -0.0020786458626389503, -1.4781950994802173e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.00033664703369140625, -1.1920928244535389e-07, -2.1889219284057617, -3.4332275390625e-05, -0.0006389617919921875, 0.0, -0.0002422332763671875, -7.867804924899247e-06, -0.12999725341796875, -1.9073486328125e-06, -0.12645721435546875, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.005496978759765625, -3.576278118089249e-07, -0.0014684200286865234, -1.1920928244535389e-07, -0.0005400137742981315, -1.9073486328125e-05, -0.0001850128173828125, -0.0003643035888671875, -1.9073486328125e-06, -2.47955322265625e-05, -2.47955322265625e-05, -2.09808349609375e-05, -0.000171661376953125, -0.001117706298828125, -1.1444091796875e-05, -0.00030732154846191406, -5.483612312673358e-06, -0.23540127277374268, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0004291534423828125, -0.0001201629638671875, -0.0017370773712173104, -1.072883515007561e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00046539306640625, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Consecration", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score": -3.992660735705286, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Consecration", "hole1": 4}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "extend", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "current_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Consecration", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -3.4332275390625e-05, -2.09808349609375e-05, -3.015949550899677e-05, -0.00015401840209960938, -9.5367431640625e-06, -4.76837158203125e-05, -3.814697265625e-06, -7.82012939453125e-05, -8.821487426757812e-05, -5.7220458984375e-06, -0.0004558563232421875, -0.0712137222290039, -0.0001163482666015625, -3.9934315282152966e-05, -4.887576324108522e-06, -2.706014311115723e-05, -1.4066622497921344e-05, -0.0023660659790039062, 0.0, -0.015104293823242188, -1.9073486328125e-06, -1.263618378288811e-05, 0.0, -8.58306884765625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -5.733966827392578e-05, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -2.0265579223632812e-06, -3.1583786010742188, -3.4332275390625e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001068115234375, -9.5367431640625e-06, -2.288818359375e-05, -1.9073486328125e-06, -8.797645568847656e-05, 0.0, -1.9073486328125e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.001079559326171875, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -4.291450386517681e-05, -0.011068344116210938, -3.814697265625e-06, -3.0517578125e-05, -0.00035858154296875, -5.7220458984375e-06, -0.02715587615966797, -2.0265579223632812e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.00034332275390625, -2.2053474822314456e-05, -0.0006124973297119141, -1.1920928244535389e-07, -6.29425048828125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.4332275390625e-05, -2.47955322265625e-05, -0.0002803802490234375, 0.0, -0.000392913818359375, -4.291534423828125e-06, -0.0013146400451660156, 0.0, -0.00016999198123812675, -1.9073486328125e-06, -0.0035266876220703125, -0.00019073486328125, -2.09808349609375e-05, -5.7220458984375e-06, -3.814697265625e-06, -8.58306884765625e-05, -0.010004043579101562, -1.9073486328125e-06, -0.0009145736694335938, -1.9073486328125e-06, -0.008153080940246582, 0.0, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.0051422119140625, -6.29425048828125e-05, -0.0003719329833984375, -4.00543212890625e-05, -0.000370025634765625, -6.449222564697266e-05, -0.20875275135040283, -5.960462772236497e-07, -0.0023773908615112305, 0.0, -0.00438690185546875, -9.72747802734375e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0007486343383789062, -2.3841855067985307e-07, -0.0009784698486328125, -0.006374359130859375, -0.0018768310546875, -1.9073486328125e-06, -0.035239219665527344, -0.3925313949584961, -9.5367431640625e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.0001506805419921875, -5.7220458984375e-06, -0.0001811981201171875, -3.814697265625e-06, -0.0034476518630981445, -8.702239938429557e-06, -0.011282563209533691, 0.0, -1.9073486328125e-06, -0.0001850128173828125, -0.00017547607421875, -0.002140976954251528, -1.025199526338838e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00030040740966796875, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Consecration", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score": -3.996600219805046, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Consecration", "hole2": "DRUID", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Consecration", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -3.4332275390625e-05, -2.09808349609375e-05, -3.015949550899677e-05, -0.00015401840209960938, -9.5367431640625e-06, -4.76837158203125e-05, -3.814697265625e-06, -7.82012939453125e-05, -8.821487426757812e-05, -5.7220458984375e-06, -0.0004558563232421875, -2.8135948181152344, -2.6702880859375e-05, -8.725739462533966e-05, -4.291534423828125e-06, -0.00018010901112575084, -1.1920928244535389e-07, -0.6879673004150391, 0.0, -0.0010631084442138672, 0.0, -6.4849853515625e-05, -0.00018310546875, -1.1444091796875e-05, -0.000133514404296875, -3.814697265625e-06, -1.33514404296875e-05, -0.0007190704345703125, 0.0, -5.91278076171875e-05, 0.0, -0.009194374084472656, -3.814697265625e-06, -0.12388324737548828, -2.288818359375e-05, -0.000431060791015625, 0.0, -0.00038909912109375, -0.00014495849609375, -5.7220458984375e-06, -9.548664093017578e-05, 0.0, 0.0, -3.0517578125e-05, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -2.1457672119140625e-06, -0.16388607025146484, -3.814697265625e-06, -0.0001506805419921875, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.0004794597625732422, 0.0, -1.71661376953125e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.0015850067138671875, -1.9073486328125e-05, -0.000110626220703125, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.0517578125e-05, -4.196094232611358e-05, -0.008355140686035156, -4.00543212890625e-05, -8.7738037109375e-05, 0.0, -0.0010358095169067383, -3.58813522325363e-05, -0.0001277923583984375, -0.00043487548828125, -0.000179290771484375, 0.0, -2.288818359375e-05, 0.0, -0.000461578369140625, -1.2278481335670222e-05, -8.440017700195312e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-05, -2.288818359375e-05, -0.0003757476806640625, -1.9073486328125e-06, -0.0006313323974609375, -2.384185791015625e-06, -0.0009124279022216797, 0.0, -0.00016748826601542532, 0.0, -0.0001964569091796875, -0.0007686614990234375, -3.814697265625e-06, -4.00543212890625e-05, -1.1444091796875e-05, -6.866455078125e-05, -1.52587890625e-05, -0.0003204345703125, -3.814697265625e-06, -0.0026808977127075195, -8.940656698541716e-06, -0.00025963783264160156, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0002918243408203125, -0.0001697540283203125, -0.002082457300275564, -1.4781950994802173e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.00033664703369140625, -1.1920928244535389e-07, -0.14127635955810547, -3.814697265625e-06, -4.00543212890625e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005817413330078125, -7.62939453125e-06, -0.0021152496337890625, -7.62939453125e-06, -0.001251220703125, -3.814697265625e-06, -0.002410888671875, -2.1457672119140625e-06, -0.006669402122497559, 0.0, -0.008632772602140903, -3.576278118089249e-07, -0.003809213638305664, -1.9073486328125e-06, -1.1444091796875e-05, -0.00017547607421875, -0.0002880096435546875, -0.0029821281787008047, -2.384185791015625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0001220703125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Consecration", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Consecration", "<EOS>", "4", "<EOS>", "DRUID", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.277976224020463, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Consecration", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -3.4332275390625e-05, -2.09808349609375e-05, -3.015949550899677e-05, -0.00015401840209960938, -9.5367431640625e-06, -4.76837158203125e-05, -3.814697265625e-06, -7.82012939453125e-05, -8.821487426757812e-05, -5.7220458984375e-06, -0.0004558563232421875, -2.8135948181152344, -2.6702880859375e-05, -8.725739462533966e-05, -4.291534423828125e-06, -0.00018010901112575084, -1.1920928244535389e-07, -0.9189949035644531, 0.0, -0.013321518898010254, 0.0, -3.62396240234375e-05, -0.0003414154052734375, -1.33514404296875e-05, -0.000179290771484375, -3.814697265625e-06, -3.24249267578125e-05, -0.0004100799560546875, 0.0, -6.4849853515625e-05, 0.0, -0.008870124816894531, -3.814697265625e-06, -0.1516895294189453, -2.09808349609375e-05, -0.000568389892578125, 0.0, -0.0003643035888671875, -0.0001468658447265625, -5.7220458984375e-06, -9.548664093017578e-05, 0.0, 0.0, -3.0517578125e-05, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -2.1457672119140625e-06, -0.17418670654296875, -3.814697265625e-06, -0.000152587890625, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.0004699230194091797, 0.0, -1.71661376953125e-05, -4.768370445162873e-07, -1.71661376953125e-05, -0.0015859603881835938, -1.9073486328125e-05, -0.000110626220703125, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -3.0517578125e-05, -4.2080147977685556e-05, -0.008359909057617188, -4.00543212890625e-05, -8.7738037109375e-05, 0.0, -0.0010319948196411133, -3.58813522325363e-05, -0.0001277923583984375, -0.00043487548828125, -0.000179290771484375, 0.0, -2.288818359375e-05, 0.0, -0.000461578369140625, -1.2278481335670222e-05, -8.440017700195312e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-05, -2.288818359375e-05, -0.0003757476806640625, -1.9073486328125e-06, -0.0006313323974609375, -2.384185791015625e-06, -0.0009124279022216797, 0.0, -0.00016748826601542532, 0.0, -0.0001964569091796875, -0.0007686614990234375, -3.814697265625e-06, -4.00543212890625e-05, -1.1444091796875e-05, -6.866455078125e-05, -1.52587890625e-05, -0.0003204345703125, -3.814697265625e-06, -0.0026818513870239258, -8.940656698541716e-06, -0.00025963783264160156, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0002918243408203125, -0.000171661376953125, -0.002082576509565115, -1.4781950994802173e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.00033664703369140625, -1.1920928244535389e-07, -0.1415882110595703, -3.814697265625e-06, -3.814697265625e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005817413330078125, -7.62939453125e-06, -0.0021152496337890625, -7.62939453125e-06, -0.0012493133544921875, -3.814697265625e-06, -0.0024127960205078125, -2.1457672119140625e-06, -0.006667494773864746, 0.0, -0.008632653392851353, -3.576278118089249e-07, -0.003809213638305664, -1.9073486328125e-06, -1.1444091796875e-05, -0.00017547607421875, -0.000286102294921875, -0.002980340039357543, -2.384185791015625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0001220703125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Consecration", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.122708100695732, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Consecration", "hole1": 4}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Frozen"}]}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Consecration", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -3.4332275390625e-05, -2.09808349609375e-05, -3.015949550899677e-05, -0.00015401840209960938, -9.5367431640625e-06, -4.76837158203125e-05, -3.814697265625e-06, -7.82012939453125e-05, -8.821487426757812e-05, -5.7220458984375e-06, -0.0004558563232421875, -0.0712137222290039, -0.0001163482666015625, -3.9934315282152966e-05, -4.887576324108522e-06, -2.706014311115723e-05, -1.4066622497921344e-05, -0.0023660659790039062, 0.0, -0.015104293823242188, -1.9073486328125e-06, -1.263618378288811e-05, 0.0, -8.58306884765625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -5.733966827392578e-05, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -2.0265579223632812e-06, -0.050772666931152344, -5.7220458984375e-06, -0.00014495849609375, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0002275705337524414, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0014591217041015625, -1.71661376953125e-05, -0.000102996826171875, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -4.160325261182152e-05, -0.006834983825683594, -4.38690185546875e-05, -9.72747802734375e-05, 0.0, -0.000942230224609375, -3.7431014789035544e-05, -0.0001430511474609375, -0.0003910064697265625, -0.0001773834228515625, 0.0, -2.47955322265625e-05, 0.0, -0.0004558563232421875, -1.2516897186287679e-05, -8.630752563476562e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-05, -2.288818359375e-05, -0.00038909912109375, -1.9073486328125e-06, -0.0006351470947265625, -2.384185791015625e-06, -0.0009124279022216797, 0.0, -0.00016915719606913626, 0.0, -0.0001983642578125, -0.0007648468017578125, -3.814697265625e-06, -4.1961669921875e-05, -1.1444091796875e-05, -6.67572021484375e-05, -1.52587890625e-05, -0.000324249267578125, -3.814697265625e-06, -0.0026694536209106445, -8.940656698541716e-06, -0.00025773048400878906, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0002918243408203125, -0.0001697540283203125, -0.0020786458626389503, -1.4781950994802173e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.00033664703369140625, -1.1920928244535389e-07, -2.1889219284057617, -3.4332275390625e-05, -0.0006389617919921875, 0.0, -0.0002422332763671875, -7.867804924899247e-06, -0.12999725341796875, -1.9073486328125e-06, -0.12645721435546875, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.005496978759765625, -3.576278118089249e-07, -0.0014684200286865234, -1.1920928244535389e-07, -0.0005400137742981315, -1.9073486328125e-05, -0.0001850128173828125, -0.0003643035888671875, -1.9073486328125e-06, -2.47955322265625e-05, -2.47955322265625e-05, -2.09808349609375e-05, -0.000171661376953125, -0.001117706298828125, -1.1444091796875e-05, -0.00030732154846191406, -5.483612312673358e-06, -2.447503089904785, -2.0265579223632812e-06, -1.33514404296875e-05, -0.0011005401611328125, -0.00392913818359375, -0.0022792816162109375, -3.814697265625e-06, -0.031069278717041016, -1.4066622497921344e-05, -5.91278076171875e-05, -5.14984130859375e-05, -1.52587890625e-05, -0.018676910549402237, -6.651876901742071e-05], "choice_history": [55, 124, 221, 63, 103, "Consecration", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Frozen", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n"}, {"score": -5.361486372316456, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Consecration", "hole1": 4}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "extend", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "current_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "test": {"comparators": [{"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"id": "minion", "_type": "Name"}}}, "ops": [{"_type": "IsNot"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Consecration", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -3.4332275390625e-05, -2.09808349609375e-05, -3.015949550899677e-05, -0.00015401840209960938, -9.5367431640625e-06, -4.76837158203125e-05, -3.814697265625e-06, -7.82012939453125e-05, -8.821487426757812e-05, -5.7220458984375e-06, -0.0004558563232421875, -0.0712137222290039, -0.0001163482666015625, -3.9934315282152966e-05, -4.887576324108522e-06, -2.706014311115723e-05, -1.4066622497921344e-05, -0.0023660659790039062, 0.0, -0.015104293823242188, -1.9073486328125e-06, -1.263618378288811e-05, 0.0, -8.58306884765625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -5.733966827392578e-05, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -2.0265579223632812e-06, -3.1583786010742188, -3.4332275390625e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001068115234375, -9.5367431640625e-06, -2.288818359375e-05, -1.9073486328125e-06, -8.797645568847656e-05, 0.0, -1.9073486328125e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.001079559326171875, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -4.291450386517681e-05, -0.011068344116210938, -3.814697265625e-06, -3.0517578125e-05, -0.00035858154296875, -5.7220458984375e-06, -0.02715587615966797, -2.0265579223632812e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.00034332275390625, -2.2053474822314456e-05, -0.0006124973297119141, -1.1920928244535389e-07, -6.29425048828125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.4332275390625e-05, -2.47955322265625e-05, -0.0002803802490234375, 0.0, -0.000392913818359375, -4.291534423828125e-06, -0.0013146400451660156, 0.0, -0.00016999198123812675, -1.9073486328125e-06, -0.0035266876220703125, -0.00019073486328125, -2.09808349609375e-05, -5.7220458984375e-06, -3.814697265625e-06, -8.58306884765625e-05, -0.010004043579101562, -1.9073486328125e-06, -0.0009145736694335938, -1.9073486328125e-06, -0.008153080940246582, 0.0, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.0051422119140625, -6.29425048828125e-05, -0.0003719329833984375, -4.00543212890625e-05, -0.000370025634765625, -6.449222564697266e-05, -0.20875275135040283, -5.960462772236497e-07, -0.0023773908615112305, 0.0, -0.00438690185546875, -9.72747802734375e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0007486343383789062, -2.3841855067985307e-07, -0.0009784698486328125, -0.006374359130859375, -0.0018768310546875, -1.9073486328125e-06, -0.035239219665527344, -1.1281557083129883, -0.0001621246337890625, -0.01659679412841797, -0.00194549560546875, -0.000431060791015625, 0.0, -0.11420059204101562, 0.0, -7.62939453125e-05, -3.814697265625e-05, -0.18348121643066406, -1.1920928244535389e-07, -0.013892292976379395, 0.0, -0.018845558166503906, -1.9073486328125e-06, -2.86102294921875e-05, -0.26845264434814453, -0.01776599884033203, -2.09808349609375e-05, 0.0, -0.0001277923583984375, 0.0, -0.0005216598510742188, 0.0, -0.0067138671875, 0.0, -0.0001678466796875, -0.0008001327514648438, -4.38690185546875e-05, -4.76837158203125e-05, -1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.0020189285278320312, 0.0, -0.0015468597412109375, -4.768370445162873e-07, -0.0006123781204223633, 0.0, -1.9073486328125e-06, -0.0003185272216796875, -0.0001773834228515625, -0.0017659070435911417, -1.3113020031596534e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00024700164794921875, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Consecration", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 67, 111, 15, 104, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 7, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            if minion.card.minion_type is not MINION_TYPE.DEMON:\n                minion.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.644215623084165, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Consecration", "hole1": 4}, {"hole3": "target_func", "hole0": "2", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "ClassDef", "name": "Consecration", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -3.4332275390625e-05, -2.09808349609375e-05, -3.015949550899677e-05, -0.00015401840209960938, -9.5367431640625e-06, -4.76837158203125e-05, -3.814697265625e-06, -7.82012939453125e-05, -8.821487426757812e-05, -5.7220458984375e-06, -0.0004558563232421875, -0.0712137222290039, -0.0001163482666015625, -3.9934315282152966e-05, -4.887576324108522e-06, -2.706014311115723e-05, -1.4066622497921344e-05, -0.0023660659790039062, 0.0, -4.245591163635254, -0.01264190673828125, -0.6325463652610779, 0.0, -0.01163826510310173, 0.0, -0.5953474044799805, 0.0, -0.05987989902496338, 0.0, -2.288818359375e-05, -0.0001010894775390625, -5.14984130859375e-05, -4.57763671875e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.0044460296630859375, 0.0, -8.7738037109375e-05, 0.0, -0.00705718994140625, -2.0265579223632812e-06], "choice_history": [55, 124, 221, 63, 103, "Consecration", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 80, 165, "2", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def __init__(self):\n        super().__init__('2', 4, CHARACTER_CLASS.PALADIN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n"}, {"score": -5.718142699791223, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Consecration", "hole1": 4}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Consecration", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -3.4332275390625e-05, -2.09808349609375e-05, -3.015949550899677e-05, -0.00015401840209960938, -9.5367431640625e-06, -4.76837158203125e-05, -3.814697265625e-06, -7.82012939453125e-05, -8.821487426757812e-05, -5.7220458984375e-06, -0.0004558563232421875, -0.0712137222290039, -0.0001163482666015625, -3.9934315282152966e-05, -4.887576324108522e-06, -2.706014311115723e-05, -1.4066622497921344e-05, -0.0023660659790039062, 0.0, -0.015104293823242188, -1.9073486328125e-06, -1.263618378288811e-05, 0.0, -8.58306884765625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -5.733966827392578e-05, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -2.0265579223632812e-06, -5.61265754699707, -2.47955322265625e-05, -3.0517578125e-05, 0.0, -4.1961669921875e-05, -2.47955322265625e-05, -3.814697265625e-06, -7.05718994140625e-05, -1.9073486328125e-06, -6.175041198730469e-05, 0.0, -2.288818359375e-05, -3.576278118089249e-07, -5.7220458984375e-06, -0.00046539306640625, -2.09808349609375e-05, -0.0001163482666015625, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -2.47955322265625e-05, -4.9947539082495496e-05, -0.0010471343994140625, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -0.002286553382873535, -8.177422569133341e-05, -0.0002593994140625, -0.0004482269287109375, -0.0001354217529296875, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.0006618499755859375, -1.2993727978027891e-05, -9.97781753540039e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-05, -2.47955322265625e-05, -0.00040435791015625, -1.9073486328125e-06, -0.0006427764892578125, -2.384185791015625e-06, -0.0009250640869140625, 0.0, -0.00016736905672587454, 0.0, -0.0002117156982421875, -0.0005931854248046875, -3.814697265625e-06, -4.00543212890625e-05, -1.1444091796875e-05, -6.4849853515625e-05, -1.52587890625e-05, -0.0002918243408203125, -3.814697265625e-06, -0.0024901628494262695, -9.179073458653875e-06, -0.00026154518127441406, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00029754638671875, -0.000171661376953125, -0.0021314211189746857, -1.4781950994802173e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.00034999847412109375, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Consecration", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.757085420194912, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Consecration", "hole2": "DRUID", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Consecration", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -3.4332275390625e-05, -2.09808349609375e-05, -3.015949550899677e-05, -0.00015401840209960938, -9.5367431640625e-06, -4.76837158203125e-05, -3.814697265625e-06, -7.82012939453125e-05, -8.821487426757812e-05, -5.7220458984375e-06, -0.0004558563232421875, -2.8135948181152344, -2.6702880859375e-05, -8.725739462533966e-05, -4.291534423828125e-06, -0.00018010901112575084, -1.1920928244535389e-07, -0.6879673004150391, 0.0, -0.0010631084442138672, 0.0, -6.4849853515625e-05, -0.00018310546875, -1.1444091796875e-05, -0.000133514404296875, -3.814697265625e-06, -1.33514404296875e-05, -0.0007190704345703125, 0.0, -5.91278076171875e-05, 0.0, -0.009194374084472656, -3.814697265625e-06, -2.185039520263672, -0.0058002471923828125, -3.0517578125e-05, -3.814697265625e-06, -0.012086868286132812, -3.814697265625e-06, -0.005835533142089844, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.008225440979003906, -2.0265579223632812e-06, -3.814697265625e-06, -0.013401985168457031, -5.53131103515625e-05, -0.01213073544204235, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.00017547607421875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Consecration", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Consecration", "<EOS>", "4", "<EOS>", "DRUID", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.506673480692797, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Consecration", "hole1": 4}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Consecration", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -3.4332275390625e-05, -2.09808349609375e-05, -3.015949550899677e-05, -0.00015401840209960938, -9.5367431640625e-06, -4.76837158203125e-05, -3.814697265625e-06, -7.82012939453125e-05, -8.821487426757812e-05, -5.7220458984375e-06, -0.0004558563232421875, -4.993806838989258, -0.0025272369384765625, -0.006236615125089884, -3.099436753473128e-06, -1.8000440832111053e-05, -1.0728830375228426e-06, -1.3642139434814453, -1.0728830375228426e-06, -0.06139850616455078, -0.04038429260253906, -3.814697265625e-06, -1.52587890625e-05, -0.0020694732666015625, -0.00014495849609375, -1.33514404296875e-05, -3.4332275390625e-05, -0.0016231536865234375, -2.3841855067985307e-07, -0.002254486083984375, 0.0, -0.007617114577442408, 0.0, -0.007352471351623535, -3.814697265625e-06, -7.62939453125e-06, -0.0023403167724609375, -0.00102996826171875, -0.012424553744494915, 0.0, -1.1444091796875e-05, 0.0, -0.00018310546875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Consecration", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Consecration", "<EOS>", "4", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.563959410726966, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Consecration", "hole1": 4}, {"hole3": "target_func", "hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "ClassDef", "name": "Consecration", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -3.4332275390625e-05, -2.09808349609375e-05, -3.015949550899677e-05, -0.00015401840209960938, -9.5367431640625e-06, -4.76837158203125e-05, -3.814697265625e-06, -7.82012939453125e-05, -8.821487426757812e-05, -5.7220458984375e-06, -0.0004558563232421875, -0.0712137222290039, -0.0001163482666015625, -3.9934315282152966e-05, -4.887576324108522e-06, -2.706014311115723e-05, -1.4066622497921344e-05, -0.0023660659790039062, 0.0, -4.245591163635254, -0.01264190673828125, -0.8627881407737732, 0.0, -0.0001414941216353327, 0.0, -1.1598434448242188, 0.0, -0.19701123237609863, 0.0, -1.9073486328125e-05, -0.0001850128173828125, -5.91278076171875e-05, -4.00543212890625e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.001605987548828125, 0.0, -8.58306884765625e-05, 0.0, -0.009179115295410156, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Consecration", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 80, 165, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n"}, {"score": -7.929709008276404, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Consecration", "hole1": 4}, {"hole3": "overload", "hole0": "Consecration", "hole2": "SHAMAN", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Num", "n": 2}}], "_type": "ClassDef", "name": "Consecration", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -3.4332275390625e-05, -2.09808349609375e-05, -3.015949550899677e-05, -0.00015401840209960938, -9.5367431640625e-06, -4.76837158203125e-05, -3.814697265625e-06, -7.82012939453125e-05, -8.821487426757812e-05, -5.7220458984375e-06, -0.0004558563232421875, -0.0712137222290039, -0.0001163482666015625, -3.9934315282152966e-05, -4.887576324108522e-06, -2.706014311115723e-05, -1.4066622497921344e-05, -0.0023660659790039062, 0.0, -4.245591163635254, -0.01264190673828125, -0.8627881407737732, 0.0, -0.0001414941216353327, 0.0, -1.603989601135254, 0.0, -0.44182586669921875, 0.0, -0.6634368896484375, -0.00206756591796875, -0.022490978240966797, 0.0], "choice_history": [55, 124, 221, 63, 103, "Consecration", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 80, 165, "Consecration", "<EOS>", "4", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 130, "2", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, overload=2)\n"}, {"score": -18.35723114013672, "model_output": {"_type": "Module", "body": [{"_type": "Break"}]}, "score_history": [-7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -18.357206344604492], "choice_history": [55, 124, 221, 62], "inferred_code": "break\n"}, {"score": -22.773080825805664, "model_output": {"_type": "Module", "body": []}, "score_history": [-7.62939453125e-06, -1.33514404296875e-05, -22.773059844970703], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 20}
{"beams": [{"score": -0.029861987195545225, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Core Hound", "hole2": "ALL", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 9, "hole1": 5}], "_type": "ClassDef", "name": "CoreHound", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.004038512706756592, -0.0012822417775169015, -1.0967213711410295e-05, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -2.7298927307128906e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000286102294921875, -0.000125885009765625, -0.0001227780303452164, -0.00015043580788187683, -6.723403930664062e-05, -5.7220458984375e-06, -0.005258199758827686, -2.0265579223632812e-06, -3.921983443433419e-05, 0.0, -0.00011873109906446189, -1.2874597814516164e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.01779007911682129, -8.940695806813892e-06, -0.000141143798828125, -1.9073486328125e-06, -0.00012587709352374077, -4.291525328881107e-06, -1.8238915799884126e-05, -7.450580596923828e-05], "choice_history": [55, 124, 221, 63, 103, "Core", "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -4.312771744982001, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Core Hound", "hole2": "ALL", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 9, "hole1": 5}], "_type": "ClassDef", "name": "CoreHound", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.004038512706756592, -0.0012822417775169015, -1.0967213711410295e-05, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -2.7298927307128906e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000286102294921875, -0.000125885009765625, -0.0001227780303452164, -0.00015043580788187683, -6.723403930664062e-05, -5.7220458984375e-06, -0.005258199758827686, -2.0265579223632812e-06, -3.921983443433419e-05, 0.0, -0.00011873109906446189, -1.2874597814516164e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -4.300451278686523, -0.00019276142120361328, -0.0002765655517578125, -1.9073486328125e-06, -4.768257349496707e-05, -6.556489552167477e-06, -1.0132769602932967e-05, -8.785724639892578e-05], "choice_history": [55, 124, 221, 63, 103, "Core", "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -5.292552891867665, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Core Hound", "hole2": "ALL", "hole1": 9, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 9, "hole1": 5}], "_type": "ClassDef", "name": "CoreHound", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.004038512706756592, -0.0012822417775169015, -1.0967213711410295e-05, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -2.7298927307128906e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000286102294921875, -0.000125885009765625, -0.0001227780303452164, -0.00015043580788187683, -6.723403930664062e-05, -5.7220458984375e-06, -5.267380237579346, -1.1920928244535389e-07, -0.0002281665802001953, 0.0, -0.00010609549644868821, -1.2397762475302443e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.01818680763244629, -8.940695806813892e-06, -0.0001373291015625, -1.9073486328125e-06, -0.00012957210128661245, -4.291525328881107e-06, -1.847733074100688e-05, -7.259845733642578e-05], "choice_history": [55, 124, 221, 63, 103, "Core", "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Core", " ", "Hound", "<EOS>", "9", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 9, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -5.688268420912657, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Core Hound", "hole2": "ALL", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 9, "hole1": 5}], "_type": "ClassDef", "name": "<UNK>Hound", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.6448822021484375, -0.019124170765280724, -1.156323378381785e-05, -9.5367431640625e-06, -7.82012939453125e-05, 0.0, -1.9073486328125e-06, -3.4689903259277344e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000339508056640625, -0.0001163482666015625, -0.00010418349120300263, -0.0001527009590063244, -8.249282836914062e-05, -9.5367431640625e-06, -0.004759548231959343, -1.1920928244535389e-07, -4.0292710764333606e-05, 0.0, -0.00011956552043557167, -1.2755388524965383e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0179445743560791, -8.940695806813892e-06, -0.000133514404296875, -3.814697265625e-06, -0.00012325479474384338, -3.933898824470816e-06, -1.8358123270445503e-05, -7.069110870361328e-05], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class <UNK>Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -5.702986188829527, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Core Hound", "hole2": "ALL", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 9, "hole1": 5}], "_type": "ClassDef", "name": "CoreHound", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.004038512706756592, -0.0012822417775169015, -1.0967213711410295e-05, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -2.7298927307128906e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000286102294921875, -0.000125885009765625, -0.0001227780303452164, -0.00015043580788187683, -6.723403930664062e-05, -5.7220458984375e-06, -0.005258199758827686, -2.0265579223632812e-06, -3.921983443433419e-05, 0.0, -0.00011873109906446189, -1.2874597814516164e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -5.690629005432129, -1.9431114196777344e-05, -0.0004863739013671875, -1.9073486328125e-06, -3.063631447730586e-05, -8.4638240878121e-06, -1.3947452316642739e-05, -9.942054748535156e-05], "choice_history": [55, 124, 221, 63, 103, "Core", "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 73, 146, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -6.698411478273094, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Core Hound", "hole2": "ALL", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 9, "hole1": 5}], "_type": "ClassDef", "name": "Core<UNK>", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.004038512706756592, -6.670547962188721, -0.0002296945167472586, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -2.0265579223632812e-06, -4.8041343688964844e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003490447998046875, -0.0001220703125, -0.00010394509445177391, -0.00016605060955043882, -9.012222290039062e-05, -7.62939453125e-06, -0.0046533322893083096, -1.1920928244535389e-07, -4.3392155930632725e-05, 0.0, -0.00011646633356576785, -1.4305111108114943e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.017406702041625977, -8.940695806813892e-06, -0.000133514404296875, -1.9073486328125e-06, -0.000120751719805412, -3.6954811548639555e-06, -1.8119708329322748e-05, -7.259845733642578e-05], "choice_history": [55, 124, 221, 63, 103, "Core", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class Core<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -8.598376490023824, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Core Hound", "hole2": "ALL", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 9, "hole1": 5}], "_type": "ClassDef", "name": "ForceTankHound", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.868566036224365, -0.6780568361282349, -0.024521591141819954, -4.172325134277344e-06, -9.5367431640625e-06, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -5.412101745605469e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000255584716796875, -0.0001354217529296875, -0.000125281119835563, -0.0001481712970416993, -0.0034890174865722656, -0.000274658203125, -0.0037856088019907475, -1.1920928244535389e-07, -3.540512261679396e-05, 0.0, -0.00011896919750142843, -1.3232223864179105e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, -1.1920928244535389e-07, -0.018259286880493164, -1.0967253729177173e-05, -0.000156402587890625, -3.814697265625e-06, -0.00012206286191940308, -4.291525328881107e-06, -1.7762085917638615e-05, -7.450580596923828e-05], "choice_history": [55, 124, 221, 63, 103, "Force", "Tank", "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class ForceTankHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -9.026219912989973, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Core Hound", "hole2": "ALL", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 1, "hole1": 5}], "_type": "ClassDef", "name": "CoreHound", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.004038512706756592, -0.0012822417775169015, -1.0967213711410295e-05, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -2.7298927307128906e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000286102294921875, -0.000125885009765625, -0.0001227780303452164, -0.00015043580788187683, -6.723403930664062e-05, -5.7220458984375e-06, -0.005258199758827686, -2.0265579223632812e-06, -3.921983443433419e-05, 0.0, -0.00011873109906446189, -1.2874597814516164e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.01779007911682129, -8.940695806813892e-06, -0.000141143798828125, -1.9073486328125e-06, -8.99646282196045, -7.152555099310121e-07, -2.1696068870369345e-05, -9.560585021972656e-05], "choice_history": [55, 124, 221, 63, 103, "Core", "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 5)\n"}, {"score": -9.172708586833771, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": " Hound", "hole2": "ALL", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 9, "hole1": 5}], "_type": "ClassDef", "name": "CoreHound", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.004038512706756592, -0.0012822417775169015, -1.0967213711410295e-05, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -2.7298927307128906e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000286102294921875, -0.000125885009765625, -9.01770305633545, -0.0031677482184022665, -0.12464332580566406, -0.004013776313513517, -1.1920928244535389e-07, -4.029269257443957e-05, 0.0, -0.0001059752466971986, -1.2397762475302443e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.016725778579711914, -8.940695806813892e-06, -0.00014495849609375, -1.9073486328125e-06, -0.00012694983161054552, -4.529942543740617e-06, -1.8358123270445503e-05, -7.450580596923828e-05], "choice_history": [55, 124, 221, 63, 103, "Core", "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, " ", "Hound", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__(' Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -9.224729492643746, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "CoreCore Hound", "hole2": "ALL", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 9, "hole1": 5}], "_type": "ClassDef", "name": "CoreHound", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.004038512706756592, -0.0012822417775169015, -1.0967213711410295e-05, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -2.7298927307128906e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000286102294921875, -0.000125885009765625, -0.0001227780303452164, -9.094661712646484, -0.09890880435705185, -8.463855920126662e-06, 0.0, -0.0064303698018193245, -2.1457672119140625e-06, -5.900858377572149e-05, 0.0, -0.00012039994180668145, -1.4781946447328664e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.018106698989868164, -1.0848044439626392e-05, -0.000141143798828125, -1.9073486328125e-06, -0.0001255195093108341, -4.291525328881107e-06, -1.8238915799884126e-05, -7.450580596923828e-05], "choice_history": [55, 124, 221, 63, 103, "Core", "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Core", "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('CoreCore Hound', 7, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -9.257499007627075, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Core Hound", "hole2": "ALL", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 9, "hole1": 5}], "_type": "ClassDef", "name": "CoreHound", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.004038512706756592, -0.0012822417775169015, -1.0967213711410295e-05, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -2.7298927307128906e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000286102294921875, -0.000125885009765625, -0.0001227780303452164, -0.00015043580788187683, -6.723403930664062e-05, -5.7220458984375e-06, -0.005258199758827686, -2.0265579223632812e-06, -3.921983443433419e-05, 0.0, -0.00011873109906446189, -1.2874597814516164e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.01779007911682129, -8.940695806813892e-06, -9.05078411102295, -9.34600830078125e-05, -9.655922440288123e-06, -7.152555099310121e-07, -0.0003205136745236814, -2.384185791015625e-06, -0.1760120391845703, -6.866455078125e-05, -0.0003509521484375, -4.1961669921875e-05, -0.0003108978271484375, -7.62939453125e-06], "choice_history": [55, 124, 221, 63, 103, "Core", "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "9", "<EOS>", "5", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5, stealth=True)\n"}, {"score": -9.382247815898602, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"hole3": "minion_type", "hole0": "Core Hound", "hole2": "LEGENDARY", "hole1": 7, "_type": "Template14", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 9, "hole1": 5}], "_type": "ClassDef", "name": "CoreHound", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.004038512706756592, -0.0012822417775169015, -1.0967213711410295e-05, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -2.7298927307128906e-05, -1.9073486328125e-06, -1.9073486328125e-06, -8.969666481018066, -0.000110626220703125, -0.001245737075805664, -3.933906555175781e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -1.2516970855358522e-05, -3.218649908376392e-06, -0.0001373291015625, -0.011881828308105469, -0.0001068115234375, -2.7417760065873154e-05, -0.0024761471431702375, -4.4465065002441406e-05, -5.7220458984375e-06, -0.0082777738571167, -1.1682510375976562e-05, -0.3769017457962036, -1.9073486328125e-06, -5.6385226343991235e-05, -1.0132789611816406e-05, -3.814697265625e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -6.67572021484375e-05, -1.1920928244535389e-07, -0.003093719482421875, -4.5299530029296875e-06, -0.0023899078369140625, -5.7220458984375e-06, -0.00011383838864276186, -3.933898824470816e-06, -1.6570031220908277e-05, -4.971027374267578e-05], "choice_history": [55, 124, 221, 63, 103, "Core", "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -9.42155251536451, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Core Hound", "hole2": "ALL", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 9, "hole1": 5}], "_type": "ClassDef", "name": "Force<UNK>", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.868566036224365, -1.057923436164856, -0.471152663230896, -1.9073486328125e-05, -2.288818359375e-05, 0.0, -2.0265579223632812e-06, -5.173683166503906e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00041961669921875, -0.0001239776611328125, -8.83301836438477e-05, -0.00017034159100148827, -9.584426879882812e-05, -5.7220458984375e-06, -0.004689095076173544, -2.0265579223632812e-06, -4.041191641590558e-05, 0.0, -0.00011873120092786849, -1.4901155736879446e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.01760125160217285, -8.940695806813892e-06, -0.0001354217529296875, -1.9073486328125e-06, -0.00012158608296886086, -3.6954811548639555e-06, -1.8238915799884126e-05, -7.259845733642578e-05], "choice_history": [55, 124, 221, 63, 103, "Force", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class Force<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -9.429730000002564, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Core Hound", "hole2": "ALL", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "ALL", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 9, "hole1": 5}], "_type": "ClassDef", "name": "CoreHound", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.004038512706756592, -0.0012822417775169015, -1.0967213711410295e-05, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -2.7298927307128906e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000286102294921875, -0.000125885009765625, -0.0001227780303452164, -0.00015043580788187683, -6.723403930664062e-05, -5.7220458984375e-06, -0.005258199758827686, -2.0265579223632812e-06, -3.921983443433419e-05, 0.0, -0.00011873109906446189, -1.2874597814516164e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -9.41707706451416, -1.5735626220703125e-05, -0.0007419586181640625, -3.814697265625e-06, -0.000114434355054982, -8.702239938429557e-06, -1.5854737284826115e-05, -5.543231964111328e-05], "choice_history": [55, 124, 221, 63, 103, "Core", "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "ALL", "<EOS>", 73, 146, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.ALL)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"score": -20.90694236755371, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -20.90692901611328], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 21}
{"beams": [{"score": -1.3040655657505198, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Corruption", "hole2": "WARLOCK", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template38", "hole0": "EnemyPlayer"}}], "_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Kill"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_effect"}], "_type": "ClassDef", "name": "Corruption", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -8.59463689266704e-05, -9.489053627476096e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -9.751319885253906e-05, -0.0002255438157590106, -1.9073486328125e-06, -0.0025806427001953125, -0.0003681182861328125, -0.0001163482666015625, -9.894339200400282e-06, -1.1920928244535389e-07, -0.0004362915933597833, 0.0, -0.11945855617523193, 0.0, -0.0006513589178211987, 0.0, -0.00011444091796875, -7.05718994140625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, 0.0, -0.0022296905517578125, -2.0265579223632812e-06, -0.00029098987579345703, -1.1444091796875e-05, -0.11105811595916748, -9.5367431640625e-06, -0.0044384002685546875, -0.021722793579101562, -0.00028228759765625, -2.6702880859375e-05, -3.24249267578125e-05, 0.0, -0.00018525123596191406, -1.1920928244535389e-07, -4.625310975825414e-05, -2.0265579223632812e-06, -0.41280901432037354, 0.0, -0.000278472900390625, -0.005329132080078125, -0.000675201416015625, -3.814697265625e-05, 0.0, -0.0014541149139404297, -0.000141143798828125, -1.33514404296875e-05, -0.0025768280029296875, -0.0014142990112304688, -0.0008335113525390625, 0.0, -0.0013735294342041016, -0.020914196968078613, -2.47955322265625e-05, -0.010376930236816406, -0.000171661376953125, -2.6702880859375e-05, -0.0002804994583129883, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.5686308145523071, -4.1961669921875e-05, 0.0, -0.0002193450927734375, -4.57763671875e-05, -1.33514404296875e-05, 0.0, -0.0022050142288208008, -5.7220458984375e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.0019283294677734375, -5.91278076171875e-05, -0.006411909591406584, -7.05718994140625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0006035566329956055, -1.3470649719238281e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Corruption", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Started", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 49, 174, "Kill", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -1.6234856650089426, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Corruption", "hole2": "WARLOCK", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template38", "hole0": "CurrentPlayer"}}], "_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Kill"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_effect"}], "_type": "ClassDef", "name": "Corruption", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -8.59463689266704e-05, -9.489053627476096e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -9.751319885253906e-05, -0.0002255438157590106, -1.9073486328125e-06, -0.0025806427001953125, -0.0003681182861328125, -0.0001163482666015625, -9.894339200400282e-06, -1.1920928244535389e-07, -0.0004362915933597833, 0.0, -0.11945855617523193, 0.0, -0.0006513589178211987, 0.0, -0.00011444091796875, -7.05718994140625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, 0.0, -0.0022296905517578125, -2.0265579223632812e-06, -0.00029098987579345703, -1.1444091796875e-05, -0.11105811595916748, -9.5367431640625e-06, -0.0044384002685546875, -0.021722793579101562, -0.00028228759765625, -2.6702880859375e-05, -3.24249267578125e-05, 0.0, -0.00018525123596191406, -1.1920928244535389e-07, -4.625310975825414e-05, -2.0265579223632812e-06, -0.41280901432037354, 0.0, -0.000278472900390625, -0.005329132080078125, -0.000675201416015625, -3.814697265625e-05, 0.0, -0.0014541149139404297, -0.000141143798828125, -1.33514404296875e-05, -0.0025768280029296875, -0.0014142990112304688, -0.0008335113525390625, 0.0, -0.0013735294342041016, -0.020914196968078613, -2.47955322265625e-05, -0.010376930236816406, -0.000171661376953125, -2.6702880859375e-05, -0.0002804994583129883, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.8879629373550415, -0.00054168701171875, -3.814697265625e-06, -0.000148773193359375, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -0.001385807991027832, -7.62939453125e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.0019207000732421875, -5.53131103515625e-05, -0.006872772704809904, -4.38690185546875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.0006378889083862305, -1.1563301086425781e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Corruption", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Started", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Current", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 49, 174, "Kill", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=CurrentPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -2.482614020988862, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Corruption", "hole2": "WARLOCK", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template38", "hole0": "EnemyPlayer"}}], "_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Kill"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_buff"}], "_type": "ClassDef", "name": "Corruption", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -8.59463689266704e-05, -9.489053627476096e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -9.751319885253906e-05, -0.0002255438157590106, -1.9073486328125e-06, -0.0025806427001953125, -0.0003681182861328125, -0.0001163482666015625, -9.894339200400282e-06, -1.1920928244535389e-07, -0.0004362915933597833, 0.0, -0.11945855617523193, 0.0, -0.0006513589178211987, 0.0, -0.00011444091796875, -7.05718994140625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, 0.0, -0.0022296905517578125, -2.0265579223632812e-06, -0.00029098987579345703, -1.1444091796875e-05, -0.11105811595916748, -9.5367431640625e-06, -0.0044384002685546875, -0.021722793579101562, -0.00028228759765625, -2.6702880859375e-05, -3.24249267578125e-05, 0.0, -0.00018525123596191406, -1.1920928244535389e-07, -4.625310975825414e-05, -2.0265579223632812e-06, -1.5210195779800415, -0.0005096197128295898, -0.000591278076171875, -0.055904388427734375, -0.011771202087402344, -5.14984130859375e-05, 0.0, -0.0036361217498779297, -0.00011074542999267578, -1.33514404296875e-05, -0.01319122314453125, -0.001430511474609375, -0.0006256103515625, 0.0, -0.0015424489974975586, -0.02541649341583252, -9.5367431640625e-06, -0.011130332946777344, -0.0001659393310546875, -2.09808349609375e-05, -0.0003644227981567383, -1.9073486328125e-06, -0.0001239776611328125, -3.814697265625e-06, -0.5582380294799805, -4.1961669921875e-05, 0.0, -0.0003681182861328125, -5.7220458984375e-05, -1.33514404296875e-05, 0.0, -0.0021191835403442383, -6.29425048828125e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.0020208358764648438, -5.7220458984375e-05, -0.006450652610510588, -5.340576171875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.000582575798034668, -1.1563301086425781e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Corruption", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Started", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 49, 174, "Kill", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -2.8219685360645457, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Corruption", "hole2": "WARLOCK", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template38", "hole0": "CurrentPlayer"}}], "_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Kill"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_buff"}], "_type": "ClassDef", "name": "Corruption", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -8.59463689266704e-05, -9.489053627476096e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -9.751319885253906e-05, -0.0002255438157590106, -1.9073486328125e-06, -0.0025806427001953125, -0.0003681182861328125, -0.0001163482666015625, -9.894339200400282e-06, -1.1920928244535389e-07, -0.0004362915933597833, 0.0, -0.11945855617523193, 0.0, -0.0006513589178211987, 0.0, -0.00011444091796875, -7.05718994140625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, 0.0, -0.0022296905517578125, -2.0265579223632812e-06, -0.00029098987579345703, -1.1444091796875e-05, -0.11105811595916748, -9.5367431640625e-06, -0.0044384002685546875, -0.021722793579101562, -0.00028228759765625, -2.6702880859375e-05, -3.24249267578125e-05, 0.0, -0.00018525123596191406, -1.1920928244535389e-07, -4.625310975825414e-05, -2.0265579223632812e-06, -1.5210195779800415, -0.0005096197128295898, -0.000591278076171875, -0.055904388427734375, -0.011771202087402344, -5.14984130859375e-05, 0.0, -0.0036361217498779297, -0.00011074542999267578, -1.33514404296875e-05, -0.01319122314453125, -0.001430511474609375, -0.0006256103515625, 0.0, -0.0015424489974975586, -0.02541649341583252, -9.5367431640625e-06, -0.011130332946777344, -0.0001659393310546875, -2.09808349609375e-05, -0.0003644227981567383, -1.9073486328125e-06, -0.0001239776611328125, -3.814697265625e-06, -0.8975095748901367, -0.0005617141723632812, -3.814697265625e-06, -0.0002002716064453125, -4.57763671875e-05, -1.71661376953125e-05, 0.0, -0.0014306306838989258, -8.20159912109375e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0020875930786132812, -5.340576171875e-05, -0.00679588271304965, -3.24249267578125e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.000601649284362793, -1.1563301086425781e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Corruption", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Started", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Current", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 49, 174, "Kill", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Effect(TurnStarted(player=CurrentPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -3.6246388956978635, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Corruption", "hole2": "WARLOCK", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template38", "hole0": "EnemyPlayer"}}], "_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Kill"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_effect"}], "_type": "ClassDef", "name": "Corruption", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -8.59463689266704e-05, -9.489053627476096e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -9.751319885253906e-05, -0.0002255438157590106, -1.9073486328125e-06, -0.0025806427001953125, -0.0003681182861328125, -0.0001163482666015625, -9.894339200400282e-06, -1.1920928244535389e-07, -0.0004362915933597833, 0.0, -0.11945855617523193, 0.0, -0.0006513589178211987, 0.0, -0.00011444091796875, -7.05718994140625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, 0.0, -0.0022296905517578125, -2.0265579223632812e-06, -0.00029098987579345703, -1.1444091796875e-05, -2.3698642253875732, -3.695487976074219e-05, -0.040556907653808594, -0.010005950927734375, -4.57763671875e-05, -2.47955322265625e-05, -2.86102294921875e-05, 0.0, -0.00018525123596191406, -2.3841855067985307e-07, -4.053108568768948e-05, -2.0265579223632812e-06, -0.44391167163848877, 0.0, -0.0007638931274414062, -0.008649826049804688, -0.0009708404541015625, -5.340576171875e-05, 0.0, -0.001318812370300293, -0.0001354217529296875, -1.52587890625e-05, -0.0022449493408203125, -0.001377105712890625, -0.0008544921875, 0.0, -0.0013763904571533203, -0.019748806953430176, -2.47955322265625e-05, -0.009694099426269531, -0.0001735687255859375, -2.47955322265625e-05, -0.00028336048126220703, -1.9073486328125e-06, -0.0001316070556640625, -3.814697265625e-06, -0.5732618570327759, -4.1961669921875e-05, 0.0, -0.0002155303955078125, -4.57763671875e-05, -1.33514404296875e-05, 0.0, -0.0022488832473754883, -5.7220458984375e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.0019197463989257812, -5.91278076171875e-05, -0.006441592704504728, -6.866455078125e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0006035566329956055, -1.3470649719238281e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Corruption", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Started", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 49, 174, "Kill", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -3.7336581756508025, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Corruption", "hole2": "ROGUE", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template38", "hole0": "EnemyPlayer"}}], "_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Kill"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_effect"}], "_type": "ClassDef", "name": "Corruption", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -8.59463689266704e-05, -9.489053627476096e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -9.751319885253906e-05, -0.0002255438157590106, -1.9073486328125e-06, -0.0025806427001953125, -0.0003681182861328125, -0.0001163482666015625, -9.894339200400282e-06, -1.1920928244535389e-07, -0.0004362915933597833, 0.0, -2.505337953567505, 0.0, -0.0001139639425673522, 0.0, -0.000133514404296875, -0.00011444091796875, -1.9073486328125e-06, -1.1444091796875e-05, -3.4332275390625e-05, 0.0, -0.0041751861572265625, -2.0265579223632812e-06, -0.00034809112548828125, -9.5367431640625e-06, -0.1617276668548584, -7.62939453125e-06, -0.004134178161621094, -0.021402359008789062, -0.00022125244140625, -2.09808349609375e-05, -3.0517578125e-05, 0.0, -0.00018334388732910156, -1.1920928244535389e-07, -4.684914893005043e-05, -2.0265579223632812e-06, -0.41025781631469727, 0.0, -0.0002994537353515625, -0.005146980285644531, -0.00066375732421875, -3.814697265625e-05, 0.0, -0.0014121532440185547, -0.0001430511474609375, -1.33514404296875e-05, -0.0025148391723632812, -0.0014286041259765625, -0.000827789306640625, 0.0, -0.0013773441314697266, -0.020699620246887207, -2.288818359375e-05, -0.010056495666503906, -0.0001697540283203125, -2.47955322265625e-05, -0.00028717517852783203, -1.9073486328125e-06, -0.0001220703125, -3.814697265625e-06, -0.5642353296279907, -4.1961669921875e-05, 0.0, -0.000217437744140625, -4.38690185546875e-05, -1.33514404296875e-05, 0.0, -0.0021744966506958008, -5.7220458984375e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.0019350051879882812, -5.91278076171875e-05, -0.0064060683362185955, -7.05718994140625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.000601649284362793, -1.3470649719238281e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Corruption", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Corruption", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Started", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 49, 174, "Kill", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -3.9335914656594113, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Corruption", "hole2": "WARLOCK", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template38", "hole0": "CurrentPlayer"}}], "_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Kill"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_effect"}], "_type": "ClassDef", "name": "Corruption", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -8.59463689266704e-05, -9.489053627476096e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -9.751319885253906e-05, -0.0002255438157590106, -1.9073486328125e-06, -0.0025806427001953125, -0.0003681182861328125, -0.0001163482666015625, -9.894339200400282e-06, -1.1920928244535389e-07, -0.0004362915933597833, 0.0, -0.11945855617523193, 0.0, -0.0006513589178211987, 0.0, -0.00011444091796875, -7.05718994140625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, 0.0, -0.0022296905517578125, -2.0265579223632812e-06, -0.00029098987579345703, -1.1444091796875e-05, -2.3698642253875732, -3.695487976074219e-05, -0.040556907653808594, -0.010005950927734375, -4.57763671875e-05, -2.47955322265625e-05, -2.86102294921875e-05, 0.0, -0.00018525123596191406, -2.3841855067985307e-07, -4.053108568768948e-05, -2.0265579223632812e-06, -0.44391167163848877, 0.0, -0.0007638931274414062, -0.008649826049804688, -0.0009708404541015625, -5.340576171875e-05, 0.0, -0.001318812370300293, -0.0001354217529296875, -1.52587890625e-05, -0.0022449493408203125, -0.001377105712890625, -0.0008544921875, 0.0, -0.0013763904571533203, -0.019748806953430176, -2.47955322265625e-05, -0.009694099426269531, -0.0001735687255859375, -2.47955322265625e-05, -0.00028336048126220703, -1.9073486328125e-06, -0.0001316070556640625, -3.814697265625e-06, -0.882123589515686, -0.0005426406860351562, -3.814697265625e-06, -0.000148773193359375, -4.1961669921875e-05, -1.71661376953125e-05, 0.0, -0.0014220476150512695, -7.62939453125e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.0019197463989257812, -5.53131103515625e-05, -0.006896733772009611, -4.38690185546875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.000639796257019043, -1.1563301086425781e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Corruption", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Started", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Current", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 49, 174, "Kill", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=CurrentPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -4.063550572577682, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Corruption", "hole2": "ROGUE", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template38", "hole0": "CurrentPlayer"}}], "_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Kill"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_effect"}], "_type": "ClassDef", "name": "Corruption", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -8.59463689266704e-05, -9.489053627476096e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -9.751319885253906e-05, -0.0002255438157590106, -1.9073486328125e-06, -0.0025806427001953125, -0.0003681182861328125, -0.0001163482666015625, -9.894339200400282e-06, -1.1920928244535389e-07, -0.0004362915933597833, 0.0, -2.505337953567505, 0.0, -0.0001139639425673522, 0.0, -0.000133514404296875, -0.00011444091796875, -1.9073486328125e-06, -1.1444091796875e-05, -3.4332275390625e-05, 0.0, -0.0041751861572265625, -2.0265579223632812e-06, -0.00034809112548828125, -9.5367431640625e-06, -0.1617276668548584, -7.62939453125e-06, -0.004134178161621094, -0.021402359008789062, -0.00022125244140625, -2.09808349609375e-05, -3.0517578125e-05, 0.0, -0.00018334388732910156, -1.1920928244535389e-07, -4.684914893005043e-05, -2.0265579223632812e-06, -0.41025781631469727, 0.0, -0.0002994537353515625, -0.005146980285644531, -0.00066375732421875, -3.814697265625e-05, 0.0, -0.0014121532440185547, -0.0001430511474609375, -1.33514404296875e-05, -0.0025148391723632812, -0.0014286041259765625, -0.000827789306640625, 0.0, -0.0013773441314697266, -0.020699620246887207, -2.288818359375e-05, -0.010056495666503906, -0.0001697540283203125, -2.47955322265625e-05, -0.00028717517852783203, -1.9073486328125e-06, -0.0001220703125, -3.814697265625e-06, -0.8940244913101196, -0.0005388259887695312, -3.814697265625e-06, -0.000148773193359375, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.0013686418533325195, -7.62939453125e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.0019235610961914062, -5.53131103515625e-05, -0.00687360716983676, -4.38690185546875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.000635981559753418, -1.1563301086425781e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Corruption", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Corruption", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Started", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Current", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 49, 174, "Kill", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=CurrentPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -4.740833263106616, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Corruption", "hole2": "WARLOCK", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template38", "hole0": "EnemyPlayer"}}], "_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Kill"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_buff"}], "_type": "ClassDef", "name": "Corruption", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -8.59463689266704e-05, -9.489053627476096e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -9.751319885253906e-05, -0.0002255438157590106, -1.9073486328125e-06, -0.0025806427001953125, -0.0003681182861328125, -0.0001163482666015625, -9.894339200400282e-06, -1.1920928244535389e-07, -0.0004362915933597833, 0.0, -0.11945855617523193, 0.0, -0.0006513589178211987, 0.0, -0.00011444091796875, -7.05718994140625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, 0.0, -0.0022296905517578125, -2.0265579223632812e-06, -0.00029098987579345703, -1.1444091796875e-05, -2.3698642253875732, -3.695487976074219e-05, -0.040556907653808594, -0.010005950927734375, -4.57763671875e-05, -2.47955322265625e-05, -2.86102294921875e-05, 0.0, -0.00018525123596191406, -2.3841855067985307e-07, -4.053108568768948e-05, -2.0265579223632812e-06, -1.4478446245193481, -0.00031507015228271484, -0.0038576126098632812, -0.09210014343261719, -0.017172813415527344, -6.4849853515625e-05, 0.0, -0.003760218620300293, -0.00010120868682861328, -1.52587890625e-05, -0.01303863525390625, -0.0014142990112304688, -0.0006084442138671875, 0.0, -0.0015376806259155273, -0.024611592292785645, -9.5367431640625e-06, -0.010371208190917969, -0.000164031982421875, -2.09808349609375e-05, -0.0003682374954223633, -1.9073486328125e-06, -0.0001239776611328125, -3.814697265625e-06, -0.5635471343994141, -4.1961669921875e-05, 0.0, -0.0003681182861328125, -5.91278076171875e-05, -1.52587890625e-05, 0.0, -0.0021516084671020508, -6.29425048828125e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.00201416015625, -5.7220458984375e-05, -0.006472706329077482, -5.340576171875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.000582575798034668, -1.1563301086425781e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Corruption", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Started", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 49, 174, "Kill", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -4.9073676874076995, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Corruption", "hole2": "ROGUE", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template38", "hole0": "EnemyPlayer"}}], "_type": "Call", "func": {"id": "TurnStarted", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Kill"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_buff"}], "_type": "ClassDef", "name": "Corruption", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -8.59463689266704e-05, -9.489053627476096e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -9.751319885253906e-05, -0.0002255438157590106, -1.9073486328125e-06, -0.0025806427001953125, -0.0003681182861328125, -0.0001163482666015625, -9.894339200400282e-06, -1.1920928244535389e-07, -0.0004362915933597833, 0.0, -2.505337953567505, 0.0, -0.0001139639425673522, 0.0, -0.000133514404296875, -0.00011444091796875, -1.9073486328125e-06, -1.1444091796875e-05, -3.4332275390625e-05, 0.0, -0.0041751861572265625, -2.0265579223632812e-06, -0.00034809112548828125, -9.5367431640625e-06, -0.1617276668548584, -7.62939453125e-06, -0.004134178161621094, -0.021402359008789062, -0.00022125244140625, -2.09808349609375e-05, -3.0517578125e-05, 0.0, -0.00018334388732910156, -1.1920928244535389e-07, -4.684914893005043e-05, -2.0265579223632812e-06, -1.5109267234802246, -0.00048482418060302734, -0.0006732940673828125, -0.056346893310546875, -0.0124359130859375, -4.9591064453125e-05, 0.0, -0.0035636425018310547, -0.00010883808135986328, -1.33514404296875e-05, -0.012067794799804688, -0.0014429092407226562, -0.00061798095703125, 0.0, -0.0015357732772827148, -0.02521812915802002, -9.5367431640625e-06, -0.010878562927246094, -0.0001659393310546875, -2.09808349609375e-05, -0.00037682056427001953, -1.9073486328125e-06, -0.000118255615234375, -3.814697265625e-06, -0.5562124252319336, -4.1961669921875e-05, 0.0, -0.0003643035888671875, -5.7220458984375e-05, -1.33514404296875e-05, 0.0, -0.0020982027053833008, -6.29425048828125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.0020275115966796875, -5.7220458984375e-05, -0.006444811355322599, -5.53131103515625e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.000582575798034668, -1.1563301086425781e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Corruption", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Corruption", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Started", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 49, 174, "Kill", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"score": -5.617433290634764, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Corruption", "hole2": "WARLOCK", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Corruption", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -8.59463689266704e-05, -9.489053627476096e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -9.751319885253906e-05, -0.0002255438157590106, -1.9073486328125e-06, -0.0025806427001953125, -0.0003681182861328125, -0.0001163482666015625, -9.894339200400282e-06, -1.1920928244535389e-07, -0.0004362915933597833, 0.0, -0.11945855617523193, 0.0, -0.0006513589178211987, 0.0, -0.00011444091796875, -7.05718994140625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, 0.0, -0.0022296905517578125, -2.0265579223632812e-06, -0.00029098987579345703, -1.1444091796875e-05, -0.11105811595916748, -9.5367431640625e-06, -0.0044384002685546875, -0.021722793579101562, -0.00028228759765625, -2.6702880859375e-05, -3.24249267578125e-05, 0.0, -0.00018525123596191406, -1.1920928244535389e-07, -4.625310975825414e-05, -2.0265579223632812e-06, -5.212406635284424, -3.576278118089249e-07, -0.0001430511474609375, -0.1256570816040039, 0.0, -0.014392852783203125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Corruption", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -6.108514290009211, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Corruption", "hole2": "WARLOCK", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Template28", "hole0": 5}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_buff"}], "_type": "ClassDef", "name": "Corruption", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -8.59463689266704e-05, -9.489053627476096e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -9.751319885253906e-05, -0.0002255438157590106, -1.9073486328125e-06, -0.0025806427001953125, -0.0003681182861328125, -0.0001163482666015625, -9.894339200400282e-06, -1.1920928244535389e-07, -0.0004362915933597833, 0.0, -0.11945855617523193, 0.0, -0.0006513589178211987, 0.0, -0.00011444091796875, -7.05718994140625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, 0.0, -0.0022296905517578125, -2.0265579223632812e-06, -0.00029098987579345703, -1.1444091796875e-05, -0.11105811595916748, -9.5367431640625e-06, -0.0044384002685546875, -0.021722793579101562, -0.00028228759765625, -2.6702880859375e-05, -3.24249267578125e-05, 0.0, -0.00018525123596191406, -1.1920928244535389e-07, -4.625310975825414e-05, -2.0265579223632812e-06, -1.5210195779800415, -0.0005096197128295898, -0.000591278076171875, -3.998922348022461, -0.023601531982421875, -0.29901373386383057, -2.288818359375e-05], "choice_history": [55, 124, 221, 63, 103, "Corruption", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 43, 163, "5", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(5)))\n"}, {"score": -6.163021843586634, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Corruption", "hole2": "WARLOCK", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Template27", "hole0": 5}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_buff"}], "_type": "ClassDef", "name": "Corruption", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -8.59463689266704e-05, -9.489053627476096e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -9.751319885253906e-05, -0.0002255438157590106, -1.9073486328125e-06, -0.0025806427001953125, -0.0003681182861328125, -0.0001163482666015625, -9.894339200400282e-06, -1.1920928244535389e-07, -0.0004362915933597833, 0.0, -0.11945855617523193, 0.0, -0.0006513589178211987, 0.0, -0.00011444091796875, -7.05718994140625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, 0.0, -0.0022296905517578125, -2.0265579223632812e-06, -0.00029098987579345703, -1.1444091796875e-05, -0.11105811595916748, -9.5367431640625e-06, -0.0044384002685546875, -0.021722793579101562, -0.00028228759765625, -2.6702880859375e-05, -3.24249267578125e-05, 0.0, -0.00018525123596191406, -1.1920928244535389e-07, -4.625310975825414e-05, -2.0265579223632812e-06, -1.5210195779800415, -0.0005096197128295898, -0.000591278076171875, -3.9641828536987305, -0.04492759704589844, -0.3668908476829529, -6.67572021484375e-05], "choice_history": [55, 124, 221, 63, 103, "Corruption", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 42, 162, "5", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeHealth(5)))\n"}, {"score": -7.069630998824309, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Corruption", "hole2": "WARLOCK", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"right": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Num", "n": 3}]}, "_type": "BinOp", "left": {"_type": "Num", "n": 1}, "op": {"_type": "Sub"}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "set_health_to"}], "_type": "ClassDef", "name": "Corruption", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -8.59463689266704e-05, -9.489053627476096e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -9.751319885253906e-05, -0.0002255438157590106, -1.9073486328125e-06, -0.0025806427001953125, -0.0003681182861328125, -0.0001163482666015625, -9.894339200400282e-06, -1.1920928244535389e-07, -0.0004362915933597833, 0.0, -0.11945855617523193, 0.0, -0.0006513589178211987, 0.0, -0.00011444091796875, -7.05718994140625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, 0.0, -0.0022296905517578125, -2.0265579223632812e-06, -0.00029098987579345703, -1.1444091796875e-05, -0.11105811595916748, -9.5367431640625e-06, -0.0044384002685546875, -0.021722793579101562, -0.00028228759765625, -2.6702880859375e-05, -3.24249267578125e-05, 0.0, -0.00018525123596191406, -1.1920928244535389e-07, -4.625310975825414e-05, -2.0265579223632812e-06, -4.278731346130371, -0.0004292726516723633, -0.000202178955078125, -1.005239486694336, -0.11198234558105469, -0.0209808349609375, -0.0007781982421875, -0.00938454270362854, 0.0, -0.1891164779663086, -0.042606353759765625, -0.3845033645629883, -0.005265235900878906, 0.0, -0.04812347888946533, -4.1961669921875e-05, -0.00197601318359375, -0.6273527145385742, -2.47955322265625e-05, -0.07805908471345901, 0.0], "choice_history": [55, 124, 221, 63, 103, "Corruption", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 30, 96, 21, 130, "1", "<EOS>", 57, 14, 101, 19, 125, "len", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1 - len(3))\n"}, {"score": -22.297405242919922, "model_output": {"_type": "Module", "body": []}, "score_history": [-5.7220458984375e-06, -5.340576171875e-05, -22.297346115112305], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 22}
{"beams": [{"score": -0.19468378844038625, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Dalaran Mage", "hole1": 3}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 1, "hole1": 4}], "_type": "ClassDef", "name": "DalaranMage", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.033323527139146e-06, -6.198863957251888e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -9.5367431640625e-06, -0.14910602569580078, -8.392333984375e-05, -4.327211718191393e-05, -9.775161743164062e-06, -1.9073486328125e-05, -1.33514404296875e-05, -0.00012290450104046613, -3.6120269214734435e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0004940032958984375, -2.86102294921875e-05, -7.152546004363103e-07, -1.5020257706055418e-05, -5.8889178035315126e-05, -8.22540732769994e-06, -0.04308903217315674, -2.3841855067985307e-07, -0.000965118408203125, -0.0002269744873046875, -0.00023722639889456332, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dalaran", "Mage", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"score": -2.8507846591804977, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MECH", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 1, "hole1": 4}], "_type": "ClassDef", "name": "DalaranMage", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.033323527139146e-06, -6.198863957251888e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -9.5367431640625e-06, -2.0019989013671875, -0.000148773193359375, -6.079665126890177e-06, -1.8477439880371094e-05, -7.62939453125e-06, 0.0, -7.808205555193126e-05, 0.0, -2.872943878173828e-05, 0.0, -2.9206225008238107e-05, -3.3140109735541046e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -0.44909000396728516, -1.1801719665527344e-05, -0.39893531799316406, -1.9073486328125e-06, 0.0, -3.576278118089249e-07, -0.00025665760040283203, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Dalaran", "Mage", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 73, 146, "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4)\n"}, {"score": -3.308509706377862, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 1, "hole1": 4}], "_type": "ClassDef", "name": "DalaranMage", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.033323527139146e-06, -6.198863957251888e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -9.5367431640625e-06, -2.0019989013671875, -0.000148773193359375, -6.079665126890177e-06, -1.8477439880371094e-05, -7.62939453125e-06, 0.0, -7.808205555193126e-05, 0.0, -2.872943878173828e-05, 0.0, -2.9206225008238107e-05, -3.3140109735541046e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -1.2916040420532227, -1.9073486328125e-06, -0.0064105987548828125, -1.52587890625e-05, -2.861017264876864e-06, -9.536738616588991e-07, -4.267674739821814e-05, -6.6756979322235566e-06, -0.006311178207397461, -3.576272320060525e-06, -0.0012683868408203125, -0.000133514404296875, -0.00021958285651635379, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dalaran", "Mage", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"score": -3.508217452277421, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Dalaran Mage", "hole1": 3}, {"hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 4}], "_type": "ClassDef", "name": "DalaranMage", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.033323527139146e-06, -6.198863957251888e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -9.5367431640625e-06, -0.14910602569580078, -8.392333984375e-05, -4.327211718191393e-05, -9.775161743164062e-06, -1.9073486328125e-05, -1.33514404296875e-05, -0.00012290450104046613, -3.6120269214734435e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0004940032958984375, -2.86102294921875e-05, -7.152546004363103e-07, -1.5020257706055418e-05, -5.8889178035315126e-05, -8.22540732769994e-06, -3.354898452758789, -7.62939453125e-06, -0.0027723312377929688, -3.24249267578125e-05, -0.0003414154052734375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dalaran", "Mage", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, stealth=True)\n"}, {"score": -3.5957475890705553, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MECH", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 1, "hole1": 4}], "_type": "ClassDef", "name": "DalaranMage", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.033323527139146e-06, -6.198863957251888e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -9.5367431640625e-06, -2.0019989013671875, -0.000148773193359375, -6.079665126890177e-06, -1.8477439880371094e-05, -7.62939453125e-06, 0.0, -7.808205555193126e-05, 0.0, -2.872943878173828e-05, 0.0, -2.9206225008238107e-05, -3.3140109735541046e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -0.44909000396728516, -1.1801719665527344e-05, -1.136423110961914, -7.62939453125e-06, -2.861012262656004e-06, -1.0728830375228426e-06, -4.255753810866736e-05, -7.271740287251305e-06, -0.0063533782958984375, -3.4570634852570947e-06, -0.0009479522705078125, -0.000133514404296875, -0.0002344841050216928, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dalaran", "Mage", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"score": -4.89119744160493, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 1, "hole1": 4}], "_type": "ClassDef", "name": "DalaranMage", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.033323527139146e-06, -6.198863957251888e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -9.5367431640625e-06, -2.0019989013671875, -0.000148773193359375, -6.079665126890177e-06, -1.8477439880371094e-05, -7.62939453125e-06, 0.0, -7.808205555193126e-05, 0.0, -2.872943878173828e-05, 0.0, -2.9206225008238107e-05, -3.3140109735541046e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -2.8557004928588867, -3.814697265625e-06, -0.025991439819335938, -1.52587890625e-05, -9.179059816233348e-06, -1.0728830375228426e-06, -4.374951095087454e-05, -6.794906312279636e-06, -0.005245208740234375, -3.4570634852570947e-06, -0.0013427734375, -0.0001316070556640625, -0.00021409906912595034, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dalaran", "Mage", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"score": -6.041290281927587, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 1, "hole1": 4}], "_type": "ClassDef", "name": "DalaranMage", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.033323527139146e-06, -6.198863957251888e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -9.5367431640625e-06, -2.0019989013671875, -0.000148773193359375, -6.079665126890177e-06, -1.8477439880371094e-05, -7.62939453125e-06, 0.0, -7.808205555193126e-05, 0.0, -2.872943878173828e-05, 0.0, -2.9206225008238107e-05, -3.3140109735541046e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -4.015270233154297, -3.814697265625e-06, -0.01514434814453125, -1.1444091796875e-05, -5.7220199778384995e-06, -5.960462772236497e-07, -3.945804564864375e-05, -4.768360213347478e-06, -0.0063697099685668945, -2.622600959512056e-06, -0.0016193389892578125, -0.0001373291015625, -0.00019240299297962338, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dalaran", "Mage", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"score": -6.582229039914267, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template6", "hole0": "Dalaran Mage", "hole1": 3}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 1, "hole1": 4}], "_type": "ClassDef", "name": "DalaranMage", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.033323527139146e-06, -6.198863957251888e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -9.5367431640625e-06, -6.496942520141602, -0.001956939697265625, -0.001952432212419808, -1.7642971215536818e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.00010299676068825647, -4.172325134277344e-06, -7.462501525878906e-05, 0.0, -0.012187957763671875, -1.52587890625e-05, -5.960460498499742e-07, -5.960462772236497e-07, -5.8054316468769684e-05, -9.536738616588991e-07, -0.06609165668487549, -7.152555099310121e-07, -0.002262115478515625, -0.0002765655517578125, -0.00017225737974513322, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dalaran", "Mage", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"score": -6.753029821623983, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Dalaran Mage", "hole1": 3}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 4}], "_type": "ClassDef", "name": "DalaranMage", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.033323527139146e-06, -6.198863957251888e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -9.5367431640625e-06, -0.14910602569580078, -8.392333984375e-05, -4.327211718191393e-05, -9.775161743164062e-06, -1.9073486328125e-05, -1.33514404296875e-05, -0.00012290450104046613, -3.6120269214734435e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0004940032958984375, -2.86102294921875e-05, -7.152546004363103e-07, -1.5020257706055418e-05, -5.8889178035315126e-05, -8.22540732769994e-06, -6.591220855712891, -3.576278118089249e-07, -0.011115074157714844, -4.1961669921875e-05, -0.0004863739013671875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dalaran", "Mage", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True)\n"}, {"score": -7.06980907685076, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Dalaran Mage", "hole1": 3}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 4}], "_type": "ClassDef", "name": "DalaranMage", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.033323527139146e-06, -6.198863957251888e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -9.5367431640625e-06, -0.14910602569580078, -8.392333984375e-05, -4.327211718191393e-05, -9.775161743164062e-06, -1.9073486328125e-05, -1.33514404296875e-05, -0.00012290450104046613, -3.6120269214734435e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0004940032958984375, -2.86102294921875e-05, -7.152546004363103e-07, -1.5020257706055418e-05, -5.8889178035315126e-05, -8.22540732769994e-06, -6.9184370040893555, -3.576214658096433e-05, -0.0010242462158203125, -7.62939453125e-06, -0.0001392364501953125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dalaran", "Mage", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, taunt=True)\n"}, {"score": -7.1226413232759285, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Dalaran Mage", "hole1": 3}, {"hole2": "windfury", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 4}], "_type": "ClassDef", "name": "DalaranMage", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.033323527139146e-06, -6.198863957251888e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -9.5367431640625e-06, -0.14910602569580078, -8.392333984375e-05, -4.327211718191393e-05, -9.775161743164062e-06, -1.9073486328125e-05, -1.33514404296875e-05, -0.00012290450104046613, -3.6120269214734435e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0004940032958984375, -2.86102294921875e-05, -7.152546004363103e-07, -1.5020257706055418e-05, -5.8889178035315126e-05, -8.22540732769994e-06, -6.961075305938721, -9.179073458653875e-06, -0.011137962341308594, -2.86102294921875e-05, -0.000225067138671875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dalaran", "Mage", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n"}, {"score": -7.986713763567963, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Dalaran Mage", "hole1": 3}, {"hole2": "auras", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 1, "hole1": 4}], "_type": "ClassDef", "name": "DalaranMage", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.033323527139146e-06, -6.198863957251888e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -9.5367431640625e-06, -0.14910602569580078, -8.392333984375e-05, -4.327211718191393e-05, -9.775161743164062e-06, -1.9073486328125e-05, -1.33514404296875e-05, -0.00012290450104046613, -3.6120269214734435e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0004940032958984375, -2.86102294921875e-05, -7.152546004363103e-07, -1.5020257706055418e-05, -5.8889178035315126e-05, -8.22540732769994e-06, -7.645905017852783, -4.768370445162873e-07, -0.18888378143310547, -0.0011692047119140625, -0.0005900841788388789, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dalaran", "Mage", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=1)\n"}, {"score": -8.498820894863826, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MECH", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}], "_type": "Call", "func": {"id": "Minion", "_type": "Name"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "DalaranMage", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.033323527139146e-06, -6.198863957251888e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -9.5367431640625e-06, -2.0019989013671875, -0.000148773193359375, -6.079665126890177e-06, -1.8477439880371094e-05, -7.62939453125e-06, 0.0, -7.808205555193126e-05, 0.0, -2.872943878173828e-05, 0.0, -2.9206225008238107e-05, -3.3140109735541046e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -0.44909000396728516, -1.1801719665527344e-05, -4.902970314025879, -7.62939453125e-06, -0.0014679431915283203, -3.576278118089249e-07, -3.814697265625e-06, -0.00043487548828125, 0.0, -0.00015246868133544922, -3.6954195820726454e-05, -4.57763671875e-05, -0.19052791595458984, -9.894321920000948e-06, -0.001369476318359375, -0.00017547607421875, -6.103515625e-05, -1.71661376953125e-05, -0.0003223419189453125, -2.47955322265625e-05, 0.0, -0.0002651214599609375, -6.318092346191406e-06, -2.09808349609375e-05, -0.0002422332763671875, -1.9073486328125e-06, -1.954986510099843e-05, 0.0, 0.0, 0.0, -0.009920473210513592, 0.0, -0.009415626525878906, -0.0002841949462890625, -3.814697265625e-06, -0.21506667137145996, -3.4332275390625e-05, -7.05718994140625e-05, -0.000476837158203125, -2.09808349609375e-05, 0.0, -0.37352657318115234, -7.62939453125e-06, -0.3379182815551758, 0.0, -0.001407623291015625, -0.000682830810546875, -0.000209808349609375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dalaran", "Mage", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 102, 19, 125, "Minion", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>", 217, 54, 197, "charge", "<EOS>", 20, 126, "True", "<EOS>", 54, 197, "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, taunt=True)\n"}, {"score": -8.992626308067848, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Dalaran Mage", "hole1": 3}, {"_type": "Template11", "hole0": 1, "hole1": 4}], "_type": "ClassDef", "name": "DalaranMage", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.033323527139146e-06, -6.198863957251888e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -9.5367431640625e-06, -0.14910602569580078, -8.392333984375e-05, -4.327211718191393e-05, -9.775161743164062e-06, -1.9073486328125e-05, -1.33514404296875e-05, -0.00012290450104046613, -3.6120269214734435e-05, -1.823902130126953e-05, -1.9073486328125e-06, -8.842300415039062, -3.4332275390625e-05, -5.7220458984375e-06, -3.576272320060525e-06, -0.0007224082946777344, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Dalaran", "Mage", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 73, 146, "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4)\n"}, {"score": -21.41061019897461, "model_output": {"_type": "Module", "body": []}, "score_history": [-7.62939453125e-06, 0.0, -21.410602569580078], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 23}
{"beams": [{"score": -0.14446076483999803, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Divine Spirit", "hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "increase_health"}], "_type": "ClassDef", "name": "DivineSpirit", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0001767873764038086, -4.0531158447265625e-06, -1.251697449333733e-05, -4.38690185546875e-05, -8.7738037109375e-05, 0.0, -1.7404538084520027e-05, -0.0006326402071863413, -2.0265579223632812e-06, -0.0001049041748046875, -0.0009899139404296875, -6.4849853515625e-05, -0.0003652571758721024, -0.00047194294165819883, -0.00012052059173583984, -0.0001010894775390625, -0.00018689793068915606, 0.0, -0.019364118576049805, -1.1920928244535389e-07, -2.7418136596679688e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -0.00042366981506347656, -9.775161743164062e-06, -0.001129150390625, -0.0009021759033203125, -1.9073486328125e-06, 0.0, -0.0002498626708984375, 0.0, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, 0.0, -0.057137370109558105, 0.0, -0.000156402587890625, -2.47955322265625e-05, -5.7220458984375e-06, -0.02478313446044922, -5.7220458984375e-06, -0.0004482269287109375, 0.0, -0.0001544952392578125, 0.0, -4.017353057861328e-05, 0.0, -0.035903096199035645, 0.0], "choice_history": [55, 124, 221, 63, 103, "Divine", "Spirit", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"score": -3.5050563487557085, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Divine Spirit", "hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "increase_health"}], "_type": "ClassDef", "name": "DivineSpirit", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0001767873764038086, -4.0531158447265625e-06, -1.251697449333733e-05, -4.38690185546875e-05, -8.7738037109375e-05, 0.0, -1.7404538084520027e-05, -0.0006326402071863413, -2.0265579223632812e-06, -0.0001049041748046875, -0.0009899139404296875, -6.4849853515625e-05, -0.0003652571758721024, -0.00047194294165819883, -0.00012052059173583984, -0.0001010894775390625, -0.00018689793068915606, 0.0, -0.019364118576049805, -1.1920928244535389e-07, -2.7418136596679688e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -0.00042366981506347656, -9.775161743164062e-06, -0.001129150390625, -0.0009021759033203125, -1.9073486328125e-06, 0.0, -0.0002498626708984375, 0.0, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, 0.0, -0.057137370109558105, 0.0, -0.000156402587890625, -2.47955322265625e-05, -5.7220458984375e-06, -0.02478313446044922, -5.7220458984375e-06, -0.0004482269287109375, 0.0, -0.0001544952392578125, 0.0, -4.017353057861328e-05, 0.0, -3.396498680114746, 0.0], "choice_history": [55, 124, 221, 63, 103, "Divine", "Spirit", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.card)\n"}, {"score": -4.180871931031092, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Divine Spirit", "hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "increase_health"}], "_type": "ClassDef", "name": "DivineSpirit", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0001767873764038086, -4.0531158447265625e-06, -1.251697449333733e-05, -4.38690185546875e-05, -8.7738037109375e-05, 0.0, -1.7404538084520027e-05, -0.0006326402071863413, -2.0265579223632812e-06, -0.0001049041748046875, -0.0009899139404296875, -6.4849853515625e-05, -0.0003652571758721024, -0.00047194294165819883, -0.00012052059173583984, -0.0001010894775390625, -0.00018689793068915606, 0.0, -0.019364118576049805, -1.1920928244535389e-07, -2.7418136596679688e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -0.00042366981506347656, -9.775161743164062e-06, -0.001129150390625, -0.0009021759033203125, -1.9073486328125e-06, 0.0, -0.0002498626708984375, 0.0, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, 0.0, -0.057137370109558105, 0.0, -0.000156402587890625, -2.47955322265625e-05, -5.7220458984375e-06, -4.078952789306641, 0.0, -0.007119178771972656, 0.0, -0.011673927307128906, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Divine", "Spirit", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "target", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target)\n"}, {"score": -4.414294925593815, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Divine Spirit", "hole2": "PALADIN", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "increase_health"}], "_type": "ClassDef", "name": "DivineSpirit", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0001767873764038086, -4.0531158447265625e-06, -1.251697449333733e-05, -4.38690185546875e-05, -8.7738037109375e-05, 0.0, -1.7404538084520027e-05, -0.0006326402071863413, -2.0265579223632812e-06, -0.0001049041748046875, -0.0009899139404296875, -6.4849853515625e-05, -0.0003652571758721024, -0.00047194294165819883, -0.00012052059173583984, -0.0001010894775390625, -0.00018689793068915606, 0.0, -4.290493488311768, 0.0, -3.6716410249937326e-05, -1.1920928244535389e-07, -4.38690185546875e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -8.0108642578125e-05, 0.0, -0.0005190372467041016, -7.867813110351562e-06, -0.0009098052978515625, -0.0007724761962890625, -1.9073486328125e-06, 0.0, -0.0002689361572265625, 0.0, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, 0.0, -0.056636691093444824, 0.0, -0.0001354217529296875, -2.47955322265625e-05, -5.7220458984375e-06, -0.024621963500976562, -5.7220458984375e-06, -0.000453948974609375, 0.0, -0.0001468658447265625, 0.0, -4.017353057861328e-05, 0.0, -0.03549695014953613, 0.0], "choice_history": [55, 124, 221, 63, 103, "Divine", "Spirit", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"score": -4.478520480110994, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Divine Spirit", "hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "DivineSpirit", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0001767873764038086, -4.0531158447265625e-06, -1.251697449333733e-05, -4.38690185546875e-05, -8.7738037109375e-05, 0.0, -1.7404538084520027e-05, -0.0006326402071863413, -2.0265579223632812e-06, -0.0001049041748046875, -0.0009899139404296875, -6.4849853515625e-05, -0.0003652571758721024, -0.00047194294165819883, -0.00012052059173583984, -0.0001010894775390625, -0.00018689793068915606, 0.0, -0.019364118576049805, -1.1920928244535389e-07, -2.7418136596679688e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -0.00042366981506347656, -9.775161743164062e-06, -0.001129150390625, -0.0009021759033203125, -1.9073486328125e-06, 0.0, -0.0002498626708984375, 0.0, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, 0.0, -3.575939893722534, 0.0, -1.33514404296875e-05, -0.7879457473754883, -1.9073486328125e-06, -0.017989158630371094, -3.814697265625e-06, -0.0003662109375, 0.0, -0.0003986358642578125, 0.0, -4.398822784423828e-05, 0.0, -0.07001614570617676, 0.0], "choice_history": [55, 124, 221, 63, 103, "Divine", "Spirit", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.health)\n"}, {"score": -4.589367834046236, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Divine Spirit", "hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "set_health_to"}], "_type": "ClassDef", "name": "DivineSpirit", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0001767873764038086, -4.0531158447265625e-06, -1.251697449333733e-05, -4.38690185546875e-05, -8.7738037109375e-05, 0.0, -1.7404538084520027e-05, -0.0006326402071863413, -2.0265579223632812e-06, -0.0001049041748046875, -0.0009899139404296875, -6.4849853515625e-05, -0.0003652571758721024, -0.00047194294165819883, -0.00012052059173583984, -0.0001010894775390625, -0.00018689793068915606, 0.0, -0.019364118576049805, -1.1920928244535389e-07, -2.7418136596679688e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -0.00042366981506347656, -9.775161743164062e-06, -0.001129150390625, -0.0009021759033203125, -1.9073486328125e-06, 0.0, -0.0002498626708984375, 0.0, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, 0.0, -4.44067907333374, -2.0265579223632812e-06, -1.1444091796875e-05, -0.015110015869140625, -1.9073486328125e-06, -0.02807331085205078, -3.814697265625e-06, -0.000537872314453125, 0.0, -0.000370025634765625, 0.0, -4.589557647705078e-05, 0.0, -0.07873082160949707, 0.0], "choice_history": [55, 124, 221, 63, 103, "Divine", "Spirit", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(self.target.health)\n"}, {"score": -4.943604325535425, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Divine Spirit", "hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}, "_type": "BinOp", "left": {"_type": "Num", "n": 2}, "op": {"_type": "Sub"}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "DivineSpirit", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0001767873764038086, -4.0531158447265625e-06, -1.251697449333733e-05, -4.38690185546875e-05, -8.7738037109375e-05, 0.0, -1.7404538084520027e-05, -0.0006326402071863413, -2.0265579223632812e-06, -0.0001049041748046875, -0.0009899139404296875, -6.4849853515625e-05, -0.0003652571758721024, -0.00047194294165819883, -0.00012052059173583984, -0.0001010894775390625, -0.00018689793068915606, 0.0, -0.019364118576049805, -1.1920928244535389e-07, -2.7418136596679688e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -0.00042366981506347656, -9.775161743164062e-06, -0.001129150390625, -0.0009021759033203125, -1.9073486328125e-06, 0.0, -0.0002498626708984375, 0.0, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, 0.0, -3.575939893722534, 0.0, -1.33514404296875e-05, -1.0593671798706055, -0.0006303787231445312, -0.0004215240478515625, -0.0001468658447265625, -0.005346782971173525, 0.0, -0.031136512756347656, -0.004764556884765625, -0.0007762908935546875, -5.7220458984375e-06, 0.0, -0.0002422332763671875, 0.0, -0.0001392364501953125, 0.0, -0.0010166168212890625, -3.576278118089249e-07, -8.82148651726311e-06, 0.0, -0.23784637451171875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Divine", "Spirit", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 30, 96, 21, 130, "2", "<EOS>", 57, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2 - self.target.calculate_attack())\n"}, {"score": -5.787555304482304, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Divine Spirit", "hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "DivineSpirit", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0001767873764038086, -4.0531158447265625e-06, -1.251697449333733e-05, -4.38690185546875e-05, -8.7738037109375e-05, 0.0, -1.7404538084520027e-05, -0.0006326402071863413, -2.0265579223632812e-06, -0.0001049041748046875, -0.0009899139404296875, -6.4849853515625e-05, -0.0003652571758721024, -0.00047194294165819883, -0.00012052059173583984, -0.0001010894775390625, -0.00018689793068915606, 0.0, -0.019364118576049805, -1.1920928244535389e-07, -2.7418136596679688e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -0.00042366981506347656, -9.775161743164062e-06, -0.001129150390625, -0.0009021759033203125, -1.9073486328125e-06, 0.0, -0.0002498626708984375, 0.0, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, 0.0, -3.575939893722534, 0.0, -1.33514404296875e-05, -2.1738033294677734, -5.7220458984375e-06, -0.011991143226623535, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "Divine", "Spirit", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self)\n"}, {"score": -6.330505696251741, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Divine Spirit", "hole2": "ROGUE", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "increase_health"}], "_type": "ClassDef", "name": "DivineSpirit", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0001767873764038086, -4.0531158447265625e-06, -1.251697449333733e-05, -4.38690185546875e-05, -8.7738037109375e-05, 0.0, -1.7404538084520027e-05, -0.0006326402071863413, -2.0265579223632812e-06, -0.0001049041748046875, -0.0009899139404296875, -6.4849853515625e-05, -0.0003652571758721024, -0.00047194294165819883, -0.00012052059173583984, -0.0001010894775390625, -0.00018689793068915606, 0.0, -6.206358432769775, -3.814697265625e-06, -3.921985626220703e-05, -1.1920928244535389e-07, -3.62396240234375e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.00045609474182128906, -9.775161743164062e-06, -0.0010166168212890625, -0.00098419189453125, -1.9073486328125e-06, 0.0, -0.00025177001953125, 0.0, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, 0.0, -0.0561981201171875, 0.0, -0.000141143798828125, -2.288818359375e-05, -5.7220458984375e-06, -0.02515697479248047, -5.7220458984375e-06, -0.000446319580078125, 0.0, -0.000152587890625, 0.0, -4.017353057861328e-05, 0.0, -0.0355149507522583, 0.0], "choice_history": [55, 124, 221, 63, 103, "Divine", "Spirit", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"score": -6.333621149077764, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Divine Spirit", "hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Num", "n": 2}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "DivineSpirit", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0001767873764038086, -4.0531158447265625e-06, -1.251697449333733e-05, -4.38690185546875e-05, -8.7738037109375e-05, 0.0, -1.7404538084520027e-05, -0.0006326402071863413, -2.0265579223632812e-06, -0.0001049041748046875, -0.0009899139404296875, -6.4849853515625e-05, -0.0003652571758721024, -0.00047194294165819883, -0.00012052059173583984, -0.0001010894775390625, -0.00018689793068915606, 0.0, -0.019364118576049805, -1.1920928244535389e-07, -2.7418136596679688e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -0.00042366981506347656, -9.775161743164062e-06, -0.001129150390625, -0.0009021759033203125, -1.9073486328125e-06, 0.0, -0.0002498626708984375, 0.0, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, 0.0, -3.575939893722534, 0.0, -1.33514404296875e-05, -2.6561365127563477, -5.7220458984375e-06, -0.0757240429520607, 0.0], "choice_history": [55, 124, 221, 63, 103, "Divine", "Spirit", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "2", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n"}, {"score": -6.72838410466192, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Divine Spirit", "hole2": "WARRIOR", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "increase_health"}], "_type": "ClassDef", "name": "DivineSpirit", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0001767873764038086, -4.0531158447265625e-06, -1.251697449333733e-05, -4.38690185546875e-05, -8.7738037109375e-05, 0.0, -1.7404538084520027e-05, -0.0006326402071863413, -2.0265579223632812e-06, -0.0001049041748046875, -0.0009899139404296875, -6.4849853515625e-05, -0.0003652571758721024, -0.00047194294165819883, -0.00012052059173583984, -0.0001010894775390625, -0.00018689793068915606, 0.0, -6.600081920623779, -0.0028839111328125, -4.8518159019295126e-05, -1.1920928244535389e-07, -3.24249267578125e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -6.29425048828125e-05, 0.0, -0.00037610530853271484, -1.1682510375976562e-05, -0.0013103485107421875, -0.0010738372802734375, -1.9073486328125e-06, 0.0, -0.0002307891845703125, 0.0, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, 0.0, -0.05711638927459717, 0.0, -0.0001468658447265625, -2.288818359375e-05, -5.7220458984375e-06, -0.02499103546142578, -5.7220458984375e-06, -0.0004444122314453125, 0.0, -0.0001544952392578125, 0.0, -4.017353057861328e-05, 0.0, -0.03575146198272705, 0.0], "choice_history": [55, 124, 221, 63, 103, "Divine", "Spirit", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"score": -6.89772435756003, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Divine Spirit", "hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Num", "n": 1}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "increase_health"}], "_type": "ClassDef", "name": "DivineSpirit", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0001767873764038086, -4.0531158447265625e-06, -1.251697449333733e-05, -4.38690185546875e-05, -8.7738037109375e-05, 0.0, -1.7404538084520027e-05, -0.0006326402071863413, -2.0265579223632812e-06, -0.0001049041748046875, -0.0009899139404296875, -6.4849853515625e-05, -0.0003652571758721024, -0.00047194294165819883, -0.00012052059173583984, -0.0001010894775390625, -0.00018689793068915606, 0.0, -0.019364118576049805, -1.1920928244535389e-07, -2.7418136596679688e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -0.00042366981506347656, -9.775161743164062e-06, -0.001129150390625, -0.0009021759033203125, -1.9073486328125e-06, 0.0, -0.0002498626708984375, 0.0, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, 0.0, -0.057137370109558105, 0.0, -0.000156402587890625, -2.47955322265625e-05, -5.7220458984375e-06, -4.984000205993652, -3.4332275390625e-05, -0.3434394598007202, 0.0, -1.4871244430541992, 0.0], "choice_history": [55, 124, 221, 63, 103, "Divine", "Spirit", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 29, 94, 21, 130, "1", "<EOS>", "health", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health((1).health)\n"}, {"score": -6.918795076325061, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Divine Spirit", "hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Attribute", "attr": "PRIEST", "value": {"_type": "Num", "n": 1}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "increase_health"}], "_type": "ClassDef", "name": "DivineSpirit", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0001767873764038086, -4.0531158447265625e-06, -1.251697449333733e-05, -4.38690185546875e-05, -8.7738037109375e-05, 0.0, -1.7404538084520027e-05, -0.0006326402071863413, -2.0265579223632812e-06, -0.0001049041748046875, -0.0009899139404296875, -6.4849853515625e-05, -0.0003652571758721024, -0.00047194294165819883, -0.00012052059173583984, -0.0001010894775390625, -0.00018689793068915606, 0.0, -0.019364118576049805, -1.1920928244535389e-07, -2.7418136596679688e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -0.00042366981506347656, -9.775161743164062e-06, -0.001129150390625, -0.0009021759033203125, -1.9073486328125e-06, 0.0, -0.0002498626708984375, 0.0, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, 0.0, -0.057137370109558105, 0.0, -0.000156402587890625, -2.47955322265625e-05, -5.7220458984375e-06, -4.984000205993652, -3.4332275390625e-05, -0.3434394598007202, 0.0, -1.5081944465637207, -7.152555099310121e-07], "choice_history": [55, 124, 221, 63, 103, "Divine", "Spirit", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 29, 94, 21, 130, "1", "<EOS>", "PRIEST", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health((1).PRIEST)\n"}, {"score": -7.122094121888033, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Divine Spirit", "hole2": "PRIEST", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "set_health_to"}], "_type": "ClassDef", "name": "DivineSpirit", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0001767873764038086, -4.0531158447265625e-06, -1.251697449333733e-05, -4.38690185546875e-05, -8.7738037109375e-05, 0.0, -1.7404538084520027e-05, -0.0006326402071863413, -2.0265579223632812e-06, -0.0001049041748046875, -0.0009899139404296875, -6.4849853515625e-05, -0.0003652571758721024, -0.00047194294165819883, -0.00012052059173583984, -0.0001010894775390625, -0.00018689793068915606, 0.0, -0.019364118576049805, -1.1920928244535389e-07, -2.7418136596679688e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -0.00042366981506347656, -9.775161743164062e-06, -0.001129150390625, -0.0009021759033203125, -1.9073486328125e-06, 0.0, -0.0002498626708984375, 0.0, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, 0.0, -4.44067907333374, -2.0265579223632812e-06, -1.1444091796875e-05, -0.015110015869140625, -1.9073486328125e-06, -0.02807331085205078, -3.814697265625e-06, -0.000537872314453125, 0.0, -0.000370025634765625, 0.0, -4.589557647705078e-05, 0.0, -2.611457109451294, 0.0], "choice_history": [55, 124, 221, 63, 103, "Divine", "Spirit", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(self.target.card)\n"}, {"score": -20.730913162231445, "model_output": {"_type": "Module", "body": []}, "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -20.730899810791016], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 24}
{"beams": [{"score": -0.025540227121865655, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Dragonling Mechanic", "hole2": "ALL", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Summon", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MechanicalDragonling"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "DragonlingMechanic", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006995138246566057, -0.0003730561875272542, -0.00018702188390307128, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -4.41074053014745e-06, -4.088878631591797e-05, -9.655952453613281e-06, -5.7220458984375e-05, -0.0028553009033203125, -1.52587890625e-05, -8.344646857949556e-07, -0.00020478830265346915, -0.000186920166015625, 0.0, -0.006028652656823397, 0.0, -0.0007561437669210136, 0.0, -0.0023126602172851562, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0004889965057373047, 0.0, -5.7220458984375e-06, -0.0004520416259765625, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0016340856673195958, -6.31808916295995e-06, -0.0003871917724609375, -6.103515625e-05, -7.62939453125e-06, -0.0008946496527642012, -0.006284023635089397, -0.0006787856691516936, 0.0, -1.71661376953125e-05, -9.322135883849114e-05, -7.867813110351562e-05, -3.576278118089249e-07, -0.0005340576171875, -3.814697265625e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dragonling", "Mechanic", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Mechanical", "Dragonling", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -5.142126604791393, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Dragonling Mechanic", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Summon", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MechanicalDragonling"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "DragonlingMechanic", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006995138246566057, -0.0003730561875272542, -0.00018702188390307128, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -4.41074053014745e-06, -4.088878631591797e-05, -9.655952453613281e-06, -5.7220458984375e-05, -0.0028553009033203125, -1.52587890625e-05, -8.344646857949556e-07, -0.00020478830265346915, -0.000186920166015625, 0.0, -5.122020244598389, -3.576278118089249e-07, -0.00014197824930306524, 0.0, -0.002990245819091797, -1.1920928244535389e-07, -1.1444091796875e-05, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -0.0005365610122680664, 0.0, -5.7220458984375e-06, -0.0003223419189453125, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.001823516795411706, -6.31808916295995e-06, -0.000362396240234375, -8.58306884765625e-05, -1.1444091796875e-05, -0.0010312632657587528, -0.006575990002602339, -0.0006491222884505987, 0.0, -2.09808349609375e-05, -9.500945452600718e-05, -8.440017700195312e-05, -3.576278118089249e-07, -0.0005321502685546875, -1.9073486328125e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dragonling", "Mechanic", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dragonling", " ", "Mechanic", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Mechanical", "Dragonling", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -6.475813046396581, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Dragonling Mechanic", "hole2": "ALL", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Summon", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MechanicalMechanicalDragonling"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "DragonlingMechanic", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006995138246566057, -0.0003730561875272542, -0.00018702188390307128, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -4.41074053014745e-06, -4.088878631591797e-05, -9.655952453613281e-06, -5.7220458984375e-05, -0.0028553009033203125, -1.52587890625e-05, -8.344646857949556e-07, -0.00020478830265346915, -0.000186920166015625, 0.0, -0.006028652656823397, 0.0, -0.0007561437669210136, 0.0, -0.0023126602172851562, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0004889965057373047, 0.0, -5.7220458984375e-06, -0.0004520416259765625, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0016340856673195958, -6.31808916295995e-06, -0.0003871917724609375, -6.103515625e-05, -7.62939453125e-06, -0.0008946496527642012, -5.817471981048584, -0.6393855214118958, -0.0001231371716130525, 0.0, -2.288818359375e-05, -0.0001293420500587672, -0.00023484230041503906, -2.3841855067985307e-07, -0.000591278076171875, -3.814697265625e-06, -6.079673767089844e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dragonling", "Mechanic", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Mechanical", "Mechanical", "Dragonling", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalMechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -6.576744875383689, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Dragonling Mechanic", "hole2": "ALL", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Summon", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Mechanical2"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "DragonlingMechanic", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006995138246566057, -0.0003730561875272542, -0.00018702188390307128, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -4.41074053014745e-06, -4.088878631591797e-05, -9.655952453613281e-06, -5.7220458984375e-05, -0.0028553009033203125, -1.52587890625e-05, -8.344646857949556e-07, -0.00020478830265346915, -0.000186920166015625, 0.0, -0.006028652656823397, 0.0, -0.0007561437669210136, 0.0, -0.0023126602172851562, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0004889965057373047, 0.0, -5.7220458984375e-06, -0.0004520416259765625, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0016340856673195958, -6.31808916295995e-06, -0.0003871917724609375, -6.103515625e-05, -7.62939453125e-06, -0.0008946496527642012, -6.558272838592529, -1.6212332411669195e-05, -1.9073486328125e-05, -7.62939453125e-06, -9.775142825674266e-05, -9.775161743164062e-05, -1.1920928244535389e-07, -0.0003833770751953125, -1.9073486328125e-06, -4.410743713378906e-06, -2.3841855067985307e-07, -1.1444091796875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dragonling", "Mechanic", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Mechanical", "2", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(Mechanical2()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -6.91273303936083, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Dragonling Mechanic", "hole2": "ALL", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Summon", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MechanicalMechanical"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "DragonlingMechanic", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006995138246566057, -0.0003730561875272542, -0.00018702188390307128, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -4.41074053014745e-06, -4.088878631591797e-05, -9.655952453613281e-06, -5.7220458984375e-05, -0.0028553009033203125, -1.52587890625e-05, -8.344646857949556e-07, -0.00020478830265346915, -0.000186920166015625, 0.0, -0.006028652656823397, 0.0, -0.0007561437669210136, 0.0, -0.0023126602172851562, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0004889965057373047, 0.0, -5.7220458984375e-06, -0.0004520416259765625, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0016340856673195958, -6.31808916295995e-06, -0.0003871917724609375, -6.103515625e-05, -7.62939453125e-06, -0.0008946496527642012, -5.817471981048584, -1.0767546892166138, -3.814697265625e-06, -9.5367431640625e-06, -6.604165537282825e-05, -6.54458999633789e-05, -2.3841855067985307e-07, -0.000507354736328125, -1.9073486328125e-06, -6.318092346191406e-06, -2.3841855067985307e-07, -1.33514404296875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dragonling", "Mechanic", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Mechanical", "Mechanical", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalMechanical()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -7.137003427033726, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Dragonling Mechanic", "hole2": "ALL", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MECH", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "deathrattle", "hole3": {"_type": "Call", "func": {"id": "Deathrattle", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Summon", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MechanicalDragonling"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}, "_type": "Template10", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "DragonlingMechanic", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006995138246566057, -0.0003730561875272542, -0.00018702188390307128, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -4.41074053014745e-06, -4.088878631591797e-05, -9.655952453613281e-06, -5.7220458984375e-05, -0.0028553009033203125, -1.52587890625e-05, -8.344646857949556e-07, -0.00020478830265346915, -0.000186920166015625, 0.0, -0.006028652656823397, 0.0, -0.0007561437669210136, 0.0, -6.670041084289551, -9.655922440288123e-06, -0.009283065795898438, 0.0, -0.0007381439208984375, 0.0, -3.4332275390625e-05, 0.0, -0.39907360076904297, -1.1920928244535389e-07, -0.0011997222900390625, -1.1444091796875e-05, -8.225440979003906e-06, -7.152555099310121e-07, -6.628035771427676e-05, 0.0, -0.030462145805358887, -3.755022044060752e-05, -2.288818359375e-05, -0.0006809234619140625, -1.1444091796875e-05, 0.0, -0.0003987550735473633, 0.0, -1.52587890625e-05, -0.001361846923828125, -0.0027790069580078125, -1.71661376953125e-05, -1.9073486328125e-06, -0.0008336989558301866, -2.7179647076991387e-05, -0.000125885009765625, -2.288818359375e-05, -5.7220458984375e-06, -0.0012535897549241781, -0.0059012481942772865, -0.0006475735572166741, -1.9073486328125e-06, -2.09808349609375e-05, -0.00027298886561766267, -0.0001227855682373047, -4.768370445162873e-07], "choice_history": [55, 124, 221, 63, 103, "Dragonling", "Mechanic", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Mechanical", "Dragonling", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 4, deathrattle=Deathrattle(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n"}, {"score": -7.302189401200877, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Dragonling Mechanic", "hole2": "ALL", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Summon", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MechanicalDragonling"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "<UNK>Mechanic", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.27473258972168, -0.0005461900727823377, -0.0023725521750748158, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -3.4570680327306036e-06, -3.516674041748047e-05, -9.5367431640625e-06, -5.14984130859375e-05, -0.0028095245361328125, -1.52587890625e-05, -8.344646857949556e-07, -0.00016318993584718555, -0.0002231597900390625, -1.9073486328125e-06, -0.006116271484643221, 0.0, -0.000912665156647563, 0.0, -0.002268552780151367, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0005004405975341797, 0.0, -5.7220458984375e-06, -0.00045013427734375, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0016309859929606318, -6.19888032815652e-06, -0.0003871917724609375, -5.91278076171875e-05, -7.62939453125e-06, -0.0008851129096001387, -0.006375537253916264, -0.000713213172275573, 0.0, -1.71661376953125e-05, -9.53671260504052e-05, -8.249282836914062e-05, -3.576278118089249e-07, -0.0005550384521484375, -3.814697265625e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mechanic", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Mechanical", "Dragonling", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Mechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -7.38338335851639, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Dragonling Mechanic", "hole2": "ALL", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Summon", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "DragonlingDragonling"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "DragonlingMechanic", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006995138246566057, -0.0003730561875272542, -0.00018702188390307128, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -4.41074053014745e-06, -4.088878631591797e-05, -9.655952453613281e-06, -5.7220458984375e-05, -0.0028553009033203125, -1.52587890625e-05, -8.344646857949556e-07, -0.00020478830265346915, -0.000186920166015625, 0.0, -0.006028652656823397, 0.0, -0.0007561437669210136, 0.0, -0.0023126602172851562, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0004889965057373047, 0.0, -5.7220458984375e-06, -0.0004520416259765625, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0016340856673195958, -6.31808916295995e-06, -0.0003871917724609375, -6.103515625e-05, -7.62939453125e-06, -7.2995147705078125, -0.06546242535114288, -0.000645789026748389, -1.9073486328125e-06, -3.814697265625e-06, -0.00012338152737356722, -6.151199340820312e-05, -1.1920928244535389e-07, -0.0006084442138671875, -3.814697265625e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -1.3470649719238281e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dragonling", "Mechanic", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Dragonling", "Dragonling", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            DragonlingDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -7.469382903146055, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Dragonling Mechanic", "hole2": "ALL", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Summon", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MechanicalMechanicMechanic"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "DragonlingMechanic", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006995138246566057, -0.0003730561875272542, -0.00018702188390307128, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -4.41074053014745e-06, -4.088878631591797e-05, -9.655952453613281e-06, -5.7220458984375e-05, -0.0028553009033203125, -1.52587890625e-05, -8.344646857949556e-07, -0.00020478830265346915, -0.000186920166015625, 0.0, -0.006028652656823397, 0.0, -0.0007561437669210136, 0.0, -0.0023126602172851562, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0004889965057373047, 0.0, -5.7220458984375e-06, -0.0004520416259765625, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0016340856673195958, -6.31808916295995e-06, -0.0003871917724609375, -6.103515625e-05, -7.62939453125e-06, -0.0008946496527642012, -6.4301042556762695, -0.40385735034942627, -0.6166806817054749, -0.000102996826171875, -1.33514404296875e-05, -4.9948466767091304e-05, -9.381771087646484e-05, -7.152555099310121e-07, -0.0006256103515625, -3.814697265625e-06, -8.344650268554688e-06, -2.3841855067985307e-07, -9.655952453613281e-06, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dragonling", "Mechanic", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Mechanical", "Mechanic", "Mechanic", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalMechanicMechanic()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -7.495884718759122, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Dragonling Mechanic", "hole2": "ALL", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Equip", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MechanicalDragonling"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "DragonlingMechanic", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006995138246566057, -0.0003730561875272542, -0.00018702188390307128, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -4.41074053014745e-06, -4.088878631591797e-05, -9.655952453613281e-06, -5.7220458984375e-05, -0.0028553009033203125, -1.52587890625e-05, -8.344646857949556e-07, -0.00020478830265346915, -0.000186920166015625, 0.0, -0.006028652656823397, 0.0, -0.0007561437669210136, 0.0, -0.0023126602172851562, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0004889965057373047, 0.0, -5.7220458984375e-06, -0.0004520416259765625, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -7.169531345367432, -1.0371197276981547e-05, -1.71661376953125e-05, -0.0034160614013671875, 0.0, -0.3012809157371521, -0.005984298884868622, -8.642347529530525e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00011694429122144356, -9.357929229736328e-05, -1.1920928244535389e-07, -0.0004749298095703125, -1.9073486328125e-06, -8.225440979003906e-06, -2.3841855067985307e-07, -1.1444091796875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dragonling", "Mechanic", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Equip", "<EOS>", 208, 49, 174, "Mechanical", "Dragonling", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Equip(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -7.598577501779857, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "combo", "hole0": "Dragonling Mechanic", "hole2": "ALL", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Summon", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MechanicalDragonling"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "DragonlingMechanic", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006995138246566057, -0.0003730561875272542, -0.00018702188390307128, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -4.41074053014745e-06, -4.088878631591797e-05, -9.655952453613281e-06, -5.7220458984375e-05, -0.0028553009033203125, -1.52587890625e-05, -8.344646857949556e-07, -0.00020478830265346915, -0.000186920166015625, 0.0, -0.006028652656823397, 0.0, -0.0007561437669210136, 0.0, -7.575146675109863, 0.0, -0.000125885009765625, -0.000179290771484375, -3.814697265625e-06, 0.0, -0.0014442205429077148, 0.0, -1.1444091796875e-05, -0.00035858154296875, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.001205882173962891, -1.1563293810468167e-05, -0.0001678466796875, -4.9591064453125e-05, -1.1444091796875e-05, -0.0008855871274136007, -0.005985769908875227, -0.0006693744799122214, 0.0, -2.09808349609375e-05, -0.00010216207010671496, -8.058547973632812e-05, -2.3841855067985307e-07, -0.000553131103515625, -3.814697265625e-06, -6.079673767089844e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dragonling", "Mechanic", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "combo", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Mechanical", "Dragonling", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, combo=Battlecry(Summon(MechanicalDragonling\n            ()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -7.805202813451757, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Dragonling Mechanic", "hole2": "ALL", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Summon", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MechanicalDragonling"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"hole2": "deathrattle", "hole3": {"_type": "Call", "func": {"id": "Deathrattle", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Summon", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MechanicalDragonling"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}, "_type": "Template10", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "DragonlingMechanic", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006995138246566057, -0.0003730561875272542, -0.00018702188390307128, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -4.41074053014745e-06, -4.088878631591797e-05, -9.655952453613281e-06, -5.7220458984375e-05, -0.0028553009033203125, -1.52587890625e-05, -8.344646857949556e-07, -0.00020478830265346915, -0.000186920166015625, 0.0, -0.006028652656823397, 0.0, -0.0007561437669210136, 0.0, -0.0023126602172851562, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0004889965057373047, 0.0, -5.7220458984375e-06, -0.0004520416259765625, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0016340856673195958, -6.31808916295995e-06, -0.0003871917724609375, -6.103515625e-05, -7.62939453125e-06, -0.0008946496527642012, -0.006284023635089397, -0.0006787856691516936, 0.0, -1.71661376953125e-05, -9.322135883849114e-05, -7.867813110351562e-05, -3.576278118089249e-07, -7.551851272583008, -0.000774383544921875, -1.0371186363045126e-05, -7.152555099310121e-07, -0.00022935852757655084, 0.0, -0.21030974388122559, -5.054346183896996e-05, -9.5367431640625e-06, -0.00016021728515625, -1.9073486328125e-06, 0.0, -0.0024167299270629883, -2.3841855067985307e-07, -1.33514404296875e-05, -0.00225830078125, -0.0020771026611328125, -1.52587890625e-05, 0.0, -0.0009280751692131162, -4.1246246837545186e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -0.0012585828080773354, -0.00659036124125123, -0.0005253375275060534, -1.9073486328125e-06, -3.814697265625e-06, -0.0002551076759118587, -0.00035059452056884766, -4.768370445162873e-07], "choice_history": [55, 124, 221, 63, 103, "Dragonling", "Mechanic", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Mechanical", "Dragonling", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Mechanical", "Dragonling", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4, deathrattle=Deathrattle(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n"}, {"score": -8.007728759221692, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Dragonling Mechanic", "hole2": "ALL", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Summon", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MechanicalDragonling"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "Dragonling<UNK>", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006995138246566057, -7.9825615882873535, -0.00018702188390307128, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -4.41074053014745e-06, -4.088878631591797e-05, -9.655952453613281e-06, -5.7220458984375e-05, -0.0028553009033203125, -1.52587890625e-05, -8.344646857949556e-07, -0.00020478830265346915, -0.000186920166015625, 0.0, -0.006028652656823397, 0.0, -0.0007561437669210136, 0.0, -0.0023126602172851562, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0004889965057373047, 0.0, -5.7220458984375e-06, -0.0004520416259765625, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0016340856673195958, -6.31808916295995e-06, -0.0003871917724609375, -6.103515625e-05, -7.62939453125e-06, -0.0008946496527642012, -0.006284023635089397, -0.0006787856691516936, 0.0, -1.71661376953125e-05, -9.322135883849114e-05, -7.867813110351562e-05, -3.576278118089249e-07, -0.0005340576171875, -3.814697265625e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dragonling", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Mechanical", "Dragonling", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class Dragonling<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -8.074499330047246, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Dragonling Mechanic", "hole2": "ALL", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Summon", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MechanicalMechanic"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "DragonlingMechanic", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006995138246566057, -0.0003730561875272542, -0.00018702188390307128, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -4.41074053014745e-06, -4.088878631591797e-05, -9.655952453613281e-06, -5.7220458984375e-05, -0.0028553009033203125, -1.52587890625e-05, -8.344646857949556e-07, -0.00020478830265346915, -0.000186920166015625, 0.0, -0.006028652656823397, 0.0, -0.0007561437669210136, 0.0, -0.0023126602172851562, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0004889965057373047, 0.0, -5.7220458984375e-06, -0.0004520416259765625, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0016340856673195958, -6.31808916295995e-06, -0.0003871917724609375, -6.103515625e-05, -7.62939453125e-06, -0.0008946496527642012, -6.4301042556762695, -1.625770926475525, -4.9591064453125e-05, -3.814697265625e-06, -5.948516627540812e-05, -3.6835670471191406e-05, -4.768370445162873e-07, -0.0006198883056640625, -3.814697265625e-06, -6.4373016357421875e-06, -2.3841855067985307e-07, -1.1444091796875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dragonling", "Mechanic", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Mechanical", "Mechanic", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalMechanic()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -21.74648094177246, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -21.746471405029297], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 25}
{"beams": [{"score": -0.9455947993569751, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 2}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "DrainLife", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -9.059495641849935e-05, -0.0071852137334644794, -6.318072337307967e-06, -1.71661376953125e-05, -9.34600830078125e-05, -7.62939453125e-06, -0.0004982948303222656, -3.278254735050723e-05, -3.814697265625e-06, -2.09808349609375e-05, -0.037227630615234375, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.0005928949103690684, -1.0967253729177173e-05, -0.000102996826171875, -2.6702880859375e-05, -1.1444091796875e-05, 0.0, -0.0001544952392578125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -5.006789251638111e-06, -1.9073486328125e-06, -1.2397744285408407e-05, -1.1920928244535389e-07, -0.0002155303955078125, -0.000598907470703125, -4.76837158203125e-05, -8.4638240878121e-06, -2.6702880859375e-05, -1.6689286894688848e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -2.7537011192180216e-05, -4.410734163684538e-06, -8.392333984375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.014548063278198242, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -7.62939453125e-06, -0.0001506805419921875, -4.780292510986328e-05, -1.1086437552876305e-05, -0.016620755195617676, 0.0, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, -0.00016260147094726562, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004749298095703125, -3.814697265625e-06, -0.00020992755889892578, -5.841255187988281e-06, -0.05283081531524658, -5.7220458984375e-06, -0.15659809112548828, -8.0108642578125e-05, -9.560585021972656e-05, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -6.4849853515625e-05, -0.0001826285442803055, -5.960462772236497e-07, -1.9073486328125e-06, -0.000240325927734375, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0008335113525390625, -5.364416665543104e-06, -0.0024785995483398438, -5.7220458984375e-06, -6.103515625e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -2.7179718017578125e-05, -3.576278118089249e-07, -9.5367431640625e-06, -0.0003910064697265625, -2.47955322265625e-05, -6.29425048828125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -1.9073486328125e-06, -1.7404556274414062e-05, -1.8835040464182384e-05, -0.0001506805419921875, -6.103515625e-05, -0.5724611282348633, -0.0006656646728515625, -0.0007125142146833241, -6.568216485902667e-05, -7.05718994140625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -5.14984130859375e-05, -2.6702880859375e-05, 0.0, -3.0517578125e-05, 0.0, -0.000759124755859375, 0.0, -0.013428688049316406, 0.0, -0.009608502499759197, -1.9550319848349318e-05, -0.025048820301890373, -0.0009636878967285156, -7.62939453125e-06, -0.02172565460205078, -0.00041961669921875, -0.000186920166015625, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -0.0007190704345703125, -5.960462772236497e-07, -0.00326936854980886, -2.3841855067985307e-07, -2.288818359375e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.2576900189742446e-05, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -0.0005067586898803711, -7.510183422709815e-06], "choice_history": [55, 124, 221, 63, 103, "Drain", "Life", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drain", " ", "Life", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -2.1327003703977283, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "DrainLife", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -9.059495641849935e-05, -0.0071852137334644794, -6.318072337307967e-06, -1.71661376953125e-05, -9.34600830078125e-05, -7.62939453125e-06, -0.0004982948303222656, -3.278254735050723e-05, -3.814697265625e-06, -2.09808349609375e-05, -0.037227630615234375, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.0005928949103690684, -1.0967253729177173e-05, -0.000102996826171875, -2.6702880859375e-05, -1.1444091796875e-05, 0.0, -0.0001544952392578125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -5.006789251638111e-06, -1.9073486328125e-06, -1.2397744285408407e-05, -1.1920928244535389e-07, -0.0002155303955078125, -0.000598907470703125, -4.76837158203125e-05, -8.4638240878121e-06, -2.6702880859375e-05, -1.6689286894688848e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -2.7537011192180216e-05, -4.410734163684538e-06, -8.392333984375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.014548063278198242, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -7.62939453125e-06, -0.0001506805419921875, -4.780292510986328e-05, -1.1086437552876305e-05, -0.016620755195617676, 0.0, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, -0.00016260147094726562, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004749298095703125, -3.814697265625e-06, -0.00020992755889892578, -5.841255187988281e-06, -0.05283081531524658, -5.7220458984375e-06, -1.948556900024414, -0.00011444091796875, -5.7220458984375e-06, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.0003604888916015625, 0.0, -4.1961669921875e-05, -1.311301275563892e-06, -0.048552751541137695, -2.384185791015625e-06, -1.9073486328125e-06, -0.0004100799560546875, -0.000583648681640625, -0.0004565623530652374, -1.1920928244535389e-07, -7.62939453125e-06, -1.9073486328125e-05, -0.0005723237991333008, 0.0], "choice_history": [55, 124, 221, 63, 103, "Drain", "Life", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drain", " ", "Life", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -2.2577475387062407, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "DrainLife", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -9.059495641849935e-05, -0.0071852137334644794, -6.318072337307967e-06, -1.71661376953125e-05, -9.34600830078125e-05, -7.62939453125e-06, -0.0004982948303222656, -3.278254735050723e-05, -3.814697265625e-06, -2.09808349609375e-05, -0.037227630615234375, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.0005928949103690684, -1.0967253729177173e-05, -0.000102996826171875, -2.6702880859375e-05, -1.1444091796875e-05, 0.0, -0.0001544952392578125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -5.006789251638111e-06, -1.9073486328125e-06, -1.2397744285408407e-05, -1.1920928244535389e-07, -0.0002155303955078125, -0.000598907470703125, -4.76837158203125e-05, -8.4638240878121e-06, -2.6702880859375e-05, -1.6689286894688848e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -2.7537011192180216e-05, -4.410734163684538e-06, -8.392333984375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.014548063278198242, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -7.62939453125e-06, -0.0001506805419921875, -4.780292510986328e-05, -1.1086437552876305e-05, -0.016620755195617676, 0.0, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, -0.00016260147094726562, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004749298095703125, -3.814697265625e-06, -0.00020992755889892578, -5.841255187988281e-06, -0.05283081531524658, -5.7220458984375e-06, -0.15659809112548828, -8.0108642578125e-05, -9.560585021972656e-05, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -6.4849853515625e-05, -0.0001826285442803055, -5.960462772236497e-07, -1.9073486328125e-06, -0.000240325927734375, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0008335113525390625, -5.364416665543104e-06, -0.0024785995483398438, -5.7220458984375e-06, -6.103515625e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -2.7179718017578125e-05, -3.576278118089249e-07, -9.5367431640625e-06, -0.0003910064697265625, -2.47955322265625e-05, -6.29425048828125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -1.9073486328125e-06, -1.7404556274414062e-05, -1.8835040464182384e-05, -0.0001506805419921875, -6.103515625e-05, -0.8322420120239258, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-05, -4.76837158203125e-05, -1.9073486328125e-06, -0.0003185272216796875, -1.9073486328125e-06, -0.8161554336547852, 0.0, -1.537799835205078e-05, -2.384185791015625e-06, -0.059721946716308594, -1.1920928244535389e-07, -0.022207260131835938, -0.11426258087158203, -3.814697265625e-06, -0.0022792816162109375, -7.152555099310121e-07, -0.00121307373046875, -1.9073486328125e-06, -0.000110626220703125, -5.340576171875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.340576171875e-05, -3.814697265625e-06, -0.0004673004150390625, 0.0, -0.009761810302734375, -2.3841855067985307e-07, -0.003771646646782756, -3.075598942814395e-05, -0.08468400686979294, -0.0002931356430053711, -5.7220458984375e-06, -0.010389328002929688, -5.53131103515625e-05, -0.000240325927734375, -7.62939453125e-06, -0.00018310546875, 0.0, -0.00027942657470703125, -7.152555099310121e-07, -0.00365336611866951, -2.3841855067985307e-07, -2.288818359375e-05, -7.62939453125e-06, -5.7220458984375e-06, -9.195937309414148e-06, 0.0, -1.71661376953125e-05, -1.1444091796875e-05, -0.00047898292541503906, -9.179114385915454e-06], "choice_history": [55, 124, 221, 63, 103, "Drain", "Life", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drain", " ", "Life", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -2.3274264627877415, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Template29", "hole0": 2}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "DrainLife", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -9.059495641849935e-05, -0.0071852137334644794, -6.318072337307967e-06, -1.71661376953125e-05, -9.34600830078125e-05, -7.62939453125e-06, -0.0004982948303222656, -3.278254735050723e-05, -3.814697265625e-06, -2.09808349609375e-05, -0.037227630615234375, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.0005928949103690684, -1.0967253729177173e-05, -0.000102996826171875, -2.6702880859375e-05, -1.1444091796875e-05, 0.0, -0.0001544952392578125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -5.006789251638111e-06, -1.9073486328125e-06, -1.2397744285408407e-05, -1.1920928244535389e-07, -0.0002155303955078125, -0.000598907470703125, -4.76837158203125e-05, -8.4638240878121e-06, -2.6702880859375e-05, -1.6689286894688848e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -2.7537011192180216e-05, -4.410734163684538e-06, -8.392333984375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.014548063278198242, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -7.62939453125e-06, -0.0001506805419921875, -4.780292510986328e-05, -1.1086437552876305e-05, -0.016620755195617676, 0.0, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, -0.00016260147094726562, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004749298095703125, -3.814697265625e-06, -0.00020992755889892578, -5.841255187988281e-06, -0.05283081531524658, -5.7220458984375e-06, -0.15659809112548828, -8.0108642578125e-05, -9.560585021972656e-05, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -6.4849853515625e-05, -0.0001826285442803055, -5.960462772236497e-07, -1.9073486328125e-06, -0.000240325927734375, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0008335113525390625, -5.364416665543104e-06, -0.0024785995483398438, -5.7220458984375e-06, -6.103515625e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -2.7179718017578125e-05, -3.576278118089249e-07, -9.5367431640625e-06, -0.0003910064697265625, -2.47955322265625e-05, -6.29425048828125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -1.9073486328125e-06, -1.7404556274414062e-05, -1.8835040464182384e-05, -0.0001506805419921875, -6.103515625e-05, -0.8322420120239258, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-05, -4.76837158203125e-05, -1.9073486328125e-06, -0.0003185272216796875, -1.9073486328125e-06, -0.6435213088989258, -1.1920928244535389e-07, -0.0011486986186355352, -5.364416665543104e-06, -0.2902246415615082, -0.00038230419158935547, -3.814697265625e-06, -0.008425712585449219, -2.6702880859375e-05, -0.000202178955078125, -7.62939453125e-06, -0.0001811981201171875, 0.0, -0.000308990478515625, -9.536738616588991e-07, -0.003453425131738186, -2.3841855067985307e-07, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -9.990384569391608e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -0.0004799365997314453, -1.060962586052483e-05, -0.24150943756103516, -0.005141258239746094, -0.005040861666202545, -3.933906555175781e-06], "choice_history": [55, 124, 221, 63, 103, "Drain", "Life", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drain", " ", "Life", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>", 79, 164, "2", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.change_temp_attack(2)\n"}, {"score": -3.8219789355744567, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 2}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "DrainLife", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -9.059495641849935e-05, -0.0071852137334644794, -6.318072337307967e-06, -1.71661376953125e-05, -9.34600830078125e-05, -7.62939453125e-06, -0.0004982948303222656, -3.278254735050723e-05, -3.814697265625e-06, -2.09808349609375e-05, -0.037227630615234375, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.0005928949103690684, -1.0967253729177173e-05, -0.000102996826171875, -2.6702880859375e-05, -1.1444091796875e-05, 0.0, -0.0001544952392578125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -5.006789251638111e-06, -1.9073486328125e-06, -1.2397744285408407e-05, -1.1920928244535389e-07, -0.0002155303955078125, -0.000598907470703125, -4.76837158203125e-05, -8.4638240878121e-06, -2.6702880859375e-05, -1.6689286894688848e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -2.7537011192180216e-05, -4.410734163684538e-06, -8.392333984375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.014548063278198242, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -7.62939453125e-06, -0.0001506805419921875, -4.780292510986328e-05, -1.1086437552876305e-05, -0.016620755195617676, 0.0, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, -0.00016260147094726562, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004749298095703125, -3.814697265625e-06, -0.00020992755889892578, -5.841255187988281e-06, -0.05283081531524658, -5.7220458984375e-06, -0.15659809112548828, -8.0108642578125e-05, -9.560585021972656e-05, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -6.4849853515625e-05, -0.0001826285442803055, -5.960462772236497e-07, -1.9073486328125e-06, -0.000240325927734375, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0008335113525390625, -5.364416665543104e-06, -0.0024785995483398438, -5.7220458984375e-06, -6.103515625e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -2.7179718017578125e-05, -3.576278118089249e-07, -9.5367431640625e-06, -0.0003910064697265625, -2.47955322265625e-05, -6.29425048828125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -1.9073486328125e-06, -1.7404556274414062e-05, -1.8835040464182384e-05, -0.0001506805419921875, -6.103515625e-05, -0.8322420120239258, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-05, -4.76837158203125e-05, -1.9073486328125e-06, -0.0003185272216796875, -1.9073486328125e-06, -0.6435213088989258, -1.1920928244535389e-07, -0.0011486986186355352, -5.364416665543104e-06, -1.4834133386611938, -5.841255187988281e-06, -0.027666091918945312, -0.00037384033203125, -5.7220458984375e-06, -0.002725586760789156, -1.9073486328125e-06, -0.0644063949584961, 0.0, -0.0006656646728515625, -0.04551506042480469, -3.814697265625e-06, -1.9073486328125e-06, -0.0002079010009765625, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, -0.2987632751464844, -1.1920928244535389e-07, -0.014786715619266033, -2.5987601475208066e-05, -0.046032749116420746, -0.00031197071075439453, -5.7220458984375e-06, -0.05772209167480469, -0.0011348724365234375, -0.0002193450927734375, -4.76837158203125e-05, -0.000217437744140625, 0.0, -0.0010614395141601562, -4.768370445162873e-07, -0.003959632944315672, -2.3841855067985307e-07, -2.288818359375e-05, -7.62939453125e-06, -1.52587890625e-05, -9.213865268975496e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -0.0006250143051147461, -9.179114385915454e-06], "choice_history": [55, 124, 221, 63, 103, "Drain", "Life", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drain", " ", "Life", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -3.9432843960454207, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 2}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "DrainLife", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -9.059495641849935e-05, -0.0071852137334644794, -6.318072337307967e-06, -1.71661376953125e-05, -9.34600830078125e-05, -7.62939453125e-06, -0.0004982948303222656, -3.278254735050723e-05, -3.814697265625e-06, -2.09808349609375e-05, -0.037227630615234375, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.0005928949103690684, -1.0967253729177173e-05, -0.000102996826171875, -2.6702880859375e-05, -1.1444091796875e-05, 0.0, -0.0001544952392578125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -5.006789251638111e-06, -1.9073486328125e-06, -1.2397744285408407e-05, -1.1920928244535389e-07, -0.0002155303955078125, -0.000598907470703125, -4.76837158203125e-05, -8.4638240878121e-06, -2.6702880859375e-05, -1.6689286894688848e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -2.7537011192180216e-05, -4.410734163684538e-06, -8.392333984375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.014548063278198242, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -7.62939453125e-06, -0.0001506805419921875, -4.780292510986328e-05, -1.1086437552876305e-05, -0.016620755195617676, 0.0, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, -0.00016260147094726562, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004749298095703125, -3.814697265625e-06, -0.00020992755889892578, -5.841255187988281e-06, -3.0334367752075195, -2.300739288330078e-05, -0.1024789810180664, -6.67572021484375e-05, -9.369850158691406e-05, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -8.0108642578125e-05, -0.0002070664631901309, -4.768370445162873e-07, -1.9073486328125e-06, -0.0002231597900390625, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0006999969482421875, -5.483625955093885e-06, -0.0028448104858398438, -5.7220458984375e-06, -6.29425048828125e-05, -1.9073486328125e-06, -2.288818359375e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -2.7060508728027344e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000392913818359375, -2.47955322265625e-05, -6.29425048828125e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -1.9073486328125e-06, -1.7404556274414062e-05, -1.9073457224294543e-05, -0.000152587890625, -5.91278076171875e-05, -0.6429252624511719, -0.00067901611328125, -0.0007187130977399647, -6.508615479106084e-05, -7.05718994140625e-05, -3.0517578125e-05, -1.9073486328125e-06, -5.14984130859375e-05, -2.6702880859375e-05, 0.0, -3.0517578125e-05, 0.0, -0.000797271728515625, 0.0, -0.013729095458984375, 0.0, -0.009640331380069256, -1.9550319848349318e-05, -0.02506217174232006, -0.0009665489196777344, -7.62939453125e-06, -0.021780967712402344, -0.0004177093505859375, -0.0001888275146484375, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -0.0007171630859375, -5.960462772236497e-07, -0.0032823618967086077, -2.3841855067985307e-07, -2.288818359375e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.2450036592781544e-05, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -0.0005067586898803711, -7.510183422709815e-06], "choice_history": [55, 124, 221, 63, 103, "Drain", "Life", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drain", " ", "Life", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -4.1891238837330675, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "Drain Life", "hole1": 3}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "DrainLife", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -9.059495641849935e-05, -0.0071852137334644794, -6.318072337307967e-06, -1.71661376953125e-05, -9.34600830078125e-05, -7.62939453125e-06, -0.0004982948303222656, -3.278254735050723e-05, -3.814697265625e-06, -2.09808349609375e-05, -3.3472299575805664, -0.0007305145263671875, -0.008871426805853844, -0.00010895729064941406, -8.940695806813892e-06, 0.0, -5.280829645926133e-05, -1.9073468138230965e-06, -0.2131255865097046, 0.0, -0.33927059173583984, -0.06496334075927734, -2.47955322265625e-05, -2.47955322265625e-05, -0.00537872314453125, -1.9073486328125e-06, -0.0001392364501953125, -2.6702880859375e-05, -0.14516258239746094, -7.152555099310121e-07, -0.0015559196472167969, -1.1920928244535389e-07, -0.03912190720438957, 0.0, -0.006842132192105055, -1.1920928244535389e-07, -1.33514404296875e-05, -0.0036411285400390625, -0.00327301025390625, -0.0002684591745492071, -3.576278118089249e-07, -1.33514404296875e-05, -3.814697265625e-06, -0.001110076904296875, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Drain", "Life", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Drain", " ", "Life", "<EOS>", "3", "<EOS>", "PALADIN", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -5.360619719756919, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "DrainLife", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -9.059495641849935e-05, -0.0071852137334644794, -6.318072337307967e-06, -1.71661376953125e-05, -9.34600830078125e-05, -7.62939453125e-06, -0.0004982948303222656, -3.278254735050723e-05, -3.814697265625e-06, -2.09808349609375e-05, -0.037227630615234375, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.0005928949103690684, -1.0967253729177173e-05, -0.000102996826171875, -2.6702880859375e-05, -1.1444091796875e-05, 0.0, -0.0001544952392578125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -5.006789251638111e-06, -1.9073486328125e-06, -1.2397744285408407e-05, -1.1920928244535389e-07, -0.0002155303955078125, -0.000598907470703125, -4.76837158203125e-05, -8.4638240878121e-06, -2.6702880859375e-05, -1.6689286894688848e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -2.7537011192180216e-05, -4.410734163684538e-06, -8.392333984375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.014548063278198242, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -7.62939453125e-06, -0.0001506805419921875, -4.780292510986328e-05, -1.1086437552876305e-05, -0.016620755195617676, 0.0, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, -0.00016260147094726562, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004749298095703125, -3.814697265625e-06, -0.00020992755889892578, -5.841255187988281e-06, -0.05283081531524658, -5.7220458984375e-06, -1.948556900024414, -0.00011444091796875, -5.7220458984375e-06, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.0003604888916015625, 0.0, -4.1961669921875e-05, -1.311301275563892e-06, -3.2528297901153564, -3.576278118089249e-07, -0.0056705474853515625, -0.016216278076171875, 0.0, -0.0038080215454101562, -8.344646857949556e-07], "choice_history": [55, 124, 221, 63, 103, "Drain", "Life", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drain", " ", "Life", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.4199947059398355, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "Drain Life", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 2}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "DrainLife", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -9.059495641849935e-05, -0.0071852137334644794, -6.318072337307967e-06, -1.71661376953125e-05, -9.34600830078125e-05, -7.62939453125e-06, -0.0004982948303222656, -3.278254735050723e-05, -3.814697265625e-06, -2.09808349609375e-05, -3.3472299575805664, -0.0007305145263671875, -0.008871426805853844, -0.00010895729064941406, -8.940695806813892e-06, 0.0, -5.280829645926133e-05, -1.9073468138230965e-06, -0.2131255865097046, 0.0, -1.2721004486083984, -3.814697265625e-06, -5.5312964832410216e-05, 0.0, -1.52587890625e-05, -1.52587890625e-05, -6.103515625e-05, -5.066356243332848e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-06, -0.0006486177444458008, -4.0531158447265625e-06, -0.003841400146484375, -7.62939453125e-06, -5.340576171875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.8848648071289062e-05, 0.0, -2.8848648071289062e-05, -2.3841855067985307e-07, -1.1444091796875e-05, -0.000408172607421875, -4.00543212890625e-05, -5.91278076171875e-05, -1.1920928244535389e-07, -6.866455078125e-05, -3.814697265625e-06, -1.537799835205078e-05, -2.1100015146657825e-05, -0.0002193450927734375, -6.4849853515625e-05, -0.4842948913574219, -0.00063323974609375, -0.0006941559840925038, -6.687417771900073e-05, -6.67572021484375e-05, -3.24249267578125e-05, -1.9073486328125e-06, -5.14984130859375e-05, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -0.0005817413330078125, 0.0, -0.015209197998046875, 0.0, -0.009256476536393166, -1.96695291379001e-05, -0.024406520649790764, -0.0010180473327636719, -7.62939453125e-06, -0.02197265625, -0.0004215240478515625, -0.000186920166015625, -7.62939453125e-06, -0.000118255615234375, 0.0, -0.0007410049438476562, -5.960462772236497e-07, -0.00330167543143034, -2.3841855067985307e-07, -2.09808349609375e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.2994540156796575e-05, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -0.0005172491073608398, -7.390974587906385e-06], "choice_history": [55, 124, 221, 63, 103, "Drain", "Life", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Drain", " ", "Life", "<EOS>", "3", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"score": -5.9778215943642365, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Drain Life", "hole1": 3}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "DrainLife", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -9.059495641849935e-05, -0.0071852137334644794, -6.318072337307967e-06, -1.71661376953125e-05, -9.34600830078125e-05, -7.62939453125e-06, -0.0004982948303222656, -3.278254735050723e-05, -3.814697265625e-06, -2.09808349609375e-05, -3.3472299575805664, -0.0007305145263671875, -0.008871426805853844, -0.00010895729064941406, -8.940695806813892e-06, 0.0, -5.280829645926133e-05, -1.9073468138230965e-06, -2.5256741046905518, -3.933898824470816e-06, -0.007297515869140625, -0.0035333633422851562, -3.814697265625e-06, -0.00016021728515625, -0.003353118896484375, -1.9073486328125e-05, -8.20159912109375e-05, -9.5367431640625e-06, -0.023596763610839844, -7.152555099310121e-07, -0.0016914604930207133, -2.3841855067985307e-07, -0.027485162019729614, -1.1920928244535389e-07, -0.01059865765273571, -1.1920928244535389e-07, -1.71661376953125e-05, -0.0031986236572265625, -0.004508018493652344, -0.00037217128556221724, -7.152555099310121e-07, -1.1444091796875e-05, -3.814697265625e-06, -0.0010385513305664062, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Drain", "Life", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Drain", " ", "Life", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -6.678957359345958, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Drain Life", "hole1": 3}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "DrainLife", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -9.059495641849935e-05, -0.0071852137334644794, -6.318072337307967e-06, -1.71661376953125e-05, -9.34600830078125e-05, -7.62939453125e-06, -0.0004982948303222656, -3.278254735050723e-05, -3.814697265625e-06, -2.09808349609375e-05, -3.3472299575805664, -0.0007305145263671875, -0.008871426805853844, -0.00010895729064941406, -8.940695806813892e-06, 0.0, -5.280829645926133e-05, -1.9073468138230965e-06, -3.0064432621002197, -1.7881377516459906e-06, -0.1716470718383789, -0.005916595458984375, -9.5367431640625e-06, -5.14984130859375e-05, -0.0013904571533203125, -1.9073486328125e-06, -6.67572021484375e-05, -5.7220458984375e-06, -0.07268142700195312, -4.768370445162873e-07, -0.0014098882675170898, -1.1920928244535389e-07, -0.03496686741709709, -1.1920928244535389e-07, -0.008874532766640186, -1.1920928244535389e-07, -1.9073486328125e-05, -0.004985809326171875, -0.0039882659912109375, -0.0003511904797051102, -4.768370445162873e-07, -1.1444091796875e-05, -3.814697265625e-06, -0.0009679794311523438, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Drain", "Life", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Drain", " ", "Life", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -7.073899110319559, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARLOCK", "_type": "Template6", "hole0": "Drain Life", "hole1": 3}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "DrainLife", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -9.059495641849935e-05, -0.0071852137334644794, -6.318072337307967e-06, -1.71661376953125e-05, -9.34600830078125e-05, -7.62939453125e-06, -0.0004982948303222656, -3.278254735050723e-05, -3.814697265625e-06, -2.09808349609375e-05, -3.3472299575805664, -0.0007305145263671875, -0.008871426805853844, -0.00010895729064941406, -8.940695806813892e-06, 0.0, -5.280829645926133e-05, -1.9073468138230965e-06, -3.3953850269317627, 0.0, -0.20101070404052734, -0.0017757415771484375, -5.7220458984375e-06, -4.76837158203125e-05, -0.02051544189453125, -4.38690185546875e-05, -6.29425048828125e-05, -7.62939453125e-06, -0.030755043029785156, -4.768370445162873e-07, -0.0022112131118774414, -1.1920928244535389e-07, -0.032942160964012146, -1.1920928244535389e-07, -0.008712288923561573, -1.1920928244535389e-07, -2.47955322265625e-05, -0.006892204284667969, -0.0069942474365234375, -0.0003741979307960719, -5.960462772236497e-07, -1.33514404296875e-05, -3.814697265625e-06, -0.0009584426879882812, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Drain", "Life", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Drain", " ", "Life", "<EOS>", "3", "<EOS>", "WARLOCK", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -8.394488431257102, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "Drain Life", "hole1": 3}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "index", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "DrainLife", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -9.059495641849935e-05, -0.0071852137334644794, -6.318072337307967e-06, -1.71661376953125e-05, -9.34600830078125e-05, -7.62939453125e-06, -0.0004982948303222656, -3.278254735050723e-05, -3.814697265625e-06, -2.09808349609375e-05, -3.3472299575805664, -0.0007305145263671875, -0.008871426805853844, -0.00010895729064941406, -8.940695806813892e-06, 0.0, -5.280829645926133e-05, -1.9073468138230965e-06, -0.2131255865097046, 0.0, -0.33927059173583984, -0.06496334075927734, -2.47955322265625e-05, -2.47955322265625e-05, -0.00537872314453125, -1.9073486328125e-06, -0.0001392364501953125, -2.6702880859375e-05, -2.8615283966064453, 0.0, -3.445148468017578e-05, -2.9802317840221804e-06, -1.353553295135498, -1.1920928244535389e-07, -0.18665087223052979, -3.814697265625e-06, -9.5367431640625e-06, -0.0011758804321289062, -0.0023193359375, -0.00042271538404747844, -5.960462772236497e-07, -9.5367431640625e-06, -3.814697265625e-06, -0.0006562471389770508, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Drain", "Life", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Drain", " ", "Life", "<EOS>", "3", "<EOS>", "PALADIN", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.index.damage(player.effective_spell_damage(2), self)\n"}, {"score": -8.410375885564342, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "Drain Life", "hole1": 3}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "DrainLife", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -9.059495641849935e-05, -0.0071852137334644794, -6.318072337307967e-06, -1.71661376953125e-05, -9.34600830078125e-05, -7.62939453125e-06, -0.0004982948303222656, -3.278254735050723e-05, -3.814697265625e-06, -2.09808349609375e-05, -3.3472299575805664, -0.0007305145263671875, -0.008871426805853844, -0.00010895729064941406, -8.940695806813892e-06, 0.0, -5.280829645926133e-05, -1.9073468138230965e-06, -0.2131255865097046, 0.0, -0.33927059173583984, -0.06496334075927734, -2.47955322265625e-05, -2.47955322265625e-05, -0.00537872314453125, -1.9073486328125e-06, -0.0001392364501953125, -2.6702880859375e-05, -2.5857620239257812, -4.768370445162873e-07, -0.00483867060393095, -9.775113539944869e-06, -1.6399271488189697, 0.0, -0.18728792667388916, -2.0265579223632812e-06, -3.24249267578125e-05, -0.00069427490234375, -0.002803802490234375, -0.00034021251485683024, -1.311301275563892e-06, -1.33514404296875e-05, -1.52587890625e-05, -0.0005303621292114258, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Drain", "Life", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Drain", " ", "Life", "<EOS>", "3", "<EOS>", "PALADIN", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "health", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.health.damage(player.effective_spell_damage(2), self)\n"}, {"score": -23.064287185668945, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -0.000118255615234375, -23.064167022705078], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 26}
{"beams": [{"score": -0.2961373079566769, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 6, "hole1": 6}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -6.568313983734697e-05, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.0004452898574527353, -2.8133366868132725e-05, -0.00012004375457763672, -5.14984130859375e-05, -0.010133743286132812, -5.340576171875e-05, -6.914137884450611e-06, 0.0, 0.0, -0.0001373291015625, -2.6702880859375e-05, -0.00017189729260280728, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.00040435791015625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.768367489305092e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -0.0176544189453125, -0.00052642822265625, -4.9591064453125e-05, -3.576278118089249e-07, -3.647802441264503e-05, -2.145763937733136e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.8358097804593854e-05, -9.894339200400282e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.006133079528808594, -0.00019168852304574102, -1.1205671398784034e-05, -0.027000783011317253, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, -0.0012760162353515625, -0.0002263784408569336, -2.6464205802767538e-05, -0.0034161806106567383, -0.0002843138063326478, -0.008324623107910156, -1.9073486328125e-05, 0.0, -5.161762237548828e-05, -2.503394853192731e-06, -5.7220458984375e-06, 0.0, -0.000156402587890625, 0.0, -0.0004596710205078125, 0.0, -0.006997108459472656, -1.9073486328125e-06, -0.0004673004150390625, -1.9073486328125e-06, -0.005008697509765625, 0.0, -9.1552734375e-05, -2.6702880859375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.0010874271392822266, -2.3841855067985307e-07, -4.9591064453125e-05, -0.005085945129394531, -0.0009918212890625, -0.034696757793426514, -3.182848740834743e-05, -0.0043048858642578125, -0.000431060791015625, -0.00023651123046875, -1.9073486328125e-06, -0.14714395999908447, -8.45193862915039e-05, -1.9073486328125e-06, -0.0037746429443359375, -0.0002346038818359375, -3.814697265625e-05, -0.006461143493652344, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -7.271766662597656e-05, -5.7220458984375e-05, -3.814697265625e-06, -0.0004291534423828125, -2.09808349609375e-05, -1.3709017366636544e-05, -2.586808113846928e-05, -7.331240340135992e-05, -5.364403477869928e-06], "choice_history": [55, 124, 221, 63, 103, "Dread", "Infernal", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Dread", " ", "Infernal", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -2.2475576142325266, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 6, "hole1": 6}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -6.568313983734697e-05, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.0004452898574527353, -2.8133366868132725e-05, -0.00012004375457763672, -5.14984130859375e-05, -0.010133743286132812, -5.340576171875e-05, -6.914137884450611e-06, 0.0, 0.0, -0.0001373291015625, -2.6702880859375e-05, -0.00017189729260280728, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.00040435791015625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.768367489305092e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -0.0176544189453125, -0.00052642822265625, -4.9591064453125e-05, -3.576278118089249e-07, -3.647802441264503e-05, -2.145763937733136e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.8358097804593854e-05, -9.894339200400282e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.006133079528808594, -0.00019168852304574102, -1.1205671398784034e-05, -0.027000783011317253, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, -0.0012760162353515625, -0.0002263784408569336, -2.6464205802767538e-05, -0.0034161806106567383, -0.0002843138063326478, -0.008324623107910156, -1.9073486328125e-05, 0.0, -5.161762237548828e-05, -2.503394853192731e-06, -5.7220458984375e-06, 0.0, -0.000156402587890625, 0.0, -0.0004596710205078125, 0.0, -0.006997108459472656, -1.9073486328125e-06, -0.0004673004150390625, -1.9073486328125e-06, -0.005008697509765625, 0.0, -9.1552734375e-05, -2.6702880859375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.0010874271392822266, -2.3841855067985307e-07, -4.9591064453125e-05, -0.005085945129394531, -0.0009918212890625, -0.034696757793426514, -3.182848740834743e-05, -0.0043048858642578125, -0.000431060791015625, -0.00023651123046875, -1.9073486328125e-06, -2.0115866661071777, -0.0003414154052734375, 0.0, -0.09606742858886719, -6.103515625e-05, -2.09808349609375e-05, -0.000988006591796875, -2.288818359375e-05, -1.9073486328125e-05, -1.52587890625e-05, -6.687641143798828e-05, -0.0001049041748046875, -3.814697265625e-06, -0.0004558563232421875, -1.71661376953125e-05, -1.2159292964497581e-05, -2.455681169521995e-05, -8.499399700667709e-05, -4.529942543740617e-06], "choice_history": [55, 124, 221, 63, 103, "Dread", "Infernal", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Dread", " ", "Infernal", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -4.295945323680478, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 6, "hole1": 6}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -6.568313983734697e-05, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.0004452898574527353, -2.8133366868132725e-05, -0.00012004375457763672, -5.14984130859375e-05, -0.010133743286132812, -5.340576171875e-05, -6.914137884450611e-06, 0.0, 0.0, -0.0001373291015625, -2.6702880859375e-05, -0.00017189729260280728, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.00040435791015625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.768367489305092e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -0.0176544189453125, -0.00052642822265625, -4.9591064453125e-05, -3.576278118089249e-07, -3.647802441264503e-05, -2.145763937733136e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.8358097804593854e-05, -9.894339200400282e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.006133079528808594, -0.00019168852304574102, -1.1205671398784034e-05, -3.9553139209747314, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -8.392333984375e-05, -0.001117706298828125, -0.00044476985931396484, -5.483620952873025e-06, -0.07481980323791504, -0.00020158289407845587, -0.0064067840576171875, -4.57763671875e-05, -1.9073486328125e-06, -4.398822784423828e-05, -2.503394853192731e-06, -5.7220458984375e-06, 0.0, -0.0001392364501953125, 0.0, -0.0004596710205078125, 0.0, -0.007540702819824219, 0.0, -0.000423431396484375, -1.9073486328125e-06, -0.0074901580810546875, 0.0, -9.5367431640625e-05, -2.6702880859375e-05, -4.1961669921875e-05, -7.62939453125e-06, -0.0010665655136108398, -3.576278118089249e-07, -4.9591064453125e-05, -0.0057220458984375, -0.000965118408203125, -0.035799264907836914, -3.457022103248164e-05, -0.004195213317871094, -0.00043487548828125, -0.00023651123046875, -1.9073486328125e-06, -0.1445862054824829, -8.45193862915039e-05, -1.9073486328125e-06, -0.0037975311279296875, -0.000240325927734375, -3.62396240234375e-05, -0.006384849548339844, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -7.271766662597656e-05, -5.7220458984375e-05, -3.814697265625e-06, -0.0004329681396484375, -2.09808349609375e-05, -1.3947433217254002e-05, -2.586808113846928e-05, -7.426599768223241e-05, -5.364403477869928e-06], "choice_history": [55, 124, 221, 63, 103, "Dread", "Infernal", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Dread", " ", "Infernal", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -4.43969288965004, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 2}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 6, "hole1": 6}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -6.568313983734697e-05, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.0004452898574527353, -2.8133366868132725e-05, -0.00012004375457763672, -5.14984130859375e-05, -0.010133743286132812, -5.340576171875e-05, -6.914137884450611e-06, 0.0, 0.0, -0.0001373291015625, -2.6702880859375e-05, -0.00017189729260280728, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.00040435791015625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.768367489305092e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -0.0176544189453125, -0.00052642822265625, -4.9591064453125e-05, -3.576278118089249e-07, -3.647802441264503e-05, -2.145763937733136e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.8358097804593854e-05, -9.894339200400282e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.006133079528808594, -0.00019168852304574102, -1.1205671398784034e-05, -0.027000783011317253, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, -0.0012760162353515625, -0.0002263784408569336, -2.6464205802767538e-05, -0.0034161806106567383, -0.0002843138063326478, -0.008324623107910156, -1.9073486328125e-05, 0.0, -5.161762237548828e-05, -2.503394853192731e-06, -5.7220458984375e-06, 0.0, -0.000156402587890625, 0.0, -0.0004596710205078125, 0.0, -0.006997108459472656, -1.9073486328125e-06, -0.0004673004150390625, -1.9073486328125e-06, -0.005008697509765625, 0.0, -9.1552734375e-05, -2.6702880859375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.0010874271392822266, -2.3841855067985307e-07, -4.9591064453125e-05, -0.005085945129394531, -0.0009918212890625, -4.245862007141113, -1.3470558769768104e-05, -0.008044242858886719, -0.000469207763671875, -0.0003719329833984375, -7.62939453125e-06, -0.07783782482147217, -0.0001342296600341797, -3.814697265625e-06, -0.0016269683837890625, -0.0001678466796875, -4.76837158203125e-05, -0.006381988525390625, -1.9073486328125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -7.271766662597656e-05, -5.340576171875e-05, -3.814697265625e-06, -0.0004405975341796875, -2.09808349609375e-05, -1.3828224837197922e-05, -2.539125671319198e-05, -7.748453936073929e-05, -5.364403477869928e-06], "choice_history": [55, 124, 221, 63, 103, "Dread", "Infernal", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Dread", " ", "Infernal", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(2), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -4.619948717452665, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 6, "hole1": 6}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -6.568313983734697e-05, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.0004452898574527353, -2.8133366868132725e-05, -0.00012004375457763672, -5.14984130859375e-05, -0.010133743286132812, -5.340576171875e-05, -6.914137884450611e-06, 0.0, 0.0, -0.0001373291015625, -2.6702880859375e-05, -0.00017189729260280728, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.00040435791015625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.768367489305092e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -0.0176544189453125, -0.00052642822265625, -4.9591064453125e-05, -3.576278118089249e-07, -3.647802441264503e-05, -2.145763937733136e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.8358097804593854e-05, -9.894339200400282e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.006133079528808594, -0.00019168852304574102, -1.1205671398784034e-05, -0.027000783011317253, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, -0.0012760162353515625, -0.0002263784408569336, -2.6464205802767538e-05, -0.0034161806106567383, -0.0002843138063326478, -0.008324623107910156, -1.9073486328125e-05, 0.0, -5.161762237548828e-05, -2.503394853192731e-06, -5.7220458984375e-06, 0.0, -0.000156402587890625, 0.0, -0.0004596710205078125, 0.0, -0.006997108459472656, -1.9073486328125e-06, -0.0004673004150390625, -1.9073486328125e-06, -0.005008697509765625, 0.0, -9.1552734375e-05, -2.6702880859375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.0010874271392822266, -2.3841855067985307e-07, -4.9591064453125e-05, -0.005085945129394531, -0.0009918212890625, -0.034696757793426514, -3.182848740834743e-05, -0.0043048858642578125, -0.000431060791015625, -0.00023651123046875, -1.9073486328125e-06, -2.0115866661071777, -0.0003414154052734375, 0.0, -2.4134607315063477, -3.0517578125e-05, -2.09808349609375e-05, -0.0003948211669921875, -9.5367431640625e-06, -5.91278076171875e-05, -3.814697265625e-06, -8.988380432128906e-05, -0.0001010894775390625, -1.9073486328125e-06, -0.000225067138671875, -0.0001392364501953125, -0.04390144348144531, 0.0, -0.00115966796875, -1.9073486328125e-06, -0.008083701133728027, -0.000209808349609375, 0.0, -0.002330780029296875, -1.1444091796875e-05, -2.5152883608825505e-05, -2.50339189733495e-06, -9.60788966040127e-05, -1.4305104514278355e-06], "choice_history": [55, 124, 221, 63, 103, "Dread", "Infernal", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Dread", " ", "Infernal", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -4.819915185142513, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Dread Infernal", "hole2": "ALL", "hole1": 6, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}, {"_type": "Template11", "hole0": 6, "hole1": 6}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -6.568313983734697e-05, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.0004452898574527353, -2.8133366868132725e-05, -0.00012004375457763672, -5.14984130859375e-05, -4.612092018127441, -0.001354217529296875, -3.576278118089249e-07, -6.151145498733968e-05, -4.1723224057932384e-06, 0.0, -1.442421580577502e-05, -2.3841830625315197e-06, -0.05186641216278076, 0.0, -0.03852212429046631, -3.576278118089249e-07, -0.0004215240478515625, -3.814697265625e-06, -5.340576171875e-05, -7.62939453125e-06, -0.0002288818359375, -3.576278118089249e-07, -3.4332275390625e-05, -0.02802276611328125, -0.00173187255859375, -0.040506571531295776, -3.8861544453538954e-05, -0.00078582763671875, -0.00014495849609375, -0.0006561279296875, -9.5367431640625e-06, -0.03527092933654785, -0.00017762184143066406, -3.814697265625e-06, -0.0039882659912109375, -8.20159912109375e-05, -4.76837158203125e-05, -0.0022401809692382812, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -5.936622619628906e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0004329681396484375, -2.09808349609375e-05, -1.2755350326187909e-05, -2.074220174108632e-05, -6.341849802993238e-05, -4.6491513785440475e-06], "choice_history": [55, 124, 221, 63, 103, "Dread", "Infernal", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -4.860882610894485, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 6}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 6, "hole1": 6}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -6.568313983734697e-05, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.0004452898574527353, -2.8133366868132725e-05, -0.00012004375457763672, -5.14984130859375e-05, -0.010133743286132812, -5.340576171875e-05, -6.914137884450611e-06, 0.0, 0.0, -0.0001373291015625, -2.6702880859375e-05, -0.00017189729260280728, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.00040435791015625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.768367489305092e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -0.0176544189453125, -0.00052642822265625, -4.9591064453125e-05, -3.576278118089249e-07, -3.647802441264503e-05, -2.145763937733136e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.8358097804593854e-05, -9.894339200400282e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.006133079528808594, -0.00019168852304574102, -1.1205671398784034e-05, -0.027000783011317253, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, -0.0012760162353515625, -0.0002263784408569336, -2.6464205802767538e-05, -0.0034161806106567383, -0.0002843138063326478, -0.008324623107910156, -1.9073486328125e-05, 0.0, -5.161762237548828e-05, -2.503394853192731e-06, -5.7220458984375e-06, 0.0, -0.000156402587890625, 0.0, -0.0004596710205078125, 0.0, -0.006997108459472656, -1.9073486328125e-06, -0.0004673004150390625, -1.9073486328125e-06, -0.005008697509765625, 0.0, -9.1552734375e-05, -2.6702880859375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.0010874271392822266, -2.3841855067985307e-07, -4.9591064453125e-05, -0.005085945129394531, -0.0009918212890625, -4.223143577575684, -0.0003758032398764044, -0.4989051818847656, -0.000812530517578125, -0.000408172607421875, -7.62939453125e-06, -0.03310501575469971, -0.00020647048950195312, -1.9073486328125e-06, -0.00110626220703125, -0.000202178955078125, -4.1961669921875e-05, -0.0038022994995117188, -3.814697265625e-06, -5.7220458984375e-05, -3.814697265625e-06, -7.081031799316406e-05, -5.91278076171875e-05, -3.814697265625e-06, -0.000461578369140625, -2.09808349609375e-05, -1.4305057447927538e-05, -2.5629668016335927e-05, -8.022616384550929e-05, -5.245195097813848e-06], "choice_history": [55, 124, 221, 63, 103, "Dread", "Infernal", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Dread", " ", "Infernal", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "6", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(6), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -4.862096247801894, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 6, "hole1": 6}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -6.568313983734697e-05, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.0004452898574527353, -2.8133366868132725e-05, -0.00012004375457763672, -5.14984130859375e-05, -0.010133743286132812, -5.340576171875e-05, -6.914137884450611e-06, 0.0, 0.0, -0.0001373291015625, -2.6702880859375e-05, -0.00017189729260280728, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.00040435791015625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.768367489305092e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -4.124170303344727, -0.0004940032958984375, -5.53131103515625e-05, -2.9444683605106547e-05, -5.1617593271657825e-05, -1.4066675248614047e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.7775422495324165e-05, -7.152555099310121e-07, -7.62939453125e-06, 0.0, -3.0517578125e-05, -0.0004215240478515625, -0.00021028518676757812, -2.6941299438476562e-05, -0.17955386638641357, 0.0, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, -0.0009441375732421875, -0.0027948617935180664, -3.111343175987713e-05, -0.0026494264602661133, -0.00035023665986955166, -0.0012645721435546875, -2.6702880859375e-05, -0.00018810319306794554, -1.0132789611816406e-05, -0.0001392364501953125, -2.09808349609375e-05, 0.0, -0.31513309478759766, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -0.00032258033752441406, 0.0, -7.2479248046875e-05, -0.005279541015625, -0.0025539398193359375, -0.07620730996131897, -1.2874562344222795e-05, -0.008985519409179688, -0.000240325927734375, -0.0003452301025390625, 0.0, -0.11351466178894043, -8.428096771240234e-05, -1.9073486328125e-06, -0.009349822998046875, -6.4849853515625e-05, -4.00543212890625e-05, -0.0034570693969726562, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -5.936622619628906e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.000446319580078125, -1.9073486328125e-05, -1.4305057447927538e-05, -2.682172998902388e-05, -7.533873576903716e-05, -5.125986263010418e-06], "choice_history": [55, 124, 221, 63, 103, "Dread", "Infernal", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Dread", " ", "Infernal", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, True, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -5.389878469041513, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 6}, {"_type": "Template38", "hole0": "HeroSelector"}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 6, "hole1": 6}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -6.568313983734697e-05, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.0004452898574527353, -2.8133366868132725e-05, -0.00012004375457763672, -5.14984130859375e-05, -0.010133743286132812, -5.340576171875e-05, -6.914137884450611e-06, 0.0, 0.0, -0.0001373291015625, -2.6702880859375e-05, -0.00017189729260280728, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.00040435791015625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.768367489305092e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -0.0176544189453125, -0.00052642822265625, -4.9591064453125e-05, -3.576278118089249e-07, -3.647802441264503e-05, -2.145763937733136e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.8358097804593854e-05, -9.894339200400282e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.006133079528808594, -0.00019168852304574102, -1.1205671398784034e-05, -0.027000783011317253, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, -0.0012760162353515625, -0.0002263784408569336, -2.6464205802767538e-05, -0.0034161806106567383, -0.0002843138063326478, -0.008324623107910156, -1.9073486328125e-05, 0.0, -5.161762237548828e-05, -2.503394853192731e-06, -5.7220458984375e-06, 0.0, -0.000156402587890625, 0.0, -0.0004596710205078125, 0.0, -0.006997108459472656, -1.9073486328125e-06, -0.0004673004150390625, -1.9073486328125e-06, -0.005008697509765625, 0.0, -9.1552734375e-05, -2.6702880859375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.0010874271392822266, -2.3841855067985307e-07, -4.9591064453125e-05, -0.005085945129394531, -0.0009918212890625, -4.223143577575684, -0.0003758032398764044, -0.9684629440307617, -3.4332275390625e-05, -0.099281907081604, -0.00018036365509033203, 0.0, -0.0001659393310546875, -1.9073486328125e-06, -1.1920878023374826e-05, -0.0001627074379939586, -8.010664896573871e-05, -1.9907753085135482e-05], "choice_history": [55, 124, 221, 63, 103, "Dread", "Infernal", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Dread", " ", "Infernal", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -5.557696317060945, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 6, "hole1": 6}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -6.568313983734697e-05, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.0004452898574527353, -2.8133366868132725e-05, -0.00012004375457763672, -5.14984130859375e-05, -0.010133743286132812, -5.340576171875e-05, -6.914137884450611e-06, 0.0, 0.0, -0.0001373291015625, -2.6702880859375e-05, -0.00017189729260280728, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.00040435791015625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.768367489305092e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -0.0176544189453125, -0.00052642822265625, -4.9591064453125e-05, -3.576278118089249e-07, -3.647802441264503e-05, -2.145763937733136e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.8358097804593854e-05, -9.894339200400282e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.006133079528808594, -0.00019168852304574102, -1.1205671398784034e-05, -0.027000783011317253, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, -0.0012760162353515625, -0.0002263784408569336, -2.6464205802767538e-05, -0.0034161806106567383, -0.0002843138063326478, -5.2789154052734375, -1.9073486328125e-05, 0.0, -0.012895703315734863, -3.576278118089249e-07, -2.288818359375e-05, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0007364749908447266, -1.1920928244535389e-07, -4.38690185546875e-05, -0.0045337677001953125, -0.0029811859130859375, -0.0517694354057312, -1.3947466868557967e-05, -0.0028362274169921875, -0.0003204345703125, -0.00045013427734375, 0.0, -0.12046551704406738, -9.751319885253906e-05, 0.0, -0.00812530517578125, -5.53131103515625e-05, -4.57763671875e-05, -0.0034093856811523438, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -5.352497100830078e-05, -7.62939453125e-05, -3.814697265625e-06, -0.0004825592041015625, -1.9073486328125e-05, -1.5497136701014824e-05, -2.6464111215318553e-05, -8.59478022903204e-05, -5.125986263010418e-06], "choice_history": [55, 124, 221, 63, 103, "Dread", "Infernal", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Dread", " ", "Infernal", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -6.1685290625960505, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 6}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -6.568313983734697e-05, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.0004452898574527353, -2.8133366868132725e-05, -0.00012004375457763672, -5.14984130859375e-05, -0.010133743286132812, -5.340576171875e-05, -6.914137884450611e-06, 0.0, 0.0, -0.0001373291015625, -2.6702880859375e-05, -0.00017189729260280728, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.00040435791015625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.768367489305092e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -4.124170303344727, -0.0004940032958984375, -5.53131103515625e-05, -2.9444683605106547e-05, -5.1617593271657825e-05, -1.4066675248614047e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.7775422495324165e-05, -7.152555099310121e-07, -7.62939453125e-06, 0.0, -3.0517578125e-05, -0.0004215240478515625, -0.00021028518676757812, -2.6941299438476562e-05, -0.17955386638641357, 0.0, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, -0.0009441375732421875, -0.0027948617935180664, -3.111343175987713e-05, -0.0026494264602661133, -0.00035023665986955166, -0.0012645721435546875, -2.6702880859375e-05, -0.00018810319306794554, -1.0132789611816406e-05, -0.0001392364501953125, -2.09808349609375e-05, 0.0, -1.4053983688354492, -1.1920928244535389e-07, -6.866455078125e-05, -1.9073486328125e-06, -0.000278472900390625, -3.814697265625e-06, -0.0010242462158203125, 0.0, -0.017072677612304688, 0.0, -0.26808929443359375, -0.0008106231689453125, -0.000286102294921875, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0006170272827148438, 0.0, -0.0837860107421875, -5.960462772236497e-07, -0.01591670513153076, -2.1457672119140625e-05, -2.09808349609375e-05, -0.014103889465332031, -0.0004825592041015625, -0.024675607681274414, -4.470286512514576e-05, -0.010088920593261719, -1.9073486328125e-06, -0.0001367330551147461, -4.0531158447265625e-06], "choice_history": [55, 124, 221, 63, 103, "Dread", "Infernal", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Dread", " ", "Infernal", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.DEMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -6.18038198813624, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"id": "HeroSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 6, "hole1": 6}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -6.568313983734697e-05, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.0004452898574527353, -2.8133366868132725e-05, -0.00012004375457763672, -5.14984130859375e-05, -0.010133743286132812, -5.340576171875e-05, -6.914137884450611e-06, 0.0, 0.0, -0.0001373291015625, -2.6702880859375e-05, -0.00017189729260280728, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.00040435791015625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.768367489305092e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -0.0176544189453125, -0.00052642822265625, -4.9591064453125e-05, -3.576278118089249e-07, -3.647802441264503e-05, -2.145763937733136e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.8358097804593854e-05, -9.894339200400282e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.006133079528808594, -0.00019168852304574102, -1.1205671398784034e-05, -0.027000783011317253, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, -0.0012760162353515625, -0.0002263784408569336, -2.6464205802767538e-05, -0.0034161806106567383, -0.0002843138063326478, -0.008324623107910156, -1.9073486328125e-05, 0.0, -5.161762237548828e-05, -2.503394853192731e-06, -5.7220458984375e-06, 0.0, -0.000156402587890625, 0.0, -0.0004596710205078125, 0.0, -0.006997108459472656, -1.9073486328125e-06, -0.0004673004150390625, -1.9073486328125e-06, -0.005008697509765625, 0.0, -9.1552734375e-05, -2.6702880859375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.0010874271392822266, -2.3841855067985307e-07, -4.9591064453125e-05, -0.005085945129394531, -0.0009918212890625, -0.034696757793426514, -3.182848740834743e-05, -0.0043048858642578125, -0.000431060791015625, -0.00023651123046875, -1.9073486328125e-06, -6.033253192901611, -3.24249267578125e-05, 0.0, -0.0002288818359375, -0.0001430511474609375, -4.38690185546875e-05, -0.008256912231445312, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -6.127357482910156e-05, -4.76837158203125e-05, -5.7220458984375e-06, -0.000461578369140625, -2.288818359375e-05, -1.6331614460796118e-05, -2.992108420585282e-05, -7.605411519762129e-05, -5.960446742392378e-06], "choice_history": [55, 124, 221, 63, 103, "Dread", "Infernal", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Dread", " ", "Infernal", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Hero", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), HeroSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -8.087999376547621, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Kill"}, {"_type": "Template38", "hole0": "MinionSelector"}]}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 6, "hole1": 6}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -6.568313983734697e-05, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.0004452898574527353, -2.8133366868132725e-05, -0.00012004375457763672, -5.14984130859375e-05, -0.010133743286132812, -5.340576171875e-05, -6.914137884450611e-06, 0.0, 0.0, -0.0001373291015625, -2.6702880859375e-05, -0.00017189729260280728, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.00040435791015625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.768367489305092e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -0.0176544189453125, -0.00052642822265625, -4.9591064453125e-05, -3.576278118089249e-07, -3.647802441264503e-05, -2.145763937733136e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.8358097804593854e-05, -9.894339200400282e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.006133079528808594, -0.00019168852304574102, -1.1205671398784034e-05, -0.027000783011317253, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, -0.0012760162353515625, -0.0002263784408569336, -2.6464205802767538e-05, -0.0034161806106567383, -0.0002843138063326478, -0.008324623107910156, -1.9073486328125e-05, 0.0, -5.161762237548828e-05, -2.503394853192731e-06, -5.7220458984375e-06, 0.0, -0.000156402587890625, 0.0, -0.0004596710205078125, 0.0, -0.006997108459472656, -1.9073486328125e-06, -0.0004673004150390625, -1.9073486328125e-06, -0.005008697509765625, 0.0, -9.1552734375e-05, -2.6702880859375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.0010874271392822266, -2.3841855067985307e-07, -4.9591064453125e-05, -0.005085945129394531, -0.0009918212890625, -0.034696757793426514, -3.182848740834743e-05, -0.0043048858642578125, -0.000431060791015625, -0.00023651123046875, -1.9073486328125e-06, -0.14714395999908447, -8.45193862915039e-05, -1.9073486328125e-06, -0.0037746429443359375, -0.0002346038818359375, -3.814697265625e-05, -5.892393112182617, -1.311301275563892e-06, -0.055939674377441406, -0.0037364959716796875, -2.09808349609375e-05, -2.86102294921875e-05, -0.2846616506576538, -4.5299530029296875e-06, -0.0005016326904296875, -0.01642608642578125, -2.09808349609375e-05, -0.8989657759666443, -5.161762237548828e-05, -0.09454154968261719, -1.9073486328125e-06, -0.5471318960189819, -7.843971252441406e-05, 0.0, -0.0044097900390625, -5.7220458984375e-06, -6.7949163167213555e-06, -8.11782301752828e-05, -4.12461013183929e-05, -1.0609570381348021e-05], "choice_history": [55, 124, 221, 63, 103, "Dread", "Infernal", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Dread", " ", "Infernal", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Kill", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(condition=Battlecry(Kill\n            (), MinionSelector()))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -8.482073197151117, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Dread Infernal", "hole2": "ALL", "hole1": 6, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}]}}, {"_type": "Template11", "hole0": 6, "hole1": 6}], "_type": "ClassDef", "name": "DreadInfernal", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -6.568313983734697e-05, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.0004452898574527353, -2.8133366868132725e-05, -0.00012004375457763672, -5.14984130859375e-05, -4.612092018127441, -0.001354217529296875, -3.576278118089249e-07, -6.151145498733968e-05, -4.1723224057932384e-06, 0.0, -1.442421580577502e-05, -2.3841830625315197e-06, -0.05186641216278076, 0.0, -0.03852212429046631, -3.576278118089249e-07, -0.0004215240478515625, -3.814697265625e-06, -5.340576171875e-05, -7.62939453125e-06, -0.0002288818359375, -3.576278118089249e-07, -3.4332275390625e-05, -0.02802276611328125, -0.00173187255859375, -0.040506571531295776, -3.8861544453538954e-05, -0.00078582763671875, -0.00014495849609375, -0.0006561279296875, -9.5367431640625e-06, -3.445924997329712, -0.0002079010009765625, 0.0, -0.2569437026977539, -2.288818359375e-05, -2.86102294921875e-05, -0.0007266998291015625, -2.6702880859375e-05, -1.1444091796875e-05, -1.1444091796875e-05, -5.733966827392578e-05, -0.000133514404296875, -1.9073486328125e-06, -0.0004673004150390625, -1.9073486328125e-05, -1.39474323077593e-05, -2.1815061700181104e-05, -6.866335752420127e-05, -4.172316494077677e-06], "choice_history": [55, 124, 221, 63, 103, "Dread", "Infernal", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"score": -22.952058792114258, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -1.1444091796875e-05, -22.95204734802246], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 27}
{"beams": [{"score": -0.756437614034212, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Elven Archer", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -4.1961669921875e-05, -2.47955322265625e-05, 0.0, -0.00012039413559250534, -0.00011669908417388797, -0.0008911775075830519, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.861022494471399e-06, -1.990795135498047e-05, -4.017353057861328e-05, -1.71661376953125e-05, -0.6861886978149414, -9.5367431640625e-06, -1.5497195136049413e-06, -1.8477439880371094e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.2278149370104074e-05, 0.0, -0.00041174888610839844, 0.0, -0.0050719971768558025, -8.344646857949556e-07, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.772437675157562e-05, -1.9073468138230965e-06, -1.1444091796875e-05, -0.04322528839111328, -0.0002040863037109375, -0.004065753426402807, -5.5909156799316406e-05, -0.0073795318603515625, -0.000118255615234375, -0.000499725341796875, -1.1444091796875e-05, -0.0030281543731689453, -0.00045275644515641034, -2.0265579223632812e-06, -0.0020294189453125, -9.72747802734375e-05, -1.71661376953125e-05, -7.62939453125e-05, -1.71661376953125e-05, -6.67572021484375e-05, -9.5367431640625e-06, -0.0005424022674560547, -1.537799835205078e-05, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -0.000335693359375, -1.9073486328125e-06, -4.76837158203125e-05, -1.9073486328125e-05, -0.00042939186096191406, -6.103515625e-05, -2.0265579223632812e-06, -0.000179290771484375, -2.6702880859375e-05, 3.574878064682707e-07, -2.384185791015625e-06, -2.0503823179751635e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Elven", "Archer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -0.898308232125899, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -4.1961669921875e-05, -2.47955322265625e-05, 0.0, -0.00012039413559250534, -0.00011669908417388797, -0.0008911775075830519, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.861022494471399e-06, -1.990795135498047e-05, -4.017353057861328e-05, -1.71661376953125e-05, -0.7017192840576172, -6.103515625e-05, -5.936622619628906e-05, -1.0728830375228426e-06, -2.86102294921875e-05, -0.0007476806640625, -6.29425048828125e-05, -0.0019447803497314453, -1.1920928244535389e-07, -5.7220458984375e-05, -0.0020036697387695312, -7.62939453125e-06, 0.0, -0.000499725341796875, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.000217437744140625, -2.3841855067985307e-07, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.0019321441650390625, -6.4849853515625e-05, -0.0001373291015625, -1.2755334864777979e-05, -3.063678741455078e-05, -1.3351424058782868e-05, 0.0, -6.29425048828125e-05, 0.0, -5.960505404800642e-07, -7.987022399902344e-06, -1.1444091796875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-05, -0.0015931129455566406, -2.014636993408203e-05, -0.0008213520050048828, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -0.0011464357376098633, -2.312633478140924e-05, -0.015105247497558594, -3.218639540136792e-05, -0.0002269744873046875, -0.0018558502197265625, -2.09808349609375e-05, -4.220008122501895e-05, -7.593631016789004e-05, -3.814697265625e-06, 0.0, -3.62396240234375e-05, 0.0, -0.00096893310546875, 0.0, -0.06272149085998535, -0.0045920610427856445, -7.62939453125e-05, -5.7220458984375e-06, -0.0018368959426879883, 0.0, -3.62396240234375e-05, -2.288818359375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.000225067138671875, -1.1920922133867862e-06, -2.288818359375e-05, -0.0038328170776367188, -0.0002918243408203125, -0.004419566132128239, -0.00021028518676757812, -0.07132339477539062, -0.00023651123046875, -0.000278472900390625, 0.0, -0.008466839790344238, -0.0009586808737367392, -1.1920928244535389e-07, -0.003040313720703125, -5.7220458984375e-05, -1.33514404296875e-05, -9.34600830078125e-05, -2.09808349609375e-05, -7.62939453125e-05, -1.33514404296875e-05, -0.0008417367935180664, -1.537799835205078e-05, 0.0, -2.09808349609375e-05, -9.5367431640625e-06, -0.0003757476806640625, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-05, -0.0004540681838989258, -6.4849853515625e-05, -2.0265579223632812e-06, -0.000179290771484375, -2.47955322265625e-05, -3.577879397198558e-07, -2.503394853192731e-06, -1.9788545614574105e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Elven", "Archer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Elven", " ", "Archer", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -4.257022688340463, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"_type": "Template38", "hole0": "SelfSelector"}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -4.1961669921875e-05, -2.47955322265625e-05, 0.0, -0.00012039413559250534, -0.00011669908417388797, -0.0008911775075830519, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.861022494471399e-06, -1.990795135498047e-05, -4.017353057861328e-05, -1.71661376953125e-05, -0.7017192840576172, -6.103515625e-05, -5.936622619628906e-05, -1.0728830375228426e-06, -2.86102294921875e-05, -0.0007476806640625, -6.29425048828125e-05, -0.0019447803497314453, -1.1920928244535389e-07, -5.7220458984375e-05, -0.0020036697387695312, -7.62939453125e-06, 0.0, -0.000499725341796875, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.000217437744140625, -2.3841855067985307e-07, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.0019321441650390625, -6.4849853515625e-05, -0.0001373291015625, -1.2755334864777979e-05, -3.063678741455078e-05, -1.3351424058782868e-05, 0.0, -6.29425048828125e-05, 0.0, -5.960505404800642e-07, -7.987022399902344e-06, -1.1444091796875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-05, -0.0015931129455566406, -2.014636993408203e-05, -0.0008213520050048828, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -0.0011464357376098633, -2.312633478140924e-05, -0.015105247497558594, -3.218639540136792e-05, -0.0002269744873046875, -0.0018558502197265625, -2.09808349609375e-05, -4.220008122501895e-05, -7.593631016789004e-05, -3.814697265625e-06, 0.0, -3.62396240234375e-05, 0.0, -0.00096893310546875, 0.0, -0.06272149085998535, -0.0045920610427856445, -7.62939453125e-05, -5.7220458984375e-06, -0.0018368959426879883, 0.0, -3.62396240234375e-05, -2.288818359375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.000225067138671875, -1.1920922133867862e-06, -2.288818359375e-05, -0.0038328170776367188, -0.0002918243408203125, -0.004419566132128239, -0.00021028518676757812, -2.7014875411987305, -1.9073486328125e-06, -0.7435463666915894, -0.00010859437315957621, 0.0, -0.00017547607421875, -3.0517578125e-05, -1.3113144632370677e-06, -1.1086402082582936e-05, -8.702250852365978e-06, -5.483612312673358e-06], "choice_history": [55, 124, 221, 63, 103, "Elven", "Archer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Elven", " ", "Archer", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -4.402645543844038, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -4.1961669921875e-05, -2.47955322265625e-05, 0.0, -0.00012039413559250534, -0.00011669908417388797, -0.0008911775075830519, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.861022494471399e-06, -1.990795135498047e-05, -4.017353057861328e-05, -1.71661376953125e-05, -0.7017192840576172, -6.103515625e-05, -5.936622619628906e-05, -1.0728830375228426e-06, -2.86102294921875e-05, -0.0007476806640625, -6.29425048828125e-05, -0.0019447803497314453, -1.1920928244535389e-07, -5.7220458984375e-05, -0.0020036697387695312, -7.62939453125e-06, 0.0, -0.000499725341796875, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.000217437744140625, -2.3841855067985307e-07, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.0019321441650390625, -6.4849853515625e-05, -0.0001373291015625, -1.2755334864777979e-05, -3.063678741455078e-05, -1.3351424058782868e-05, 0.0, -6.29425048828125e-05, 0.0, -5.960505404800642e-07, -7.987022399902344e-06, -1.1444091796875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-05, -0.0015931129455566406, -2.014636993408203e-05, -0.0008213520050048828, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -0.0011464357376098633, -2.312633478140924e-05, -0.015105247497558594, -3.218639540136792e-05, -0.0002269744873046875, -0.0018558502197265625, -2.09808349609375e-05, -4.220008122501895e-05, -7.593631016789004e-05, -3.814697265625e-06, 0.0, -3.62396240234375e-05, 0.0, -0.00096893310546875, 0.0, -3.5737249851226807, -0.0001850128173828125, -3.4332275390625e-05, -2.09808349609375e-05, -0.0012874603271484375, 0.0, -2.86102294921875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00018513202667236328, -1.5497195136049413e-06, -2.09808349609375e-05, -0.005015373229980469, -0.0002803802490234375, -0.0038157720118761063, -0.0002008676528930664, -0.0662546157836914, -0.00030517578125, -0.0002689361572265625, 0.0, -0.011221766471862793, -0.0007698533590883017, -2.0265579223632812e-06, -0.0032501220703125, -5.91278076171875e-05, -1.52587890625e-05, -8.96453857421875e-05, -1.71661376953125e-05, -7.62939453125e-05, -1.33514404296875e-05, -0.0008875131607055664, -1.537799835205078e-05, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -0.0003757476806640625, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-05, -0.0004540681838989258, -6.4849853515625e-05, -1.9073486328125e-06, -0.00017547607421875, -2.47955322265625e-05, -3.577879397198558e-07, -2.503394853192731e-06, -1.990775126614608e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Elven", "Archer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Elven", " ", "Archer", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -4.797334625781183, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"_type": "Template38", "hole0": "HeroSelector"}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -4.1961669921875e-05, -2.47955322265625e-05, 0.0, -0.00012039413559250534, -0.00011669908417388797, -0.0008911775075830519, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.861022494471399e-06, -1.990795135498047e-05, -4.017353057861328e-05, -1.71661376953125e-05, -0.7017192840576172, -6.103515625e-05, -5.936622619628906e-05, -1.0728830375228426e-06, -2.86102294921875e-05, -0.0007476806640625, -6.29425048828125e-05, -0.0019447803497314453, -1.1920928244535389e-07, -5.7220458984375e-05, -0.0020036697387695312, -7.62939453125e-06, 0.0, -0.000499725341796875, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.000217437744140625, -2.3841855067985307e-07, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.0019321441650390625, -6.4849853515625e-05, -0.0001373291015625, -1.2755334864777979e-05, -3.063678741455078e-05, -1.3351424058782868e-05, 0.0, -6.29425048828125e-05, 0.0, -5.960505404800642e-07, -7.987022399902344e-06, -1.1444091796875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-05, -0.0015931129455566406, -2.014636993408203e-05, -0.0008213520050048828, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -0.0011464357376098633, -2.312633478140924e-05, -0.015105247497558594, -3.218639540136792e-05, -0.0002269744873046875, -0.0018558502197265625, -2.09808349609375e-05, -4.220008122501895e-05, -7.593631016789004e-05, -3.814697265625e-06, 0.0, -3.62396240234375e-05, 0.0, -0.00096893310546875, 0.0, -0.06272149085998535, -0.0045920610427856445, -7.62939453125e-05, -5.7220458984375e-06, -0.0018368959426879883, 0.0, -3.62396240234375e-05, -2.288818359375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.000225067138671875, -1.1920922133867862e-06, -2.288818359375e-05, -0.0038328170776367188, -0.0002918243408203125, -0.004419566132128239, -0.00021028518676757812, -2.7014875411987305, -1.9073486328125e-06, -1.2838553190231323, -0.00018370103498455137, 0.0, -0.0001125335693359375, -3.4332275390625e-05, -8.640199666842818e-12, -3.2186455882765586e-06, -8.225415513152257e-06, -2.145764938177308e-06], "choice_history": [55, 124, 221, 63, 103, "Elven", "Archer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Elven", " ", "Archer", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -4.8198138707300515, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Elven Archer", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template37", "hole0": 1}, {"hole2": 1, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}]}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -4.1961669921875e-05, -2.47955322265625e-05, 0.0, -0.00012039413559250534, -0.00011669908417388797, -0.0008911775075830519, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.861022494471399e-06, -1.990795135498047e-05, -4.017353057861328e-05, -1.71661376953125e-05, -0.6861886978149414, -9.5367431640625e-06, -1.5497195136049413e-06, -1.8477439880371094e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.2278149370104074e-05, 0.0, -0.00041174888610839844, 0.0, -0.0050719971768558025, -8.344646857949556e-07, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.772437675157562e-05, -1.9073468138230965e-06, -1.1444091796875e-05, -3.32163143157959, -0.0009059906005859375, -0.0006875991821289062, -0.0017852783203125, -0.0009918212890625, -0.00028062891215085983, -0.0018010139465332031, -0.4450263977050781, -0.032280921936035156, -0.05940920114517212, -6.258384382817894e-05, -0.049780577421188354, -0.17946946620941162, -5.7220458984375e-06, -0.0006799359107390046, -1.1920928244535389e-07, -0.02116870880126953, -0.0017147064208984375, -0.0002841949462890625, -9.72747802734375e-05, -0.003751342184841633, -0.0008909702301025391, -2.1457672119140625e-06, -0.001129150390625, -0.0001735687255859375, -2.6702880859375e-05, -0.0001049041748046875, -1.33514404296875e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.00034821033477783203, -9.5367431640625e-06, 0.0, -4.57763671875e-05, -2.288818359375e-05, -0.0010528564453125, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.0004388093948364258, -5.91278076171875e-05, -2.0265579223632812e-06, -0.00022125244140625, -2.47955322265625e-05, -4.769626684719697e-07, -2.2649765014648438e-06, -2.0742236301884986e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Elven", "Archer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 35, 120, 209, 48, 173, "1", "<EOS>", 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry([Damage(1), Give(\n            ChangeAttack(1))], MinionSelector(players=BothPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -5.723896220147672, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -4.1961669921875e-05, -2.47955322265625e-05, 0.0, -0.00012039413559250534, -0.00011669908417388797, -0.0008911775075830519, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.861022494471399e-06, -1.990795135498047e-05, -4.017353057861328e-05, -1.71661376953125e-05, -0.7017192840576172, -6.103515625e-05, -5.936622619628906e-05, -1.0728830375228426e-06, -2.86102294921875e-05, -0.0007476806640625, -6.29425048828125e-05, -0.0019447803497314453, -1.1920928244535389e-07, -5.7220458984375e-05, -0.0020036697387695312, -7.62939453125e-06, 0.0, -0.000499725341796875, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.000217437744140625, -2.3841855067985307e-07, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.0019321441650390625, -6.4849853515625e-05, -0.0001373291015625, -1.2755334864777979e-05, -3.063678741455078e-05, -1.3351424058782868e-05, 0.0, -6.29425048828125e-05, 0.0, -5.960505404800642e-07, -7.987022399902344e-06, -1.1444091796875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-05, -0.0015931129455566406, -2.014636993408203e-05, -0.0008213520050048828, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -0.0011464357376098633, -2.312633478140924e-05, -4.496837615966797, -1.0132789611816406e-05, -0.3162384033203125, -0.00014495849609375, -5.340576171875e-05, -5.984305971651338e-05, -4.4941898522665724e-05, -3.814697265625e-06, 0.0, -4.38690185546875e-05, 0.0, -0.0009174346923828125, 0.0, -0.1032707691192627, -0.00560152530670166, -4.76837158203125e-05, -3.814697265625e-06, -0.001240849494934082, 0.0, -3.62396240234375e-05, -2.86102294921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.000270843505859375, -1.0728830375228426e-06, -2.09808349609375e-05, -0.0035696029663085938, -0.000278472900390625, -0.004385114647448063, -0.00022554397583007812, -0.060097694396972656, -0.0002269744873046875, -0.0002727508544921875, 0.0, -0.008470296859741211, -0.000934242969378829, -2.0265579223632812e-06, -0.0032186508178710938, -5.7220458984375e-05, -1.52587890625e-05, -9.34600830078125e-05, -2.09808349609375e-05, -7.43865966796875e-05, -1.33514404296875e-05, -0.0008398294448852539, -1.537799835205078e-05, 0.0, -2.288818359375e-05, -9.5367431640625e-06, -0.00037384033203125, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-05, -0.0004521608352661133, -6.67572021484375e-05, -1.9073486328125e-06, -0.000179290771484375, -2.47955322265625e-05, -2.385804691584781e-07, -2.503394853192731e-06, -1.9669336325023323e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Elven", "Archer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Elven", " ", "Archer", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -5.7362585810364735, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DRAGON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -4.1961669921875e-05, -2.47955322265625e-05, 0.0, -0.00012039413559250534, -0.00011669908417388797, -0.0008911775075830519, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.861022494471399e-06, -1.990795135498047e-05, -4.017353057861328e-05, -1.71661376953125e-05, -0.7017192840576172, -6.103515625e-05, -5.936622619628906e-05, -1.0728830375228426e-06, -2.86102294921875e-05, -0.0007476806640625, -6.29425048828125e-05, -0.0019447803497314453, -1.1920928244535389e-07, -5.7220458984375e-05, -0.0020036697387695312, -7.62939453125e-06, 0.0, -0.000499725341796875, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.000217437744140625, -2.3841855067985307e-07, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.0019321441650390625, -6.4849853515625e-05, -0.0001373291015625, -1.2755334864777979e-05, -3.063678741455078e-05, -1.3351424058782868e-05, 0.0, -6.29425048828125e-05, 0.0, -5.960505404800642e-07, -7.987022399902344e-06, -1.1444091796875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-05, -0.0015931129455566406, -2.014636993408203e-05, -0.0008213520050048828, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -0.0011464357376098633, -2.312633478140924e-05, -0.015105247497558594, -3.218639540136792e-05, -0.0002269744873046875, -0.0018558502197265625, -2.09808349609375e-05, -4.220008122501895e-05, -7.593631016789004e-05, -3.814697265625e-06, 0.0, -3.62396240234375e-05, 0.0, -0.00096893310546875, 0.0, -4.880036354064941, -0.0006650686264038086, -3.0517578125e-05, -9.5367431640625e-06, -0.0016984939575195312, 0.0, -7.62939453125e-06, -2.6702880859375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002994537353515625, -1.0728830375228426e-06, -1.33514404296875e-05, -0.004755973815917969, -0.000301361083984375, -0.00623858068138361, -0.00020062923431396484, -0.08838939666748047, -0.0002803802490234375, -0.000263214111328125, 0.0, -0.013221979141235352, -0.000748395745176822, -2.0265579223632812e-06, -0.0033445358276367188, -5.53131103515625e-05, -1.71661376953125e-05, -8.96453857421875e-05, -1.71661376953125e-05, -7.82012939453125e-05, -1.33514404296875e-05, -0.0008760690689086914, -1.537799835205078e-05, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -0.00037384033203125, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-05, -0.0004502534866333008, -6.4849853515625e-05, -1.9073486328125e-06, -0.00017547607421875, -2.47955322265625e-05, -4.769954102812335e-07, -2.503394853192731e-06, -1.9788545614574105e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Elven", "Archer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Elven", " ", "Archer", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -5.958752332243876, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Elven Archer", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"_type": "Template38", "hole0": "SelfSelector"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -4.1961669921875e-05, -2.47955322265625e-05, 0.0, -0.00012039413559250534, -0.00011669908417388797, -0.0008911775075830519, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.861022494471399e-06, -1.990795135498047e-05, -4.017353057861328e-05, -1.71661376953125e-05, -0.6861886978149414, -9.5367431640625e-06, -1.5497195136049413e-06, -1.8477439880371094e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.2278149370104074e-05, 0.0, -0.00041174888610839844, 0.0, -0.0050719971768558025, -8.344646857949556e-07, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.772437675157562e-05, -1.9073468138230965e-06, -1.1444091796875e-05, -0.04322528839111328, -0.0002040863037109375, -0.004065753426402807, -5.5909156799316406e-05, -5.051717758178711, -3.814697265625e-06, -0.1653228998184204, -0.00018201704369857907, 0.0, -0.0004901885986328125, -5.91278076171875e-05, -2.5011104298755527e-12, -4.1483970562694594e-05, -2.5034014470293187e-06, -2.5510462364763953e-05], "choice_history": [55, 124, 221, 63, 103, "Elven", "Archer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -6.1714602331731925, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Elven Archer", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -4.1961669921875e-05, -2.47955322265625e-05, 0.0, -0.00012039413559250534, -0.00011669908417388797, -0.0008911775075830519, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.861022494471399e-06, -1.990795135498047e-05, -4.017353057861328e-05, -1.71661376953125e-05, -0.6861886978149414, -9.5367431640625e-06, -1.5497195136049413e-06, -1.8477439880371094e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.2278149370104074e-05, 0.0, -0.00041174888610839844, 0.0, -0.0050719971768558025, -8.344646857949556e-07, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.772437675157562e-05, -1.9073468138230965e-06, -1.1444091796875e-05, -3.32163143157959, -0.0009059906005859375, -0.0006875991821289062, -0.0017852783203125, -0.0009918212890625, -0.00028062891215085983, -0.0018010139465332031, -2.0300817489624023, -0.00011444091796875, -0.000217437744140625, -5.7220458984375e-06, -0.046518921852111816, -0.0006959420861676335, -1.1920928244535389e-07, -0.003631591796875, -0.0001125335693359375, -0.000194549560546875, -0.00023281574249267578, -1.1444091796875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0006017684936523438, -9.655952453613281e-06, 0.0, -2.47955322265625e-05, -1.52587890625e-05, -0.000354766845703125, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -0.0004521608352661133, -3.814697265625e-05, -2.0265579223632812e-06, -0.000354766845703125, -1.9073486328125e-06, -0.06572628021240234, -3.814697265625e-06, -1.1920928244535389e-07, -0.0005130767822265625, -2.288818359375e-05, -4.4107587200414855e-06, -3.933904736186378e-06, -1.0967190974042751e-05, -1.4305104514278355e-06], "choice_history": [55, 124, 221, 63, 103, "Elven", "Archer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 35, 120, 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry([Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())],\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -6.7654829769523985, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Elven Archer", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -4.1961669921875e-05, -2.47955322265625e-05, 0.0, -0.00012039413559250534, -0.00011669908417388797, -0.0008911775075830519, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.861022494471399e-06, -1.990795135498047e-05, -4.017353057861328e-05, -1.71661376953125e-05, -0.6861886978149414, -9.5367431640625e-06, -1.5497195136049413e-06, -1.8477439880371094e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.2278149370104074e-05, 0.0, -0.00041174888610839844, 0.0, -0.0050719971768558025, -8.344646857949556e-07, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.772437675157562e-05, -1.9073468138230965e-06, -1.1444091796875e-05, -0.04322528839111328, -0.0002040863037109375, -0.004065753426402807, -5.5909156799316406e-05, -0.0073795318603515625, -0.000118255615234375, -0.000499725341796875, -1.1444091796875e-05, -6.013115882873535, -0.00021755695343017578, -2.1457672119140625e-06, -0.0002803802490234375, -0.000247955322265625, -5.7220458984375e-06, -0.000148773193359375, -6.4849853515625e-05, -5.91278076171875e-05, -4.76837158203125e-05, -0.0010919570922851562, -1.919269561767578e-05, 0.0, -4.00543212890625e-05, -7.62939453125e-06, -0.000396728515625, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-05, -0.00043511390686035156, -7.62939453125e-05, -1.9073486328125e-06, -0.000194549560546875, -2.6702880859375e-05, -1.1934025678783655e-07, -2.384185791015625e-06, -1.943095776368864e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Elven", "Archer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -6.800057245614653, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Elven Archer", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 2}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -4.1961669921875e-05, -2.47955322265625e-05, 0.0, -0.00012039413559250534, -0.00011669908417388797, -0.0008911775075830519, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.861022494471399e-06, -1.990795135498047e-05, -4.017353057861328e-05, -1.71661376953125e-05, -0.6861886978149414, -9.5367431640625e-06, -1.5497195136049413e-06, -1.8477439880371094e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.2278149370104074e-05, 0.0, -0.00041174888610839844, 0.0, -0.0050719971768558025, -8.344646857949556e-07, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.772437675157562e-05, -1.9073468138230965e-06, -1.1444091796875e-05, -0.04322528839111328, -0.0002040863037109375, -6.051074504852295, -0.0001952648162841797, -0.0021114349365234375, -0.0001068115234375, -0.000614166259765625, -1.52587890625e-05, -0.005354523658752441, -0.0004016159218735993, -2.0265579223632812e-06, -0.0014400482177734375, -0.0001068115234375, -2.47955322265625e-05, -5.7220458984375e-05, -1.1444091796875e-05, -6.67572021484375e-05, -7.62939453125e-06, -0.0005387067794799805, -1.3470649719238281e-05, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -0.0003108978271484375, -1.9073486328125e-06, -4.76837158203125e-05, -1.9073486328125e-05, -0.00042366981506347656, -5.7220458984375e-05, -2.0265579223632812e-06, -0.0001697540283203125, -2.6702880859375e-05, 4.766952770296484e-07, -2.384185791015625e-06, -2.0861443772446364e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Elven", "Archer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -6.836009131488709, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Elven Archer", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template37", "hole0": 1}, {"_type": "Template27", "hole0": 1}]}, {"_type": "Template38", "hole0": "SelfSelector"}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -4.1961669921875e-05, -2.47955322265625e-05, 0.0, -0.00012039413559250534, -0.00011669908417388797, -0.0008911775075830519, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.861022494471399e-06, -1.990795135498047e-05, -4.017353057861328e-05, -1.71661376953125e-05, -0.6861886978149414, -9.5367431640625e-06, -1.5497195136049413e-06, -1.8477439880371094e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.2278149370104074e-05, 0.0, -0.00041174888610839844, 0.0, -0.0050719971768558025, -8.344646857949556e-07, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.772437675157562e-05, -1.9073468138230965e-06, -1.1444091796875e-05, -3.32163143157959, -0.0009059906005859375, -0.0006875991821289062, -0.0017852783203125, -0.0009918212890625, -0.00028062891215085983, -0.0018010139465332031, -2.4026145935058594, -0.00360107421875, -0.06526854634284973, -0.00015079975128173828, -0.3263120651245117, -1.9073486328125e-06, -0.01594388484954834, -0.00012885812611784786, 0.0, -0.0004749298095703125, -4.9591064453125e-05, -5.960478119959589e-07, -9.298280929215252e-06, -5.483629593072692e-06, -7.748573807475623e-06], "choice_history": [55, 124, 221, 63, 103, "Elven", "Archer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 35, 120, 209, 48, 173, "1", "<EOS>", 42, 162, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry([Damage(1), Buff(\n            ChangeHealth(1))], SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -7.028769322317828, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Elven Archer", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole2": 1, "_type": "Template32", "hole0": "Give", "hole1": "ChangeHealth"}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}]}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "ElvenArcher", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -4.1961669921875e-05, -2.47955322265625e-05, 0.0, -0.00012039413559250534, -0.00011669908417388797, -0.0008911775075830519, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.861022494471399e-06, -1.990795135498047e-05, -4.017353057861328e-05, -1.71661376953125e-05, -0.6861886978149414, -9.5367431640625e-06, -1.5497195136049413e-06, -1.8477439880371094e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.2278149370104074e-05, 0.0, -0.00041174888610839844, 0.0, -0.0050719971768558025, -8.344646857949556e-07, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.772437675157562e-05, -1.9073468138230965e-06, -1.1444091796875e-05, -5.7034406661987305, -0.002292633056640625, -0.0004925727844238281, -4.971027374267578e-05, -0.0022066831588745117, -0.5181369781494141, -7.2479248046875e-05, -0.013987837359309196, -2.3841855067985307e-07, -0.039114952087402344, -0.00572967529296875, -0.0003032684326171875, -1.33514404296875e-05, -0.003288563573732972, -0.00029027462005615234, -2.3841855067985307e-07, -0.04329395294189453, -3.62396240234375e-05, -9.5367431640625e-06, -0.0001964569091796875, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.00039970874786376953, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -2.86102294921875e-05, -0.001132965087890625, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.00047898292541503906, -6.67572021484375e-05, -1.9073486328125e-06, -0.000225067138671875, -2.288818359375e-05, -3.5775519791059196e-07, -2.2649765014648438e-06, -2.1219060727162287e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Elven", "Archer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(ChangeHealth(1)),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -20.539310455322266, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -20.539276123046875], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 28}
{"beams": [{"score": -0.11731949448195422, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole0": {"id": "player", "_type": "Name"}, "hole1": "draw"}], "_type": "ClassDef", "name": "ExcessMana", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0005359649658203125, -5.7220458984375e-06, -1.4543427823809907e-05, -1.5139465176616795e-05, -0.000248291646130383, -2.09808349609375e-05, -0.00064849853515625, -2.86102294921875e-05, -0.00044536334462463856, -1.3112959095451515e-05, 0.0, -2.47955322265625e-05, -0.006285667419433594, -7.62939453125e-06, -0.0004333248652983457, -0.00011193750106031075, -7.62939453125e-06, -9.5367431640625e-06, -0.000141143798828125, -0.00015258559142239392, -1.52587890625e-05, -0.000164031982421875, -0.000102996826171875, -1.1444091796875e-05, -3.814697265625e-06, -0.00046539306640625, -4.1961669921875e-05, -3.814697265625e-06, -0.0001468658447265625, 0.0, -1.0132769602932967e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -0.0057888031005859375, -5.7220458984375e-05, -0.01570892333984375, -0.00012158675963291898, -5.567064363276586e-05, -0.0004248924378771335, -0.000301361083984375, -0.008295059204101562, 0.0, -0.0011943173594772816, -7.152555099310121e-07, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.001262664794921875, 0.0, -0.0017795562744140625, -1.1920928244535389e-07, -3.814697265625e-06, -1.52587890625e-05, -0.0001316070556640625, -2.09808349609375e-05, -0.00014340877532958984, -5.245195097813848e-06, -0.0011196136474609375, -5.006789251638111e-06, -0.020191192626953125, -6.29425048828125e-05, -0.00012159344623796642, -2.3841855067985307e-07, -0.004055023193359375, -0.015324592590332031, -0.002475738525390625, -1.9073486328125e-06, -0.005392193794250488, -7.510157047363464e-06, -0.02271135151386261, -0.00014841511438135058], "choice_history": [55, 124, 221, 63, 103, "Excess", "Mana", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Excess", " ", "Mana", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 71, 143, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}, {"score": -5.156106785386974, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole0": {"id": "player", "_type": "Name"}, "hole1": "Card"}], "_type": "ClassDef", "name": "ExcessMana", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0005359649658203125, -5.7220458984375e-06, -1.4543427823809907e-05, -1.5139465176616795e-05, -0.000248291646130383, -2.09808349609375e-05, -0.00064849853515625, -2.86102294921875e-05, -0.00044536334462463856, -1.3112959095451515e-05, 0.0, -2.47955322265625e-05, -0.006285667419433594, -7.62939453125e-06, -0.0004333248652983457, -0.00011193750106031075, -7.62939453125e-06, -9.5367431640625e-06, -0.000141143798828125, -0.00015258559142239392, -1.52587890625e-05, -0.000164031982421875, -0.000102996826171875, -1.1444091796875e-05, -3.814697265625e-06, -0.00046539306640625, -4.1961669921875e-05, -3.814697265625e-06, -0.0001468658447265625, 0.0, -1.0132769602932967e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -0.0057888031005859375, -5.7220458984375e-05, -0.01570892333984375, -0.00012158675963291898, -5.567064363276586e-05, -0.0004248924378771335, -0.000301361083984375, -0.008295059204101562, 0.0, -0.0011943173594772816, -7.152555099310121e-07, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.001262664794921875, 0.0, -0.0017795562744140625, -1.1920928244535389e-07, -3.814697265625e-06, -1.52587890625e-05, -0.0001316070556640625, -2.09808349609375e-05, -0.00014340877532958984, -5.245195097813848e-06, -0.0011196136474609375, -5.006789251638111e-06, -0.020191192626953125, -6.29425048828125e-05, -0.00012159344623796642, -2.3841855067985307e-07, -0.004055023193359375, -0.015324592590332031, -0.002475738525390625, -1.9073486328125e-06, -0.005392193794250488, -7.510157047363464e-06, -5.061477184295654, -0.00016987323760986328], "choice_history": [55, 124, 221, 63, 103, "Excess", "Mana", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Excess", " ", "Mana", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 71, 143, 19, 125, "player", "<EOS>", "Card", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.Card()\n"}, {"score": -5.260435277005435, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ExcessMana", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0005359649658203125, -5.7220458984375e-06, -1.4543427823809907e-05, -1.5139465176616795e-05, -0.000248291646130383, -2.09808349609375e-05, -0.00064849853515625, -2.86102294921875e-05, -0.00044536334462463856, -1.3112959095451515e-05, 0.0, -2.47955322265625e-05, -0.006285667419433594, -7.62939453125e-06, -0.0004333248652983457, -0.00011193750106031075, -7.62939453125e-06, -9.5367431640625e-06, -0.000141143798828125, -0.00015258559142239392, -1.52587890625e-05, -0.000164031982421875, -0.000102996826171875, -1.1444091796875e-05, -3.814697265625e-06, -0.00046539306640625, -4.1961669921875e-05, -3.814697265625e-06, -0.0001468658447265625, 0.0, -1.0132769602932967e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -0.0057888031005859375, -5.7220458984375e-05, -0.01570892333984375, -0.00012158675963291898, -5.567064363276586e-05, -0.0004248924378771335, -0.000301361083984375, -0.008295059204101562, 0.0, -0.0011943173594772816, -7.152555099310121e-07, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.001262664794921875, 0.0, -0.0017795562744140625, -1.1920928244535389e-07, -3.814697265625e-06, -1.52587890625e-05, -0.0001316070556640625, -2.09808349609375e-05, -0.00014340877532958984, -5.245195097813848e-06, -0.0011196136474609375, -5.006789251638111e-06, -3.953272819519043, -7.62939453125e-06, -5.91278076171875e-05, -5.7220458984375e-06, -0.0011407136917114258, -1.1920858014491387e-05, -0.0013828277587890625, -8.2254373410251e-06, -0.020719528198242188, -1.9073486328125e-06, -3.4928321838378906e-05, -2.3841855067985307e-07, -3.814697265625e-06, -3.814697265625e-05, 0.0, -2.1219222617219202e-05, 0.0, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -2.3603439331054688e-05, -9.655945177655667e-06, -0.4714937210083008, -5.14984130859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.6702880859375e-05, 0.0, -2.09808349609375e-05, 0.0, -2.110004425048828e-05, 0.0, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.0001201629638671875, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -6.4849853515625e-05, 0.0, -1.1444091796875e-05, -1.8000566342379898e-05, -0.014577865600585938, -0.0001354217529296875, -0.001064300537109375, -0.0001811981201171875, -3.814697265625e-06, 0.0, -9.918212890625e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0028533935546875, -3.576278118089249e-07, -8.773802255745977e-05, -1.1920928244535389e-07, -0.1544557809829712, 0.0, -0.0001010894775390625, -0.02825927734375, 0.0, -0.051772117614746094, -1.9073486328125e-06, -0.007672309875488281, -4.1961669921875e-05, -1.9073486328125e-05, -0.08240699768066406, -5.7220458984375e-06, -1.33514404296875e-05, -0.3771476745605469, 0.0, -0.037413597106933594, -3.576278118089249e-07, -0.00662169698625803, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Excess", "Mana", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Excess", " ", "Mana", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n"}, {"score": -5.595033959001476, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole0": {"id": "player", "_type": "Name"}, "hole1": "hand"}], "_type": "ClassDef", "name": "ExcessMana", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0005359649658203125, -5.7220458984375e-06, -1.4543427823809907e-05, -1.5139465176616795e-05, -0.000248291646130383, -2.09808349609375e-05, -0.00064849853515625, -2.86102294921875e-05, -0.00044536334462463856, -1.3112959095451515e-05, 0.0, -2.47955322265625e-05, -0.006285667419433594, -7.62939453125e-06, -0.0004333248652983457, -0.00011193750106031075, -7.62939453125e-06, -9.5367431640625e-06, -0.000141143798828125, -0.00015258559142239392, -1.52587890625e-05, -0.000164031982421875, -0.000102996826171875, -1.1444091796875e-05, -3.814697265625e-06, -0.00046539306640625, -4.1961669921875e-05, -3.814697265625e-06, -0.0001468658447265625, 0.0, -1.0132769602932967e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -0.0057888031005859375, -5.7220458984375e-05, -0.01570892333984375, -0.00012158675963291898, -5.567064363276586e-05, -0.0004248924378771335, -0.000301361083984375, -0.008295059204101562, 0.0, -0.0011943173594772816, -7.152555099310121e-07, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.001262664794921875, 0.0, -0.0017795562744140625, -1.1920928244535389e-07, -3.814697265625e-06, -1.52587890625e-05, -0.0001316070556640625, -2.09808349609375e-05, -0.00014340877532958984, -5.245195097813848e-06, -0.0011196136474609375, -5.006789251638111e-06, -0.020191192626953125, -6.29425048828125e-05, -0.00012159344623796642, -2.3841855067985307e-07, -0.004055023193359375, -0.015324592590332031, -0.002475738525390625, -1.9073486328125e-06, -0.005392193794250488, -7.510157047363464e-06, -5.499199390411377, -0.0013748407363891602], "choice_history": [55, 124, 221, 63, 103, "Excess", "Mana", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Excess", " ", "Mana", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 71, 143, 19, 125, "player", "<EOS>", "hand", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hand()\n"}, {"score": -6.271021798717975, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "bounce"}], "_type": "ClassDef", "name": "ExcessMana", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0005359649658203125, -5.7220458984375e-06, -1.4543427823809907e-05, -1.5139465176616795e-05, -0.000248291646130383, -2.09808349609375e-05, -0.00064849853515625, -2.86102294921875e-05, -0.00044536334462463856, -1.3112959095451515e-05, 0.0, -2.47955322265625e-05, -0.006285667419433594, -7.62939453125e-06, -0.0004333248652983457, -0.00011193750106031075, -7.62939453125e-06, -9.5367431640625e-06, -0.000141143798828125, -0.00015258559142239392, -1.52587890625e-05, -0.000164031982421875, -0.000102996826171875, -1.1444091796875e-05, -3.814697265625e-06, -0.00046539306640625, -4.1961669921875e-05, -3.814697265625e-06, -0.0001468658447265625, 0.0, -1.0132769602932967e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -0.0057888031005859375, -5.7220458984375e-05, -0.01570892333984375, -0.00012158675963291898, -5.567064363276586e-05, -0.0004248924378771335, -0.000301361083984375, -0.008295059204101562, 0.0, -0.0011943173594772816, -7.152555099310121e-07, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.001262664794921875, 0.0, -0.0017795562744140625, -1.1920928244535389e-07, -3.814697265625e-06, -1.52587890625e-05, -0.0001316070556640625, -2.09808349609375e-05, -0.00014340877532958984, -5.245195097813848e-06, -0.0011196136474609375, -5.006789251638111e-06, -0.020191192626953125, -6.29425048828125e-05, -0.00012159344623796642, -2.3841855067985307e-07, -0.004055023193359375, -0.015324592590332031, -6.049776077270508, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0076465606689453125, -2.3841855067985307e-07, -0.00020611286163330078, 0.0, -0.1267467737197876, -6.437291176553117e-06], "choice_history": [55, 124, 221, 63, 103, "Excess", "Mana", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Excess", " ", "Mana", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 71, 143, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n"}, {"score": -6.8870693002574725, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole0": {"id": "player", "_type": "Name"}, "hole1": "effective_spell_damage"}], "_type": "ClassDef", "name": "ExcessMana", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0005359649658203125, -5.7220458984375e-06, -1.4543427823809907e-05, -1.5139465176616795e-05, -0.000248291646130383, -2.09808349609375e-05, -0.00064849853515625, -2.86102294921875e-05, -0.00044536334462463856, -1.3112959095451515e-05, 0.0, -2.47955322265625e-05, -0.006285667419433594, -7.62939453125e-06, -0.0004333248652983457, -0.00011193750106031075, -7.62939453125e-06, -9.5367431640625e-06, -0.000141143798828125, -0.00015258559142239392, -1.52587890625e-05, -0.000164031982421875, -0.000102996826171875, -1.1444091796875e-05, -3.814697265625e-06, -0.00046539306640625, -4.1961669921875e-05, -3.814697265625e-06, -0.0001468658447265625, 0.0, -1.0132769602932967e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -0.0057888031005859375, -5.7220458984375e-05, -0.01570892333984375, -0.00012158675963291898, -5.567064363276586e-05, -0.0004248924378771335, -0.000301361083984375, -0.008295059204101562, 0.0, -0.0011943173594772816, -7.152555099310121e-07, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.001262664794921875, 0.0, -0.0017795562744140625, -1.1920928244535389e-07, -3.814697265625e-06, -1.52587890625e-05, -0.0001316070556640625, -2.09808349609375e-05, -0.00014340877532958984, -5.245195097813848e-06, -0.0011196136474609375, -5.006789251638111e-06, -0.020191192626953125, -6.29425048828125e-05, -0.00012159344623796642, -2.3841855067985307e-07, -0.004055023193359375, -0.015324592590332031, -0.002475738525390625, -1.9073486328125e-06, -0.005392193794250488, -7.510157047363464e-06, -6.792602062225342, -7.5101784204889555e-06], "choice_history": [55, 124, 221, 63, 103, "Excess", "Mana", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Excess", " ", "Mana", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 71, 143, 19, 125, "player", "<EOS>", "effective_spell_damage", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.effective_spell_damage()\n"}, {"score": -6.932486609071667, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole0": {"id": "player", "_type": "Name"}, "hole1": "bounce"}], "_type": "ClassDef", "name": "ExcessMana", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0005359649658203125, -5.7220458984375e-06, -1.4543427823809907e-05, -1.5139465176616795e-05, -0.000248291646130383, -2.09808349609375e-05, -0.00064849853515625, -2.86102294921875e-05, -0.00044536334462463856, -1.3112959095451515e-05, 0.0, -2.47955322265625e-05, -0.006285667419433594, -7.62939453125e-06, -0.0004333248652983457, -0.00011193750106031075, -7.62939453125e-06, -9.5367431640625e-06, -0.000141143798828125, -0.00015258559142239392, -1.52587890625e-05, -0.000164031982421875, -0.000102996826171875, -1.1444091796875e-05, -3.814697265625e-06, -0.00046539306640625, -4.1961669921875e-05, -3.814697265625e-06, -0.0001468658447265625, 0.0, -1.0132769602932967e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -0.0057888031005859375, -5.7220458984375e-05, -0.01570892333984375, -0.00012158675963291898, -5.567064363276586e-05, -0.0004248924378771335, -0.000301361083984375, -0.008295059204101562, 0.0, -0.0011943173594772816, -7.152555099310121e-07, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.001262664794921875, 0.0, -0.0017795562744140625, -1.1920928244535389e-07, -3.814697265625e-06, -1.52587890625e-05, -0.0001316070556640625, -2.09808349609375e-05, -0.00014340877532958984, -5.245195097813848e-06, -0.0011196136474609375, -5.006789251638111e-06, -0.020191192626953125, -6.29425048828125e-05, -0.00012159344623796642, -2.3841855067985307e-07, -0.004055023193359375, -0.015324592590332031, -0.002475738525390625, -1.9073486328125e-06, -0.005392193794250488, -7.510157047363464e-06, -6.837827205657959, -0.0001996755599975586], "choice_history": [55, 124, 221, 63, 103, "Excess", "Mana", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Excess", " ", "Mana", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 71, 143, 19, 125, "player", "<EOS>", "bounce", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.bounce()\n"}, {"score": -7.0395383074371765, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ExcessMana", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0005359649658203125, -5.7220458984375e-06, -1.4543427823809907e-05, -1.5139465176616795e-05, -0.000248291646130383, -2.09808349609375e-05, -0.00064849853515625, -2.86102294921875e-05, -0.00044536334462463856, -1.3112959095451515e-05, 0.0, -2.47955322265625e-05, -0.006285667419433594, -7.62939453125e-06, -0.0004333248652983457, -0.00011193750106031075, -7.62939453125e-06, -9.5367431640625e-06, -0.000141143798828125, -0.00015258559142239392, -1.52587890625e-05, -0.000164031982421875, -0.000102996826171875, -1.1444091796875e-05, -3.814697265625e-06, -0.00046539306640625, -4.1961669921875e-05, -3.814697265625e-06, -0.0001468658447265625, 0.0, -1.0132769602932967e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -5.252608299255371, -0.0009250640869140625, -0.00106048583984375, -0.0016042385250329971, -4.124641418457031e-05, -0.0009550062823109329, -0.000240325927734375, -0.025587081909179688, -1.9073486328125e-06, -0.24986091256141663, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00508880615234375, 0.0, -0.01817607879638672, -3.576278118089249e-07, -1.9073486328125e-06, -2.47955322265625e-05, -0.00019073486328125, -9.5367431640625e-06, -0.0002518892288208008, -7.986990567587782e-06, -0.0011844635009765625, -6.0796710386057384e-06, -0.005977630615234375, -0.0003108978271484375, -0.0007063150405883789, -1.1920928244535389e-07, -1.9073486328125e-05, -3.814697265625e-06, -0.0010776519775390625, -3.814697265625e-06, -5.340576171875e-05, 0.0, -0.013336181640625, -2.9802317840221804e-06, -0.0001684425660641864, 0.0, -0.026807188987731934, -7.915494643384591e-05, -0.00492095947265625, 0.0, -2.133846101060044e-05, -9.536738616588991e-07, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.005423397757113e-05, 0.0, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -2.181529998779297e-05, -1.5020326827652752e-05, -0.6311712265014648, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -2.288818359375e-05, 0.0, -2.110004425048828e-05, 0.0, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.0001220703125, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -6.4849853515625e-05, 0.0, -1.1444091796875e-05, -1.9907914975192398e-05, -0.0147705078125, -0.000148773193359375, -0.00107574462890625, -0.00017547607421875, -3.814697265625e-06, 0.0, -8.96453857421875e-05, 0.0, -4.9591064453125e-05, 0.0, -0.002964019775390625, -3.576278118089249e-07, -8.738039468880743e-05, -1.1920928244535389e-07, -0.15556931495666504, 0.0, -0.000102996826171875, -0.028568267822265625, 0.0, -0.05205726623535156, -1.9073486328125e-06, -0.008718490600585938, -4.57763671875e-05, -2.09808349609375e-05, -0.07682991027832031, -5.7220458984375e-06, -1.33514404296875e-05, -0.38951683044433594, 0.0, -0.04865264892578125, -3.576278118089249e-07, -0.006640177220106125, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Excess", "Mana", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Excess", " ", "Mana", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True, hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n"}, {"score": -7.203323200394017, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ExcessMana", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0005359649658203125, -5.7220458984375e-06, -1.4543427823809907e-05, -1.5139465176616795e-05, -0.000248291646130383, -2.09808349609375e-05, -0.00064849853515625, -2.86102294921875e-05, -0.00044536334462463856, -1.3112959095451515e-05, 0.0, -2.47955322265625e-05, -0.006285667419433594, -7.62939453125e-06, -0.0004333248652983457, -0.00011193750106031075, -7.62939453125e-06, -9.5367431640625e-06, -0.000141143798828125, -0.00015258559142239392, -1.52587890625e-05, -0.000164031982421875, -0.000102996826171875, -1.1444091796875e-05, -3.814697265625e-06, -0.00046539306640625, -4.1961669921875e-05, -3.814697265625e-06, -0.0001468658447265625, 0.0, -1.0132769602932967e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -0.0057888031005859375, -5.7220458984375e-05, -0.01570892333984375, -0.00012158675963291898, -5.567064363276586e-05, -0.0004248924378771335, -0.000301361083984375, -0.008295059204101562, 0.0, -0.0011943173594772816, -7.152555099310121e-07, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.001262664794921875, 0.0, -0.0017795562744140625, -1.1920928244535389e-07, -3.814697265625e-06, -1.52587890625e-05, -0.0001316070556640625, -2.09808349609375e-05, -0.00014340877532958984, -5.245195097813848e-06, -0.0011196136474609375, -5.006789251638111e-06, -3.953272819519043, -7.62939453125e-06, -5.91278076171875e-05, -5.7220458984375e-06, -0.0011407136917114258, -1.1920858014491387e-05, -0.0013828277587890625, -8.2254373410251e-06, -0.020719528198242188, -1.9073486328125e-06, -3.4928321838378906e-05, -2.3841855067985307e-07, -3.814697265625e-06, -3.814697265625e-05, 0.0, -2.1219222617219202e-05, 0.0, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -2.3603439331054688e-05, -9.655945177655667e-06, -0.4714937210083008, -5.14984130859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.6702880859375e-05, 0.0, -2.09808349609375e-05, 0.0, -2.110004425048828e-05, 0.0, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.0001201629638671875, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -6.4849853515625e-05, 0.0, -1.1444091796875e-05, -1.8000566342379898e-05, -0.014577865600585938, -0.0001354217529296875, -0.001064300537109375, -0.0001811981201171875, -3.814697265625e-06, 0.0, -9.918212890625e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0028533935546875, -3.576278118089249e-07, -8.773802255745977e-05, -1.1920928244535389e-07, -0.1544557809829712, 0.0, -0.0001010894775390625, -0.02825927734375, 0.0, -0.051772117614746094, -1.9073486328125e-06, -0.007672309875488281, -4.1961669921875e-05, -1.9073486328125e-05, -0.08240699768066406, -5.7220458984375e-06, -1.33514404296875e-05, -1.1602058410644531, 0.0, -0.0003719329833984375, -1.9073486328125e-06, -0.7422771453857422, -1.1920922133867862e-06, -0.00021266908152028918, 0.0, -0.46100032329559326, -2.1457672119140625e-06], "choice_history": [55, 124, 221, 63, 103, "Excess", "Mana", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Excess", " ", "Mana", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.<UNK>()\n"}, {"score": -7.224690007892129, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ExcessMana", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0005359649658203125, -5.7220458984375e-06, -1.4543427823809907e-05, -1.5139465176616795e-05, -0.000248291646130383, -2.09808349609375e-05, -0.00064849853515625, -2.86102294921875e-05, -0.00044536334462463856, -1.3112959095451515e-05, 0.0, -2.47955322265625e-05, -0.006285667419433594, -7.62939453125e-06, -0.0004333248652983457, -0.00011193750106031075, -7.62939453125e-06, -9.5367431640625e-06, -0.000141143798828125, -0.00015258559142239392, -1.52587890625e-05, -0.000164031982421875, -0.000102996826171875, -1.1444091796875e-05, -3.814697265625e-06, -0.00046539306640625, -4.1961669921875e-05, -3.814697265625e-06, -0.0001468658447265625, 0.0, -1.0132769602932967e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -0.0057888031005859375, -5.7220458984375e-05, -0.01570892333984375, -0.00012158675963291898, -5.567064363276586e-05, -0.0004248924378771335, -0.000301361083984375, -0.008295059204101562, 0.0, -0.0011943173594772816, -7.152555099310121e-07, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.001262664794921875, 0.0, -0.0017795562744140625, -1.1920928244535389e-07, -3.814697265625e-06, -1.52587890625e-05, -0.0001316070556640625, -2.09808349609375e-05, -0.00014340877532958984, -5.245195097813848e-06, -0.0011196136474609375, -5.006789251638111e-06, -0.020191192626953125, -6.29425048828125e-05, -0.00012159344623796642, -2.3841855067985307e-07, -5.60836124420166, -1.33514404296875e-05, -5.555152893066406e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, 0.0, -1.5377969248220325e-05, 0.0, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -3.814697265625e-06, -4.017353057861328e-05, -7.033342626527883e-06, -0.8886747360229492, -7.43865966796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -2.09808349609375e-05, 0.0, -2.110004425048828e-05, 0.0, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.0001220703125, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -6.67572021484375e-05, 0.0, -1.1444091796875e-05, -2.0146331735304557e-05, -0.021097183227539062, -0.0001354217529296875, -0.000980377197265625, -0.0001811981201171875, -3.814697265625e-06, 0.0, -0.00011444091796875, 0.0, -4.76837158203125e-05, 0.0, -0.00322723388671875, -4.768370445162873e-07, -8.821485243970528e-05, -1.1920928244535389e-07, -0.15341031551361084, 0.0, -0.0001010894775390625, -0.027693748474121094, 0.0, -0.051032066345214844, -1.9073486328125e-06, -0.007914543151855469, -3.814697265625e-05, -2.09808349609375e-05, -0.0703887939453125, -5.7220458984375e-06, -1.52587890625e-05, -0.2951688766479492, 0.0, -0.021811485290527344, -3.576278118089249e-07, -0.0063559734262526035, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Excess", "Mana", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Excess", " ", "Mana", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n"}, {"score": -7.563259269396632, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "card"}]}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_buff"}], "_type": "ClassDef", "name": "ExcessMana", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0005359649658203125, -5.7220458984375e-06, -1.4543427823809907e-05, -1.5139465176616795e-05, -0.000248291646130383, -2.09808349609375e-05, -0.00064849853515625, -2.86102294921875e-05, -0.00044536334462463856, -1.3112959095451515e-05, 0.0, -2.47955322265625e-05, -0.006285667419433594, -7.62939453125e-06, -0.0004333248652983457, -0.00011193750106031075, -7.62939453125e-06, -9.5367431640625e-06, -0.000141143798828125, -0.00015258559142239392, -1.52587890625e-05, -0.000164031982421875, -0.000102996826171875, -1.1444091796875e-05, -3.814697265625e-06, -0.00046539306640625, -4.1961669921875e-05, -3.814697265625e-06, -0.0001468658447265625, 0.0, -1.0132769602932967e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -0.0057888031005859375, -5.7220458984375e-05, -0.01570892333984375, -0.00012158675963291898, -5.567064363276586e-05, -0.0004248924378771335, -0.000301361083984375, -0.008295059204101562, 0.0, -0.0011943173594772816, -7.152555099310121e-07, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.001262664794921875, 0.0, -0.0017795562744140625, -1.1920928244535389e-07, -3.814697265625e-06, -1.52587890625e-05, -0.0001316070556640625, -2.09808349609375e-05, -0.00014340877532958984, -5.245195097813848e-06, -0.0011196136474609375, -5.006789251638111e-06, -0.020191192626953125, -6.29425048828125e-05, -0.00012159344623796642, -2.3841855067985307e-07, -0.004055023193359375, -5.8118438720703125, -7.62939453125e-06, 0.0, -0.0022487640380859375, 0.0, -0.001148223876953125, -9.536738616588991e-07, -2.6941299438476562e-05, 0.0, -1.2545921802520752, -1.728534698486328e-05, -0.0003108978271484375, -0.004918098449707031, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, -0.007012605667114258, -0.0002272127167088911, -0.0002079010009765625, -0.0009288787841796875, -9.5367431640625e-06, -0.40706667304039, -0.001376609317958355], "choice_history": [55, 124, 221, 63, 103, "Excess", "Mana", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Excess", " ", "Mana", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "card", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(card()))\n"}, {"score": -7.635316454214802, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ExcessMana", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0005359649658203125, -5.7220458984375e-06, -1.4543427823809907e-05, -1.5139465176616795e-05, -0.000248291646130383, -2.09808349609375e-05, -0.00064849853515625, -2.86102294921875e-05, -0.00044536334462463856, -1.3112959095451515e-05, 0.0, -2.47955322265625e-05, -0.006285667419433594, -7.62939453125e-06, -0.0004333248652983457, -0.00011193750106031075, -7.62939453125e-06, -9.5367431640625e-06, -0.000141143798828125, -0.00015258559142239392, -1.52587890625e-05, -0.000164031982421875, -0.000102996826171875, -1.1444091796875e-05, -3.814697265625e-06, -0.00046539306640625, -4.1961669921875e-05, -3.814697265625e-06, -0.0001468658447265625, 0.0, -1.0132769602932967e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -0.0057888031005859375, -5.7220458984375e-05, -0.01570892333984375, -0.00012158675963291898, -5.567064363276586e-05, -0.0004248924378771335, -0.000301361083984375, -0.008295059204101562, 0.0, -0.0011943173594772816, -7.152555099310121e-07, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.001262664794921875, 0.0, -0.0017795562744140625, -1.1920928244535389e-07, -3.814697265625e-06, -1.52587890625e-05, -0.0001316070556640625, -2.09808349609375e-05, -0.00014340877532958984, -5.245195097813848e-06, -0.0011196136474609375, -5.006789251638111e-06, -3.953272819519043, -7.62939453125e-06, -5.91278076171875e-05, -5.7220458984375e-06, -0.0011407136917114258, -1.1920858014491387e-05, -0.0013828277587890625, -8.2254373410251e-06, -0.020719528198242188, -1.9073486328125e-06, -3.4928321838378906e-05, -2.3841855067985307e-07, -3.814697265625e-06, -3.814697265625e-05, 0.0, -2.1219222617219202e-05, 0.0, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -2.3603439331054688e-05, -9.655945177655667e-06, -0.4714937210083008, -5.14984130859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.6702880859375e-05, 0.0, -2.09808349609375e-05, 0.0, -2.110004425048828e-05, 0.0, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.0001201629638671875, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -6.4849853515625e-05, 0.0, -1.1444091796875e-05, -1.8000566342379898e-05, -0.014577865600585938, -0.0001354217529296875, -0.001064300537109375, -0.0001811981201171875, -3.814697265625e-06, 0.0, -9.918212890625e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0028533935546875, -3.576278118089249e-07, -8.773802255745977e-05, -1.1920928244535389e-07, -0.1544557809829712, 0.0, -0.0001010894775390625, -0.02825927734375, 0.0, -0.051772117614746094, -1.9073486328125e-06, -0.007672309875488281, -4.1961669921875e-05, -1.9073486328125e-05, -0.08240699768066406, -5.7220458984375e-06, -1.33514404296875e-05, -1.1602058410644531, 0.0, -0.0003719329833984375, -1.9073486328125e-06, -1.4783544540405273, -2.1457672119140625e-06, -0.06278207153081894, -1.9073486328125e-06, -0.09434603154659271, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Excess", "Mana", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Excess", " ", "Mana", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.other_player.draw()\n"}, {"score": -8.883538903727704, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ExcessMana", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0005359649658203125, -5.7220458984375e-06, -1.4543427823809907e-05, -1.5139465176616795e-05, -0.000248291646130383, -2.09808349609375e-05, -0.00064849853515625, -2.86102294921875e-05, -0.00044536334462463856, -1.3112959095451515e-05, 0.0, -2.47955322265625e-05, -0.006285667419433594, -7.62939453125e-06, -0.0004333248652983457, -0.00011193750106031075, -7.62939453125e-06, -9.5367431640625e-06, -0.000141143798828125, -0.00015258559142239392, -1.52587890625e-05, -0.000164031982421875, -0.000102996826171875, -1.1444091796875e-05, -3.814697265625e-06, -0.00046539306640625, -4.1961669921875e-05, -3.814697265625e-06, -0.0001468658447265625, 0.0, -1.0132769602932967e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -5.252608299255371, -0.0009250640869140625, -0.00106048583984375, -0.0016042385250329971, -4.124641418457031e-05, -0.0009550062823109329, -0.000240325927734375, -0.025587081909179688, -1.9073486328125e-06, -0.24986091256141663, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00508880615234375, 0.0, -0.01817607879638672, -3.576278118089249e-07, -1.9073486328125e-06, -2.47955322265625e-05, -0.00019073486328125, -9.5367431640625e-06, -0.0002518892288208008, -7.986990567587782e-06, -0.0011844635009765625, -6.0796710386057384e-06, -0.005977630615234375, -0.0003108978271484375, -0.0007063150405883789, -1.1920928244535389e-07, -1.9073486328125e-05, -3.814697265625e-06, -0.0010776519775390625, -3.814697265625e-06, -5.340576171875e-05, 0.0, -0.013336181640625, -2.9802317840221804e-06, -0.0001684425660641864, 0.0, -0.026807188987731934, -7.915494643384591e-05, -0.00492095947265625, 0.0, -2.133846101060044e-05, -9.536738616588991e-07, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -4.005423397757113e-05, 0.0, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -2.181529998779297e-05, -1.5020326827652752e-05, -0.6311712265014648, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -2.288818359375e-05, 0.0, -2.110004425048828e-05, 0.0, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -0.0001220703125, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -6.4849853515625e-05, 0.0, -1.1444091796875e-05, -1.9907914975192398e-05, -0.0147705078125, -0.000148773193359375, -0.00107574462890625, -0.00017547607421875, -3.814697265625e-06, 0.0, -8.96453857421875e-05, 0.0, -4.9591064453125e-05, 0.0, -0.002964019775390625, -3.576278118089249e-07, -8.738039468880743e-05, -1.1920928244535389e-07, -0.15556931495666504, 0.0, -0.000102996826171875, -0.028568267822265625, 0.0, -0.05205726623535156, -1.9073486328125e-06, -0.008718490600585938, -4.57763671875e-05, -2.09808349609375e-05, -0.07682991027832031, -5.7220458984375e-06, -1.33514404296875e-05, -1.1336250305175781, 0.0, -0.0003910064697265625, -1.9073486328125e-06, -0.6884050369262695, -1.1920922133867862e-06, -0.00021183464559726417, 0.0, -0.4661743640899658, -2.1457672119140625e-06], "choice_history": [55, 124, 221, 63, 103, "Excess", "Mana", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Excess", " ", "Mana", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True, hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.<UNK>()\n"}, {"score": -12.374059189090765, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"hole2": 1, "_type": "Template32", "hole0": "Buff", "hole1": "player"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "ExcessMana", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0005359649658203125, -5.7220458984375e-06, -1.4543427823809907e-05, -1.5139465176616795e-05, -0.000248291646130383, -2.09808349609375e-05, -0.00064849853515625, -2.86102294921875e-05, -0.00044536334462463856, -1.3112959095451515e-05, 0.0, -2.47955322265625e-05, -0.006285667419433594, -7.62939453125e-06, -0.0004333248652983457, -0.00011193750106031075, -7.62939453125e-06, -9.5367431640625e-06, -0.000141143798828125, -0.00015258559142239392, -1.52587890625e-05, -0.000164031982421875, -0.000102996826171875, -1.1444091796875e-05, -3.814697265625e-06, -0.00046539306640625, -4.1961669921875e-05, -3.814697265625e-06, -0.0001468658447265625, 0.0, -1.0132769602932967e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -0.0057888031005859375, -5.7220458984375e-05, -0.01570892333984375, -0.00012158675963291898, -5.567064363276586e-05, -0.0004248924378771335, -0.000301361083984375, -0.008295059204101562, 0.0, -0.0011943173594772816, -7.152555099310121e-07, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.001262664794921875, 0.0, -0.0017795562744140625, -1.1920928244535389e-07, -3.814697265625e-06, -1.52587890625e-05, -0.0001316070556640625, -2.09808349609375e-05, -0.00014340877532958984, -5.245195097813848e-06, -0.0011196136474609375, -5.006789251638111e-06, -3.953272819519043, -7.62939453125e-06, -5.91278076171875e-05, -5.7220458984375e-06, -0.0011407136917114258, -1.1920858014491387e-05, -0.0013828277587890625, -8.2254373410251e-06, -0.020719528198242188, -1.9073486328125e-06, -3.4928321838378906e-05, -2.3841855067985307e-07, -3.814697265625e-06, -3.814697265625e-05, 0.0, -2.1219222617219202e-05, 0.0, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -2.3603439331054688e-05, -9.655945177655667e-06, -2.0654869079589844, -1.9073486328125e-05, -1.1444091796875e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -4.38690185546875e-05, 0.0, -1.5616416931152344e-05, 0.0, -2.1219253540039062e-05, 0.0, -9.5367431640625e-06, -0.0001201629638671875, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -8.20159912109375e-05, 0.0, -9.5367431640625e-06, -1.9431065084063448e-05, -0.005625724792480469, -0.000186920166015625, -0.000217437744140625, -0.0003986358642578125, -1.9073486328125e-06, 0.0, -0.016735076904296875, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.0012664794921875, -8.344646857949556e-07, -5.066393714514561e-05, -2.3841855067985307e-07, -0.29138171672821045, 0.0, -0.000179290771484375, -0.026062965393066406, 0.0, -0.04005718231201172, -1.9073486328125e-06, -0.008611679077148438, -5.91278076171875e-05, -1.1444091796875e-05, -0.13274192810058594, -7.62939453125e-06, -1.71661376953125e-05, -0.49664974212646484, 0.0, -0.000457763671875, -1.9073486328125e-06, -0.41973876953125, -1.311301275563892e-06, -0.0001549719600006938, 0.0, -0.3839108943939209, -2.1457672119140625e-06, -0.003704071044921875, 0.0, -7.82012939453125e-05, -0.2887001037597656, 0.0, -1.1444091796875e-05, -0.0005970001220703125, 0.0, -7.82012939453125e-05, -2.86102294921875e-05, -0.018064498901367188, 0.0, -6.115436553955078e-05, -1.1920928244535389e-07, -1.310532569885254, -5.7220458984375e-06, -0.0028076171875, -0.31794261932373047, -0.11517143249511719, -0.0009840690763667226, -0.0009278025245293975, -0.9639123678207397, -7.2479248046875e-05, -0.5769420266151428, -1.9073486328125e-06, -0.058503150939941406, -1.9073486328125e-06, -7.62939453125e-06, -0.000762939453125, -1.1444091796875e-05, -3.814697265625e-06, -0.3444690704345703, 0.0, -0.4532938003540039, -1.6689286894688848e-06, -0.002283673034980893, -3.933906555175781e-06], "choice_history": [55, 124, 221, 63, 103, "Excess", "Mana", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Excess", " ", "Mana", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 44, 168, "Buff", "<EOS>", "player", "<EOS>", "1", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.<UNK>()\n        self.target.add_buff(Buff(player(1)))\n        player.draw()\n"}, {"score": -20.084157943725586, "model_output": {"_type": "Module", "body": []}, "score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -20.084075927734375], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 29}
{"beams": [{"score": -0.2975908335367379, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, 0.0, -7.62939453125e-06, -7.43865966796875e-05, -1.71661376953125e-05, -4.768370445162873e-07, -0.00020825113460887223, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -3.8623809814453125e-05, -4.0054277633316815e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.00014495849609375, -1.9073486328125e-06, -3.33781645167619e-05, -1.1920928244535389e-07, 0.0, -3.4332275390625e-05, 0.0, -0.00014387683768291026, -1.1920928955078125e-05, -0.0004425048828125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00040435791015625, -6.67572021484375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.0623032469302416e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000133514404296875, -0.00038909912109375, -8.0108642578125e-05, -2.384185791015625e-06, -2.1457672119140625e-06, -2.09808349609375e-05, -4.38690185546875e-05, -9.298104487243108e-06, -1.0728830375228426e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -4.2438507080078125e-05, -0.00034046173095703125, -0.07693994045257568, -2.1457672119140625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -4.6967357775429264e-05, -0.015567302703857422, 0.0, -0.0018434524536132812, -3.62396240234375e-05, -9.34600830078125e-05, -0.0045166015625, 0.0, -1.71661376953125e-05, -0.000156402587890625, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0002155303955078125, -3.62396240234375e-05, -0.0002002716064453125, -0.00122833251953125, -0.021416664123535156, -0.0002193450927734375, -0.0017261505126953125, -5.7220458984375e-06, -0.0035581588745117188, 0.0, -0.000164031982421875, -0.001079559326171875, -5.7220458984375e-06, -5.7220458984375e-05, -2.47955322265625e-05, -0.00268709659576416, -4.208087921142578e-05, -0.0013113021850585938, -8.20159912109375e-05, -0.0056858062744140625, -0.00022125244140625, -0.0008087158203125, -3.62396240234375e-05, -0.000423431396484375, -0.0009403228759765625, -0.00067138671875, -1.9073486328125e-06, -0.002056121826171875, -1.1920928244535389e-07, -0.004368901252746582, 0.0, -2.288818359375e-05, -0.007822990417480469, -2.09808349609375e-05, -0.010733604431152344, -9.34600830078125e-05, -0.000614166259765625, -3.814697265625e-06, -0.020086288452148438, 0.0, -0.001079559326171875, -1.1920928244535389e-07, -0.031090855598449707, -2.3841855067985307e-07, -0.0047149658203125, -0.000705718994140625, -0.00032138824462890625, -0.0034885406494140625, -0.0003566741943359375, 0.0, -0.0001239776611328125, -1.9073486328125e-06, -0.06220054626464844, 0.0, -0.000339508056640625, -8.96453857421875e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0018177032470703125, 0.0, -6.103515625e-05, -0.0001277923583984375, 0.0, -0.0001125335693359375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Execute", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Execute", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -3.0115893907543025, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, 0.0, -7.62939453125e-06, -7.43865966796875e-05, -1.71661376953125e-05, -4.768370445162873e-07, -0.00020825113460887223, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -3.8623809814453125e-05, -4.0054277633316815e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.00014495849609375, -1.9073486328125e-06, -3.33781645167619e-05, -1.1920928244535389e-07, 0.0, -3.4332275390625e-05, 0.0, -0.00014387683768291026, -1.1920928955078125e-05, -0.0004425048828125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00040435791015625, -6.67572021484375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.0623032469302416e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000133514404296875, -0.00038909912109375, -8.0108642578125e-05, -2.384185791015625e-06, -2.1457672119140625e-06, -2.09808349609375e-05, -4.38690185546875e-05, -9.298104487243108e-06, -1.0728830375228426e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -4.2438507080078125e-05, -0.00034046173095703125, -2.797461748123169, -5.7220458984375e-06, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, 0.0, -5.14984130859375e-05, -8.583047019783407e-06, -0.00208437442779541, -1.9073486328125e-06, -0.0034132003784179688, -3.814697265625e-05, -7.2479248046875e-05, -0.00827789306640625, 0.0, -2.09808349609375e-05, -0.0001926422119140625, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.00023651123046875, -3.62396240234375e-05, -0.0002002716064453125, -0.001190185546875, -0.021874547004699707, -0.000202178955078125, -0.00177764892578125, -5.7220458984375e-06, -0.0036153793334960938, 0.0, -0.000171661376953125, -0.0010814666748046875, -5.7220458984375e-06, -5.7220458984375e-05, -2.47955322265625e-05, -0.0025156736373901367, -3.826618194580078e-05, -0.0013322830200195312, -8.20159912109375e-05, -0.006075859069824219, -0.0002288818359375, -0.0008106231689453125, -3.62396240234375e-05, -0.0004138946533203125, -0.0009479522705078125, -0.0006580352783203125, -1.9073486328125e-06, -0.002063751220703125, -1.1920928244535389e-07, -0.004362225532531738, 0.0, -2.09808349609375e-05, -0.007828712463378906, -1.9073486328125e-05, -0.010833740234375, -9.34600830078125e-05, -0.0006103515625, -3.814697265625e-06, -0.020111083984375, 0.0, -0.0010805130004882812, -1.1920928244535389e-07, -0.031131863594055176, -2.3841855067985307e-07, -0.0047092437744140625, -0.0007038116455078125, -0.0003261566162109375, -0.0035085678100585938, -0.00035858154296875, 0.0, -0.0001239776611328125, -1.9073486328125e-06, -0.0628499984741211, 0.0, -0.000339508056640625, -8.96453857421875e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0018177032470703125, 0.0, -6.103515625e-05, -0.0001277923583984375, 0.0, -0.0001125335693359375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Execute", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Execute", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -3.2184314545312915, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, 0.0, -7.62939453125e-06, -7.43865966796875e-05, -1.71661376953125e-05, -4.768370445162873e-07, -0.00020825113460887223, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -3.8623809814453125e-05, -4.0054277633316815e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.00014495849609375, -1.9073486328125e-06, -3.33781645167619e-05, -1.1920928244535389e-07, 0.0, -3.4332275390625e-05, 0.0, -0.00014387683768291026, -1.1920928955078125e-05, -0.0004425048828125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00040435791015625, -6.67572021484375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.0623032469302416e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000133514404296875, -0.00038909912109375, -8.0108642578125e-05, -2.384185791015625e-06, -2.1457672119140625e-06, -2.09808349609375e-05, -4.38690185546875e-05, -9.298104487243108e-06, -1.0728830375228426e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -4.2438507080078125e-05, -0.00034046173095703125, -0.07693994045257568, -2.1457672119140625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -4.6967357775429264e-05, -0.015567302703857422, 0.0, -0.0018434524536132812, -3.62396240234375e-05, -9.34600830078125e-05, -0.0045166015625, 0.0, -1.71661376953125e-05, -0.000156402587890625, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0002155303955078125, -3.62396240234375e-05, -0.0002002716064453125, -0.00122833251953125, -0.021416664123535156, -0.0002193450927734375, -0.0017261505126953125, -5.7220458984375e-06, -0.0035581588745117188, 0.0, -0.000164031982421875, -0.001079559326171875, -5.7220458984375e-06, -5.7220458984375e-05, -2.47955322265625e-05, -0.00268709659576416, -4.208087921142578e-05, -0.0013113021850585938, -8.20159912109375e-05, -0.0056858062744140625, -0.00022125244140625, -0.0008087158203125, -3.62396240234375e-05, -0.000423431396484375, -0.0009403228759765625, -0.00067138671875, -1.9073486328125e-06, -0.002056121826171875, -1.1920928244535389e-07, -0.004368901252746582, 0.0, -2.288818359375e-05, -0.007822990417480469, -2.09808349609375e-05, -0.010733604431152344, -9.34600830078125e-05, -0.000614166259765625, -3.814697265625e-06, -0.020086288452148438, 0.0, -0.001079559326171875, -1.1920928244535389e-07, -0.031090855598449707, -2.3841855067985307e-07, -0.0047149658203125, -0.000705718994140625, -0.00032138824462890625, -0.0034885406494140625, -0.0003566741943359375, 0.0, -0.0001239776611328125, -1.9073486328125e-06, -2.981917381286621, -1.1920928244535389e-07, -0.00087738037109375, -0.0001468658447265625, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, 0.0, -2.288818359375e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.0023194551467895508, 0.0, -7.62939453125e-05, -0.0001392364501953125, 0.0, -0.0001049041748046875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Execute", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Execute", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -4.370153289667719, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, 0.0, -7.62939453125e-06, -7.43865966796875e-05, -1.71661376953125e-05, -4.768370445162873e-07, -0.00020825113460887223, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -3.8623809814453125e-05, -4.0054277633316815e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.00014495849609375, -1.9073486328125e-06, -3.33781645167619e-05, -1.1920928244535389e-07, 0.0, -3.4332275390625e-05, 0.0, -0.00014387683768291026, -1.1920928955078125e-05, -0.0004425048828125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00040435791015625, -6.67572021484375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.0623032469302416e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000133514404296875, -0.00038909912109375, -8.0108642578125e-05, -2.384185791015625e-06, -2.1457672119140625e-06, -2.09808349609375e-05, -4.38690185546875e-05, -9.298104487243108e-06, -1.0728830375228426e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -4.2438507080078125e-05, -0.00034046173095703125, -0.07693994045257568, -2.1457672119140625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -4.6967357775429264e-05, -0.015567302703857422, 0.0, -0.0018434524536132812, -3.62396240234375e-05, -9.34600830078125e-05, -0.0045166015625, 0.0, -1.71661376953125e-05, -0.000156402587890625, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0002155303955078125, -3.62396240234375e-05, -0.0002002716064453125, -0.00122833251953125, -4.098758697509766, -3.814697265625e-06, -0.0002193450927734375, -9.5367431640625e-06, -0.00386810302734375, 0.0, -0.0001544952392578125, -0.000766754150390625, -7.62939453125e-06, -6.67572021484375e-05, -2.09808349609375e-05, -0.0030134916305541992, -2.491474151611328e-05, -0.0011835098266601562, -7.2479248046875e-05, -0.0074462890625, -0.00028228759765625, -0.000843048095703125, -4.00543212890625e-05, -0.0003337860107421875, -0.0009708404541015625, -0.0004425048828125, -3.814697265625e-06, -0.0021514892578125, -1.1920928244535389e-07, -0.004456639289855957, 0.0, -2.47955322265625e-05, -0.0076618194580078125, -2.288818359375e-05, -0.010692596435546875, -8.96453857421875e-05, -0.000621795654296875, -3.814697265625e-06, -0.019910812377929688, 0.0, -0.0010519027709960938, -1.1920928244535389e-07, -0.030648350715637207, -2.3841855067985307e-07, -0.0050640106201171875, -0.0006771087646484375, -0.00031948089599609375, -0.004025459289550781, -0.0003299713134765625, 0.0, -0.0001220703125, -1.9073486328125e-06, -0.05722332000732422, 0.0, -0.0003452301025390625, -8.7738037109375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.001819610595703125, 0.0, -6.103515625e-05, -0.0001277923583984375, 0.0, -0.0001125335693359375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Execute", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Execute", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -4.521902185305585, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, 0.0, -7.62939453125e-06, -7.43865966796875e-05, -1.71661376953125e-05, -4.768370445162873e-07, -0.00020825113460887223, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -3.8623809814453125e-05, -4.0054277633316815e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.00014495849609375, -1.9073486328125e-06, -3.33781645167619e-05, -1.1920928244535389e-07, 0.0, -3.4332275390625e-05, 0.0, -0.00014387683768291026, -1.1920928955078125e-05, -0.0004425048828125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00040435791015625, -6.67572021484375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.0623032469302416e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000133514404296875, -0.00038909912109375, -8.0108642578125e-05, -2.384185791015625e-06, -2.1457672119140625e-06, -2.09808349609375e-05, -4.38690185546875e-05, -9.298104487243108e-06, -1.0728830375228426e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -4.2438507080078125e-05, -0.00034046173095703125, -0.07693994045257568, -2.1457672119140625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -4.6967357775429264e-05, -4.233333110809326, -9.930133091984317e-05, -0.0004291534423828125, -8.392333984375e-05, -0.0002498626708984375, -0.0026836395263671875, 0.0, -1.9073486328125e-05, -5.7220458984375e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0004482269287109375, -2.47955322265625e-05, -0.0002040863037109375, -0.0009708404541015625, -0.030098676681518555, -0.000255584716796875, -0.0011272430419921875, -7.62939453125e-06, -0.004387855529785156, 0.0, -0.000148773193359375, -0.00107574462890625, -3.814697265625e-06, -5.340576171875e-05, -2.86102294921875e-05, -0.0036510229110717773, -0.0001010894775390625, -0.0014553070068359375, -8.20159912109375e-05, -0.005191802978515625, -0.000240325927734375, -0.0008411407470703125, -3.4332275390625e-05, -0.000446319580078125, -0.000873565673828125, -0.0007038116455078125, -1.9073486328125e-06, -0.0019712448120117188, -1.1920928244535389e-07, -0.004343152046203613, 0.0, -2.288818359375e-05, -0.0077304840087890625, -2.09808349609375e-05, -0.01052093505859375, -9.1552734375e-05, -0.000614166259765625, -3.814697265625e-06, -0.020326614379882812, 0.0, -0.00106048583984375, -1.1920928244535389e-07, -0.03085911273956299, -2.3841855067985307e-07, -0.0047817230224609375, -0.0006732940673828125, -0.00031757354736328125, -0.0034046173095703125, -0.000362396240234375, 0.0, -0.0001239776611328125, -1.9073486328125e-06, -0.0626516342163086, 0.0, -0.0003414154052734375, -8.96453857421875e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0018167495727539062, 0.0, -5.91278076171875e-05, -0.0001277923583984375, 0.0, -0.00011444091796875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Execute", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Execute", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -4.71188388430275, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, 0.0, -7.62939453125e-06, -7.43865966796875e-05, -1.71661376953125e-05, -4.768370445162873e-07, -0.00020825113460887223, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -3.8623809814453125e-05, -4.0054277633316815e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.00014495849609375, -1.9073486328125e-06, -3.33781645167619e-05, -1.1920928244535389e-07, 0.0, -3.4332275390625e-05, 0.0, -0.00014387683768291026, -1.1920928955078125e-05, -0.0004425048828125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00040435791015625, -6.67572021484375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.0623032469302416e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000133514404296875, -0.00038909912109375, -8.0108642578125e-05, -2.384185791015625e-06, -2.1457672119140625e-06, -2.09808349609375e-05, -4.38690185546875e-05, -9.298104487243108e-06, -1.0728830375228426e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -4.2438507080078125e-05, -0.00034046173095703125, -0.07693994045257568, -2.1457672119140625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -4.6967357775429264e-05, -0.015567302703857422, 0.0, -0.0018434524536132812, -3.62396240234375e-05, -9.34600830078125e-05, -0.0045166015625, 0.0, -1.71661376953125e-05, -0.000156402587890625, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0002155303955078125, -3.62396240234375e-05, -0.0002002716064453125, -0.00122833251953125, -0.021416664123535156, -0.0002193450927734375, -0.0017261505126953125, -5.7220458984375e-06, -0.0035581588745117188, 0.0, -0.000164031982421875, -0.001079559326171875, -5.7220458984375e-06, -5.7220458984375e-05, -2.47955322265625e-05, -0.00268709659576416, -4.208087921142578e-05, -0.0013113021850585938, -8.20159912109375e-05, -0.0056858062744140625, -0.00022125244140625, -0.0008087158203125, -3.62396240234375e-05, -0.000423431396484375, -0.0009403228759765625, -0.00067138671875, -1.9073486328125e-06, -0.002056121826171875, -1.1920928244535389e-07, -0.004368901252746582, 0.0, -2.288818359375e-05, -0.007822990417480469, -2.09808349609375e-05, -0.010733604431152344, -9.34600830078125e-05, -0.000614166259765625, -3.814697265625e-06, -0.020086288452148438, 0.0, -0.001079559326171875, -1.1920928244535389e-07, -4.399155616760254, -1.1920928244535389e-07, -0.03265380859375, -0.00107574462890625, -5.14984130859375e-05, -0.0008563995361328125, -0.0032749176025390625, 0.0, -0.000225067138671875, 0.0, -0.08020973205566406, 0.0, -0.0002346038818359375, -9.5367431640625e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0017099380493164062, 0.0, -6.29425048828125e-05, -0.0001239776611328125, 0.0, -0.0001163482666015625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Execute", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Execute", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "<UNK>", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.<UNK>() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.229619603983501, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "target", "_type": "Name"}}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, 0.0, -7.62939453125e-06, -7.43865966796875e-05, -1.71661376953125e-05, -4.768370445162873e-07, -0.00020825113460887223, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -3.8623809814453125e-05, -4.0054277633316815e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.00014495849609375, -1.9073486328125e-06, -3.33781645167619e-05, -1.1920928244535389e-07, 0.0, -3.4332275390625e-05, 0.0, -0.00014387683768291026, -1.1920928955078125e-05, -0.0004425048828125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00040435791015625, -6.67572021484375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.0623032469302416e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000133514404296875, -0.00038909912109375, -8.0108642578125e-05, -2.384185791015625e-06, -2.1457672119140625e-06, -2.09808349609375e-05, -4.38690185546875e-05, -9.298104487243108e-06, -1.0728830375228426e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -4.2438507080078125e-05, -0.00034046173095703125, -0.07693994045257568, -2.1457672119140625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -4.6967357775429264e-05, -0.015567302703857422, 0.0, -0.0018434524536132812, -3.62396240234375e-05, -9.34600830078125e-05, -0.0045166015625, 0.0, -1.71661376953125e-05, -0.000156402587890625, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0002155303955078125, -3.62396240234375e-05, -0.0002002716064453125, -0.00122833251953125, -0.021416664123535156, -0.0002193450927734375, -0.0017261505126953125, -5.7220458984375e-06, -0.0035581588745117188, 0.0, -0.000164031982421875, -0.001079559326171875, -5.7220458984375e-06, -5.7220458984375e-05, -2.47955322265625e-05, -0.00268709659576416, -4.208087921142578e-05, -0.0013113021850585938, -8.20159912109375e-05, -0.0056858062744140625, -0.00022125244140625, -0.0008087158203125, -3.62396240234375e-05, -0.000423431396484375, -0.0009403228759765625, -0.00067138671875, -1.9073486328125e-06, -0.002056121826171875, -1.1920928244535389e-07, -0.004368901252746582, 0.0, -2.288818359375e-05, -0.007822990417480469, -2.09808349609375e-05, -0.010733604431152344, -9.34600830078125e-05, -0.000614166259765625, -3.814697265625e-06, -3.9250974655151367, -3.814697265625e-05, -0.0002880096435546875, 0.0, -0.8466997146606445, -4.0531158447265625e-06, -0.13961994647979736, -1.1920928244535389e-07, -0.11412465572357178, -2.3841855067985307e-07, -0.010770797729492188, -0.00431060791015625, -0.0005483627319335938, -0.000812530517578125, -0.0033416748046875, 0.0, -0.0003070831298828125, -1.1920928244535389e-07, -0.010221481323242188, 0.0, -0.00034332275390625, -0.0001678466796875, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -4.1961669921875e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.0017310380935668945, 0.0, -5.91278076171875e-05, -0.0001354217529296875, 0.0, -0.0001163482666015625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Execute", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Execute", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 11, 94, 19, 125, "target", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.target.calculate_max_health() and\n            target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.519899707667008, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, 0.0, -7.62939453125e-06, -7.43865966796875e-05, -1.71661376953125e-05, -4.768370445162873e-07, -0.00020825113460887223, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -3.8623809814453125e-05, -4.0054277633316815e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.00014495849609375, -1.9073486328125e-06, -3.33781645167619e-05, -1.1920928244535389e-07, 0.0, -3.4332275390625e-05, 0.0, -0.00014387683768291026, -1.1920928955078125e-05, -0.0004425048828125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00040435791015625, -6.67572021484375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.0623032469302416e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000133514404296875, -0.00038909912109375, -8.0108642578125e-05, -2.384185791015625e-06, -2.1457672119140625e-06, -2.09808349609375e-05, -4.38690185546875e-05, -9.298104487243108e-06, -1.0728830375228426e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -4.2438507080078125e-05, -0.00034046173095703125, -0.07693994045257568, -2.1457672119140625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -4.6967357775429264e-05, -0.015567302703857422, 0.0, -0.0018434524536132812, -3.62396240234375e-05, -9.34600830078125e-05, -0.0045166015625, 0.0, -1.71661376953125e-05, -0.000156402587890625, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0002155303955078125, -3.62396240234375e-05, -0.0002002716064453125, -0.00122833251953125, -0.021416664123535156, -0.0002193450927734375, -0.0017261505126953125, -5.7220458984375e-06, -0.0035581588745117188, 0.0, -0.000164031982421875, -0.001079559326171875, -5.7220458984375e-06, -5.7220458984375e-05, -2.47955322265625e-05, -0.00268709659576416, -4.208087921142578e-05, -0.0013113021850585938, -8.20159912109375e-05, -0.0056858062744140625, -0.00022125244140625, -0.0008087158203125, -3.62396240234375e-05, -0.000423431396484375, -0.0009403228759765625, -0.00067138671875, -1.9073486328125e-06, -0.002056121826171875, -1.1920928244535389e-07, -0.004368901252746582, 0.0, -2.288818359375e-05, -0.007822990417480469, -2.09808349609375e-05, -0.010733604431152344, -9.34600830078125e-05, -0.000614166259765625, -3.814697265625e-06, -0.020086288452148438, 0.0, -0.001079559326171875, -1.1920928244535389e-07, -5.202012062072754, -1.1920928244535389e-07, -0.0066070556640625, -0.0011310577392578125, -0.000232696533203125, -0.0016002655029296875, -0.0019435882568359375, 0.0, -0.000152587890625, 0.0, -0.11168861389160156, 0.0, -0.000316619873046875, -9.5367431640625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0017747879028320312, 0.0, -6.103515625e-05, -0.000125885009765625, 0.0, -0.0001163482666015625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Execute", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Execute", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.spell_targetable() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.613005381456965, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, 0.0, -7.62939453125e-06, -7.43865966796875e-05, -1.71661376953125e-05, -4.768370445162873e-07, -0.00020825113460887223, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -3.8623809814453125e-05, -4.0054277633316815e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.00014495849609375, -1.9073486328125e-06, -3.33781645167619e-05, -1.1920928244535389e-07, 0.0, -3.4332275390625e-05, 0.0, -0.00014387683768291026, -1.1920928955078125e-05, -0.0004425048828125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00040435791015625, -6.67572021484375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.0623032469302416e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000133514404296875, -0.00038909912109375, -8.0108642578125e-05, -2.384185791015625e-06, -2.1457672119140625e-06, -2.09808349609375e-05, -4.38690185546875e-05, -9.298104487243108e-06, -1.0728830375228426e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -4.2438507080078125e-05, -0.00034046173095703125, -0.07693994045257568, -2.1457672119140625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -4.6967357775429264e-05, -0.015567302703857422, 0.0, -0.0018434524536132812, -3.62396240234375e-05, -9.34600830078125e-05, -0.0045166015625, 0.0, -1.71661376953125e-05, -0.000156402587890625, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0002155303955078125, -3.62396240234375e-05, -0.0002002716064453125, -0.00122833251953125, -0.021416664123535156, -0.0002193450927734375, -0.0017261505126953125, -5.7220458984375e-06, -0.0035581588745117188, 0.0, -0.000164031982421875, -0.001079559326171875, -5.7220458984375e-06, -5.7220458984375e-05, -2.47955322265625e-05, -0.00268709659576416, -4.208087921142578e-05, -0.0013113021850585938, -8.20159912109375e-05, -0.0056858062744140625, -0.00022125244140625, -0.0008087158203125, -3.62396240234375e-05, -0.000423431396484375, -0.0009403228759765625, -0.00067138671875, -1.9073486328125e-06, -0.002056121826171875, -1.1920928244535389e-07, -0.004368901252746582, 0.0, -2.288818359375e-05, -0.007822990417480469, -2.09808349609375e-05, -0.010733604431152344, -9.34600830078125e-05, -0.000614166259765625, -3.814697265625e-06, -3.9250974655151367, -3.814697265625e-05, -0.0002880096435546875, 0.0, -0.993743896484375, -0.00023651123046875, -0.3381967544555664, -2.47955322265625e-05, -0.0664360523223877, -0.000125885009765625, -0.06457710266113281, -0.002399444580078125, -4.57763671875e-05, -0.0001811981201171875, -0.008161544799804688, 0.0, -0.0006456375122070312, -2.3841855067985307e-07, -0.03973388671875, 0.0, -0.0001430511474609375, -0.00012969970703125, -9.5367431640625e-06, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -3.814697265625e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.0016117095947265625, 0.0, -7.05718994140625e-05, -0.0001316070556640625, 0.0, -0.0001087188720703125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Execute", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Execute", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != hearthbreaker.targeting.\n            find_enemy_minion_spell_target() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.823135953775996, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "Or"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, 0.0, -7.62939453125e-06, -7.43865966796875e-05, -1.71661376953125e-05, -4.768370445162873e-07, -0.00020825113460887223, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -3.8623809814453125e-05, -4.0054277633316815e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.00014495849609375, -1.9073486328125e-06, -3.33781645167619e-05, -1.1920928244535389e-07, 0.0, -3.4332275390625e-05, 0.0, -0.00014387683768291026, -1.1920928955078125e-05, -0.0004425048828125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00040435791015625, -6.67572021484375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.0623032469302416e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000133514404296875, -0.00038909912109375, -8.0108642578125e-05, -2.384185791015625e-06, -2.1457672119140625e-06, -2.09808349609375e-05, -4.38690185546875e-05, -9.298104487243108e-06, -1.0728830375228426e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -4.2438507080078125e-05, -0.00034046173095703125, -0.07693994045257568, -2.1457672119140625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -4.6967357775429264e-05, -0.015567302703857422, 0.0, -0.0018434524536132812, -3.62396240234375e-05, -9.34600830078125e-05, -0.0045166015625, 0.0, -1.71661376953125e-05, -0.000156402587890625, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0002155303955078125, -3.62396240234375e-05, -0.0002002716064453125, -0.00122833251953125, -0.021416664123535156, -0.0002193450927734375, -0.0017261505126953125, -5.7220458984375e-06, -0.0035581588745117188, 0.0, -0.000164031982421875, -0.001079559326171875, -5.7220458984375e-06, -5.7220458984375e-05, -2.47955322265625e-05, -0.00268709659576416, -4.208087921142578e-05, -0.0013113021850585938, -8.20159912109375e-05, -5.492630958557129, -0.0037784576416015625, -0.0014247894287109375, -0.0001316070556640625, -0.0003719329833984375, -0.00103759765625, -0.0013713836669921875, -3.814697265625e-06, -0.0036153793334960938, -1.1920928244535389e-07, -0.004907727241516113, 0.0, -2.47955322265625e-05, -0.00901031494140625, -1.9073486328125e-05, -0.015149116516113281, -0.0001087188720703125, -0.000606536865234375, -3.814697265625e-06, -0.022932052612304688, 0.0, -0.0010738372802734375, -1.1920928244535389e-07, -0.0351792573928833, -2.3841855067985307e-07, -0.009777069091796875, -0.000522613525390625, -0.0001926422119140625, -0.0027265548706054688, -0.0004787445068359375, 0.0, -0.00012969970703125, -1.9073486328125e-06, -0.07707023620605469, 0.0, -0.000324249267578125, -9.34600830078125e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0017881393432617188, 0.0, -5.91278076171875e-05, -0.0001277923583984375, 0.0, -0.00011444091796875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Execute", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Execute", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 1, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() or target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.921480876922196, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, 0.0, -7.62939453125e-06, -7.43865966796875e-05, -1.71661376953125e-05, -4.768370445162873e-07, -0.00020825113460887223, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -3.8623809814453125e-05, -4.0054277633316815e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.00014495849609375, -1.9073486328125e-06, -3.33781645167619e-05, -1.1920928244535389e-07, 0.0, -3.4332275390625e-05, 0.0, -0.00014387683768291026, -1.1920928955078125e-05, -0.0004425048828125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00040435791015625, -6.67572021484375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.0623032469302416e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000133514404296875, -0.00038909912109375, -8.0108642578125e-05, -2.384185791015625e-06, -2.1457672119140625e-06, -2.09808349609375e-05, -4.38690185546875e-05, -9.298104487243108e-06, -1.0728830375228426e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -4.2438507080078125e-05, -0.00034046173095703125, -2.797461748123169, -5.7220458984375e-06, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, 0.0, -5.14984130859375e-05, -8.583047019783407e-06, -0.00208437442779541, -1.9073486328125e-06, -0.0034132003784179688, -3.814697265625e-05, -7.2479248046875e-05, -0.00827789306640625, 0.0, -2.09808349609375e-05, -0.0001926422119140625, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.00023651123046875, -3.62396240234375e-05, -0.0002002716064453125, -0.001190185546875, -0.021874547004699707, -0.000202178955078125, -0.00177764892578125, -5.7220458984375e-06, -0.0036153793334960938, 0.0, -0.000171661376953125, -0.0010814666748046875, -5.7220458984375e-06, -5.7220458984375e-05, -2.47955322265625e-05, -0.0025156736373901367, -3.826618194580078e-05, -0.0013322830200195312, -8.20159912109375e-05, -0.006075859069824219, -0.0002288818359375, -0.0008106231689453125, -3.62396240234375e-05, -0.0004138946533203125, -0.0009479522705078125, -0.0006580352783203125, -1.9073486328125e-06, -0.002063751220703125, -1.1920928244535389e-07, -0.004362225532531738, 0.0, -2.09808349609375e-05, -0.007828712463378906, -1.9073486328125e-05, -0.010833740234375, -9.34600830078125e-05, -0.0006103515625, -3.814697265625e-06, -0.020111083984375, 0.0, -0.0010805130004882812, -1.1920928244535389e-07, -0.031131863594055176, -2.3841855067985307e-07, -0.0047092437744140625, -0.0007038116455078125, -0.0003261566162109375, -0.0035085678100585938, -0.00035858154296875, 0.0, -0.0001239776611328125, -1.9073486328125e-06, -2.9716176986694336, -1.1920928244535389e-07, -0.0008754730224609375, -0.0001468658447265625, -1.9073486328125e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -2.288818359375e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.0023194551467895508, 0.0, -7.62939453125e-05, -0.0001392364501953125, 0.0, -0.0001049041748046875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Execute", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Execute", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -5.923405509821528, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "filter_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, 0.0, -7.62939453125e-06, -7.43865966796875e-05, -1.71661376953125e-05, -4.768370445162873e-07, -0.00020825113460887223, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -3.8623809814453125e-05, -4.0054277633316815e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.00014495849609375, -1.9073486328125e-06, -3.33781645167619e-05, -1.1920928244535389e-07, 0.0, -3.4332275390625e-05, 0.0, -0.00014387683768291026, -1.1920928955078125e-05, -0.0004425048828125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00040435791015625, -6.67572021484375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.0623032469302416e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000133514404296875, -0.00038909912109375, -8.0108642578125e-05, -2.384185791015625e-06, -2.1457672119140625e-06, -2.09808349609375e-05, -4.38690185546875e-05, -9.298104487243108e-06, -1.0728830375228426e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -4.2438507080078125e-05, -0.00034046173095703125, -0.07693994045257568, -2.1457672119140625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -4.6967357775429264e-05, -0.015567302703857422, 0.0, -0.0018434524536132812, -3.62396240234375e-05, -9.34600830078125e-05, -5.560238838195801, 0.0, -0.02948760986328125, -3.4332275390625e-05, -0.0003795623779296875, -2.6702880859375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0249786376953125, -2.86102294921875e-05, -0.0002956390380859375, -0.000820159912109375, -0.04259896278381348, -0.000217437744140625, -0.0052471160888671875, -1.33514404296875e-05, -0.0026445388793945312, 0.0, -0.000148773193359375, -0.001129150390625, -5.7220458984375e-06, -5.53131103515625e-05, -2.288818359375e-05, -0.003545403480529785, -5.733966827392578e-05, -0.0012226104736328125, -7.82012939453125e-05, -0.005661964416503906, -0.0001811981201171875, -0.00077056884765625, -3.62396240234375e-05, -0.0004940032958984375, -0.000885009765625, -0.0007476806640625, -1.9073486328125e-06, -0.002086639404296875, -1.1920928244535389e-07, -0.004387021064758301, 0.0, -2.288818359375e-05, -0.007863044738769531, -2.09808349609375e-05, -0.010707855224609375, -9.34600830078125e-05, -0.0006103515625, -3.814697265625e-06, -0.0206451416015625, 0.0, -0.0010595321655273438, -1.1920928244535389e-07, -0.030539631843566895, -2.3841855067985307e-07, -0.0049076080322265625, -0.000732421875, -0.00031375885009765625, -0.0034456253051757812, -0.0003337860107421875, 0.0, -0.0001277923583984375, -1.9073486328125e-06, -0.05327892303466797, 0.0, -0.0003528594970703125, -8.7738037109375e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0018224716186523438, 0.0, -6.103515625e-05, -0.0001277923583984375, 0.0, -0.0001125335693359375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Execute", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Execute", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "filter_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, filter_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -6.046229344240636, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"values": [{"comparators": [{"comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"id": "target", "_type": "Name"}}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}}}], "_type": "BoolOp", "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Execute", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, 0.0, -7.62939453125e-06, -7.43865966796875e-05, -1.71661376953125e-05, -4.768370445162873e-07, -0.00020825113460887223, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -3.8623809814453125e-05, -4.0054277633316815e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.00014495849609375, -1.9073486328125e-06, -3.33781645167619e-05, -1.1920928244535389e-07, 0.0, -3.4332275390625e-05, 0.0, -0.00014387683768291026, -1.1920928955078125e-05, -0.0004425048828125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00040435791015625, -6.67572021484375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.0623032469302416e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000133514404296875, -0.00038909912109375, -8.0108642578125e-05, -2.384185791015625e-06, -2.1457672119140625e-06, -2.09808349609375e-05, -4.38690185546875e-05, -9.298104487243108e-06, -1.0728830375228426e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -4.2438507080078125e-05, -0.00034046173095703125, -0.07693994045257568, -2.1457672119140625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -4.6967357775429264e-05, -0.015567302703857422, 0.0, -0.0018434524536132812, -3.62396240234375e-05, -9.34600830078125e-05, -0.0045166015625, 0.0, -1.71661376953125e-05, -0.000156402587890625, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0002155303955078125, -3.62396240234375e-05, -0.0002002716064453125, -0.00122833251953125, -0.021416664123535156, -0.0002193450927734375, -0.0017261505126953125, -5.7220458984375e-06, -0.0035581588745117188, 0.0, -0.000164031982421875, -0.001079559326171875, -5.7220458984375e-06, -5.7220458984375e-05, -2.47955322265625e-05, -0.00268709659576416, -4.208087921142578e-05, -0.0013113021850585938, -8.20159912109375e-05, -0.0056858062744140625, -0.00022125244140625, -0.0008087158203125, -3.62396240234375e-05, -0.000423431396484375, -0.0009403228759765625, -0.00067138671875, -1.9073486328125e-06, -0.002056121826171875, -1.1920928244535389e-07, -0.004368901252746582, 0.0, -2.288818359375e-05, -0.007822990417480469, -2.09808349609375e-05, -5.163259029388428, -0.0026655197143554688, -0.0021114349365234375, 0.0, -0.0065479278564453125, 0.0, -0.22663593292236328, 0.0, -0.00011837482452392578, 0.0, -0.00102996826171875, -0.1773548126220703, -9.34600830078125e-05, -0.013840675354003906, -0.0004425048828125, -0.0001811981201171875, -1.9073486328125e-06, -0.10122871398925781, 0.0, -0.0016622543334960938, -4.768370445162873e-07, -0.03732705116271973, -3.576278118089249e-07, -0.004451751708984375, -0.0012226104736328125, -0.000240325927734375, -0.0020723342895507812, -0.0011959075927734375, 0.0, -0.0001659393310546875, 0.0, -0.14044952392578125, 0.0, -0.0003204345703125, -9.5367431640625e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -2.6702880859375e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.0017871856689453125, 0.0, -6.103515625e-05, -0.000125885009765625, 0.0, -0.0001125335693359375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Execute", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Execute", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 33, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != (self.target != target.calculate_max_health()) and\n            target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -17.438491821289062, "model_output": {"_type": "Module", "body": [{"_type": "Break"}]}, "score_history": [-9.5367431640625e-06, 0.0, -7.62939453125e-06, -17.438474655151367], "choice_history": [55, 124, 221, 62], "inferred_code": "break\n"}, {"score": -22.187225341796875, "model_output": {"_type": "Module", "body": []}, "score_history": [-9.5367431640625e-06, 0.0, -22.18721580505371], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 30}
{"beams": [{"score": -0.8698770082344254, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Fan of Knives", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FanOfKnives", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.09808349609375e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000148773193359375, -0.00011324241495458409, -0.00011038715456379578, -0.009238339960575104, -0.1179867684841156, -9.1552734375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -9.357929229736328e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001316070556640625, -0.1069650650024414, -0.000286102294921875, -1.0728830375228426e-06, -0.0001250481145689264, -0.0005615949630737305, -0.0003800392150878906, -0.015152335166931152, -0.00183868408203125, -4.649161837733118e-06, -5.841255187988281e-06, -0.4935673475265503, -1.71661376953125e-05, -0.000213623046875, 0.0, -1.4424319488171022e-05, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -4.0531158447265625e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, 0.0, -0.06266593933105469, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.1563293810468167e-05, 0.0, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.000148773193359375, -1.52587890625e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.437291176553117e-06, -0.00376129150390625, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -0.000554203987121582, -5.245195097813848e-06, -0.00019073486328125, -0.010143280029296875, -0.0001010894775390625, 0.0, -0.00098419189453125, 0.0, -0.00016021728515625, -9.536738616588991e-07, -0.00026345252990722656, 0.0, -8.96453857421875e-05, -2.09808349609375e-05, 0.0, -0.00042724609375, -3.814697265625e-05, -0.0007038116455078125, 0.0, -0.00042724609375, -2.5033950805664062e-05, -0.00319063663482666, 0.0, -7.665156590519473e-05, 0.0, -0.000148773193359375, -2.09808349609375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.0001926422119140625, -0.002246856689453125, -1.9073486328125e-06, -0.0007420778274536133, -3.3378546504536644e-06, -0.000640869140625, 0.0, -1.9073486328125e-06, -0.00131988525390625, -0.0001983642578125, -0.001528948312625289, -2.6822061045095325e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.00020313262939453125, 0.0, -0.01830577850341797, -1.9073486328125e-06, -0.0004329681396484375, -0.0042705535888671875, -2.288818359375e-05, -2.86102294921875e-05, -0.0013294219970703125, -2.47955322265625e-05, -0.0024576187133789062, -4.768370445162873e-07, -0.003943085670471191, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fan", "Of", "Knives", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -1.9895186699629903, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template4", "hole0": "Fan of Knives", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FanOfKnives", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.09808349609375e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000148773193359375, -0.00011324241495458409, -0.00011038715456379578, -0.009238339960575104, -0.1179867684841156, -9.1552734375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -9.357929229736328e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001316070556640625, -0.1069650650024414, -0.000286102294921875, -1.0728830375228426e-06, -0.0001250481145689264, -0.0005615949630737305, -0.0003800392150878906, -0.015152335166931152, -0.00183868408203125, -4.649161837733118e-06, -5.841255187988281e-06, -1.6199167966842651, -8.22540732769994e-06, -0.0003261566162109375, 0.0, -2.884864625229966e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -0.05363178253173828, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.1682502190524247e-05, 0.0, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.0001430511474609375, -1.52587890625e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.198873961693607e-06, -0.0038013458251953125, -1.9073486328125e-05, -4.76837158203125e-05, 0.0, -0.0005322694778442383, -5.483612312673358e-06, -0.0001926422119140625, -0.010150909423828125, -0.000102996826171875, 0.0, -0.00098419189453125, 0.0, -0.00016021728515625, -9.536738616588991e-07, -0.00026535987854003906, 0.0, -8.96453857421875e-05, -2.09808349609375e-05, 0.0, -0.0004253387451171875, -3.814697265625e-05, -0.0006999969482421875, 0.0, -0.0004291534423828125, -2.5033950805664062e-05, -0.003186821937561035, 0.0, -7.665156590519473e-05, 0.0, -0.000148773193359375, -2.09808349609375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.000194549560546875, -0.0022182464599609375, -1.9073486328125e-06, -0.0007382631301879883, -3.3378546504536644e-06, -0.000637054443359375, 0.0, -1.9073486328125e-06, -0.0013141632080078125, -0.0001983642578125, -0.0015285908011719584, -2.6822061045095325e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.00020313262939453125, 0.0, -0.02064800262451172, -1.9073486328125e-06, -0.00045013427734375, -0.0041942596435546875, -2.288818359375e-05, -2.86102294921875e-05, -0.0013580322265625, -2.6702880859375e-05, -0.002407073974609375, -4.768370445162873e-07, -0.003918290138244629, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fan", "Of", "Knives", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -2.3300426280777558, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Fan of Knives", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FanOfKnives", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.09808349609375e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000148773193359375, -0.00011324241495458409, -0.00011038715456379578, -0.009238339960575104, -0.1179867684841156, -9.1552734375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -9.357929229736328e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001316070556640625, -0.1069650650024414, -0.000286102294921875, -1.0728830375228426e-06, -0.0001250481145689264, -0.0005615949630737305, -0.0003800392150878906, -0.015152335166931152, -0.00183868408203125, -4.649161837733118e-06, -5.841255187988281e-06, -1.9611843824386597, -1.1920928244535389e-07, -0.00019073486328125, 0.0, -1.7881382518680766e-05, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -4.0531158447265625e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -0.054488182067871094, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -9.894361937767826e-06, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.0001430511474609375, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.198873961693607e-06, -0.003814697265625, -2.09808349609375e-05, -4.76837158203125e-05, 0.0, -0.0005322694778442383, -5.245195097813848e-06, -0.00019073486328125, -0.010096549987792969, -0.000102996826171875, 0.0, -0.000965118408203125, 0.0, -0.00016021728515625, -9.536738616588991e-07, -0.00026345252990722656, 0.0, -8.96453857421875e-05, -2.09808349609375e-05, 0.0, -0.0004253387451171875, -3.814697265625e-05, -0.0007038116455078125, 0.0, -0.00042724609375, -2.5033950805664062e-05, -0.003193497657775879, 0.0, -7.665156590519473e-05, 0.0, -0.0001506805419921875, -2.09808349609375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.0001926422119140625, -0.002246856689453125, -1.9073486328125e-06, -0.0007392168045043945, -3.3378546504536644e-06, -0.0006389617919921875, 0.0, -1.9073486328125e-06, -0.00131988525390625, -0.0001983642578125, -0.0015288291033357382, -2.6822061045095325e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.00020313262939453125, 0.0, -0.019174575805664062, -1.9073486328125e-06, -0.0004596710205078125, -0.0042095184326171875, -2.288818359375e-05, -2.86102294921875e-05, -0.0013446807861328125, -2.47955322265625e-05, -0.0024471282958984375, -4.768370445162873e-07, -0.003920197486877441, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fan", "Of", "Knives", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -2.895249689531738, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Fan of of Knives", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FanOfKnivesOfKnives", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.09808349609375e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000148773193359375, -0.00011324241495458409, -0.00011038715456379578, -0.009238339960575104, -2.255059242248535, -0.2113368809223175, -3.0398188755498268e-05, -5.53131103515625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001354217529296875, -1.52587890625e-05, -9.5367431640625e-06, -0.00012969970703125, -0.13124370574951172, -0.000331878662109375, -8.344646857949556e-07, -0.00016915312153287232, -0.0015915632247924805, -0.00045287609100341797, -0.0006154775619506836, -0.001250147819519043, -6.508817750727758e-05, -7.2479248046875e-05, -1.454353241570061e-05, -2.0265579223632812e-06, -0.16326498985290527, -9.5367431640625e-06, -0.000217437744140625, 0.0, -1.4901155736879446e-05, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -6.67572021484375e-05, 0.0, -0.05955791473388672, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -1.1444084520917386e-05, 0.0, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.0001506805419921875, -1.52587890625e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.318082796497038e-06, -0.0037250518798828125, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -0.0005561113357543945, -5.125986263010418e-06, -0.00019073486328125, -0.010128974914550781, -0.0001010894775390625, 0.0, -0.0009822845458984375, 0.0, -0.00016021728515625, -9.536738616588991e-07, -0.00026154518127441406, 0.0, -8.96453857421875e-05, -2.09808349609375e-05, 0.0, -0.00042724609375, -3.814697265625e-05, -0.0007038116455078125, 0.0, -0.00042724609375, -2.5033950805664062e-05, -0.00319063663482666, 0.0, -7.665156590519473e-05, 0.0, -0.000148773193359375, -2.09808349609375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.0001926422119140625, -0.00225067138671875, -1.9073486328125e-06, -0.0007420778274536133, -3.3378546504536644e-06, -0.000640869140625, 0.0, -1.9073486328125e-06, -0.00131988525390625, -0.0001983642578125, -0.001528948312625289, -2.6822061045095325e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.00020313262939453125, 0.0, -0.018184661865234375, -1.9073486328125e-06, -0.0004329681396484375, -0.0042781829833984375, -2.288818359375e-05, -2.86102294921875e-05, -0.0013275146484375, -2.47955322265625e-05, -0.0024614334106445312, -4.768370445162873e-07, -0.003942131996154785, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fan", "Of", "Knives", "Of", "Knives", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Fan", " ", "of", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class FanOfKnivesOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -2.9870852305283506, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FanOfKnives", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.09808349609375e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000148773193359375, -0.00011324241495458409, -0.00011038715456379578, -0.009238339960575104, -0.1179867684841156, -9.1552734375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -9.357929229736328e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001316070556640625, -2.354556083679199, -6.866455078125e-05, -0.00021145492792129517, -0.00014448165893554688, -8.213520050048828e-05, -0.000484466552734375, -1.990794771700166e-05, -1.9073486328125e-06, -1.8715771147981286e-05, 0.0, -0.31708240509033203, 0.0, -0.00048363208770751953, 0.0, -0.000209808349609375, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.4332275390625e-05, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.009874343872070312, -6.866455078125e-05, -0.06505870819091797, -1.33514404296875e-05, -4.458427429199219e-05, 0.0, -2.6702880859375e-05, -4.38690185546875e-05, -7.62939453125e-06, -6.079673767089844e-06, 0.0, 0.0, -1.71661376953125e-05, 0.0, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.04811859130859375, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -9.894361937767826e-06, 0.0, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -0.0001373291015625, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -5.841247457283316e-06, -0.0047893524169921875, -1.9073486328125e-05, -4.9591064453125e-05, 0.0, -0.000580906867980957, -5.245195097813848e-06, -0.0001811981201171875, -0.009896278381347656, -0.0001068115234375, 0.0, -0.0008983612060546875, 0.0, -0.0001583099365234375, -9.536738616588991e-07, -0.00026345252990722656, 0.0, -8.96453857421875e-05, -2.09808349609375e-05, 0.0, -0.00042724609375, -3.814697265625e-05, -0.000701904296875, 0.0, -0.0004253387451171875, -2.5033950805664062e-05, -0.0032068490982055664, 0.0, -7.665156590519473e-05, 0.0, -0.0001430511474609375, -2.09808349609375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.0002002716064453125, -0.0021495819091796875, -1.9073486328125e-06, -0.0007439851760864258, -3.3378546504536644e-06, -0.0006351470947265625, 0.0, -1.9073486328125e-06, -0.0013065338134765625, -0.0001983642578125, -0.0015264450339600444, -2.6822061045095325e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.00020313262939453125, 0.0, -0.0199737548828125, -1.9073486328125e-06, -0.0005016326904296875, -0.0040569305419921875, -2.288818359375e-05, -3.0517578125e-05, -0.0013751983642578125, -2.6702880859375e-05, -0.0024671554565429688, -4.768370445162873e-07, -0.0038561818655580282, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fan", "Of", "Knives", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -4.123050717151948, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARLOCK", "_type": "Template4", "hole0": "Fan of Knives", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FanOfKnives", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.09808349609375e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000148773193359375, -0.00011324241495458409, -0.00011038715456379578, -0.009238339960575104, -0.1179867684841156, -9.1552734375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -9.357929229736328e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001316070556640625, -0.1069650650024414, -0.000286102294921875, -1.0728830375228426e-06, -0.0001250481145689264, -0.0005615949630737305, -0.0003800392150878906, -0.015152335166931152, -0.00183868408203125, -4.649161837733118e-06, -5.841255187988281e-06, -3.7487456798553467, -1.1920928244535389e-07, -0.0001201629638671875, 0.0, -1.931190308823716e-05, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -5.340576171875e-05, 0.0, -0.05884742736816406, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.3589850823336747e-05, 0.0, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.0001468658447265625, -1.52587890625e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.198873961693607e-06, -0.0035295486450195312, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -0.0005437135696411133, -5.483612312673358e-06, -0.0001926422119140625, -0.010003089904785156, -0.0001049041748046875, 0.0, -0.0009899139404296875, 0.0, -0.0001621246337890625, -9.536738616588991e-07, -0.00026535987854003906, 0.0, -8.96453857421875e-05, -2.09808349609375e-05, 0.0, -0.0004253387451171875, -3.814697265625e-05, -0.0006999969482421875, 0.0, -0.0004291534423828125, -2.5033950805664062e-05, -0.0031887292861938477, 0.0, -7.665156590519473e-05, 0.0, -0.0001506805419921875, -2.09808349609375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.000194549560546875, -0.0022258758544921875, -1.9073486328125e-06, -0.0007382631301879883, -3.3378546504536644e-06, -0.0006389617919921875, 0.0, -1.9073486328125e-06, -0.001316070556640625, -0.0001983642578125, -0.0015287098940461874, -2.6822061045095325e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.00020313262939453125, 0.0, -0.02074909210205078, -1.9073486328125e-06, -0.00045013427734375, -0.0041904449462890625, -2.288818359375e-05, -2.86102294921875e-05, -0.0013523101806640625, -2.6702880859375e-05, -0.002407073974609375, -4.768370445162873e-07, -0.00391542911529541, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fan", "Of", "Knives", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "WARLOCK", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -4.241765285944041, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Fan of Knives", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "extend", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "current_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FanOfKnives", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.09808349609375e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000148773193359375, -0.00011324241495458409, -0.00011038715456379578, -0.009238339960575104, -0.1179867684841156, -9.1552734375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -9.357929229736328e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001316070556640625, -0.1069650650024414, -0.000286102294921875, -1.0728830375228426e-06, -0.0001250481145689264, -0.0005615949630737305, -0.0003800392150878906, -0.015152335166931152, -0.00183868408203125, -4.649161837733118e-06, -5.841255187988281e-06, -0.4935673475265503, -1.71661376953125e-05, -0.000213623046875, 0.0, -1.4424319488171022e-05, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -4.0531158447265625e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, 0.0, -3.0900096893310547, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -5.7220440794480965e-06, 0.0, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -0.0001163482666015625, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -7.152543730626348e-06, -0.020252227783203125, -3.24249267578125e-05, -4.57763671875e-05, -0.0001201629638671875, -1.52587890625e-05, -0.04416847229003906, -1.9073486328125e-06, -0.0001163482666015625, -1.52587890625e-05, -2.86102294921875e-05, 0.0, -0.000171661376953125, 0.0, -0.0001163482666015625, -4.291525328881107e-06, -0.0014935731887817383, -1.9073486328125e-06, -0.0001773834228515625, -1.71661376953125e-05, -1.9073486328125e-06, -0.000171661376953125, -3.4332275390625e-05, -0.0002422332763671875, 0.0, -0.0002574920654296875, -3.063678741455078e-05, -0.00288236141204834, 0.0, -7.390975224552676e-05, 0.0, -0.003147125244140625, -0.0004596710205078125, -1.71661376953125e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.52587890625e-05, -0.029649734497070312, -1.9073486328125e-06, -0.00136566162109375, -5.7220458984375e-06, -0.0048370361328125, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.12869644165039062, -0.0001163482666015625, -0.0003223419189453125, -1.9073486328125e-06, -0.0003204345703125, -7.11679458618164e-05, -0.05273139476776123, 0.0, -0.0002340078353881836, 0.0, -0.0069751739501953125, -8.20159912109375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0009355545043945312, -3.576278118089249e-07, -0.07891559600830078, -0.00025177001953125, -0.0011615753173828125, 0.0, -0.0060672760009765625, -0.008678436279296875, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.0001888275146484375, -5.7220458984375e-06, -0.0046901702880859375, -2.264974000354414e-06, -0.0006257295608520508, 0.0, -1.9073486328125e-06, -0.00080108642578125, -0.0002384185791015625, -0.001597253023646772, -2.336498801014386e-05, -4.9591064453125e-05, -3.814697265625e-06, -0.0001964569091796875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fan", "Of", "Knives", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -4.407500393510304, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Fan of Knives", "hole2": "PALADIN", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FanOfKnives", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.09808349609375e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000148773193359375, -0.00011324241495458409, -0.00011038715456379578, -0.009238339960575104, -0.1179867684841156, -9.1552734375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -9.357929229736328e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001316070556640625, -2.354556083679199, -6.866455078125e-05, -0.00021145492792129517, -0.00014448165893554688, -8.213520050048828e-05, -0.000484466552734375, -1.990794771700166e-05, -1.9073486328125e-06, -1.8715771147981286e-05, 0.0, -1.7435493469238281, 0.0, -0.0005773305310867727, 0.0, -9.1552734375e-05, -0.0001010894775390625, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, -0.0001125335693359375, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.008002281188964844, -6.4849853515625e-05, -0.060935020446777344, -1.33514404296875e-05, -4.2557716369628906e-05, 0.0, -2.6702880859375e-05, -4.38690185546875e-05, -7.62939453125e-06, -6.079673767089844e-06, 0.0, 0.0, -1.71661376953125e-05, 0.0, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.04811573028564453, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -1.0013571227318607e-05, 0.0, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -0.0001373291015625, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -5.841247457283316e-06, -0.004786491394042969, -1.9073486328125e-05, -4.9591064453125e-05, 0.0, -0.0005818605422973633, -5.245195097813848e-06, -0.0001811981201171875, -0.009893417358398438, -0.0001068115234375, 0.0, -0.0008983612060546875, 0.0, -0.0001583099365234375, -9.536738616588991e-07, -0.00026345252990722656, 0.0, -8.96453857421875e-05, -2.09808349609375e-05, 0.0, -0.00042724609375, -3.814697265625e-05, -0.000701904296875, 0.0, -0.0004253387451171875, -2.5033950805664062e-05, -0.0032068490982055664, 0.0, -7.665156590519473e-05, 0.0, -0.0001430511474609375, -2.09808349609375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.0002002716064453125, -0.0021495819091796875, -1.9073486328125e-06, -0.0007439851760864258, -3.3378546504536644e-06, -0.0006351470947265625, 0.0, -1.9073486328125e-06, -0.0013065338134765625, -0.0001983642578125, -0.0015264450339600444, -2.6822061045095325e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.00020313262939453125, 0.0, -0.0199737548828125, -1.9073486328125e-06, -0.0005016326904296875, -0.004055023193359375, -2.288818359375e-05, -3.0517578125e-05, -0.0013751983642578125, -2.6702880859375e-05, -0.0024662017822265625, -4.768370445162873e-07, -0.0038561818655580282, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fan", "Of", "Knives", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -4.657489684839447, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template4", "hole0": "Fan of Knives", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FanOfKnives", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.09808349609375e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000148773193359375, -0.00011324241495458409, -0.00011038715456379578, -0.009238339960575104, -0.1179867684841156, -9.1552734375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -9.357929229736328e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001316070556640625, -0.1069650650024414, -0.000286102294921875, -1.0728830375228426e-06, -0.0001250481145689264, -0.0005615949630737305, -0.0003800392150878906, -0.015152335166931152, -0.00183868408203125, -4.649161837733118e-06, -5.841255187988281e-06, -4.287110328674316, -5.006777428206988e-06, -0.0004978179931640625, 0.0, -1.6689295080141164e-05, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -5.91278076171875e-05, 0.0, -0.055525779724121094, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.1801710570580326e-05, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.0001430511474609375, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.437291176553117e-06, -0.0037736892700195312, -1.9073486328125e-05, -4.76837158203125e-05, 0.0, -0.0005418062210083008, -5.245195097813848e-06, -0.00019073486328125, -0.010148048400878906, -0.0001010894775390625, 0.0, -0.0009918212890625, 0.0, -0.0001621246337890625, -9.536738616588991e-07, -0.00026345252990722656, 0.0, -8.96453857421875e-05, -2.09808349609375e-05, 0.0, -0.0004253387451171875, -3.814697265625e-05, -0.0007038116455078125, 0.0, -0.0004291534423828125, -2.5033950805664062e-05, -0.003185868263244629, 0.0, -7.665156590519473e-05, 0.0, -0.000148773193359375, -2.09808349609375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.000194549560546875, -0.0022296905517578125, -1.9073486328125e-06, -0.000741124153137207, -3.3378546504536644e-06, -0.0006389617919921875, 0.0, -1.9073486328125e-06, -0.0013179779052734375, -0.0001983642578125, -0.0015288291033357382, -2.6822061045095325e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.00020313262939453125, 0.0, -0.019326210021972656, -1.9073486328125e-06, -0.0004405975341796875, -0.0042324066162109375, -2.288818359375e-05, -2.86102294921875e-05, -0.001346588134765625, -2.6702880859375e-05, -0.002422332763671875, -4.768370445162873e-07, -0.003928780555725098, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fan", "Of", "Knives", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -4.70762791993706, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Fan of of Knives", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FanOfKnives", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.09808349609375e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000148773193359375, -0.00011324241495458409, -0.00011038715456379578, -0.009238339960575104, -0.1179867684841156, -9.1552734375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -9.357929229736328e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001316070556640625, -0.1069650650024414, -0.000286102294921875, -1.0728830375228426e-06, -0.0001250481145689264, -0.0005615949630737305, -0.0003800392150878906, -4.199795246124268, -0.04196608066558838, -2.384184699621983e-05, -1.1444091796875e-05, -1.430511474609375e-05, -1.1920928244535389e-07, -0.1101682186126709, -5.7220458984375e-06, -0.0002079010009765625, 0.0, -1.4662737157777883e-05, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -6.67572021484375e-05, 0.0, -0.0590667724609375, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -1.1444084520917386e-05, 0.0, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.0001506805419921875, -1.52587890625e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.318082796497038e-06, -0.0037240982055664062, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -0.000554203987121582, -5.125986263010418e-06, -0.00019073486328125, -0.010149955749511719, -0.0001010894775390625, 0.0, -0.000980377197265625, 0.0, -0.00016021728515625, -9.536738616588991e-07, -0.00026154518127441406, 0.0, -8.96453857421875e-05, -2.09808349609375e-05, 0.0, -0.00042724609375, -3.814697265625e-05, -0.0007038116455078125, 0.0, -0.00042724609375, -2.5033950805664062e-05, -0.00319063663482666, 0.0, -7.665156590519473e-05, 0.0, -0.000148773193359375, -2.09808349609375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.0001926422119140625, -0.00225067138671875, -1.9073486328125e-06, -0.0007420778274536133, -3.3378546504536644e-06, -0.000640869140625, 0.0, -1.9073486328125e-06, -0.00131988525390625, -0.0001983642578125, -0.001528948312625289, -2.6822061045095325e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.00020313262939453125, 0.0, -0.018283843994140625, -1.9073486328125e-06, -0.00043487548828125, -0.0042743682861328125, -2.288818359375e-05, -2.86102294921875e-05, -0.0013294219970703125, -2.47955322265625e-05, -0.0024585723876953125, -4.768370445162873e-07, -0.003942131996154785, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fan", "Of", "Knives", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Fan", " ", "of", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -4.716457114581772, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Fan of of Knives", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FanOfKnivesOfTheKnives", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.09808349609375e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000148773193359375, -0.00011324241495458409, -0.00011038715456379578, -0.009238339960575104, -2.255059242248535, -1.8082928657531738, -0.00036793138133361936, -1.4424300388782285e-05, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-06, -0.0001468658447265625, -1.9073486328125e-05, -7.62939453125e-06, -0.0001277923583984375, -0.14672279357910156, -0.0003643035888671875, -8.344646857949556e-07, -0.00018119221203960478, -0.0014580488204956055, -0.0004595518112182617, -0.0002835988998413086, -0.0008287429809570312, -0.010264158248901367, -0.00662994384765625, -1.0967253729177173e-05, -3.933906555175781e-06, -0.35595858097076416, -1.33514404296875e-05, -0.0002193450927734375, 0.0, -1.5020364116935525e-05, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -6.866455078125e-05, 0.0, -0.059340476989746094, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -1.1444084520917386e-05, 0.0, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.000152587890625, -1.52587890625e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.318082796497038e-06, -0.0037107467651367188, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -0.0005551576614379883, -5.245195097813848e-06, -0.00019073486328125, -0.010126113891601562, -0.0001010894775390625, 0.0, -0.0009822845458984375, 0.0, -0.00016021728515625, -9.536738616588991e-07, -0.00026154518127441406, 0.0, -8.96453857421875e-05, -2.09808349609375e-05, 0.0, -0.00042724609375, -3.814697265625e-05, -0.0007038116455078125, 0.0, -0.00042724609375, -2.5033950805664062e-05, -0.00319063663482666, 0.0, -7.665156590519473e-05, 0.0, -0.000148773193359375, -2.09808349609375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.0001926422119140625, -0.00225067138671875, -1.9073486328125e-06, -0.0007420778274536133, -3.3378546504536644e-06, -0.000640869140625, 0.0, -1.9073486328125e-06, -0.00131988525390625, -0.0001983642578125, -0.001528948312625289, -2.6822061045095325e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.00020313262939453125, 0.0, -0.018210411071777344, -1.9073486328125e-06, -0.0004329681396484375, -0.0042781829833984375, -2.288818359375e-05, -2.86102294921875e-05, -0.0013275146484375, -2.47955322265625e-05, -0.0024614334106445312, -4.768370445162873e-07, -0.003942131996154785, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fan", "Of", "Knives", "Of", "The", "Knives", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Fan", " ", "of", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class FanOfKnivesOfTheKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -5.194844325405029, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Fan of of Knives", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FanOfTheKnives", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.09808349609375e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000148773193359375, -0.00011324241495458409, -0.00011038715456379578, -4.756150245666504, -1.1920922133867862e-06, -2.7775726266554557e-05, -3.62396240234375e-05, -2.86102294921875e-05, 0.0, -0.00010502338409423828, -1.1444091796875e-05, -9.5367431640625e-06, -0.0001277923583984375, -0.13206100463867188, -0.0003108978271484375, -1.0728830375228426e-06, -0.00012719386722892523, -0.0014656782150268555, -0.00040411949157714844, -0.05199015140533447, -0.00891268253326416, -3.0040680940146558e-05, -1.71661376953125e-05, -1.430511474609375e-05, -2.0265579223632812e-06, -0.12305521965026855, -7.62939453125e-06, -0.0002193450927734375, 0.0, -1.4781946447328664e-05, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -6.67572021484375e-05, 0.0, -0.059322357177734375, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -1.1444084520917386e-05, 0.0, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.0001506805419921875, -1.52587890625e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.318082796497038e-06, -0.00372314453125, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -0.0005551576614379883, -5.125986263010418e-06, -0.00019073486328125, -0.010142326354980469, -0.0001010894775390625, 0.0, -0.0009822845458984375, 0.0, -0.00016021728515625, -9.536738616588991e-07, -0.00026154518127441406, 0.0, -8.96453857421875e-05, -2.09808349609375e-05, 0.0, -0.00042724609375, -3.814697265625e-05, -0.0007038116455078125, 0.0, -0.00042724609375, -2.5033950805664062e-05, -0.00319063663482666, 0.0, -7.665156590519473e-05, 0.0, -0.000148773193359375, -2.09808349609375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.0001926422119140625, -0.00225067138671875, -1.9073486328125e-06, -0.0007420778274536133, -3.3378546504536644e-06, -0.000640869140625, 0.0, -1.9073486328125e-06, -0.00131988525390625, -0.0001983642578125, -0.001528948312625289, -2.6822061045095325e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.00020313262939453125, 0.0, -0.018225669860839844, -1.9073486328125e-06, -0.00043487548828125, -0.004276275634765625, -2.288818359375e-05, -2.86102294921875e-05, -0.0013294219970703125, -2.47955322265625e-05, -0.002460479736328125, -4.768370445162873e-07, -0.003942131996154785, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fan", "Of", "The", "Knives", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Fan", " ", "of", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class FanOfTheKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"score": -5.1957784000138645, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Fan of Knives", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FanOfKnives", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.09808349609375e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000148773193359375, -0.00011324241495458409, -0.00011038715456379578, -0.009238339960575104, -0.1179867684841156, -9.1552734375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -9.357929229736328e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001316070556640625, -0.1069650650024414, -0.000286102294921875, -1.0728830375228426e-06, -0.0001250481145689264, -0.0005615949630737305, -0.0003800392150878906, -0.015152335166931152, -0.00183868408203125, -4.649161837733118e-06, -5.841255187988281e-06, -0.4935673475265503, -1.71661376953125e-05, -0.000213623046875, 0.0, -1.4424319488171022e-05, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -4.0531158447265625e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, 0.0, -4.428712844848633, -3.814697265625e-06, 0.0, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, -6.103515625e-05, 0.0, -6.43729799776338e-06, 0.0, -1.33514404296875e-05, 0.0, -2.47955322265625e-05, -0.0001220703125, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -5.364416665543104e-06, -0.000385284423828125, -2.09808349609375e-05, -1.71661376953125e-05, 0.0, -0.0005742311477661133, -9.65590606938349e-06, -0.00034332275390625, -0.0042095184326171875, -0.000164031982421875, 0.0, -0.0013904571533203125, 0.0, -0.0002422332763671875, -7.152555099310121e-07, -0.00037598609924316406, 0.0, -0.00012969970703125, -1.52587890625e-05, 0.0, -0.0004138946533203125, -4.38690185546875e-05, -0.0006542205810546875, 0.0, -0.000457763671875, -2.3126602172851562e-05, -0.002823472023010254, 0.0, -7.462500798283145e-05, 0.0, -0.0001964569091796875, -2.09808349609375e-05, -2.6702880859375e-05, -2.288818359375e-05, -2.6702880859375e-05, -7.62939453125e-06, -0.0002040863037109375, -0.001987457275390625, -1.9073486328125e-06, -0.000592350959777832, -3.4570634852570947e-06, -0.0005741119384765625, 0.0, -1.9073486328125e-06, -0.001270294189453125, -0.0002079010009765625, -0.0015314543852582574, -2.6822061045095325e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.00020503997802734375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fan", "Of", "Knives", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -6.165275450428794, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Fan of Knives", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FanOfKnives", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.09808349609375e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000148773193359375, -0.00011324241495458409, -0.00011038715456379578, -0.009238339960575104, -0.1179867684841156, -9.1552734375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -9.357929229736328e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001316070556640625, -0.1069650650024414, -0.000286102294921875, -1.0728830375228426e-06, -0.0001250481145689264, -0.0005615949630737305, -0.0003800392150878906, -0.015152335166931152, -0.00183868408203125, -4.649161837733118e-06, -5.841255187988281e-06, -0.4935673475265503, -1.71661376953125e-05, -0.000213623046875, 0.0, -1.4424319488171022e-05, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -4.0531158447265625e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, 0.0, -0.06266593933105469, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.1563293810468167e-05, 0.0, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.000148773193359375, -1.52587890625e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.437291176553117e-06, -0.00376129150390625, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -0.000554203987121582, -5.245195097813848e-06, -0.00019073486328125, -0.010143280029296875, -0.0001010894775390625, 0.0, -0.00098419189453125, 0.0, -0.00016021728515625, -9.536738616588991e-07, -0.00026345252990722656, 0.0, -8.96453857421875e-05, -2.09808349609375e-05, 0.0, -0.00042724609375, -3.814697265625e-05, -0.0007038116455078125, 0.0, -0.00042724609375, -2.5033950805664062e-05, -0.00319063663482666, 0.0, -7.665156590519473e-05, 0.0, -0.000148773193359375, -2.09808349609375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.0001926422119140625, -0.002246856689453125, -1.9073486328125e-06, -0.0007420778274536133, -3.3378546504536644e-06, -0.000640869140625, 0.0, -1.9073486328125e-06, -0.00131988525390625, -0.0001983642578125, -0.001528948312625289, -2.6822061045095325e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.00020313262939453125, 0.0, -4.53568172454834, -4.00543212890625e-05, -0.000213623046875, 0.0, -0.0001583099365234375, -7.152555099310121e-07, -0.5654745101928711, -3.814697265625e-06, -0.014728546142578125, -3.0517578125e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0009708404541015625, 0.0, -0.0018115043640136719, 0.0, -0.00025081512285396457, -7.62939453125e-06, -0.0001010894775390625, -0.000217437744140625, -7.62939453125e-06, -9.5367431640625e-06, -0.000263214111328125, -3.814697265625e-06, -4.9591064453125e-05, -0.0875844955444336, -5.7220458984375e-06, -0.00038552284240722656, -2.7418097943154862e-06, -0.10080242156982422, 0.0, -1.9073486328125e-06, -0.015636444091796875, -0.0001373291015625, -0.0012150700204074383, -3.2782503694761544e-05, -0.0001163482666015625, -3.814697265625e-06, -0.00025177001953125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fan", "Of", "Knives", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"score": -21.3775577545166, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -2.09808349609375e-05, -21.37753677368164], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 31}
{"beams": [{"score": -0.044408066005694025, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 6}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Fireball", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.52587890625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0001259990967810154, -0.00015854835510253906, -0.000392913818359375, -0.000156402587890625, -0.000202178955078125, -9.906289051286876e-05, -5.435927232610993e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0011425018310546875, -7.62939453125e-06, -0.0002226733195129782, -1.1920928244535389e-07, -3.4332275390625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001703489979263395, -3.814697265625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -1.71661376953125e-05, -1.33514404296875e-05, -0.0002689361572265625, -1.71661376953125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.311301275563892e-06, 0.0, -0.0016255378723144531, 0.0, -0.0006160736083984375, -0.0002117156982421875, -1.71661376953125e-05, -0.00043380260467529297, -1.1444091796875e-05, -2.6702880859375e-05, -1.9073486328125e-05, -1.4305012882687151e-05, -1.239776611328125e-05, -3.814697265625e-06, -7.62939453125e-06, -2.09808349609375e-05, -9.5367431640625e-06, -7.760524022160098e-05, -5.9604644775390625e-06, -0.019916534423828125, -3.576278118089249e-07, -9.5367431640625e-06, -1.33514404296875e-05, -8.392333984375e-05, -0.0006465911865234375, -0.0005130767822265625, -1.0728830375228426e-06, -0.005413055419921875, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003358125686645508, 0.0, -6.29425048828125e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -7.62939453125e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.0002880096435546875, -1.9073486328125e-06, -0.007718563079833984, -1.71661376953125e-05, -7.82012939453125e-05, -3.814697265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001220703125, -5.7220458984375e-05, 0.0, -8.26120376586914e-05, -2.0265579223632812e-06, -0.001331329345703125, -3.4332275390625e-05, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -0.0004155627975706011, -1.406666160619352e-05, -2.86102294921875e-05, -1.9073486328125e-06, -9.250640869140625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fireball", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fireball", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -4.499751789302188, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 6}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Fireball", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.52587890625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0001259990967810154, -0.00015854835510253906, -0.000392913818359375, -0.000156402587890625, -0.000202178955078125, -9.906289051286876e-05, -5.435927232610993e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0011425018310546875, -7.62939453125e-06, -0.0002226733195129782, -1.1920928244535389e-07, -3.4332275390625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001703489979263395, -3.814697265625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -1.71661376953125e-05, -1.33514404296875e-05, -0.0002689361572265625, -1.71661376953125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.311301275563892e-06, 0.0, -0.0016255378723144531, 0.0, -0.0006160736083984375, -0.0002117156982421875, -1.71661376953125e-05, -0.00043380260467529297, -1.1444091796875e-05, -2.6702880859375e-05, -1.9073486328125e-05, -1.4305012882687151e-05, -1.239776611328125e-05, -3.814697265625e-06, -7.62939453125e-06, -2.09808349609375e-05, -9.5367431640625e-06, -7.760524022160098e-05, -5.9604644775390625e-06, -4.469786643981934, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0001201629638671875, -0.000293731689453125, -0.0018138885498046875, -8.344646857949556e-07, -0.008702278137207031, 0.0, -5.14984130859375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.0003339052200317383, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -7.43865966796875e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.000270843505859375, -1.9073486328125e-06, -0.008959293365478516, -1.71661376953125e-05, -7.62939453125e-05, -3.814697265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001220703125, -5.7220458984375e-05, 0.0, -8.165836334228516e-05, -2.0265579223632812e-06, -0.0013179779052734375, -3.4332275390625e-05, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -0.0004174701462034136, -1.41858699862496e-05, -2.86102294921875e-05, -1.9073486328125e-06, -9.34600830078125e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fireball", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fireball", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -5.679227812051344, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 6}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Fireball", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.52587890625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0001259990967810154, -0.00015854835510253906, -0.000392913818359375, -0.000156402587890625, -0.000202178955078125, -9.906289051286876e-05, -5.435927232610993e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0011425018310546875, -7.62939453125e-06, -0.0002226733195129782, -1.1920928244535389e-07, -3.4332275390625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001703489979263395, -3.814697265625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -1.71661376953125e-05, -1.33514404296875e-05, -0.0002689361572265625, -1.71661376953125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.311301275563892e-06, 0.0, -0.0016255378723144531, 0.0, -0.0006160736083984375, -0.0002117156982421875, -1.71661376953125e-05, -0.00043380260467529297, -1.1444091796875e-05, -2.6702880859375e-05, -1.9073486328125e-05, -1.4305012882687151e-05, -1.239776611328125e-05, -3.814697265625e-06, -7.62939453125e-06, -2.09808349609375e-05, -9.5367431640625e-06, -7.760524022160098e-05, -5.9604644775390625e-06, -0.019916534423828125, -3.576278118089249e-07, -9.5367431640625e-06, -1.33514404296875e-05, -8.392333984375e-05, -0.0006465911865234375, -0.0005130767822265625, -1.0728830375228426e-06, -5.643769264221191, 0.0, -2.09808349609375e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.0001621246337890625, 0.0, -0.0002727508544921875, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001659393310546875, -6.4849853515625e-05, -5.7220458984375e-06, -0.000293731689453125, -1.9073486328125e-06, -0.004060983657836914, -3.24249267578125e-05, -9.5367431640625e-05, -4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0001277923583984375, -5.53131103515625e-05, 0.0, -8.07046890258789e-05, -2.0265579223632812e-06, -0.001324295997619629, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002803802490234375, -5.14984130859375e-05, -0.00040543003706261516, -1.22785213534371e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.34600830078125e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fireball", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fireball", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -5.736776335048766, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 6}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Fireball", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.52587890625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0001259990967810154, -0.00015854835510253906, -0.000392913818359375, -0.000156402587890625, -0.000202178955078125, -9.906289051286876e-05, -5.435927232610993e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0011425018310546875, -7.62939453125e-06, -0.0002226733195129782, -1.1920928244535389e-07, -3.4332275390625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001703489979263395, -3.814697265625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -1.71661376953125e-05, -1.33514404296875e-05, -0.0002689361572265625, -1.71661376953125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.311301275563892e-06, 0.0, -0.0016255378723144531, 0.0, -0.0006160736083984375, -0.0002117156982421875, -1.71661376953125e-05, -0.00043380260467529297, -1.1444091796875e-05, -2.6702880859375e-05, -1.9073486328125e-05, -1.4305012882687151e-05, -1.239776611328125e-05, -3.814697265625e-06, -7.62939453125e-06, -2.09808349609375e-05, -9.5367431640625e-06, -7.760524022160098e-05, -5.9604644775390625e-06, -0.019916534423828125, -3.576278118089249e-07, -9.5367431640625e-06, -1.33514404296875e-05, -8.392333984375e-05, -0.0006465911865234375, -0.0005130767822265625, -1.0728830375228426e-06, -0.005413055419921875, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003358125686645508, 0.0, -6.29425048828125e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -7.62939453125e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.0002880096435546875, -1.9073486328125e-06, -5.699265956878662, -4.589557647705078e-05, -0.00032806396484375, -0.000133514404296875, -3.814697265625e-06, 0.0, -4.76837158203125e-05, -0.000102996826171875, -7.62939453125e-05, 0.0, -6.914138793945312e-05, -3.933906555175781e-06, -0.0017380714416503906, -5.91278076171875e-05, -1.9073486328125e-06, -0.0003147125244140625, -4.76837158203125e-05, -0.0004088871646672487, -1.3351394954952411e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.632110595703125e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fireball", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fireball", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -5.812368375937062, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 6}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Fireball", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.52587890625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0001259990967810154, -0.00015854835510253906, -0.000392913818359375, -0.000156402587890625, -0.000202178955078125, -9.906289051286876e-05, -5.435927232610993e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0011425018310546875, -7.62939453125e-06, -0.0002226733195129782, -1.1920928244535389e-07, -3.4332275390625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001703489979263395, -3.814697265625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -1.71661376953125e-05, -1.33514404296875e-05, -0.0002689361572265625, -1.71661376953125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.311301275563892e-06, 0.0, -0.0016255378723144531, 0.0, -0.0006160736083984375, -0.0002117156982421875, -1.71661376953125e-05, -0.00043380260467529297, -1.1444091796875e-05, -2.6702880859375e-05, -1.9073486328125e-05, -1.4305012882687151e-05, -1.239776611328125e-05, -3.814697265625e-06, -7.62939453125e-06, -2.09808349609375e-05, -9.5367431640625e-06, -7.760524022160098e-05, -5.9604644775390625e-06, -0.019916534423828125, -3.576278118089249e-07, -9.5367431640625e-06, -1.33514404296875e-05, -8.392333984375e-05, -0.0006465911865234375, -0.0005130767822265625, -1.0728830375228426e-06, -0.005413055419921875, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003358125686645508, 0.0, -6.29425048828125e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -7.62939453125e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.0002880096435546875, -1.9073486328125e-06, -5.7757887840271, -0.0001506805419921875, -5.7220458984375e-05, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000110626220703125, -6.4849853515625e-05, -6.103515625e-05, 0.0, -9.012222290039062e-05, -1.9073486328125e-06, -0.0011371374130249023, -2.47955322265625e-05, -1.9073486328125e-06, -0.0002727508544921875, -4.00543212890625e-05, -0.0003986350493505597, -1.4424267646973021e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.632110595703125e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fireball", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fireball", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -6.170303327769254, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 6}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Fireball", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.52587890625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0001259990967810154, -0.00015854835510253906, -0.000392913818359375, -0.000156402587890625, -0.000202178955078125, -9.906289051286876e-05, -5.435927232610993e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0011425018310546875, -7.62939453125e-06, -0.0002226733195129782, -1.1920928244535389e-07, -3.4332275390625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001703489979263395, -3.814697265625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -1.71661376953125e-05, -1.33514404296875e-05, -0.0002689361572265625, -1.71661376953125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.311301275563892e-06, 0.0, -0.0016255378723144531, 0.0, -0.0006160736083984375, -0.0002117156982421875, -1.71661376953125e-05, -0.00043380260467529297, -1.1444091796875e-05, -2.6702880859375e-05, -1.9073486328125e-05, -1.4305012882687151e-05, -1.239776611328125e-05, -3.814697265625e-06, -7.62939453125e-06, -2.09808349609375e-05, -9.5367431640625e-06, -7.760524022160098e-05, -5.9604644775390625e-06, -6.1486358642578125, -1.71661376953125e-05, -1.9073486328125e-06, -1.52587890625e-05, -6.866455078125e-05, -0.00032806396484375, -0.00016987323760986328, -1.1920922133867862e-06, -0.0029621124267578125, 0.0, -9.34600830078125e-05, -1.33514404296875e-05, -1.9073486328125e-05, -0.0003796815872192383, 0.0, -6.103515625e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -8.392333984375e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.00028228759765625, -1.9073486328125e-06, -0.007921695709228516, -1.71661376953125e-05, -7.82012939453125e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0001220703125, -5.7220458984375e-05, 0.0, -8.07046890258789e-05, -2.0265579223632812e-06, -0.0013283491134643555, -3.24249267578125e-05, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -0.0004135362396482378, -1.41858699862496e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.34600830078125e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fireball", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fireball", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -6.274160368176005, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 6}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Fireball", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.52587890625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0001259990967810154, -0.00015854835510253906, -0.000392913818359375, -0.000156402587890625, -0.000202178955078125, -9.906289051286876e-05, -5.435927232610993e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0011425018310546875, -7.62939453125e-06, -0.0002226733195129782, -1.1920928244535389e-07, -3.4332275390625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001703489979263395, -3.814697265625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -1.71661376953125e-05, -1.33514404296875e-05, -0.0002689361572265625, -1.71661376953125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.311301275563892e-06, 0.0, -0.0016255378723144531, 0.0, -0.0006160736083984375, -0.0002117156982421875, -1.71661376953125e-05, -0.00043380260467529297, -1.1444091796875e-05, -2.6702880859375e-05, -1.9073486328125e-05, -1.4305012882687151e-05, -1.239776611328125e-05, -3.814697265625e-06, -7.62939453125e-06, -2.09808349609375e-05, -9.5367431640625e-06, -7.760524022160098e-05, -5.9604644775390625e-06, -6.24218225479126, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -8.0108642578125e-05, -0.0005035400390625, -0.000804901123046875, -4.768370445162873e-07, -0.011884689331054688, 0.0, -5.14984130859375e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.0003644227981567383, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -7.62939453125e-05, -6.866455078125e-05, -3.814697265625e-06, -0.0002803802490234375, -1.9073486328125e-06, -0.008564472198486328, -1.71661376953125e-05, -7.82012939453125e-05, -3.814697265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001239776611328125, -5.7220458984375e-05, 0.0, -8.26120376586914e-05, -2.0265579223632812e-06, -0.0013276338577270508, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002841949462890625, -5.14984130859375e-05, -0.0004194967041257769, -1.406666160619352e-05, -2.86102294921875e-05, -1.9073486328125e-06, -9.250640869140625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fireball", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fireball", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -6.59146378728925, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 6}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Fireball", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.52587890625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0001259990967810154, -0.00015854835510253906, -0.000392913818359375, -0.000156402587890625, -0.000202178955078125, -9.906289051286876e-05, -5.435927232610993e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0011425018310546875, -7.62939453125e-06, -0.0002226733195129782, -1.1920928244535389e-07, -3.4332275390625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001703489979263395, -3.814697265625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -1.71661376953125e-05, -1.33514404296875e-05, -0.0002689361572265625, -1.71661376953125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.311301275563892e-06, 0.0, -0.0016255378723144531, 0.0, -0.0006160736083984375, -0.0002117156982421875, -1.71661376953125e-05, -0.00043380260467529297, -1.1444091796875e-05, -2.6702880859375e-05, -1.9073486328125e-05, -1.4305012882687151e-05, -1.239776611328125e-05, -3.814697265625e-06, -7.62939453125e-06, -2.09808349609375e-05, -9.5367431640625e-06, -7.760524022160098e-05, -5.9604644775390625e-06, -6.571080207824707, 0.0, -7.62939453125e-06, -4.76837158203125e-05, -6.866455078125e-05, -0.0002841949462890625, -0.0002918243408203125, -2.3841855067985307e-07, -0.0030975341796875, 0.0, -3.4332275390625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0003052949905395508, 0.0, -6.67572021484375e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -7.62939453125e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.00030517578125, -1.9073486328125e-06, -0.006517767906188965, -1.9073486328125e-05, -7.82012939453125e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.0001201629638671875, -5.7220458984375e-05, 0.0, -8.26120376586914e-05, -2.0265579223632812e-06, -0.0013399124145507812, -3.24249267578125e-05, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -0.0004097215423826128, -1.406666160619352e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.250640869140625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fireball", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fireball", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -6.673025233507637, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "MAGE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 6}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Fireball", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.52587890625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0001259990967810154, -0.00015854835510253906, -0.000392913818359375, -0.000156402587890625, -0.000202178955078125, -9.906289051286876e-05, -5.435927232610993e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0011425018310546875, -7.62939453125e-06, -0.0002226733195129782, -1.1920928244535389e-07, -3.4332275390625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001703489979263395, -3.814697265625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -1.71661376953125e-05, -1.33514404296875e-05, -0.0002689361572265625, -1.71661376953125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.311301275563892e-06, 0.0, -0.0016255378723144531, 0.0, -0.0006160736083984375, -0.0002117156982421875, -1.71661376953125e-05, -0.00043380260467529297, -1.1444091796875e-05, -2.6702880859375e-05, -1.9073486328125e-05, -1.4305012882687151e-05, -1.239776611328125e-05, -3.814697265625e-06, -7.62939453125e-06, -2.09808349609375e-05, -9.5367431640625e-06, -7.760524022160098e-05, -5.9604644775390625e-06, -0.019916534423828125, -3.576278118089249e-07, -9.5367431640625e-06, -1.33514404296875e-05, -8.392333984375e-05, -0.0006465911865234375, -0.0005130767822265625, -1.0728830375228426e-06, -6.636950492858887, 0.0, -3.62396240234375e-05, -4.00543212890625e-05, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0001678466796875, -9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -3.814697265625e-06, -0.00034332275390625, -7.2479248046875e-05, -9.5367431640625e-06, -0.0002288818359375, -1.9073486328125e-06, -0.004630446434020996, -3.4332275390625e-05, -9.1552734375e-05, -4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.000133514404296875, -5.7220458984375e-05, 0.0, -8.165836334228516e-05, -2.0265579223632812e-06, -0.0012956857681274414, -3.4332275390625e-05, -1.9073486328125e-06, -0.000278472900390625, -4.9591064453125e-05, -0.00041305943159386516, -1.215931297338102e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.34600830078125e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fireball", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fireball", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "MAGE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            MAGE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -7.203892810078109, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 6}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Fireball", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.52587890625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0001259990967810154, -0.00015854835510253906, -0.000392913818359375, -0.000156402587890625, -0.000202178955078125, -9.906289051286876e-05, -5.435927232610993e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0011425018310546875, -7.62939453125e-06, -0.0002226733195129782, -1.1920928244535389e-07, -3.4332275390625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001703489979263395, -3.814697265625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -1.71661376953125e-05, -1.33514404296875e-05, -0.0002689361572265625, -1.71661376953125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.311301275563892e-06, 0.0, -0.0016255378723144531, 0.0, -0.0006160736083984375, -0.0002117156982421875, -1.71661376953125e-05, -0.00043380260467529297, -1.1444091796875e-05, -2.6702880859375e-05, -1.9073486328125e-05, -1.4305012882687151e-05, -1.239776611328125e-05, -3.814697265625e-06, -7.62939453125e-06, -2.09808349609375e-05, -9.5367431640625e-06, -7.760524022160098e-05, -5.9604644775390625e-06, -7.175405025482178, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000637054443359375, -0.0006046295166015625, -5.960462772236497e-07, -0.008661270141601562, 0.0, -4.1961669921875e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.0003587007522583008, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -6.866455078125e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.000278472900390625, -1.9073486328125e-06, -0.008441448211669922, -1.71661376953125e-05, -7.82012939453125e-05, -3.814697265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001239776611328125, -5.91278076171875e-05, 0.0, -8.356571197509766e-05, -2.0265579223632812e-06, -0.0013276338577270508, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002841949462890625, -5.14984130859375e-05, -0.0004214040527585894, -1.406666160619352e-05, -2.86102294921875e-05, -1.9073486328125e-06, -9.250640869140625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fireball", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fireball", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.SHAMAN, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -7.712377888889812, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 6}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Fireball", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.52587890625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0001259990967810154, -0.00015854835510253906, -0.000392913818359375, -0.000156402587890625, -0.000202178955078125, -9.906289051286876e-05, -5.435927232610993e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0011425018310546875, -7.62939453125e-06, -0.0002226733195129782, -1.1920928244535389e-07, -3.4332275390625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001703489979263395, -3.814697265625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -1.71661376953125e-05, -1.33514404296875e-05, -0.0002689361572265625, -1.71661376953125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.311301275563892e-06, 0.0, -0.0016255378723144531, 0.0, -0.0006160736083984375, -0.0002117156982421875, -1.71661376953125e-05, -0.00043380260467529297, -1.1444091796875e-05, -2.6702880859375e-05, -1.9073486328125e-05, -1.4305012882687151e-05, -1.239776611328125e-05, -3.814697265625e-06, -7.62939453125e-06, -2.09808349609375e-05, -9.5367431640625e-06, -7.760524022160098e-05, -5.9604644775390625e-06, -7.689882278442383, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -0.00011444091796875, -0.0004100799560546875, -0.000423431396484375, -4.768370445162873e-07, -0.00450897216796875, 0.0, -4.57763671875e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.0003224611282348633, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -7.62939453125e-05, -7.62939453125e-05, -3.814697265625e-06, -0.000293731689453125, -1.9073486328125e-06, -0.006910800933837891, -1.9073486328125e-05, -7.82012939453125e-05, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.000118255615234375, -5.7220458984375e-05, 0.0, -8.356571197509766e-05, -2.0265579223632812e-06, -0.0013447999954223633, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002841949462890625, -5.14984130859375e-05, -0.0004136554489377886, -1.406666160619352e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.250640869140625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fireball", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fireball", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "RARE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.RARE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"score": -8.999435000591802, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Fireball", "hole1": 4}, {"hole2": [{"_type": "Template33", "hole0": 6}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Fireball", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.52587890625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0001259990967810154, -0.00015854835510253906, -0.000392913818359375, -0.000156402587890625, -0.000202178955078125, -9.906289051286876e-05, -5.435927232610993e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.323746681213379, -0.014191627502441406, -0.006828980520367622, -6.318092346191406e-06, -0.0005392856546677649, -6.198863957251888e-06, -0.24441349506378174, -4.6491513785440475e-06, -0.06578445434570312, -0.000171661376953125, -1.9073486328125e-06, -1.52587890625e-05, -0.0004177093505859375, 0.0, -2.47955322265625e-05, -0.0002231597900390625, -0.030381202697753906, 0.0, -1.9073486328125e-05, 0.0, -1.3097187280654907, -9.5367431640625e-06, -0.000685572624206543, -1.1444091796875e-05, 0.0, -0.0003414154052734375, -1.9073486328125e-05, -0.0003057708381675184, -2.5629758965806104e-05, -6.4849853515625e-05, -1.9073486328125e-06, -0.00015926361083984375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fireball", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Fireball", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage.damage(player.effective_spell_damage(6), self)\n"}, {"score": -9.198285036417474, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Fireball", "hole1": 4}, {"hole2": [{"_type": "Template33", "hole0": 6}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "index", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "Fireball", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.52587890625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0001259990967810154, -0.00015854835510253906, -0.000392913818359375, -0.000156402587890625, -0.000202178955078125, -9.906289051286876e-05, -5.435927232610993e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.323746681213379, -0.014191627502441406, -0.006828980520367622, -6.318092346191406e-06, -0.0005392856546677649, -6.198863957251888e-06, -0.24441349506378174, -4.6491513785440475e-06, -0.06578445434570312, -0.000171661376953125, -1.9073486328125e-06, -1.52587890625e-05, -0.0004177093505859375, 0.0, -2.47955322265625e-05, -0.0002231597900390625, -0.030381202697753906, 0.0, -1.9073486328125e-05, 0.0, -1.4947301149368286, -1.9073486328125e-06, -0.014145493507385254, -2.288818359375e-05, -1.9073486328125e-06, -0.0006589889526367188, -3.24249267578125e-05, -0.00018620473565533757, -4.80404487461783e-05, -0.0001354217529296875, -1.9073486328125e-06, -0.00022792816162109375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fireball", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Fireball", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.index.damage(player.effective_spell_damage(6), self)\n"}, {"score": -18.388320922851562, "model_output": {"_type": "Module", "body": [{"_type": "Break"}]}, "score_history": [-1.52587890625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -18.388263702392578], "choice_history": [55, 124, 221, 62], "inferred_code": "break\n"}, {"score": -22.410404205322266, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.52587890625e-05, -3.62396240234375e-05, -22.41035270690918], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 32}
{"beams": [{"score": -0.233102980941311, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Flamestrike", "hole1": 7}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 4}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Flamestrike", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001544952392578125, -4.00543212890625e-05, -5.245195097813848e-06, -0.005008577834814787, -0.0001068115234375, -3.814697265625e-05, -9.5367431640625e-06, -0.00042724609375, -3.6597251892089844e-05, -1.71661376953125e-05, -0.00020599365234375, -0.00144195556640625, -1.52587890625e-05, -5.125986263010418e-06, -2.861022494471399e-06, -5.638595757773146e-05, -0.0006165056838653982, -0.07587778568267822, -2.0265579223632812e-06, -0.0002231597900390625, 0.0, -1.9192677427781746e-05, 0.0, -4.76837158203125e-05, -3.0517578125e-05, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -4.0531158447265625e-06, -0.11179828643798828, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.549720582261216e-05, 0.0, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.82012939453125e-05, -1.71661376953125e-05, -0.0001163482666015625, 0.0, -4.76837158203125e-05, 0.0, -1.33514404296875e-05, -1.4901134818501305e-05, -0.0002727508544921875, -4.1961669921875e-05, -6.866455078125e-05, 0.0, -0.0038105249404907227, -1.5377907402580604e-05, -0.000171661376953125, -0.00030517578125, -0.000152587890625, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -0.000362396240234375, -2.3841855067985307e-07, -0.00023853778839111328, 0.0, -0.0001773834228515625, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -0.0006809234619140625, -3.814697265625e-06, -0.0002841949462890625, -1.919269561767578e-05, -0.0017933845520019531, 0.0, -9.918186697177589e-05, 0.0, -6.29425048828125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.00046539306640625, -0.00025177001953125, -3.814697265625e-06, -0.02528214454650879, -2.264974000354414e-06, -0.00017178058624267578, 0.0, -1.9073486328125e-06, -0.0004425048828125, -0.000240325927734375, -0.000673164613544941, -5.841253368998878e-06, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Flamestrike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -3.3607087640619397, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Flamestrike", "hole1": 7}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "extend", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "current_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 4}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Flamestrike", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001544952392578125, -4.00543212890625e-05, -5.245195097813848e-06, -0.005008577834814787, -0.0001068115234375, -3.814697265625e-05, -9.5367431640625e-06, -0.00042724609375, -3.6597251892089844e-05, -1.71661376953125e-05, -0.00020599365234375, -0.00144195556640625, -1.52587890625e-05, -5.125986263010418e-06, -2.861022494471399e-06, -5.638595757773146e-05, -0.0006165056838653982, -0.07587778568267822, -2.0265579223632812e-06, -0.0002231597900390625, 0.0, -1.9192677427781746e-05, 0.0, -4.76837158203125e-05, -3.0517578125e-05, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -4.0531158447265625e-06, -3.082736015319824, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.668929871811997e-05, 0.0, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -0.0002384185791015625, -9.5367431640625e-06, -0.0001468658447265625, 0.0, -4.57763671875e-05, 0.0, -1.52587890625e-05, -1.955030529643409e-05, -0.004795074462890625, -0.0001583099365234375, -0.000213623046875, -0.0010547637939453125, -5.7220458984375e-06, -0.006186485290527344, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.00037384033203125, -3.6954811548639555e-06, -0.001729130744934082, 0.0, -0.0001392364501953125, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -2.47955322265625e-05, -0.0003185272216796875, -1.9073486328125e-06, -0.000274658203125, -2.110004425048828e-05, -0.0022624731063842773, 0.0, -0.00010812253458425403, 0.0, -0.00334930419921875, -9.918212890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-05, -0.008081436157226562, 0.0, -0.004616737365722656, -3.814697265625e-06, -0.009484291076660156, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.0007762908935546875, -4.9591064453125e-05, -0.0008907318115234375, -2.47955322265625e-05, -0.0004253387451171875, -4.017353057861328e-05, -0.06751954555511475, 0.0, -0.003794550895690918, 0.0, -0.0020294189453125, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -0.0004482269287109375, -2.0265579223632812e-06, -0.05111980438232422, -0.002452850341796875, -0.0012960433959960938, 0.0, -0.0056610107421875, -0.005077362060546875, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.000274658203125, -1.1444091796875e-05, -0.004913330078125, -5.960462772236497e-07, -0.001041412353515625, 0.0, -1.9073486328125e-06, -0.0004177093505859375, -0.000148773193359375, -0.000857330160215497, -3.576277322281385e-06, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Flamestrike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -3.5139867700210914, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Flamestrike", "hole1": 7}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 4}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Flamestrike", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001544952392578125, -4.00543212890625e-05, -5.245195097813848e-06, -0.005008577834814787, -0.0001068115234375, -3.814697265625e-05, -9.5367431640625e-06, -0.00042724609375, -3.6597251892089844e-05, -1.71661376953125e-05, -0.00020599365234375, -0.00144195556640625, -1.52587890625e-05, -5.125986263010418e-06, -2.861022494471399e-06, -5.638595757773146e-05, -0.0006165056838653982, -3.1289877891540527, -8.7738037109375e-05, -0.000759124755859375, 0.0, -1.1205666851310525e-05, 0.0, -3.814697265625e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -4.291534423828125e-06, -0.3389902114868164, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.3351438610698096e-05, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.000118255615234375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.5020343198557384e-05, -0.0002918243408203125, -4.38690185546875e-05, -7.05718994140625e-05, 0.0, -0.0037485361099243164, -1.4901076610840391e-05, -0.000171661376953125, -0.0003108978271484375, -0.0001506805419921875, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -0.0003662109375, -2.3841855067985307e-07, -0.00023853778839111328, 0.0, -0.0001773834228515625, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -0.0006847381591796875, -3.814697265625e-06, -0.0002841949462890625, -1.919269561767578e-05, -0.0017933845520019531, 0.0, -9.918186697177589e-05, 0.0, -6.4849853515625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.00046539306640625, -0.00025177001953125, -3.814697265625e-06, -0.025280237197875977, -2.264974000354414e-06, -0.00017178058624267578, 0.0, -1.9073486328125e-06, -0.0004425048828125, -0.000240325927734375, -0.0006750719621777534, -5.841253368998878e-06, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Flamestrike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Flamestrike", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -3.9219638743581697, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Flamestrike", "hole1": 7}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 4}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Flamestrike", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001544952392578125, -4.00543212890625e-05, -5.245195097813848e-06, -0.005008577834814787, -0.0001068115234375, -3.814697265625e-05, -9.5367431640625e-06, -0.00042724609375, -3.6597251892089844e-05, -1.71661376953125e-05, -0.00020599365234375, -0.00144195556640625, -1.52587890625e-05, -5.125986263010418e-06, -2.861022494471399e-06, -5.638595757773146e-05, -0.0006165056838653982, -0.07587778568267822, -2.0265579223632812e-06, -0.0002231597900390625, 0.0, -1.9192677427781746e-05, 0.0, -4.76837158203125e-05, -3.0517578125e-05, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -4.0531158447265625e-06, -2.9640274047851562, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -2.3841854272177443e-05, 0.0, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -0.0002841949462890625, -3.24249267578125e-05, -0.0001392364501953125, 0.0, -5.53131103515625e-05, 0.0, -1.52587890625e-05, -2.6941281248582527e-05, -0.0024166107177734375, -0.0004673004150390625, -0.0015974044799804688, 0.0, -0.0029238462448120117, -1.0728796951298136e-05, -0.0001125335693359375, -0.0002841949462890625, -0.0001506805419921875, 0.0, -0.0001239776611328125, 0.0, -0.000301361083984375, -2.3841855067985307e-07, -0.0002480745315551758, 0.0, -0.000186920166015625, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, -0.0006275177001953125, -3.814697265625e-06, -0.00028228759765625, -1.728534698486328e-05, -0.0017762184143066406, 0.0, -9.942027827491984e-05, 0.0, -5.340576171875e-05, -6.103515625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -0.000438690185546875, -0.000263214111328125, -3.814697265625e-06, -0.03160977363586426, -2.264974000354414e-06, -0.0001735687255859375, 0.0, -1.9073486328125e-06, -0.0004558563232421875, -0.0002346038818359375, -0.0006612438010051847, -5.841253368998878e-06, -5.7220458984375e-06, 0.0, -7.43865966796875e-05, 0.0, -0.05345344543457031, -3.814697265625e-06, -0.0011806488037109375, -0.6409130096435547, -3.62396240234375e-05, -0.0001850128173828125, -0.007237434387207031, -1.9073486328125e-06, -0.10951519012451172, -2.1457672119140625e-06, -0.014413237571716309, 0.0], "choice_history": [55, 124, 221, 63, 103, "Flamestrike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "4", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n        player.draw()\n"}, {"score": -3.9610909570382873, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Flamestrike", "hole1": 7}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 4}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"_type": "Template33", "hole0": 4}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Flamestrike", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001544952392578125, -4.00543212890625e-05, -5.245195097813848e-06, -0.005008577834814787, -0.0001068115234375, -3.814697265625e-05, -9.5367431640625e-06, -0.00042724609375, -3.6597251892089844e-05, -1.71661376953125e-05, -0.00020599365234375, -0.00144195556640625, -1.52587890625e-05, -5.125986263010418e-06, -2.861022494471399e-06, -5.638595757773146e-05, -0.0006165056838653982, -0.07587778568267822, -2.0265579223632812e-06, -0.0002231597900390625, 0.0, -1.9192677427781746e-05, 0.0, -4.76837158203125e-05, -3.0517578125e-05, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -4.0531158447265625e-06, -2.9640274047851562, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -2.3841854272177443e-05, 0.0, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -0.0002841949462890625, -3.24249267578125e-05, -0.0001392364501953125, 0.0, -5.53131103515625e-05, 0.0, -1.52587890625e-05, -2.6941281248582527e-05, -0.0024166107177734375, -0.0004673004150390625, -0.0015974044799804688, 0.0, -0.0029238462448120117, -1.0728796951298136e-05, -0.0001125335693359375, -0.0002841949462890625, -0.0001506805419921875, 0.0, -0.0001239776611328125, 0.0, -0.000301361083984375, -2.3841855067985307e-07, -0.0002480745315551758, 0.0, -0.000186920166015625, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, -0.0006275177001953125, -3.814697265625e-06, -0.00028228759765625, -1.728534698486328e-05, -0.0017762184143066406, 0.0, -9.942027827491984e-05, 0.0, -5.340576171875e-05, -6.103515625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -0.000438690185546875, -0.000263214111328125, -3.814697265625e-06, -0.03160977363586426, -2.264974000354414e-06, -0.0001735687255859375, 0.0, -1.9073486328125e-06, -0.0004558563232421875, -0.0002346038818359375, -0.0006612438010051847, -5.841253368998878e-06, -5.7220458984375e-06, 0.0, -7.43865966796875e-05, 0.0, -0.05345344543457031, -3.814697265625e-06, -0.0011806488037109375, -0.7818536758422852, -1.9073486328125e-06, -1.33514404296875e-05, -0.003871917724609375, -1.1444091796875e-05, -0.008977890014648438, -1.9073486328125e-06, -0.00026702880859375, -3.814697265625e-06, -0.00254058837890625, -5.7220458984375e-06, -0.008371353149414062, 0.0, -0.0016706951428204775, 0.0, -0.0022748708724975586, 0.0, -2.09808349609375e-05, -0.00049591064453125, -0.000179290771484375, -0.000831836718134582, -7.152555099310121e-07, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Flamestrike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "4", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n        game.other_player.hero.damage(player.effective_spell_damage(4), self)\n"}, {"score": -5.084868017545176, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Flamestrike", "hole1": 7}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 4}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Flamestrike", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001544952392578125, -4.00543212890625e-05, -5.245195097813848e-06, -0.005008577834814787, -0.0001068115234375, -3.814697265625e-05, -9.5367431640625e-06, -0.00042724609375, -3.6597251892089844e-05, -1.71661376953125e-05, -0.00020599365234375, -0.00144195556640625, -1.52587890625e-05, -5.125986263010418e-06, -2.861022494471399e-06, -5.638595757773146e-05, -0.0006165056838653982, -4.811222553253174, 0.0, -0.0002956390380859375, 0.0, -9.655950634623878e-06, 0.0, -3.814697265625e-05, -2.6702880859375e-05, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -4.172325134277344e-06, -0.22822093963623047, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.5377996533061378e-05, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.0001163482666015625, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.4901134818501305e-05, -0.000286102294921875, -4.1961669921875e-05, -7.05718994140625e-05, 0.0, -0.0037418603897094727, -1.5020284081401769e-05, -0.000171661376953125, -0.0003108978271484375, -0.0001506805419921875, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -0.000362396240234375, -2.3841855067985307e-07, -0.00023853778839111328, 0.0, -0.0001773834228515625, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -0.000682830810546875, -3.814697265625e-06, -0.0002841949462890625, -1.919269561767578e-05, -0.0017933845520019531, 0.0, -9.918186697177589e-05, 0.0, -6.4849853515625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.00046539306640625, -0.00025177001953125, -3.814697265625e-06, -0.025264978408813477, -2.264974000354414e-06, -0.00017178058624267578, 0.0, -1.9073486328125e-06, -0.0004425048828125, -0.000240325927734375, -0.000673164613544941, -5.841253368998878e-06, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Flamestrike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Flamestrike", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -5.090283695569468, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "EPIC", "_type": "Template4", "hole0": "Flamestrike", "hole1": 7}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 4}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Flamestrike", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001544952392578125, -4.00543212890625e-05, -5.245195097813848e-06, -0.005008577834814787, -0.0001068115234375, -3.814697265625e-05, -9.5367431640625e-06, -0.00042724609375, -3.6597251892089844e-05, -1.71661376953125e-05, -0.00020599365234375, -0.00144195556640625, -1.52587890625e-05, -5.125986263010418e-06, -2.861022494471399e-06, -5.638595757773146e-05, -0.0006165056838653982, -4.70874547958374, -3.3736228942871094e-05, -0.000308990478515625, 0.0, -1.4901155736879446e-05, 0.0, -5.340576171875e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -4.291534423828125e-06, -0.33596134185791016, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.3470647900248878e-05, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, -7.82012939453125e-05, -1.71661376953125e-05, -0.000118255615234375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.4901134818501305e-05, -0.0002899169921875, -4.1961669921875e-05, -6.866455078125e-05, 0.0, -0.003819108009338379, -1.4781869140279014e-05, -0.000171661376953125, -0.0003108978271484375, -0.000152587890625, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -0.000362396240234375, -2.3841855067985307e-07, -0.00023853778839111328, 0.0, -0.00017547607421875, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -0.000682830810546875, -3.814697265625e-06, -0.0002841949462890625, -1.919269561767578e-05, -0.0017933845520019531, 0.0, -9.918186697177589e-05, 0.0, -6.29425048828125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.00046539306640625, -0.00025177001953125, -3.814697265625e-06, -0.02527451515197754, -2.264974000354414e-06, -0.00017178058624267578, 0.0, -1.9073486328125e-06, -0.0004425048828125, -0.000240325927734375, -0.000673164613544941, -5.841253368998878e-06, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Flamestrike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Flamestrike", "<EOS>", "7", "<EOS>", "EPIC", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.EPIC,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -5.154901555116226, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Flamestrike", "hole1": 7}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "extend", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "current_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 4}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Flamestrike", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001544952392578125, -4.00543212890625e-05, -5.245195097813848e-06, -0.005008577834814787, -0.0001068115234375, -3.814697265625e-05, -9.5367431640625e-06, -0.00042724609375, -3.6597251892089844e-05, -1.71661376953125e-05, -0.00020599365234375, -0.00144195556640625, -1.52587890625e-05, -5.125986263010418e-06, -2.861022494471399e-06, -5.638595757773146e-05, -0.0006165056838653982, -3.1289877891540527, -8.7738037109375e-05, -0.000759124755859375, 0.0, -1.1205666851310525e-05, 0.0, -3.814697265625e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -4.291534423828125e-06, -1.818650245666504, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.4781950994802173e-05, 0.0, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -9.5367431640625e-06, -0.0001468658447265625, 0.0, -4.57763671875e-05, 0.0, -1.52587890625e-05, -1.7762164134182967e-05, -0.0054473876953125, -0.0001544952392578125, -0.000209808349609375, -0.00103759765625, -5.7220458984375e-06, -0.005977630615234375, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -4.1961669921875e-05, 0.0, -0.00037479400634765625, -3.6954811548639555e-06, -0.0017300844192504883, 0.0, -0.0001392364501953125, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -2.47955322265625e-05, -0.0003185272216796875, -1.9073486328125e-06, -0.000274658203125, -2.110004425048828e-05, -0.0022662878036499023, 0.0, -0.00010812253458425403, 0.0, -0.002674102783203125, -0.0001010894775390625, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-05, -0.00783538818359375, 0.0, -0.004685401916503906, -3.814697265625e-06, -0.009394645690917969, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.0007686614990234375, -4.9591064453125e-05, -0.000896453857421875, -2.47955322265625e-05, -0.0004253387451171875, -4.017353057861328e-05, -0.06750810146331787, 0.0, -0.0037544965744018555, 0.0, -0.0021839141845703125, -5.340576171875e-05, -1.9073486328125e-06, 0.0, -0.00044345855712890625, -2.0265579223632812e-06, -0.056174278259277344, -0.0025119781494140625, -0.0012664794921875, 0.0, -0.005518913269042969, -0.005084991455078125, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0002765655517578125, -1.1444091796875e-05, -0.0049571990966796875, -4.768370445162873e-07, -0.001041412353515625, 0.0, -1.9073486328125e-06, -0.0004177093505859375, -0.000148773193359375, -0.0008572110091336071, -3.576277322281385e-06, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Flamestrike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Flamestrike", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -5.283709122743829, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Flamestrike", "hole1": 7}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "extend", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "current_player", "value": {"id": "game", "_type": "Name"}}}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Flamestrike", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001544952392578125, -4.00543212890625e-05, -5.245195097813848e-06, -0.005008577834814787, -0.0001068115234375, -3.814697265625e-05, -9.5367431640625e-06, -0.00042724609375, -3.6597251892089844e-05, -1.71661376953125e-05, -0.00020599365234375, -0.00144195556640625, -1.52587890625e-05, -5.125986263010418e-06, -2.861022494471399e-06, -5.638595757773146e-05, -0.0006165056838653982, -0.07587778568267822, -2.0265579223632812e-06, -0.0002231597900390625, 0.0, -1.9192677427781746e-05, 0.0, -4.76837158203125e-05, -3.0517578125e-05, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -4.0531158447265625e-06, -0.11179828643798828, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.549720582261216e-05, 0.0, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.82012939453125e-05, -1.71661376953125e-05, -0.0001163482666015625, 0.0, -4.76837158203125e-05, 0.0, -1.33514404296875e-05, -1.4901134818501305e-05, -0.0002727508544921875, -4.1961669921875e-05, -6.866455078125e-05, 0.0, -0.0038105249404907227, -1.5377907402580604e-05, -0.000171661376953125, -0.00030517578125, -0.000152587890625, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -0.000362396240234375, -2.3841855067985307e-07, -0.00023853778839111328, 0.0, -0.0001773834228515625, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -0.0006809234619140625, -3.814697265625e-06, -0.0002841949462890625, -1.919269561767578e-05, -0.0017933845520019531, 0.0, -9.918186697177589e-05, 0.0, -6.29425048828125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.00046539306640625, -0.00025177001953125, -3.814697265625e-06, -4.491140842437744, 0.0, -0.4171438217163086, 0.0, -3.62396240234375e-05, -0.000324249267578125, 0.0, -0.00142669677734375, -4.76837158203125e-05, -0.002719879150390625, -5.7220458984375e-06, -0.000385284423828125, -4.982948303222656e-05, -0.15992391109466553, 0.0, -0.004298210144042969, 0.0], "choice_history": [55, 124, 221, 63, 103, "Flamestrike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            targets.extend(game.current_player.minions)\n"}, {"score": -5.329063121193229, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Flamestrike", "hole1": 7}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 4}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Flamestrike", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001544952392578125, -4.00543212890625e-05, -5.245195097813848e-06, -0.005008577834814787, -0.0001068115234375, -3.814697265625e-05, -9.5367431640625e-06, -0.00042724609375, -3.6597251892089844e-05, -1.71661376953125e-05, -0.00020599365234375, -0.00144195556640625, -1.52587890625e-05, -5.125986263010418e-06, -2.861022494471399e-06, -5.638595757773146e-05, -0.0006165056838653982, -4.914355754852295, -6.866455078125e-05, -0.000438690185546875, 0.0, -9.775159924174659e-06, 0.0, -5.7220458984375e-05, -2.86102294921875e-05, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -4.410743713378906e-06, -0.3689842224121094, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.3351438610698096e-05, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.000118255615234375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.5020343198557384e-05, -0.0002956390380859375, -4.38690185546875e-05, -7.05718994140625e-05, 0.0, -0.00377810001373291, -1.4781869140279014e-05, -0.0001697540283203125, -0.0003108978271484375, -0.0001506805419921875, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -0.0003643035888671875, -2.3841855067985307e-07, -0.00023853778839111328, 0.0, -0.0001773834228515625, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -0.0006847381591796875, -3.814697265625e-06, -0.0002841949462890625, -1.919269561767578e-05, -0.0017933845520019531, 0.0, -9.918186697177589e-05, 0.0, -6.4849853515625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.00046539306640625, -0.00025177001953125, -3.814697265625e-06, -0.025281190872192383, -2.264974000354414e-06, -0.00017178058624267578, 0.0, -1.9073486328125e-06, -0.0004425048828125, -0.000240325927734375, -0.0006750719621777534, -5.841253368998878e-06, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Flamestrike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Flamestrike", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -5.907941199701298, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Flamestrike", "hole1": 7}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 4}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FlamestrikeOfFlamestrike", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001544952392578125, -4.00543212890625e-05, -5.245195097813848e-06, -5.604765892028809, -0.08352218568325043, -3.6954863844584906e-06, -9.34600830078125e-05, -3.4332275390625e-05, 0.0, -0.0002422332763671875, -2.300739288330078e-05, -5.14984130859375e-05, -0.000110626220703125, -0.002994537353515625, -2.09808349609375e-05, -5.8412379075889476e-06, -0.0008630752563476562, -4.446501407073811e-05, -0.000916245742700994, -0.05919325351715088, -4.172325134277344e-06, -0.0002422332763671875, 0.0, -1.9431096006883308e-05, 0.0, -4.38690185546875e-05, -3.4332275390625e-05, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -4.0531158447265625e-06, -0.1175832748413086, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.549720582261216e-05, 0.0, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.82012939453125e-05, -1.9073486328125e-05, -0.0001163482666015625, 0.0, -4.76837158203125e-05, 0.0, -1.33514404296875e-05, -1.4901134818501305e-05, -0.0002727508544921875, -4.1961669921875e-05, -6.866455078125e-05, 0.0, -0.0038133859634399414, -1.5377907402580604e-05, -0.000171661376953125, -0.00030517578125, -0.000152587890625, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -0.000362396240234375, -2.3841855067985307e-07, -0.00023853778839111328, 0.0, -0.0001773834228515625, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -0.0006809234619140625, -3.814697265625e-06, -0.0002841949462890625, -1.919269561767578e-05, -0.0017914772033691406, 0.0, -9.918186697177589e-05, 0.0, -6.29425048828125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.00046539306640625, -0.00025177001953125, -3.814697265625e-06, -0.02529168128967285, -2.264974000354414e-06, -0.00017178058624267578, 0.0, -1.9073486328125e-06, -0.0004425048828125, -0.000240325927734375, -0.000673164613544941, -5.841253368998878e-06, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Flamestrike", "Of", "Flamestrike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FlamestrikeOfFlamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"score": -6.181244923677667, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Flamestrike", "hole1": 7}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "current_player", "value": {"id": "game", "_type": "Name"}}}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Flamestrike", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001544952392578125, -4.00543212890625e-05, -5.245195097813848e-06, -0.005008577834814787, -0.0001068115234375, -3.814697265625e-05, -9.5367431640625e-06, -0.00042724609375, -3.6597251892089844e-05, -1.71661376953125e-05, -0.00020599365234375, -0.00144195556640625, -1.52587890625e-05, -5.125986263010418e-06, -2.861022494471399e-06, -5.638595757773146e-05, -0.0006165056838653982, -0.07587778568267822, -2.0265579223632812e-06, -0.0002231597900390625, 0.0, -1.9192677427781746e-05, 0.0, -4.76837158203125e-05, -3.0517578125e-05, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -4.0531158447265625e-06, -0.11179828643798828, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.549720582261216e-05, 0.0, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.82012939453125e-05, -1.71661376953125e-05, -0.0001163482666015625, 0.0, -4.76837158203125e-05, 0.0, -1.33514404296875e-05, -1.4901134818501305e-05, -0.0002727508544921875, -4.1961669921875e-05, -6.866455078125e-05, 0.0, -0.0038105249404907227, -1.5377907402580604e-05, -0.000171661376953125, -0.00030517578125, -0.000152587890625, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -0.000362396240234375, -2.3841855067985307e-07, -0.00023853778839111328, 0.0, -0.0001773834228515625, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -0.0006809234619140625, -3.814697265625e-06, -0.0002841949462890625, -1.919269561767578e-05, -0.0017933845520019531, 0.0, -9.918186697177589e-05, 0.0, -6.29425048828125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.00046539306640625, -0.00025177001953125, -3.814697265625e-06, -4.491140842437744, 0.0, -1.1791305541992188, 0.0, -2.47955322265625e-05, -0.000213623046875, 0.0, -0.00026702880859375, -6.29425048828125e-05, -0.00759124755859375, -5.7220458984375e-06, -0.0003814697265625, -4.220008850097656e-05, -0.21385610103607178, 0.0, -0.0823216438293457, 0.0], "choice_history": [55, 124, 221, 63, 103, "Flamestrike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "append", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            targets.append(game.current_player.minions)\n"}, {"score": -6.236713949713902, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Flamestrike", "hole1": 7}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 4}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Flamestrike", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001544952392578125, -4.00543212890625e-05, -5.245195097813848e-06, -0.005008577834814787, -0.0001068115234375, -3.814697265625e-05, -9.5367431640625e-06, -0.00042724609375, -3.6597251892089844e-05, -1.71661376953125e-05, -0.00020599365234375, -0.00144195556640625, -1.52587890625e-05, -5.125986263010418e-06, -2.861022494471399e-06, -5.638595757773146e-05, -0.0006165056838653982, -3.1289877891540527, -8.7738037109375e-05, -0.000759124755859375, 0.0, -1.1205666851310525e-05, 0.0, -3.814697265625e-05, -2.47955322265625e-05, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -4.291534423828125e-06, -2.2097549438476562, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -2.2172922399477102e-05, 0.0, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -0.00028228759765625, -3.4332275390625e-05, -0.0001373291015625, 0.0, -5.53131103515625e-05, -1.9073486328125e-06, -1.52587890625e-05, -2.6941281248582527e-05, -0.0026416778564453125, -0.000469207763671875, -0.0015764236450195312, 0.0, -0.0030840635299682617, -1.013275596051244e-05, -0.000110626220703125, -0.0002880096435546875, -0.000152587890625, 0.0, -0.0001239776611328125, 0.0, -0.0002994537353515625, -2.3841855067985307e-07, -0.0002480745315551758, 0.0, -0.0001888275146484375, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, -0.000629425048828125, -3.814697265625e-06, -0.00028228759765625, -1.728534698486328e-05, -0.0017762184143066406, 0.0, -9.942027827491984e-05, 0.0, -5.340576171875e-05, -6.103515625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -0.0004425048828125, -0.000263214111328125, -3.814697265625e-06, -0.03175473213195801, -2.264974000354414e-06, -0.0001735687255859375, 0.0, -1.9073486328125e-06, -0.000457763671875, -0.0002346038818359375, -0.0006613630102947354, -5.841253368998878e-06, -5.7220458984375e-06, 0.0, -7.43865966796875e-05, 0.0, -0.05260658264160156, -3.814697265625e-06, -0.0011615753173828125, -0.6560173034667969, -3.62396240234375e-05, -0.000179290771484375, -0.0072479248046875, -1.9073486328125e-06, -0.10999393463134766, -2.1457672119140625e-06, -0.014482855796813965, 0.0], "choice_history": [55, 124, 221, 63, 103, "Flamestrike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Flamestrike", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "4", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n        player.draw()\n"}, {"score": -6.586392834120488, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Flamestrike", "hole1": 7}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Flamestrike", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001544952392578125, -4.00543212890625e-05, -5.245195097813848e-06, -0.005008577834814787, -0.0001068115234375, -3.814697265625e-05, -9.5367431640625e-06, -0.00042724609375, -3.6597251892089844e-05, -1.71661376953125e-05, -0.00020599365234375, -0.00144195556640625, -1.52587890625e-05, -5.125986263010418e-06, -2.861022494471399e-06, -5.638595757773146e-05, -0.0006165056838653982, -0.07587778568267822, -2.0265579223632812e-06, -0.0002231597900390625, 0.0, -1.9192677427781746e-05, 0.0, -4.76837158203125e-05, -3.0517578125e-05, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -4.0531158447265625e-06, -6.489330291748047, -0.012079238891601562, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.52587890625e-05, -5.53131103515625e-05, -3.814697265625e-06, -2.4080252842395566e-05, 0.0, -4.00543212890625e-05, 0.0, -3.814697265625e-06, -8.58306884765625e-05, -2.47955322265625e-05, -0.0001163482666015625, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.324577872059308e-05], "choice_history": [55, 124, 221, 63, 103, "Flamestrike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n"}, {"score": -22.64607810974121, "model_output": {"_type": "Module", "body": []}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -22.646060943603516], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 33}
{"beams": [{"score": -2.134044457244144, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Flametongue Totem", "hole2": "SHAMAN", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}, "_type": "Template10", "hole0": 0, "hole1": 3}], "_type": "ClassDef", "name": "FlametongueTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -3.45700973412022e-05, -0.0011173223610967398, -0.009875833056867123, -7.62939453125e-06, -4.57763671875e-05, -3.814697265625e-06, -5.722029527532868e-06, -0.0010399818420410156, -4.768370445162873e-07, -7.43865966796875e-05, -0.0027790069580078125, -4.1961669921875e-05, -5.364284152165055e-05, -2.562999725341797e-05, -0.0003091096878051758, -0.00086212158203125, -0.00011872626782860607, 0.0, -0.47086429595947266, 0.0, -0.02287578582763672, -2.861022494471399e-06, -0.0001583099365234375, 0.0, -1.9073486328125e-05, 0.0, -0.0002841949462890625, 0.0, -0.024877548217773438, 0.0, -0.0029010772705078125, -3.62396240234375e-05, -9.107174992095679e-05, -9.214453893946484e-05, -0.00013804103946313262, -5.602820692729438e-06, -0.0010083912638947368, -3.111330443061888e-05, -0.00012969970703125, -0.000408172607421875, -0.0485992431640625, -0.00011444091796875, -4.00543212890625e-05, -0.001529693603515625, -9.5367431640625e-06, -0.000988602638244629, -1.1920928244535389e-07, -0.00222015380859375, -0.005257606506347656, -0.0004634857177734375, -0.027494430541992188, -6.318092346191406e-06, -0.02107524871826172, -0.00012969970703125, -7.62939453125e-06, -5.7220458984375e-06, -0.00014710426330566406, -0.00012886524200439453, -2.0265579223632812e-06, -0.00067901611328125, -0.0005245208740234375, 0.0, -0.009930230677127838, -0.0004832139820791781, -0.0227508544921875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.9180015325546265, -0.007701992988586426, 0.0, -0.11139488220214844, -0.009595870971679688, 0.0, -9.5367431640625e-06, 0.0, -0.33624720573425293, -7.903575897216797e-05, -1.311301275563892e-06, -0.000522613525390625, -4.9591064453125e-05, -8.7738037109375e-05, -1.52587890625e-05, -1.52587890625e-05, -0.0013103485107421875, -1.1920928244535389e-07, -0.06598091125488281, -5.841255187988281e-06], "choice_history": [55, 124, 221, 63, 103, "Flametongue", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 72, 145, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent())), MinionSelector(IsType(MINION_TYPE.BEAST))])\n"}, {"score": -2.609608161946987, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Flametongue Totem", "hole2": "SHAMAN", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}, {"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}, "_type": "Template10", "hole0": 0, "hole1": 3}], "_type": "ClassDef", "name": "FlametongueTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -3.45700973412022e-05, -0.0011173223610967398, -0.009875833056867123, -7.62939453125e-06, -4.57763671875e-05, -3.814697265625e-06, -5.722029527532868e-06, -0.0010399818420410156, -4.768370445162873e-07, -7.43865966796875e-05, -0.0027790069580078125, -4.1961669921875e-05, -5.364284152165055e-05, -2.562999725341797e-05, -0.0003091096878051758, -0.00086212158203125, -0.00011872626782860607, 0.0, -0.47086429595947266, 0.0, -0.02287578582763672, -2.861022494471399e-06, -0.0001583099365234375, 0.0, -1.9073486328125e-05, 0.0, -0.0002841949462890625, 0.0, -0.024877548217773438, 0.0, -0.0029010772705078125, -3.62396240234375e-05, -9.107174992095679e-05, -9.214453893946484e-05, -0.00013804103946313262, -5.602820692729438e-06, -0.0010083912638947368, -3.111330443061888e-05, -0.00012969970703125, -0.000408172607421875, -0.0485992431640625, -0.00011444091796875, -4.00543212890625e-05, -0.001529693603515625, -9.5367431640625e-06, -0.000988602638244629, -1.1920928244535389e-07, -0.00222015380859375, -0.005257606506347656, -0.0004634857177734375, -0.027494430541992188, -6.318092346191406e-06, -0.02107524871826172, -0.00012969970703125, -7.62939453125e-06, -5.7220458984375e-06, -0.00014710426330566406, -0.00012886524200439453, -2.0265579223632812e-06, -0.00067901611328125, -0.0005245208740234375, 0.0, -0.009930230677127838, -0.0004832139820791781, -0.0227508544921875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -1.800172209739685, -1.0013547580456361e-05, -0.000885009765625, -0.04939460754394531, -0.000152587890625, -0.07522076368331909, -0.0007475612219423056], "choice_history": [55, 124, 221, 63, 103, "Flametongue", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 72, 145, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent())), Buff(Adjacent())])\n"}, {"score": -2.7511126053167203, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Flametongue Totem", "hole2": "PALADIN", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}, "_type": "Template10", "hole0": 0, "hole1": 3}], "_type": "ClassDef", "name": "FlametongueTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -3.45700973412022e-05, -0.0011173223610967398, -0.009875833056867123, -7.62939453125e-06, -4.57763671875e-05, -3.814697265625e-06, -5.722029527532868e-06, -0.0010399818420410156, -4.768370445162873e-07, -7.43865966796875e-05, -0.0027790069580078125, -4.1961669921875e-05, -5.364284152165055e-05, -2.562999725341797e-05, -0.0003091096878051758, -0.00086212158203125, -0.00011872626782860607, 0.0, -1.0891056060791016, -1.9073486328125e-06, -0.015668034553527832, -4.291534423828125e-06, -0.000514984130859375, 0.0, -2.09808349609375e-05, 0.0, -0.0004711151123046875, 0.0, -0.022857666015625, 0.0, -0.0032110214233398438, -3.0517578125e-05, -8.201262971851975e-05, -9.035655966727063e-05, -0.00011574966629268602, -5.722029527532868e-06, -0.0010154246119782329, -3.075568383792415e-05, -0.00011444091796875, -0.0004062652587890625, -0.05232810974121094, -0.0001049041748046875, -3.4332275390625e-05, -0.000576019287109375, -1.1444091796875e-05, -0.0009410381317138672, -1.1920928244535389e-07, -0.0020542144775390625, -0.0051860809326171875, -0.0004482269287109375, -0.02867889404296875, -6.318092346191406e-06, -0.025571823120117188, -0.00012969970703125, -7.62939453125e-06, -5.7220458984375e-06, -0.00013947486877441406, -0.00013077259063720703, -2.0265579223632812e-06, -0.0006847381591796875, -0.000553131103515625, 0.0, -0.01007385179400444, -0.00048047309974208474, -0.023357391357421875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.9252923727035522, -0.007709622383117676, 0.0, -0.10898971557617188, -0.009433746337890625, 0.0, -9.5367431640625e-06, 0.0, -0.3302428722381592, -7.903575897216797e-05, -1.311301275563892e-06, -0.0005207061767578125, -4.9591064453125e-05, -8.7738037109375e-05, -1.52587890625e-05, -1.52587890625e-05, -0.0013217926025390625, -1.1920928244535389e-07, -0.06557083129882812, -5.841255187988281e-06], "choice_history": [55, 124, 221, 63, 103, "Flametongue", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 72, 145, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent())), MinionSelector(IsType(MINION_TYPE.BEAST))])\n"}, {"score": -3.2329897979069457, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Flametongue Totem", "hole2": "PALADIN", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}, {"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}, "_type": "Template10", "hole0": 0, "hole1": 3}], "_type": "ClassDef", "name": "FlametongueTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -3.45700973412022e-05, -0.0011173223610967398, -0.009875833056867123, -7.62939453125e-06, -4.57763671875e-05, -3.814697265625e-06, -5.722029527532868e-06, -0.0010399818420410156, -4.768370445162873e-07, -7.43865966796875e-05, -0.0027790069580078125, -4.1961669921875e-05, -5.364284152165055e-05, -2.562999725341797e-05, -0.0003091096878051758, -0.00086212158203125, -0.00011872626782860607, 0.0, -1.0891056060791016, -1.9073486328125e-06, -0.015668034553527832, -4.291534423828125e-06, -0.000514984130859375, 0.0, -2.09808349609375e-05, 0.0, -0.0004711151123046875, 0.0, -0.022857666015625, 0.0, -0.0032110214233398438, -3.0517578125e-05, -8.201262971851975e-05, -9.035655966727063e-05, -0.00011574966629268602, -5.722029527532868e-06, -0.0010154246119782329, -3.075568383792415e-05, -0.00011444091796875, -0.0004062652587890625, -0.05232810974121094, -0.0001049041748046875, -3.4332275390625e-05, -0.000576019287109375, -1.1444091796875e-05, -0.0009410381317138672, -1.1920928244535389e-07, -0.0020542144775390625, -0.0051860809326171875, -0.0004482269287109375, -0.02867889404296875, -6.318092346191406e-06, -0.025571823120117188, -0.00012969970703125, -7.62939453125e-06, -5.7220458984375e-06, -0.00013947486877441406, -0.00013077259063720703, -2.0265579223632812e-06, -0.0006847381591796875, -0.000553131103515625, 0.0, -0.01007385179400444, -0.00048047309974208474, -0.023357391357421875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -1.8057750463485718, -1.0013547580456361e-05, -0.0008697509765625, -0.04769134521484375, -0.000152587890625, -0.07599590718746185, -0.0007278916891664267], "choice_history": [55, 124, 221, 63, 103, "Flametongue", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 72, 145, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent())), Buff(Adjacent())])\n"}, {"score": -3.471425391750806, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Flametongue Totem", "hole2": "SHAMAN", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}, {"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}, "_type": "Template10", "hole0": 0, "hole1": 3}], "_type": "ClassDef", "name": "FlametongueTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -3.45700973412022e-05, -0.0011173223610967398, -0.009875833056867123, -7.62939453125e-06, -4.57763671875e-05, -3.814697265625e-06, -5.722029527532868e-06, -0.0010399818420410156, -4.768370445162873e-07, -7.43865966796875e-05, -0.0027790069580078125, -4.1961669921875e-05, -5.364284152165055e-05, -2.562999725341797e-05, -0.0003091096878051758, -0.00086212158203125, -0.00011872626782860607, 0.0, -0.47086429595947266, 0.0, -0.02287578582763672, -2.861022494471399e-06, -0.0001583099365234375, 0.0, -1.9073486328125e-05, 0.0, -0.0002841949462890625, 0.0, -0.024877548217773438, 0.0, -0.0029010772705078125, -3.62396240234375e-05, -9.107174992095679e-05, -9.214453893946484e-05, -0.00013804103946313262, -5.602820692729438e-06, -0.0010083912638947368, -3.111330443061888e-05, -0.00012969970703125, -0.000408172607421875, -0.0485992431640625, -0.00011444091796875, -4.00543212890625e-05, -0.001529693603515625, -9.5367431640625e-06, -0.000988602638244629, -1.1920928244535389e-07, -0.00222015380859375, -0.005257606506347656, -0.0004634857177734375, -0.027494430541992188, -6.318092346191406e-06, -0.02107524871826172, -0.00012969970703125, -7.62939453125e-06, -5.7220458984375e-06, -0.00014710426330566406, -0.00012886524200439453, -2.0265579223632812e-06, -0.00067901611328125, -0.0005245208740234375, 0.0, -0.009930230677127838, -0.0004832139820791781, -0.0227508544921875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -1.699241042137146, -7.62939453125e-06, -0.03416728973388672, -0.9371337890625, -0.0004444122314453125, -0.022581662982702255, -0.00044357776641845703, -0.045986175537109375, -0.00011444091796875, -0.04827078431844711, -9.179114385915454e-06, 0.0], "choice_history": [55, 124, 221, 63, 103, "Flametongue", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 72, 145, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "Adjacent", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent())), Aura(Adjacent(), SelfSelector())])\n"}, {"score": -3.656154094160108, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Flametongue Totem", "hole2": "SHAMAN", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}, {"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template36", "hole0": 1}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}]}, "_type": "Template10", "hole0": 0, "hole1": 3}], "_type": "ClassDef", "name": "FlametongueTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -3.45700973412022e-05, -0.0011173223610967398, -0.009875833056867123, -7.62939453125e-06, -4.57763671875e-05, -3.814697265625e-06, -5.722029527532868e-06, -0.0010399818420410156, -4.768370445162873e-07, -7.43865966796875e-05, -0.0027790069580078125, -4.1961669921875e-05, -5.364284152165055e-05, -2.562999725341797e-05, -0.0003091096878051758, -0.00086212158203125, -0.00011872626782860607, 0.0, -0.47086429595947266, 0.0, -0.02287578582763672, -2.861022494471399e-06, -0.0001583099365234375, 0.0, -1.9073486328125e-05, 0.0, -0.0002841949462890625, 0.0, -0.024877548217773438, 0.0, -0.0029010772705078125, -3.62396240234375e-05, -9.107174992095679e-05, -9.214453893946484e-05, -0.00013804103946313262, -5.602820692729438e-06, -0.0010083912638947368, -3.111330443061888e-05, -0.00012969970703125, -0.000408172607421875, -0.0485992431640625, -0.00011444091796875, -4.00543212890625e-05, -0.001529693603515625, -9.5367431640625e-06, -0.000988602638244629, -1.1920928244535389e-07, -0.00222015380859375, -0.005257606506347656, -0.0004634857177734375, -0.027494430541992188, -6.318092346191406e-06, -0.02107524871826172, -0.00012969970703125, -7.62939453125e-06, -5.7220458984375e-06, -0.00014710426330566406, -0.00012886524200439453, -2.0265579223632812e-06, -0.00067901611328125, -0.0005245208740234375, 0.0, -0.009930230677127838, -0.0004832139820791781, -0.0227508544921875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -1.699241042137146, -7.62939453125e-06, -0.03416728973388672, -0.9153718948364258, -0.11912822723388672, -0.015243467874825, -1.9311904907226562e-05, -0.13359451293945312, -0.0001163482666015625, -3.814697265625e-05, 0.0, -2.014629171753768e-05, -0.00019681453704833984, -3.933906555175781e-06, -2.09808349609375e-05, -0.03778839111328125, 0.0, -0.01796802133321762, -0.0002025262947427109], "choice_history": [55, 124, 221, 63, 103, "Flametongue", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 72, 145, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 47, 172, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent())), Aura(ChangeHealth(1), MinionSelector(Adjacent()))])\n"}, {"score": -3.6875194226336987, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Flametongue Totem", "hole2": "SHAMAN", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}]}, "_type": "Template10", "hole0": 0, "hole1": 3}], "_type": "ClassDef", "name": "FlametongueTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -3.45700973412022e-05, -0.0011173223610967398, -0.009875833056867123, -7.62939453125e-06, -4.57763671875e-05, -3.814697265625e-06, -5.722029527532868e-06, -0.0010399818420410156, -4.768370445162873e-07, -7.43865966796875e-05, -0.0027790069580078125, -4.1961669921875e-05, -5.364284152165055e-05, -2.562999725341797e-05, -0.0003091096878051758, -0.00086212158203125, -0.00011872626782860607, 0.0, -0.47086429595947266, 0.0, -0.02287578582763672, -2.861022494471399e-06, -0.0001583099365234375, 0.0, -1.9073486328125e-05, 0.0, -0.0002841949462890625, 0.0, -0.024877548217773438, 0.0, -0.0029010772705078125, -3.62396240234375e-05, -9.107174992095679e-05, -9.214453893946484e-05, -0.00013804103946313262, -5.602820692729438e-06, -0.0010083912638947368, -3.111330443061888e-05, -0.00012969970703125, -0.000408172607421875, -3.0686588287353516, -3.0517578125e-05, -3.24249267578125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.002003192901611328, -2.3841855067985307e-07, -0.027024269104003906, -0.012171745300292969, -0.0003643035888671875, -0.018407464027404785, -2.503394853192731e-06, -0.0073299407958984375, -0.00011444091796875, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013959407806396484, -0.00021123886108398438, -2.0265579223632812e-06, -0.0005435943603515625, -0.00072479248046875, 0.0, -0.008796386420726776, -0.0004995334311388433], "choice_history": [55, 124, 221, 63, 103, "Flametongue", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 72, 145, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score": -3.6936885046375707, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Flametongue Totem", "hole2": "SHAMAN", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}, {"_type": "Call", "func": {"id": "Choice", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}, {"_type": "Call", "func": {"id": "Transform", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}, "_type": "Template10", "hole0": 0, "hole1": 3}], "_type": "ClassDef", "name": "FlametongueTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -3.45700973412022e-05, -0.0011173223610967398, -0.009875833056867123, -7.62939453125e-06, -4.57763671875e-05, -3.814697265625e-06, -5.722029527532868e-06, -0.0010399818420410156, -4.768370445162873e-07, -7.43865966796875e-05, -0.0027790069580078125, -4.1961669921875e-05, -5.364284152165055e-05, -2.562999725341797e-05, -0.0003091096878051758, -0.00086212158203125, -0.00011872626782860607, 0.0, -0.47086429595947266, 0.0, -0.02287578582763672, -2.861022494471399e-06, -0.0001583099365234375, 0.0, -1.9073486328125e-05, 0.0, -0.0002841949462890625, 0.0, -0.024877548217773438, 0.0, -0.0029010772705078125, -3.62396240234375e-05, -9.107174992095679e-05, -9.214453893946484e-05, -0.00013804103946313262, -5.602820692729438e-06, -0.0010083912638947368, -3.111330443061888e-05, -0.00012969970703125, -0.000408172607421875, -0.0485992431640625, -0.00011444091796875, -4.00543212890625e-05, -0.001529693603515625, -9.5367431640625e-06, -0.000988602638244629, -1.1920928244535389e-07, -0.00222015380859375, -0.005257606506347656, -0.0004634857177734375, -0.027494430541992188, -6.318092346191406e-06, -0.02107524871826172, -0.00012969970703125, -7.62939453125e-06, -5.7220458984375e-06, -0.00014710426330566406, -0.00012886524200439453, -2.0265579223632812e-06, -0.00067901611328125, -0.0005245208740234375, 0.0, -0.009930230677127838, -0.0004832139820791781, -0.0227508544921875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -1.9977115392684937, -2.503394853192731e-06, -0.21968555450439453, -0.006560325622558594, -8.7738037109375e-05, -0.005541339982300997, -0.0008209935622289777, -0.305206298828125, -0.0001888275146484375, -7.62939453125e-06, 0.0, -0.4401240348815918, -2.2649765014648438e-06, -3.0517578125e-05, -0.0012912750244140625, -1.1444091796875e-05, -0.0019155206391587853, -0.008597591891884804, -0.0002384185791015625, -1.71661376953125e-05, -0.022599700838327408, -2.205370765295811e-05, -3.576278118089249e-07], "choice_history": [55, 124, 221, 63, 103, "Flametongue", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 72, 145, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Transform", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent())), Choice(Adjacent(), Transform(Adjacent()),\n            SelfSelector())])\n"}, {"score": -3.754814077186289, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Flametongue Totem", "hole2": "SHAMAN", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}]}, "_type": "Template10", "hole0": 0, "hole1": 3}], "_type": "ClassDef", "name": "FlametongueTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -3.45700973412022e-05, -0.0011173223610967398, -0.009875833056867123, -7.62939453125e-06, -4.57763671875e-05, -3.814697265625e-06, -5.722029527532868e-06, -0.0010399818420410156, -4.768370445162873e-07, -7.43865966796875e-05, -0.0027790069580078125, -4.1961669921875e-05, -5.364284152165055e-05, -2.562999725341797e-05, -0.0003091096878051758, -0.00086212158203125, -0.00011872626782860607, 0.0, -0.47086429595947266, 0.0, -0.02287578582763672, -2.861022494471399e-06, -0.0001583099365234375, 0.0, -1.9073486328125e-05, 0.0, -0.0002841949462890625, 0.0, -0.024877548217773438, 0.0, -0.0029010772705078125, -3.62396240234375e-05, -9.107174992095679e-05, -9.214453893946484e-05, -0.00013804103946313262, -5.602820692729438e-06, -0.0010083912638947368, -3.111330443061888e-05, -0.00012969970703125, -0.000408172607421875, -0.0485992431640625, -0.00011444091796875, -4.00543212890625e-05, -0.001529693603515625, -9.5367431640625e-06, -0.000988602638244629, -1.1920928244535389e-07, -0.00222015380859375, -0.005257606506347656, -0.0004634857177734375, -0.027494430541992188, -6.318092346191406e-06, -0.02107524871826172, -0.00012969970703125, -7.62939453125e-06, -5.7220458984375e-06, -0.00014710426330566406, -0.00012886524200439453, -2.0265579223632812e-06, -0.00067901611328125, -0.0005245208740234375, 0.0, -0.009930230677127838, -0.0004832139820791781, -0.0227508544921875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.9180015325546265, -0.007701992988586426, 0.0, -0.11139488220214844, -0.009595870971679688, 0.0, -9.5367431640625e-06, 0.0, -1.3895013332366943, -0.009990811347961426, -2.3841855067985307e-07, -0.008302688598632812, -0.02274322509765625, 0.0, -1.33514404296875e-05, 0.0, -0.5290895700454712, -8.058547973632812e-05, -9.536738616588991e-07, -0.00072479248046875, -3.4332275390625e-05, -9.72747802734375e-05, -1.71661376953125e-05, -1.1444091796875e-05, -0.000820159912109375, 0.0, -0.06364917755126953, -7.748603820800781e-06], "choice_history": [55, 124, 221, 63, 103, "Flametongue", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 72, 145, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent())), MinionSelector(MinionSelector(IsType(MINION_TYPE.\n            BEAST)))])\n"}, {"score": -4.055286123288958, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Flametongue Totem", "hole2": "PALADIN", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}, {"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}, "_type": "Template10", "hole0": 0, "hole1": 3}], "_type": "ClassDef", "name": "FlametongueTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -3.45700973412022e-05, -0.0011173223610967398, -0.009875833056867123, -7.62939453125e-06, -4.57763671875e-05, -3.814697265625e-06, -5.722029527532868e-06, -0.0010399818420410156, -4.768370445162873e-07, -7.43865966796875e-05, -0.0027790069580078125, -4.1961669921875e-05, -5.364284152165055e-05, -2.562999725341797e-05, -0.0003091096878051758, -0.00086212158203125, -0.00011872626782860607, 0.0, -1.0891056060791016, -1.9073486328125e-06, -0.015668034553527832, -4.291534423828125e-06, -0.000514984130859375, 0.0, -2.09808349609375e-05, 0.0, -0.0004711151123046875, 0.0, -0.022857666015625, 0.0, -0.0032110214233398438, -3.0517578125e-05, -8.201262971851975e-05, -9.035655966727063e-05, -0.00011574966629268602, -5.722029527532868e-06, -0.0010154246119782329, -3.075568383792415e-05, -0.00011444091796875, -0.0004062652587890625, -0.05232810974121094, -0.0001049041748046875, -3.4332275390625e-05, -0.000576019287109375, -1.1444091796875e-05, -0.0009410381317138672, -1.1920928244535389e-07, -0.0020542144775390625, -0.0051860809326171875, -0.0004482269287109375, -0.02867889404296875, -6.318092346191406e-06, -0.025571823120117188, -0.00012969970703125, -7.62939453125e-06, -5.7220458984375e-06, -0.00013947486877441406, -0.00013077259063720703, -2.0265579223632812e-06, -0.0006847381591796875, -0.000553131103515625, 0.0, -0.01007385179400444, -0.00048047309974208474, -0.023357391357421875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -1.6769880056381226, -7.62939453125e-06, -0.03289508819580078, -0.9279975891113281, -0.0004482269287109375, -0.02251475304365158, -0.00043976306915283203, -0.043125152587890625, -0.000110626220703125, -0.048982854932546616, -9.179114385915454e-06, 0.0], "choice_history": [55, 124, 221, 63, 103, "Flametongue", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 72, 145, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "Adjacent", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent())), Aura(Adjacent(), SelfSelector())])\n"}, {"score": -4.219104793668151, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Flametongue Totem", "hole2": "PALADIN", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}]}, "_type": "Template10", "hole0": 0, "hole1": 3}], "_type": "ClassDef", "name": "FlametongueTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -3.45700973412022e-05, -0.0011173223610967398, -0.009875833056867123, -7.62939453125e-06, -4.57763671875e-05, -3.814697265625e-06, -5.722029527532868e-06, -0.0010399818420410156, -4.768370445162873e-07, -7.43865966796875e-05, -0.0027790069580078125, -4.1961669921875e-05, -5.364284152165055e-05, -2.562999725341797e-05, -0.0003091096878051758, -0.00086212158203125, -0.00011872626782860607, 0.0, -1.0891056060791016, -1.9073486328125e-06, -0.015668034553527832, -4.291534423828125e-06, -0.000514984130859375, 0.0, -2.09808349609375e-05, 0.0, -0.0004711151123046875, 0.0, -0.022857666015625, 0.0, -0.0032110214233398438, -3.0517578125e-05, -8.201262971851975e-05, -9.035655966727063e-05, -0.00011574966629268602, -5.722029527532868e-06, -0.0010154246119782329, -3.075568383792415e-05, -0.00011444091796875, -0.0004062652587890625, -2.9943437576293945, -3.0517578125e-05, -3.4332275390625e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0019979476928710938, -2.3841855067985307e-07, -0.023543357849121094, -0.011498451232910156, -0.0003643035888671875, -0.018431782722473145, -2.503394853192731e-06, -0.0074748992919921875, -0.00011444091796875, -1.1444091796875e-05, -5.7220458984375e-06, -0.00013005733489990234, -0.00021696090698242188, -2.0265579223632812e-06, -0.00054168701171875, -0.0007457733154296875, 0.0, -0.008859241381287575, -0.0004926212131977081], "choice_history": [55, 124, 221, 63, 103, "Flametongue", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 72, 145, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"score": -4.31163961152884, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Flametongue Totem", "hole2": "PALADIN", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}, {"_type": "Call", "func": {"id": "Choice", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}, {"_type": "Call", "func": {"id": "Transform", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}, "_type": "Template10", "hole0": 0, "hole1": 3}], "_type": "ClassDef", "name": "FlametongueTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -3.45700973412022e-05, -0.0011173223610967398, -0.009875833056867123, -7.62939453125e-06, -4.57763671875e-05, -3.814697265625e-06, -5.722029527532868e-06, -0.0010399818420410156, -4.768370445162873e-07, -7.43865966796875e-05, -0.0027790069580078125, -4.1961669921875e-05, -5.364284152165055e-05, -2.562999725341797e-05, -0.0003091096878051758, -0.00086212158203125, -0.00011872626782860607, 0.0, -1.0891056060791016, -1.9073486328125e-06, -0.015668034553527832, -4.291534423828125e-06, -0.000514984130859375, 0.0, -2.09808349609375e-05, 0.0, -0.0004711151123046875, 0.0, -0.022857666015625, 0.0, -0.0032110214233398438, -3.0517578125e-05, -8.201262971851975e-05, -9.035655966727063e-05, -0.00011574966629268602, -5.722029527532868e-06, -0.0010154246119782329, -3.075568383792415e-05, -0.00011444091796875, -0.0004062652587890625, -0.05232810974121094, -0.0001049041748046875, -3.4332275390625e-05, -0.000576019287109375, -1.1444091796875e-05, -0.0009410381317138672, -1.1920928244535389e-07, -0.0020542144775390625, -0.0051860809326171875, -0.0004482269287109375, -0.02867889404296875, -6.318092346191406e-06, -0.025571823120117188, -0.00012969970703125, -7.62939453125e-06, -5.7220458984375e-06, -0.00013947486877441406, -0.00013077259063720703, -2.0265579223632812e-06, -0.0006847381591796875, -0.000553131103515625, 0.0, -0.01007385179400444, -0.00048047309974208474, -0.023357391357421875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -2.0008041858673096, -2.503394853192731e-06, -0.22249698638916016, -0.006394386291503906, -8.7738037109375e-05, -0.005536696873605251, -0.0008119337144307792, -0.29578685760498047, -0.0001888275146484375, -7.62939453125e-06, 0.0, -0.44303083419799805, -2.2649765014648438e-06, -3.0517578125e-05, -0.001308441162109375, -1.1444091796875e-05, -0.00191123120021075, -0.008640863932669163, -0.0002422332763671875, -1.71661376953125e-05, -0.02253720350563526, -2.205370765295811e-05, -3.576278118089249e-07], "choice_history": [55, 124, 221, 63, 103, "Flametongue", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 72, 145, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Transform", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent())), Choice(Adjacent(), Transform(Adjacent()),\n            SelfSelector())])\n"}, {"score": -4.696098018455068, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Flametongue Totem", "hole2": "SHAMAN", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}]}]}, "_type": "Template10", "hole0": 0, "hole1": 3}], "_type": "ClassDef", "name": "FlametongueTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -3.45700973412022e-05, -0.0011173223610967398, -0.009875833056867123, -7.62939453125e-06, -4.57763671875e-05, -3.814697265625e-06, -5.722029527532868e-06, -0.0010399818420410156, -4.768370445162873e-07, -7.43865966796875e-05, -0.0027790069580078125, -4.1961669921875e-05, -5.364284152165055e-05, -2.562999725341797e-05, -0.0003091096878051758, -0.00086212158203125, -0.00011872626782860607, 0.0, -0.47086429595947266, 0.0, -0.02287578582763672, -2.861022494471399e-06, -0.0001583099365234375, 0.0, -1.9073486328125e-05, 0.0, -0.0002841949462890625, 0.0, -0.024877548217773438, 0.0, -0.0029010772705078125, -3.62396240234375e-05, -9.107174992095679e-05, -9.214453893946484e-05, -0.00013804103946313262, -5.602820692729438e-06, -0.0010083912638947368, -3.111330443061888e-05, -0.00012969970703125, -0.000408172607421875, -0.0485992431640625, -0.00011444091796875, -4.00543212890625e-05, -0.001529693603515625, -9.5367431640625e-06, -0.000988602638244629, -1.1920928244535389e-07, -0.00222015380859375, -0.005257606506347656, -0.0004634857177734375, -0.027494430541992188, -6.318092346191406e-06, -0.02107524871826172, -0.00012969970703125, -7.62939453125e-06, -5.7220458984375e-06, -0.00014710426330566406, -0.00012886524200439453, -2.0265579223632812e-06, -0.00067901611328125, -0.0005245208740234375, 0.0, -0.009930230677127838, -0.0004832139820791781, -0.0227508544921875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.9180015325546265, -0.007701992988586426, 0.0, -0.11139488220214844, -0.009595870971679688, 0.0, -9.5367431640625e-06, 0.0, -1.3895013332366943, -0.009990811347961426, -2.3841855067985307e-07, -0.008302688598632812, -0.02274322509765625, 0.0, -1.33514404296875e-05, 0.0, -0.9290386438369751, -0.00618433952331543, -2.3841855067985307e-07, -0.0036106109619140625, -0.0797882080078125, 0.0, -1.52587890625e-05, 0.0, -0.45052409172058105, -8.428096771240234e-05, -1.0728830375228426e-06, -0.0007686614990234375, -2.47955322265625e-05, -9.34600830078125e-05, -1.71661376953125e-05, -1.1444091796875e-05, -0.0006885528564453125, 0.0, -0.06495857238769531, -7.748603820800781e-06], "choice_history": [55, 124, 221, 63, 103, "Flametongue", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 72, 145, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent())), MinionSelector(MinionSelector(MinionSelector(\n            IsType(MINION_TYPE.BEAST))))])\n"}, {"score": -4.799164164690744, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Flametongue Totem", "hole2": "SHAMAN", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}, {"_type": "Template38", "hole0": "SelfSelector"}]}, "_type": "Template10", "hole0": 0, "hole1": 3}], "_type": "ClassDef", "name": "FlametongueTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -3.45700973412022e-05, -0.0011173223610967398, -0.009875833056867123, -7.62939453125e-06, -4.57763671875e-05, -3.814697265625e-06, -5.722029527532868e-06, -0.0010399818420410156, -4.768370445162873e-07, -7.43865966796875e-05, -0.0027790069580078125, -4.1961669921875e-05, -5.364284152165055e-05, -2.562999725341797e-05, -0.0003091096878051758, -0.00086212158203125, -0.00011872626782860607, 0.0, -0.47086429595947266, 0.0, -0.02287578582763672, -2.861022494471399e-06, -0.0001583099365234375, 0.0, -1.9073486328125e-05, 0.0, -0.0002841949462890625, 0.0, -0.024877548217773438, 0.0, -0.0029010772705078125, -3.62396240234375e-05, -9.107174992095679e-05, -9.214453893946484e-05, -0.00013804103946313262, -5.602820692729438e-06, -0.0010083912638947368, -3.111330443061888e-05, -0.00012969970703125, -0.000408172607421875, -0.0485992431640625, -0.00011444091796875, -4.00543212890625e-05, -0.001529693603515625, -9.5367431640625e-06, -0.000988602638244629, -1.1920928244535389e-07, -0.00222015380859375, -0.005257606506347656, -0.0004634857177734375, -0.027494430541992188, -6.318092346191406e-06, -0.02107524871826172, -0.00012969970703125, -7.62939453125e-06, -5.7220458984375e-06, -0.00014710426330566406, -0.00012886524200439453, -2.0265579223632812e-06, -0.00067901611328125, -0.0005245208740234375, 0.0, -0.009930230677127838, -0.0004832139820791781, -3.806396484375, 0.0, -0.33242982625961304, -8.332715515280142e-05, -9.536738616588991e-07], "choice_history": [55, 124, 221, 63, 103, "Flametongue", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 72, 145, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent())), SelfSelector()])\n"}, {"score": -21.46715545654297, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.4332275390625e-05, -7.62939453125e-06, -21.467113494873047], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 34}
{"beams": [{"score": -0.9885322516482091, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Frog", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 0, "hole1": 1}], "_type": "ClassDef", "name": "Frog", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -7.152531907195225e-06, -0.0006680639344267547, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.0967240996251348e-05, -0.00012099735613446683, -1.060962586052483e-05, -2.288818359375e-05, -0.25918102264404297, -0.000743865966796875, -7.080780778778717e-05, -0.0010293230880051851, -0.6530183553695679, -1.1920928244535389e-07, -0.00016426731599494815, 0.0, -0.00012122917542001233, -5.960462772236497e-07, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -0.053903818130493164, -6.198873961693607e-06, -0.008636474609375, -4.00543212890625e-05, -1.8477303456165828e-05, -4.529942543740617e-06, -0.0005555152893066406, -1.311301275563892e-06, -0.009731882251799107, -3.933898824470816e-06, -4.00543212890625e-05, -1.9073486328125e-05, -6.103515625e-05, -1.1444091796875e-05], "choice_history": [55, 124, 221, 63, 103, "Frog", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Frog", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -1.0824136763615613, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Frog", "hole2": "ALL", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 0, "hole1": 1}], "_type": "ClassDef", "name": "Frog", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -7.152531907195225e-06, -0.0006680639344267547, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.0967240996251348e-05, -0.00012099735613446683, -1.060962586052483e-05, -2.288818359375e-05, -0.25918102264404297, -0.000743865966796875, -7.080780778778717e-05, -0.0010293230880051851, -0.734967052936554, 0.0, -8.97636273293756e-05, 0.0, -0.00016270835476461798, -5.960462772236497e-07, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.1920928244535389e-07, -0.06608235836029053, -6.198873961693607e-06, -0.00860595703125, -4.00543212890625e-05, -1.788126610335894e-05, -4.768360213347478e-06, -0.0005439519882202148, -1.311301275563892e-06, -0.00956153217703104, -4.0531076592742465e-06, -4.00543212890625e-05, -1.71661376953125e-05, -6.103515625e-05, -1.1444091796875e-05], "choice_history": [55, 124, 221, 63, 103, "Frog", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Frog", "<EOS>", "0", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -1.5518467821726318, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 0, "hole1": 1}], "_type": "ClassDef", "name": "Frog", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -7.152531907195225e-06, -0.0006680639344267547, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.0967240996251348e-05, -0.00012099735613446683, -1.060962586052483e-05, -2.288818359375e-05, -1.4809608459472656, -0.0003261566162109375, -1.3947486877441406e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.6702880859375e-05, -2.288818359375e-05, -5.1498107495717704e-05, -2.2649508537142538e-05, -0.0001354217529296875, -0.008884429931640625, -1.9073486328125e-06, -5.53131103515625e-05, -0.0006809234619140625, -5.340576171875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.871571657829918e-05, -1.9431114196777344e-05, -4.732604429591447e-05, -2.264974000354414e-06, -0.0002841949462890625, -9.918212890625e-05, -1.9073486328125e-06, -2.2649765014648438e-06, -2.2530530259246007e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.009936452843248844, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0001506805419921875, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841830625315197e-06, -0.0031741857528686523, -2.622604142743512e-06, 0.0, -0.003154754638671875, -2.6702880859375e-05, -1.33514404296875e-05, -6.103515625e-05, -0.0005403488758020103, -0.0005630254745483398, -2.872907862183638e-05, -9.1552734375e-05, -2.86102294921875e-05, -4.720687138615176e-05, -1.1920928244535389e-07, -3.814697265625e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -2.1457672119140625e-06, -3.4332275390625e-05, -9.5367431640625e-06, -0.0001354217529296875, -1.9073486328125e-06, -2.86102294921875e-05, -1.1920928244535389e-07, -0.018846631050109863, -8.70227722771233e-06, -0.013256072998046875, -9.5367431640625e-05, -0.00036781426751986146, -1.0728830375228426e-06, -0.0015054940013214946, -5.960462772236497e-07, -0.006494997069239616, -5.960462772236497e-07, -0.0001850128173828125, -1.71661376953125e-05, -4.9591064453125e-05, -1.71661376953125e-05], "choice_history": [55, 124, 221, 63, 103, "Frog", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Frog", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -3.944829096425387, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Frog", "hole2": "ALL", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 0, "hole1": 1}], "_type": "ClassDef", "name": "Frog", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -7.152531907195225e-06, -0.0006680639344267547, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.0967240996251348e-05, -0.00012099735613446683, -1.060962586052483e-05, -2.288818359375e-05, -0.25918102264404297, -0.000743865966796875, -7.080780778778717e-05, -0.0010293230880051851, -0.734967052936554, 0.0, -8.97636273293756e-05, 0.0, -0.00016270835476461798, -5.960462772236497e-07, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.1920928244535389e-07, -2.930058717727661, -2.0265579223632812e-06, -0.0067234039306640625, -3.0517578125e-05, -3.409334021853283e-05, -2.753696753643453e-05, -0.0006984472274780273, -2.9802276912960224e-06, -0.009690504521131516, -5.722029527532868e-06, -4.1961669921875e-05, -1.9073486328125e-05, -6.4849853515625e-05, -1.33514404296875e-05], "choice_history": [55, 124, 221, 63, 103, "Frog", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Frog", "<EOS>", "0", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -4.092733317199006, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Frog", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 0, "hole1": 1}], "_type": "ClassDef", "name": "Frog", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -7.152531907195225e-06, -0.0006680639344267547, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.0967240996251348e-05, -0.00012099735613446683, -1.060962586052483e-05, -2.288818359375e-05, -0.25918102264404297, -0.000743865966796875, -7.080780778778717e-05, -0.0010293230880051851, -0.6530183553695679, -1.1920928244535389e-07, -0.00016426731599494815, 0.0, -0.00012122917542001233, -5.960462772236497e-07, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -3.1592915058135986, -2.0265579223632812e-06, -0.0070953369140625, -3.0517578125e-05, -3.457015918684192e-05, -2.706014311115723e-05, -0.0007097721099853516, -3.099436753473128e-06, -0.009896021336317062, -5.722029527532868e-06, -4.1961669921875e-05, -1.9073486328125e-05, -6.4849853515625e-05, -1.33514404296875e-05], "choice_history": [55, 124, 221, 63, 103, "Frog", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Frog", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -6.045840437355864, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Frog", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template31", "hole0": 0, "hole1": 1}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}}], "_type": "ClassDef", "name": "Frog", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -7.152531907195225e-06, -0.0006680639344267547, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.0967240996251348e-05, -0.00012099735613446683, -1.060962586052483e-05, -2.288818359375e-05, -0.25918102264404297, -0.000743865966796875, -7.080780778778717e-05, -0.0010293230880051851, -0.6530183553695679, -1.1920928244535389e-07, -0.00016426731599494815, 0.0, -0.00012122917542001233, -5.960462772236497e-07, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -0.053903818130493164, -6.198873961693607e-06, -4.78327751159668, -1.9073486328125e-06, -0.000499248446431011, -9.035689436132088e-05, -7.62939453125e-06, -0.000209808349609375, -5.7220458984375e-05, -0.0003368695033714175, -0.00028784899041056633, -3.62396240234375e-05, -0.17996835708618164, -5.960462772236497e-07, -0.000415802001953125, -0.08952808380126953, -0.00087738037109375, -2.229192978120409e-05, -0.0006890306831337512, -8.344614798261318e-06, -3.6954811548639555e-06, -0.019766494631767273, -6.878152635181323e-05, -0.0001125335693359375, -5.340576171875e-05, -9.72747802734375e-05, -1.52587890625e-05], "choice_history": [55, 124, 221, 63, 103, "Frog", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Frog", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 81, 167, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -6.138290641543897, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Frog", "hole2": "ALL", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template31", "hole0": 0, "hole1": 1}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}}], "_type": "ClassDef", "name": "Frog", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -7.152531907195225e-06, -0.0006680639344267547, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.0967240996251348e-05, -0.00012099735613446683, -1.060962586052483e-05, -2.288818359375e-05, -0.25918102264404297, -0.000743865966796875, -7.080780778778717e-05, -0.0010293230880051851, -0.734967052936554, 0.0, -8.97636273293756e-05, 0.0, -0.00016270835476461798, -5.960462772236497e-07, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.1920928244535389e-07, -0.06608235836029053, -6.198873961693607e-06, -4.785981178283691, -1.9073486328125e-06, -0.000478506030049175, -0.00010036973981186748, -7.62939453125e-06, -0.0002079010009765625, -5.53131103515625e-05, -0.0003367503231856972, -0.00028272447525523603, -3.62396240234375e-05, -0.1795496940612793, -5.960462772236497e-07, -0.0004253387451171875, -0.08577442169189453, -0.0008716583251953125, -2.229192978120409e-05, -0.00068926892708987, -8.463823178317398e-06, -3.6954811548639555e-06, -0.019605329260230064, -6.842392031103373e-05, -0.0001125335693359375, -5.340576171875e-05, -9.72747802734375e-05, -1.52587890625e-05], "choice_history": [55, 124, 221, 63, 103, "Frog", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Frog", "<EOS>", "0", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 81, 167, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -6.163775003321334, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 0, "hole1": 1}], "_type": "ClassDef", "name": "Frog", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -7.152531907195225e-06, -0.0006680639344267547, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.0967240996251348e-05, -0.00012099735613446683, -1.060962586052483e-05, -2.288818359375e-05, -1.4809608459472656, -0.0003261566162109375, -1.3947486877441406e-05, -8.344646857949556e-07, -1.9073486328125e-06, -2.6702880859375e-05, -2.288818359375e-05, -5.1498107495717704e-05, -2.2649508537142538e-05, -0.0001354217529296875, -0.008884429931640625, -1.9073486328125e-06, -5.53131103515625e-05, -0.0006809234619140625, -5.340576171875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.871571657829918e-05, -1.9431114196777344e-05, -4.732604429591447e-05, -2.264974000354414e-06, -0.0002841949462890625, -9.918212890625e-05, -1.9073486328125e-06, -2.2649765014648438e-06, -2.2530530259246007e-05, -9.5367431640625e-06, -1.9073486328125e-06, -4.61969518661499, -1.9073486328125e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -1.6689286894688848e-06, -0.003990530967712402, -2.9802317840221804e-06, 0.0, -0.0046329498291015625, -2.6702880859375e-05, -1.1444091796875e-05, -5.91278076171875e-05, -0.0005389191792346537, -0.0005801916122436523, -3.90999557566829e-05, -9.34600830078125e-05, -3.0517578125e-05, -5.3405754442792386e-05, -1.1920928244535389e-07, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -2.1457672119140625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001354217529296875, -1.9073486328125e-06, -2.86102294921875e-05, -1.1920928244535389e-07, -0.01870548725128174, -8.70227722771233e-06, -0.013330459594726562, -9.918212890625e-05, -0.0003746066940948367, -1.0728830375228426e-06, -0.0014940499095246196, -5.960462772236497e-07, -0.006497380789369345, -5.960462772236497e-07, -0.000186920166015625, -1.71661376953125e-05, -4.9591064453125e-05, -1.71661376953125e-05], "choice_history": [55, 124, 221, 63, 103, "Frog", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Frog", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -6.449097028092005, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Frog", "hole2": "ALL", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 0, "hole1": 1}], "_type": "ClassDef", "name": "Frog", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -7.152531907195225e-06, -0.0006680639344267547, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.0967240996251348e-05, -0.00012099735613446683, -1.060962586052483e-05, -2.288818359375e-05, -0.25918102264404297, -0.000743865966796875, -7.080780778778717e-05, -0.0010293230880051851, -0.734967052936554, 0.0, -8.97636273293756e-05, 0.0, -0.00016270835476461798, -5.960462772236497e-07, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.1920928244535389e-07, -5.436426639556885, -2.622604142743512e-06, -0.004314422607421875, -5.7220458984375e-05, -1.8834954971680418e-05, -1.4662635294371285e-05, -0.00038552284240722656, -2.7418097943154862e-06, -0.010322432965040207, -4.410734163684538e-06, -2.86102294921875e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.33514404296875e-05], "choice_history": [55, 124, 221, 63, 103, "Frog", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Frog", "<EOS>", "0", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -6.479553176065835, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Frog", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 0, "hole1": 1}], "_type": "ClassDef", "name": "Frog", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -7.152531907195225e-06, -0.0006680639344267547, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.0967240996251348e-05, -0.00012099735613446683, -1.060962586052483e-05, -2.288818359375e-05, -0.25918102264404297, -0.000743865966796875, -7.080780778778717e-05, -0.0010293230880051851, -0.6530183553695679, -1.1920928244535389e-07, -0.00016426731599494815, 0.0, -0.00012122917542001233, -5.960462772236497e-07, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -0.053903818130493164, -6.198873961693607e-06, -0.008636474609375, -4.00543212890625e-05, -1.8477303456165828e-05, -4.529942543740617e-06, -0.0005555152893066406, -1.311301275563892e-06, -5.500518321990967, -1.9073468138230965e-06, -0.0002193450927734375, -6.29425048828125e-05, -6.103515625e-05, -2.47955322265625e-05], "choice_history": [55, 124, 221, 63, 103, "Frog", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Frog", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, charge=True)\n"}, {"score": -6.50777369262623, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Frog", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 0, "hole1": 1}], "_type": "ClassDef", "name": "Frog", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -7.152531907195225e-06, -0.0006680639344267547, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.0967240996251348e-05, -0.00012099735613446683, -1.060962586052483e-05, -2.288818359375e-05, -0.25918102264404297, -0.000743865966796875, -7.080780778778717e-05, -0.0010293230880051851, -0.6530183553695679, -1.1920928244535389e-07, -0.00016426731599494815, 0.0, -0.00012122917542001233, -5.960462772236497e-07, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -5.576600074768066, -2.622604142743512e-06, -0.00449371337890625, -5.7220458984375e-05, -1.9430992324487306e-05, -1.3589766240329482e-05, -0.00037980079650878906, -2.7418097943154862e-06, -0.010570150800049305, -4.291525328881107e-06, -2.86102294921875e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.33514404296875e-05], "choice_history": [55, 124, 221, 63, 103, "Frog", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Frog", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -6.591385612437357, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Frog", "hole2": "ALL", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 0, "hole1": 1}], "_type": "ClassDef", "name": "Frog", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -7.152531907195225e-06, -0.0006680639344267547, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.0967240996251348e-05, -0.00012099735613446683, -1.060962586052483e-05, -2.288818359375e-05, -0.25918102264404297, -0.000743865966796875, -7.080780778778717e-05, -0.0010293230880051851, -0.734967052936554, 0.0, -8.97636273293756e-05, 0.0, -0.00016270835476461798, -5.960462772236497e-07, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.1920928244535389e-07, -0.06608235836029053, -6.198873961693607e-06, -0.00860595703125, -4.00543212890625e-05, -1.788126610335894e-05, -4.768360213347478e-06, -0.0005439519882202148, -1.311301275563892e-06, -5.5182952880859375, -1.9073468138230965e-06, -0.00022125244140625, -6.29425048828125e-05, -6.103515625e-05, -2.47955322265625e-05], "choice_history": [55, 124, 221, 63, 103, "Frog", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Frog", "<EOS>", "0", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, charge=True)\n"}, {"score": -7.049230503835176, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Frog", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "ALL", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 0, "hole1": 1}], "_type": "ClassDef", "name": "Frog", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -7.152531907195225e-06, -0.0006680639344267547, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.0967240996251348e-05, -0.00012099735613446683, -1.060962586052483e-05, -2.288818359375e-05, -0.25918102264404297, -0.000743865966796875, -7.080780778778717e-05, -0.0010293230880051851, -0.6530183553695679, -1.1920928244535389e-07, -0.00016426731599494815, 0.0, -0.00012122917542001233, -5.960462772236497e-07, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -6.117918014526367, -4.172325134277344e-06, -0.007740020751953125, -6.866455078125e-05, -4.70866471005138e-05, -9.298280929215252e-06, -0.00014352798461914062, -1.1920922133867862e-06, -0.007661318406462669, -5.245195097813848e-06, -2.86102294921875e-05, -1.71661376953125e-05, -7.62939453125e-05, -1.1444091796875e-05], "choice_history": [55, 124, 221, 63, 103, "Frog", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Frog", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "ALL", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.ALL)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -7.113545283451508, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Frog", "hole2": "ALL", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "ALL", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 0, "hole1": 1}], "_type": "ClassDef", "name": "Frog", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -7.152531907195225e-06, -0.0006680639344267547, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.0967240996251348e-05, -0.00012099735613446683, -1.060962586052483e-05, -2.288818359375e-05, -0.25918102264404297, -0.000743865966796875, -7.080780778778717e-05, -0.0010293230880051851, -0.734967052936554, 0.0, -8.97636273293756e-05, 0.0, -0.00016270835476461798, -5.960462772236497e-07, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.1920928244535389e-07, -6.100436687469482, -4.172325134277344e-06, -0.0076656341552734375, -7.05718994140625e-05, -4.553699545795098e-05, -9.536697689327411e-06, -0.0001398324966430664, -1.1920922133867862e-06, -0.007615542504936457, -5.245195097813848e-06, -3.0517578125e-05, -1.71661376953125e-05, -7.62939453125e-05, -1.1444091796875e-05], "choice_history": [55, 124, 221, 63, 103, "Frog", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Frog", "<EOS>", "0", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "ALL", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.ALL)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"score": -21.769250869750977, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -21.76924705505371], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 35}
{"beams": [{"score": -0.19951262402170045, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Frost Nova", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Frozen"}]}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -4.827859811484814e-05, -7.510157047363464e-06, 0.0, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.00020039081573486328, -9.775161743164062e-06, -1.1444091796875e-05, -6.4849853515625e-05, -0.0004520416259765625, -0.000164031982421875, -4.911301948595792e-05, -0.00031755800591781735, -7.033347174001392e-06, -1.9073486328125e-06, -0.0003114459686912596, -2.3841855067985307e-07, -0.004874706268310547, 0.0, -0.000408172607421875, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -6.103515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.010919570922851562, -0.0001773834228515625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -3.4332275390625e-05, -2.86102294921875e-05, -2.0861582015641034e-05, 0.0, -2.288818359375e-05, 0.0, -7.62939453125e-06, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000125885009765625, -5.006789251638111e-06, -8.58306884765625e-05, -8.0108642578125e-05, -0.000385284423828125, -1.9073486328125e-06, -0.0003522634506225586, -0.00023553027131129056, -0.05646800994873047, -2.288818359375e-05, -0.0002536773681640625, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0007877349853515625, -1.1920928244535389e-07, -0.0033839941024780273, 0.0, -0.0012573786079883575, 0.0, -0.00035858154296875, -2.288818359375e-05, -9.5367431640625e-06, -0.000423431396484375, -3.0517578125e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.000682830810546875, -7.62939453125e-06, -0.00010347366333007812, -1.5139465176616795e-05, -0.09331393241882324, 0.0, -0.0001392364501953125, -0.0003948211669921875, -0.0001926422119140625, -0.0001201629638671875, -1.9073486328125e-06, -0.005817770957946777, -1.060962586052483e-05, -5.340576171875e-05, -6.4849853515625e-05, -1.33514404296875e-05, -0.015073814429342747, -0.0004907846450805664], "choice_history": [55, 124, 221, 63, 103, "Frost", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Frozen", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n"}, {"score": -3.342762908406172, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Frost Nova", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Frozen"}]}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -4.827859811484814e-05, -7.510157047363464e-06, 0.0, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.00020039081573486328, -9.775161743164062e-06, -1.1444091796875e-05, -6.4849853515625e-05, -0.0004520416259765625, -0.000164031982421875, -4.911301948595792e-05, -0.00031755800591781735, -7.033347174001392e-06, -1.9073486328125e-06, -0.0003114459686912596, -2.3841855067985307e-07, -0.004874706268310547, 0.0, -0.000408172607421875, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -6.103515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.010919570922851562, -0.0001773834228515625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -3.4332275390625e-05, -2.86102294921875e-05, -2.0861582015641034e-05, 0.0, -2.288818359375e-05, 0.0, -7.62939453125e-06, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000125885009765625, -5.006789251638111e-06, -8.58306884765625e-05, -8.0108642578125e-05, -0.000385284423828125, -1.9073486328125e-06, -0.0003522634506225586, -0.00023553027131129056, -2.908082962036133, -0.13217639923095703, -0.000255584716796875, -1.9073486328125e-06, -0.0013427734375, 0.0, -0.00213623046875, -3.576278118089249e-07, -0.0003415346145629883, 0.0, -0.0001926422119140625, -3.62396240234375e-05, -3.814697265625e-06, -0.0001087188720703125, -5.340576171875e-05, -0.000766754150390625, -1.9073486328125e-06, -0.0007495880126953125, -5.841255187988281e-06, -0.004498958587646484, 0.0, -0.00014662655303254724, 0.0, -0.0003719329833984375, -2.6702880859375e-05, -1.9073486328125e-05, -0.00035858154296875, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.0005970001220703125, -3.814697265625e-06, -9.500980377197266e-05, -3.182837463100441e-05, -0.23958313465118408, 0.0, -0.000202178955078125, -0.0003566741943359375, -0.0002956390380859375, -0.0011425018310546875, -1.9073486328125e-06, -0.00940251350402832, -1.430511474609375e-05, -4.57763671875e-05, -0.0001678466796875, -4.57763671875e-05, -0.018394287675619125, -0.0007333755493164062], "choice_history": [55, 124, 221, 63, 103, "Frost", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Frozen", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n"}, {"score": -3.6753624080019662, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Frost Nova", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 3}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -4.827859811484814e-05, -7.510157047363464e-06, 0.0, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.00020039081573486328, -9.775161743164062e-06, -1.1444091796875e-05, -6.4849853515625e-05, -0.0004520416259765625, -0.000164031982421875, -4.911301948595792e-05, -0.00031755800591781735, -7.033347174001392e-06, -1.9073486328125e-06, -0.0003114459686912596, -2.3841855067985307e-07, -0.004874706268310547, 0.0, -0.000408172607421875, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -6.103515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.010919570922851562, -0.0001773834228515625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -3.4332275390625e-05, -2.86102294921875e-05, -2.0861582015641034e-05, 0.0, -2.288818359375e-05, 0.0, -7.62939453125e-06, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000125885009765625, -5.006789251638111e-06, -8.58306884765625e-05, -8.0108642578125e-05, -0.000385284423828125, -1.9073486328125e-06, -0.0003522634506225586, -0.00023553027131129056, -0.05646800994873047, -2.288818359375e-05, -0.0002536773681640625, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0007877349853515625, -1.1920928244535389e-07, -0.0033839941024780273, 0.0, -0.0012573786079883575, 0.0, -0.00035858154296875, -2.288818359375e-05, -9.5367431640625e-06, -0.000423431396484375, -3.0517578125e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.000682830810546875, -7.62939453125e-06, -0.00010347366333007812, -1.5139465176616795e-05, -3.1460587978363037, 0.0, -1.9073486328125e-06, -0.34726905822753906, -0.00014495849609375, -0.09774263203144073, -2.0265579223632812e-06, -1.71661376953125e-05, -3.0517578125e-05, -0.00026607513427734375, -3.933906555175781e-06], "choice_history": [55, 124, 221, 63, 103, "Frost", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(3), self)\n"}, {"score": -4.82916693373496, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Frost Nova", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Num", "n": 3}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -4.827859811484814e-05, -7.510157047363464e-06, 0.0, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.00020039081573486328, -9.775161743164062e-06, -1.1444091796875e-05, -6.4849853515625e-05, -0.0004520416259765625, -0.000164031982421875, -4.911301948595792e-05, -0.00031755800591781735, -7.033347174001392e-06, -1.9073486328125e-06, -0.0003114459686912596, -2.3841855067985307e-07, -0.004874706268310547, 0.0, -0.000408172607421875, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -6.103515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.010919570922851562, -0.0001773834228515625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -3.4332275390625e-05, -2.86102294921875e-05, -2.0861582015641034e-05, 0.0, -2.288818359375e-05, 0.0, -7.62939453125e-06, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000125885009765625, -5.006789251638111e-06, -8.58306884765625e-05, -8.0108642578125e-05, -0.000385284423828125, -1.9073486328125e-06, -0.0003522634506225586, -0.00023553027131129056, -0.05646800994873047, -2.288818359375e-05, -0.0002536773681640625, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0007877349853515625, -1.1920928244535389e-07, -0.0033839941024780273, 0.0, -0.0012573786079883575, 0.0, -0.00035858154296875, -2.288818359375e-05, -9.5367431640625e-06, -0.000423431396484375, -3.0517578125e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.000682830810546875, -7.62939453125e-06, -0.00010347366333007812, -1.5139465176616795e-05, -4.393645286560059, 0.0, -2.6702880859375e-05, -0.0726175308227539, -1.1444091796875e-05, -0.2790406346321106, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frost", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "change_temp_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.change_temp_attack(3)\n"}, {"score": -5.160797223288647, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Frost Nova", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Frost"}]}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -4.827859811484814e-05, -7.510157047363464e-06, 0.0, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.00020039081573486328, -9.775161743164062e-06, -1.1444091796875e-05, -6.4849853515625e-05, -0.0004520416259765625, -0.000164031982421875, -4.911301948595792e-05, -0.00031755800591781735, -7.033347174001392e-06, -1.9073486328125e-06, -0.0003114459686912596, -2.3841855067985307e-07, -0.004874706268310547, 0.0, -0.000408172607421875, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -6.103515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.010919570922851562, -0.0001773834228515625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -3.4332275390625e-05, -2.86102294921875e-05, -2.0861582015641034e-05, 0.0, -2.288818359375e-05, 0.0, -7.62939453125e-06, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000125885009765625, -5.006789251638111e-06, -8.58306884765625e-05, -8.0108642578125e-05, -0.000385284423828125, -1.9073486328125e-06, -0.0003522634506225586, -0.00023553027131129056, -0.05646800994873047, -2.288818359375e-05, -0.0002536773681640625, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0007877349853515625, -1.1920928244535389e-07, -0.0033839941024780273, 0.0, -0.0012573786079883575, 0.0, -0.00035858154296875, -2.288818359375e-05, -9.5367431640625e-06, -0.000423431396484375, -3.0517578125e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.000682830810546875, -7.62939453125e-06, -0.00010347366333007812, -1.5139465176616795e-05, -0.09331393241882324, 0.0, -0.0001392364501953125, -0.0003948211669921875, -0.0001926422119140625, -0.0001201629638671875, -1.9073486328125e-06, -0.005817770957946777, -1.060962586052483e-05, -5.340576171875e-05, -6.4849853515625e-05, -1.33514404296875e-05, -4.588717460632324, -0.3881317377090454], "choice_history": [55, 124, 221, 63, 103, "Frost", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Frost", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frost()))\n"}, {"score": -5.351170706070576, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Frost Nova", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 3}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -4.827859811484814e-05, -7.510157047363464e-06, 0.0, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.00020039081573486328, -9.775161743164062e-06, -1.1444091796875e-05, -6.4849853515625e-05, -0.0004520416259765625, -0.000164031982421875, -4.911301948595792e-05, -0.00031755800591781735, -7.033347174001392e-06, -1.9073486328125e-06, -0.0003114459686912596, -2.3841855067985307e-07, -0.004874706268310547, 0.0, -0.000408172607421875, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -6.103515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.010919570922851562, -0.0001773834228515625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -3.4332275390625e-05, -2.86102294921875e-05, -2.0861582015641034e-05, 0.0, -2.288818359375e-05, 0.0, -7.62939453125e-06, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000125885009765625, -5.006789251638111e-06, -8.58306884765625e-05, -8.0108642578125e-05, -0.000385284423828125, -1.9073486328125e-06, -0.0003522634506225586, -0.00023553027131129056, -2.908082962036133, -0.13217639923095703, -0.000255584716796875, -1.9073486328125e-06, -0.0013427734375, 0.0, -0.00213623046875, -3.576278118089249e-07, -0.0003415346145629883, 0.0, -0.0001926422119140625, -3.62396240234375e-05, -3.814697265625e-06, -0.0001087188720703125, -5.340576171875e-05, -0.000766754150390625, -1.9073486328125e-06, -0.0007495880126953125, -5.841255187988281e-06, -0.004498958587646484, 0.0, -0.00014662655303254724, 0.0, -0.0003719329833984375, -2.6702880859375e-05, -1.9073486328125e-05, -0.00035858154296875, -2.6702880859375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.0005970001220703125, -3.814697265625e-06, -9.500980377197266e-05, -3.182837463100441e-05, -1.7105714082717896, 0.0, 0.0, -0.46578025817871094, -0.0002193450927734375, -0.10197748988866806, -2.0265579223632812e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.00020885467529296875, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Frost", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n"}, {"score": -5.432349855852372, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Frost Nova", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Frozen"}]}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -4.827859811484814e-05, -7.510157047363464e-06, 0.0, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.00020039081573486328, -9.775161743164062e-06, -1.1444091796875e-05, -6.4849853515625e-05, -0.0004520416259765625, -0.000164031982421875, -4.911301948595792e-05, -0.00031755800591781735, -7.033347174001392e-06, -1.9073486328125e-06, -0.0003114459686912596, -2.3841855067985307e-07, -0.004874706268310547, 0.0, -0.000408172607421875, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -6.103515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.010919570922851562, -0.0001773834228515625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -3.4332275390625e-05, -2.86102294921875e-05, -2.0861582015641034e-05, 0.0, -2.288818359375e-05, 0.0, -7.62939453125e-06, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000125885009765625, -5.006789251638111e-06, -8.58306884765625e-05, -8.0108642578125e-05, -0.000385284423828125, -1.9073486328125e-06, -0.0003522634506225586, -0.00023553027131129056, -0.05646800994873047, -2.288818359375e-05, -0.0002536773681640625, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0007877349853515625, -1.1920928244535389e-07, -0.0033839941024780273, 0.0, -0.0012573786079883575, 0.0, -0.00035858154296875, -2.288818359375e-05, -9.5367431640625e-06, -0.000423431396484375, -3.0517578125e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.000682830810546875, -7.62939453125e-06, -0.00010347366333007812, -1.5139465176616795e-05, -5.267487525939941, -2.1457672119140625e-06, -0.000690460205078125, -0.01039886474609375, -0.0157928466796875, -0.02099609375, -1.9073486328125e-06, -0.01834249496459961, -6.198883056640625e-06, -8.0108642578125e-05, -0.0009517669677734375, -1.71661376953125e-05, -0.01336593460291624, -0.0003910064697265625], "choice_history": [55, 124, 221, 63, 103, "Frost", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Frozen", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.<UNK>(Buff(Frozen()))\n"}, {"score": -5.932996667762346, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Frost Nova", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Num", "n": 3}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -4.827859811484814e-05, -7.510157047363464e-06, 0.0, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.00020039081573486328, -9.775161743164062e-06, -1.1444091796875e-05, -6.4849853515625e-05, -0.0004520416259765625, -0.000164031982421875, -4.911301948595792e-05, -0.00031755800591781735, -7.033347174001392e-06, -1.9073486328125e-06, -0.0003114459686912596, -2.3841855067985307e-07, -0.004874706268310547, 0.0, -0.000408172607421875, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -6.103515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.010919570922851562, -0.0001773834228515625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -3.4332275390625e-05, -2.86102294921875e-05, -2.0861582015641034e-05, 0.0, -2.288818359375e-05, 0.0, -7.62939453125e-06, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000125885009765625, -5.006789251638111e-06, -8.58306884765625e-05, -8.0108642578125e-05, -0.000385284423828125, -1.9073486328125e-06, -0.0003522634506225586, -0.00023553027131129056, -0.05646800994873047, -2.288818359375e-05, -0.0002536773681640625, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0007877349853515625, -1.1920928244535389e-07, -0.0033839941024780273, 0.0, -0.0012573786079883575, 0.0, -0.00035858154296875, -2.288818359375e-05, -9.5367431640625e-06, -0.000423431396484375, -3.0517578125e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.000682830810546875, -7.62939453125e-06, -0.00010347366333007812, -1.5139465176616795e-05, -5.584773063659668, 0.0, -0.0002193450927734375, -0.1615762710571289, -9.5367431640625e-06, -0.10259311646223068, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frost", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.change_attack(3)\n"}, {"score": -6.0281479021805, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Frost Nova", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 0}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -4.827859811484814e-05, -7.510157047363464e-06, 0.0, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.00020039081573486328, -9.775161743164062e-06, -1.1444091796875e-05, -6.4849853515625e-05, -0.0004520416259765625, -0.000164031982421875, -4.911301948595792e-05, -0.00031755800591781735, -7.033347174001392e-06, -1.9073486328125e-06, -0.0003114459686912596, -2.3841855067985307e-07, -0.004874706268310547, 0.0, -0.000408172607421875, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -6.103515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.010919570922851562, -0.0001773834228515625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -3.4332275390625e-05, -2.86102294921875e-05, -2.0861582015641034e-05, 0.0, -2.288818359375e-05, 0.0, -7.62939453125e-06, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000125885009765625, -5.006789251638111e-06, -8.58306884765625e-05, -8.0108642578125e-05, -0.000385284423828125, -1.9073486328125e-06, -0.0003522634506225586, -0.00023553027131129056, -0.05646800994873047, -2.288818359375e-05, -0.0002536773681640625, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0007877349853515625, -1.1920928244535389e-07, -0.0033839941024780273, 0.0, -0.0012573786079883575, 0.0, -0.00035858154296875, -2.288818359375e-05, -9.5367431640625e-06, -0.000423431396484375, -3.0517578125e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.000682830810546875, -7.62939453125e-06, -0.00010347366333007812, -1.5139465176616795e-05, -3.1460587978363037, 0.0, -1.9073486328125e-06, -0.34726905822753906, -0.00014495849609375, -2.4156858921051025, -0.03348610922694206, -8.0108642578125e-05, -1.52587890625e-05, -0.0015784502029418945, -2.0265579223632812e-06], "choice_history": [55, 124, 221, 63, 103, "Frost", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "Frost", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(0), self)\n"}, {"score": -6.085159286697454, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Frost Nova", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -4.827859811484814e-05, -7.510157047363464e-06, 0.0, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.00020039081573486328, -9.775161743164062e-06, -1.1444091796875e-05, -6.4849853515625e-05, -0.0004520416259765625, -0.000164031982421875, -4.911301948595792e-05, -0.00031755800591781735, -7.033347174001392e-06, -1.9073486328125e-06, -0.0003114459686912596, -2.3841855067985307e-07, -0.004874706268310547, 0.0, -0.000408172607421875, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -6.103515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.010919570922851562, -0.0001773834228515625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -3.4332275390625e-05, -2.86102294921875e-05, -2.0861582015641034e-05, 0.0, -2.288818359375e-05, 0.0, -7.62939453125e-06, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000125885009765625, -5.006789251638111e-06, -8.58306884765625e-05, -8.0108642578125e-05, -0.000385284423828125, -1.9073486328125e-06, -0.0003522634506225586, -0.00023553027131129056, -0.05646800994873047, -2.288818359375e-05, -0.0002536773681640625, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0007877349853515625, -1.1920928244535389e-07, -0.0033839941024780273, 0.0, -0.0012573786079883575, 0.0, -0.00035858154296875, -2.288818359375e-05, -9.5367431640625e-06, -0.000423431396484375, -3.0517578125e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.000682830810546875, -7.62939453125e-06, -0.00010347366333007812, -1.5139465176616795e-05, -4.393645286560059, 0.0, -2.6702880859375e-05, -0.0726175308227539, -1.1444091796875e-05, -1.5350329875946045, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frost", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "change_temp_attack", "<EOS>", 208, 39, 130, "2", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.change_temp_attack(2)\n"}, {"score": -6.231296761085979, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Frost Nova", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Frozen"}]}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -4.827859811484814e-05, -7.510157047363464e-06, 0.0, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.00020039081573486328, -9.775161743164062e-06, -1.1444091796875e-05, -6.4849853515625e-05, -0.0004520416259765625, -0.000164031982421875, -4.911301948595792e-05, -0.00031755800591781735, -7.033347174001392e-06, -1.9073486328125e-06, -0.0003114459686912596, -2.3841855067985307e-07, -0.004874706268310547, 0.0, -0.000408172607421875, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -6.103515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -4.721578598022461, -6.67572021484375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.38690185546875e-05, -3.755075522349216e-05, 0.0, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.0002346038818359375, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -0.000125885009765625, -6.43729799776338e-06, -0.004464149475097656, -0.0007648468017578125, -0.0014820098876953125, -1.9073486328125e-06, -0.0004863739013671875, -2.0623032469302416e-05, -0.8724298477172852, -5.340576171875e-05, -0.0001010894775390625, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.0005950927734375, -1.1920928244535389e-07, -0.0028314590454101562, 0.0, -0.001314328401349485, 0.0, -0.000225067138671875, -2.09808349609375e-05, -9.5367431640625e-06, -0.0005664825439453125, -3.62396240234375e-05, -1.1444091796875e-05, -3.814697265625e-06, -0.00986480712890625, -1.1444091796875e-05, -0.00013971328735351562, -1.7404405298293568e-05, -0.050753116607666016, 0.0, -0.000133514404296875, -0.0003414154052734375, -0.0002346038818359375, -0.0001049041748046875, -1.9073486328125e-06, -0.006366252899169922, -1.454353241570061e-05, -5.14984130859375e-05, -4.76837158203125e-05, -1.52587890625e-05, -0.015166405588388443, -0.0004831552505493164, -0.0020503997802734375, -4.00543212890625e-05, -6.67572021484375e-05, -0.23500728607177734, -8.392333984375e-05, -0.0001239776611328125, -0.001953125, -1.9073486328125e-06, -0.28955650329589844, -1.4066696166992188e-05, -0.0037709474563598633, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frost", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Frozen", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n        player.draw()\n"}, {"score": -6.311150885959215, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Frost Nova", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -4.827859811484814e-05, -7.510157047363464e-06, 0.0, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.00020039081573486328, -9.775161743164062e-06, -1.1444091796875e-05, -6.4849853515625e-05, -0.0004520416259765625, -0.000164031982421875, -4.911301948595792e-05, -0.00031755800591781735, -7.033347174001392e-06, -1.9073486328125e-06, -0.0003114459686912596, -2.3841855067985307e-07, -0.004874706268310547, 0.0, -0.000408172607421875, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -6.103515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.010919570922851562, -0.0001773834228515625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -3.4332275390625e-05, -2.86102294921875e-05, -2.0861582015641034e-05, 0.0, -2.288818359375e-05, 0.0, -7.62939453125e-06, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000125885009765625, -5.006789251638111e-06, -8.58306884765625e-05, -8.0108642578125e-05, -0.000385284423828125, -1.9073486328125e-06, -0.0003522634506225586, -0.00023553027131129056, -0.05646800994873047, -2.288818359375e-05, -0.0002536773681640625, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0007877349853515625, -1.1920928244535389e-07, -0.0033839941024780273, 0.0, -0.0012573786079883575, 0.0, -0.00035858154296875, -2.288818359375e-05, -9.5367431640625e-06, -0.000423431396484375, -3.0517578125e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.000682830810546875, -7.62939453125e-06, -0.00010347366333007812, -1.5139465176616795e-05, -3.1460587978363037, 0.0, -1.9073486328125e-06, -1.4520235061645508, -0.00011444091796875, -0.04144096374511719, -0.0003509521484375, -9.5367431640625e-06, 0.0, -0.040831565856933594, 0.0, -0.9460110664367676, 0.0, -3.814697265625e-06, -0.05689525604248047, -0.28907203674316406, -0.000213623046875, -3.814697265625e-06, -0.07069778442382812, -1.9073486328125e-06, -0.0042133331298828125, 0.0, -0.08284282684326172, -2.288818359375e-05, -0.009087920188903809, 0.0, -0.0864396020770073, -5.7220458984375e-06, -0.0006694793701171875, -1.9073486328125e-06, -0.0003108978271484375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frost", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_spell_damage", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(game.other_player.\n                minions()), self)\n"}, {"score": -6.376568585172066, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Frost Nova", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Frozen"}]}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -4.827859811484814e-05, -7.510157047363464e-06, 0.0, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.00020039081573486328, -9.775161743164062e-06, -1.1444091796875e-05, -6.4849853515625e-05, -0.0004520416259765625, -0.000164031982421875, -4.911301948595792e-05, -0.00031755800591781735, -7.033347174001392e-06, -1.9073486328125e-06, -0.0003114459686912596, -2.3841855067985307e-07, -0.004874706268310547, 0.0, -0.000408172607421875, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -6.103515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -4.721578598022461, -6.67572021484375e-05, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.38690185546875e-05, -3.755075522349216e-05, 0.0, -1.1563301086425781e-05, 0.0, -9.5367431640625e-06, -0.0002346038818359375, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -0.000125885009765625, -6.43729799776338e-06, -0.004464149475097656, -0.0007648468017578125, -0.0014820098876953125, -1.9073486328125e-06, -0.0004863739013671875, -2.0623032469302416e-05, -0.5424232482910156, -0.21878337860107422, -0.0001220703125, -1.9073486328125e-06, -0.004367828369140625, 0.0, -0.000995635986328125, -4.768370445162873e-07, -0.00020229816436767578, 0.0, -0.0001239776611328125, -3.62396240234375e-05, -5.7220458984375e-06, -0.0001049041748046875, -4.57763671875e-05, -0.00083160400390625, -1.9073486328125e-06, -0.000732421875, -5.841255187988281e-06, -0.004415988922119141, 0.0, -0.000142096629133448, 0.0, -0.000278472900390625, -2.6702880859375e-05, -2.09808349609375e-05, -0.0003185272216796875, -2.47955322265625e-05, -1.1444091796875e-05, -5.7220458984375e-06, -0.0008945465087890625, -3.814697265625e-06, -0.0001016855239868164, -3.0874729418428615e-05, -0.19420909881591797, 0.0, -0.0002117156982421875, -0.0003662109375, -0.0002574920654296875, -0.000885009765625, -1.9073486328125e-06, -0.009592175483703613, -1.430511474609375e-05, -4.76837158203125e-05, -0.0001621246337890625, -5.340576171875e-05, -0.018263675272464752, -0.0006923675537109375, -0.0023956298828125, -3.4332275390625e-05, -0.0001125335693359375, -0.26730918884277344, -8.7738037109375e-05, -0.000118255615234375, -0.0017452239990234375, -1.9073486328125e-06, -0.3643465042114258, -1.2159347534179688e-05, -0.003934383392333984, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frost", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Frozen", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n        player.draw()\n"}, {"score": -7.3902982965423405, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template4", "hole0": "Frost Nova", "hole1": 3}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -4.827859811484814e-05, -7.510157047363464e-06, 0.0, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.00020039081573486328, -9.775161743164062e-06, -1.1444091796875e-05, -6.4849853515625e-05, -0.0004520416259765625, -0.000164031982421875, -4.911301948595792e-05, -0.00031755800591781735, -7.033347174001392e-06, -1.9073486328125e-06, -0.0003114459686912596, -2.3841855067985307e-07, -0.004874706268310547, 0.0, -0.000408172607421875, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -6.103515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.116869926452637, -0.26528072357177734, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -2.47955322265625e-05, -0.000148773193359375, -0.000217437744140625, -0.00011789383279392496, 0.0, -0.00014698505401611328, 0.0, -7.62939453125e-06, -9.918212890625e-05, -2.09808349609375e-05, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, 0.0, -7.2479248046875e-05, -5.960462203802308e-06], "choice_history": [55, 124, 221, 63, 103, "Frost", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n"}, {"score": -23.162830352783203, "model_output": {"_type": "Module", "body": []}, "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -23.162809371948242], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 36}
{"beams": [{"score": -0.3652712115215806, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 1}}, {"_type": "Template25", "hole0": "Frozen"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostShock", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001431601122021675, -3.0397906812140718e-05, -3.099440846199286e-06, -5.7220458984375e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.802776336669922e-05, -6.520748138427734e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.013066291809082031, -7.62939453125e-06, -4.5299530029296875e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -2.4199485778808594e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001583099365234375, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.000194549560546875, 0.0, -0.001010894775390625, -0.000152587890625, -2.288818359375e-05, -1.5497195136049413e-06, -5.185603731661104e-05, -2.503368341422174e-05, 0.0, -1.1444091796875e-05, 0.0, -7.747308700345457e-06, -5.7220458984375e-06, -1.9073486328125e-05, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -5.53131103515625e-05, 0.0, -0.05152130126953125, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -0.000133514404296875, -3.576278118089249e-07, -0.0039653778076171875, 0.0, -0.0003757476806640625, -0.0003299713134765625, -5.7220458984375e-06, -0.00023663043975830078, -2.0265579223632812e-06, -0.0013828277587890625, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -9.918212890625e-05, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -0.009055137634277344, -4.398822784423828e-05, -0.247772216796875, -3.4332275390625e-05, -9.381771087646484e-05, 0.0, -0.0001087188720703125, -1.71661376953125e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -5.924701690673828e-05, 0.0, -0.001953125, -5.7220458984375e-06, -5.7220458984375e-06, -0.000743865966796875, -1.52587890625e-05, -0.0001068115234375, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, -0.000244140625, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.000141143798828125, -2.5153160095214844e-05, -0.0007867813110351562, -0.000209808349609375, -0.005730628967285156, -0.0002002716064453125, -0.00015400777920149267, -0.0010735034011304379, -0.016773223876953125, -0.0009403228759765625, -0.005013823509216309, -4.398822784423828e-05], "choice_history": [55, 124, 221, 63, 103, "Frost", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Frost", " ", "Shock", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "1", "<EOS>", 78, 161, "Frozen", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -1.632378382498949, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "FrostShock", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001431601122021675, -3.0397906812140718e-05, -3.099440846199286e-06, -5.7220458984375e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.802776336669922e-05, -6.520748138427734e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.013066291809082031, -7.62939453125e-06, -4.5299530029296875e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -2.4199485778808594e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001583099365234375, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.000194549560546875, 0.0, -0.001010894775390625, -0.000152587890625, -2.288818359375e-05, -1.5497195136049413e-06, -5.185603731661104e-05, -2.503368341422174e-05, 0.0, -1.1444091796875e-05, 0.0, -7.747308700345457e-06, -5.7220458984375e-06, -1.9073486328125e-05, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -5.53131103515625e-05, 0.0, -0.05152130126953125, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -0.000133514404296875, -3.576278118089249e-07, -0.0039653778076171875, 0.0, -0.0003757476806640625, -0.0003299713134765625, -5.7220458984375e-06, -0.00023663043975830078, -2.0265579223632812e-06, -0.0013828277587890625, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -9.918212890625e-05, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -0.009055137634277344, -4.398822784423828e-05, -1.544656753540039, -4.00543212890625e-05, -1.9073486328125e-06, 0.0, -0.0003185272216796875, -1.1444091796875e-05, -1.9073486328125e-05, -2.3841855067985307e-07, -3.063678741455078e-05, 0.0, -0.0022711753845214844, -3.814697265625e-06, -5.7220458984375e-06, -0.0017728805541992188, -2.6702880859375e-05, -0.00015884177992120385, -8.106231689453125e-06, -0.00011444091796875, -2.288818359375e-05, -0.000232696533203125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frost", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Frost", " ", "Shock", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score": -3.950782309555372, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 1}}, {"_type": "Template25", "hole0": "Frozen"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostShock", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001431601122021675, -3.0397906812140718e-05, -3.099440846199286e-06, -5.7220458984375e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.802776336669922e-05, -6.520748138427734e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.013066291809082031, -7.62939453125e-06, -4.5299530029296875e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -2.4199485778808594e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001583099365234375, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.000194549560546875, 0.0, -0.001010894775390625, -0.000152587890625, -2.288818359375e-05, -1.5497195136049413e-06, -5.185603731661104e-05, -2.503368341422174e-05, 0.0, -1.1444091796875e-05, 0.0, -7.747308700345457e-06, -5.7220458984375e-06, -1.9073486328125e-05, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -5.53131103515625e-05, 0.0, -3.711686134338379, 0.0, -3.0517578125e-05, -0.00029754638671875, -1.71661376953125e-05, -5.7220458984375e-06, -0.000102996826171875, -1.1920928244535389e-07, -0.010232925415039062, 0.0, -0.0006275177001953125, -0.00014495849609375, -5.7220458984375e-06, -0.0002499818801879883, -1.1920928244535389e-07, -0.0012073516845703125, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.012872695922851562, -4.57763671875e-05, -0.1628398895263672, -3.0517578125e-05, -9.381771087646484e-05, 0.0, -0.0001087188720703125, -1.71661376953125e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -4.38690185546875e-05, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -6.115436553955078e-05, 0.0, -0.00197601318359375, -7.62939453125e-06, -5.7220458984375e-06, -0.000743865966796875, -1.52587890625e-05, -0.000110626220703125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, -0.000244140625, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.000141143798828125, -2.5153160095214844e-05, -0.0007944107055664062, -0.0002117156982421875, -0.005702972412109375, -0.0001983642578125, -0.00015424468438141048, -0.0010630241595208645, -0.016783714294433594, -0.0009412765502929688, -0.00501096248626709, -4.398822784423828e-05], "choice_history": [55, 124, 221, 63, 103, "Frost", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Frost", " ", "Shock", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "1", "<EOS>", 78, 161, "Frozen", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -5.510799054674685, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 1}}, {"_type": "Template25", "hole0": "Frozen"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostShock", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001431601122021675, -3.0397906812140718e-05, -3.099440846199286e-06, -5.7220458984375e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.802776336669922e-05, -6.520748138427734e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.013066291809082031, -7.62939453125e-06, -4.5299530029296875e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -2.4199485778808594e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001583099365234375, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.000194549560546875, 0.0, -0.001010894775390625, -0.000152587890625, -2.288818359375e-05, -1.5497195136049413e-06, -5.185603731661104e-05, -2.503368341422174e-05, 0.0, -1.1444091796875e-05, 0.0, -7.747308700345457e-06, -5.7220458984375e-06, -1.9073486328125e-05, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -5.53131103515625e-05, 0.0, -5.249460220336914, 0.0, -7.05718994140625e-05, -0.000255584716796875, -1.9073486328125e-05, -1.33514404296875e-05, -8.976459503173828e-05, -3.576278118089249e-07, -0.009061813354492188, 0.0, -0.0007076263427734375, -0.000213623046875, -3.814697265625e-06, -0.00022327899932861328, -2.0265579223632812e-06, -0.0011138916015625, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.011280059814453125, -4.57763671875e-05, -0.18783283233642578, -3.24249267578125e-05, -9.191036224365234e-05, 0.0, -0.0001068115234375, -1.71661376953125e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -4.57763671875e-05, -9.5367431640625e-06, 0.0, -3.24249267578125e-05, -6.115436553955078e-05, 0.0, -0.001964569091796875, -7.62939453125e-06, -5.7220458984375e-06, -0.000743865966796875, -1.52587890625e-05, -0.0001068115234375, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, -0.000244140625, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.000141143798828125, -2.5153160095214844e-05, -0.0007905960083007812, -0.0002117156982421875, -0.005719184875488281, -0.0002002716064453125, -0.00015388717292807996, -0.0010688591282814741, -0.01677417755126953, -0.0009403228759765625, -0.00501096248626709, -4.398822784423828e-05], "choice_history": [55, 124, 221, 63, 103, "Frost", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Frost", " ", "Shock", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "1", "<EOS>", 78, 161, "Frozen", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -5.683796365577855, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "FrostShock", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001431601122021675, -3.0397906812140718e-05, -3.099440846199286e-06, -5.7220458984375e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.802776336669922e-05, -6.520748138427734e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.013066291809082031, -7.62939453125e-06, -4.5299530029296875e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -2.4199485778808594e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001583099365234375, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.000194549560546875, 0.0, -0.001010894775390625, -0.000152587890625, -2.288818359375e-05, -1.5497195136049413e-06, -5.185603731661104e-05, -2.503368341422174e-05, 0.0, -1.1444091796875e-05, 0.0, -7.747308700345457e-06, -5.7220458984375e-06, -1.9073486328125e-05, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -5.53131103515625e-05, 0.0, -3.711686134338379, 0.0, -3.0517578125e-05, -0.00029754638671875, -1.71661376953125e-05, -5.7220458984375e-06, -0.000102996826171875, -1.1920928244535389e-07, -0.010232925415039062, 0.0, -0.0006275177001953125, -0.00014495849609375, -5.7220458984375e-06, -0.0002499818801879883, -1.1920928244535389e-07, -0.0012073516845703125, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-05, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.012872695922851562, -4.57763671875e-05, -1.9255189895629883, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -0.0003948211669921875, -9.5367431640625e-06, -1.9073486328125e-05, -2.3841855067985307e-07, -3.24249267578125e-05, 0.0, -0.002309441566467285, -3.814697265625e-06, -5.7220458984375e-06, -0.0017642974853515625, -2.6702880859375e-05, -0.00015804357826709747, -7.987022399902344e-06, -0.00011444091796875, -2.288818359375e-05, -0.00023937225341796875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frost", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Frost", " ", "Shock", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score": -6.117070742072642, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Frost Shock", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "index", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "FrostShock", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001431601122021675, -3.0397906812140718e-05, -3.099440846199286e-06, -5.7220458984375e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.802776336669922e-05, -6.520748138427734e-05, -7.62939453125e-06, -1.1444091796875e-05, -4.551226615905762, -0.0004711151123046875, -0.0007552632014267147, -0.0011563230073079467, -2.2649721358902752e-05, 0.0, -6.436595867853612e-06, -1.1920928244535389e-07, -0.420391321182251, -1.1920928244535389e-07, -0.014001846313476562, -0.0004119873046875, -1.9073486328125e-06, -0.0001354217529296875, -0.000560760498046875, 0.0, -3.814697265625e-05, -7.82012939453125e-05, -0.08191967010498047, 0.0, -2.110004425048828e-05, 0.0, -0.9845486879348755, 0.0, -0.059168338775634766, 0.0, -1.9073486328125e-06, -0.00070953369140625, -3.62396240234375e-05, -0.0004208221798762679, -1.2993807104066946e-05, -0.000244140625, -1.1444091796875e-05, -0.00022983551025390625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frost", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Frost", " ", "Shock", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.index.damage(player.effective_spell_damage(1), self)\n"}, {"score": -6.97126710499996, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 1}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "FrostShock", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001431601122021675, -3.0397906812140718e-05, -3.099440846199286e-06, -5.7220458984375e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.802776336669922e-05, -6.520748138427734e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.013066291809082031, -7.62939453125e-06, -4.5299530029296875e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -2.4199485778808594e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001583099365234375, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.000194549560546875, 0.0, -0.001010894775390625, -0.000152587890625, -2.288818359375e-05, -1.5497195136049413e-06, -5.185603731661104e-05, -2.503368341422174e-05, 0.0, -1.1444091796875e-05, 0.0, -7.747308700345457e-06, -5.7220458984375e-06, -1.9073486328125e-05, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -5.53131103515625e-05, 0.0, -0.05152130126953125, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -0.000133514404296875, -3.576278118089249e-07, -0.0039653778076171875, 0.0, -0.0003757476806640625, -0.0003299713134765625, -5.7220458984375e-06, -0.00023663043975830078, -2.0265579223632812e-06, -0.0013828277587890625, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -9.918212890625e-05, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -0.009055137634277344, -4.398822784423828e-05, -0.247772216796875, -3.4332275390625e-05, -9.381771087646484e-05, 0.0, -0.0001087188720703125, -1.71661376953125e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -5.924701690673828e-05, 0.0, -0.001953125, -5.7220458984375e-06, -5.7220458984375e-06, -0.000743865966796875, -1.52587890625e-05, -0.0001068115234375, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, -0.000244140625, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.000141143798828125, -2.5153160095214844e-05, -0.0007867813110351562, -0.000209808349609375, -0.005730628967285156, -0.0002002716064453125, -0.00015400777920149267, -0.0010735034011304379, -4.62225341796875, -1.9073486328125e-06, -0.00356292724609375, -0.017948150634765625, -1.52587890625e-05, -1.1444091796875e-05, -0.003124237060546875, -2.47955322265625e-05, -0.005115509033203125, 0.0, -0.056072235107421875, -1.1920928244535389e-07, -0.007941365242004395, -5.841255187988281e-06, -0.6807284355163574, -5.91278076171875e-05, -5.7220458984375e-06, -0.0074310302734375, -0.029007911682128906, -4.00543212890625e-05, -1.9073486328125e-06, -0.08912277221679688, 0.0, -0.0049648284912109375, 0.0, -0.13423597812652588, -3.814697265625e-06, -0.0005035400390625, -0.04020214080810547, -0.042316436767578125, -1.1444091796875e-05, -2.288818359375e-05, -0.01374053955078125, -3.814697265625e-06, -0.03232574462890625, 0.0, -0.025069236755371094, 0.0, -2.86102294921875e-05, -1.9073486328125e-05, -0.4960036277770996, -7.450580596923828e-05, -0.31473255157470703, -0.0003452301025390625, -0.0016889572143554688, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Frost", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Frost", " ", "Shock", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "1", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_spell_damage", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.hero.heal(player.effective_spell_damage(self.target.<UNK>()),\n            self)\n"}, {"score": -7.056658974684055, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Frost Shock", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "immune", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "FrostShock", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001431601122021675, -3.0397906812140718e-05, -3.099440846199286e-06, -5.7220458984375e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.802776336669922e-05, -6.520748138427734e-05, -7.62939453125e-06, -1.1444091796875e-05, -4.551226615905762, -0.0004711151123046875, -0.0007552632014267147, -0.0011563230073079467, -2.2649721358902752e-05, 0.0, -6.436595867853612e-06, -1.1920928244535389e-07, -0.420391321182251, -1.1920928244535389e-07, -0.014001846313476562, -0.0004119873046875, -1.9073486328125e-06, -0.0001354217529296875, -0.000560760498046875, 0.0, -3.814697265625e-05, -7.82012939453125e-05, -0.08191967010498047, 0.0, -2.110004425048828e-05, 0.0, -1.9698153734207153, -0.00019288063049316406, -0.008665323257446289, -1.9073486328125e-06, -1.9073486328125e-06, -0.0056552886962890625, -1.33514404296875e-05, -0.0002954574883915484, -2.622604142743512e-06, -0.0001125335693359375, -1.33514404296875e-05, -0.000202178955078125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frost", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Frost", " ", "Shock", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.immune.damage(player.effective_spell_damage(1), self)\n"}, {"score": -7.379362441027055, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Frost Shock", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "FrostShock", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001431601122021675, -3.0397906812140718e-05, -3.099440846199286e-06, -5.7220458984375e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.802776336669922e-05, -6.520748138427734e-05, -7.62939453125e-06, -1.1444091796875e-05, -4.551226615905762, -0.0004711151123046875, -0.0007552632014267147, -0.0011563230073079467, -2.2649721358902752e-05, 0.0, -6.436595867853612e-06, -1.1920928244535389e-07, -0.420391321182251, -1.1920928244535389e-07, -0.014001846313476562, -0.0004119873046875, -1.9073486328125e-06, -0.0001354217529296875, -0.000560760498046875, 0.0, -3.814697265625e-05, -7.82012939453125e-05, -0.08191967010498047, 0.0, -2.110004425048828e-05, 0.0, -2.2455430030822754, 0.0, -0.059313297271728516, 0.0, -3.814697265625e-06, -0.00170135498046875, -2.86102294921875e-05, -0.0006297059589996934, -4.768371127283899e-06, -0.000255584716796875, -9.5367431640625e-06, -0.00018596649169921875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frost", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Frost", " ", "Shock", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die.damage(player.effective_spell_damage(1), self)\n"}, {"score": -7.433334937152935, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Frost Shock", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "FrostShock", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001431601122021675, -3.0397906812140718e-05, -3.099440846199286e-06, -5.7220458984375e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.802776336669922e-05, -6.520748138427734e-05, -7.62939453125e-06, -1.1444091796875e-05, -4.551226615905762, -0.0004711151123046875, -0.0007552632014267147, -0.0011563230073079467, -2.2649721358902752e-05, 0.0, -6.436595867853612e-06, -1.1920928244535389e-07, -0.420391321182251, -1.1920928244535389e-07, -0.014001846313476562, -0.0004119873046875, -1.9073486328125e-06, -0.0001354217529296875, -0.000560760498046875, 0.0, -3.814697265625e-05, -7.82012939453125e-05, -0.08191967010498047, 0.0, -2.110004425048828e-05, 0.0, -2.353353977203369, -2.384185791015625e-06, -0.005741593427956104, -1.9073486328125e-06, -1.9073486328125e-06, -0.0015430450439453125, -2.6702880859375e-05, -0.0005550971836782992, -9.536741345073096e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.00025177001953125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frost", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Frost", " ", "Shock", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>.damage(player.effective_spell_damage(1), self)\n"}, {"score": -7.737719057772878, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Frost Shock", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "FrostShock", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001431601122021675, -3.0397906812140718e-05, -3.099440846199286e-06, -5.7220458984375e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.802776336669922e-05, -6.520748138427734e-05, -7.62939453125e-06, -1.1444091796875e-05, -4.551226615905762, -0.0004711151123046875, -0.0007552632014267147, -0.0011563230073079467, -2.2649721358902752e-05, 0.0, -6.436595867853612e-06, -1.1920928244535389e-07, -0.420391321182251, -1.1920928244535389e-07, -0.014001846313476562, -0.0004119873046875, -1.9073486328125e-06, -0.0001354217529296875, -0.000560760498046875, 0.0, -3.814697265625e-05, -7.82012939453125e-05, -2.665421485900879, -2.1457672119140625e-06, -0.0012749433517456055, 0.0, -0.07616662979125977, 0.0, -0.0034273862838745117, -1.9073486328125e-06, -9.5367431640625e-06, -0.000698089599609375, -0.000125885009765625, -0.00040966732194647193, -1.2874597814516164e-05, -0.0001983642578125, -1.33514404296875e-05, -0.00021076202392578125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frost", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Frost", " ", "Shock", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(1), self)\n"}, {"score": -7.905072374217738, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Frost Shock", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "divine_shield", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "FrostShock", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001431601122021675, -3.0397906812140718e-05, -3.099440846199286e-06, -5.7220458984375e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.802776336669922e-05, -6.520748138427734e-05, -7.62939453125e-06, -1.1444091796875e-05, -4.551226615905762, -0.0004711151123046875, -0.0007552632014267147, -0.0011563230073079467, -2.2649721358902752e-05, 0.0, -6.436595867853612e-06, -1.1920928244535389e-07, -0.420391321182251, -1.1920928244535389e-07, -0.014001846313476562, -0.0004119873046875, -1.9073486328125e-06, -0.0001354217529296875, -0.000560760498046875, 0.0, -3.814697265625e-05, -7.82012939453125e-05, -0.08191967010498047, 0.0, -2.110004425048828e-05, 0.0, -2.817471981048584, 0.0, -0.01410984992980957, -1.9073486328125e-06, -5.7220458984375e-06, -0.0010223388671875, -2.288818359375e-05, -0.00025247427402064204, -1.01327859738376e-05, -0.0002346038818359375, -1.52587890625e-05, -0.0002384185791015625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frost", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Frost", " ", "Shock", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield.damage(player.effective_spell_damage(1), self\n            )\n"}, {"score": -8.571431345717194, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Frost Shock", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "index", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "FrostShock", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001431601122021675, -3.0397906812140718e-05, -3.099440846199286e-06, -5.7220458984375e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.802776336669922e-05, -6.520748138427734e-05, -7.62939453125e-06, -1.1444091796875e-05, -4.551226615905762, -0.0004711151123046875, -0.0007552632014267147, -0.0011563230073079467, -2.2649721358902752e-05, 0.0, -6.436595867853612e-06, -1.1920928244535389e-07, -2.794276475906372, -1.6689286894688848e-06, -0.009059906005859375, -0.0003871917724609375, -1.9073486328125e-06, -0.000110626220703125, -0.000194549560546875, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-05, -0.11133956909179688, 0.0, -2.110004425048828e-05, 0.0, -1.0589540004730225, 0.0, -0.04119265079498291, -1.9073486328125e-06, -1.9073486328125e-06, -0.000568389892578125, -4.1961669921875e-05, -0.0004353650729171932, -1.4901155736879446e-05, -0.0003032684326171875, -1.33514404296875e-05, -0.00023937225341796875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frost", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Frost", " ", "Shock", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.index.damage(player.effective_spell_damage(1), self)\n"}, {"score": -8.62927289913408, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "MAGE", "_type": "Template6", "hole0": "Frost Shock", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "FrostShock", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001431601122021675, -3.0397906812140718e-05, -3.099440846199286e-06, -5.7220458984375e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.802776336669922e-05, -6.520748138427734e-05, -7.62939453125e-06, -1.1444091796875e-05, -4.551226615905762, -0.0004711151123046875, -0.0007552632014267147, -0.0011563230073079467, -2.2649721358902752e-05, 0.0, -6.436595867853612e-06, -1.1920928244535389e-07, -0.420391321182251, -1.1920928244535389e-07, -0.014001846313476562, -0.0004119873046875, -1.9073486328125e-06, -0.0001354217529296875, -0.000560760498046875, 0.0, -3.814697265625e-05, -7.82012939453125e-05, -0.08191967010498047, 0.0, -2.110004425048828e-05, 0.0, -3.5178182125091553, -5.9604644775390625e-06, -0.008917570114135742, -1.71661376953125e-05, -9.5367431640625e-06, -0.02941131591796875, -5.340576171875e-05, -0.0006572275888174772, -5.245207830739673e-06, -0.0004138946533203125, -9.5367431640625e-06, -0.0002651214599609375, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Frost", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Frost", " ", "Shock", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff.damage(player.effective_spell_damage(1), self)\n"}, {"score": -22.85645294189453, "model_output": {"_type": "Module", "body": []}, "score_history": [-9.5367431640625e-06, -1.52587890625e-05, -22.856428146362305], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 37}
{"beams": [{"score": -1.0555433072504101, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Frostbolt", "hole2": "MAGE", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}, {"_type": "Template25", "hole0": "Frozen"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Frostbolt", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -0.00026702880859375, -2.47955322265625e-05, -0.0009048675419762731, -8.881091343937442e-05, -0.0023632049560546875, -4.1961669921875e-05, -1.33514404296875e-05, -0.00010561942326603457, -5.865095590706915e-05, -5.7220458984375e-06, -2.09808349609375e-05, -0.0005779266357421875, -0.000141143798828125, -0.00016068121476564556, -2.3841855067985307e-07, -5.789310671389103e-05, 0.0, -0.5518696308135986, -1.1920928244535389e-07, -0.0005253551062196493, 0.0, -0.00152587890625, -3.4332275390625e-05, -2.09808349609375e-05, -7.62939453125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.38581764698028564, -2.6702880859375e-05, -0.0014209747314453125, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.0003833770751953125, -3.24249267578125e-05, -3.814697265625e-06, -2.491474151611328e-05, 0.0, -3.24249267578125e-05, -6.103515625e-05, 0.0, -6.103515625e-05, -7.641315460205078e-05, -3.814697265625e-06, -0.0016527175903320312, -5.7220458984375e-06, -1.9073486328125e-06, -0.0006732940673828125, -2.6702880859375e-05, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -0.0005474090576171875, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.000217437744140625, -1.454353241570061e-05, -0.0009365081787109375, -3.62396240234375e-05, -0.0111846923828125, -0.0005207061767578125, -0.0317302867770195, -8.106027235044166e-05, -0.05602455139160156, -0.0006656646728515625, -0.0032112598419189453, -2.6702880859375e-05], "choice_history": [55, 124, 221, 63, 103, "Frostbolt", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 78, 161, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -1.5167100468888464, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Frostbolt", "hole2": "ROGUE", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}, {"_type": "Template25", "hole0": "Frozen"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Frostbolt", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -0.00026702880859375, -2.47955322265625e-05, -0.0009048675419762731, -8.881091343937442e-05, -0.0023632049560546875, -4.1961669921875e-05, -1.33514404296875e-05, -0.00010561942326603457, -5.865095590706915e-05, -5.7220458984375e-06, -2.09808349609375e-05, -0.0005779266357421875, -0.000141143798828125, -0.00016068121476564556, -2.3841855067985307e-07, -5.789310671389103e-05, 0.0, -0.9649555683135986, -1.9073486328125e-06, -0.0003446339978836477, 0.0, -0.0028085708618164062, -4.00543212890625e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.4324265718460083, -2.6702880859375e-05, -0.001506805419921875, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.0003871917724609375, -2.86102294921875e-05, -3.814697265625e-06, -2.491474151611328e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -5.91278076171875e-05, -7.641315460205078e-05, -3.814697265625e-06, -0.0016450881958007812, -5.7220458984375e-06, -1.9073486328125e-06, -0.000667572021484375, -2.6702880859375e-05, -4.57763671875e-05, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -0.0005474090576171875, -1.9073486328125e-06, -0.000202178955078125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.000217437744140625, -1.454353241570061e-05, -0.0009374618530273438, -3.62396240234375e-05, -0.011176109313964844, -0.0005207061767578125, -0.03173791617155075, -8.106027235044166e-05, -0.056328773498535156, -0.0006656646728515625, -0.0032122135162353516, -2.6702880859375e-05], "choice_history": [55, 124, 221, 63, 103, "Frostbolt", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Frostbolt", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 78, 161, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -1.8391736785042312, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Frostbolt", "hole2": "MAGE", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}, {"_type": "Template25", "hole0": "Frozen"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Frostbolt", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -0.00026702880859375, -2.47955322265625e-05, -0.0009048675419762731, -8.881091343937442e-05, -0.0023632049560546875, -4.1961669921875e-05, -1.33514404296875e-05, -0.00010561942326603457, -5.865095590706915e-05, -5.7220458984375e-06, -2.09808349609375e-05, -0.0005779266357421875, -0.000141143798828125, -0.00016068121476564556, -2.3841855067985307e-07, -5.789310671389103e-05, 0.0, -0.5518696308135986, -1.1920928244535389e-07, -0.0005253551062196493, 0.0, -0.00152587890625, -3.4332275390625e-05, -2.09808349609375e-05, -7.62939453125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1677781343460083, -0.000171661376953125, -0.0010528564453125, -4.1961669921875e-05, -5.53131103515625e-05, 0.0, -0.00054168701171875, -3.4332275390625e-05, -7.62939453125e-06, -5.555152893066406e-05, 0.0, -4.00543212890625e-05, -9.34600830078125e-05, 0.0, -6.4849853515625e-05, -7.641315460205078e-05, -3.814697265625e-06, -0.0015506744384765625, -5.7220458984375e-06, -1.9073486328125e-06, -0.000644683837890625, -2.6702880859375e-05, -4.57763671875e-05, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -0.0005474090576171875, -1.9073486328125e-06, -0.000202178955078125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.0002193450927734375, -1.442432312614983e-05, -0.000919342041015625, -3.62396240234375e-05, -0.010893821716308594, -0.0005130767822265625, -0.03168033808469772, -7.855703734094277e-05, -0.05819988250732422, -0.0006504058837890625, -0.0031549930572509766, -2.6702880859375e-05], "choice_history": [55, 124, 221, 63, 103, "Frostbolt", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 78, 161, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -2.162274245535599, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Frostbolt", "hole2": "ROGUE", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}, {"_type": "Template25", "hole0": "Frozen"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Frostbolt", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -0.00026702880859375, -2.47955322265625e-05, -0.0009048675419762731, -8.881091343937442e-05, -0.0023632049560546875, -4.1961669921875e-05, -1.33514404296875e-05, -0.00010561942326603457, -5.865095590706915e-05, -5.7220458984375e-06, -2.09808349609375e-05, -0.0005779266357421875, -0.000141143798828125, -0.00016068121476564556, -2.3841855067985307e-07, -5.789310671389103e-05, 0.0, -0.9649555683135986, -1.9073486328125e-06, -0.0003446339978836477, 0.0, -0.0028085708618164062, -4.00543212890625e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.0764275789260864, -0.00018310546875, -0.0010585784912109375, -4.38690185546875e-05, -5.53131103515625e-05, 0.0, -0.00055694580078125, -3.0517578125e-05, -7.62939453125e-06, -5.364418029785156e-05, 0.0, -4.00543212890625e-05, -8.7738037109375e-05, 0.0, -6.29425048828125e-05, -7.641315460205078e-05, -3.814697265625e-06, -0.0015439987182617188, -5.7220458984375e-06, -1.9073486328125e-06, -0.0006351470947265625, -2.6702880859375e-05, -4.57763671875e-05, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -0.00054931640625, -1.9073486328125e-06, -0.000202178955078125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.0002193450927734375, -1.442432312614983e-05, -0.0009212493896484375, -3.62396240234375e-05, -0.010882377624511719, -0.0005130767822265625, -0.031689874827861786, -7.867623935453594e-05, -0.058455467224121094, -0.0006504058837890625, -0.003155946731567383, -2.6702880859375e-05], "choice_history": [55, 124, 221, 63, 103, "Frostbolt", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Frostbolt", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 78, 161, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -4.449159033697434, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Frostbolt", "hole2": "MAGE", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 2}}, {"_type": "Template25", "hole0": "Frozen"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Frostbolt", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -0.00026702880859375, -2.47955322265625e-05, -0.0009048675419762731, -8.881091343937442e-05, -0.0023632049560546875, -4.1961669921875e-05, -1.33514404296875e-05, -0.00010561942326603457, -5.865095590706915e-05, -5.7220458984375e-06, -2.09808349609375e-05, -0.0005779266357421875, -0.000141143798828125, -0.00016068121476564556, -2.3841855067985307e-07, -5.789310671389103e-05, 0.0, -0.5518696308135986, -1.1920928244535389e-07, -0.0005253551062196493, 0.0, -0.00152587890625, -3.4332275390625e-05, -2.09808349609375e-05, -7.62939453125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.38581764698028564, -2.6702880859375e-05, -0.0014209747314453125, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.0003833770751953125, -3.24249267578125e-05, -3.814697265625e-06, -2.491474151611328e-05, 0.0, -3.24249267578125e-05, -6.103515625e-05, 0.0, -6.103515625e-05, -7.641315460205078e-05, -3.814697265625e-06, -0.0016527175903320312, -5.7220458984375e-06, -1.9073486328125e-06, -0.0006732940673828125, -2.6702880859375e-05, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -0.0005474090576171875, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.000217437744140625, -1.454353241570061e-05, -0.0009365081787109375, -3.62396240234375e-05, -0.0111846923828125, -0.0005207061767578125, -3.4665517807006836, -0.00010680581908673048, -0.015125274658203125, -0.000835418701171875, -0.002718806266784668, -1.71661376953125e-05], "choice_history": [55, 124, 221, 63, 103, "Frostbolt", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "2", "<EOS>", 78, 161, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -4.459479693569818, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Frostbolt", "hole2": "WARLOCK", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}, {"_type": "Template25", "hole0": "Frozen"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Frostbolt", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -0.00026702880859375, -2.47955322265625e-05, -0.0009048675419762731, -8.881091343937442e-05, -0.0023632049560546875, -4.1961669921875e-05, -1.33514404296875e-05, -0.00010561942326603457, -5.865095590706915e-05, -5.7220458984375e-06, -2.09808349609375e-05, -0.0005779266357421875, -0.000141143798828125, -0.00016068121476564556, -2.3841855067985307e-07, -5.789310671389103e-05, 0.0, -3.942239999771118, 0.0, -0.0001801252074074, 0.0, -0.0022325515747070312, -3.24249267578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.39924728870391846, -2.288818359375e-05, -0.0017414093017578125, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.0003662109375, -3.4332275390625e-05, -3.814697265625e-06, -2.300739288330078e-05, 0.0, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -6.29425048828125e-05, -7.641315460205078e-05, -3.814697265625e-06, -0.0016489028930664062, -5.7220458984375e-06, -1.9073486328125e-06, -0.0006732940673828125, -2.6702880859375e-05, -4.57763671875e-05, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -0.0005474090576171875, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.000217437744140625, -1.454353241570061e-05, -0.0009374618530273438, -3.62396240234375e-05, -0.011178970336914062, -0.0005207061767578125, -0.03173433989286423, -8.09410703368485e-05, -0.05551338195800781, -0.0006656646728515625, -0.0032122135162353516, -2.6702880859375e-05], "choice_history": [55, 124, 221, 63, 103, "Frostbolt", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Frostbolt", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 78, 161, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -4.867575929535597, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Frostbolt", "hole2": "MAGE", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Template33", "hole0": 3}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Frostbolt", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -0.00026702880859375, -2.47955322265625e-05, -0.0009048675419762731, -8.881091343937442e-05, -0.0023632049560546875, -4.1961669921875e-05, -1.33514404296875e-05, -0.00010561942326603457, -5.865095590706915e-05, -5.7220458984375e-06, -2.09808349609375e-05, -0.0005779266357421875, -0.000141143798828125, -0.00016068121476564556, -2.3841855067985307e-07, -5.789310671389103e-05, 0.0, -0.5518696308135986, -1.1920928244535389e-07, -0.0005253551062196493, 0.0, -0.00152587890625, -3.4332275390625e-05, -2.09808349609375e-05, -7.62939453125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.38581764698028564, -2.6702880859375e-05, -0.0014209747314453125, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.0003833770751953125, -3.24249267578125e-05, -3.814697265625e-06, -2.491474151611328e-05, 0.0, -3.24249267578125e-05, -6.103515625e-05, 0.0, -6.103515625e-05, -7.641315460205078e-05, -3.814697265625e-06, -0.0016527175903320312, -5.7220458984375e-06, -1.9073486328125e-06, -0.0006732940673828125, -2.6702880859375e-05, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -0.0005474090576171875, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.000217437744140625, -1.454353241570061e-05, -0.0009365081787109375, -3.62396240234375e-05, -0.0111846923828125, -0.0005207061767578125, -0.0317302867770195, -8.106027235044166e-05, -3.0810585021972656, -1.52587890625e-05, -0.0001392364501953125, -0.005290985107421875, -1.1444091796875e-05, -3.814697265625e-06, -0.00027179718017578125, -3.24249267578125e-05, -0.014347076416015625, 0.0, -0.5938968658447266, 0.0, -0.003809809684753418, -9.655952453613281e-06, -0.15545392036437988, -1.71661376953125e-05, -9.5367431640625e-06, -0.00084686279296875, -0.0003204345703125, -0.013830465264618397, -0.00023031234741210938, -0.0001201629638671875, -1.1444091796875e-05, -0.0022336244583129883, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostbolt", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.hero.damage(player.effective_spell_damage(3), self)\n"}, {"score": -4.909775145612883, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Frostbolt", "hole2": "ROGUE", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 2}}, {"_type": "Template25", "hole0": "Frozen"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Frostbolt", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -0.00026702880859375, -2.47955322265625e-05, -0.0009048675419762731, -8.881091343937442e-05, -0.0023632049560546875, -4.1961669921875e-05, -1.33514404296875e-05, -0.00010561942326603457, -5.865095590706915e-05, -5.7220458984375e-06, -2.09808349609375e-05, -0.0005779266357421875, -0.000141143798828125, -0.00016068121476564556, -2.3841855067985307e-07, -5.789310671389103e-05, 0.0, -0.9649555683135986, -1.9073486328125e-06, -0.0003446339978836477, 0.0, -0.0028085708618164062, -4.00543212890625e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.4324265718460083, -2.6702880859375e-05, -0.001506805419921875, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.0003871917724609375, -2.86102294921875e-05, -3.814697265625e-06, -2.491474151611328e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -5.91278076171875e-05, -7.641315460205078e-05, -3.814697265625e-06, -0.0016450881958007812, -5.7220458984375e-06, -1.9073486328125e-06, -0.000667572021484375, -2.6702880859375e-05, -4.57763671875e-05, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -0.0005474090576171875, -1.9073486328125e-06, -0.000202178955078125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.000217437744140625, -1.454353241570061e-05, -0.0009374618530273438, -3.62396240234375e-05, -0.011176109313964844, -0.0005207061767578125, -3.466287136077881, -0.00010692501382436603, -0.015150070190429688, -0.000835418701171875, -0.0027207136154174805, -1.71661376953125e-05], "choice_history": [55, 124, 221, 63, 103, "Frostbolt", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Frostbolt", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "2", "<EOS>", 78, 161, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -5.206828359913715, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Frostbolt", "hole2": "WARLOCK", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}, {"_type": "Template25", "hole0": "Frozen"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Frostbolt", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -0.00026702880859375, -2.47955322265625e-05, -0.0009048675419762731, -8.881091343937442e-05, -0.0023632049560546875, -4.1961669921875e-05, -1.33514404296875e-05, -0.00010561942326603457, -5.865095590706915e-05, -5.7220458984375e-06, -2.09808349609375e-05, -0.0005779266357421875, -0.000141143798828125, -0.00016068121476564556, -2.3841855067985307e-07, -5.789310671389103e-05, 0.0, -3.942239999771118, 0.0, -0.0001801252074074, 0.0, -0.0022325515747070312, -3.24249267578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -1.1449424028396606, -0.0001544952392578125, -0.0011348724365234375, -4.1961669921875e-05, -5.340576171875e-05, 0.0, -0.0005207061767578125, -3.62396240234375e-05, -7.62939453125e-06, -5.364418029785156e-05, 0.0, -4.00543212890625e-05, -9.34600830078125e-05, 0.0, -6.4849853515625e-05, -7.450580596923828e-05, -3.814697265625e-06, -0.0015535354614257812, -5.7220458984375e-06, -1.9073486328125e-06, -0.000640869140625, -2.6702880859375e-05, -4.57763671875e-05, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -0.0005474090576171875, -1.9073486328125e-06, -0.000202178955078125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.000217437744140625, -1.442432312614983e-05, -0.000919342041015625, -3.62396240234375e-05, -0.010899543762207031, -0.0005130767822265625, -0.03167843073606491, -7.855703734094277e-05, -0.057923316955566406, -0.0006513595581054688, -0.003155946731567383, -2.6702880859375e-05], "choice_history": [55, 124, 221, 63, 103, "Frostbolt", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Frostbolt", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 78, 161, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -5.232162602470417, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Frostbolt", "hole2": "MAGE", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 2}}, {"_type": "Template25", "hole0": "Frozen"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Frostbolt", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -0.00026702880859375, -2.47955322265625e-05, -0.0009048675419762731, -8.881091343937442e-05, -0.0023632049560546875, -4.1961669921875e-05, -1.33514404296875e-05, -0.00010561942326603457, -5.865095590706915e-05, -5.7220458984375e-06, -2.09808349609375e-05, -0.0005779266357421875, -0.000141143798828125, -0.00016068121476564556, -2.3841855067985307e-07, -5.789310671389103e-05, 0.0, -0.5518696308135986, -1.1920928244535389e-07, -0.0005253551062196493, 0.0, -0.00152587890625, -3.4332275390625e-05, -2.09808349609375e-05, -7.62939453125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1677781343460083, -0.000171661376953125, -0.0010528564453125, -4.1961669921875e-05, -5.53131103515625e-05, 0.0, -0.00054168701171875, -3.4332275390625e-05, -7.62939453125e-06, -5.555152893066406e-05, 0.0, -4.00543212890625e-05, -9.34600830078125e-05, 0.0, -6.4849853515625e-05, -7.641315460205078e-05, -3.814697265625e-06, -0.0015506744384765625, -5.7220458984375e-06, -1.9073486328125e-06, -0.000644683837890625, -2.6702880859375e-05, -4.57763671875e-05, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -0.0005474090576171875, -1.9073486328125e-06, -0.000202178955078125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.0002193450927734375, -1.442432312614983e-05, -0.000919342041015625, -3.62396240234375e-05, -0.010893821716308594, -0.0005130767822265625, -3.468071937561035, -0.00010561384988250211, -0.015057563781738281, -0.0008296966552734375, -0.0026978254318237305, -1.71661376953125e-05], "choice_history": [55, 124, 221, 63, 103, "Frostbolt", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "2", "<EOS>", 78, 161, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"score": -5.322018192359764, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Frostbolt", "hole2": "ROGUE", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Template33", "hole0": 3}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Frostbolt", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -0.00026702880859375, -2.47955322265625e-05, -0.0009048675419762731, -8.881091343937442e-05, -0.0023632049560546875, -4.1961669921875e-05, -1.33514404296875e-05, -0.00010561942326603457, -5.865095590706915e-05, -5.7220458984375e-06, -2.09808349609375e-05, -0.0005779266357421875, -0.000141143798828125, -0.00016068121476564556, -2.3841855067985307e-07, -5.789310671389103e-05, 0.0, -0.9649555683135986, -1.9073486328125e-06, -0.0003446339978836477, 0.0, -0.0028085708618164062, -4.00543212890625e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.4324265718460083, -2.6702880859375e-05, -0.001506805419921875, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.0003871917724609375, -2.86102294921875e-05, -3.814697265625e-06, -2.491474151611328e-05, 0.0, -3.24249267578125e-05, -5.7220458984375e-05, 0.0, -5.91278076171875e-05, -7.641315460205078e-05, -3.814697265625e-06, -0.0016450881958007812, -5.7220458984375e-06, -1.9073486328125e-06, -0.000667572021484375, -2.6702880859375e-05, -4.57763671875e-05, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -0.0005474090576171875, -1.9073486328125e-06, -0.000202178955078125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.000217437744140625, -1.454353241570061e-05, -0.0009374618530273438, -3.62396240234375e-05, -0.011176109313964844, -0.0005207061767578125, -0.03173791617155075, -8.106027235044166e-05, -3.074583053588867, -1.52587890625e-05, -0.0001392364501953125, -0.0053501129150390625, -1.1444091796875e-05, -3.814697265625e-06, -0.00027179718017578125, -3.24249267578125e-05, -0.014364242553710938, 0.0, -0.593663215637207, 0.0, -0.0038069486618041992, -9.655952453613281e-06, -0.1556704044342041, -1.71661376953125e-05, -9.5367431640625e-06, -0.00084686279296875, -0.0003204345703125, -0.013830346055328846, -0.00023031234741210938, -0.0001201629638671875, -1.1444091796875e-05, -0.0022336244583129883, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostbolt", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Frostbolt", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.hero.damage(player.effective_spell_damage(3), self)\n"}, {"score": -5.593956756601038, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Frostbolt", "hole2": "MAGE", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "args": [{"_type": "Template33", "hole0": 3}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Frostbolt", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -0.00026702880859375, -2.47955322265625e-05, -0.0009048675419762731, -8.881091343937442e-05, -0.0023632049560546875, -4.1961669921875e-05, -1.33514404296875e-05, -0.00010561942326603457, -5.865095590706915e-05, -5.7220458984375e-06, -2.09808349609375e-05, -0.0005779266357421875, -0.000141143798828125, -0.00016068121476564556, -2.3841855067985307e-07, -5.789310671389103e-05, 0.0, -0.5518696308135986, -1.1920928244535389e-07, -0.0005253551062196493, 0.0, -0.00152587890625, -3.4332275390625e-05, -2.09808349609375e-05, -7.62939453125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.1677781343460083, -0.000171661376953125, -0.0010528564453125, -4.1961669921875e-05, -5.53131103515625e-05, 0.0, -0.00054168701171875, -3.4332275390625e-05, -7.62939453125e-06, -5.555152893066406e-05, 0.0, -4.00543212890625e-05, -9.34600830078125e-05, 0.0, -6.4849853515625e-05, -7.641315460205078e-05, -3.814697265625e-06, -0.0015506744384765625, -5.7220458984375e-06, -1.9073486328125e-06, -0.000644683837890625, -2.6702880859375e-05, -4.57763671875e-05, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -0.0005474090576171875, -1.9073486328125e-06, -0.000202178955078125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.0002193450927734375, -1.442432312614983e-05, -0.000919342041015625, -3.62396240234375e-05, -0.010893821716308594, -0.0005130767822265625, -0.03168033808469772, -7.855703734094277e-05, -3.0341529846191406, -1.52587890625e-05, -0.0001430511474609375, -0.0051898956298828125, -1.1444091796875e-05, -3.814697265625e-06, -0.00026988983154296875, -3.24249267578125e-05, -0.014501571655273438, 0.0, -0.583277702331543, 0.0, -0.003794550895690918, -9.655952453613281e-06, -0.15778565406799316, -1.71661376953125e-05, -9.5367431640625e-06, -0.0008487701416015625, -0.0003204345703125, -0.013836666010320187, -0.00023031234741210938, -0.0001201629638671875, -1.1444091796875e-05, -0.002232670783996582, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostbolt", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.hero.damage(player.effective_spell_damage(3), self)\n"}, {"score": -5.612810842728287, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Frostbolt", "hole2": "MAGE", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Template33", "hole0": 3}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Frostbolt", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -0.00026702880859375, -2.47955322265625e-05, -0.0009048675419762731, -8.881091343937442e-05, -0.0023632049560546875, -4.1961669921875e-05, -1.33514404296875e-05, -0.00010561942326603457, -5.865095590706915e-05, -5.7220458984375e-06, -2.09808349609375e-05, -0.0005779266357421875, -0.000141143798828125, -0.00016068121476564556, -2.3841855067985307e-07, -5.789310671389103e-05, 0.0, -0.5518696308135986, -1.1920928244535389e-07, -0.0005253551062196493, 0.0, -0.00152587890625, -3.4332275390625e-05, -2.09808349609375e-05, -7.62939453125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.38581764698028564, -2.6702880859375e-05, -0.0014209747314453125, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.0003833770751953125, -3.24249267578125e-05, -3.814697265625e-06, -2.491474151611328e-05, 0.0, -3.24249267578125e-05, -6.103515625e-05, 0.0, -6.103515625e-05, -7.641315460205078e-05, -3.814697265625e-06, -0.0016527175903320312, -5.7220458984375e-06, -1.9073486328125e-06, -0.0006732940673828125, -2.6702880859375e-05, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -0.0005474090576171875, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.000217437744140625, -1.454353241570061e-05, -0.0009365081787109375, -3.62396240234375e-05, -0.0111846923828125, -0.0005207061767578125, -0.0317302867770195, -8.106027235044166e-05, -3.0810585021972656, -1.52587890625e-05, -0.0001392364501953125, -0.005290985107421875, -1.1444091796875e-05, -3.814697265625e-06, -0.00027179718017578125, -3.24249267578125e-05, -0.014347076416015625, 0.0, -1.441584587097168, 0.0, -0.0002460479736328125, -1.1444091796875e-05, -0.004727840423583984, -1.33514404296875e-05, -3.814697265625e-06, -0.047943115234375, -0.000152587890625, -0.018931854516267776, -0.0003657341003417969, -0.000244140625, -1.1444091796875e-05, -0.0017892122268676758, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostbolt", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -16.919708251953125, "model_output": {"_type": "Module", "body": [{"_type": "Break"}]}, "score_history": [-7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -16.919044494628906], "choice_history": [55, 124, 221, 62], "inferred_code": "break\n"}, {"score": -21.601083755493164, "model_output": {"_type": "Module", "body": []}, "score_history": [-7.62939453125e-06, -0.00064849853515625, -21.600427627563477], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 38}
{"beams": [{"score": -0.4182068718208427, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Frostwolf Grunt", "hole1": 2}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "FrostwolfGruntGrunt", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, -0.011210784316062927, -0.04384377598762512, -0.31617382168769836, -0.040043678134679794, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -4.768370445162873e-07, -2.8967857360839844e-05, 0.0, -1.1444091796875e-05, -0.000392913818359375, -0.0003566741943359375, -0.00030548733775503933, -8.225440979003906e-06, -0.0005855560302734375, -0.001719474676065147, -2.5868414013530128e-05, -3.528532761265524e-05, -0.00022695207735523582, -2.0265579223632812e-06, -0.0004520416259765625, -3.814697265625e-05, -1.692757177806925e-05, -1.1920858014491387e-05, -5.1259885367471725e-06, -2.3841855067985307e-07, -0.0016144514083862305, -1.1324817933200393e-05, -0.0007305145263671875, -8.0108642578125e-05, -0.0001010894775390625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostwolf", "Grunt", "Grunt", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FrostwolfGruntGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -1.3656171069922323, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Frostwolf Grunt", "hole1": 2}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "FrostwolfGrunt", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, -0.011210784316062927, -0.04384377598762512, -1.305698037147522, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -5.960462772236497e-07, -2.6941299438476562e-05, 0.0, -1.1444091796875e-05, -0.000476837158203125, -0.000522613525390625, -0.00032801079214550555, -1.0132789611816406e-05, -2.09808349609375e-05, -4.243841249262914e-05, -2.0503994164755568e-05, -2.777537883957848e-05, -0.00015865755267441273, -2.0265579223632812e-06, -0.0004730224609375, -3.62396240234375e-05, -1.6212328773690388e-05, -1.0609570381348021e-05, -5.483614586410113e-06, -2.3841855067985307e-07, -0.0016132593154907227, -1.1444026313256472e-05, -0.0007171630859375, -7.82012939453125e-05, -0.0001010894775390625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostwolf", "Grunt", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -3.523578078819668, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Frostwolf Grunt", "hole1": 2}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "Frostwolf<UNK>Grunt", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, -0.011210784316062927, -3.14921498298645, -0.31617382168769836, -0.040043678134679794, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -4.768370445162873e-07, -2.8967857360839844e-05, 0.0, -1.1444091796875e-05, -0.000392913818359375, -0.0003566741943359375, -0.00030548733775503933, -8.225440979003906e-06, -0.0005855560302734375, -0.001719474676065147, -2.5868414013530128e-05, -3.528532761265524e-05, -0.00022695207735523582, -2.0265579223632812e-06, -0.0004520416259765625, -3.814697265625e-05, -1.692757177806925e-05, -1.1920858014491387e-05, -5.1259885367471725e-06, -2.3841855067985307e-07, -0.0016144514083862305, -1.1324817933200393e-05, -0.0007305145263671875, -8.0108642578125e-05, -0.0001010894775390625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostwolf", "<UNK>", "Grunt", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frostwolf<UNK>Grunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -3.8614478647386647, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Frostwolf Grunt", "hole1": 2}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "FrostwolfGruntGruntGrunt", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, -0.011210784316062927, -0.04384377598762512, -0.31617382168769836, -3.237954616546631, -0.0011197039857506752, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -2.384185791015625e-06, -2.7060508728027344e-05, 0.0, -1.33514404296875e-05, -0.0004215240478515625, -0.0002727508544921875, -0.00030048147891648114, -8.344650268554688e-06, -0.0021457672119140625, -0.2443540096282959, -6.17504192632623e-05, -3.993438804172911e-05, -0.00028272916097193956, -3.933906555175781e-06, -0.000461578369140625, -4.1961669921875e-05, -1.7642816601437517e-05, -1.2397689715726301e-05, -5.1259885367471725e-06, -2.3841855067985307e-07, -0.001607060432434082, -1.0371154530730564e-05, -0.000728607177734375, -8.20159912109375e-05, -0.0001010894775390625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostwolf", "Grunt", "Grunt", "Grunt", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FrostwolfGruntGruntGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -4.470988313991057, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Frostwolf Grunt", "hole1": 2}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "Frostwolf<UNK>", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, -0.011210784316062927, -3.14921498298645, -1.305698037147522, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -5.960462772236497e-07, -2.6941299438476562e-05, 0.0, -1.1444091796875e-05, -0.000476837158203125, -0.000522613525390625, -0.00032801079214550555, -1.0132789611816406e-05, -2.09808349609375e-05, -4.243841249262914e-05, -2.0503994164755568e-05, -2.777537883957848e-05, -0.00015865755267441273, -2.0265579223632812e-06, -0.0004730224609375, -3.62396240234375e-05, -1.6212328773690388e-05, -1.0609570381348021e-05, -5.483614586410113e-06, -2.3841855067985307e-07, -0.0016132593154907227, -1.1444026313256472e-05, -0.0007171630859375, -7.82012939453125e-05, -0.0001010894775390625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostwolf", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frostwolf<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -4.937572316600239, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Frostwolf Grunt", "hole1": 2}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "<UNK>GruntGrunt", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, -4.530576229095459, -0.04384377598762512, -0.31617382168769836, -0.040043678134679794, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -4.768370445162873e-07, -2.8967857360839844e-05, 0.0, -1.1444091796875e-05, -0.000392913818359375, -0.0003566741943359375, -0.00030548733775503933, -8.225440979003906e-06, -0.0005855560302734375, -0.001719474676065147, -2.5868414013530128e-05, -3.528532761265524e-05, -0.00022695207735523582, -2.0265579223632812e-06, -0.0004520416259765625, -3.814697265625e-05, -1.692757177806925e-05, -1.1920858014491387e-05, -5.1259885367471725e-06, -2.3841855067985307e-07, -0.0016144514083862305, -1.1324817933200393e-05, -0.0007305145263671875, -8.0108642578125e-05, -0.0001010894775390625, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Grunt", "Grunt", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class <UNK>GruntGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -5.158083639610567, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Frostwolf Grunt Grunt", "hole1": 2}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "FrostwolfGruntGruntGrunt", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, -0.011210784316062927, -0.04384377598762512, -0.31617382168769836, -3.237954616546631, -0.0011197039857506752, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -2.384185791015625e-06, -2.7060508728027344e-05, 0.0, -1.33514404296875e-05, -0.0004215240478515625, -0.0002727508544921875, -0.00030048147891648114, -8.344650268554688e-06, -0.0021457672119140625, -1.5413033962249756, -3.933906555175781e-06, -3.945821663364768e-05, -1.4543531506205909e-05, -2.4437606043647975e-05, -0.00014816953625995666, -2.0265579223632812e-06, -0.00042724609375, -3.62396240234375e-05, -1.966933450603392e-05, -9.059865078597795e-06, -5.841240636073053e-06, -2.3841855067985307e-07, -0.0013931989669799805, -1.7404405298293568e-05, -0.0008106231689453125, -8.58306884765625e-05, -0.0001049041748046875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostwolf", "Grunt", "Grunt", "Grunt", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Frostwolf", " ", "Grunt", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FrostwolfGruntGruntGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -5.884982551771628, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Frostwolf Grunt", "hole1": 2}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "<UNK>Grunt", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, -4.530576229095459, -0.04384377598762512, -1.305698037147522, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -5.960462772236497e-07, -2.6941299438476562e-05, 0.0, -1.1444091796875e-05, -0.000476837158203125, -0.000522613525390625, -0.00032801079214550555, -1.0132789611816406e-05, -2.09808349609375e-05, -4.243841249262914e-05, -2.0503994164755568e-05, -2.777537883957848e-05, -0.00015865755267441273, -2.0265579223632812e-06, -0.0004730224609375, -3.62396240234375e-05, -1.6212328773690388e-05, -1.0609570381348021e-05, -5.483614586410113e-06, -2.3841855067985307e-07, -0.0016132593154907227, -1.1444026313256472e-05, -0.0007171630859375, -7.82012939453125e-05, -0.0001010894775390625, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Grunt", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class <UNK>Grunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -6.932679255673378, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Frostwolf Grunt Grunt", "hole1": 2}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "FrostwolfGruntGrunt", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, -0.011210784316062927, -0.04384377598762512, -0.31617382168769836, -0.040043678134679794, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -4.768370445162873e-07, -2.8967857360839844e-05, 0.0, -1.1444091796875e-05, -0.000392913818359375, -0.0003566741943359375, -0.00030548733775503933, -8.225440979003906e-06, -0.0005855560302734375, -6.516411781311035, -9.655952453613281e-06, -1.8954233382828534e-05, -1.466274079575669e-05, -2.5152843591058627e-05, -0.000122185330837965, -2.0265579223632812e-06, -0.0004711151123046875, -3.62396240234375e-05, -2.002695509872865e-05, -8.4638240878121e-06, -6.3180755205394235e-06, -2.3841855067985307e-07, -0.0013797283172607422, -1.7881233361549675e-05, -0.0008087158203125, -8.58306884765625e-05, -0.0001049041748046875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostwolf", "Grunt", "Grunt", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Frostwolf", " ", "Grunt", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FrostwolfGruntGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -6.96681907173749, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Frostwolf Grunt", "hole1": 2}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "Frostwolf<UNK>GruntGrunt", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, -0.011210784316062927, -3.14921498298645, -0.31617382168769836, -3.237954616546631, -0.0011197039857506752, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -2.384185791015625e-06, -2.7060508728027344e-05, 0.0, -1.33514404296875e-05, -0.0004215240478515625, -0.0002727508544921875, -0.00030048147891648114, -8.344650268554688e-06, -0.0021457672119140625, -0.2443540096282959, -6.17504192632623e-05, -3.993438804172911e-05, -0.00028272916097193956, -3.933906555175781e-06, -0.000461578369140625, -4.1961669921875e-05, -1.7642816601437517e-05, -1.2397689715726301e-05, -5.1259885367471725e-06, -2.3841855067985307e-07, -0.001607060432434082, -1.0371154530730564e-05, -0.000728607177734375, -8.20159912109375e-05, -0.0001010894775390625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostwolf", "<UNK>", "Grunt", "Grunt", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frostwolf<UNK>GruntGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -7.385513550474428, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Frostwolf Grunt", "hole1": 2}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "FrostwolfGruntGrunt", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, -0.011210784316062927, -0.04384377598762512, -0.31617382168769836, -0.040043678134679794, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -4.768370445162873e-07, -2.8967857360839844e-05, 0.0, -1.1444091796875e-05, -0.000392913818359375, -0.0003566741943359375, -0.00030548733775503933, -8.225440979003906e-06, -0.0005855560302734375, -0.001719474676065147, -2.5868414013530128e-05, -3.528532761265524e-05, -0.00022695207735523582, -2.0265579223632812e-06, -0.0004520416259765625, -3.814697265625e-05, -1.692757177806925e-05, -1.1920858014491387e-05, -5.1259885367471725e-06, -2.3841855067985307e-07, -6.968001365661621, -5.7220440794480965e-06, -0.00102996826171875, -0.000118255615234375, -0.0006888559437356889, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostwolf", "Grunt", "Grunt", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class FrostwolfGruntGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -7.861022652460491, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Frostwolf Frostwolf", "hole1": 2}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "FrostwolfGruntGrunt", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, -0.011210784316062927, -0.04384377598762512, -0.31617382168769836, -0.040043678134679794, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -4.768370445162873e-07, -2.8967857360839844e-05, 0.0, -1.1444091796875e-05, -0.000392913818359375, -0.0003566741943359375, -0.00030548733775503933, -8.225440979003906e-06, -7.443401336669922, -0.001719474676065147, -2.5868414013530128e-05, -3.528532761265524e-05, -0.00022695207735523582, -2.0265579223632812e-06, -0.0004520416259765625, -3.814697265625e-05, -1.692757177806925e-05, -1.1920858014491387e-05, -5.1259885367471725e-06, -2.3841855067985307e-07, -0.0016144514083862305, -1.1324817933200393e-05, -0.0007305145263671875, -8.0108642578125e-05, -0.0001010894775390625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostwolf", "Grunt", "Grunt", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Frostwolf", " ", "Frostwolf", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FrostwolfGruntGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Frostwolf', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -8.042943523599064, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Frostwolf Grunt", "hole1": 2}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "<UNK><UNK>Grunt", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, -4.530576229095459, -3.14921498298645, -0.31617382168769836, -0.040043678134679794, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -4.768370445162873e-07, -2.8967857360839844e-05, 0.0, -1.1444091796875e-05, -0.000392913818359375, -0.0003566741943359375, -0.00030548733775503933, -8.225440979003906e-06, -0.0005855560302734375, -0.001719474676065147, -2.5868414013530128e-05, -3.528532761265524e-05, -0.00022695207735523582, -2.0265579223632812e-06, -0.0004520416259765625, -3.814697265625e-05, -1.692757177806925e-05, -1.1920858014491387e-05, -5.1259885367471725e-06, -2.3841855067985307e-07, -0.0016144514083862305, -1.1324817933200393e-05, -0.0007305145263671875, -8.0108642578125e-05, -0.0001010894775390625, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "<UNK>", "Grunt", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class <UNK><UNK>Grunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"score": -11.545873459571197, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Frostwolf Grunt", "hole1": 2}, {"hole2": "taunt", "hole3": {"_type": "Call", "func": {"id": "Deathrattle", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Minion"}]}, {"_type": "Template38", "hole0": "WeaponSelector"}]}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "FrostwolfGruntGrunt", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, -0.011210784316062927, -0.04384377598762512, -0.31617382168769836, -0.040043678134679794, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -4.768370445162873e-07, -2.8967857360839844e-05, 0.0, -1.1444091796875e-05, -0.000392913818359375, -0.0003566741943359375, -0.00030548733775503933, -8.225440979003906e-06, -0.0005855560302734375, -0.001719474676065147, -2.5868414013530128e-05, -3.528532761265524e-05, -0.00022695207735523582, -2.0265579223632812e-06, -0.0004520416259765625, -3.814697265625e-05, -1.692757177806925e-05, -1.1920858014491387e-05, -5.1259885367471725e-06, -2.3841855067985307e-07, -0.0016144514083862305, -1.1324817933200393e-05, -7.292049407958984, -0.0001811981201171875, -0.001007080078125, -1.9073486328125e-06, -0.012058258056640625, -4.076874756719917e-05, -0.026098251342773438, -0.4036235809326172, -7.05718994140625e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.030238151550293, -0.00035354093415662646, -9.5367431640625e-06, -0.1194162368774414, -8.392333984375e-05, -0.8842898011207581, -0.2731347978115082, -0.0003910064697265625, -3.814697265625e-06, -1.0854864120483398, -2.2888181774760596e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostwolf", "Grunt", "Grunt", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "Minion", "<EOS>", 49, 174, "Weapon", "Selector", "<EOS>"], "inferred_code": "class FrostwolfGruntGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=Deathrattle(Give(Minion()), WeaponSelector())\n            )\n"}, {"score": -20.48390769958496, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -1.52587890625e-05, -20.4838924407959], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 39}
{"beams": [{"score": -0.05009332525855115, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Goldshire Footman", "hole1": 1}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 2}], "_type": "ClassDef", "name": "GoldshireFootman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00028546605608426034, -0.0010003806091845036, -0.04269422963261604, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.741813204920618e-06, -9.1552734375e-05, 0.0, -1.71661376953125e-05, -0.0014743804931640625, -0.0004940032958984375, -0.00018142042972613126, -8.225440979003906e-06, -1.71661376953125e-05, -6.783008575439453e-05, -7.867814019846264e-06, -1.3947466868557967e-05, -0.0002677185693755746, 0.0, -0.0008106231689453125, -1.9073486328125e-05, -4.768294274981599e-06, -9.536738616588991e-07, -3.063666736125015e-05, -1.1920928244535389e-07, -0.001631021499633789, -3.099436753473128e-06, -0.00072479248046875, -7.2479248046875e-05, -9.5367431640625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Goldshire", "Footman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score": -3.1986151762326784, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Goldshire Footman", "hole1": 1}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 2}], "_type": "ClassDef", "name": "GoldshireFootmanFootman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00028546605608426034, -0.0010003806091845036, -3.178659200668335, -0.00025925226509571075, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.741813204920618e-06, -5.161762237548828e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -0.001438140869140625, -0.000431060791015625, -0.0001513846218585968, -8.225440979003906e-06, -0.00020599365234375, -0.012251496315002441, -5.841257006977685e-06, -1.6093232261482626e-05, -0.0003028777427971363, 0.0, -0.0008563995361328125, -2.47955322265625e-05, -3.814629963017069e-06, -8.344646857949556e-07, -2.956377102236729e-05, -1.1920928244535389e-07, -0.0016407966613769531, -2.861018856492592e-06, -0.0007228851318359375, -7.2479248046875e-05, -9.34600830078125e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Goldshire", "Footman", "Footman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class GoldshireFootmanFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score": -6.958038981941847, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Goldshire Footman", "hole1": 1}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 2}], "_type": "ClassDef", "name": "Goldshire<UNK>", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00028546605608426034, -6.9089460372924805, -0.04269422963261604, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.741813204920618e-06, -9.1552734375e-05, 0.0, -1.71661376953125e-05, -0.0014743804931640625, -0.0004940032958984375, -0.00018142042972613126, -8.225440979003906e-06, -1.71661376953125e-05, -6.783008575439453e-05, -7.867814019846264e-06, -1.3947466868557967e-05, -0.0002677185693755746, 0.0, -0.0008106231689453125, -1.9073486328125e-05, -4.768294274981599e-06, -9.536738616588991e-07, -3.063666736125015e-05, -1.1920928244535389e-07, -0.001631021499633789, -3.099436753473128e-06, -0.00072479248046875, -7.2479248046875e-05, -9.5367431640625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Goldshire", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Goldshire<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score": -7.0227225716816335, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Goldshire Footman", "hole1": 1}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 1, "hole1": 2}], "_type": "ClassDef", "name": "GoldshireFootman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00028546605608426034, -0.0010003806091845036, -0.04269422963261604, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.741813204920618e-06, -9.1552734375e-05, 0.0, -1.71661376953125e-05, -0.0014743804931640625, -0.0004940032958984375, -0.00018142042972613126, -8.225440979003906e-06, -1.71661376953125e-05, -6.783008575439453e-05, -7.867814019846264e-06, -1.3947466868557967e-05, -0.0002677185693755746, 0.0, -0.0008106231689453125, -1.9073486328125e-05, -4.768294274981599e-06, -9.536738616588991e-07, -3.063666736125015e-05, -1.1920928244535389e-07, -6.973752975463867, -3.576278118089249e-07, -0.000720977783203125, -0.0001316070556640625, -0.0005500885890796781, 0.0], "choice_history": [55, 124, 221, 63, 103, "Goldshire", "Footman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, spell_damage=1)\n"}, {"score": -7.610705240760339, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Goldshire Footman Footman", "hole1": 1}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 2}], "_type": "ClassDef", "name": "GoldshireFootmanFootman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00028546605608426034, -0.0010003806091845036, -3.178659200668335, -0.00025925226509571075, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.741813204920618e-06, -5.161762237548828e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -0.001438140869140625, -0.000431060791015625, -0.0001513846218585968, -8.225440979003906e-06, -0.00020599365234375, -4.424464702606201, -9.655952453613281e-06, -4.410743713378906e-06, -1.3470651538227685e-05, -1.2755381249007769e-05, -0.0002897661179304123, 0.0, -0.0008258819580078125, -1.9073486328125e-05, -3.5762150218943134e-06, -7.152555099310121e-07, -2.9802215067320503e-05, -1.1920928244535389e-07, -0.001538395881652832, -3.6954811548639555e-06, -0.0007305145263671875, -7.43865966796875e-05, -9.34600830078125e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Goldshire", "Footman", "Footman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Goldshire", " ", "Footman", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class GoldshireFootmanFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman Footman', 1, CHARACTER_CLASS.\n            ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score": -7.721144605350645, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template6", "hole0": "Goldshire Footman", "hole1": 1}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 2}], "_type": "ClassDef", "name": "GoldshireFootman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00028546605608426034, -0.0010003806091845036, -0.04269422963261604, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.741813204920618e-06, -9.1552734375e-05, 0.0, -1.71661376953125e-05, -7.656120300292969, -0.0062236785888671875, -0.004997642710804939, -2.3365011657006107e-05, -3.933906555175781e-06, -3.933906555175781e-06, -2.9444696338032372e-05, -9.775159924174659e-06, -0.004089775960892439, -3.814697265625e-06, -0.0018367767333984375, -1.71661376953125e-05, -1.80003626155667e-05, -2.3841855067985307e-07, -5.185542977415025e-05, 0.0, -0.002690434455871582, -2.145764938177308e-06, -0.00064849853515625, -8.58306884765625e-05, -0.0001201629638671875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Goldshire", "Footman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score": -8.333475905564228, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Goldshire Footman", "hole1": 1}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template31", "hole0": 1, "hole1": 2}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}}], "_type": "ClassDef", "name": "GoldshireFootman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00028546605608426034, -0.0010003806091845036, -0.04269422963261604, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.741813204920618e-06, -9.1552734375e-05, 0.0, -1.71661376953125e-05, -0.0014743804931640625, -0.0004940032958984375, -0.00018142042972613126, -8.225440979003906e-06, -1.71661376953125e-05, -6.783008575439453e-05, -7.867814019846264e-06, -1.3947466868557967e-05, -0.0002677185693755746, 0.0, -8.177308082580566, -5.7220458984375e-06, -0.00025212764739990234, -6.318072337307967e-06, -1.9073486328125e-06, -0.0001316070556640625, -7.62939453125e-06, -7.438658940372989e-05, -7.30726242181845e-05, -1.9073486328125e-05, -0.07583928108215332, -8.344646857949556e-07, -2.86102294921875e-05, -0.0027990341186523438, -0.00034332275390625, -6.436763214878738e-06, -0.0023830304853618145, -0.00011837338388431817, -1.4305104514278355e-06, -0.02709914557635784, -7.152531907195225e-06, -9.918212890625e-05, -1.71661376953125e-05, -0.0001506805419921875, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Goldshire", "Footman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 81, 167, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(1, 2, taunt=True)\n"}, {"score": -8.439116534265935, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "1", "_type": "Template4", "hole0": "Goldshire Footman", "hole1": 1}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 2}], "_type": "ClassDef", "name": "GoldshireFootman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00028546605608426034, -0.0010003806091845036, -0.04269422963261604, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.741813204920618e-06, -9.1552734375e-05, 0.0, -1.71661376953125e-05, -0.0014743804931640625, -0.0004940032958984375, -0.00018142042972613126, -8.225440979003906e-06, -1.71661376953125e-05, -6.783008575439453e-05, -7.867814019846264e-06, -1.3947466868557967e-05, -8.387782096862793, 0.0, -0.0006694793701171875, -1.1444091796875e-05, -6.556427251780406e-06, -2.3841855067985307e-07, -7.331233064178377e-05, 0.0, -0.0029706954956054688, -8.344646857949556e-07, -0.00101470947265625, -8.7738037109375e-05, -6.67572021484375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Goldshire", "Footman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "1", "<EOS>", 72, 145, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.1,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score": -8.47838666579473, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 2}], "_type": "ClassDef", "name": "GoldshireFootman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00028546605608426034, -0.0010003806091845036, -0.04269422963261604, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.741813204920618e-06, -9.1552734375e-05, 0.0, -1.71661376953125e-05, -7.607900619506836, -0.0002231597900390625, -0.0003076324355788529, -1.6927717297221534e-05, -3.814697265625e-06, -7.748603820800781e-06, -1.6570091247558594e-05, -1.1920928244535389e-07, -0.00011002988321706653, 0.0, -1.41858699862496e-05, -5.7220440794480965e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -0.8199387788772583, -1.9073486328125e-06, -0.0019855499267578125, -1.1444091796875e-05, -4.160302341915667e-05, -5.960462772236497e-07, -5.948488978901878e-05, 0.0, -0.0029670000076293945, -5.006777428206988e-06, -0.0003147125244140625, -0.0001430511474609375, -0.0001163482666015625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Goldshire", "Footman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score": -8.5743878208459, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Goldshire Footman", "hole1": 1}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 2}], "_type": "ClassDef", "name": "GoldshireFootman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00028546605608426034, -0.0010003806091845036, -0.04269422963261604, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.741813204920618e-06, -9.1552734375e-05, 0.0, -1.71661376953125e-05, -0.0014743804931640625, -0.0004940032958984375, -0.00018142042972613126, -8.225440979003906e-06, -1.71661376953125e-05, -6.783008575439453e-05, -7.867814019846264e-06, -1.3947466868557967e-05, -0.0002677185693755746, 0.0, -0.0008106231689453125, -1.9073486328125e-05, -4.768294274981599e-06, -9.536738616588991e-07, -3.063666736125015e-05, -1.1920928244535389e-07, -8.525053024291992, -1.1920928244535389e-07, -0.0012989044189453125, -0.0003261566162109375, -0.0001430511474609375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Goldshire", "Footman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, charge=True)\n"}, {"score": -8.6908321636826, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 2}], "_type": "ClassDef", "name": "GoldshireFootman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00028546605608426034, -0.0010003806091845036, -0.04269422963261604, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.741813204920618e-06, -9.1552734375e-05, 0.0, -1.71661376953125e-05, -7.607900619506836, -0.0002231597900390625, -0.0003076324355788529, -1.6927717297221534e-05, -3.814697265625e-06, -7.748603820800781e-06, -1.6570091247558594e-05, -1.1920928244535389e-07, -0.00011002988321706653, 0.0, -1.41858699862496e-05, -5.7220440794480965e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -1.032049298286438, -2.2649765014648438e-06, -0.001476287841796875, -7.62939453125e-06, -4.887562681687996e-06, -3.576278118089249e-07, -7.676960376556963e-05, 0.0, -0.0036911964416503906, -3.2186455882765586e-06, -0.00037384033203125, -0.000232696533203125, -0.0001125335693359375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Goldshire", "Footman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 145, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"score": -8.772977980262105, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Goldshire Footman", "hole1": 1}, {"hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 2}], "_type": "ClassDef", "name": "GoldshireFootman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00028546605608426034, -0.0010003806091845036, -0.04269422963261604, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.741813204920618e-06, -9.1552734375e-05, 0.0, -1.71661376953125e-05, -0.0014743804931640625, -0.0004940032958984375, -0.00018142042972613126, -8.225440979003906e-06, -1.71661376953125e-05, -6.783008575439453e-05, -7.867814019846264e-06, -1.3947466868557967e-05, -0.0002677185693755746, 0.0, -0.0008106231689453125, -1.9073486328125e-05, -4.768294274981599e-06, -9.536738616588991e-07, -3.063666736125015e-05, -1.1920928244535389e-07, -8.72481632232666, -1.9073486328125e-06, -0.0003414154052734375, -0.000102996826171875, -0.000148773193359375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Goldshire", "Footman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "2", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, stealth=True)\n"}, {"score": -8.908112915799279, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Goldshire Footman", "hole1": 1}, {"_type": "Template11", "hole0": 1, "hole1": 2}], "_type": "ClassDef", "name": "GoldshireFootman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00028546605608426034, -0.0010003806091845036, -0.04269422963261604, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.741813204920618e-06, -9.1552734375e-05, 0.0, -1.71661376953125e-05, -0.0014743804931640625, -0.0004940032958984375, -0.00018142042972613126, -8.225440979003906e-06, -1.71661376953125e-05, -6.783008575439453e-05, -7.867814019846264e-06, -1.3947466868557967e-05, -0.0002677185693755746, 0.0, -8.861244201660156, -0.0001087188720703125, -1.1920565157197416e-07, -2.145764938177308e-06, -5.590912405750714e-05, -1.4305104514278355e-06], "choice_history": [55, 124, 221, 63, 103, "Goldshire", "Footman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 73, 146, "1", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2)\n"}, {"score": -9.183310527730775, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Goldshire Footman", "hole1": 1}, {"hole2": "taunt", "hole3": {"_type": "Call", "func": {"id": "Deathrattle", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Template38", "hole0": "SelfSelector"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}, "_type": "Template10", "hole0": 1, "hole1": 2}], "_type": "ClassDef", "name": "GoldshireFootman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00028546605608426034, -0.0010003806091845036, -0.04269422963261604, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.741813204920618e-06, -9.1552734375e-05, 0.0, -1.71661376953125e-05, -0.0014743804931640625, -0.0004940032958984375, -0.00018142042972613126, -8.225440979003906e-06, -1.71661376953125e-05, -6.783008575439453e-05, -7.867814019846264e-06, -1.3947466868557967e-05, -0.0002677185693755746, 0.0, -0.0008106231689453125, -1.9073486328125e-05, -4.768294274981599e-06, -9.536738616588991e-07, -3.063666736125015e-05, -1.1920928244535389e-07, -0.001631021499633789, -3.099436753473128e-06, -7.300118446350098, -0.000446319580078125, -0.0006656646728515625, -1.9073486328125e-06, -0.010656476020812988, -2.276871418871451e-05, -0.011877059936523438, -0.16376781463623047, -8.58306884765625e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.9896446466445923, -0.0026057830546051264, -0.1813220977783203, -0.04669952392578125, -0.00032806396484375, -0.013178110122680664, -3.933906555175781e-06, -0.0002384185791015625, 0.0, -0.27870428562164307, -2.384185791015625e-05, 0.0, -0.13054466247558594, -1.9073486328125e-06, -0.0031206607818603516, -3.445148468017578e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Goldshire", "Footman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=Deathrattle(Aura(ChangeAttack(1),\n            SelfSelector()), PlayerSelector()))\n"}, {"score": -20.627485275268555, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -2.47955322265625e-05, -20.627460479736328], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 40}
{"beams": [{"score": -0.09685214746217952, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Grimscale Oracle", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}]}, "_type": "Template10", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "GrimscaleOracle", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.7418097943154862e-06, -2.1219027985353023e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.6954863844584906e-06, -3.0994415283203125e-05, -1.2874597814516164e-05, -0.0002040863037109375, -0.0028228759765625, -1.52587890625e-05, -2.2172822355059907e-05, -2.9325325158424675e-05, -2.0265579223632812e-06, 0.0, -4.768298822455108e-07, -7.152555099310121e-07, -8.356363105122e-05, 0.0, -0.00022231652110349387, -7.867811291362159e-06, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.152555099310121e-07, -0.015663743019104004, -0.0001137256549554877, -0.0026531219482421875, -4.76837158203125e-05, -2.5033900783455465e-06, -5.602679812000133e-05, -7.154249033192173e-07, -2.312633478140924e-05, -0.0024223250802606344, -7.426712545566261e-05, -0.0012874603271484375, -8.58306884765625e-05, -0.023004531860351562, -4.00543212890625e-05, -3.24249267578125e-05, -2.6702880859375e-05, 0.0, -0.0004901885986328125, -6.0796710386057384e-06, -0.001674652099609375, -0.006500244140625, -0.000896453857421875, -0.008702754974365234, -3.099440846199286e-06, -0.0001392364501953125, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -6.80685043334961e-05, -0.00013172626495361328, -1.1920928244535389e-07, -0.0004596710205078125, -0.000522613525390625, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -0.009734498336911201, -0.0006414634990505874, -8.22540732769994e-06, -2.47955322265625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.00012969970703125, -8.463859558105469e-06, -0.010415077209472656, -1.1444091796875e-05, -0.00605010986328125, -0.000110626220703125, -0.0005694627179764211, -9.07182547962293e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Grimscale", "Oracle", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"score": -5.100317652374073, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Grimscale Oracle", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}, {"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template36", "hole0": 1}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}]}, "_type": "Template10", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "GrimscaleOracle", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.7418097943154862e-06, -2.1219027985353023e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.6954863844584906e-06, -3.0994415283203125e-05, -1.2874597814516164e-05, -0.0002040863037109375, -0.0028228759765625, -1.52587890625e-05, -2.2172822355059907e-05, -2.9325325158424675e-05, -2.0265579223632812e-06, 0.0, -4.768298822455108e-07, -7.152555099310121e-07, -8.356363105122e-05, 0.0, -0.00022231652110349387, -7.867811291362159e-06, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.152555099310121e-07, -0.015663743019104004, -0.0001137256549554877, -0.0026531219482421875, -4.76837158203125e-05, -2.5033900783455465e-06, -5.602679812000133e-05, -7.154249033192173e-07, -2.312633478140924e-05, -0.0024223250802606344, -7.426712545566261e-05, -0.0012874603271484375, -8.58306884765625e-05, -3.785515785217285, -4.00543212890625e-05, -1.52587890625e-05, -0.00034332275390625, 0.0, -0.002705693244934082, -2.9802276912960224e-06, -0.002140045166015625, -0.018149375915527344, -0.002101898193359375, -0.0013642326230183244, -2.5510627892799675e-05, -0.001201629638671875, -2.288818359375e-05, -7.62939453125e-06, 0.0, -0.00045299530029296875, -0.00010693073272705078, -1.1920928244535389e-07, -0.0007419586181640625, -0.00064849853515625, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -0.006063245236873627, -0.0007418374298140407, -1.0013530300057027e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -8.96453857421875e-05, -8.58306884765625e-06, -0.009321212768554688, -1.1444091796875e-05, -0.009435653686523438, -0.000156402587890625, -0.0006284713163040578, -0.00010800360178109258, -1.9073486328125e-06, -0.00012969970703125, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.3863002061843872, -7.033217116259038e-05, -0.002796173095703125, -0.7709083557128906, -0.03575611114501953, -0.0016199361998587847, -2.34842264035251e-05, -0.00051116943359375, -0.0016803741455078125, -9.5367431640625e-06, -1.9073486328125e-06, -2.5391480448888615e-05, -2.872943878173828e-05, -1.1920928244535389e-07, -0.008977890014648438, -0.0001983642578125, 0.0, -3.814697265625e-05, 0.0, -0.004888470284640789, -0.00045895561925135553, -1.0251946150674485e-05, -2.288818359375e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-05, -3.814697265625e-06, -4.38690185546875e-05, -1.2040138244628906e-05, -0.010293245315551758, -1.9073486328125e-05, -0.006070137023925781, -0.0002593994140625, -0.0005189179792068899, -0.00010323523019906133, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Grimscale", "Oracle", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 47, 172, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer())), Aura(ChangeHealth(1\n            ), MinionSelector(IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"score": -5.313669332860165, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Grimscale Oracle", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 5}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}]}, "_type": "Template10", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "GrimscaleOracle", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.7418097943154862e-06, -2.1219027985353023e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.6954863844584906e-06, -3.0994415283203125e-05, -1.2874597814516164e-05, -0.0002040863037109375, -0.0028228759765625, -1.52587890625e-05, -2.2172822355059907e-05, -2.9325325158424675e-05, -2.0265579223632812e-06, 0.0, -4.768298822455108e-07, -7.152555099310121e-07, -8.356363105122e-05, 0.0, -0.00022231652110349387, -7.867811291362159e-06, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.152555099310121e-07, -0.015663743019104004, -0.0001137256549554877, -0.0026531219482421875, -4.76837158203125e-05, -2.5033900783455465e-06, -5.602679812000133e-05, -7.154249033192173e-07, -2.312633478140924e-05, -0.0024223250802606344, -7.426712545566261e-05, -0.0012874603271484375, -8.58306884765625e-05, -0.023004531860351562, -4.00543212890625e-05, -3.24249267578125e-05, -2.6702880859375e-05, 0.0, -0.0004901885986328125, -6.0796710386057384e-06, -0.001674652099609375, -0.006500244140625, -0.000896453857421875, -5.228836536407471, -1.800059908418916e-05, -0.0012111663818359375, -0.000476837158203125, -3.814697265625e-06, 0.0, -0.0001245737075805664, -0.0003110170364379883, -1.1920928244535389e-07, -0.0002841949462890625, -0.0007457733154296875, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -0.00757959671318531, -0.00062632403569296, -7.986990567587782e-06, -3.814697265625e-05, -9.5367431640625e-06, -2.86102294921875e-05, -3.0517578125e-05, -5.7220458984375e-06, -0.0001354217529296875, -8.463859558105469e-06, -0.009294629096984863, -9.5367431640625e-06, -0.004215240478515625, -0.00012969970703125, -0.0005983113660477102, -0.00010192392801400274, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Grimscale", "Oracle", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "5", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(5), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"score": -5.345632346509767, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Grimscale Oracle", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}]}, "_type": "Template10", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "GrimscaleOracle", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.7418097943154862e-06, -2.1219027985353023e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.6954863844584906e-06, -3.0994415283203125e-05, -1.2874597814516164e-05, -0.0002040863037109375, -0.0028228759765625, -1.52587890625e-05, -2.2172822355059907e-05, -2.9325325158424675e-05, -2.0265579223632812e-06, 0.0, -4.768298822455108e-07, -7.152555099310121e-07, -8.356363105122e-05, 0.0, -0.00022231652110349387, -7.867811291362159e-06, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.152555099310121e-07, -5.258785724639893, -1.049041748046875e-05, -0.0018520355224609375, -3.4332275390625e-05, -5.006771971238777e-06, -4.0649541915627196e-05, 2.3810389393474907e-07, -1.5020257706055418e-05, -0.0030678475741297007, -5.1975126552861184e-05, -0.0024127960205078125, -8.7738037109375e-05, -0.025831222534179688, -3.4332275390625e-05, -2.86102294921875e-05, -2.86102294921875e-05, 0.0, -0.0005966424942016602, -6.19888032815652e-06, -0.0018596649169921875, -0.007572174072265625, -0.0009098052978515625, -0.008733153343200684, -3.218649908376392e-06, -0.00014495849609375, -0.0001125335693359375, -7.62939453125e-06, -1.9073486328125e-06, -9.870529174804688e-05, -0.00012600421905517578, -1.1920928244535389e-07, -0.0004787445068359375, -0.0004940032958984375, 0.0, -4.76837158203125e-05, -3.814697265625e-06, -0.010612060315907001, -0.000632999581284821, -7.986990567587782e-06, -2.6702880859375e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.000133514404296875, -8.463859558105469e-06, -0.010611534118652344, -1.1444091796875e-05, -0.005596160888671875, -0.0001049041748046875, -0.0005617141141556203, -8.88109061634168e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Grimscale", "Oracle", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"score": -5.429424751129538, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Grimscale Oracle", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}]}, "_type": "Template10", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "GrimscaleOracle", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.7418097943154862e-06, -2.1219027985353023e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.6954863844584906e-06, -3.0994415283203125e-05, -1.2874597814516164e-05, -0.0002040863037109375, -0.0028228759765625, -1.52587890625e-05, -2.2172822355059907e-05, -2.9325325158424675e-05, -2.0265579223632812e-06, 0.0, -4.768298822455108e-07, -7.152555099310121e-07, -8.356363105122e-05, 0.0, -0.00022231652110349387, -7.867811291362159e-06, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.152555099310121e-07, -5.337290287017822, -2.2768945200368762e-05, -0.003170013427734375, -4.76837158203125e-05, -4.8875635911826976e-06, -3.635817120084539e-05, -2.390024747001007e-07, -1.4305012882687151e-05, -0.0028176282066851854, -4.887556133326143e-05, -0.0016832351684570312, -7.62939453125e-05, -0.028657913208007812, -3.814697265625e-05, -3.814697265625e-05, -3.0517578125e-05, 0.0, -0.0006384849548339844, -5.960462203802308e-06, -0.0017833709716796875, -0.0071506500244140625, -0.000881195068359375, -0.012163997627794743, -3.099440846199286e-06, -0.0001468658447265625, -0.0001125335693359375, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001481771469116211, -0.00015652179718017578, -1.1920928244535389e-07, -0.00049591064453125, -0.0004863739013671875, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00899219885468483, -0.0006358606624417007, -8.34461570775602e-06, -2.47955322265625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0001277923583984375, -8.463859558105469e-06, -0.010145187377929688, -1.1444091796875e-05, -0.0067272186279296875, -0.000118255615234375, -0.0005680322065018117, -9.26256034290418e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Grimscale", "Oracle", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"score": -5.666444717370254, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Grimscale Oracle", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}, {"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"hole2": 1, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}, "_type": "Template10", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "GrimscaleOracle", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.7418097943154862e-06, -2.1219027985353023e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.6954863844584906e-06, -3.0994415283203125e-05, -1.2874597814516164e-05, -0.0002040863037109375, -0.0028228759765625, -1.52587890625e-05, -2.2172822355059907e-05, -2.9325325158424675e-05, -2.0265579223632812e-06, 0.0, -4.768298822455108e-07, -7.152555099310121e-07, -8.356363105122e-05, 0.0, -0.00022231652110349387, -7.867811291362159e-06, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.152555099310121e-07, -0.015663743019104004, -0.0001137256549554877, -0.0026531219482421875, -4.76837158203125e-05, -2.5033900783455465e-06, -5.602679812000133e-05, -7.154249033192173e-07, -2.312633478140924e-05, -0.0024223250802606344, -7.426712545566261e-05, -0.0012874603271484375, -8.58306884765625e-05, -3.785515785217285, -4.00543212890625e-05, -1.52587890625e-05, -0.00034332275390625, 0.0, -0.002705693244934082, -2.9802276912960224e-06, -0.002140045166015625, -0.018149375915527344, -0.002101898193359375, -0.0013642326230183244, -2.5510627892799675e-05, -0.001201629638671875, -2.288818359375e-05, -7.62939453125e-06, 0.0, -0.00045299530029296875, -0.00010693073272705078, -1.1920928244535389e-07, -0.0007419586181640625, -0.00064849853515625, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -0.006063245236873627, -0.0007418374298140407, -1.0013530300057027e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -8.96453857421875e-05, -8.58306884765625e-06, -0.009321212768554688, -1.1444091796875e-05, -0.009435653686523438, -0.000156402587890625, -0.0006284713163040578, -0.00010800360178109258, -1.9073486328125e-06, -0.00012969970703125, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.3863002061843872, -7.033217116259038e-05, -0.002796173095703125, -0.7554225921630859, -0.0017337799072265625, -0.03285098075866699, -3.814697265625e-06, -0.003391980892047286, -0.11266803741455078, -1.9073486328125e-06, -0.00013369321823120117, -7.867813110351562e-06, -0.4871692657470703, -1.9073486328125e-06, -0.015211224555969238, -8.618783613201231e-05, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Grimscale", "Oracle", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer())), Aura(Give(\n            ChangeAttack(1)), SelfSelector())])\n"}, {"score": -5.9367712993757635, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Grimscale Oracle", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 1, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}, "_type": "Template10", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "GrimscaleOracle", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.7418097943154862e-06, -2.1219027985353023e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.6954863844584906e-06, -3.0994415283203125e-05, -1.2874597814516164e-05, -0.0002040863037109375, -0.0028228759765625, -1.52587890625e-05, -2.2172822355059907e-05, -2.9325325158424675e-05, -2.0265579223632812e-06, 0.0, -4.768298822455108e-07, -7.152555099310121e-07, -8.356363105122e-05, 0.0, -0.00022231652110349387, -7.867811291362159e-06, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.152555099310121e-07, -0.015663743019104004, -0.0001137256549554877, -0.0026531219482421875, -4.76837158203125e-05, -2.5033900783455465e-06, -5.602679812000133e-05, -7.154249033192173e-07, -2.312633478140924e-05, -0.0024223250802606344, -7.426712545566261e-05, -0.0012874603271484375, -8.58306884765625e-05, -3.785515785217285, -4.00543212890625e-05, -1.52587890625e-05, -0.00034332275390625, 0.0, -0.002705693244934082, -2.9802276912960224e-06, -0.002140045166015625, -0.018149375915527344, -0.002101898193359375, -0.0013642326230183244, -2.5510627892799675e-05, -0.001201629638671875, -2.288818359375e-05, -7.62939453125e-06, 0.0, -0.00045299530029296875, -0.00010693073272705078, -1.1920928244535389e-07, -0.0007419586181640625, -0.00064849853515625, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -0.006063245236873627, -0.0007418374298140407, -1.0013530300057027e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -8.96453857421875e-05, -8.58306884765625e-06, -0.009321212768554688, -1.1444091796875e-05, -0.009435653686523438, -0.000156402587890625, -0.0006284713163040578, -0.00010800360178109258, -1.9073486328125e-06, -0.00012969970703125, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -1.4569474458694458, -0.0018854123773053288, -2.9444261599564925e-05, -0.0002765655517578125, -0.003930091857910156, -0.000301361083984375, -0.004221320152282715, -2.110004425048828e-05, -0.0008050187025219202, -0.04714035987854004, 0.0, -0.00013187527656555176, -2.5153160095214844e-05, -0.5488910675048828, -3.814697265625e-06, -0.0034761426504701376, -9.036008850671351e-05, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Grimscale", "Oracle", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer())), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector())])\n"}, {"score": -6.035332882214554, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Grimscale Oracle", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}]}, "_type": "Template10", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "GrimscaleOracle", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.7418097943154862e-06, -2.1219027985353023e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.6954863844584906e-06, -3.0994415283203125e-05, -1.2874597814516164e-05, -0.0002040863037109375, -0.0028228759765625, -1.52587890625e-05, -2.2172822355059907e-05, -2.9325325158424675e-05, -2.0265579223632812e-06, 0.0, -4.768298822455108e-07, -7.152555099310121e-07, -8.356363105122e-05, 0.0, -0.00022231652110349387, -7.867811291362159e-06, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.152555099310121e-07, -0.015663743019104004, -0.0001137256549554877, -0.0026531219482421875, -4.76837158203125e-05, -2.5033900783455465e-06, -5.602679812000133e-05, -7.154249033192173e-07, -2.312633478140924e-05, -0.0024223250802606344, -7.426712545566261e-05, -0.0012874603271484375, -8.58306884765625e-05, -0.023004531860351562, -4.00543212890625e-05, -3.24249267578125e-05, -2.6702880859375e-05, 0.0, -0.0004901885986328125, -6.0796710386057384e-06, -0.001674652099609375, -0.006500244140625, -0.000896453857421875, -0.008702754974365234, -3.099440846199286e-06, -0.0001392364501953125, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -6.80685043334961e-05, -0.00013172626495361328, -1.1920928244535389e-07, -0.0004596710205078125, -0.000522613525390625, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -0.009734498336911201, -0.0006414634990505874, -8.22540732769994e-06, -2.47955322265625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.00012969970703125, -8.463859558105469e-06, -5.749460220336914, -0.0002384185791015625, -0.2039623260498047, -0.0001125335693359375, -0.001618623617105186, -0.0003246068663429469, -1.33514404296875e-05], "choice_history": [55, 124, 221, 63, 103, "Grimscale", "Oracle", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.BEAST), BothPlayer()))])\n"}, {"score": -6.203082256437767, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Grimscale Oracle", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"hole2": 1, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}]}, "_type": "Template10", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "GrimscaleOracle", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.7418097943154862e-06, -2.1219027985353023e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.6954863844584906e-06, -3.0994415283203125e-05, -1.2874597814516164e-05, -0.0002040863037109375, -0.0028228759765625, -1.52587890625e-05, -2.2172822355059907e-05, -2.9325325158424675e-05, -2.0265579223632812e-06, 0.0, -4.768298822455108e-07, -7.152555099310121e-07, -8.356363105122e-05, 0.0, -0.00022231652110349387, -7.867811291362159e-06, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.152555099310121e-07, -0.015663743019104004, -0.0001137256549554877, -0.0026531219482421875, -4.76837158203125e-05, -2.5033900783455465e-06, -5.602679812000133e-05, -7.154249033192173e-07, -2.312633478140924e-05, -0.0024223250802606344, -7.426712545566261e-05, -0.0012874603271484375, -8.58306884765625e-05, -0.023004531860351562, -4.00543212890625e-05, -3.24249267578125e-05, -2.6702880859375e-05, 0.0, -0.0004901885986328125, -6.0796710386057384e-06, -0.001674652099609375, -5.674709796905518, -0.012976646423339844, -0.00865185260772705, -5.841255187988281e-06, -0.018150925636291504, -0.04252886772155762, 0.0, -5.6862831115722656e-05, -3.933906555175781e-06, -0.2811164855957031, -0.0021648406982421875, -3.814697265625e-06, 0.0, -0.00015890570648480207, -3.063678741455078e-05, -5.960462772236497e-07, -0.000217437744140625, -0.010258674621582031, 0.0, -5.91278076171875e-05, 0.0, -0.07925398647785187, -0.00031208962900564075, -3.576272320060525e-06, -0.00678253173828125, -3.814697265625e-05, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -2.0265579223632812e-05, -0.009520649909973145, -2.09808349609375e-05, -0.00351715087890625, -0.000225067138671875, -0.0007079836796037853, -0.00010168550215894356, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Grimscale", "Oracle", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(Give(ChangeAttack(1)),\n            MinionSelector(IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"score": -6.291288101628872, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Grimscale Oracle", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}]}, "_type": "Template10", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "GrimscaleOracle", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.7418097943154862e-06, -2.1219027985353023e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.6954863844584906e-06, -3.0994415283203125e-05, -1.2874597814516164e-05, -0.0002040863037109375, -0.0028228759765625, -1.52587890625e-05, -2.2172822355059907e-05, -2.9325325158424675e-05, -2.0265579223632812e-06, 0.0, -4.768298822455108e-07, -7.152555099310121e-07, -8.356363105122e-05, 0.0, -0.00022231652110349387, -7.867811291362159e-06, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.152555099310121e-07, -0.015663743019104004, -0.0001137256549554877, -0.0026531219482421875, -4.76837158203125e-05, -2.5033900783455465e-06, -5.602679812000133e-05, -7.154249033192173e-07, -2.312633478140924e-05, -0.0024223250802606344, -7.426712545566261e-05, -0.0012874603271484375, -8.58306884765625e-05, -0.023004531860351562, -4.00543212890625e-05, -3.24249267578125e-05, -2.6702880859375e-05, 0.0, -0.0004901885986328125, -6.0796710386057384e-06, -0.001674652099609375, -0.006500244140625, -0.000896453857421875, -0.008702754974365234, -3.099440846199286e-06, -0.0001392364501953125, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -6.80685043334961e-05, -0.00013172626495361328, -1.1920928244535389e-07, -0.0004596710205078125, -0.000522613525390625, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -0.009734498336911201, -0.0006414634990505874, -8.22540732769994e-06, -2.47955322265625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.00012969970703125, -8.463859558105469e-06, -5.856647491455078, -8.213520050048828e-05, -0.3476123809814453, -0.000339508056640625, -0.00456082820892334, -0.0024372339248657227, -5.7220458984375e-06], "choice_history": [55, 124, 221, 63, 103, "Grimscale", "Oracle", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.PIRATE), BothPlayer()))])\n"}, {"score": -6.291765835326025, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Grimscale Oracle", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}, {"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"hole2": 1, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}]}, "_type": "Template10", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "GrimscaleOracle", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.7418097943154862e-06, -2.1219027985353023e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.6954863844584906e-06, -3.0994415283203125e-05, -1.2874597814516164e-05, -0.0002040863037109375, -0.0028228759765625, -1.52587890625e-05, -2.2172822355059907e-05, -2.9325325158424675e-05, -2.0265579223632812e-06, 0.0, -4.768298822455108e-07, -7.152555099310121e-07, -8.356363105122e-05, 0.0, -0.00022231652110349387, -7.867811291362159e-06, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.152555099310121e-07, -0.015663743019104004, -0.0001137256549554877, -0.0026531219482421875, -4.76837158203125e-05, -2.5033900783455465e-06, -5.602679812000133e-05, -7.154249033192173e-07, -2.312633478140924e-05, -0.0024223250802606344, -7.426712545566261e-05, -0.0012874603271484375, -8.58306884765625e-05, -3.785515785217285, -4.00543212890625e-05, -1.52587890625e-05, -0.00034332275390625, 0.0, -0.002705693244934082, -2.9802276912960224e-06, -0.002140045166015625, -0.018149375915527344, -0.002101898193359375, -0.0013642326230183244, -2.5510627892799675e-05, -0.001201629638671875, -2.288818359375e-05, -7.62939453125e-06, 0.0, -0.00045299530029296875, -0.00010693073272705078, -1.1920928244535389e-07, -0.0007419586181640625, -0.00064849853515625, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -0.006063245236873627, -0.0007418374298140407, -1.0013530300057027e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.52587890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -8.96453857421875e-05, -8.58306884765625e-06, -0.009321212768554688, -1.1444091796875e-05, -0.009435653686523438, -0.000156402587890625, -0.0006284713163040578, -0.00010800360178109258, -1.9073486328125e-06, -0.00012969970703125, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.3863002061843872, -7.033217116259038e-05, -0.002796173095703125, -0.7554225921630859, -0.0017337799072265625, -0.03285098075866699, -3.814697265625e-06, -0.003391980892047286, -0.11266803741455078, -1.9073486328125e-06, -0.00013369321823120117, -7.867813110351562e-06, -0.9530811309814453, -0.002376556396484375, -5.7220458984375e-06, 0.0, -9.393536311108619e-05, -4.029273986816406e-05, -7.152555099310121e-07, -0.0003643035888671875, -0.02477550506591797, 0.0, -4.76837158203125e-05, 0.0, -0.12831994891166687, -0.0002814527542795986, -4.172316494077677e-06, -0.003795623779296875, -1.33514404296875e-05, -5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.633167266845703e-05, -0.011062383651733398, -1.33514404296875e-05, -0.0022125244140625, -0.000278472900390625, -0.0007542365929111838, -0.000120520569907967, 0.0], "choice_history": [55, 124, 221, 63, 103, "Grimscale", "Oracle", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer())), Aura(Give(\n            ChangeAttack(1)), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            BothPlayer()))])\n"}, {"score": -6.447276121364432, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Grimscale Oracle", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}]}, "_type": "Template10", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "GrimscaleOracle", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.7418097943154862e-06, -2.1219027985353023e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.6954863844584906e-06, -3.0994415283203125e-05, -1.2874597814516164e-05, -0.0002040863037109375, -0.0028228759765625, -1.52587890625e-05, -2.2172822355059907e-05, -2.9325325158424675e-05, -2.0265579223632812e-06, 0.0, -4.768298822455108e-07, -7.152555099310121e-07, -8.356363105122e-05, 0.0, -0.00022231652110349387, -7.867811291362159e-06, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.152555099310121e-07, -0.015663743019104004, -0.0001137256549554877, -0.0026531219482421875, -4.76837158203125e-05, -2.5033900783455465e-06, -5.602679812000133e-05, -7.154249033192173e-07, -2.312633478140924e-05, -0.0024223250802606344, -7.426712545566261e-05, -0.0012874603271484375, -8.58306884765625e-05, -0.023004531860351562, -4.00543212890625e-05, -3.24249267578125e-05, -2.6702880859375e-05, 0.0, -0.0004901885986328125, -6.0796710386057384e-06, -0.001674652099609375, -0.006500244140625, -0.000896453857421875, -6.367093563079834, -1.1920922133867862e-06, -0.0004177093505859375, -0.0005397796630859375, -5.7220458984375e-06, 0.0, -0.0003418922424316406, -0.0002671480178833008, -1.1920928244535389e-07, -0.00066375732421875, -0.0004749298095703125, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -0.003567724023014307, -0.0007084595272317529, -1.1444026313256472e-05, -1.9073486328125e-05, -9.5367431640625e-06, -3.62396240234375e-05, -4.00543212890625e-05, -9.5367431640625e-06, -0.0001239776611328125, -8.463859558105469e-06, -0.009501457214355469, -7.62939453125e-06, -0.0038471221923828125, -0.0001220703125, -0.0005377530469559133, -9.167193638859317e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Grimscale", "Oracle", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(2), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"score": -7.317620551927007, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Grimscale Oracle", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "GrimscaleOracle", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.7418097943154862e-06, -2.1219027985353023e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.6954863844584906e-06, -3.0994415283203125e-05, -1.2874597814516164e-05, -0.0002040863037109375, -0.0028228759765625, -1.52587890625e-05, -2.2172822355059907e-05, -2.9325325158424675e-05, -2.0265579223632812e-06, 0.0, -4.768298822455108e-07, -7.152555099310121e-07, -8.356363105122e-05, 0.0, -0.00022231652110349387, -7.867811291362159e-06, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.152555099310121e-07, -0.015663743019104004, -0.0001137256549554877, -7.297417640686035, -0.0002956390380859375, 0.0, -0.00036995718255639076, 9.536703373669297e-07, -8.034383063204587e-05], "choice_history": [55, 124, 221, 63, 103, "Grimscale", "Oracle", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"score": -7.390231834608585, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Grimscale Oracle", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 1, "hole1": 1}], "_type": "ClassDef", "name": "GrimscaleOracle", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.7418097943154862e-06, -2.1219027985353023e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.6954863844584906e-06, -3.0994415283203125e-05, -1.2874597814516164e-05, -0.0002040863037109375, -0.0028228759765625, -1.52587890625e-05, -2.2172822355059907e-05, -2.9325325158424675e-05, -2.0265579223632812e-06, 0.0, -4.768298822455108e-07, -7.152555099310121e-07, -8.356363105122e-05, 0.0, -0.00022231652110349387, -7.867811291362159e-06, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.152555099310121e-07, -0.015663743019104004, -0.0001137256549554877, -0.0026531219482421875, -4.76837158203125e-05, -2.5033900783455465e-06, -5.602679812000133e-05, -7.154249033192173e-07, -2.312633478140924e-05, -7.359330177307129, -2.968305670947302e-05, -0.0009613037109375, -1.71661376953125e-05, -0.007648587226867676, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Grimscale", "Oracle", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, stealth=True)\n"}, {"score": -22.9503173828125, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -22.9503116607666], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 41}
{"beams": [{"score": -0.7155176477962186, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Guardian of Kings", "hole2": "PALADIN", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Template38", "hole0": "HeroSelector"}]}}, {"_type": "Template11", "hole0": 5, "hole1": 6}], "_type": "ClassDef", "name": "GuardianOfKings", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -5.53131103515625e-05, -0.000120751719805412, -0.000750049832277, -0.027740325778722763, -6.83054095134139e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -6.341933476505801e-05, -2.1696068870369345e-05, -1.0013580322265625e-05, -2.288818359375e-05, -0.6584911346435547, -8.7738037109375e-05, -0.00019621843239292502, -2.4437902538920753e-05, -4.7087669372558594e-05, -4.38690185546875e-05, -0.00012695734039880335, 0.0, -2.1219066184130497e-05, -8.344646857949556e-07, -0.008971333503723145, 0.0, -0.001201748033054173, -7.986990567587782e-06, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00019752979278564453, 0.0, -1.1444091796875e-05, -0.004726409912109375, -1.9073486328125e-06, -0.00069427490234375, 0.0, -0.006220675073564053, -6.329878669930622e-05, -2.09808349609375e-05, -0.001171112060546875, -1.9073486328125e-06, -0.002253147540614009, -3.552392445271835e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0008982419967651367, -7.43865966796875e-05, 0.0, -0.0001010894775390625, -7.62939453125e-06, -0.00037407875061035156, -1.7881377516459906e-06, -0.00012028215860482305, -1.847726889536716e-05], "choice_history": [55, 124, 221, 63, 103, "Guardian", "Of", "Kings", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -1.8960073912790847, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Template38", "hole0": "HeroSelector"}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 5, "hole1": 6}], "_type": "ClassDef", "name": "GuardianOfKings", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -5.53131103515625e-05, -0.000120751719805412, -0.000750049832277, -0.027740325778722763, -6.83054095134139e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -6.341933476505801e-05, -2.1696068870369345e-05, -1.0013580322265625e-05, -2.288818359375e-05, -0.7294578552246094, -1.1444091796875e-05, -3.0874842195771635e-05, -4.410743713378906e-06, 0.0, -0.0002918243408203125, -2.47955322265625e-05, -4.3630454456433654e-05, -3.814697265625e-06, -0.000125885009765625, -0.00011444091796875, -1.9073486328125e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.364412118069595e-06, -3.814697265625e-06, -2.1457672119140625e-06, 0.0, -0.000270843505859375, -0.00038909912109375, -7.62939453125e-06, -4.768367489305092e-06, -0.00023865699768066406, -6.365765875671059e-05, -5.733966827392578e-05, -0.0003691911115311086, -1.9073486328125e-06, -0.0052814483642578125, -1.9073486328125e-06, -4.2914962250506505e-05, -3.2663156162016094e-05, -1.9073486328125e-06, -1.9073486328125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -3.5762761399382725e-05, -6.198883056640625e-06, -0.23811876773834229, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.00012969970703125, -0.0009840726852416992, -5.602820692729438e-06, -0.6634989976882935, -1.394745322613744e-05, -0.009682655334472656, -0.00829315185546875, -1.9073486328125e-06, -0.0002689361572265625, -4.768367489305092e-06, -7.62939453125e-06, 0.0, -9.72747802734375e-05, 0.0, -0.0032024383544921875, 0.0, -0.17867183685302734, -1.9073486328125e-06, -0.0002498626708984375, -7.62939453125e-06, -0.011262893676757812, -8.344646857949556e-07, -0.0011730194091796875, -0.0001163482666015625, -1.9073486328125e-05, -5.7220458984375e-06, -0.00037348270416259766, -2.3841855067985307e-07, -3.62396240234375e-05, -0.00209808349609375, -1.9073486328125e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.006227203644812107, -0.00012456663534976542, -1.33514404296875e-05, -0.0005702972412109375, -7.62939453125e-06, -0.0023854689206928015, -5.888807572773658e-05, -6.103515625e-05, 0.0, -0.001096487045288086, -5.340576171875e-05, 0.0, -0.00012969970703125, -5.7220458984375e-06, -0.00046443939208984375, -1.311301275563892e-06, -9.536742436466739e-05, -1.1444026313256472e-05], "choice_history": [55, 124, 221, 63, 103, "Guardian", "Of", "Kings", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Guardian", " ", "of", " ", "Kings", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -1.9451413142326146, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Template38", "hole0": "HeroSelector"}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 5, "hole1": 6}], "_type": "ClassDef", "name": "GuardianOfKings", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -5.53131103515625e-05, -0.000120751719805412, -0.000750049832277, -0.027740325778722763, -6.83054095134139e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -6.341933476505801e-05, -2.1696068870369345e-05, -1.0013580322265625e-05, -2.288818359375e-05, -0.7294578552246094, -1.1444091796875e-05, -3.0874842195771635e-05, -4.410743713378906e-06, 0.0, -0.0002918243408203125, -2.47955322265625e-05, -4.3630454456433654e-05, -3.814697265625e-06, -0.000125885009765625, -0.00011444091796875, -1.9073486328125e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.364412118069595e-06, -3.814697265625e-06, -2.1457672119140625e-06, 0.0, -0.000270843505859375, -0.00038909912109375, -7.62939453125e-06, -4.768367489305092e-06, -0.00023865699768066406, -6.365765875671059e-05, -5.733966827392578e-05, -0.0003691911115311086, -1.9073486328125e-06, -0.0052814483642578125, -1.9073486328125e-06, -4.2914962250506505e-05, -3.2663156162016094e-05, -1.9073486328125e-06, -1.9073486328125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -3.5762761399382725e-05, -6.198883056640625e-06, -0.23811876773834229, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.00012969970703125, -0.0009840726852416992, -5.602820692729438e-06, -0.8092442750930786, -0.021994590759277344, -0.0034332275390625, 0.0, -0.08695423603057861, -3.6954811548639555e-06, -4.38690185546875e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.814697265625e-06, -0.0007127523422241211, 0.0, -3.62396240234375e-05, -0.003040313720703125, -1.9073486328125e-06, -6.29425048828125e-05, -5.7220458984375e-06, -0.008781022392213345, -0.0001423273206455633, -9.5367431640625e-06, -0.000431060791015625, -1.71661376953125e-05, -0.002040270948782563, -9.011866495711729e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.0016390085220336914, -5.91278076171875e-05, 0.0, -0.000141143798828125, -3.814697265625e-06, -0.00046074390411376953, -1.7881377516459906e-06, -0.00011265276407357305, -3.123234637314454e-05], "choice_history": [55, 124, 221, 63, 103, "Guardian", "Of", "Kings", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Guardian", " ", "of", " ", "Kings", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY., battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -3.0592844923487235, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Template38", "hole0": "HeroSelector"}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 5, "hole1": 6}], "_type": "ClassDef", "name": "GuardianOfKings", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -5.53131103515625e-05, -0.000120751719805412, -0.000750049832277, -0.027740325778722763, -6.83054095134139e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -6.341933476505801e-05, -2.1696068870369345e-05, -1.0013580322265625e-05, -2.288818359375e-05, -0.7294578552246094, -1.1444091796875e-05, -3.0874842195771635e-05, -4.410743713378906e-06, 0.0, -0.0002918243408203125, -2.47955322265625e-05, -4.3630454456433654e-05, -3.814697265625e-06, -0.000125885009765625, -0.00011444091796875, -1.9073486328125e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.364412118069595e-06, -3.814697265625e-06, -2.1457672119140625e-06, 0.0, -0.000270843505859375, -0.00038909912109375, -7.62939453125e-06, -4.768367489305092e-06, -0.00023865699768066406, -6.365765875671059e-05, -5.733966827392578e-05, -0.0003691911115311086, -1.9073486328125e-06, -0.0052814483642578125, -1.9073486328125e-06, -4.2914962250506505e-05, -3.2663156162016094e-05, -1.9073486328125e-06, -1.9073486328125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -3.5762761399382725e-05, -6.198883056640625e-06, -1.9552351236343384, -8.702266313775908e-06, -1.9073486328125e-06, 0.0, -6.103515625e-05, -4.57763671875e-05, -0.00025963783264160156, -5.483612312673358e-06, -0.11965858936309814, -2.8729173209285364e-05, -0.005129814147949219, -0.0067768096923828125, -1.9073486328125e-06, -0.0002117156982421875, -6.19888032815652e-06, -5.7220458984375e-06, 0.0, -0.0001068115234375, 0.0, -0.00308990478515625, 0.0, -0.17535877227783203, -1.9073486328125e-06, -0.000247955322265625, -9.5367431640625e-06, -0.011636734008789062, -7.152555099310121e-07, -0.001194000244140625, -0.00011444091796875, -1.9073486328125e-05, -5.7220458984375e-06, -0.00037729740142822266, -2.3841855067985307e-07, -3.62396240234375e-05, -0.0020732879638671875, -1.9073486328125e-06, -8.392333984375e-05, -3.814697265625e-06, -0.006259457673877478, -0.0001238514669239521, -1.33514404296875e-05, -0.0005664825439453125, -7.62939453125e-06, -0.00237939297221601, -5.912648339290172e-05, -6.29425048828125e-05, 0.0, -0.001088857650756836, -5.340576171875e-05, 0.0, -0.0001277923583984375, -5.7220458984375e-06, -0.00046443939208984375, -1.311301275563892e-06, -9.536742436466739e-05, -1.168244216387393e-05], "choice_history": [55, 124, 221, 63, 103, "Guardian", "Of", "Kings", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Guardian", " ", "of", " ", "Kings", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -4.163018244776339, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Template38", "hole0": "HeroSelector"}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 5, "hole1": 6}], "_type": "ClassDef", "name": "GuardianOfKings", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -5.53131103515625e-05, -0.000120751719805412, -0.000750049832277, -0.027740325778722763, -6.83054095134139e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -6.341933476505801e-05, -2.1696068870369345e-05, -1.0013580322265625e-05, -2.288818359375e-05, -0.7294578552246094, -1.1444091796875e-05, -3.0874842195771635e-05, -4.410743713378906e-06, 0.0, -0.0002918243408203125, -2.47955322265625e-05, -4.3630454456433654e-05, -3.814697265625e-06, -0.000125885009765625, -0.00011444091796875, -1.9073486328125e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.364412118069595e-06, -3.814697265625e-06, -2.1457672119140625e-06, 0.0, -0.000270843505859375, -0.00038909912109375, -7.62939453125e-06, -4.768367489305092e-06, -0.00023865699768066406, -6.365765875671059e-05, -5.733966827392578e-05, -0.0003691911115311086, -1.9073486328125e-06, -0.0052814483642578125, -1.9073486328125e-06, -4.2914962250506505e-05, -3.2663156162016094e-05, -1.9073486328125e-06, -1.9073486328125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -3.5762761399382725e-05, -6.198883056640625e-06, -3.085327625274658, 0.0, 0.0, 0.0, -1.52587890625e-05, -2.47955322265625e-05, -6.914138793945312e-05, -2.3841830625315197e-06, -0.09835624694824219, -1.9788689314736985e-05, -0.002887725830078125, -0.005992889404296875, -1.9073486328125e-06, -0.0001468658447265625, -5.960462203802308e-06, -5.7220458984375e-06, 0.0, -0.0001163482666015625, 0.0, -0.002346038818359375, 0.0, -0.17428874969482422, -1.9073486328125e-06, -0.0002193450927734375, -9.5367431640625e-06, -0.011688232421875, -7.152555099310121e-07, -0.001102447509765625, -0.00011444091796875, -1.9073486328125e-05, -5.7220458984375e-06, -0.00037539005279541016, -2.3841855067985307e-07, -3.62396240234375e-05, -0.002063751220703125, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -0.006518580950796604, -0.00012778490781784058, -1.33514404296875e-05, -0.0005340576171875, -7.62939453125e-06, -0.0023566363379359245, -5.853046604897827e-05, -6.103515625e-05, 0.0, -0.0010907649993896484, -5.340576171875e-05, 0.0, -0.00012969970703125, -5.7220458984375e-06, -0.00046443939208984375, -1.311301275563892e-06, -9.52482150751166e-05, -1.1205610462639015e-05], "choice_history": [55, 124, 221, 63, 103, "Guardian", "Of", "Kings", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Guardian", " ", "of", " ", "Kings", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -4.24302178460033, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Guardian of Kings", "hole2": "PALADIN", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Template38", "hole0": "HeroSelector"}]}}, {"_type": "Template11", "hole0": 5, "hole1": 6}], "_type": "ClassDef", "name": "GuardianOfTheKings", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -5.53131103515625e-05, -0.000120751719805412, -0.000750049832277, -3.637958526611328, -2.145764938177308e-06, -3.576278118089249e-07, -1.9073486328125e-05, -7.43865966796875e-05, -1.9073486328125e-06, -1.4185894542606547e-05, -2.0861618395429105e-05, -7.987022399902344e-06, -1.9073486328125e-05, -0.5719985961914062, -8.0108642578125e-05, -0.00017440313240513206, -2.6464460461284034e-05, -3.552436828613281e-05, -4.9591064453125e-05, -0.005648493301123381, 0.0, -1.4424245819100179e-05, -7.152555099310121e-07, -0.007156968116760254, 0.0, -0.001389979152008891, -4.410734163684538e-06, -3.814697265625e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.00022232532501220703, 0.0, -1.1444091796875e-05, -0.0045871734619140625, -3.814697265625e-06, -0.000736236572265625, 0.0, -0.006242719478905201, -6.234516331460327e-05, -2.09808349609375e-05, -0.0012531280517578125, -1.9073486328125e-06, -0.0022338603157550097, -3.6596775316866115e-05, -0.0002880096435546875, -1.9073486328125e-06, -0.0009020566940307617, -7.43865966796875e-05, 0.0, -0.0001049041748046875, -7.62939453125e-06, -0.0003819465637207031, -1.7881377516459906e-06, -0.00011682508193189278, -1.7762025890988298e-05], "choice_history": [55, 124, 221, 63, 103, "Guardian", "Of", "The", "Kings", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfTheKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -4.5487795698119555, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MECH", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Template38", "hole0": "HeroSelector"}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 5, "hole1": 6}], "_type": "ClassDef", "name": "GuardianOfKings", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -5.53131103515625e-05, -0.000120751719805412, -0.000750049832277, -0.027740325778722763, -6.83054095134139e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -6.341933476505801e-05, -2.1696068870369345e-05, -1.0013580322265625e-05, -2.288818359375e-05, -0.7294578552246094, -1.1444091796875e-05, -3.0874842195771635e-05, -4.410743713378906e-06, 0.0, -0.0002918243408203125, -2.47955322265625e-05, -4.3630454456433654e-05, -3.814697265625e-06, -0.000125885009765625, -0.00011444091796875, -1.9073486328125e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.364412118069595e-06, -3.814697265625e-06, -2.1457672119140625e-06, 0.0, -0.000270843505859375, -0.00038909912109375, -7.62939453125e-06, -4.768367489305092e-06, -0.00023865699768066406, -6.365765875671059e-05, -5.733966827392578e-05, -0.0003691911115311086, -1.9073486328125e-06, -0.0052814483642578125, -1.9073486328125e-06, -4.2914962250506505e-05, -3.2663156162016094e-05, -1.9073486328125e-06, -1.9073486328125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -3.5762761399382725e-05, -6.198883056640625e-06, -0.23811876773834229, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.00012969970703125, -0.0009840726852416992, -5.602820692729438e-06, -0.6634989976882935, -1.394745322613744e-05, -0.009682655334472656, -0.00829315185546875, -1.9073486328125e-06, -0.0002689361572265625, -4.768367489305092e-06, -7.62939453125e-06, 0.0, -9.72747802734375e-05, 0.0, -0.0032024383544921875, 0.0, -2.838627815246582, -2.741813204920618e-06, -0.001430511474609375, -1.33514404296875e-05, -0.0029506683349609375, -5.960462772236497e-07, -0.0006618499755859375, -9.1552734375e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.0004801750183105469, -2.3841855067985307e-07, -3.0517578125e-05, -0.0021114349365234375, -1.9073486328125e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.0064621660858392715, -0.00012683134991675615, -1.33514404296875e-05, -0.0006999969482421875, -7.62939453125e-06, -0.0024013135116547346, -5.984169911243953e-05, -6.67572021484375e-05, 0.0, -0.0010716915130615234, -5.14984130859375e-05, 0.0, -0.0001277923583984375, -5.7220458984375e-06, -0.00046825408935546875, -1.4305104514278355e-06, -9.727477299747989e-05, -1.3589766240329482e-05], "choice_history": [55, 124, 221, 63, 103, "Guardian", "Of", "Kings", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Guardian", " ", "of", " ", "Kings", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -4.74169861637202, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Template38", "hole0": "HeroSelector"}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 5, "hole1": 6}], "_type": "ClassDef", "name": "GuardianOfKings", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -5.53131103515625e-05, -0.000120751719805412, -0.000750049832277, -0.027740325778722763, -6.83054095134139e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -6.341933476505801e-05, -2.1696068870369345e-05, -1.0013580322265625e-05, -2.288818359375e-05, -0.7294578552246094, -1.1444091796875e-05, -3.0874842195771635e-05, -4.410743713378906e-06, 0.0, -0.0002918243408203125, -2.47955322265625e-05, -4.3630454456433654e-05, -3.814697265625e-06, -0.000125885009765625, -0.00011444091796875, -1.9073486328125e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.364412118069595e-06, -3.814697265625e-06, -2.1457672119140625e-06, 0.0, -0.000270843505859375, -0.00038909912109375, -7.62939453125e-06, -4.768367489305092e-06, -0.00023865699768066406, -6.365765875671059e-05, -5.733966827392578e-05, -0.0003691911115311086, -1.9073486328125e-06, -0.0052814483642578125, -1.9073486328125e-06, -4.2914962250506505e-05, -3.2663156162016094e-05, -1.9073486328125e-06, -1.9073486328125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -3.5762761399382725e-05, -6.198883056640625e-06, -0.23811876773834229, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.00012969970703125, -0.0009840726852416992, -5.602820692729438e-06, -0.6634989976882935, -1.394745322613744e-05, -0.009682655334472656, -0.00829315185546875, -1.9073486328125e-06, -0.0002689361572265625, -4.768367489305092e-06, -7.62939453125e-06, 0.0, -9.72747802734375e-05, 0.0, -0.0032024383544921875, 0.0, -3.02810001373291, 0.0, -0.00018310546875, -2.288818359375e-05, -0.007050514221191406, -5.960462772236497e-07, -0.000919342041015625, -8.96453857421875e-05, -2.47955322265625e-05, -7.62939453125e-06, -0.0004558563232421875, -2.3841855067985307e-07, -3.24249267578125e-05, -0.0018768310546875, -1.9073486328125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.006944263819605112, -0.00014220736920833588, -1.33514404296875e-05, -0.000759124755859375, -7.62939453125e-06, -0.002387979533523321, -6.282176764216274e-05, -6.103515625e-05, -1.9073486328125e-06, -0.0011098384857177734, -5.340576171875e-05, 0.0, -0.000125885009765625, -5.7220458984375e-06, -0.00046622753143310547, -1.5497195136049413e-06, -9.727477299747989e-05, -1.4424220353248529e-05], "choice_history": [55, 124, 221, 63, 103, "Guardian", "Of", "Kings", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Guardian", " ", "of", " ", "Kings", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -5.137237454711112, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Template38", "hole0": "HeroSelector"}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 5, "hole1": 6}], "_type": "ClassDef", "name": "GuardianOfKings", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -5.53131103515625e-05, -0.000120751719805412, -0.000750049832277, -0.027740325778722763, -6.83054095134139e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -6.341933476505801e-05, -2.1696068870369345e-05, -1.0013580322265625e-05, -2.288818359375e-05, -0.7294578552246094, -1.1444091796875e-05, -3.0874842195771635e-05, -4.410743713378906e-06, 0.0, -0.0002918243408203125, -2.47955322265625e-05, -4.3630454456433654e-05, -3.814697265625e-06, -0.000125885009765625, -0.00011444091796875, -1.9073486328125e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.364412118069595e-06, -3.814697265625e-06, -2.1457672119140625e-06, 0.0, -0.000270843505859375, -0.00038909912109375, -7.62939453125e-06, -4.768367489305092e-06, -0.00023865699768066406, -6.365765875671059e-05, -5.733966827392578e-05, -0.0003691911115311086, -1.9073486328125e-06, -0.0052814483642578125, -1.9073486328125e-06, -4.2914962250506505e-05, -3.2663156162016094e-05, -1.9073486328125e-06, -1.9073486328125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -3.5762761399382725e-05, -6.198883056640625e-06, -1.9552351236343384, -8.702266313775908e-06, -1.9073486328125e-06, 0.0, -6.103515625e-05, -4.57763671875e-05, -0.00025963783264160156, -5.483612312673358e-06, -2.255189895629883, -0.07667064666748047, -0.003994941711425781, 0.0, -0.06120312213897705, -4.768360213347478e-06, -4.76837158203125e-05, -1.71661376953125e-05, -2.09808349609375e-05, -3.814697265625e-06, -0.000775456428527832, 0.0, -3.62396240234375e-05, -0.003143310546875, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -0.009052345529198647, -0.00014888295845594257, -9.5367431640625e-06, -0.0004119873046875, -1.9073486328125e-05, -0.002010970376431942, -9.548261004965752e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0016275644302368164, -5.91278076171875e-05, 0.0, -0.000141143798828125, -3.814697265625e-06, -0.00046265125274658203, -1.7881377516459906e-06, -0.00011277197336312383, -3.2066785934148356e-05], "choice_history": [55, 124, 221, 63, 103, "Guardian", "Of", "Kings", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Guardian", " ", "of", " ", "Kings", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY., battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -5.1864765568583096, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Template38", "hole0": "HeroSelector"}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 5, "hole1": 6}], "_type": "ClassDef", "name": "GuardianOfKings", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -5.53131103515625e-05, -0.000120751719805412, -0.000750049832277, -0.027740325778722763, -6.83054095134139e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -6.341933476505801e-05, -2.1696068870369345e-05, -1.0013580322265625e-05, -2.288818359375e-05, -0.7294578552246094, -1.1444091796875e-05, -3.0874842195771635e-05, -4.410743713378906e-06, 0.0, -0.0002918243408203125, -2.47955322265625e-05, -4.3630454456433654e-05, -3.814697265625e-06, -0.000125885009765625, -0.00011444091796875, -1.9073486328125e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.364412118069595e-06, -3.814697265625e-06, -2.1457672119140625e-06, 0.0, -0.000270843505859375, -0.00038909912109375, -7.62939453125e-06, -4.768367489305092e-06, -0.00023865699768066406, -6.365765875671059e-05, -5.733966827392578e-05, -0.0003691911115311086, -1.9073486328125e-06, -0.0052814483642578125, -1.9073486328125e-06, -4.2914962250506505e-05, -3.2663156162016094e-05, -1.9073486328125e-06, -1.9073486328125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -3.5762761399382725e-05, -6.198883056640625e-06, -0.23811876773834229, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.00012969970703125, -0.0009840726852416992, -5.602820692729438e-06, -0.6634989976882935, -1.394745322613744e-05, -0.009682655334472656, -0.00829315185546875, -1.9073486328125e-06, -0.0002689361572265625, -4.768367489305092e-06, -7.62939453125e-06, 0.0, -9.72747802734375e-05, 0.0, -0.0032024383544921875, 0.0, -3.4734115600585938, -5.7220458984375e-06, -0.000186920166015625, -3.4332275390625e-05, -0.007603645324707031, -9.536738616588991e-07, -0.0004444122314453125, -0.000133514404296875, -1.71661376953125e-05, -5.7220458984375e-06, -0.0004292726516723633, -2.3841855067985307e-07, -3.814697265625e-05, -0.001781463623046875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.006813586689531803, -0.00014435335469897836, -1.33514404296875e-05, -0.000423431396484375, -7.62939453125e-06, -0.0023482809774577618, -5.6861619668779895e-05, -6.103515625e-05, 0.0, -0.001065969467163086, -5.53131103515625e-05, 0.0, -0.000133514404296875, -5.7220458984375e-06, -0.00047016143798828125, -1.4305104514278355e-06, -9.727477299747989e-05, -1.3112935448589269e-05], "choice_history": [55, 124, 221, 63, 103, "Guardian", "Of", "Kings", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Guardian", " ", "of", " ", "Kings", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM, battlecry=\n            Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -5.4514278870185535, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Template38", "hole0": "HeroSelector"}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "EPIC", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 5, "hole1": 6}], "_type": "ClassDef", "name": "GuardianOfKings", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -5.53131103515625e-05, -0.000120751719805412, -0.000750049832277, -0.027740325778722763, -6.83054095134139e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -6.341933476505801e-05, -2.1696068870369345e-05, -1.0013580322265625e-05, -2.288818359375e-05, -0.7294578552246094, -1.1444091796875e-05, -3.0874842195771635e-05, -4.410743713378906e-06, 0.0, -0.0002918243408203125, -2.47955322265625e-05, -4.3630454456433654e-05, -3.814697265625e-06, -0.000125885009765625, -0.00011444091796875, -1.9073486328125e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.364412118069595e-06, -3.814697265625e-06, -2.1457672119140625e-06, 0.0, -0.000270843505859375, -0.00038909912109375, -7.62939453125e-06, -4.768367489305092e-06, -0.00023865699768066406, -6.365765875671059e-05, -5.733966827392578e-05, -0.0003691911115311086, -1.9073486328125e-06, -0.0052814483642578125, -1.9073486328125e-06, -4.2914962250506505e-05, -3.2663156162016094e-05, -1.9073486328125e-06, -1.9073486328125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -3.5762761399382725e-05, -6.198883056640625e-06, -0.23811876773834229, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.00012969970703125, -0.0009840726852416992, -5.602820692729438e-06, -4.066307067871094, -3.778933751164004e-05, -0.3536376953125, -0.0009326934814453125, 0.0, -0.007575035095214844, -5.125986263010418e-06, -6.4849853515625e-05, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.000568389892578125, 0.0, -4.76837158203125e-05, -0.0032253265380859375, -1.9073486328125e-06, -5.53131103515625e-05, -7.62939453125e-06, -0.008279617875814438, -0.00012373292702250183, -9.5367431640625e-06, -0.000438690185546875, -1.52587890625e-05, -0.002087675267830491, -8.380122744711116e-05, -8.58306884765625e-05, -1.9073486328125e-06, -0.0014499425888061523, -5.7220458984375e-05, 0.0, -0.0001392364501953125, -5.7220458984375e-06, -0.00046825408935546875, -1.7881377516459906e-06, -0.00011229513620492071, -3.0636318115284666e-05], "choice_history": [55, 124, 221, 63, 103, "Guardian", "Of", "Kings", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Guardian", " ", "of", " ", "Kings", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -6.135880381869697, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Guardian of Kings", "hole2": "PRIEST", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Template38", "hole0": "HeroSelector"}]}}, {"_type": "Template11", "hole0": 5, "hole1": 6}], "_type": "ClassDef", "name": "GuardianOfKings", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -5.53131103515625e-05, -0.000120751719805412, -0.000750049832277, -0.027740325778722763, -6.83054095134139e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -6.341933476505801e-05, -2.1696068870369345e-05, -1.0013580322265625e-05, -2.288818359375e-05, -0.6584911346435547, -8.7738037109375e-05, -0.00019621843239292502, -2.4437902538920753e-05, -4.7087669372558594e-05, -4.38690185546875e-05, -0.00012695734039880335, 0.0, -2.1219066184130497e-05, -8.344646857949556e-07, -5.427384376525879, -7.152555099310121e-07, -0.0031731128692626953, -1.311301275563892e-06, -3.814697265625e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.00020456314086914062, 0.0, -1.33514404296875e-05, -0.0054473876953125, -3.814697265625e-06, -0.000629425048828125, 0.0, -0.00591638870537281, -7.16429713065736e-05, -1.9073486328125e-05, -0.000843048095703125, -1.9073486328125e-06, -0.0022167565766721964, -3.8027243135729805e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0008885860443115234, -7.05718994140625e-05, 0.0, -0.0001010894775390625, -7.62939453125e-06, -0.00037980079650878906, -1.9073468138230965e-06, -0.00012028215860482305, -1.847726889536716e-05], "choice_history": [55, 124, 221, 63, 103, "Guardian", "Of", "Kings", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -6.935448948479632, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": "deathrattle", "hole3": {"_type": "Call", "func": {"id": "Deathrattle", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Template38", "hole0": "HeroSelector"}]}, "_type": "Template10", "hole0": 5, "hole1": 6}], "_type": "ClassDef", "name": "GuardianOfKings", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -5.53131103515625e-05, -0.000120751719805412, -0.000750049832277, -0.027740325778722763, -6.83054095134139e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -6.341933476505801e-05, -2.1696068870369345e-05, -1.0013580322265625e-05, -2.288818359375e-05, -0.7294578552246094, -1.1444091796875e-05, -3.0874842195771635e-05, -4.410743713378906e-06, 0.0, -0.0002918243408203125, -2.47955322265625e-05, -4.3630454456433654e-05, -3.814697265625e-06, -0.000125885009765625, -0.00011444091796875, -1.9073486328125e-06, 0.0, -0.0001201629638671875, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.364412118069595e-06, -3.814697265625e-06, -2.1457672119140625e-06, 0.0, -0.000270843505859375, -0.00038909912109375, -7.62939453125e-06, -4.768367489305092e-06, -0.00023865699768066406, -6.365765875671059e-05, -5.733966827392578e-05, -0.0003691911115311086, -1.9073486328125e-06, -0.0052814483642578125, -1.9073486328125e-06, -4.2914962250506505e-05, -3.2663156162016094e-05, -1.9073486328125e-06, -1.9073486328125e-05, -8.96453857421875e-05, -5.7220458984375e-06, -3.5762761399382725e-05, -6.198883056640625e-06, -0.23811876773834229, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.00012969970703125, -0.0009840726852416992, -5.602820692729438e-06, -0.8092442750930786, -0.021994590759277344, -0.0034332275390625, 0.0, -2.5521087646484375, -7.986990567587782e-06, -0.0003795623779296875, -1.9073486328125e-06, -0.0001373291015625, -1.9073486328125e-06, -0.007867813110351562, 0.0, -0.3100624084472656, -1.9073486328125e-06, -0.35462093353271484, -5.7220458984375e-06, -0.000440359057392925, -3.576278118089249e-07, -0.0027180160395801067, -2.0265558760002023e-06, -1.8265953063964844, -0.0001411338453181088, -0.00255584716796875, -0.00020599365234375, -3.0517578125e-05, -1.71661376953125e-05, -0.011054754257202148, -1.8596589143271558e-05, -1.9073486328125e-05, -0.011829376220703125, -6.866455078125e-05, -0.0004215240478515625, -0.0001964569091796875, -0.005909169092774391, -0.00010847628436749801, -3.814697265625e-06, -0.0005970001220703125, -3.24249267578125e-05, -0.003470552619546652, -9.512484393781051e-05, -0.0015163421630859375, 0.0, -0.0019642114639282227, -4.38690185546875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Guardian", "Of", "Kings", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Guardian", " ", "of", " ", "Kings", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "5", "<EOS>", "6", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY., minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(5, 6, deathrattle=Deathrattle(Heal(6), HeroSelector()))\n"}, {"score": -6.998494502365588, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Guardian of Kings", "hole2": "HUNTER", "hole1": 7, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Heal", "_type": "Name"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Template38", "hole0": "HeroSelector"}]}}, {"_type": "Template11", "hole0": 5, "hole1": 6}], "_type": "ClassDef", "name": "GuardianOfKings", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -5.53131103515625e-05, -0.000120751719805412, -0.000750049832277, -0.027740325778722763, -6.83054095134139e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -6.341933476505801e-05, -2.1696068870369345e-05, -1.0013580322265625e-05, -2.288818359375e-05, -0.6584911346435547, -8.7738037109375e-05, -0.00019621843239292502, -2.4437902538920753e-05, -4.7087669372558594e-05, -4.38690185546875e-05, -0.00012695734039880335, 0.0, -2.1219066184130497e-05, -8.344646857949556e-07, -6.285889625549316, 0.0, -0.008808374404907227, -2.7418097943154862e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.00031304359436035156, 0.0, -1.52587890625e-05, -0.0038242340087890625, -1.9073486328125e-06, -0.0005168914794921875, 0.0, -0.006013783626258373, -7.545755215687677e-05, -2.09808349609375e-05, -0.0008087158203125, -1.9073486328125e-06, -0.0022633324842900038, -4.374908530735411e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0008749961853027344, -6.866455078125e-05, 0.0, -0.0001010894775390625, -7.62939453125e-06, -0.00037789344787597656, -1.9073468138230965e-06, -0.00012028215860482305, -1.8715683836489916e-05], "choice_history": [55, 124, 221, 63, 103, "Guardian", "Of", "Kings", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"score": -22.46912956237793, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -22.46909523010254], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 42}
{"beams": [{"score": -0.29241822834728026, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Gurubashi Berserker", "hole1": 5}, {"hole2": "effects", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template38", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}]}, "_type": "Template10", "hole0": 2, "hole1": 7}], "_type": "ClassDef", "name": "GurubashiBerserker", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0012165057705715299, -0.00805240124464035, -0.01554206945002079, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.1920928244535389e-07, -4.172325134277344e-06, 0.0, -5.7220458984375e-06, -0.0022945404052734375, -0.001247406005859375, -1.4781869140279014e-05, -9.894371032714844e-06, -0.0001983642578125, -0.003442049026489258, -1.77621805050876e-05, -0.0001641377166379243, -7.939338684082031e-05, 0.0, -0.0030546188354492188, -2.288818359375e-05, -3.3378546504536644e-06, -1.6689286894688848e-06, -0.00037443137262016535, -7.033334895822918e-06, -0.00586852990090847, -1.3709036466025282e-05, -0.000148773193359375, -0.0001316070556640625, -0.13050460815429688, -7.62939453125e-06, -0.0001621246337890625, -4.38690185546875e-05, -1.71661376953125e-05, -0.0001370906684314832, -1.3828268492943607e-05, -9.918212890625e-05, -0.0020847320556640625, -0.002262115478515625, -6.866455078125e-05, 0.0, -0.04850733280181885, -0.0021923771128058434, -4.231927960063331e-05, -0.003002166748046875, -0.0001010894775390625, -1.9073486328125e-06, -0.010135054588317871, -4.768371127283899e-06, -0.0002117156982421875, -3.4332275390625e-05, -5.3524916438618675e-05, -0.03172016143798828, -0.0037769079208374023, -0.0009788274765014648, -7.82012939453125e-05, -0.0001926422119140625, -3.814697265625e-06, 0.0, -0.001455664518289268, -0.0001404285430908203, -2.6226018235320225e-05, -7.82012939453125e-05, -0.0022487640380859375, -0.0002460479736328125, -0.0004444122314453125, -1.52587890625e-05, -0.0004169940948486328, -0.0023674964904785156, -5.7220458984375e-06, -0.005710208788514137, -0.000110626220703125, -7.2479248046875e-05, -3.0517578125e-05, -0.000578761100769043, -5.53131103515625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Gurubashi", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Character", "Damaged", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Minion", "Is", "Target", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"score": -3.7695505694473397, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Gurubashi Berserker", "hole1": 5}, {"hole2": "effects", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template38", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"id": "MinionDied", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}]}, "_type": "Template10", "hole0": 2, "hole1": 7}], "_type": "ClassDef", "name": "GurubashiBerserker", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0012165057705715299, -0.00805240124464035, -0.01554206945002079, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.1920928244535389e-07, -4.172325134277344e-06, 0.0, -5.7220458984375e-06, -0.0022945404052734375, -0.001247406005859375, -1.4781869140279014e-05, -9.894371032714844e-06, -0.0001983642578125, -0.003442049026489258, -1.77621805050876e-05, -0.0001641377166379243, -7.939338684082031e-05, 0.0, -0.0030546188354492188, -2.288818359375e-05, -3.3378546504536644e-06, -1.6689286894688848e-06, -0.00037443137262016535, -7.033334895822918e-06, -0.00586852990090847, -1.3709036466025282e-05, -0.000148773193359375, -0.0001316070556640625, -0.13050460815429688, -7.62939453125e-06, -0.0001621246337890625, -4.38690185546875e-05, -1.71661376953125e-05, -0.0001370906684314832, -1.3828268492943607e-05, -9.918212890625e-05, -0.0020847320556640625, -0.002262115478515625, -6.866455078125e-05, 0.0, -3.2041215896606445, -0.07234585285186768, -0.0024167299270629883, -8.96453857421875e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.27070653438568115, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.024797558784484863, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.0008043050765991211, -0.0003724098205566406, -5.125998541188892e-06, -6.866455078125e-05, -0.001018524169921875, -0.0001850128173828125, -0.000476837158203125, -7.62939453125e-06, -0.00024080276489257812, -0.0029851198196411133, -3.814697265625e-06, -0.00866363849490881, -4.57763671875e-05, -0.0002841949462890625, -2.47955322265625e-05, -0.0023518800735473633, -6.461142766056582e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Gurubashi", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Minion", "Died", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(MinionDied(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n"}, {"score": -4.443300591589825, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Gurubashi Berserker", "hole1": 5}, {"hole2": "effects", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template38", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}, {"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MinionSummoned"}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}]}, "_type": "Template10", "hole0": 2, "hole1": 7}], "_type": "ClassDef", "name": "GurubashiBerserker", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0012165057705715299, -0.00805240124464035, -0.01554206945002079, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.1920928244535389e-07, -4.172325134277344e-06, 0.0, -5.7220458984375e-06, -0.0022945404052734375, -0.001247406005859375, -1.4781869140279014e-05, -9.894371032714844e-06, -0.0001983642578125, -0.003442049026489258, -1.77621805050876e-05, -0.0001641377166379243, -7.939338684082031e-05, 0.0, -0.0030546188354492188, -2.288818359375e-05, -3.3378546504536644e-06, -1.6689286894688848e-06, -0.00037443137262016535, -7.033334895822918e-06, -0.00586852990090847, -1.3709036466025282e-05, -0.000148773193359375, -0.0001316070556640625, -2.1216859817504883, -4.57763671875e-05, -3.814697265625e-06, -0.00043773651123046875, -4.9591064453125e-05, -0.0011398792266845703, -1.0848005331354216e-05, -1.33514404296875e-05, -0.006537437438964844, -0.3666038513183594, -7.2479248046875e-05, 0.0, -0.009550328366458416, -0.0070810518227517605, -9.727473661769181e-05, -0.0050506591796875, -0.0001220703125, -1.9073486328125e-06, -0.005705118179321289, -4.887576324108522e-06, -0.0002536773681640625, -1.9073486328125e-05, -5.9246962337056175e-05, -0.031838417053222656, -0.0029997825622558594, -0.0029430389404296875, -0.0003299713134765625, -5.91278076171875e-05, -3.814697265625e-06, 0.0, -0.0012964006746187806, -0.00020015239715576172, -3.278252188465558e-05, -8.20159912109375e-05, -0.0025129318237304688, -0.0002498626708984375, -0.00041484832763671875, -1.52587890625e-05, -0.00042057037353515625, -0.00231015682220459, -5.7220458984375e-06, -0.005585837177932262, -0.0001010894775390625, -7.82012939453125e-05, -3.0517578125e-05, -0.0007232427597045898, -5.5432316003134474e-05, 0.0, -1.1444091796875e-05, -0.000335693359375, -5.7220458984375e-06, -7.62939453125e-06, -0.03094492107629776, -3.3497566619189456e-05, -0.0008716583251953125, -0.30685901641845703, -0.000164031982421875, -0.006963132880628109, -1.448014497756958, -0.00034940242767333984, -9.5367431640625e-05, -0.0003108978271484375, -3.814697265625e-06, 0.0, -0.005780935287475586, -0.00012218952178955078, -1.5020368664409034e-05, -0.0001392364501953125, -0.0013151168823242188, -0.0008754730224609375, -0.00074005126953125, -7.62939453125e-06, -0.0007376670837402344, -0.004169106483459473, -3.814697265625e-06, -0.01327566709369421, -5.91278076171875e-05, -0.0001506805419921875, -2.47955322265625e-05, -0.0020259618759155273, -7.522105443058535e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Gurubashi", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Character", "Damaged", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Minion", "Is", "Target", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 49, 174, "Minion", "Summoned", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector())), Effect(MinionSummoned(), ActionTag(Give(\n            ChangeAttack(3)), SelfSelector()))])\n"}, {"score": -4.608828223093148, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Gurubashi Berserker", "hole1": 5}, {"hole2": "effects", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template38", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}]}, "_type": "Template10", "hole0": 2, "hole1": 7}], "_type": "ClassDef", "name": "GurubashiBerserkerBerserker", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0012165057705715299, -0.00805240124464035, -4.1757683753967285, -0.0005453797057271004, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -1.1920928244535389e-07, -2.384185791015625e-06, 0.0, -7.62939453125e-06, -0.0027408599853515625, -0.0014553070068359375, -1.4066622497921344e-05, -9.894371032714844e-06, -0.00478363037109375, -0.1343245506286621, -1.3470647900248878e-05, -0.0001898827322293073, -9.274482727050781e-05, 0.0, -0.0031490325927734375, -2.47955322265625e-05, -3.933898824470816e-06, -1.5497195136049413e-06, -0.00038432469591498375, -6.675708846159978e-06, -0.005784846376627684, -1.3232202945800964e-05, -0.00014495849609375, -0.000133514404296875, -0.15000343322753906, -7.62939453125e-06, -0.000164031982421875, -4.38690185546875e-05, -1.71661376953125e-05, -0.0001370906684314832, -1.3828268492943607e-05, -0.0001010894775390625, -0.0020589828491210938, -0.0022487640380859375, -6.866455078125e-05, 0.0, -0.04834294319152832, -0.002201078925281763, -4.231927960063331e-05, -0.0030412673950195312, -0.0001010894775390625, -1.9073486328125e-06, -0.01024472713470459, -4.649161837733118e-06, -0.000217437744140625, -3.4332275390625e-05, -5.1736777095356956e-05, -0.03169059753417969, -0.003717780113220215, -0.0009961128234863281, -7.82012939453125e-05, -0.0001926422119140625, -3.814697265625e-06, 0.0, -0.0014669894007965922, -0.0001404285430908203, -2.6226018235320225e-05, -7.82012939453125e-05, -0.0022344589233398438, -0.000244140625, -0.00044345855712890625, -1.52587890625e-05, -0.0004150867462158203, -0.0023789405822753906, -5.7220458984375e-06, -0.005783141124993563, -0.0001068115234375, -7.43865966796875e-05, -3.0517578125e-05, -0.0005806684494018555, -5.340576171875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Gurubashi", "Berserker", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Character", "Damaged", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Minion", "Is", "Target", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class GurubashiBerserkerBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"score": -4.615631947103786, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Gurubashi Berserker", "hole1": 5}, {"hole2": "effects", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template38", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}, {"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MinionSelector"}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}]}, "_type": "Template10", "hole0": 2, "hole1": 7}], "_type": "ClassDef", "name": "GurubashiBerserker", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0012165057705715299, -0.00805240124464035, -0.01554206945002079, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.1920928244535389e-07, -4.172325134277344e-06, 0.0, -5.7220458984375e-06, -0.0022945404052734375, -0.001247406005859375, -1.4781869140279014e-05, -9.894371032714844e-06, -0.0001983642578125, -0.003442049026489258, -1.77621805050876e-05, -0.0001641377166379243, -7.939338684082031e-05, 0.0, -0.0030546188354492188, -2.288818359375e-05, -3.3378546504536644e-06, -1.6689286894688848e-06, -0.00037443137262016535, -7.033334895822918e-06, -0.00586852990090847, -1.3709036466025282e-05, -0.000148773193359375, -0.0001316070556640625, -2.1216859817504883, -4.57763671875e-05, -3.814697265625e-06, -0.00043773651123046875, -4.9591064453125e-05, -0.0011398792266845703, -1.0848005331354216e-05, -1.33514404296875e-05, -0.006537437438964844, -0.3666038513183594, -7.2479248046875e-05, 0.0, -0.009550328366458416, -0.0070810518227517605, -9.727473661769181e-05, -0.0050506591796875, -0.0001220703125, -1.9073486328125e-06, -0.005705118179321289, -4.887576324108522e-06, -0.0002536773681640625, -1.9073486328125e-05, -5.9246962337056175e-05, -0.031838417053222656, -0.0029997825622558594, -0.0029430389404296875, -0.0003299713134765625, -5.91278076171875e-05, -3.814697265625e-06, 0.0, -0.0012964006746187806, -0.00020015239715576172, -3.278252188465558e-05, -8.20159912109375e-05, -0.0025129318237304688, -0.0002498626708984375, -0.00041484832763671875, -1.52587890625e-05, -0.00042057037353515625, -0.00231015682220459, -5.7220458984375e-06, -0.005585837177932262, -0.0001010894775390625, -7.82012939453125e-05, -3.0517578125e-05, -0.0007232427597045898, -5.5432316003134474e-05, 0.0, -1.1444091796875e-05, -0.000335693359375, -5.7220458984375e-06, -7.62939453125e-06, -0.03094492107629776, -3.3497566619189456e-05, -0.0008716583251953125, -0.30685901641845703, -0.000164031982421875, -0.006963132880628109, -1.6210129261016846, 0.0, -5.7220458984375e-06, -0.0002346038818359375, -1.9073486328125e-06, 0.0, -0.010179400444030762, -0.00013172626495361328, -1.049041748046875e-05, -0.0001163482666015625, -0.0012464523315429688, -0.00067138671875, -0.0006608963012695312, -7.62939453125e-06, -0.0006934404373168945, -0.0033267736434936523, -5.7220458984375e-06, -0.009535378776490688, -5.7220458984375e-05, -0.0002765655517578125, -2.6702880859375e-05, -0.002335071563720703, -8.666514622746035e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Gurubashi", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Character", "Damaged", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Minion", "Is", "Target", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector())), Effect(MinionSelector(), ActionTag(Give(\n            ChangeAttack(3)), SelfSelector()))])\n"}, {"score": -4.6979314724867365, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Gurubashi Berserker", "hole1": 5}, {"hole2": "effects", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template38", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}, {"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MinionPlaced"}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}]}, "_type": "Template10", "hole0": 2, "hole1": 7}], "_type": "ClassDef", "name": "GurubashiBerserker", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0012165057705715299, -0.00805240124464035, -0.01554206945002079, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.1920928244535389e-07, -4.172325134277344e-06, 0.0, -5.7220458984375e-06, -0.0022945404052734375, -0.001247406005859375, -1.4781869140279014e-05, -9.894371032714844e-06, -0.0001983642578125, -0.003442049026489258, -1.77621805050876e-05, -0.0001641377166379243, -7.939338684082031e-05, 0.0, -0.0030546188354492188, -2.288818359375e-05, -3.3378546504536644e-06, -1.6689286894688848e-06, -0.00037443137262016535, -7.033334895822918e-06, -0.00586852990090847, -1.3709036466025282e-05, -0.000148773193359375, -0.0001316070556640625, -2.1216859817504883, -4.57763671875e-05, -3.814697265625e-06, -0.00043773651123046875, -4.9591064453125e-05, -0.0011398792266845703, -1.0848005331354216e-05, -1.33514404296875e-05, -0.006537437438964844, -0.3666038513183594, -7.2479248046875e-05, 0.0, -0.009550328366458416, -0.0070810518227517605, -9.727473661769181e-05, -0.0050506591796875, -0.0001220703125, -1.9073486328125e-06, -0.005705118179321289, -4.887576324108522e-06, -0.0002536773681640625, -1.9073486328125e-05, -5.9246962337056175e-05, -0.031838417053222656, -0.0029997825622558594, -0.0029430389404296875, -0.0003299713134765625, -5.91278076171875e-05, -3.814697265625e-06, 0.0, -0.0012964006746187806, -0.00020015239715576172, -3.278252188465558e-05, -8.20159912109375e-05, -0.0025129318237304688, -0.0002498626708984375, -0.00041484832763671875, -1.52587890625e-05, -0.00042057037353515625, -0.00231015682220459, -5.7220458984375e-06, -0.005585837177932262, -0.0001010894775390625, -7.82012939453125e-05, -3.0517578125e-05, -0.0007232427597045898, -5.5432316003134474e-05, 0.0, -1.1444091796875e-05, -0.000335693359375, -5.7220458984375e-06, -7.62939453125e-06, -0.03094492107629776, -3.3497566619189456e-05, -0.0008716583251953125, -0.30685901641845703, -0.000164031982421875, -0.006963132880628109, -1.6793644428253174, -0.001515259500592947, -1.52587890625e-05, -0.0023784637451171875, -3.814697265625e-06, 0.0, -0.02576160430908203, -0.00014519691467285156, -1.2874602361989673e-05, -0.000102996826171875, -0.001312255859375, -0.0009613037109375, -0.0008783340454101562, -9.5367431640625e-06, -0.0007718801498413086, -0.004168033599853516, -5.7220458984375e-06, -0.012821447104215622, -9.1552734375e-05, -0.000164031982421875, -2.6702880859375e-05, -0.0023289918899536133, -8.285044896183535e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Gurubashi", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Character", "Damaged", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Minion", "Is", "Target", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 49, 174, "Minion", "Placed", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector())), Effect(MinionPlaced(), ActionTag(Give(\n            ChangeAttack(3)), SelfSelector()))])\n"}, {"score": -4.752406275641071, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Gurubashi Berserker", "hole1": 5}, {"hole2": "effects", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template38", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}, {"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MinionHas"}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}]}, "_type": "Template10", "hole0": 2, "hole1": 7}], "_type": "ClassDef", "name": "GurubashiBerserker", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0012165057705715299, -0.00805240124464035, -0.01554206945002079, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.1920928244535389e-07, -4.172325134277344e-06, 0.0, -5.7220458984375e-06, -0.0022945404052734375, -0.001247406005859375, -1.4781869140279014e-05, -9.894371032714844e-06, -0.0001983642578125, -0.003442049026489258, -1.77621805050876e-05, -0.0001641377166379243, -7.939338684082031e-05, 0.0, -0.0030546188354492188, -2.288818359375e-05, -3.3378546504536644e-06, -1.6689286894688848e-06, -0.00037443137262016535, -7.033334895822918e-06, -0.00586852990090847, -1.3709036466025282e-05, -0.000148773193359375, -0.0001316070556640625, -2.1216859817504883, -4.57763671875e-05, -3.814697265625e-06, -0.00043773651123046875, -4.9591064453125e-05, -0.0011398792266845703, -1.0848005331354216e-05, -1.33514404296875e-05, -0.006537437438964844, -0.3666038513183594, -7.2479248046875e-05, 0.0, -0.009550328366458416, -0.0070810518227517605, -9.727473661769181e-05, -0.0050506591796875, -0.0001220703125, -1.9073486328125e-06, -0.005705118179321289, -4.887576324108522e-06, -0.0002536773681640625, -1.9073486328125e-05, -5.9246962337056175e-05, -0.031838417053222656, -0.0029997825622558594, -0.0029430389404296875, -0.0003299713134765625, -5.91278076171875e-05, -3.814697265625e-06, 0.0, -0.0012964006746187806, -0.00020015239715576172, -3.278252188465558e-05, -8.20159912109375e-05, -0.0025129318237304688, -0.0002498626708984375, -0.00041484832763671875, -1.52587890625e-05, -0.00042057037353515625, -0.00231015682220459, -5.7220458984375e-06, -0.005585837177932262, -0.0001010894775390625, -7.82012939453125e-05, -3.0517578125e-05, -0.0007232427597045898, -5.5432316003134474e-05, 0.0, -1.1444091796875e-05, -0.000335693359375, -5.7220458984375e-06, -7.62939453125e-06, -0.03094492107629776, -3.3497566619189456e-05, -0.0008716583251953125, -0.30685901641845703, -0.000164031982421875, -0.006963132880628109, -1.6500370502471924, -0.08860638737678528, -8.20159912109375e-05, -0.0036945343017578125, -3.814697265625e-06, 0.0, -0.019535541534423828, -0.00020432472229003906, -1.049041748046875e-05, -9.34600830078125e-05, -0.0012655258178710938, -0.0008449554443359375, -0.0009632110595703125, -9.5367431640625e-06, -0.0007793903350830078, -0.004339694976806641, -5.7220458984375e-06, -0.013909045606851578, -7.62939453125e-05, -0.0002384185791015625, -2.47955322265625e-05, -0.0025882720947265625, -8.487700688419864e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Gurubashi", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Character", "Damaged", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Minion", "Is", "Target", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 49, 174, "Minion", "Has", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector())), Effect(MinionHas(), ActionTag(Give(\n            ChangeAttack(3)), SelfSelector()))])\n"}, {"score": -4.757126674992371, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Gurubashi Berserker", "hole1": 5}, {"hole2": "effects", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template38", "hole0": "MinionSummoned"}}], "_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}]}, "_type": "Template10", "hole0": 2, "hole1": 7}], "_type": "ClassDef", "name": "GurubashiBerserker", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0012165057705715299, -0.00805240124464035, -0.01554206945002079, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.1920928244535389e-07, -4.172325134277344e-06, 0.0, -5.7220458984375e-06, -0.0022945404052734375, -0.001247406005859375, -1.4781869140279014e-05, -9.894371032714844e-06, -0.0001983642578125, -0.003442049026489258, -1.77621805050876e-05, -0.0001641377166379243, -7.939338684082031e-05, 0.0, -0.0030546188354492188, -2.288818359375e-05, -3.3378546504536644e-06, -1.6689286894688848e-06, -0.00037443137262016535, -7.033334895822918e-06, -0.00586852990090847, -1.3709036466025282e-05, -0.000148773193359375, -0.0001316070556640625, -0.13050460815429688, -7.62939453125e-06, -0.0001621246337890625, -4.38690185546875e-05, -1.71661376953125e-05, -0.0001370906684314832, -1.3828268492943607e-05, -9.918212890625e-05, -0.0020847320556640625, -0.002262115478515625, -6.866455078125e-05, 0.0, -0.04850733280181885, -0.0021923771128058434, -4.231927960063331e-05, -0.003002166748046875, -0.0001010894775390625, -1.9073486328125e-06, -0.010135054588317871, -4.768371127283899e-06, -0.0002117156982421875, -3.4332275390625e-05, -5.3524916438618675e-05, -4.4724578857421875, -0.026762008666992188, -0.00030517578125, -0.0009975433349609375, -1.9073486328125e-06, 0.0, -0.0023190975189208984, -0.0001976490020751953, -1.5377980162156746e-05, -0.0001010894775390625, -0.0021495819091796875, -0.0002803802490234375, -0.000457763671875, -1.52587890625e-05, -0.00044548511505126953, -0.0025600194931030273, -5.7220458984375e-06, -0.005556547082960606, -0.000102996826171875, -9.5367431640625e-05, -4.00543212890625e-05, -0.0005377531051635742, -5.7458873925497755e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Gurubashi", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Character", "Damaged", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Minion", "Summoned", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionSummoned()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"score": -4.944807448203839, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Gurubashi Berserker", "hole1": 5}, {"hole2": "effects", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template38", "hole0": "MinionPlaced"}}], "_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}]}, "_type": "Template10", "hole0": 2, "hole1": 7}], "_type": "ClassDef", "name": "GurubashiBerserker", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0012165057705715299, -0.00805240124464035, -0.01554206945002079, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.1920928244535389e-07, -4.172325134277344e-06, 0.0, -5.7220458984375e-06, -0.0022945404052734375, -0.001247406005859375, -1.4781869140279014e-05, -9.894371032714844e-06, -0.0001983642578125, -0.003442049026489258, -1.77621805050876e-05, -0.0001641377166379243, -7.939338684082031e-05, 0.0, -0.0030546188354492188, -2.288818359375e-05, -3.3378546504536644e-06, -1.6689286894688848e-06, -0.00037443137262016535, -7.033334895822918e-06, -0.00586852990090847, -1.3709036466025282e-05, -0.000148773193359375, -0.0001316070556640625, -0.13050460815429688, -7.62939453125e-06, -0.0001621246337890625, -4.38690185546875e-05, -1.71661376953125e-05, -0.0001370906684314832, -1.3828268492943607e-05, -9.918212890625e-05, -0.0020847320556640625, -0.002262115478515625, -6.866455078125e-05, 0.0, -0.04850733280181885, -0.0021923771128058434, -4.231927960063331e-05, -0.003002166748046875, -0.0001010894775390625, -1.9073486328125e-06, -0.010135054588317871, -4.768371127283899e-06, -0.0002117156982421875, -3.4332275390625e-05, -5.3524916438618675e-05, -4.625672340393066, -0.060317397117614746, -0.0001544952392578125, -0.00110626220703125, -1.9073486328125e-06, 0.0, -0.0028102395590394735, -0.000186920166015625, -1.692770456429571e-05, -8.7738037109375e-05, -0.0022287368774414062, -0.0003185272216796875, -0.00048065185546875, -1.52587890625e-05, -0.0004628896713256836, -0.002712726593017578, -5.7220458984375e-06, -0.005707518197596073, -0.000102996826171875, -8.7738037109375e-05, -3.62396240234375e-05, -0.0005666017532348633, -6.306171417236328e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Gurubashi", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Character", "Damaged", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Minion", "Placed", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionPlaced()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))]\n            )\n"}, {"score": -4.979443373511451, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Gurubashi Berserker", "hole1": 5}, {"hole2": "effects", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template38", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"id": "MinionDied", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}]}, "_type": "Template10", "hole0": 2, "hole1": 7}], "_type": "ClassDef", "name": "GurubashiBerserker", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0012165057705715299, -0.00805240124464035, -0.01554206945002079, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.1920928244535389e-07, -4.172325134277344e-06, 0.0, -5.7220458984375e-06, -0.0022945404052734375, -0.001247406005859375, -1.4781869140279014e-05, -9.894371032714844e-06, -0.0001983642578125, -0.003442049026489258, -1.77621805050876e-05, -0.0001641377166379243, -7.939338684082031e-05, 0.0, -0.0030546188354492188, -2.288818359375e-05, -3.3378546504536644e-06, -1.6689286894688848e-06, -0.00037443137262016535, -7.033334895822918e-06, -0.00586852990090847, -1.3709036466025282e-05, -0.000148773193359375, -0.0001316070556640625, -0.13050460815429688, -7.62939453125e-06, -0.0001621246337890625, -4.38690185546875e-05, -1.71661376953125e-05, -0.0001370906684314832, -1.3828268492943607e-05, -9.918212890625e-05, -0.0020847320556640625, -0.002262115478515625, -6.866455078125e-05, 0.0, -3.2041215896606445, -0.07234585285186768, -0.0024167299270629883, -8.96453857421875e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.4600270986557007, -2.121925172104966e-05, -0.0004825592041015625, -8.96453857421875e-05, -0.00019526414689607918, -0.043442726135253906, -0.004154086112976074, -8.821487426757812e-05, -5.7220458984375e-05, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -0.0028481483459472656, -0.00010728836059570312, -2.5868412194540724e-05, -0.0001068115234375, -0.0012998580932617188, -0.000217437744140625, -0.0003719329833984375, -1.33514404296875e-05, -0.0004621744155883789, -0.0028269290924072266, -7.62939453125e-06, -0.005443135276436806, -9.1552734375e-05, -8.0108642578125e-05, -4.38690185546875e-05, -0.0004843473434448242, -4.7802921471884474e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Gurubashi", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Minion", "Died", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Minion", "Is", "Target", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(MinionDied(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"score": -5.193218133485054, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Gurubashi Berserker", "hole1": 5}, {"hole2": "effects", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template38", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}]}, "_type": "Template10", "hole0": 2, "hole1": 7}], "_type": "ClassDef", "name": "GurubashiBerserker", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0012165057705715299, -0.00805240124464035, -0.01554206945002079, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.1920928244535389e-07, -4.172325134277344e-06, 0.0, -5.7220458984375e-06, -0.0022945404052734375, -0.001247406005859375, -1.4781869140279014e-05, -9.894371032714844e-06, -0.0001983642578125, -0.003442049026489258, -1.77621805050876e-05, -0.0001641377166379243, -7.939338684082031e-05, 0.0, -0.0030546188354492188, -2.288818359375e-05, -3.3378546504536644e-06, -1.6689286894688848e-06, -0.00037443137262016535, -7.033334895822918e-06, -0.00586852990090847, -1.3709036466025282e-05, -0.000148773193359375, -0.0001316070556640625, -0.13050460815429688, -7.62939453125e-06, -0.0001621246337890625, -4.38690185546875e-05, -1.71661376953125e-05, -0.0001370906684314832, -1.3828268492943607e-05, -9.918212890625e-05, -0.0020847320556640625, -0.002262115478515625, -6.866455078125e-05, 0.0, -0.04850733280181885, -0.0021923771128058434, -4.231927960063331e-05, -0.003002166748046875, -0.0001010894775390625, -1.9073486328125e-06, -4.90105676651001, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.042877197265625, -4.1961669921875e-05, 0.0, -2.288818359375e-05, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.0007032155990600586, -0.0004737377166748047, -5.7220440794480965e-06, -6.4849853515625e-05, -0.0019311904907226562, -0.000225067138671875, -0.000453948974609375, -7.62939453125e-06, -0.00024688243865966797, -0.0026744604110717773, -3.814697265625e-06, -0.008079170249402523, -6.4849853515625e-05, -0.0002460479736328125, -1.71661376953125e-05, -0.002678394317626953, -7.987021672306582e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Gurubashi", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Character", "Damaged", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(player=\n            BothPlayer()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n"}, {"score": -5.270735267237967, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Gurubashi Berserker", "hole1": 5}, {"hole2": "effects", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template38", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}]}, "_type": "Template10", "hole0": 2, "hole1": 7}], "_type": "ClassDef", "name": "Gurubashi<UNK>", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0012165057705715299, -4.827014446258545, -0.18090187013149261, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -3.576278118089249e-07, -4.172325134277344e-06, 0.0, -5.7220458984375e-06, -0.0019435882568359375, -0.0010852813720703125, -1.4185829968482722e-05, -9.894371032714844e-06, -0.0001850128173828125, -0.0038175582885742188, -1.96695291379001e-05, -0.0001463782973587513, -7.748603820800781e-05, 0.0, -0.0029783248901367188, -2.288818359375e-05, -3.2186455882765586e-06, -1.6689286894688848e-06, -0.00037776929093524814, -7.152543730626348e-06, -0.005910010077059269, -1.3709036466025282e-05, -0.0001506805419921875, -0.000133514404296875, -0.1244039535522461, -7.62939453125e-06, -0.0001659393310546875, -4.38690185546875e-05, -1.71661376953125e-05, -0.0001370906684314832, -1.3828268492943607e-05, -9.918212890625e-05, -0.0020732879638671875, -0.0022716522216796875, -6.866455078125e-05, 0.0, -0.04881727695465088, -0.0021882050205022097, -4.220007031108253e-05, -0.0029821395874023438, -0.0001010894775390625, -1.9073486328125e-06, -0.010101795196533203, -4.768371127283899e-06, -0.0002117156982421875, -3.4332275390625e-05, -5.3524916438618675e-05, -0.03177356719970703, -0.0037845373153686523, -0.0009769201278686523, -7.62939453125e-05, -0.0001926422119140625, -3.814697265625e-06, 0.0, -0.0014499424723908305, -0.0001404285430908203, -2.6226018235320225e-05, -7.82012939453125e-05, -0.00225067138671875, -0.0002460479736328125, -0.0004444122314453125, -1.52587890625e-05, -0.0004169940948486328, -0.002365589141845703, -5.7220458984375e-06, -0.0056950743310153484, -0.000110626220703125, -7.2479248046875e-05, -3.0517578125e-05, -0.0005768537521362305, -5.53131103515625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Gurubashi", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Character", "Damaged", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Minion", "Is", "Target", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Gurubashi<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"score": -6.586453933078239, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Gurubashi Berserker", "hole1": 5}, {"hole2": "effects", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template38", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"id": "CharacterDamaged", "_type": "Name"}}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}, {"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "MinionHasAttack"}]}, {"_type": "Call", "func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole2": 3, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}]}, "_type": "Template10", "hole0": 2, "hole1": 7}], "_type": "ClassDef", "name": "GurubashiBerserker", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0012165057705715299, -0.00805240124464035, -0.01554206945002079, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.1920928244535389e-07, -4.172325134277344e-06, 0.0, -5.7220458984375e-06, -0.0022945404052734375, -0.001247406005859375, -1.4781869140279014e-05, -9.894371032714844e-06, -0.0001983642578125, -0.003442049026489258, -1.77621805050876e-05, -0.0001641377166379243, -7.939338684082031e-05, 0.0, -0.0030546188354492188, -2.288818359375e-05, -3.3378546504536644e-06, -1.6689286894688848e-06, -0.00037443137262016535, -7.033334895822918e-06, -0.00586852990090847, -1.3709036466025282e-05, -0.000148773193359375, -0.0001316070556640625, -2.1216859817504883, -4.57763671875e-05, -3.814697265625e-06, -0.00043773651123046875, -4.9591064453125e-05, -0.0011398792266845703, -1.0848005331354216e-05, -1.33514404296875e-05, -0.006537437438964844, -0.3666038513183594, -7.2479248046875e-05, 0.0, -0.009550328366458416, -0.0070810518227517605, -9.727473661769181e-05, -0.0050506591796875, -0.0001220703125, -1.9073486328125e-06, -0.005705118179321289, -4.887576324108522e-06, -0.0002536773681640625, -1.9073486328125e-05, -5.9246962337056175e-05, -0.031838417053222656, -0.0029997825622558594, -0.0029430389404296875, -0.0003299713134765625, -5.91278076171875e-05, -3.814697265625e-06, 0.0, -0.0012964006746187806, -0.00020015239715576172, -3.278252188465558e-05, -8.20159912109375e-05, -0.0025129318237304688, -0.0002498626708984375, -0.00041484832763671875, -1.52587890625e-05, -0.00042057037353515625, -0.00231015682220459, -5.7220458984375e-06, -0.005585837177932262, -0.0001010894775390625, -7.82012939453125e-05, -3.0517578125e-05, -0.0007232427597045898, -5.5432316003134474e-05, 0.0, -1.1444091796875e-05, -0.000335693359375, -5.7220458984375e-06, -7.62939453125e-06, -0.03094492107629776, -3.3497566619189456e-05, -0.0008716583251953125, -1.3346242904663086, -0.11777114868164062, -1.1444091796875e-05, 0.0, -1.0767205953598022, -0.03195309638977051, 0.0, -0.04327201843261719, -0.000209808349609375, -0.36663514375686646, -0.323178768157959, -0.6139131188392639, -3.814697265625e-06, -0.0010738372802734375, -8.0108642578125e-05, -5.7220458984375e-06, 0.0, -0.001110672950744629, -0.00020623207092285156, -4.649161837733118e-06, -6.29425048828125e-05, -0.0011806488037109375, -0.0005397796630859375, -0.0007867813110351562, -1.1444091796875e-05, -0.00036525726318359375, -0.005264639854431152, -3.814697265625e-06, -0.013680770993232727, -5.91278076171875e-05, -0.000152587890625, -3.62396240234375e-05, -0.0024487972259521484, -6.389617192326114e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Gurubashi", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Character", "Damaged", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Minion", "Is", "Target", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "Minion", "Has", "Attack", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector())), Effect(Give(MinionHasAttack()), ActionTag(\n            Give(ChangeAttack(3)), SelfSelector()))])\n"}, {"score": -7.998459630218342, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Gurubashi Berserker", "hole1": 5}, {"_type": "Template11", "hole0": 2, "hole1": 7}], "_type": "ClassDef", "name": "GurubashiBerserker", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0012165057705715299, -0.00805240124464035, -0.01554206945002079, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.1920928244535389e-07, -4.172325134277344e-06, 0.0, -5.7220458984375e-06, -0.0022945404052734375, -0.001247406005859375, -1.4781869140279014e-05, -9.894371032714844e-06, -0.0001983642578125, -0.003442049026489258, -1.77621805050876e-05, -0.0001641377166379243, -7.939338684082031e-05, 0.0, -7.965748310089111, -0.000164031982421875, -1.9073486328125e-06, -2.264974000354414e-06, -0.00019001959299203008, -2.7418097943154862e-06], "choice_history": [55, 124, 221, 63, 103, "Gurubashi", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 73, 146, "2", "<EOS>", "7", "<EOS>"], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7)\n"}, {"score": -22.85288429260254, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.814697265625e-06, 0.0, -22.852880477905273], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 43}
{"beams": [{"score": -1.4495345161208917, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 3}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 3}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HammerOfWrath", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.62396240234375e-05, -0.0004978179931640625, -0.0001468658447265625, -0.001003265380859375, -1.9073486328125e-05, -3.242440288886428e-05, -0.00025784020544961095, -0.011264204047620296, -0.0011657429859042168, -0.000164031982421875, -5.340576171875e-05, -5.7220458984375e-06, -0.00019669531320687383, -1.1801719665527344e-05, 0.0, -7.05718994140625e-05, -0.00420379638671875, -3.814697265625e-06, -9.38159428187646e-05, -6.699562072753906e-05, -3.4332275390625e-05, -0.000118255615234375, -0.0001049041748046875, -4.863728827331215e-05, -4.76837158203125e-05, -0.00292205810546875, -8.20159912109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012607574462890625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003211498260498047, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.0005950927734375, -0.0002002716064453125, -6.103515625e-05, -1.9192511899746023e-05, -8.237361907958984e-05, -0.00024783489061519504, -0.0001220703125, -0.0009065864724107087, -0.000324249267578125, -0.0003757476806640625, -9.918212890625e-05, -0.00027630478143692017, -0.00019156932830810547, -1.9073486328125e-06, -8.7738037109375e-05, -0.000885009765625, -1.9073486328125e-06, -0.005854606628417969, -1.1682510375976562e-05, -0.0038918256759643555, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004982947721146047, -3.576278118089249e-07, -0.030530095100402832, -7.152555099310121e-07, -0.000110626220703125, -0.0010662078857421875, -1.71661376953125e-05, -0.000903010368347168, -3.576278118089249e-07, -0.0001773834228515625, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -8.7738037109375e-05, 0.0, -6.115436553955078e-05, -1.9073486328125e-06, -0.008742690086364746, -1.1563301086425781e-05, -0.0012302398681640625, -7.62939453125e-05, -2.9087066650390625e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -5.91278076171875e-05, 0.0, -3.325938087073155e-05, 0.0, -1.9073486328125e-06, -2.5391578674316406e-05, -1.1920928244535389e-07, -7.62939453125e-06, -2.6941299438476562e-05, -3.3378591979271732e-06, -0.08665847778320312, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -2.0980687622795813e-05, -1.9073486328125e-06, -2.8967857360839844e-05, 0.0, -2.6702880859375e-05, -0.00176239013671875, 0.0, -7.82012939453125e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -8.940695806813892e-06, -0.006096839904785156, -0.000640869140625, -0.6753215789794922, -0.0001735687255859375, -0.09948044270277023, -2.47955322265625e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.008111953735351562, -3.814697265625e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00086212158203125, -9.5367431640625e-06, -0.006334424018859863, 0.0, -2.6702879040385596e-05, -5.9604644775390625e-06, -0.12920725345611572, -1.072883515007561e-05, -7.62939453125e-06, -0.020948410034179688, -1.33514404296875e-05, -0.33063527941703796, 0.0, -4.1961669921875e-05, -4.38690185546875e-05, -0.0001964569091796875, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "Hammer", "Of", "Wrath", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.damage(3, self)\n"}, {"score": -1.5772058995295168, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HammerOfWrath", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.62396240234375e-05, -0.0004978179931640625, -0.0001468658447265625, -0.001003265380859375, -1.9073486328125e-05, -3.242440288886428e-05, -0.00025784020544961095, -0.011264204047620296, -0.0011657429859042168, -0.000164031982421875, -5.340576171875e-05, -5.7220458984375e-06, -0.00019669531320687383, -1.1801719665527344e-05, 0.0, -7.05718994140625e-05, -0.00420379638671875, -3.814697265625e-06, -9.38159428187646e-05, -6.699562072753906e-05, -3.4332275390625e-05, -0.000118255615234375, -0.0001049041748046875, -4.863728827331215e-05, -4.76837158203125e-05, -0.00292205810546875, -8.20159912109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012607574462890625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003211498260498047, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.0005950927734375, -0.0002002716064453125, -6.103515625e-05, -1.9192511899746023e-05, -8.237361907958984e-05, -0.00024783489061519504, -0.0001220703125, -0.0009065864724107087, -0.000324249267578125, -0.0003757476806640625, -9.918212890625e-05, -0.00027630478143692017, -0.00019156932830810547, -1.9073486328125e-06, -8.7738037109375e-05, -0.000885009765625, -1.9073486328125e-06, -0.005854606628417969, -1.1682510375976562e-05, -0.0038918256759643555, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004982947721146047, -3.576278118089249e-07, -0.030530095100402832, -7.152555099310121e-07, -0.000110626220703125, -0.0010662078857421875, -1.71661376953125e-05, -0.000903010368347168, -3.576278118089249e-07, -0.0001773834228515625, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -8.7738037109375e-05, 0.0, -6.115436553955078e-05, -1.9073486328125e-06, -0.008742690086364746, -1.1563301086425781e-05, -0.0012302398681640625, -7.62939453125e-05, -2.9087066650390625e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -5.91278076171875e-05, 0.0, -3.325938087073155e-05, 0.0, -1.9073486328125e-06, -2.5391578674316406e-05, -1.1920928244535389e-07, -7.62939453125e-06, -2.6941299438476562e-05, -3.3378591979271732e-06, -0.08665847778320312, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -2.0980687622795813e-05, -1.9073486328125e-06, -2.8967857360839844e-05, 0.0, -2.6702880859375e-05, -0.00176239013671875, 0.0, -7.82012939453125e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -8.940695806813892e-06, -0.006096839904785156, -0.000640869140625, -1.3649425506591797, -0.0001468658447265625, -0.0017744243377819657, -7.486154208891094e-05, -0.0002269744873046875, -5.7220458984375e-06, 0.0, -0.028667449951171875, -7.62939453125e-06, -3.814697265625e-06, -0.0006618499755859375, -5.7220458984375e-06, -0.000537872314453125, -2.3841830625315197e-06, -0.0021706153638660908, 0.0], "choice_history": [55, 124, 221, 63, 103, "Hammer", "Of", "Wrath", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score": -2.174331059944997, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HammerOfWrath", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.62396240234375e-05, -0.0004978179931640625, -0.0001468658447265625, -0.001003265380859375, -1.9073486328125e-05, -3.242440288886428e-05, -0.00025784020544961095, -0.011264204047620296, -0.0011657429859042168, -0.000164031982421875, -5.340576171875e-05, -5.7220458984375e-06, -0.00019669531320687383, -1.1801719665527344e-05, 0.0, -7.05718994140625e-05, -0.00420379638671875, -3.814697265625e-06, -9.38159428187646e-05, -6.699562072753906e-05, -3.4332275390625e-05, -0.000118255615234375, -0.0001049041748046875, -4.863728827331215e-05, -4.76837158203125e-05, -0.00292205810546875, -8.20159912109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012607574462890625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003211498260498047, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.0005950927734375, -0.0002002716064453125, -6.103515625e-05, -1.9192511899746023e-05, -8.237361907958984e-05, -0.00024783489061519504, -0.0001220703125, -0.0009065864724107087, -0.000324249267578125, -0.0003757476806640625, -9.918212890625e-05, -0.00027630478143692017, -0.00019156932830810547, -1.9073486328125e-06, -8.7738037109375e-05, -0.000885009765625, -1.9073486328125e-06, -0.005854606628417969, -1.1682510375976562e-05, -0.0038918256759643555, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004982947721146047, -3.576278118089249e-07, -0.030530095100402832, -7.152555099310121e-07, -0.000110626220703125, -0.0010662078857421875, -1.71661376953125e-05, -0.000903010368347168, -3.576278118089249e-07, -0.0001773834228515625, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -8.7738037109375e-05, 0.0, -6.115436553955078e-05, -1.9073486328125e-06, -0.008742690086364746, -1.1563301086425781e-05, -0.0012302398681640625, -7.62939453125e-05, -2.9087066650390625e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -5.91278076171875e-05, 0.0, -3.325938087073155e-05, 0.0, -1.9073486328125e-06, -2.5391578674316406e-05, -1.1920928244535389e-07, -7.62939453125e-06, -2.6941299438476562e-05, -3.3378591979271732e-06, -0.08665847778320312, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -2.0980687622795813e-05, -1.9073486328125e-06, -2.8967857360839844e-05, 0.0, -2.6702880859375e-05, -0.00176239013671875, 0.0, -7.82012939453125e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -8.940695806813892e-06, -0.006096839904785156, -0.000640869140625, -1.4939680099487305, -0.000598907470703125, -7.62939453125e-06, -3.814697265625e-06, -0.0004329681396484375, 0.0, -4.1961669921875e-05, 0.0, -0.0007421970367431641, -1.1920928244535389e-07, -1.1205666851310525e-05, -2.3841855067985307e-07, -0.3939710855484009, -4.768370445162873e-07, -0.0032939910888671875, -0.02102947235107422, 0.0, -0.015909194946289062, -2.3841855067985307e-07, -0.0020236968994140625, -2.09808349609375e-05, -0.001598358154296875, -0.0029239654541015625, -3.814697265625e-06, -5.7220458984375e-06, -0.05770683288574219, -3.814697265625e-06, -0.0007686614990234375, -1.5497195136049413e-06, -0.0012849895283579826, 0.0], "choice_history": [55, 124, 221, 63, 103, "Hammer", "Of", "Wrath", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n"}, {"score": -2.614798437143108, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 3}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HammerOfWrath", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.62396240234375e-05, -0.0004978179931640625, -0.0001468658447265625, -0.001003265380859375, -1.9073486328125e-05, -3.242440288886428e-05, -0.00025784020544961095, -0.011264204047620296, -0.0011657429859042168, -0.000164031982421875, -5.340576171875e-05, -5.7220458984375e-06, -0.00019669531320687383, -1.1801719665527344e-05, 0.0, -7.05718994140625e-05, -0.00420379638671875, -3.814697265625e-06, -9.38159428187646e-05, -6.699562072753906e-05, -3.4332275390625e-05, -0.000118255615234375, -0.0001049041748046875, -4.863728827331215e-05, -4.76837158203125e-05, -0.00292205810546875, -8.20159912109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012607574462890625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003211498260498047, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.0005950927734375, -0.0002002716064453125, -6.103515625e-05, -1.9192511899746023e-05, -8.237361907958984e-05, -0.00024783489061519504, -0.0001220703125, -0.0009065864724107087, -0.000324249267578125, -0.0003757476806640625, -9.918212890625e-05, -0.00027630478143692017, -0.00019156932830810547, -1.9073486328125e-06, -8.7738037109375e-05, -0.000885009765625, -1.9073486328125e-06, -0.005854606628417969, -1.1682510375976562e-05, -0.0038918256759643555, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004982947721146047, -3.576278118089249e-07, -0.030530095100402832, -7.152555099310121e-07, -0.000110626220703125, -0.0010662078857421875, -1.71661376953125e-05, -0.000903010368347168, -3.576278118089249e-07, -0.0001773834228515625, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -8.7738037109375e-05, 0.0, -6.115436553955078e-05, -1.9073486328125e-06, -0.008742690086364746, -1.1563301086425781e-05, -0.0012302398681640625, -7.62939453125e-05, -2.9087066650390625e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -5.91278076171875e-05, 0.0, -3.325938087073155e-05, 0.0, -1.9073486328125e-06, -2.5391578674316406e-05, -1.1920928244535389e-07, -7.62939453125e-06, -2.6941299438476562e-05, -3.3378591979271732e-06, -0.08665847778320312, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -2.0980687622795813e-05, -1.9073486328125e-06, -2.8967857360839844e-05, 0.0, -2.6702880859375e-05, -0.00176239013671875, 0.0, -7.82012939453125e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -8.940695806813892e-06, -0.006096839904785156, -0.000640869140625, -0.6753215789794922, -0.0001735687255859375, -0.09948044270277023, -2.47955322265625e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.008111953735351562, -3.814697265625e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00086212158203125, -9.5367431640625e-06, -0.006334424018859863, 0.0, -2.6702879040385596e-05, -5.9604644775390625e-06, -0.12920725345611572, -1.072883515007561e-05, -7.62939453125e-06, -0.020948410034179688, -1.33514404296875e-05, -1.4954028129577637, 0.0, -0.00058746337890625, -3.0517578125e-05, -0.00016021728515625, -7.152555099310121e-07], "choice_history": [55, 124, 221, 63, 103, "Hammer", "Of", "Wrath", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.damage(4, self)\n"}, {"score": -3.4870659729685443, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 3}, {"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HammerOfWrath", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.62396240234375e-05, -0.0004978179931640625, -0.0001468658447265625, -0.001003265380859375, -1.9073486328125e-05, -3.242440288886428e-05, -0.00025784020544961095, -0.011264204047620296, -0.0011657429859042168, -0.000164031982421875, -5.340576171875e-05, -5.7220458984375e-06, -0.00019669531320687383, -1.1801719665527344e-05, 0.0, -7.05718994140625e-05, -0.00420379638671875, -3.814697265625e-06, -9.38159428187646e-05, -6.699562072753906e-05, -3.4332275390625e-05, -0.000118255615234375, -0.0001049041748046875, -4.863728827331215e-05, -4.76837158203125e-05, -0.00292205810546875, -8.20159912109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012607574462890625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003211498260498047, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.0005950927734375, -0.0002002716064453125, -6.103515625e-05, -1.9192511899746023e-05, -8.237361907958984e-05, -0.00024783489061519504, -0.0001220703125, -0.0009065864724107087, -0.000324249267578125, -0.0003757476806640625, -9.918212890625e-05, -0.00027630478143692017, -0.00019156932830810547, -1.9073486328125e-06, -8.7738037109375e-05, -0.000885009765625, -1.9073486328125e-06, -0.005854606628417969, -1.1682510375976562e-05, -0.0038918256759643555, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004982947721146047, -3.576278118089249e-07, -0.030530095100402832, -7.152555099310121e-07, -0.000110626220703125, -0.0010662078857421875, -1.71661376953125e-05, -0.000903010368347168, -3.576278118089249e-07, -0.0001773834228515625, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -8.7738037109375e-05, 0.0, -6.115436553955078e-05, -1.9073486328125e-06, -0.008742690086364746, -1.1563301086425781e-05, -0.0012302398681640625, -7.62939453125e-05, -2.9087066650390625e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -5.91278076171875e-05, 0.0, -3.325938087073155e-05, 0.0, -1.9073486328125e-06, -2.5391578674316406e-05, -1.1920928244535389e-07, -7.62939453125e-06, -2.6941299438476562e-05, -3.3378591979271732e-06, -0.08665847778320312, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -2.0980687622795813e-05, -1.9073486328125e-06, -2.8967857360839844e-05, 0.0, -2.6702880859375e-05, -0.00176239013671875, 0.0, -7.82012939453125e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -8.940695806813892e-06, -0.006096839904785156, -0.000640869140625, -1.4939680099487305, -0.000598907470703125, -7.62939453125e-06, -3.814697265625e-06, -0.0004329681396484375, 0.0, -4.1961669921875e-05, 0.0, -0.0007421970367431641, -1.1920928244535389e-07, -1.1205666851310525e-05, -2.3841855067985307e-07, -1.283286690711975, -6.4373016357421875e-06, -5.7220458984375e-06, -0.0024204254150390625, -7.62939453125e-06, -0.07030005007982254, 0.0, -6.67572021484375e-05, -0.00012969970703125, -0.00011157989501953125, -4.768370445162873e-07, -0.14495372772216797, -2.09808349609375e-05, -0.02448749542236328, -0.04902076721191406, -1.1444091796875e-05, -4.1961669921875e-05, -0.23739147186279297, -1.9073486328125e-05, -0.00014495849609375, -2.741813204920618e-06, -0.0008516674279235303, 0.0], "choice_history": [55, 124, 221, 63, 103, "Hammer", "Of", "Wrath", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "3", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(3, self)\n        player.draw()\n"}, {"score": -3.819883871163782, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 4}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 3}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HammerOfWrath", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.62396240234375e-05, -0.0004978179931640625, -0.0001468658447265625, -0.001003265380859375, -1.9073486328125e-05, -3.242440288886428e-05, -0.00025784020544961095, -0.011264204047620296, -0.0011657429859042168, -0.000164031982421875, -5.340576171875e-05, -5.7220458984375e-06, -0.00019669531320687383, -1.1801719665527344e-05, 0.0, -7.05718994140625e-05, -0.00420379638671875, -3.814697265625e-06, -9.38159428187646e-05, -6.699562072753906e-05, -3.4332275390625e-05, -0.000118255615234375, -0.0001049041748046875, -4.863728827331215e-05, -4.76837158203125e-05, -0.00292205810546875, -8.20159912109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012607574462890625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003211498260498047, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.0005950927734375, -0.0002002716064453125, -6.103515625e-05, -1.9192511899746023e-05, -8.237361907958984e-05, -0.00024783489061519504, -0.0001220703125, -0.0009065864724107087, -0.000324249267578125, -0.0003757476806640625, -9.918212890625e-05, -0.00027630478143692017, -0.00019156932830810547, -1.9073486328125e-06, -8.7738037109375e-05, -0.000885009765625, -1.9073486328125e-06, -0.005854606628417969, -1.1682510375976562e-05, -0.0038918256759643555, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004982947721146047, -3.576278118089249e-07, -0.030530095100402832, -7.152555099310121e-07, -0.000110626220703125, -0.0010662078857421875, -1.71661376953125e-05, -0.000903010368347168, -3.576278118089249e-07, -0.0001773834228515625, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -8.7738037109375e-05, 0.0, -6.115436553955078e-05, -1.9073486328125e-06, -0.008742690086364746, -1.1563301086425781e-05, -0.0012302398681640625, -7.62939453125e-05, -2.9087066650390625e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -5.91278076171875e-05, 0.0, -3.325938087073155e-05, 0.0, -1.9073486328125e-06, -2.5391578674316406e-05, -1.1920928244535389e-07, -7.62939453125e-06, -2.6941299438476562e-05, -3.3378591979271732e-06, -0.08665847778320312, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -2.0980687622795813e-05, -1.9073486328125e-06, -2.8967857360839844e-05, 0.0, -2.6702880859375e-05, -0.00176239013671875, 0.0, -7.82012939453125e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -8.940695806813892e-06, -0.006096839904785156, -0.000640869140625, -0.6753215789794922, -0.0001735687255859375, -2.461296319961548, -3.933906555175781e-06, -4.00543212890625e-05, -0.0002040863037109375, -1.9073486328125e-06, -0.0002307891845703125, -9.5367431640625e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0005741119384765625, -9.5367431640625e-06, -0.005685925483703613, 0.0, -1.8835065930034034e-05, -4.0531158447265625e-06, -0.12476813793182373, -8.344650268554688e-06, -5.7220458984375e-06, -0.019693374633789062, -1.33514404296875e-05, -0.3535400331020355, 0.0, -4.00543212890625e-05, -4.38690185546875e-05, -0.0001926422119140625, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "Hammer", "Of", "Wrath", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.damage(3, self)\n"}, {"score": -4.086671720529452, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 3}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 2}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HammerOfWrath", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.62396240234375e-05, -0.0004978179931640625, -0.0001468658447265625, -0.001003265380859375, -1.9073486328125e-05, -3.242440288886428e-05, -0.00025784020544961095, -0.011264204047620296, -0.0011657429859042168, -0.000164031982421875, -5.340576171875e-05, -5.7220458984375e-06, -0.00019669531320687383, -1.1801719665527344e-05, 0.0, -7.05718994140625e-05, -0.00420379638671875, -3.814697265625e-06, -9.38159428187646e-05, -6.699562072753906e-05, -3.4332275390625e-05, -0.000118255615234375, -0.0001049041748046875, -4.863728827331215e-05, -4.76837158203125e-05, -0.00292205810546875, -8.20159912109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012607574462890625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003211498260498047, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.0005950927734375, -0.0002002716064453125, -6.103515625e-05, -1.9192511899746023e-05, -8.237361907958984e-05, -0.00024783489061519504, -0.0001220703125, -0.0009065864724107087, -0.000324249267578125, -0.0003757476806640625, -9.918212890625e-05, -0.00027630478143692017, -0.00019156932830810547, -1.9073486328125e-06, -8.7738037109375e-05, -0.000885009765625, -1.9073486328125e-06, -0.005854606628417969, -1.1682510375976562e-05, -0.0038918256759643555, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004982947721146047, -3.576278118089249e-07, -0.030530095100402832, -7.152555099310121e-07, -0.000110626220703125, -0.0010662078857421875, -1.71661376953125e-05, -0.000903010368347168, -3.576278118089249e-07, -0.0001773834228515625, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -8.7738037109375e-05, 0.0, -6.115436553955078e-05, -1.9073486328125e-06, -0.008742690086364746, -1.1563301086425781e-05, -0.0012302398681640625, -7.62939453125e-05, -2.9087066650390625e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -5.91278076171875e-05, 0.0, -3.325938087073155e-05, 0.0, -1.9073486328125e-06, -2.5391578674316406e-05, -1.1920928244535389e-07, -7.62939453125e-06, -2.6941299438476562e-05, -3.3378591979271732e-06, -0.08665847778320312, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -2.0980687622795813e-05, -1.9073486328125e-06, -2.8967857360839844e-05, 0.0, -2.6702880859375e-05, -0.00176239013671875, 0.0, -7.82012939453125e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -8.940695806813892e-06, -0.006096839904785156, -0.000640869140625, -0.6753215789794922, -0.0001735687255859375, -0.09948044270277023, -2.47955322265625e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.008111953735351562, -3.814697265625e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00086212158203125, -9.5367431640625e-06, -0.006334424018859863, 0.0, -2.6702879040385596e-05, -5.9604644775390625e-06, -0.12920725345611572, -1.072883515007561e-05, -7.62939453125e-06, -0.020948410034179688, -1.33514404296875e-05, -2.9666011333465576, 0.0, -0.001377105712890625, -5.7220458984375e-06, -7.05718994140625e-05, -4.768370445162873e-07], "choice_history": [55, 124, 221, 63, 103, "Hammer", "Of", "Wrath", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.damage(2, self)\n"}, {"score": -4.136077384604874, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 3}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 3}]}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HammerOfWrath", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.62396240234375e-05, -0.0004978179931640625, -0.0001468658447265625, -0.001003265380859375, -1.9073486328125e-05, -3.242440288886428e-05, -0.00025784020544961095, -0.011264204047620296, -0.0011657429859042168, -0.000164031982421875, -5.340576171875e-05, -5.7220458984375e-06, -0.00019669531320687383, -1.1801719665527344e-05, 0.0, -7.05718994140625e-05, -0.00420379638671875, -3.814697265625e-06, -9.38159428187646e-05, -6.699562072753906e-05, -3.4332275390625e-05, -0.000118255615234375, -0.0001049041748046875, -4.863728827331215e-05, -4.76837158203125e-05, -0.00292205810546875, -8.20159912109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012607574462890625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003211498260498047, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.0005950927734375, -0.0002002716064453125, -6.103515625e-05, -1.9192511899746023e-05, -8.237361907958984e-05, -0.00024783489061519504, -0.0001220703125, -0.0009065864724107087, -0.000324249267578125, -0.0003757476806640625, -9.918212890625e-05, -0.00027630478143692017, -0.00019156932830810547, -1.9073486328125e-06, -8.7738037109375e-05, -0.000885009765625, -1.9073486328125e-06, -0.005854606628417969, -1.1682510375976562e-05, -0.0038918256759643555, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004982947721146047, -3.576278118089249e-07, -0.030530095100402832, -7.152555099310121e-07, -0.000110626220703125, -0.0010662078857421875, -1.71661376953125e-05, -0.000903010368347168, -3.576278118089249e-07, -0.0001773834228515625, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -8.7738037109375e-05, 0.0, -6.115436553955078e-05, -1.9073486328125e-06, -0.008742690086364746, -1.1563301086425781e-05, -0.0012302398681640625, -7.62939453125e-05, -2.9087066650390625e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -5.91278076171875e-05, 0.0, -3.325938087073155e-05, 0.0, -1.9073486328125e-06, -2.5391578674316406e-05, -1.1920928244535389e-07, -7.62939453125e-06, -2.6941299438476562e-05, -3.3378591979271732e-06, -0.08665847778320312, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -2.0980687622795813e-05, -1.9073486328125e-06, -2.8967857360839844e-05, 0.0, -2.6702880859375e-05, -0.00176239013671875, 0.0, -7.82012939453125e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -8.940695806813892e-06, -0.006096839904785156, -0.000640869140625, -0.6753215789794922, -0.0001735687255859375, -0.09948044270277023, -2.47955322265625e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.008111953735351562, -3.814697265625e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00086212158203125, -9.5367431640625e-06, -0.006334424018859863, 0.0, -2.6702879040385596e-05, -5.9604644775390625e-06, -2.853959560394287, -0.00011551367060746998, 0.0, -0.016689300537109375, -0.010000228881835938, -0.0006561279296875, -3.814697265625e-06, -0.0001773834228515625, 0.0, -0.0009289979934692383, -5.960462772236497e-07, -0.13914045691490173, -1.1920928244535389e-07, -8.0108642578125e-05, -0.0114898681640625, -1.9073486328125e-06, -0.13390421867370605, 0.0, -0.000194549560546875, -0.0001087188720703125, -0.0001964569091796875, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Hammer", "Of", "Wrath", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.heal(player.effective_heal_power(3), self)\n"}, {"score": -4.869796592082125, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 4}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 4}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HammerOfWrath", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.62396240234375e-05, -0.0004978179931640625, -0.0001468658447265625, -0.001003265380859375, -1.9073486328125e-05, -3.242440288886428e-05, -0.00025784020544961095, -0.011264204047620296, -0.0011657429859042168, -0.000164031982421875, -5.340576171875e-05, -5.7220458984375e-06, -0.00019669531320687383, -1.1801719665527344e-05, 0.0, -7.05718994140625e-05, -0.00420379638671875, -3.814697265625e-06, -9.38159428187646e-05, -6.699562072753906e-05, -3.4332275390625e-05, -0.000118255615234375, -0.0001049041748046875, -4.863728827331215e-05, -4.76837158203125e-05, -0.00292205810546875, -8.20159912109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012607574462890625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003211498260498047, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.0005950927734375, -0.0002002716064453125, -6.103515625e-05, -1.9192511899746023e-05, -8.237361907958984e-05, -0.00024783489061519504, -0.0001220703125, -0.0009065864724107087, -0.000324249267578125, -0.0003757476806640625, -9.918212890625e-05, -0.00027630478143692017, -0.00019156932830810547, -1.9073486328125e-06, -8.7738037109375e-05, -0.000885009765625, -1.9073486328125e-06, -0.005854606628417969, -1.1682510375976562e-05, -0.0038918256759643555, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004982947721146047, -3.576278118089249e-07, -0.030530095100402832, -7.152555099310121e-07, -0.000110626220703125, -0.0010662078857421875, -1.71661376953125e-05, -0.000903010368347168, -3.576278118089249e-07, -0.0001773834228515625, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -8.7738037109375e-05, 0.0, -6.115436553955078e-05, -1.9073486328125e-06, -0.008742690086364746, -1.1563301086425781e-05, -0.0012302398681640625, -7.62939453125e-05, -2.9087066650390625e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -5.91278076171875e-05, 0.0, -3.325938087073155e-05, 0.0, -1.9073486328125e-06, -2.5391578674316406e-05, -1.1920928244535389e-07, -7.62939453125e-06, -2.6941299438476562e-05, -3.3378591979271732e-06, -0.08665847778320312, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -2.0980687622795813e-05, -1.9073486328125e-06, -2.8967857360839844e-05, 0.0, -2.6702880859375e-05, -0.00176239013671875, 0.0, -7.82012939453125e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -8.940695806813892e-06, -0.006096839904785156, -0.000640869140625, -0.6753215789794922, -0.0001735687255859375, -2.461296319961548, -3.933906555175781e-06, -4.00543212890625e-05, -0.0002040863037109375, -1.9073486328125e-06, -0.0002307891845703125, -9.5367431640625e-06, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0005741119384765625, -9.5367431640625e-06, -0.005685925483703613, 0.0, -1.8835065930034034e-05, -4.0531158447265625e-06, -0.12476813793182373, -8.344650268554688e-06, -5.7220458984375e-06, -0.019693374633789062, -1.33514404296875e-05, -1.4029009342193604, 0.0, -0.000640869140625, -3.4332275390625e-05, -0.000152587890625, -8.344646857949556e-07], "choice_history": [55, 124, 221, 63, 103, "Hammer", "Of", "Wrath", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.damage(4, self)\n"}, {"score": -5.102543057531406, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 3}, {"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HammerOfWrath", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.62396240234375e-05, -0.0004978179931640625, -0.0001468658447265625, -0.001003265380859375, -1.9073486328125e-05, -3.242440288886428e-05, -0.00025784020544961095, -0.011264204047620296, -0.0011657429859042168, -0.000164031982421875, -5.340576171875e-05, -5.7220458984375e-06, -0.00019669531320687383, -1.1801719665527344e-05, 0.0, -7.05718994140625e-05, -0.00420379638671875, -3.814697265625e-06, -9.38159428187646e-05, -6.699562072753906e-05, -3.4332275390625e-05, -0.000118255615234375, -0.0001049041748046875, -4.863728827331215e-05, -4.76837158203125e-05, -0.00292205810546875, -8.20159912109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012607574462890625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003211498260498047, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.0005950927734375, -0.0002002716064453125, -6.103515625e-05, -1.9192511899746023e-05, -8.237361907958984e-05, -0.00024783489061519504, -0.0001220703125, -0.0009065864724107087, -0.000324249267578125, -0.0003757476806640625, -9.918212890625e-05, -0.00027630478143692017, -0.00019156932830810547, -1.9073486328125e-06, -8.7738037109375e-05, -0.000885009765625, -1.9073486328125e-06, -0.005854606628417969, -1.1682510375976562e-05, -0.0038918256759643555, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004982947721146047, -3.576278118089249e-07, -0.030530095100402832, -7.152555099310121e-07, -0.000110626220703125, -0.0010662078857421875, -1.71661376953125e-05, -0.000903010368347168, -3.576278118089249e-07, -0.0001773834228515625, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -8.7738037109375e-05, 0.0, -6.115436553955078e-05, -1.9073486328125e-06, -0.008742690086364746, -1.1563301086425781e-05, -0.0012302398681640625, -7.62939453125e-05, -2.9087066650390625e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -5.91278076171875e-05, 0.0, -3.325938087073155e-05, 0.0, -1.9073486328125e-06, -2.5391578674316406e-05, -1.1920928244535389e-07, -7.62939453125e-06, -2.6941299438476562e-05, -3.3378591979271732e-06, -3.3113908767700195, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-05, -3.814697265625e-06, -0.0001068115234375, 0.0, -3.96960494981613e-05, -1.9073486328125e-06, -3.647804260253906e-05, 0.0, -3.24249267578125e-05, -0.002117156982421875, 0.0, -0.0001544952392578125, 0.0, -9.918212890625e-05, 0.0, -5.841255187988281e-06, -9.059905096364673e-06, -0.002384185791015625, -0.0002880096435546875, -0.10741996765136719, -0.000492095947265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.0012359619140625, 0.0, -2.288818359375e-05, 0.0, -0.0004655122756958008, -5.960462772236497e-07, -1.1324880688334815e-05, -3.576278118089249e-07, -0.5282546281814575, -6.556510470545618e-06, -7.62939453125e-06, -0.001407623291015625, -7.62939453125e-06, -0.0608840212225914, 0.0, -7.43865966796875e-05, -0.0001220703125, -0.0001277923583984375, -5.960462772236497e-07, -0.1119832992553711, -1.52587890625e-05, -0.00205230712890625, -0.011964797973632812, -7.62939453125e-06, -0.0001277923583984375, -0.5047292709350586, -3.814697265625e-06, -0.00315093994140625, -5.960462772236497e-07, -0.0007805669447407126, -1.9073486328125e-06, -0.002147674560546875, -7.62939453125e-06, -0.000125885009765625, -0.008012771606445312, -1.9073486328125e-06, -7.62939453125e-06, -0.07493782043457031, -1.9073486328125e-06, -0.12080955505371094, -2.2649765014648438e-06, -0.000541318382602185, 0.0, -0.0014190673828125, -5.7220458984375e-06, -0.0001964569091796875, -0.008390426635742188, -1.9073486328125e-06, -5.7220458984375e-06, -0.025107383728027344, -1.9073486328125e-06, -0.1257457733154297, -2.384185791015625e-06, -0.0005133033846504986, 0.0], "choice_history": [55, 124, 221, 63, 103, "Hammer", "Of", "Wrath", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "3", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(3, self)\n        player.draw()\n        player.draw()\n        player.draw()\n"}, {"score": -5.1912572489041295, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 3}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HammerOfWrath", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.62396240234375e-05, -0.0004978179931640625, -0.0001468658447265625, -0.001003265380859375, -1.9073486328125e-05, -3.242440288886428e-05, -0.00025784020544961095, -0.011264204047620296, -0.0011657429859042168, -0.000164031982421875, -5.340576171875e-05, -5.7220458984375e-06, -0.00019669531320687383, -1.1801719665527344e-05, 0.0, -7.05718994140625e-05, -0.00420379638671875, -3.814697265625e-06, -9.38159428187646e-05, -6.699562072753906e-05, -3.4332275390625e-05, -0.000118255615234375, -0.0001049041748046875, -4.863728827331215e-05, -4.76837158203125e-05, -0.00292205810546875, -8.20159912109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012607574462890625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003211498260498047, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.0005950927734375, -0.0002002716064453125, -6.103515625e-05, -1.9192511899746023e-05, -8.237361907958984e-05, -0.00024783489061519504, -0.0001220703125, -0.0009065864724107087, -0.000324249267578125, -0.0003757476806640625, -9.918212890625e-05, -0.00027630478143692017, -0.00019156932830810547, -1.9073486328125e-06, -8.7738037109375e-05, -0.000885009765625, -1.9073486328125e-06, -0.005854606628417969, -1.1682510375976562e-05, -0.0038918256759643555, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004982947721146047, -3.576278118089249e-07, -0.030530095100402832, -7.152555099310121e-07, -0.000110626220703125, -0.0010662078857421875, -1.71661376953125e-05, -0.000903010368347168, -3.576278118089249e-07, -0.0001773834228515625, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -8.7738037109375e-05, 0.0, -6.115436553955078e-05, -1.9073486328125e-06, -0.008742690086364746, -1.1563301086425781e-05, -0.0012302398681640625, -7.62939453125e-05, -2.9087066650390625e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -5.91278076171875e-05, 0.0, -3.325938087073155e-05, 0.0, -1.9073486328125e-06, -2.5391578674316406e-05, -1.1920928244535389e-07, -7.62939453125e-06, -2.6941299438476562e-05, -3.3378591979271732e-06, -0.08665847778320312, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -2.0980687622795813e-05, -1.9073486328125e-06, -2.8967857360839844e-05, 0.0, -2.6702880859375e-05, -0.00176239013671875, 0.0, -7.82012939453125e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -8.940695806813892e-06, -0.006096839904785156, -0.000640869140625, -0.6753215789794922, -0.0001735687255859375, -0.09948044270277023, -2.47955322265625e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.008111953735351562, -3.814697265625e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00086212158203125, -9.5367431640625e-06, -0.006334424018859863, 0.0, -2.6702879040385596e-05, -5.9604644775390625e-06, -4.089634418487549, -3.576278118089249e-07, -0.0006103515625, -0.12540626525878906, 0.0, -0.007176399230957031, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Hammer", "Of", "Wrath", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.die(self)\n"}, {"score": -5.557641032977607, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HammerOfWrath", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.62396240234375e-05, -0.0004978179931640625, -0.0001468658447265625, -0.001003265380859375, -1.9073486328125e-05, -3.242440288886428e-05, -0.00025784020544961095, -0.011264204047620296, -0.0011657429859042168, -0.000164031982421875, -5.340576171875e-05, -5.7220458984375e-06, -0.00019669531320687383, -1.1801719665527344e-05, 0.0, -7.05718994140625e-05, -0.00420379638671875, -3.814697265625e-06, -9.38159428187646e-05, -6.699562072753906e-05, -3.4332275390625e-05, -0.000118255615234375, -0.0001049041748046875, -4.863728827331215e-05, -4.76837158203125e-05, -0.00292205810546875, -8.20159912109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012607574462890625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003211498260498047, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.0005950927734375, -0.0002002716064453125, -6.103515625e-05, -1.9192511899746023e-05, -8.237361907958984e-05, -0.00024783489061519504, -0.0001220703125, -0.0009065864724107087, -0.000324249267578125, -0.0003757476806640625, -9.918212890625e-05, -0.00027630478143692017, -0.00019156932830810547, -1.9073486328125e-06, -8.7738037109375e-05, -0.000885009765625, -1.9073486328125e-06, -0.005854606628417969, -1.1682510375976562e-05, -0.0038918256759643555, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004982947721146047, -3.576278118089249e-07, -4.006226539611816, -2.0265579223632812e-06, -1.9073486328125e-05, -0.00087738037109375, -3.4332275390625e-05, -0.0005500316619873047, -2.384185791015625e-06, -0.00023651123046875, -7.62939453125e-06, -3.4332275390625e-05, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -7.05718994140625e-05, 0.0, -5.352497100830078e-05, -1.9073486328125e-06, -0.010778069496154785, -1.1563301086425781e-05, -0.0011501312255859375, -8.20159912109375e-05, -2.9206275939941406e-05, -1.1920928244535389e-07, -2.09808349609375e-05, -6.866455078125e-05, 0.0, -3.337859016028233e-05, 0.0, -1.9073486328125e-06, -2.7298927307128906e-05, -2.3841855067985307e-07, -7.62939453125e-06, -2.6941299438476562e-05, -3.3378591979271732e-06, -0.08896732330322266, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -2.0861480152234435e-05, -1.9073486328125e-06, -2.8967857360839844e-05, 0.0, -2.6702880859375e-05, -0.00176239013671875, 0.0, -7.82012939453125e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -8.940695806813892e-06, -0.0061092376708984375, -0.000640869140625, -1.3659515380859375, -0.0001468658447265625, -0.0017740667099133134, -7.486154208891094e-05, -0.0002288818359375, -5.7220458984375e-06, 0.0, -0.028688430786132812, -7.62939453125e-06, -3.814697265625e-06, -0.0006656646728515625, -5.7220458984375e-06, -0.000537872314453125, -2.3841830625315197e-06, -0.002170019783079624, 0.0], "choice_history": [55, 124, 221, 63, 103, "Hammer", "Of", "Wrath", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"score": -5.938977445736278, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 3}, {"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Attribute", "attr": "hand", "value": {"id": "player", "_type": "Name"}}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HammerOfWrath", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.62396240234375e-05, -0.0004978179931640625, -0.0001468658447265625, -0.001003265380859375, -1.9073486328125e-05, -3.242440288886428e-05, -0.00025784020544961095, -0.011264204047620296, -0.0011657429859042168, -0.000164031982421875, -5.340576171875e-05, -5.7220458984375e-06, -0.00019669531320687383, -1.1801719665527344e-05, 0.0, -7.05718994140625e-05, -0.00420379638671875, -3.814697265625e-06, -9.38159428187646e-05, -6.699562072753906e-05, -3.4332275390625e-05, -0.000118255615234375, -0.0001049041748046875, -4.863728827331215e-05, -4.76837158203125e-05, -0.00292205810546875, -8.20159912109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012607574462890625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003211498260498047, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.0005950927734375, -0.0002002716064453125, -6.103515625e-05, -1.9192511899746023e-05, -8.237361907958984e-05, -0.00024783489061519504, -0.0001220703125, -0.0009065864724107087, -0.000324249267578125, -0.0003757476806640625, -9.918212890625e-05, -0.00027630478143692017, -0.00019156932830810547, -1.9073486328125e-06, -8.7738037109375e-05, -0.000885009765625, -1.9073486328125e-06, -0.005854606628417969, -1.1682510375976562e-05, -0.0038918256759643555, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004982947721146047, -3.576278118089249e-07, -0.030530095100402832, -7.152555099310121e-07, -0.000110626220703125, -0.0010662078857421875, -1.71661376953125e-05, -0.000903010368347168, -3.576278118089249e-07, -0.0001773834228515625, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -8.7738037109375e-05, 0.0, -6.115436553955078e-05, -1.9073486328125e-06, -0.008742690086364746, -1.1563301086425781e-05, -0.0012302398681640625, -7.62939453125e-05, -2.9087066650390625e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -5.91278076171875e-05, 0.0, -3.325938087073155e-05, 0.0, -1.9073486328125e-06, -2.5391578674316406e-05, -1.1920928244535389e-07, -7.62939453125e-06, -2.6941299438476562e-05, -3.3378591979271732e-06, -0.08665847778320312, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -2.0980687622795813e-05, -1.9073486328125e-06, -2.8967857360839844e-05, 0.0, -2.6702880859375e-05, -0.00176239013671875, 0.0, -7.82012939453125e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -8.940695806813892e-06, -0.006096839904785156, -0.000640869140625, -1.4939680099487305, -0.000598907470703125, -7.62939453125e-06, -3.814697265625e-06, -0.0004329681396484375, 0.0, -4.1961669921875e-05, 0.0, -0.0007421970367431641, -1.1920928244535389e-07, -1.1205666851310525e-05, -2.3841855067985307e-07, -1.283286690711975, -6.4373016357421875e-06, -5.7220458984375e-06, -0.0024204254150390625, -7.62939453125e-06, -0.07030005007982254, 0.0, -6.67572021484375e-05, -0.00012969970703125, -0.00011157989501953125, -4.768370445162873e-07, -0.14495372772216797, -2.09808349609375e-05, -0.02448749542236328, -0.04902076721191406, -1.1444091796875e-05, -4.1961669921875e-05, -1.5959587097167969, -1.1444091796875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.19571781158447266, -5.483620952873025e-06, -0.7419022917747498, -5.5789947509765625e-05, -0.15663743019104004, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Hammer", "Of", "Wrath", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "3", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hand", "<EOS>", "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(3, self)\n        player.hand.draw()\n"}, {"score": -6.409443582022192, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Num", "n": 3}, {"id": "self", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HammerOfWrath", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-3.62396240234375e-05, -0.0004978179931640625, -0.0001468658447265625, -0.001003265380859375, -1.9073486328125e-05, -3.242440288886428e-05, -0.00025784020544961095, -0.011264204047620296, -0.0011657429859042168, -0.000164031982421875, -5.340576171875e-05, -5.7220458984375e-06, -0.00019669531320687383, -1.1801719665527344e-05, 0.0, -7.05718994140625e-05, -0.00420379638671875, -3.814697265625e-06, -9.38159428187646e-05, -6.699562072753906e-05, -3.4332275390625e-05, -0.000118255615234375, -0.0001049041748046875, -4.863728827331215e-05, -4.76837158203125e-05, -0.00292205810546875, -8.20159912109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012607574462890625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003211498260498047, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.0005950927734375, -0.0002002716064453125, -6.103515625e-05, -1.9192511899746023e-05, -8.237361907958984e-05, -0.00024783489061519504, -0.0001220703125, -0.0009065864724107087, -0.000324249267578125, -0.0003757476806640625, -9.918212890625e-05, -0.00027630478143692017, -0.00019156932830810547, -1.9073486328125e-06, -8.7738037109375e-05, -0.000885009765625, -1.9073486328125e-06, -0.005854606628417969, -1.1682510375976562e-05, -0.0038918256759643555, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004982947721146047, -3.576278118089249e-07, -0.030530095100402832, -7.152555099310121e-07, -0.000110626220703125, -0.0010662078857421875, -1.71661376953125e-05, -0.000903010368347168, -3.576278118089249e-07, -0.0001773834228515625, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -8.7738037109375e-05, 0.0, -6.115436553955078e-05, -1.9073486328125e-06, -0.008742690086364746, -1.1563301086425781e-05, -0.0012302398681640625, -7.62939453125e-05, -2.9087066650390625e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -5.91278076171875e-05, 0.0, -3.325938087073155e-05, 0.0, -1.9073486328125e-06, -2.5391578674316406e-05, -1.1920928244535389e-07, -7.62939453125e-06, -2.6941299438476562e-05, -3.3378591979271732e-06, -3.3113908767700195, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-05, -3.814697265625e-06, -0.0001068115234375, 0.0, -3.96960494981613e-05, -1.9073486328125e-06, -3.647804260253906e-05, 0.0, -3.24249267578125e-05, -0.002117156982421875, 0.0, -0.0001544952392578125, 0.0, -9.918212890625e-05, 0.0, -5.841255187988281e-06, -9.059905096364673e-06, -0.002384185791015625, -0.0002880096435546875, -0.10741996765136719, -0.000492095947265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.0012359619140625, 0.0, -2.288818359375e-05, 0.0, -0.0004655122756958008, -5.960462772236497e-07, -1.1324880688334815e-05, -3.576278118089249e-07, -0.5282546281814575, -6.556510470545618e-06, -7.62939453125e-06, -0.001407623291015625, -7.62939453125e-06, -0.0608840212225914, 0.0, -7.43865966796875e-05, -0.0001220703125, -0.0001277923583984375, -5.960462772236497e-07, -0.1119832992553711, -1.52587890625e-05, -0.00205230712890625, -0.011964797973632812, -7.62939453125e-06, -0.0001277923583984375, -0.934046745300293, -5.7220458984375e-06, -3.24249267578125e-05, -7.62939453125e-06, -0.4746246337890625, -1.1920928244535389e-07, -4.303445166442543e-05, -7.62939453125e-06, -0.24490559101104736, -1.9431114196777344e-05, -0.00701141357421875, 0.0, -0.00035858154296875, -0.010854721069335938, -1.9073486328125e-06, -9.5367431640625e-06, -0.18721485137939453, -3.814697265625e-06, -0.0222015380859375, -1.1920928244535389e-07, -0.0004953108145855367, 0.0, -0.001537322998046875, -5.7220458984375e-06, -0.0001735687255859375, -0.00494384765625, -1.9073486328125e-06, -5.7220458984375e-06, -0.11348342895507812, -3.814697265625e-06, -0.1810474395751953, -2.1457672119140625e-06, -0.0005043633282184601, 0.0], "choice_history": [55, 124, 221, 63, 103, "Hammer", "Of", "Wrath", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "3", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(3, self)\n        self.target.<UNK>()\n        player.draw()\n        player.draw()\n"}, {"score": -19.36347007751465, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.62396240234375e-05, -0.0004978179931640625, -19.36293601989746], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 44}
{"beams": [{"score": -0.46744280995762466, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "divine_shield", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HandOfProtection", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -0.0006103515625, -5.53131103515625e-05, -0.0034732818603515625, -2.6702880859375e-05, -2.109982233378105e-05, -0.0009200607310049236, -0.0537823848426342, -0.018501531332731247, -2.47955322265625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -0.00042319297790527344, -1.823902130126953e-05, 0.0, -0.0009250640869140625, -0.000690460205078125, -1.9073486328125e-06, -0.00015127251390367746, -8.106231689453125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -4.38690185546875e-05, -8.010857709450647e-05, -3.814697265625e-06, -0.0010986328125, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004367828369140625, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.025196434056852e-05, -9.655952453613281e-06, -7.295608520507812e-05, -4.768370445162873e-07, -0.0008525848388671875, -2.47955322265625e-05, -3.814697265625e-05, -5.769562994828448e-05, -0.0002090930938720703, -0.0006247880519367754, -9.1552734375e-05, -4.494189124670811e-05, -0.000415802001953125, -4.9591064453125e-05, -5.14984130859375e-05, -1.7880229279398918e-06, -1.3709065569855738e-05, -1.9073486328125e-06, -0.0001850128173828125, -0.0008440017700195312, -1.9073486328125e-06, -0.002587556838989258, -2.2649765014648438e-06, -0.004185795318335295, -1.1920928244535389e-07, -5.7220458984375e-06, -3.814697265625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00041198727558366954, -6.318072337307967e-06, -0.023759126663208008, -1.9073468138230965e-06, -0.0001277923583984375, -0.002223968505859375, -3.814697265625e-06, -0.005816459655761719, -7.152555099310121e-07, -0.000453948974609375, -5.7220458984375e-06, -8.20159912109375e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -7.462501525878906e-05, -1.3470649719238281e-05, -0.0032614469528198242, -0.00014019012451171875, -0.0020236968994140625, -2.86102294921875e-05, -4.017353057861328e-05, -4.410743713378906e-06, -4.9591064453125e-05, -4.38690185546875e-05, 0.0, -2.014636993408203e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -7.855892181396484e-05, -4.053115117130801e-05, -0.23036575317382812, -6.4849853515625e-05, 0.0, 0.0, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.9591064453125e-05, 0.0, -2.6941073883790523e-05, -7.152555099310121e-07, -3.075599670410156e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0001850128173828125, -1.9073486328125e-06, -5.7220458984375e-05, -2.3841855067985307e-07, -3.0517578125e-05, -1.9073486328125e-06, -7.867813110351562e-06, -8.070290641626343e-05, -0.010481834411621094, -3.62396240234375e-05, -1.33514404296875e-05, -9.72747802734375e-05, -0.00141143798828125, -0.0017671585083007812, 0.0, -5.53131103515625e-05, 0.0, -0.0001010894775390625, 0.0, -0.002610325813293457, -4.768370445162873e-07, -0.08006811141967773, -1.6689286894688848e-06, -0.00772857666015625, -0.0011005401611328125, -0.00010883808135986328, -5.7220458984375e-06], "choice_history": [55, 124, 221, 63, 103, "Hand", "Of", "Protection", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hand", " ", "of", " ", "Protection", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"score": -3.4728231434289754, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "divine_shield", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HandOfTheProtection", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -0.0006103515625, -5.53131103515625e-05, -0.0034732818603515625, -2.6702880859375e-05, -2.109982233378105e-05, -0.0009200607310049236, -3.066798448562622, -5.960462772236497e-07, -5.7099929108517244e-05, -1.71661376953125e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.0004897117614746094, -1.6570091247558594e-05, -1.9073486328125e-06, -0.0010528564453125, -0.0006351470947265625, -3.814697265625e-06, -0.0001795247953850776, -8.106231689453125e-06, -8.0108642578125e-05, -4.1961669921875e-05, -6.103515625e-05, -7.951253792271018e-05, -3.814697265625e-06, -0.0024471282958984375, -7.2479248046875e-05, -7.62939453125e-06, -7.62939453125e-06, -0.00043487548828125, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.013275596051244e-05, -9.655952453613281e-06, -6.723403930664062e-05, -4.768370445162873e-07, -0.0008716583251953125, -2.6702880859375e-05, -4.00543212890625e-05, -5.793403761344962e-05, -0.0002071857452392578, -0.0006471951492130756, -7.05718994140625e-05, -0.00034236902138218284, -0.00251007080078125, -6.4849853515625e-05, -6.67572021484375e-05, -2.3840111680328846e-06, -1.382827485940652e-05, -1.9073486328125e-06, -0.0001773834228515625, -0.0008993148803710938, -1.9073486328125e-06, -0.003056764602661133, -2.2649765014648438e-06, -0.0040146103128790855, -1.1920928244535389e-07, -7.62939453125e-06, -3.814697265625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.0004189014434814453, -7.390948667307384e-06, -0.027047395706176758, -1.7881377516459906e-06, -0.0001220703125, -0.001499176025390625, -3.814697265625e-06, -0.00576174259185791, -7.152555099310121e-07, -0.0005130767822265625, -5.7220458984375e-06, -8.0108642578125e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -7.271766662597656e-05, -1.3470649719238281e-05, -0.0033838748931884766, -0.00014209747314453125, -0.0020046234130859375, -3.0517578125e-05, -4.017353057861328e-05, -4.410743713378906e-06, -4.9591064453125e-05, -4.57763671875e-05, 0.0, -2.014636993408203e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -7.665157318115234e-05, -4.053115117130801e-05, -0.23421573638916016, -6.29425048828125e-05, 0.0, 0.0, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.9591064453125e-05, 0.0, -2.6941073883790523e-05, -7.152555099310121e-07, -3.075599670410156e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0001850128173828125, -1.9073486328125e-06, -5.7220458984375e-05, -2.3841855067985307e-07, -3.0517578125e-05, -1.9073486328125e-06, -7.867813110351562e-06, -8.08221084298566e-05, -0.010488510131835938, -3.62396240234375e-05, -1.33514404296875e-05, -9.72747802734375e-05, -0.0014133453369140625, -0.0017652511596679688, 0.0, -5.53131103515625e-05, 0.0, -0.0001010894775390625, 0.0, -0.002614140510559082, -4.768370445162873e-07, -0.08003473281860352, -1.6689286894688848e-06, -0.007727622985839844, -0.0011005401611328125, -0.00010883808135986328, -5.7220458984375e-06], "choice_history": [55, 124, 221, 63, 103, "Hand", "Of", "The", "Protection", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hand", " ", "of", " ", "Protection", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class HandOfTheProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"score": -3.679023682372822, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HandOfProtection", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -0.0006103515625, -5.53131103515625e-05, -0.0034732818603515625, -2.6702880859375e-05, -2.109982233378105e-05, -0.0009200607310049236, -0.0537823848426342, -0.018501531332731247, -2.47955322265625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -0.00042319297790527344, -1.823902130126953e-05, 0.0, -0.0009250640869140625, -0.000690460205078125, -1.9073486328125e-06, -0.00015127251390367746, -8.106231689453125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -4.38690185546875e-05, -8.010857709450647e-05, -3.814697265625e-06, -0.0010986328125, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004367828369140625, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.025196434056852e-05, -9.655952453613281e-06, -7.295608520507812e-05, -4.768370445162873e-07, -0.0008525848388671875, -2.47955322265625e-05, -3.814697265625e-05, -5.769562994828448e-05, -0.0002090930938720703, -0.0006247880519367754, -9.1552734375e-05, -4.494189124670811e-05, -0.000415802001953125, -4.9591064453125e-05, -5.14984130859375e-05, -1.7880229279398918e-06, -1.3709065569855738e-05, -1.9073486328125e-06, -0.0001850128173828125, -0.0008440017700195312, -1.9073486328125e-06, -0.002587556838989258, -2.2649765014648438e-06, -0.004185795318335295, -1.1920928244535389e-07, -5.7220458984375e-06, -3.814697265625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00041198727558366954, -6.318072337307967e-06, -0.023759126663208008, -1.9073468138230965e-06, -0.0001277923583984375, -0.002223968505859375, -3.814697265625e-06, -0.005816459655761719, -7.152555099310121e-07, -0.000453948974609375, -5.7220458984375e-06, -8.20159912109375e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -7.462501525878906e-05, -1.3470649719238281e-05, -0.0032614469528198242, -0.00014019012451171875, -0.0020236968994140625, -2.86102294921875e-05, -4.017353057861328e-05, -4.410743713378906e-06, -4.9591064453125e-05, -4.38690185546875e-05, 0.0, -2.014636993408203e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -7.855892181396484e-05, -4.053115117130801e-05, -0.23036575317382812, -6.4849853515625e-05, 0.0, 0.0, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.9591064453125e-05, 0.0, -2.6941073883790523e-05, -7.152555099310121e-07, -3.075599670410156e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0001850128173828125, -1.9073486328125e-06, -5.7220458984375e-05, -2.3841855067985307e-07, -3.0517578125e-05, -1.9073486328125e-06, -7.867813110351562e-06, -8.070290641626343e-05, -0.010481834411621094, -3.62396240234375e-05, -1.33514404296875e-05, -9.72747802734375e-05, -0.00141143798828125, -0.0017671585083007812, 0.0, -5.53131103515625e-05, 0.0, -0.0001010894775390625, 0.0, -0.002610325813293457, -4.768370445162873e-07, -3.291813373565674, -1.5616295058862306e-05, -0.008603096008300781, -8.0108642578125e-05, -8.213520050048828e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Hand", "Of", "Protection", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hand", " ", "of", " ", "Protection", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.taunt = True\n"}, {"score": -4.5792528906997205, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "player", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"id": "player", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HandOfProtection", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -0.0006103515625, -5.53131103515625e-05, -0.0034732818603515625, -2.6702880859375e-05, -2.109982233378105e-05, -0.0009200607310049236, -0.0537823848426342, -0.018501531332731247, -2.47955322265625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -0.00042319297790527344, -1.823902130126953e-05, 0.0, -0.0009250640869140625, -0.000690460205078125, -1.9073486328125e-06, -0.00015127251390367746, -8.106231689453125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -4.38690185546875e-05, -8.010857709450647e-05, -3.814697265625e-06, -0.0010986328125, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004367828369140625, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.025196434056852e-05, -9.655952453613281e-06, -7.295608520507812e-05, -4.768370445162873e-07, -0.0008525848388671875, -2.47955322265625e-05, -3.814697265625e-05, -5.769562994828448e-05, -0.0002090930938720703, -0.0006247880519367754, -9.1552734375e-05, -4.494189124670811e-05, -0.000415802001953125, -4.9591064453125e-05, -5.14984130859375e-05, -1.7880229279398918e-06, -1.3709065569855738e-05, -1.9073486328125e-06, -0.0001850128173828125, -0.0008440017700195312, -1.9073486328125e-06, -0.002587556838989258, -2.2649765014648438e-06, -0.004185795318335295, -1.1920928244535389e-07, -5.7220458984375e-06, -3.814697265625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00041198727558366954, -6.318072337307967e-06, -0.023759126663208008, -1.9073468138230965e-06, -0.0001277923583984375, -0.002223968505859375, -3.814697265625e-06, -0.005816459655761719, -7.152555099310121e-07, -0.000453948974609375, -5.7220458984375e-06, -8.20159912109375e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -7.462501525878906e-05, -1.3470649719238281e-05, -0.0032614469528198242, -0.00014019012451171875, -0.0020236968994140625, -2.86102294921875e-05, -4.017353057861328e-05, -4.410743713378906e-06, -4.9591064453125e-05, -4.38690185546875e-05, 0.0, -2.014636993408203e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -7.855892181396484e-05, -4.053115117130801e-05, -1.7439489364624023, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.52587890625e-05, 0.0, -2.288818359375e-05, 0.0, -7.31933323550038e-05, -8.344646857949556e-07, -1.3589859008789062e-05, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002994537353515625, -1.9073486328125e-06, -4.1961669921875e-05, -2.3841855067985307e-07, -3.4332275390625e-05, -1.9073486328125e-06, -1.1682510375976562e-05, -8.22525325929746e-05, -0.028766632080078125, -1.52587890625e-05, -0.07587718963623047, -0.0003986358642578125, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, 0.0, -7.05718994140625e-05, 0.0, -0.0054988861083984375, -1.0728830375228426e-06, -9.560461330693215e-05, -2.384185791015625e-06, -0.9606369733810425, -7.033334895822918e-06, -0.0007190704345703125, -0.4524803161621094, -1.9073486328125e-06, -0.1829986572265625, -4.768370445162873e-07, -0.03310585021972656, -1.9073486328125e-06, -3.814697265625e-06, -0.8072662353515625, 0.0, 0.0, -0.1401538848876953, 0.0, -0.010387420654296875, -2.622600959512056e-06, -0.005005354527384043, -2.0265579223632812e-06], "choice_history": [55, 124, 221, 63, 103, "Hand", "Of", "Protection", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hand", " ", "of", " ", "Protection", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "player", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>(player)\n        player.draw()\n"}, {"score": -4.616720973857419, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"id": "player", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HandOfProtection", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -0.0006103515625, -5.53131103515625e-05, -0.0034732818603515625, -2.6702880859375e-05, -2.109982233378105e-05, -0.0009200607310049236, -0.0537823848426342, -0.018501531332731247, -2.47955322265625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -0.00042319297790527344, -1.823902130126953e-05, 0.0, -0.0009250640869140625, -0.000690460205078125, -1.9073486328125e-06, -0.00015127251390367746, -8.106231689453125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -4.38690185546875e-05, -8.010857709450647e-05, -3.814697265625e-06, -0.0010986328125, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004367828369140625, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.025196434056852e-05, -9.655952453613281e-06, -7.295608520507812e-05, -4.768370445162873e-07, -0.0008525848388671875, -2.47955322265625e-05, -3.814697265625e-05, -5.769562994828448e-05, -0.0002090930938720703, -0.0006247880519367754, -9.1552734375e-05, -4.494189124670811e-05, -0.000415802001953125, -4.9591064453125e-05, -5.14984130859375e-05, -1.7880229279398918e-06, -1.3709065569855738e-05, -1.9073486328125e-06, -0.0001850128173828125, -0.0008440017700195312, -1.9073486328125e-06, -0.002587556838989258, -2.2649765014648438e-06, -0.004185795318335295, -1.1920928244535389e-07, -5.7220458984375e-06, -3.814697265625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00041198727558366954, -6.318072337307967e-06, -0.023759126663208008, -1.9073468138230965e-06, -0.0001277923583984375, -0.002223968505859375, -3.814697265625e-06, -0.005816459655761719, -7.152555099310121e-07, -0.000453948974609375, -5.7220458984375e-06, -8.20159912109375e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -7.462501525878906e-05, -1.3470649719238281e-05, -0.0032614469528198242, -0.00014019012451171875, -0.0020236968994140625, -2.86102294921875e-05, -4.017353057861328e-05, -4.410743713378906e-06, -4.9591064453125e-05, -4.38690185546875e-05, 0.0, -2.014636993408203e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -7.855892181396484e-05, -4.053115117130801e-05, -0.23036575317382812, -6.4849853515625e-05, 0.0, 0.0, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.9591064453125e-05, 0.0, -2.6941073883790523e-05, -7.152555099310121e-07, -3.075599670410156e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0001850128173828125, -1.9073486328125e-06, -5.7220458984375e-05, -2.3841855067985307e-07, -3.0517578125e-05, -1.9073486328125e-06, -7.867813110351562e-06, -8.070290641626343e-05, -0.010481834411621094, -3.62396240234375e-05, -1.33514404296875e-05, -9.72747802734375e-05, -0.00141143798828125, -0.0017671585083007812, 0.0, -5.53131103515625e-05, 0.0, -0.0001010894775390625, 0.0, -0.002610325813293457, -4.768370445162873e-07, -3.949280261993408, -3.5047520213993266e-05, -0.1531505584716797, 0.0, -0.13582468032836914, -1.0728830375228426e-06], "choice_history": [55, 124, 221, 63, 103, "Hand", "Of", "Protection", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hand", " ", "of", " ", "Protection", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", 19, 125, "player", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.card = player\n"}, {"score": -4.629741966145886, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "divine_shield", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HandOfProtection", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -0.0006103515625, -5.53131103515625e-05, -0.0034732818603515625, -2.6702880859375e-05, -2.109982233378105e-05, -0.0009200607310049236, -0.0537823848426342, -0.018501531332731247, -2.47955322265625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -0.00042319297790527344, -1.823902130126953e-05, 0.0, -0.0009250640869140625, -0.000690460205078125, -1.9073486328125e-06, -0.00015127251390367746, -8.106231689453125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -4.38690185546875e-05, -8.010857709450647e-05, -3.814697265625e-06, -0.0010986328125, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004367828369140625, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.025196434056852e-05, -9.655952453613281e-06, -7.295608520507812e-05, -4.768370445162873e-07, -0.0008525848388671875, -2.47955322265625e-05, -3.814697265625e-05, -5.769562994828448e-05, -0.0002090930938720703, -0.0006247880519367754, -9.1552734375e-05, -4.494189124670811e-05, -0.000415802001953125, -4.9591064453125e-05, -5.14984130859375e-05, -1.7880229279398918e-06, -1.3709065569855738e-05, -1.9073486328125e-06, -0.0001850128173828125, -0.0008440017700195312, -1.9073486328125e-06, -0.002587556838989258, -2.2649765014648438e-06, -0.004185795318335295, -1.1920928244535389e-07, -5.7220458984375e-06, -3.814697265625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00041198727558366954, -6.318072337307967e-06, -4.175790786743164, -4.0531158447265625e-06, -2.09808349609375e-05, -0.0008831024169921875, -3.814697265625e-06, -0.002324819564819336, -1.311301275563892e-06, -0.000118255615234375, -5.7220458984375e-06, -0.0002231597900390625, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -6.306171417236328e-05, -1.1444091796875e-05, -0.003629922866821289, -0.0001302957534790039, -0.0017681121826171875, -2.6702880859375e-05, -3.826618194580078e-05, -4.410743713378906e-06, -4.38690185546875e-05, -4.38690185546875e-05, 0.0, -2.014636993408203e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -7.665157318115234e-05, -4.017352330265567e-05, -0.24558353424072266, -6.29425048828125e-05, 0.0, 0.0, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.9591064453125e-05, 0.0, -2.70602813543519e-05, -7.152555099310121e-07, -3.075599670410156e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0001850128173828125, -1.9073486328125e-06, -5.7220458984375e-05, -2.3841855067985307e-07, -3.0517578125e-05, -1.9073486328125e-06, -7.867813110351562e-06, -8.070290641626343e-05, -0.0105743408203125, -3.62396240234375e-05, -1.33514404296875e-05, -9.72747802734375e-05, -0.0014209747314453125, -0.0017719268798828125, 0.0, -5.53131103515625e-05, 0.0, -0.0001010894775390625, 0.0, -0.0026036500930786133, -4.768370445162873e-07, -0.08011293411254883, -1.6689286894688848e-06, -0.007717132568359375, -0.0010986328125, -0.00010883808135986328, -5.7220458984375e-06], "choice_history": [55, 124, 221, 63, 103, "Hand", "Of", "Protection", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hand", " ", "of", " ", "Protection", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"score": -4.70598675861573, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "divine_shield", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HandOfProtectionOfProtection", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -0.0006103515625, -5.53131103515625e-05, -0.0034732818603515625, -2.6702880859375e-05, -2.109982233378105e-05, -0.0009200607310049236, -0.0537823848426342, -4.153334140777588, -0.061215613037347794, -8.034455095184967e-05, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0005595684051513672, -1.633167266845703e-05, -1.9073486328125e-06, -0.00106048583984375, -0.0006313323974609375, -3.814697265625e-06, -0.0001720151340123266, -8.106231689453125e-06, -9.918212890625e-05, -4.76837158203125e-05, -7.43865966796875e-05, -8.594983228249475e-05, -7.62939453125e-06, -0.0052547454833984375, -7.2479248046875e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.0004558563232421875, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.1563271073100623e-05, -9.655952453613281e-06, -6.341934204101562e-05, -5.960462772236497e-07, -0.0009593963623046875, -2.86102294921875e-05, -4.00543212890625e-05, -5.793403761344962e-05, -0.00020325183868408203, -0.0006340882391668856, -6.866455078125e-05, -0.008978962898254395, -0.023977279663085938, -6.67572021484375e-05, -9.72747802734375e-05, -5.125410098116845e-06, -1.788138979463838e-05, -1.9073486328125e-06, -0.0001888275146484375, -0.0009202957153320312, -1.9073486328125e-06, -0.004071831703186035, -2.384185791015625e-06, -0.0038828840479254723, -1.1920928244535389e-07, -7.62939453125e-06, -3.814697265625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00042819976806640625, -8.22540732769994e-06, -0.0297548770904541, -1.7881377516459906e-06, -0.000118255615234375, -0.001209259033203125, -3.814697265625e-06, -0.00570523738861084, -7.152555099310121e-07, -0.00054931640625, -5.7220458984375e-06, -8.0108642578125e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -7.271766662597656e-05, -1.3470649719238281e-05, -0.0035442113876342773, -0.00014209747314453125, -0.0020275115966796875, -3.0517578125e-05, -4.208087921142578e-05, -4.410743713378906e-06, -4.9591064453125e-05, -4.38690185546875e-05, 0.0, -2.014636993408203e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -7.665157318115234e-05, -4.053115117130801e-05, -0.2291889190673828, -6.29425048828125e-05, 0.0, 0.0, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.9591064453125e-05, 0.0, -2.6941073883790523e-05, -7.152555099310121e-07, -3.075599670410156e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0001850128173828125, -1.9073486328125e-06, -5.7220458984375e-05, -2.3841855067985307e-07, -3.0517578125e-05, -1.9073486328125e-06, -7.867813110351562e-06, -8.070290641626343e-05, -0.010487556457519531, -3.62396240234375e-05, -1.33514404296875e-05, -9.72747802734375e-05, -0.00141143798828125, -0.0017652511596679688, 0.0, -5.53131103515625e-05, 0.0, -0.0001010894775390625, 0.0, -0.002614140510559082, -4.768370445162873e-07, -0.08002138137817383, -1.6689286894688848e-06, -0.00772857666015625, -0.0011005401611328125, -0.00010883808135986328, -5.7220458984375e-06], "choice_history": [55, 124, 221, 63, 103, "Hand", "Of", "Protection", "Of", "Protection", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hand", " ", "of", " ", "Protection", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class HandOfProtectionOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"score": -5.301219221166846, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "player", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "DivineShield"}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HandOfProtection", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -0.0006103515625, -5.53131103515625e-05, -0.0034732818603515625, -2.6702880859375e-05, -2.109982233378105e-05, -0.0009200607310049236, -0.0537823848426342, -0.018501531332731247, -2.47955322265625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -0.00042319297790527344, -1.823902130126953e-05, 0.0, -0.0009250640869140625, -0.000690460205078125, -1.9073486328125e-06, -0.00015127251390367746, -8.106231689453125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -4.38690185546875e-05, -8.010857709450647e-05, -3.814697265625e-06, -0.0010986328125, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004367828369140625, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.025196434056852e-05, -9.655952453613281e-06, -7.295608520507812e-05, -4.768370445162873e-07, -0.0008525848388671875, -2.47955322265625e-05, -3.814697265625e-05, -5.769562994828448e-05, -0.0002090930938720703, -0.0006247880519367754, -9.1552734375e-05, -4.494189124670811e-05, -0.000415802001953125, -4.9591064453125e-05, -5.14984130859375e-05, -1.7880229279398918e-06, -1.3709065569855738e-05, -1.9073486328125e-06, -0.0001850128173828125, -0.0008440017700195312, -1.9073486328125e-06, -0.002587556838989258, -2.2649765014648438e-06, -0.004185795318335295, -1.1920928244535389e-07, -5.7220458984375e-06, -3.814697265625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00041198727558366954, -6.318072337307967e-06, -0.023759126663208008, -1.9073468138230965e-06, -0.0001277923583984375, -0.002223968505859375, -3.814697265625e-06, -0.005816459655761719, -7.152555099310121e-07, -0.000453948974609375, -5.7220458984375e-06, -8.20159912109375e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -7.462501525878906e-05, -1.3470649719238281e-05, -0.0032614469528198242, -0.00014019012451171875, -0.0020236968994140625, -2.86102294921875e-05, -4.017353057861328e-05, -4.410743713378906e-06, -4.9591064453125e-05, -4.38690185546875e-05, 0.0, -2.014636993408203e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -7.855892181396484e-05, -4.053115117130801e-05, -1.7439489364624023, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.52587890625e-05, 0.0, -2.288818359375e-05, 0.0, -7.31933323550038e-05, -8.344646857949556e-07, -1.3589859008789062e-05, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002994537353515625, -1.9073486328125e-06, -4.1961669921875e-05, -2.3841855067985307e-07, -3.4332275390625e-05, -1.9073486328125e-06, -1.1682510375976562e-05, -8.22525325929746e-05, -0.028766632080078125, -1.52587890625e-05, -0.07587718963623047, -0.0003986358642578125, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, 0.0, -7.05718994140625e-05, 0.0, -0.0054988861083984375, -1.0728830375228426e-06, -9.560461330693215e-05, -2.384185791015625e-06, -0.9606369733810425, -7.033334895822918e-06, -0.0007190704345703125, -0.4524803161621094, -1.9073486328125e-06, -0.1829986572265625, -4.768370445162873e-07, -0.03310585021972656, -1.9073486328125e-06, -3.814697265625e-06, -0.5990123748779297, -1.9073486328125e-06, -3.814697265625e-06, -0.000545501708984375, 0.0, -3.0517578125e-05, 0.0, -0.02337658405303955, -3.2186455882765586e-06, -0.00022159560467116535, -1.0728830375228426e-06, -0.7025494575500488, -1.2636161045520566e-05, -0.00012969970703125, -0.31518077850341797, -0.032398223876953125, -0.0003948211669921875, 0.0, -0.00018048283527605236, -7.033174915704876e-05, -6.4849853515625e-05, -0.0070171356201171875, -9.5367431640625e-06, -0.003017761744558811, -0.0005558500997722149, -5.722038622479886e-06], "choice_history": [55, 124, 221, 63, 103, "Hand", "Of", "Protection", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hand", " ", "of", " ", "Protection", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "player", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Divine", "Shield", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>(player)\n        self.target.add_buff(Buff(DivineShield()))\n"}, {"score": -5.42599636026425, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "player", "value": {"id": "self", "_type": "Name"}}], "value": {"id": "player", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HandOfProtection", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -0.0006103515625, -5.53131103515625e-05, -0.0034732818603515625, -2.6702880859375e-05, -2.109982233378105e-05, -0.0009200607310049236, -0.0537823848426342, -0.018501531332731247, -2.47955322265625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -0.00042319297790527344, -1.823902130126953e-05, 0.0, -0.0009250640869140625, -0.000690460205078125, -1.9073486328125e-06, -0.00015127251390367746, -8.106231689453125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -4.38690185546875e-05, -8.010857709450647e-05, -3.814697265625e-06, -0.0010986328125, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004367828369140625, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.025196434056852e-05, -9.655952453613281e-06, -7.295608520507812e-05, -4.768370445162873e-07, -0.0008525848388671875, -2.47955322265625e-05, -3.814697265625e-05, -5.769562994828448e-05, -0.0002090930938720703, -0.0006247880519367754, -9.1552734375e-05, -4.494189124670811e-05, -0.000415802001953125, -4.9591064453125e-05, -5.14984130859375e-05, -1.7880229279398918e-06, -1.3709065569855738e-05, -1.9073486328125e-06, -0.0001850128173828125, -0.0008440017700195312, -1.9073486328125e-06, -0.002587556838989258, -2.2649765014648438e-06, -0.004185795318335295, -1.1920928244535389e-07, -5.7220458984375e-06, -3.814697265625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00041198727558366954, -6.318072337307967e-06, -0.023759126663208008, -1.9073468138230965e-06, -0.0001277923583984375, -0.002223968505859375, -3.814697265625e-06, -0.005816459655761719, -7.152555099310121e-07, -0.000453948974609375, -5.7220458984375e-06, -8.20159912109375e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -7.462501525878906e-05, -1.3470649719238281e-05, -0.0032614469528198242, -0.00014019012451171875, -0.0020236968994140625, -2.86102294921875e-05, -4.017353057861328e-05, -4.410743713378906e-06, -4.9591064453125e-05, -4.38690185546875e-05, 0.0, -2.014636993408203e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -7.855892181396484e-05, -4.053115117130801e-05, -1.7439489364624023, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.52587890625e-05, 0.0, -2.288818359375e-05, 0.0, -7.31933323550038e-05, -8.344646857949556e-07, -1.3589859008789062e-05, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002994537353515625, -1.9073486328125e-06, -4.1961669921875e-05, -2.3841855067985307e-07, -3.4332275390625e-05, -1.9073486328125e-06, -1.1682510375976562e-05, -8.22525325929746e-05, -0.028766632080078125, -1.52587890625e-05, -0.07587718963623047, -0.0003986358642578125, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, 0.0, -7.05718994140625e-05, 0.0, -0.0054988861083984375, -1.0728830375228426e-06, -9.560461330693215e-05, -2.384185791015625e-06, -2.721059560775757, -1.1920922133867862e-06, -0.0008411407470703125, -0.007491111755371094, 0.0, -0.02928924560546875, -2.3841855067985307e-07, -0.4913644790649414, -5.7220458984375e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.0001773834228515625, -0.06671714782714844, 0.0, -0.10814857482910156, -1.9073486328125e-06, -0.0051364898681640625, 0.0, -0.0021877288818359375, 0.0, -0.0070648193359375, -9.298280929215252e-06], "choice_history": [55, 124, 221, 63, 103, "Hand", "Of", "Protection", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hand", " ", "of", " ", "Protection", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.player = player\n"}, {"score": -5.637356934049265, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "player", "value": {"id": "self", "_type": "Name"}}], "value": {"id": "player", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HandOfProtection", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -0.0006103515625, -5.53131103515625e-05, -0.0034732818603515625, -2.6702880859375e-05, -2.109982233378105e-05, -0.0009200607310049236, -0.0537823848426342, -0.018501531332731247, -2.47955322265625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -0.00042319297790527344, -1.823902130126953e-05, 0.0, -0.0009250640869140625, -0.000690460205078125, -1.9073486328125e-06, -0.00015127251390367746, -8.106231689453125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -4.38690185546875e-05, -8.010857709450647e-05, -3.814697265625e-06, -0.0010986328125, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004367828369140625, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.025196434056852e-05, -9.655952453613281e-06, -7.295608520507812e-05, -4.768370445162873e-07, -0.0008525848388671875, -2.47955322265625e-05, -3.814697265625e-05, -5.769562994828448e-05, -0.0002090930938720703, -0.0006247880519367754, -9.1552734375e-05, -4.494189124670811e-05, -0.000415802001953125, -4.9591064453125e-05, -5.14984130859375e-05, -1.7880229279398918e-06, -1.3709065569855738e-05, -1.9073486328125e-06, -0.0001850128173828125, -0.0008440017700195312, -1.9073486328125e-06, -0.002587556838989258, -2.2649765014648438e-06, -0.004185795318335295, -1.1920928244535389e-07, -5.7220458984375e-06, -3.814697265625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00041198727558366954, -6.318072337307967e-06, -0.023759126663208008, -1.9073468138230965e-06, -0.0001277923583984375, -0.002223968505859375, -3.814697265625e-06, -0.005816459655761719, -7.152555099310121e-07, -0.000453948974609375, -5.7220458984375e-06, -8.20159912109375e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -7.462501525878906e-05, -1.3470649719238281e-05, -0.0032614469528198242, -0.00014019012451171875, -0.0020236968994140625, -2.86102294921875e-05, -4.017353057861328e-05, -4.410743713378906e-06, -4.9591064453125e-05, -4.38690185546875e-05, 0.0, -2.014636993408203e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -7.855892181396484e-05, -4.053115117130801e-05, -1.7439489364624023, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.52587890625e-05, 0.0, -2.288818359375e-05, 0.0, -7.31933323550038e-05, -8.344646857949556e-07, -1.3589859008789062e-05, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002994537353515625, -1.9073486328125e-06, -4.1961669921875e-05, -2.3841855067985307e-07, -3.4332275390625e-05, -1.9073486328125e-06, -1.1682510375976562e-05, -8.22525325929746e-05, -0.028766632080078125, -1.52587890625e-05, -0.07587718963623047, -0.0003986358642578125, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, 0.0, -7.05718994140625e-05, 0.0, -0.0054988861083984375, -1.0728830375228426e-06, -9.560461330693215e-05, -2.384185791015625e-06, -0.9606369733810425, -7.033334895822918e-06, -0.0007190704345703125, -1.191080093383789, -1.9073486328125e-06, -0.005359649658203125, 0.0, -0.000453948974609375, -7.152555099310121e-07, -0.6178841590881348, -7.295608520507812e-05, -0.14972591400146484, -1.9073486328125e-06, -1.9073486328125e-06, -0.007106781005859375, -2.09808349609375e-05, -0.2777729034423828, 0.0, -0.42643070220947266, -1.9073486328125e-06, -0.0058002471923828125, 0.0, -0.001392364501953125, 0.0, -0.006400108337402344, -5.364403477869928e-06], "choice_history": [55, 124, 221, 63, 103, "Hand", "Of", "Protection", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hand", " ", "of", " ", "Protection", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>(player.hero)\n        self.player = player\n"}, {"score": -5.829210576260529, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "player", "value": {"id": "self", "_type": "Name"}}], "value": {"id": "player", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HandOfProtection", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -0.0006103515625, -5.53131103515625e-05, -0.0034732818603515625, -2.6702880859375e-05, -2.109982233378105e-05, -0.0009200607310049236, -0.0537823848426342, -0.018501531332731247, -2.47955322265625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -0.00042319297790527344, -1.823902130126953e-05, 0.0, -0.0009250640869140625, -0.000690460205078125, -1.9073486328125e-06, -0.00015127251390367746, -8.106231689453125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -4.38690185546875e-05, -8.010857709450647e-05, -3.814697265625e-06, -0.0010986328125, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004367828369140625, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.025196434056852e-05, -9.655952453613281e-06, -7.295608520507812e-05, -4.768370445162873e-07, -0.0008525848388671875, -2.47955322265625e-05, -3.814697265625e-05, -5.769562994828448e-05, -0.0002090930938720703, -0.0006247880519367754, -9.1552734375e-05, -4.494189124670811e-05, -0.000415802001953125, -4.9591064453125e-05, -5.14984130859375e-05, -1.7880229279398918e-06, -1.3709065569855738e-05, -1.9073486328125e-06, -0.0001850128173828125, -0.0008440017700195312, -1.9073486328125e-06, -0.002587556838989258, -2.2649765014648438e-06, -0.004185795318335295, -1.1920928244535389e-07, -5.7220458984375e-06, -3.814697265625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00041198727558366954, -6.318072337307967e-06, -0.023759126663208008, -1.9073468138230965e-06, -0.0001277923583984375, -0.002223968505859375, -3.814697265625e-06, -0.005816459655761719, -7.152555099310121e-07, -0.000453948974609375, -5.7220458984375e-06, -8.20159912109375e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -7.462501525878906e-05, -1.3470649719238281e-05, -0.0032614469528198242, -0.00014019012451171875, -0.0020236968994140625, -2.86102294921875e-05, -4.017353057861328e-05, -4.410743713378906e-06, -4.9591064453125e-05, -4.38690185546875e-05, 0.0, -2.014636993408203e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -7.855892181396484e-05, -4.053115117130801e-05, -1.7439489364624023, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.52587890625e-05, 0.0, -2.288818359375e-05, 0.0, -7.31933323550038e-05, -8.344646857949556e-07, -1.3589859008789062e-05, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002994537353515625, -1.9073486328125e-06, -4.1961669921875e-05, -2.3841855067985307e-07, -3.4332275390625e-05, -1.9073486328125e-06, -1.1682510375976562e-05, -8.22525325929746e-05, -0.028766632080078125, -1.52587890625e-05, -0.07587718963623047, -0.0003986358642578125, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, 0.0, -7.05718994140625e-05, 0.0, -0.0054988861083984375, -1.0728830375228426e-06, -9.560461330693215e-05, -2.384185791015625e-06, -1.4623316526412964, -6.639931962126866e-05, -7.62939453125e-06, -0.01675891876220703, -0.0010700225830078125, -0.0012264251708984375, -1.1444091796875e-05, -0.0001201629638671875, 0.0, -0.0003396272659301758, -2.622600959512056e-06, -0.6348209381103516, -6.0439109802246094e-05, -5.53131103515625e-05, -0.06944656372070312, -0.0061626434326171875, -1.33514404296875e-05, -1.71661376953125e-05, -0.0016994476318359375, -3.814697265625e-06, -0.05487060546875, 0.0, -0.03580760955810547, -2.3841855067985307e-07, -0.0001531839370727539, -9.894371032714844e-06, -0.13223648071289062, -1.4662741705251392e-05, -0.018604278564453125, -1.9073486328125e-06, -0.0029773712158203125, -1.1920928244535389e-07, -0.015479087829589844, -1.9073486328125e-06, -7.43865966796875e-05, -9.5367431640625e-06, -0.0002002716064453125, -0.057610511779785156, 0.0, -1.2887866497039795, -4.291534423828125e-06, -0.034793972969055176, 0.0, -0.001819610595703125, 0.0, -0.005053520202636719, -6.556489552167477e-06], "choice_history": [55, 124, 221, 63, 103, "Hand", "Of", "Protection", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hand", " ", "of", " ", "Protection", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_spell_damage", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_spell_damage(self.target.\n            calculate_max_health()), self)\n        self.player = player\n"}, {"score": -6.133077677930288, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "player", "value": {"id": "self", "_type": "Name"}}], "value": {"id": "player", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HandOfProtection", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -0.0006103515625, -5.53131103515625e-05, -0.0034732818603515625, -2.6702880859375e-05, -2.109982233378105e-05, -0.0009200607310049236, -0.0537823848426342, -0.018501531332731247, -2.47955322265625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -0.00042319297790527344, -1.823902130126953e-05, 0.0, -0.0009250640869140625, -0.000690460205078125, -1.9073486328125e-06, -0.00015127251390367746, -8.106231689453125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -4.38690185546875e-05, -8.010857709450647e-05, -3.814697265625e-06, -0.0010986328125, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004367828369140625, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.025196434056852e-05, -9.655952453613281e-06, -7.295608520507812e-05, -4.768370445162873e-07, -0.0008525848388671875, -2.47955322265625e-05, -3.814697265625e-05, -5.769562994828448e-05, -0.0002090930938720703, -0.0006247880519367754, -9.1552734375e-05, -4.494189124670811e-05, -0.000415802001953125, -4.9591064453125e-05, -5.14984130859375e-05, -1.7880229279398918e-06, -1.3709065569855738e-05, -1.9073486328125e-06, -0.0001850128173828125, -0.0008440017700195312, -1.9073486328125e-06, -0.002587556838989258, -2.2649765014648438e-06, -0.004185795318335295, -1.1920928244535389e-07, -5.7220458984375e-06, -3.814697265625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00041198727558366954, -6.318072337307967e-06, -0.023759126663208008, -1.9073468138230965e-06, -0.0001277923583984375, -0.002223968505859375, -3.814697265625e-06, -0.005816459655761719, -7.152555099310121e-07, -0.000453948974609375, -5.7220458984375e-06, -8.20159912109375e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -7.462501525878906e-05, -1.3470649719238281e-05, -0.0032614469528198242, -0.00014019012451171875, -0.0020236968994140625, -2.86102294921875e-05, -4.017353057861328e-05, -4.410743713378906e-06, -4.9591064453125e-05, -4.38690185546875e-05, 0.0, -2.014636993408203e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -7.855892181396484e-05, -4.053115117130801e-05, -1.7439489364624023, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.52587890625e-05, 0.0, -2.288818359375e-05, 0.0, -7.31933323550038e-05, -8.344646857949556e-07, -1.3589859008789062e-05, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002994537353515625, -1.9073486328125e-06, -4.1961669921875e-05, -2.3841855067985307e-07, -3.4332275390625e-05, -1.9073486328125e-06, -1.1682510375976562e-05, -8.22525325929746e-05, -0.028766632080078125, -1.52587890625e-05, -0.07587718963623047, -0.0003986358642578125, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, 0.0, -7.05718994140625e-05, 0.0, -0.0054988861083984375, -1.0728830375228426e-06, -9.560461330693215e-05, -2.384185791015625e-06, -1.4623316526412964, -6.639931962126866e-05, -7.62939453125e-06, -0.01675891876220703, -0.0010700225830078125, -0.0012264251708984375, -1.1444091796875e-05, -0.0001201629638671875, 0.0, -0.0003396272659301758, -2.622600959512056e-06, -0.8314228057861328, -1.1920928244535389e-07, -0.000141143798828125, -0.1397705078125, -0.0002918243408203125, -3.814697265625e-05, -5.7220458984375e-06, -0.0018787384033203125, -3.814697265625e-06, -0.04304695129394531, 0.0, -0.012287139892578125, -2.3841855067985307e-07, -0.00013589859008789062, -6.198883056640625e-06, -0.11993002891540527, -9.417532055522315e-06, -0.018253326416015625, -1.9073486328125e-06, -0.0027179718017578125, -1.1920928244535389e-07, -0.016266822814941406, -3.814697265625e-06, -6.67572021484375e-05, -9.5367431640625e-06, -0.0001811981201171875, -0.058653831481933594, 0.0, -1.3771827220916748, -4.291534423828125e-06, -0.03554832935333252, 0.0, -0.001750946044921875, 0.0, -0.005046844482421875, -6.318072337307967e-06], "choice_history": [55, 124, 221, 63, 103, "Hand", "Of", "Protection", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hand", " ", "of", " ", "Protection", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.player = player\n"}, {"score": -7.569829868959999, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "player", "value": {"id": "self", "_type": "Name"}}], "value": {"id": "player", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HandOfProtection", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -0.0006103515625, -5.53131103515625e-05, -0.0034732818603515625, -2.6702880859375e-05, -2.109982233378105e-05, -0.0009200607310049236, -0.0537823848426342, -0.018501531332731247, -2.47955322265625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -0.00042319297790527344, -1.823902130126953e-05, 0.0, -0.0009250640869140625, -0.000690460205078125, -1.9073486328125e-06, -0.00015127251390367746, -8.106231689453125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -4.38690185546875e-05, -8.010857709450647e-05, -3.814697265625e-06, -0.0010986328125, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004367828369140625, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.025196434056852e-05, -9.655952453613281e-06, -7.295608520507812e-05, -4.768370445162873e-07, -0.0008525848388671875, -2.47955322265625e-05, -3.814697265625e-05, -5.769562994828448e-05, -0.0002090930938720703, -0.0006247880519367754, -9.1552734375e-05, -4.494189124670811e-05, -0.000415802001953125, -4.9591064453125e-05, -5.14984130859375e-05, -1.7880229279398918e-06, -1.3709065569855738e-05, -1.9073486328125e-06, -0.0001850128173828125, -0.0008440017700195312, -1.9073486328125e-06, -0.002587556838989258, -2.2649765014648438e-06, -0.004185795318335295, -1.1920928244535389e-07, -5.7220458984375e-06, -3.814697265625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00041198727558366954, -6.318072337307967e-06, -0.023759126663208008, -1.9073468138230965e-06, -0.0001277923583984375, -0.002223968505859375, -3.814697265625e-06, -0.005816459655761719, -7.152555099310121e-07, -0.000453948974609375, -5.7220458984375e-06, -8.20159912109375e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -7.462501525878906e-05, -1.3470649719238281e-05, -0.0032614469528198242, -0.00014019012451171875, -0.0020236968994140625, -2.86102294921875e-05, -4.017353057861328e-05, -4.410743713378906e-06, -4.9591064453125e-05, -4.38690185546875e-05, 0.0, -2.014636993408203e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -7.855892181396484e-05, -4.053115117130801e-05, -3.7951650619506836, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, -1.33514404296875e-05, -3.0517578125e-05, 0.0, -6.496730929939076e-05, -1.1920928244535389e-07, -2.5033950805664062e-05, -2.3841855067985307e-07, -7.62939453125e-06, -0.000213623046875, 0.0, -5.14984130859375e-05, -2.3841855067985307e-07, -3.62396240234375e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -8.70207222760655e-05, -0.06111907958984375, -7.62939453125e-06, -0.001071929931640625, -5.340576171875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.014148712158203125, 0.0, -1.9073486328125e-05, 0.0, -0.0010319948196411133, -1.0728830375228426e-06, -4.9471811507828534e-05, -3.576278118089249e-07, -0.7652770280838013, -6.854446837678552e-05, -3.814697265625e-06, -0.02510356903076172, -0.0005702972412109375, -0.001239776611328125, -1.33514404296875e-05, -0.0001239776611328125, 0.0, -0.00041496753692626953, -2.9802276912960224e-06, -0.5853381156921387, -4.5180320739746094e-05, -7.05718994140625e-05, -0.0678091049194336, -0.014911651611328125, -1.52587890625e-05, -1.71661376953125e-05, -0.001659393310546875, -3.814697265625e-06, -0.06539726257324219, 0.0, -0.03506660461425781, -2.3841855067985307e-07, -0.0001379251480102539, -1.0013580322265625e-05, -0.13916027545928955, -1.2755393072438892e-05, -0.0167083740234375, -1.9073486328125e-06, -0.0030670166015625, -1.1920928244535389e-07, -0.028215408325195312, -3.814697265625e-06, -2.86102294921875e-05, -0.0001277923583984375, -0.0008029937744140625, -0.028344154357910156, 0.0, -0.37610912322998047, -3.099440846199286e-06, -0.015995383262634277, 0.0, -0.0015106201171875, 0.0, -0.003933906555175781, -6.437280717364047e-06, -0.0011157989501953125, -1.9073486328125e-06, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -6.29425048828125e-05, -0.02008819580078125, 0.0, -0.03775990009307861, -8.344646857949556e-07, -0.17367756366729736, -2.3841855067985307e-07, -0.0005702972412109375, -1.1430902481079102, 0.0, -0.0007867813110351562, -3.576278118089249e-07, -0.010469436645507812, 0.0, -8.213520050048828e-05, -0.0005118757835589349], "choice_history": [55, 124, 221, 63, 103, "Hand", "Of", "Protection", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hand", " ", "of", " ", "Protection", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_spell_damage", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_spell_damage(self.target.\n            calculate_max_health()), self)\n        self.player = player\n        self.target(player, game)\n"}, {"score": -8.069088277073924, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "<UNK>", "value": {"id": "player", "_type": "Name"}}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HandOfProtection", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-05, -0.0006103515625, -5.53131103515625e-05, -0.0034732818603515625, -2.6702880859375e-05, -2.109982233378105e-05, -0.0009200607310049236, -0.0537823848426342, -0.018501531332731247, -2.47955322265625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -0.00042319297790527344, -1.823902130126953e-05, 0.0, -0.0009250640869140625, -0.000690460205078125, -1.9073486328125e-06, -0.00015127251390367746, -8.106231689453125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -4.38690185546875e-05, -8.010857709450647e-05, -3.814697265625e-06, -0.0010986328125, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004367828369140625, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.025196434056852e-05, -9.655952453613281e-06, -7.295608520507812e-05, -4.768370445162873e-07, -0.0008525848388671875, -2.47955322265625e-05, -3.814697265625e-05, -5.769562994828448e-05, -0.0002090930938720703, -0.0006247880519367754, -9.1552734375e-05, -4.494189124670811e-05, -0.000415802001953125, -4.9591064453125e-05, -5.14984130859375e-05, -1.7880229279398918e-06, -1.3709065569855738e-05, -1.9073486328125e-06, -0.0001850128173828125, -0.0008440017700195312, -1.9073486328125e-06, -0.002587556838989258, -2.2649765014648438e-06, -0.004185795318335295, -1.1920928244535389e-07, -5.7220458984375e-06, -3.814697265625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00041198727558366954, -6.318072337307967e-06, -0.023759126663208008, -1.9073468138230965e-06, -0.0001277923583984375, -0.002223968505859375, -3.814697265625e-06, -0.005816459655761719, -7.152555099310121e-07, -0.000453948974609375, -5.7220458984375e-06, -8.20159912109375e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -7.462501525878906e-05, -1.3470649719238281e-05, -0.0032614469528198242, -0.00014019012451171875, -0.0020236968994140625, -2.86102294921875e-05, -4.017353057861328e-05, -4.410743713378906e-06, -4.9591064453125e-05, -4.38690185546875e-05, 0.0, -2.014636993408203e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -7.855892181396484e-05, -4.053115117130801e-05, -1.7439489364624023, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -1.52587890625e-05, 0.0, -2.288818359375e-05, 0.0, -7.31933323550038e-05, -8.344646857949556e-07, -1.3589859008789062e-05, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002994537353515625, -1.9073486328125e-06, -4.1961669921875e-05, -2.3841855067985307e-07, -3.4332275390625e-05, -1.9073486328125e-06, -1.1682510375976562e-05, -8.22525325929746e-05, -0.028766632080078125, -1.52587890625e-05, -0.07587718963623047, -0.0003986358642578125, -5.7220458984375e-06, -1.9073486328125e-06, -0.000263214111328125, 0.0, -7.05718994140625e-05, 0.0, -0.0054988861083984375, -1.0728830375228426e-06, -9.560461330693215e-05, -2.384185791015625e-06, -1.4623316526412964, -6.639931962126866e-05, -7.62939453125e-06, -0.01675891876220703, -0.0010700225830078125, -0.0012264251708984375, -1.1444091796875e-05, -0.0001201629638671875, 0.0, -0.0003396272659301758, -2.622600959512056e-06, -0.6348209381103516, -6.0439109802246094e-05, -5.53131103515625e-05, -0.06944656372070312, -0.0061626434326171875, -1.33514404296875e-05, -1.71661376953125e-05, -0.0016994476318359375, -3.814697265625e-06, -0.05487060546875, 0.0, -0.03580760955810547, -2.3841855067985307e-07, -0.0001531839370727539, -9.894371032714844e-06, -0.13223648071289062, -1.4662741705251392e-05, -0.018604278564453125, -1.9073486328125e-06, -0.0029773712158203125, -1.1920928244535389e-07, -0.015479087829589844, -1.9073486328125e-06, -7.43865966796875e-05, -9.5367431640625e-06, -0.0002002716064453125, -0.057610511779785156, 0.0, -2.0487706661224365, -4.887569048150908e-06, -0.8281663656234741, -1.7166135876323096e-05, -0.6924676895141602, -0.0008335113525390625, -8.20159912109375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Hand", "Of", "Protection", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hand", " ", "of", " ", "Protection", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_spell_damage", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_spell_damage(self.target.\n            calculate_max_health()), self)\n        player.<UNK> = True\n"}, {"score": -20.413576126098633, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-05, -0.0006103515625, -20.412946701049805], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 45}
{"beams": [{"score": -0.1269569798750183, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole7": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "hole3": "Heal", "hole0": 0, "hole2": "TurnEnded", "hole1": 2, "_type": "Template0", "hole5": "MinionSelector", "hole4": [{"_type": "Num", "n": 1}]}], "_type": "ClassDef", "name": "HealingTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.05718994140625e-05, -2.09808349609375e-05, -3.1470921385334805e-05, -0.0026181063149124384, -0.0007329100626520813, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -2.7179487005923875e-05, -0.0011082887649536133, -3.576278118089249e-07, -1.33514404296875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0006376504898071289, -2.1457672119140625e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.1444091796875e-05, -0.00012481189332902431, -2.0623201635316946e-05, -6.29425048828125e-05, -5.14984130859375e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0023632049560546875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004913771990686655, 0.0, -9.226799011230469e-05, 0.0, -0.00058746337890625, -0.0015735626220703125, -7.62939453125e-06, -3.3855263609439135e-05, -0.00020062919065821916, -4.91138307552319e-05, -1.1444091796875e-05, -0.001018524169921875, -2.47955322265625e-05, -7.893331348896027e-05, 0.0, -0.000545501708984375, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -0.000247955322265625, 0.0, -0.012195587158203125, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0008983612060546875, -2.3841855067985307e-07, -0.002288818359375, 0.0, -0.00170135498046875, -4.9591064453125e-05, -6.687641143798828e-05, 0.0, 0.0, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000591278076171875, 0.0, -0.0058612823486328125, 0.0, -0.0024662017822265625, -0.02575206756591797, -0.005023357458412647, -5.125986263010418e-06, -0.012804141268134117, -3.6954811548639555e-06, -0.0013989186845719814, -0.0005424022674560547, 0.0, -0.020122885704040527, -9.179109838441946e-06, -1.9073486328125e-06, -0.000377655029296875, -6.29425048828125e-05, -0.00042366934940218925, 0.0, -0.0012881755828857422, -3.814697265625e-05, 0.0, -0.0001087188720703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.000782012939453125, 0.0, -0.017765045166015625, -0.0004177093505859375, -7.05718994140625e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Healing", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Healing", " ", "Totem", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 141, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"score": -4.219796698211127, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole7": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "hole3": "Give", "hole0": 0, "hole2": "TurnEnded", "hole1": 2, "_type": "Template0", "hole5": "MinionSelector", "hole4": [{"_type": "Template35", "hole0": 1}]}], "_type": "ClassDef", "name": "HealingTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.05718994140625e-05, -2.09808349609375e-05, -3.1470921385334805e-05, -0.0026181063149124384, -0.0007329100626520813, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -2.7179487005923875e-05, -0.0011082887649536133, -3.576278118089249e-07, -1.33514404296875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0006376504898071289, -2.1457672119140625e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.1444091796875e-05, -0.00012481189332902431, -2.0623201635316946e-05, -6.29425048828125e-05, -5.14984130859375e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0023632049560546875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004913771990686655, 0.0, -9.226799011230469e-05, 0.0, -0.00058746337890625, -0.0015735626220703125, -7.62939453125e-06, -3.3855263609439135e-05, -0.00020062919065821916, -4.91138307552319e-05, -1.1444091796875e-05, -0.001018524169921875, -2.47955322265625e-05, -7.893331348896027e-05, 0.0, -0.000545501708984375, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -0.000247955322265625, 0.0, -0.012195587158203125, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0008983612060546875, -2.3841855067985307e-07, -0.002288818359375, 0.0, -0.00170135498046875, -4.9591064453125e-05, -6.687641143798828e-05, 0.0, 0.0, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000591278076171875, 0.0, -0.0058612823486328125, 0.0, -0.0024662017822265625, -0.02575206756591797, -0.005023357458412647, -5.125986263010418e-06, -0.012804141268134117, -3.6954811548639555e-06, -0.0013989186845719814, -0.0005424022674560547, 0.0, -3.993689775466919, -5.9604644775390625e-06, -3.814697265625e-06, -0.05525970458984375, -0.0019321441650390625, -0.000339508056640625, -1.9073486328125e-06, -0.07342147827148438, -3.814697265625e-05, 0.0, -0.0002498626708984375, -2.09808349609375e-05, -5.7220458984375e-06, -0.0005550384521484375, 0.0, -0.008435249328613281, -0.0002918243408203125, -7.2479248046875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Healing", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Healing", " ", "Totem", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 141, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Give", "<EOS>", 208, 46, 171, "1", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeAttack(1)), MinionSelector(condition=Null)))])\n"}, {"score": -4.337358451689084, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole3": "Heal", "hole0": 0, "hole2": "TurnEnded", "hole1": 2, "_type": "Template0", "hole5": "SelfSelector", "hole4": [{"_type": "Num", "n": 1}]}], "_type": "ClassDef", "name": "HealingTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.05718994140625e-05, -2.09808349609375e-05, -3.1470921385334805e-05, -0.0026181063149124384, -0.0007329100626520813, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -2.7179487005923875e-05, -0.0011082887649536133, -3.576278118089249e-07, -1.33514404296875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0006376504898071289, -2.1457672119140625e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.1444091796875e-05, -0.00012481189332902431, -2.0623201635316946e-05, -6.29425048828125e-05, -5.14984130859375e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0023632049560546875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004913771990686655, 0.0, -9.226799011230469e-05, 0.0, -0.00058746337890625, -0.0015735626220703125, -7.62939453125e-06, -3.3855263609439135e-05, -0.00020062919065821916, -4.91138307552319e-05, -1.1444091796875e-05, -0.001018524169921875, -2.47955322265625e-05, -7.893331348896027e-05, 0.0, -0.000545501708984375, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -0.000247955322265625, 0.0, -0.012195587158203125, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0008983612060546875, -2.3841855067985307e-07, -0.002288818359375, 0.0, -0.00170135498046875, -4.9591064453125e-05, -6.687641143798828e-05, 0.0, 0.0, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000591278076171875, 0.0, -0.0058612823486328125, 0.0, -0.0024662017822265625, -4.227900505065918, -0.0032057762145996094, -2.7418097943154862e-06, -0.0035441801883280277, -1.311301275563892e-06, -0.034244634211063385, -0.004269003868103027, 0.0, -0.0008904931601136923, -1.8834924048860557e-05, -1.9073486328125e-06, -0.0004558563232421875, -1.9073486328125e-06, -0.005794979631900787, 0.0, -0.017077205702662468, -5.7220458984375e-06, 0.0], "choice_history": [55, 124, 221, 63, 103, "Healing", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Healing", " ", "Totem", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 140, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            SelfSelector()))])\n"}, {"score": -4.484162385030942, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole7": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "hole3": "Heal", "hole0": 0, "hole2": "TurnEnded", "hole1": 1, "_type": "Template0", "hole5": "MinionSelector", "hole4": [{"_type": "Num", "n": 1}]}], "_type": "ClassDef", "name": "HealingTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.05718994140625e-05, -2.09808349609375e-05, -3.1470921385334805e-05, -0.0026181063149124384, -0.0007329100626520813, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -2.7179487005923875e-05, -0.0011082887649536133, -3.576278118089249e-07, -1.33514404296875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0006376504898071289, -2.1457672119140625e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.1444091796875e-05, -0.00012481189332902431, -2.0623201635316946e-05, -6.29425048828125e-05, -5.14984130859375e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0023632049560546875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004913771990686655, 0.0, -9.226799011230469e-05, 0.0, -0.00058746337890625, -0.0015735626220703125, -7.62939453125e-06, -3.3855263609439135e-05, -0.00020062919065821916, -4.91138307552319e-05, -1.1444091796875e-05, -0.001018524169921875, -2.47955322265625e-05, -7.893331348896027e-05, 0.0, -0.000545501708984375, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -0.000247955322265625, 0.0, -0.012195587158203125, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0008983612060546875, -2.3841855067985307e-07, -0.002288818359375, 0.0, -0.00170135498046875, -4.9591064453125e-05, -6.687641143798828e-05, 0.0, 0.0, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000591278076171875, 0.0, -0.0058612823486328125, 0.0, -0.0024662017822265625, -0.02575206756591797, -0.005023357458412647, -5.125986263010418e-06, -4.371915340423584, -4.768370445162873e-07, -0.00047767141950316727, -0.0004093647003173828, -1.9073486328125e-06, -0.019172072410583496, -1.5377980162156746e-05, -1.9073486328125e-06, -0.0004730224609375, -5.7220458984375e-05, -0.0005620741285383701, 0.0, -0.001915574073791504, -4.00543212890625e-05, 0.0, -0.0001163482666015625, -9.5367431640625e-06, -1.9073486328125e-06, -0.00080108642578125, 0.0, -0.016984939575195312, -0.0004100799560546875, -7.05718994140625e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Healing", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Healing", " ", "Totem", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 141, "0", "<EOS>", "1", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 1, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"score": -4.9680881918270074, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole7": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "hole3": "Heal", "hole0": 0, "hole2": "TurnEnded", "hole1": 2, "_type": "Template0", "hole5": "MinionSelector", "hole4": [{"_type": "Num", "n": 1}]}], "_type": "ClassDef", "name": "HealingTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.05718994140625e-05, -2.09808349609375e-05, -3.1470921385334805e-05, -0.0026181063149124384, -0.0007329100626520813, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -2.7179487005923875e-05, -0.0011082887649536133, -3.576278118089249e-07, -1.33514404296875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0006376504898071289, -2.1457672119140625e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.1444091796875e-05, -0.00012481189332902431, -2.0623201635316946e-05, -6.29425048828125e-05, -5.14984130859375e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0023632049560546875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004913771990686655, 0.0, -9.226799011230469e-05, 0.0, -0.00058746337890625, -0.0015735626220703125, -7.62939453125e-06, -3.3855263609439135e-05, -0.00020062919065821916, -4.91138307552319e-05, -1.1444091796875e-05, -0.001018524169921875, -2.47955322265625e-05, -7.893331348896027e-05, 0.0, -0.000545501708984375, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -0.000247955322265625, 0.0, -4.845268249511719, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.0004711151123046875, -9.536738616588991e-07, -0.00662994384765625, 0.0, -0.001255035400390625, -6.4849853515625e-05, -0.00010120868682861328, 0.0, 0.0, -1.9073486328125e-06, -0.000484466552734375, 0.0, -0.0007724761962890625, 0.0, -0.00677490234375, 0.0, -0.0023651123046875, -0.02708148956298828, -0.0048751807771623135, -5.602820692729438e-06, -0.013123146258294582, -3.933898824470816e-06, -0.0016044356161728501, -0.0005195140838623047, 0.0, -0.02138829231262207, -9.298318218498025e-06, -1.9073486328125e-06, -0.000354766845703125, -6.67572021484375e-05, -0.0004674192750826478, 0.0, -0.0011241436004638672, -3.814697265625e-05, 0.0, -0.000110626220703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.000774383544921875, 0.0, -0.01813220977783203, -0.0004291534423828125, -6.866455078125e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Healing", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Healing", " ", "Totem", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 141, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"score": -5.438950037887395, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole7": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "hole3": "Heal", "hole0": 1, "hole2": "TurnEnded", "hole1": 2, "_type": "Template0", "hole5": "MinionSelector", "hole4": [{"_type": "Num", "n": 1}]}], "_type": "ClassDef", "name": "HealingTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.05718994140625e-05, -2.09808349609375e-05, -3.1470921385334805e-05, -0.0026181063149124384, -0.0007329100626520813, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -2.7179487005923875e-05, -0.0011082887649536133, -3.576278118089249e-07, -1.33514404296875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0006376504898071289, -2.1457672119140625e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.1444091796875e-05, -0.00012481189332902431, -2.0623201635316946e-05, -6.29425048828125e-05, -5.14984130859375e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0023632049560546875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004913771990686655, 0.0, -9.226799011230469e-05, 0.0, -0.00058746337890625, -0.0015735626220703125, -7.62939453125e-06, -3.3855263609439135e-05, -0.00020062919065821916, -4.91138307552319e-05, -1.1444091796875e-05, -0.001018524169921875, -2.47955322265625e-05, -7.893331348896027e-05, 0.0, -0.000545501708984375, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -0.000247955322265625, 0.0, -0.012195587158203125, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0008983612060546875, -2.3841855067985307e-07, -0.002288818359375, 0.0, -0.00170135498046875, -4.9591064453125e-05, -6.687641143798828e-05, 0.0, 0.0, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000591278076171875, 0.0, -0.0058612823486328125, 0.0, -0.0024662017822265625, -0.02575206756591797, -5.305549621582031, -1.5020257706055418e-05, -0.02911178395152092, -1.2874520507466514e-05, -0.0010488032130524516, -0.0005176067352294922, 0.0, -0.015537619590759277, -7.390969585685525e-06, -1.9073486328125e-06, -0.0003604888916015625, -6.29425048828125e-05, -0.00045418692752718925, 0.0, -0.0015571117401123047, -4.00543212890625e-05, 0.0, -0.0001125335693359375, -1.1444091796875e-05, -1.9073486328125e-06, -0.00078582763671875, 0.0, -0.01756572723388672, -0.00042724609375, -7.05718994140625e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Healing", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Healing", " ", "Totem", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 141, "1", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(1, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"score": -5.836750070695331, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole7": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "hole3": "Heal", "hole0": 0, "hole2": "TurnEnded", "hole1": 2, "_type": "Template0", "hole5": "MinionSelector", "hole4": [{"_type": "Num", "n": 1}]}], "_type": "ClassDef", "name": "HealingTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.05718994140625e-05, -2.09808349609375e-05, -3.1470921385334805e-05, -0.0026181063149124384, -0.0007329100626520813, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -2.7179487005923875e-05, -0.0011082887649536133, -3.576278118089249e-07, -1.33514404296875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0006376504898071289, -2.1457672119140625e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.1444091796875e-05, -0.00012481189332902431, -2.0623201635316946e-05, -6.29425048828125e-05, -5.14984130859375e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0023632049560546875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004913771990686655, 0.0, -9.226799011230469e-05, 0.0, -0.00058746337890625, -0.0015735626220703125, -7.62939453125e-06, -3.3855263609439135e-05, -0.00020062919065821916, -4.91138307552319e-05, -1.1444091796875e-05, -0.001018524169921875, -2.47955322265625e-05, -7.893331348896027e-05, 0.0, -0.000545501708984375, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -0.000247955322265625, 0.0, -0.012195587158203125, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0008983612060546875, -2.3841855067985307e-07, -0.002288818359375, 0.0, -0.00170135498046875, -4.9591064453125e-05, -6.687641143798828e-05, 0.0, 0.0, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000591278076171875, 0.0, -0.0058612823486328125, 0.0, -0.0024662017822265625, -0.02575206756591797, -0.005023357458412647, -5.125986263010418e-06, -0.012804141268134117, -3.6954811548639555e-06, -0.0013989186845719814, -0.0005424022674560547, 0.0, -0.020122885704040527, -9.179109838441946e-06, -1.9073486328125e-06, -0.000377655029296875, -6.29425048828125e-05, -0.00042366934940218925, 0.0, -0.0012881755828857422, -3.814697265625e-05, 0.0, -0.0001087188720703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.000782012939453125, 0.0, -4.288049697875977, -3.4332275390625e-05, -0.0014629364013671875, -6.4849853515625e-05, -0.5188875198364258, -1.9073486328125e-06, -1.9073486328125e-05, -0.012114524841308594, -6.103515625e-05, -0.05828666687011719, 0.0, -0.0631265640258789, 0.0, -0.7859373092651367, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Healing", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Healing", " ", "Totem", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 141, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=len(MINION_TYPE.BEAST))))])\n"}, {"score": -5.95500150913395, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "minions", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole7": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "hole3": "Heal", "hole0": 0, "hole2": "TurnEnded", "hole1": 2, "_type": "Template0", "hole5": "MinionSelector", "hole4": [{"_type": "Num", "n": 1}]}], "_type": "ClassDef", "name": "HealingTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.05718994140625e-05, -2.09808349609375e-05, -3.1470921385334805e-05, -0.0026181063149124384, -0.0007329100626520813, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -2.7179487005923875e-05, -0.0011082887649536133, -3.576278118089249e-07, -1.33514404296875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0006376504898071289, -2.1457672119140625e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.1444091796875e-05, -0.00012481189332902431, -2.0623201635316946e-05, -6.29425048828125e-05, -5.14984130859375e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0023632049560546875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004913771990686655, 0.0, -9.226799011230469e-05, 0.0, -0.00058746337890625, -0.0015735626220703125, -7.62939453125e-06, -3.3855263609439135e-05, -0.00020062919065821916, -4.91138307552319e-05, -1.1444091796875e-05, -0.001018524169921875, -2.47955322265625e-05, -7.893331348896027e-05, 0.0, -0.000545501708984375, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -0.000247955322265625, 0.0, -0.012195587158203125, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0008983612060546875, -2.3841855067985307e-07, -0.002288818359375, 0.0, -0.00170135498046875, -4.9591064453125e-05, -6.687641143798828e-05, 0.0, 0.0, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000591278076171875, 0.0, -5.804715156555176, -1.9073486328125e-06, -0.010651588439941406, -0.03650379180908203, -0.005642055533826351, -4.529942543740617e-06, -0.001970869954675436, -1.9073468138230965e-06, -0.0008552071521990001, -0.0008188486099243164, 0.0, -0.03717994689941406, -1.561641511216294e-05, 0.0, -0.0011749267578125, -2.47955322265625e-05, -0.00043713953346014023, 0.0, -0.0018352270126342773, -3.814697265625e-05, 0.0, -0.0001354217529296875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0009021759033203125, 0.0, -0.01997661590576172, -0.0004253387451171875, -6.103515625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Healing", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Healing", " ", "Totem", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "minions", "<EOS>", 70, 141, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.minions)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"score": -6.09307229579818, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole7": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "hole3": "Heal", "hole0": 0, "hole2": "TurnEnded", "hole1": 2, "_type": "Template0", "hole5": "MinionSelector", "hole4": [{"_type": "Num", "n": 1}]}], "_type": "ClassDef", "name": "HealingOfTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.05718994140625e-05, -2.09808349609375e-05, -3.1470921385334805e-05, -5.969974517822266, -1.9073468138230965e-06, -2.0265410057618283e-05, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -1.7166048564831726e-05, -0.0007287263870239258, -3.576278118089249e-07, -1.33514404296875e-05, -0.000209808349609375, -1.9073486328125e-06, -0.0003718137741088867, -4.0531158447265625e-06, -5.7220458984375e-06, -8.7738037109375e-05, -1.33514404296875e-05, -0.00012278524809516966, -2.1100036974530667e-05, -5.91278076171875e-05, -5.53131103515625e-05, -0.0001239776611328125, -9.5367431640625e-06, -0.0027179718017578125, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.00047528406139463186, 0.0, -9.608268737792969e-05, 0.0, -0.0005817413330078125, -0.0015716552734375, -5.7220458984375e-06, -3.337843736517243e-05, -0.00019884105131495744, -7.96313543105498e-05, -3.814697265625e-05, -0.001678466796875, -2.47955322265625e-05, -8.644629269838333e-05, 0.0, -0.0006103515625, -1.9073486328125e-05, -2.288818359375e-05, 0.0, -0.0002574920654296875, 0.0, -0.0120086669921875, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.00089263916015625, -2.3841855067985307e-07, -0.00228118896484375, 0.0, -0.0018634796142578125, -4.76837158203125e-05, -7.259845733642578e-05, 0.0, 0.0, -1.9073486328125e-06, -0.000232696533203125, 0.0, -0.0006008148193359375, 0.0, -0.00571441650390625, 0.0, -0.002231597900390625, -0.025040626525878906, -0.005009171552956104, -5.125986263010418e-06, -0.013183108530938625, -3.6954811548639555e-06, -0.0014196609845384955, -0.0005424022674560547, 0.0, -0.02017819881439209, -9.059900548891164e-06, -1.9073486328125e-06, -0.0003757476806640625, -6.4849853515625e-05, -0.0004179474199190736, 0.0, -0.0013186931610107422, -3.814697265625e-05, 0.0, -0.0001068115234375, -1.1444091796875e-05, -1.9073486328125e-06, -0.000782012939453125, 0.0, -0.017492294311523438, -0.0004138946533203125, -7.05718994140625e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Healing", "Of", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Healing", " ", "Totem", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 141, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class HealingOfTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"score": -6.24806884968703, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole7": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "func": {"id": "len", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "hole3": "Heal", "hole0": 0, "hole2": "TurnEnded", "hole1": 2, "_type": "Template0", "hole5": "MinionSelector", "hole4": [{"_type": "Num", "n": 1}]}], "_type": "ClassDef", "name": "HealingTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.05718994140625e-05, -2.09808349609375e-05, -3.1470921385334805e-05, -0.0026181063149124384, -0.0007329100626520813, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -2.7179487005923875e-05, -0.0011082887649536133, -3.576278118089249e-07, -1.33514404296875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0006376504898071289, -2.1457672119140625e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.1444091796875e-05, -0.00012481189332902431, -2.0623201635316946e-05, -6.29425048828125e-05, -5.14984130859375e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0023632049560546875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004913771990686655, 0.0, -9.226799011230469e-05, 0.0, -0.00058746337890625, -0.0015735626220703125, -7.62939453125e-06, -3.3855263609439135e-05, -0.00020062919065821916, -4.91138307552319e-05, -1.1444091796875e-05, -0.001018524169921875, -2.47955322265625e-05, -7.893331348896027e-05, 0.0, -0.000545501708984375, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -0.000247955322265625, 0.0, -0.012195587158203125, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0008983612060546875, -2.3841855067985307e-07, -0.002288818359375, 0.0, -0.00170135498046875, -4.9591064453125e-05, -6.687641143798828e-05, 0.0, 0.0, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000591278076171875, 0.0, -0.0058612823486328125, 0.0, -0.0024662017822265625, -0.02575206756591797, -0.005023357458412647, -5.125986263010418e-06, -0.012804141268134117, -3.6954811548639555e-06, -0.0013989186845719814, -0.0005424022674560547, 0.0, -0.020122885704040527, -9.179109838441946e-06, -1.9073486328125e-06, -0.000377655029296875, -6.29425048828125e-05, -0.00042366934940218925, 0.0, -0.0012881755828857422, -3.814697265625e-05, 0.0, -0.0001087188720703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.000782012939453125, 0.0, -4.288049697875977, -3.4332275390625e-05, -0.0014629364013671875, -6.4849853515625e-05, -0.5188875198364258, -1.9073486328125e-06, -1.9073486328125e-05, -0.012114524841308594, -6.103515625e-05, -0.05828666687011719, 0.0, -0.0631265640258789, 0.0, -1.1972541809082031, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Healing", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Healing", " ", "Totem", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 141, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=len(MINION_TYPE.PIRATE))))])\n"}, {"score": -6.899774353150775, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole7": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "hole3": "Heal", "hole0": 0, "hole2": "TurnEnded", "hole1": 2, "_type": "Template0", "hole5": "SelfSelector", "hole4": [{"_type": "Num", "n": 1}]}], "_type": "ClassDef", "name": "HealingTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.05718994140625e-05, -2.09808349609375e-05, -3.1470921385334805e-05, -0.0026181063149124384, -0.0007329100626520813, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -2.7179487005923875e-05, -0.0011082887649536133, -3.576278118089249e-07, -1.33514404296875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0006376504898071289, -2.1457672119140625e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.1444091796875e-05, -0.00012481189332902431, -2.0623201635316946e-05, -6.29425048828125e-05, -5.14984130859375e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0023632049560546875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004913771990686655, 0.0, -9.226799011230469e-05, 0.0, -0.00058746337890625, -0.0015735626220703125, -7.62939453125e-06, -3.3855263609439135e-05, -0.00020062919065821916, -4.91138307552319e-05, -1.1444091796875e-05, -0.001018524169921875, -2.47955322265625e-05, -7.893331348896027e-05, 0.0, -0.000545501708984375, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -0.000247955322265625, 0.0, -0.012195587158203125, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0008983612060546875, -2.3841855067985307e-07, -0.002288818359375, 0.0, -0.00170135498046875, -4.9591064453125e-05, -6.687641143798828e-05, 0.0, 0.0, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000591278076171875, 0.0, -0.0058612823486328125, 0.0, -0.0024662017822265625, -0.02575206756591797, -0.005023357458412647, -5.125986263010418e-06, -0.012804141268134117, -3.6954811548639555e-06, -0.0013989186845719814, -0.0005424022674560547, 0.0, -0.020122885704040527, -9.179109838441946e-06, -1.9073486328125e-06, -0.000377655029296875, -6.29425048828125e-05, -0.00042366934940218925, 0.0, -6.769006252288818, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0013675689697265625, 0.0, -0.022429466247558594, -0.0003376007080078125, -8.7738037109375e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Healing", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Healing", " ", "Totem", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 141, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Self", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            SelfSelector(condition=Null)))])\n"}, {"score": -6.922737161759784, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole7": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "hole3": "Heal", "hole0": 0, "hole2": "TurnEnded", "hole1": 2, "_type": "Template0", "hole5": "MinionSelector", "hole4": [{"_type": "Num", "n": 1}]}], "_type": "ClassDef", "name": "HealingTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.05718994140625e-05, -2.09808349609375e-05, -3.1470921385334805e-05, -0.0026181063149124384, -0.0007329100626520813, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -2.7179487005923875e-05, -0.0011082887649536133, -3.576278118089249e-07, -1.33514404296875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0006376504898071289, -2.1457672119140625e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.1444091796875e-05, -0.00012481189332902431, -2.0623201635316946e-05, -6.29425048828125e-05, -5.14984130859375e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0023632049560546875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004913771990686655, 0.0, -9.226799011230469e-05, 0.0, -0.00058746337890625, -0.0015735626220703125, -7.62939453125e-06, -3.3855263609439135e-05, -0.00020062919065821916, -4.91138307552319e-05, -1.1444091796875e-05, -0.001018524169921875, -2.47955322265625e-05, -7.893331348896027e-05, 0.0, -0.000545501708984375, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -0.000247955322265625, 0.0, -0.012195587158203125, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0008983612060546875, -2.3841855067985307e-07, -0.002288818359375, 0.0, -0.00170135498046875, -4.9591064453125e-05, -6.687641143798828e-05, 0.0, 0.0, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000591278076171875, 0.0, -0.0058612823486328125, 0.0, -0.0024662017822265625, -0.02575206756591797, -0.005023357458412647, -5.125986263010418e-06, -0.012804141268134117, -3.6954811548639555e-06, -0.0013989186845719814, -0.0005424022674560547, 0.0, -0.020122885704040527, -9.179109838441946e-06, -1.9073486328125e-06, -0.000377655029296875, -6.29425048828125e-05, -0.00042366934940218925, 0.0, -0.0012881755828857422, -3.814697265625e-05, 0.0, -0.0001087188720703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.000782012939453125, 0.0, -4.288049697875977, -3.4332275390625e-05, -0.0014629364013671875, -6.4849853515625e-05, -2.094174385070801, -0.003177642822265625, 0.0, -0.0005512237548828125, -7.62939453125e-06, -3.814697265625e-06, -0.0026750564575195312, -1.9073486328125e-06, -0.001850128173828125, 0.0, -0.4219799041748047, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Healing", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Healing", " ", "Totem", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 141, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=IsType(MINION_TYPE.BEAST))))])\n"}, {"score": -7.078505443152068, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole7": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "hole3": "Heal", "hole0": 0, "hole2": "TurnEnded", "hole1": 2, "_type": "Template0", "hole5": "MinionSelector", "hole4": [{"_type": "Num", "n": 1}]}], "_type": "ClassDef", "name": "HealingTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.05718994140625e-05, -2.09808349609375e-05, -3.1470921385334805e-05, -0.0026181063149124384, -0.0007329100626520813, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -2.7179487005923875e-05, -0.0011082887649536133, -3.576278118089249e-07, -1.33514404296875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0006376504898071289, -2.1457672119140625e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.1444091796875e-05, -0.00012481189332902431, -2.0623201635316946e-05, -6.29425048828125e-05, -5.14984130859375e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0023632049560546875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004913771990686655, 0.0, -9.226799011230469e-05, 0.0, -0.00058746337890625, -0.0015735626220703125, -7.62939453125e-06, -3.3855263609439135e-05, -0.00020062919065821916, -4.91138307552319e-05, -1.1444091796875e-05, -0.001018524169921875, -2.47955322265625e-05, -7.893331348896027e-05, 0.0, -0.000545501708984375, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -0.000247955322265625, 0.0, -0.012195587158203125, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0008983612060546875, -2.3841855067985307e-07, -0.002288818359375, 0.0, -0.00170135498046875, -4.9591064453125e-05, -6.687641143798828e-05, 0.0, 0.0, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000591278076171875, 0.0, -6.891519546508789, -1.9073486328125e-06, -0.062355995178222656, -0.013665199279785156, -0.0054625254124403, -1.0132738680113107e-05, -0.03458642587065697, -3.576272320060525e-06, -0.0008795246249064803, -0.0005533695220947266, 0.0, -0.015491843223571777, -7.5101784204889555e-06, 0.0, -0.0003032684326171875, -4.76837158203125e-05, -0.00042593316175043583, 0.0, -0.001027226448059082, -4.1961669921875e-05, 0.0, -0.00014495849609375, -1.1444091796875e-05, -3.814697265625e-06, -0.0007953643798828125, 0.0, -0.019067764282226562, -0.0004138946533203125, -6.67572021484375e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Healing", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Healing", " ", "Totem", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 70, 141, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"score": -7.136415247381535, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole3": "Heal", "hole0": 0, "hole2": "TurnEnded", "hole1": 2, "_type": "Template0", "hole5": "SelfSelector", "hole4": [{"_type": "Num", "n": 1}]}], "_type": "ClassDef", "name": "HealingTotem", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.05718994140625e-05, -2.09808349609375e-05, -3.1470921385334805e-05, -0.0026181063149124384, -0.0007329100626520813, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -2.7179487005923875e-05, -0.0011082887649536133, -3.576278118089249e-07, -1.33514404296875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0006376504898071289, -2.1457672119140625e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.1444091796875e-05, -0.00012481189332902431, -2.0623201635316946e-05, -6.29425048828125e-05, -5.14984130859375e-05, -0.00014495849609375, -9.5367431640625e-06, -6.327577590942383, -5.53131103515625e-05, 0.0, -1.71661376953125e-05, 0.0, -0.0060312747955322266, -1.9073486328125e-06, -6.711483001708984e-05, 0.0, -0.003753662109375, -0.0003261566162109375, -5.7220458984375e-06, -1.1444046322139911e-05, -0.0001589059829711914, -0.00011336719762766734, -9.5367431640625e-06, -0.0005950927734375, -0.0001277923583984375, -0.005920585244894028, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -0.000118255615234375, 0.0, -0.017495155334472656, 0.0, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -6.103515625e-05, -9.536738616588991e-07, -0.34771645069122314, 0.0, -0.01178741455078125, -0.0034923553466796875, 0.0, -0.0001010894775390625, 0.0, -5.91278076171875e-05, 0.0, -0.00016021728515625, 0.0, -0.0006389617919921875, 0.0, -0.04279899597167969, 0.0, -0.0037946701049804688, -0.1890277862548828, -0.0018237829208374023, -2.3841830625315197e-06, -0.0012371477205306292, -2.861018856492592e-06, -0.10928099602460861, -0.0030406711157411337, 0.0, -0.002993821632117033, -3.8504062104038894e-05, -9.5367431640625e-06, -0.0027570724487304688, -3.814697265625e-06, -0.025252684950828552, 0.0, -0.021701093763113022, -7.62939453125e-06, 0.0], "choice_history": [55, 124, 221, 63, 103, "Healing", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Healing", " ", "Totem", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 140, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            SelfSelector()))])\n"}, {"score": -21.074321746826172, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -21.074304580688477], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 46}
{"beams": [{"score": -0.32963033142129206, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 8}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HealingTouch", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.583032467868179e-06, -0.0002356490003876388, -0.00011944102152483538, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -7.760523294564337e-05, -2.7894868253497407e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00435638427734375, -1.9073486328125e-06, -1.7523756469017826e-05, -4.768370445162873e-07, -5.7220458984375e-06, -2.86102294921875e-05, -5.7220458984375e-06, -0.021589908748865128, -2.384185791015625e-06, -0.0005035400390625, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.2874520507466514e-05, -6.79492904964718e-06, -1.811981201171875e-05, -1.6689286894688848e-06, -0.0002994537353515625, -0.00038909912109375, -9.5367431640625e-05, -1.6689286894688848e-06, -7.832050323486328e-05, -0.00019620107195805758, -0.0001049041748046875, -1.9073486328125e-05, -7.62939453125e-06, -7.033323527139146e-06, -3.504691630951129e-05, -2.09808349609375e-05, -7.05718994140625e-05, -1.71661376953125e-05, -0.0001468658447265625, -5.030631655245088e-05, -4.053113570989808e-06, -0.13866806030273438, -2.3841830625315197e-06, -1.9073486328125e-06, -0.0001621246337890625, -9.34600830078125e-05, -0.00014495849609375, -0.0003192424774169922, -3.504691630951129e-05, -0.0024701356887817383, 0.0, -3.0517578125e-05, -4.00543212890625e-05, -2.86102294921875e-05, -0.0008945465087890625, -5.960462772236497e-07, -0.0003070831298828125, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0006160736083984375, -0.0001621246337890625, -9.5367431640625e-06, -0.00017976760864257812, -0.0001533031463623047, -0.07198619842529297, -2.1219253540039062e-05, -0.00042724609375, -8.7738037109375e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -0.00042724609375, -0.0006856918334960938, 0.0, -0.00018131732940673828, -5.960462772236497e-07, -0.008662223815917969, -6.79492904964718e-06, -2.09808349609375e-05, -0.0018177032470703125, -0.001445770263671875, -0.0070362091064453125, -0.000202178955078125, -9.5367431640625e-06, -7.62939453125e-05, -0.0003719329833984375, -4.768370445162873e-07, -0.002017711056396365, -1.1920928244535389e-07, -0.0005817413330078125, -0.05415058135986328, -2.86102294921875e-05, -0.005615594331175089, -3.397406908334233e-05, -0.000152587890625, -0.0001010894775390625, -0.00010192394256591797, -9.536738616588991e-07], "choice_history": [55, 124, 221, 63, 103, "Healing", "Touch", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Healing", " ", "Touch", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "8", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score": -2.387439908942035, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 8}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HealingTouch", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.583032467868179e-06, -0.0002356490003876388, -0.00011944102152483538, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -7.760523294564337e-05, -2.7894868253497407e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00435638427734375, -1.9073486328125e-06, -1.7523756469017826e-05, -4.768370445162873e-07, -5.7220458984375e-06, -2.86102294921875e-05, -5.7220458984375e-06, -0.021589908748865128, -2.384185791015625e-06, -0.0005035400390625, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.2874520507466514e-05, -6.79492904964718e-06, -1.811981201171875e-05, -1.6689286894688848e-06, -0.0002994537353515625, -0.00038909912109375, -9.5367431640625e-05, -1.6689286894688848e-06, -7.832050323486328e-05, -0.00019620107195805758, -0.0001049041748046875, -1.9073486328125e-05, -7.62939453125e-06, -7.033323527139146e-06, -3.504691630951129e-05, -2.09808349609375e-05, -7.05718994140625e-05, -1.71661376953125e-05, -0.0001468658447265625, -5.030631655245088e-05, -4.053113570989808e-06, -2.2005910873413086, -7.152555099310121e-07, -3.814697265625e-06, -0.001468658447265625, -2.6702880859375e-05, -3.62396240234375e-05, -0.0003192424774169922, -1.9192511899746023e-05, -0.0010777711868286133, 0.0, -2.86102294921875e-05, -5.340576171875e-05, -2.09808349609375e-05, -0.0004851818084716797, -3.576278118089249e-07, -0.000347137451171875, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0006427764892578125, -0.0001220703125, -9.5367431640625e-06, -0.00019681453704833984, -0.0001665353775024414, -0.07001399993896484, -2.3126602172851562e-05, -0.00040435791015625, -8.96453857421875e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.57763671875e-05, -0.000392913818359375, -0.00060272216796875, 0.0, -0.00017559528350830078, -5.960462772236497e-07, -0.008385777473449707, -6.675719760096399e-06, -1.9073486328125e-05, -0.0017299652099609375, -0.0014400482177734375, -0.0069484710693359375, -0.0001983642578125, -7.62939453125e-06, -7.43865966796875e-05, -0.0003643035888671875, -4.768370445162873e-07, -0.0020060292445123196, -1.1920928244535389e-07, -0.0005664825439453125, -0.05327129364013672, -2.86102294921875e-05, -0.0056251161731779575, -3.40932747349143e-05, -0.0001506805419921875, -0.0001010894775390625, -0.00010192394256591797, -9.536738616588991e-07], "choice_history": [55, 124, 221, 63, 103, "Healing", "Touch", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Healing", " ", "Touch", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "8", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score": -2.975116972379901, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 8}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HealingTouch", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.583032467868179e-06, -0.0002356490003876388, -0.00011944102152483538, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -7.760523294564337e-05, -2.7894868253497407e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00435638427734375, -1.9073486328125e-06, -1.7523756469017826e-05, -4.768370445162873e-07, -5.7220458984375e-06, -2.86102294921875e-05, -5.7220458984375e-06, -0.021589908748865128, -2.384185791015625e-06, -0.0005035400390625, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.2874520507466514e-05, -6.79492904964718e-06, -1.811981201171875e-05, -1.6689286894688848e-06, -0.0002994537353515625, -0.00038909912109375, -9.5367431640625e-05, -1.6689286894688848e-06, -7.832050323486328e-05, -0.00019620107195805758, -0.0001049041748046875, -1.9073486328125e-05, -7.62939453125e-06, -7.033323527139146e-06, -3.504691630951129e-05, -2.09808349609375e-05, -7.05718994140625e-05, -1.71661376953125e-05, -0.0001468658447265625, -5.030631655245088e-05, -4.053113570989808e-06, -0.13866806030273438, -2.3841830625315197e-06, -1.9073486328125e-06, -0.0001621246337890625, -9.34600830078125e-05, -0.00014495849609375, -0.0003192424774169922, -3.504691630951129e-05, -0.0024701356887817383, 0.0, -3.0517578125e-05, -4.00543212890625e-05, -2.86102294921875e-05, -0.0008945465087890625, -5.960462772236497e-07, -0.0003070831298828125, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0006160736083984375, -0.0001621246337890625, -9.5367431640625e-06, -0.00017976760864257812, -0.0001533031463623047, -2.715850830078125, -3.4689903259277344e-05, -0.00243377685546875, -8.7738037109375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -3.0517578125e-05, -0.0006237030029296875, -0.0018224716186523438, 0.0, -0.00024628639221191406, -5.960462772236497e-07, -0.009019136428833008, -4.88758041683468e-06, -9.5367431640625e-06, -0.0018787384033203125, -0.0008754730224609375, -0.0065441131591796875, -0.0002079010009765625, -7.62939453125e-06, -7.82012939453125e-05, -0.0003261566162109375, -3.576278118089249e-07, -0.0017736940644681454, -1.1920928244535389e-07, -0.0005016326904296875, -0.05332374572753906, -2.6702880859375e-05, -0.005684779025614262, -3.45700973412022e-05, -0.000152587890625, -0.0001068115234375, -9.441375732421875e-05, -9.536738616588991e-07], "choice_history": [55, 124, 221, 63, 103, "Healing", "Touch", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Healing", " ", "Touch", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "8", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score": -4.68907577081881, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 8}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HealingTouch", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.583032467868179e-06, -0.0002356490003876388, -0.00011944102152483538, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -7.760523294564337e-05, -2.7894868253497407e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00435638427734375, -1.9073486328125e-06, -1.7523756469017826e-05, -4.768370445162873e-07, -5.7220458984375e-06, -2.86102294921875e-05, -5.7220458984375e-06, -0.021589908748865128, -2.384185791015625e-06, -0.0005035400390625, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.2874520507466514e-05, -6.79492904964718e-06, -1.811981201171875e-05, -1.6689286894688848e-06, -0.0002994537353515625, -0.00038909912109375, -9.5367431640625e-05, -1.6689286894688848e-06, -7.832050323486328e-05, -0.00019620107195805758, -0.0001049041748046875, -1.9073486328125e-05, -7.62939453125e-06, -7.033323527139146e-06, -3.504691630951129e-05, -2.09808349609375e-05, -7.05718994140625e-05, -1.71661376953125e-05, -0.0001468658447265625, -5.030631655245088e-05, -4.053113570989808e-06, -4.503183364868164, -2.861022494471399e-06, 0.0, -0.000263214111328125, -2.47955322265625e-05, -6.103515625e-05, -0.0002980232238769531, -1.8596476365928538e-05, -0.0009461641311645508, 0.0, -2.86102294921875e-05, -5.7220458984375e-05, -3.0517578125e-05, -0.0004106760025024414, -3.576278118089249e-07, -0.0002899169921875, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0005931854248046875, -0.0001049041748046875, -9.5367431640625e-06, -0.00020456314086914062, -0.0001647472381591797, -0.07011628150939941, -2.300739288330078e-05, -0.0004138946533203125, -8.7738037109375e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.38690185546875e-05, -0.00041961669921875, -0.0006494522094726562, 0.0, -0.00017845630645751953, -5.960462772236497e-07, -0.008444070816040039, -6.79492904964718e-06, -1.9073486328125e-05, -0.0017757415771484375, -0.001461029052734375, -0.0069255828857421875, -0.0002040863037109375, -7.62939453125e-06, -7.43865966796875e-05, -0.0003662109375, -4.768370445162873e-07, -0.0020020948722958565, -1.1920928244535389e-07, -0.0005702972412109375, -0.053542137145996094, -2.86102294921875e-05, -0.005617010872811079, -3.397406908334233e-05, -0.000152587890625, -0.000102996826171875, -0.00010192394256591797, -9.536738616588991e-07], "choice_history": [55, 124, 221, 63, 103, "Healing", "Touch", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Healing", " ", "Touch", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "8", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score": -5.060716379432328, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 8}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HealingTouch", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.583032467868179e-06, -0.0002356490003876388, -0.00011944102152483538, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -7.760523294564337e-05, -2.7894868253497407e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00435638427734375, -1.9073486328125e-06, -1.7523756469017826e-05, -4.768370445162873e-07, -5.7220458984375e-06, -2.86102294921875e-05, -5.7220458984375e-06, -0.021589908748865128, -2.384185791015625e-06, -0.0005035400390625, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.2874520507466514e-05, -6.79492904964718e-06, -1.811981201171875e-05, -1.6689286894688848e-06, -0.0002994537353515625, -0.00038909912109375, -9.5367431640625e-05, -1.6689286894688848e-06, -7.832050323486328e-05, -0.00019620107195805758, -0.0001049041748046875, -1.9073486328125e-05, -7.62939453125e-06, -7.033323527139146e-06, -3.504691630951129e-05, -2.09808349609375e-05, -7.05718994140625e-05, -1.71661376953125e-05, -0.0001468658447265625, -5.030631655245088e-05, -4.053113570989808e-06, -2.2005910873413086, -7.152555099310121e-07, -3.814697265625e-06, -0.001468658447265625, -2.6702880859375e-05, -3.62396240234375e-05, -0.0003192424774169922, -1.9192511899746023e-05, -0.0010777711868286133, 0.0, -2.86102294921875e-05, -5.340576171875e-05, -2.09808349609375e-05, -0.0004851818084716797, -3.576278118089249e-07, -0.000347137451171875, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0006427764892578125, -0.0001220703125, -9.5367431640625e-06, -0.00019681453704833984, -0.0001665353775024414, -2.741927146911621, -3.4689903259277344e-05, -0.0022640228271484375, -9.1552734375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -2.86102294921875e-05, -0.0006103515625, -0.0016117095947265625, 0.0, -0.00023865699768066406, -5.960462772236497e-07, -0.008797883987426758, -4.768371127283899e-06, -9.5367431640625e-06, -0.001811981201171875, -0.0008697509765625, -0.006443023681640625, -0.0002002716064453125, -7.62939453125e-06, -7.62939453125e-05, -0.0003204345703125, -3.576278118089249e-07, -0.0017682109028100967, -1.1920928244535389e-07, -0.0004863739013671875, -0.05236244201660156, -2.6702880859375e-05, -0.005700379144400358, -3.4689302992774174e-05, -0.0001506805419921875, -0.0001068115234375, -9.441375732421875e-05, -9.536738616588991e-07], "choice_history": [55, 124, 221, 63, 103, "Healing", "Touch", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Healing", " ", "Touch", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "8", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score": -5.096272780958131, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HealingTouch", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.583032467868179e-06, -0.0002356490003876388, -0.00011944102152483538, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -7.760523294564337e-05, -2.7894868253497407e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00435638427734375, -1.9073486328125e-06, -1.7523756469017826e-05, -4.768370445162873e-07, -5.7220458984375e-06, -2.86102294921875e-05, -5.7220458984375e-06, -0.021589908748865128, -2.384185791015625e-06, -0.0005035400390625, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.2874520507466514e-05, -6.79492904964718e-06, -1.811981201171875e-05, -1.6689286894688848e-06, -0.0002994537353515625, -0.00038909912109375, -9.5367431640625e-05, -1.6689286894688848e-06, -7.832050323486328e-05, -0.00019620107195805758, -0.0001049041748046875, -1.9073486328125e-05, -7.62939453125e-06, -7.033323527139146e-06, -3.504691630951129e-05, -2.09808349609375e-05, -7.05718994140625e-05, -1.71661376953125e-05, -0.0001468658447265625, -5.030631655245088e-05, -4.053113570989808e-06, -0.13866806030273438, -2.3841830625315197e-06, -1.9073486328125e-06, -0.0001621246337890625, -9.34600830078125e-05, -0.00014495849609375, -0.0003192424774169922, -3.504691630951129e-05, -0.0024701356887817383, 0.0, -3.0517578125e-05, -4.00543212890625e-05, -2.86102294921875e-05, -0.0008945465087890625, -5.960462772236497e-07, -0.0003070831298828125, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0006160736083984375, -0.0001621246337890625, -9.5367431640625e-06, -0.00017976760864257812, -0.0001533031463623047, -0.07198619842529297, -2.1219253540039062e-05, -0.00042724609375, -8.7738037109375e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -0.00042724609375, -0.0006856918334960938, 0.0, -0.00018131732940673828, -5.960462772236497e-07, -0.008662223815917969, -6.79492904964718e-06, -2.09808349609375e-05, -0.0018177032470703125, -0.001445770263671875, -0.0070362091064453125, -0.000202178955078125, -9.5367431640625e-06, -7.62939453125e-05, -0.0003719329833984375, -4.768370445162873e-07, -0.002017711056396365, -1.1920928244535389e-07, -0.0005817413330078125, -2.9531688690185547, -0.0012531280517578125, -1.9073486328125e-06, -7.43865966796875e-05, -0.08185577392578125, -6.67572021484375e-05, -0.0003643035888671875, -2.09808349609375e-05, -0.1582927703857422, -1.1563301086425781e-05, -0.2624330520629883, -1.1920928244535389e-07, -1.3662129640579224, -1.9073486328125e-06, -0.0024585723876953125, -0.0005474090576171875, -6.29425048828125e-05, -3.576278118089249e-07], "choice_history": [55, 124, 221, 63, 103, "Healing", "Touch", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Healing", " ", "Touch", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(game.other_player.\n            minions()), self)\n"}, {"score": -5.136191561285017, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HealingTouch", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.583032467868179e-06, -0.0002356490003876388, -0.00011944102152483538, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -7.760523294564337e-05, -2.7894868253497407e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00435638427734375, -1.9073486328125e-06, -1.7523756469017826e-05, -4.768370445162873e-07, -5.7220458984375e-06, -2.86102294921875e-05, -5.7220458984375e-06, -0.021589908748865128, -2.384185791015625e-06, -0.0005035400390625, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.2874520507466514e-05, -6.79492904964718e-06, -1.811981201171875e-05, -1.6689286894688848e-06, -0.0002994537353515625, -0.00038909912109375, -9.5367431640625e-05, -1.6689286894688848e-06, -7.832050323486328e-05, -0.00019620107195805758, -0.0001049041748046875, -1.9073486328125e-05, -7.62939453125e-06, -7.033323527139146e-06, -3.504691630951129e-05, -2.09808349609375e-05, -7.05718994140625e-05, -1.71661376953125e-05, -0.0001468658447265625, -5.030631655245088e-05, -4.053113570989808e-06, -0.13866806030273438, -2.3841830625315197e-06, -1.9073486328125e-06, -0.0001621246337890625, -9.34600830078125e-05, -0.00014495849609375, -0.0003192424774169922, -3.504691630951129e-05, -0.0024701356887817383, 0.0, -3.0517578125e-05, -4.00543212890625e-05, -2.86102294921875e-05, -0.0008945465087890625, -5.960462772236497e-07, -0.0003070831298828125, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0006160736083984375, -0.0001621246337890625, -9.5367431640625e-06, -0.00017976760864257812, -0.0001533031463623047, -0.07198619842529297, -2.1219253540039062e-05, -0.00042724609375, -8.7738037109375e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -0.00042724609375, -0.0006856918334960938, 0.0, -0.00018131732940673828, -5.960462772236497e-07, -0.008662223815917969, -6.79492904964718e-06, -2.09808349609375e-05, -0.0018177032470703125, -0.001445770263671875, -0.0070362091064453125, -0.000202178955078125, -9.5367431640625e-06, -7.62939453125e-05, -0.0003719329833984375, -4.768370445162873e-07, -0.002017711056396365, -1.1920928244535389e-07, -0.0005817413330078125, -2.9531688690185547, -0.0012531280517578125, -1.9073486328125e-06, -7.43865966796875e-05, -0.08185577392578125, -6.67572021484375e-05, -0.0003643035888671875, -2.09808349609375e-05, -0.1582927703857422, -1.1563301086425781e-05, -0.2624330520629883, -1.1920928244535389e-07, -1.4015523195266724, -1.1920928244535389e-07, -0.0076007843017578125, -7.62939453125e-06, -4.1961669921875e-05, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Healing", "Touch", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Healing", " ", "Touch", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "calculate_attack", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(game.other_player.\n            calculate_attack()), self)\n"}, {"score": -5.1363894165348185, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "Healing"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 8}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HealingTouch", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.583032467868179e-06, -0.0002356490003876388, -0.00011944102152483538, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -7.760523294564337e-05, -2.7894868253497407e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00435638427734375, -1.9073486328125e-06, -1.7523756469017826e-05, -4.768370445162873e-07, -5.7220458984375e-06, -2.86102294921875e-05, -5.7220458984375e-06, -4.793086528778076, -0.0033398866653442383, -0.029404640197753906, -4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0019016265869140625, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, -2.5510509658488445e-05, -1.4305104514278355e-06, -0.0007982254028320312, -1.4305104514278355e-06, -0.001628875732421875, -0.0002269744873046875, -0.0001201629638671875, -5.364403477869928e-06, -5.5670738220214844e-05, -0.0001495973119745031, -7.82012939453125e-05, -1.52587890625e-05, -7.62939453125e-06, -6.318072337307967e-06, -4.565611743601039e-05, -7.62939453125e-06, -4.9591064453125e-05, -1.71661376953125e-05, -0.0002460479736328125, -4.947185516357422e-05, -3.4570680327306036e-06, -0.140161395072937, -2.3841830625315197e-06, -1.9073486328125e-06, -0.00020599365234375, -9.72747802734375e-05, -0.00019073486328125, -0.0003389120101928711, -3.7431014789035544e-05, -0.0030100345611572266, 0.0, -3.0517578125e-05, -3.62396240234375e-05, -3.24249267578125e-05, -0.00095367431640625, -5.960462772236497e-07, -0.0003070831298828125, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.00055694580078125, -0.000164031982421875, -9.5367431640625e-06, -0.00018358230590820312, -0.0001533031463623047, -0.06913352012634277, -2.1219253540039062e-05, -0.00040435791015625, -8.58306884765625e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -0.0003643035888671875, -0.0006084442138671875, 0.0, -0.00018227100372314453, -5.960462772236497e-07, -0.008627891540527344, -6.675719760096399e-06, -2.09808349609375e-05, -0.001811981201171875, -0.001434326171875, -0.0070953369140625, -0.0002040863037109375, -7.62939453125e-06, -7.62939453125e-05, -0.0003719329833984375, -4.768370445162873e-07, -0.002019737381488085, -1.1920928244535389e-07, -0.0005817413330078125, -0.054375648498535156, -2.86102294921875e-05, -0.005622621160000563, -3.397406908334233e-05, -0.000152587890625, -0.000102996826171875, -0.00010192394256591797, -9.536738616588991e-07], "choice_history": [55, 124, 221, 63, 103, "Healing", "Touch", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "Healing", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Healing", " ", "Touch", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "8", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(Healing):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score": -5.1419620953441765, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "#"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 8}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HealingTouch", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.583032467868179e-06, -0.0002356490003876388, -0.00011944102152483538, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -7.760523294564337e-05, -2.7894868253497407e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00435638427734375, -1.9073486328125e-06, -1.7523756469017826e-05, -4.768370445162873e-07, -5.7220458984375e-06, -2.86102294921875e-05, -5.7220458984375e-06, -4.773016929626465, -7.486343383789062e-05, -0.04755878448486328, -0.0001049041748046875, -1.9073486328125e-06, 0.0, -0.0013790130615234375, 0.0, 0.0, -1.1444091796875e-05, 0.0, -1.5258672647178173e-05, -8.344646857949556e-07, -0.009480476379394531, -1.0728830375228426e-06, -0.0027179718017578125, -0.00028228759765625, -0.0001983642578125, -6.198863957251888e-06, -5.1856040954589844e-05, -0.00015400740085169673, -5.340576171875e-05, -1.52587890625e-05, -7.62939453125e-06, -6.079655122448457e-06, -4.732496745418757e-05, -7.62939453125e-06, -4.76837158203125e-05, -1.71661376953125e-05, -0.000263214111328125, -4.5895572839071974e-05, -3.3378591979271732e-06, -0.140680193901062, -2.145764938177308e-06, -1.9073486328125e-06, -0.00025177001953125, -9.918212890625e-05, -0.0002117156982421875, -0.00035071372985839844, -3.9219088648678735e-05, -0.003195047378540039, 0.0, -2.6702880859375e-05, -3.4332275390625e-05, -3.0517578125e-05, -0.0009404420852661133, -5.960462772236497e-07, -0.00029754638671875, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0005435943603515625, -0.000164031982421875, -9.5367431640625e-06, -0.00018548965454101562, -0.0001513957977294922, -0.06953620910644531, -2.1219253540039062e-05, -0.0004062652587890625, -8.58306884765625e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -0.0003452301025390625, -0.0005931854248046875, 0.0, -0.00018417835235595703, -5.960462772236497e-07, -0.008666038513183594, -6.675719760096399e-06, -2.09808349609375e-05, -0.001827239990234375, -0.0014362335205078125, -0.0071620941162109375, -0.0002079010009765625, -7.62939453125e-06, -7.62939453125e-05, -0.0003719329833984375, -4.768370445162873e-07, -0.002024624962359667, -1.1920928244535389e-07, -0.0005855560302734375, -0.054470062255859375, -2.86102294921875e-05, -0.005622266326099634, -3.397406908334233e-05, -0.000152587890625, -0.000102996826171875, -0.00010192394256591797, -9.536738616588991e-07], "choice_history": [55, 124, 221, 63, 103, "Healing", "Touch", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "#", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Healing", " ", "Touch", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "8", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(#):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score": -5.5737694742787625, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 8}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HealingTouch", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.583032467868179e-06, -0.0002356490003876388, -0.00011944102152483538, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -7.760523294564337e-05, -2.7894868253497407e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00435638427734375, -1.9073486328125e-06, -1.7523756469017826e-05, -4.768370445162873e-07, -5.7220458984375e-06, -2.86102294921875e-05, -5.7220458984375e-06, -0.021589908748865128, -2.384185791015625e-06, -0.0005035400390625, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.2874520507466514e-05, -6.79492904964718e-06, -1.811981201171875e-05, -1.6689286894688848e-06, -0.0002994537353515625, -0.00038909912109375, -9.5367431640625e-05, -1.6689286894688848e-06, -7.832050323486328e-05, -0.00019620107195805758, -0.0001049041748046875, -1.9073486328125e-05, -7.62939453125e-06, -7.033323527139146e-06, -3.504691630951129e-05, -2.09808349609375e-05, -7.05718994140625e-05, -1.71661376953125e-05, -0.0001468658447265625, -5.030631655245088e-05, -4.053113570989808e-06, -5.374845504760742, -1.1920928244535389e-07, 0.0, -0.0006160736083984375, -2.47955322265625e-05, -0.0001049041748046875, -0.0002598762512207031, -1.4543427823809907e-05, -0.007579922676086426, 0.0, -3.4332275390625e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.0008699893951416016, -5.960462772236497e-07, -0.00029754638671875, -3.814697265625e-06, -2.288818359375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0005970001220703125, -0.0001583099365234375, -1.1444091796875e-05, -0.00019109249114990234, -0.0001569986343383789, -0.07709193229675293, -2.1219253540039062e-05, -0.00038909912109375, -8.96453857421875e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.57763671875e-05, -0.0002574920654296875, -0.000484466552734375, 0.0, -0.00017464160919189453, -5.960462772236497e-07, -0.008241653442382812, -6.675719760096399e-06, -2.09808349609375e-05, -0.00164794921875, -0.001407623291015625, -0.00688934326171875, -0.0001926422119140625, -7.62939453125e-06, -7.2479248046875e-05, -0.00035858154296875, -3.576278118089249e-07, -0.00200293050147593, -1.1920928244535389e-07, -0.0005474090576171875, -0.052886962890625, -2.86102294921875e-05, -0.005673595704138279, -3.373566141817719e-05, -0.0001506805419921875, -0.000102996826171875, -0.00010383129119873047, -9.536738616588991e-07], "choice_history": [55, 124, 221, 63, 103, "Healing", "Touch", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Healing", " ", "Touch", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "8", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"score": -5.87707789188817, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}}}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HealingTouch", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.583032467868179e-06, -0.0002356490003876388, -0.00011944102152483538, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -7.760523294564337e-05, -2.7894868253497407e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00435638427734375, -1.9073486328125e-06, -1.7523756469017826e-05, -4.768370445162873e-07, -5.7220458984375e-06, -2.86102294921875e-05, -5.7220458984375e-06, -0.021589908748865128, -2.384185791015625e-06, -0.0005035400390625, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.2874520507466514e-05, -6.79492904964718e-06, -1.811981201171875e-05, -1.6689286894688848e-06, -0.0002994537353515625, -0.00038909912109375, -9.5367431640625e-05, -1.6689286894688848e-06, -7.832050323486328e-05, -0.00019620107195805758, -0.0001049041748046875, -1.9073486328125e-05, -7.62939453125e-06, -7.033323527139146e-06, -3.504691630951129e-05, -2.09808349609375e-05, -7.05718994140625e-05, -1.71661376953125e-05, -0.0001468658447265625, -5.030631655245088e-05, -4.053113570989808e-06, -0.13866806030273438, -2.3841830625315197e-06, -1.9073486328125e-06, -0.0001621246337890625, -9.34600830078125e-05, -0.00014495849609375, -0.0003192424774169922, -3.504691630951129e-05, -0.0024701356887817383, 0.0, -3.0517578125e-05, -4.00543212890625e-05, -2.86102294921875e-05, -0.0008945465087890625, -5.960462772236497e-07, -0.0003070831298828125, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0006160736083984375, -0.0001621246337890625, -9.5367431640625e-06, -0.00017976760864257812, -0.0001533031463623047, -0.07198619842529297, -2.1219253540039062e-05, -0.00042724609375, -8.7738037109375e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -0.00042724609375, -0.0006856918334960938, 0.0, -0.00018131732940673828, -5.960462772236497e-07, -0.008662223815917969, -6.79492904964718e-06, -2.09808349609375e-05, -0.0018177032470703125, -0.001445770263671875, -0.0070362091064453125, -0.000202178955078125, -9.5367431640625e-06, -7.62939453125e-05, -0.0003719329833984375, -4.768370445162873e-07, -0.002017711056396365, -1.1920928244535389e-07, -0.0005817413330078125, -2.9531688690185547, -0.0012531280517578125, -1.9073486328125e-06, -7.43865966796875e-05, -2.543990135192871, 0.0, -0.08064556121826172, -5.245207830739673e-06, -0.02131783962249756, -2.861022494471399e-06, -0.0045375823974609375, -0.0005435943603515625, -0.0020914077758789062, -3.576278118089249e-07], "choice_history": [55, 124, 221, 63, 103, "Healing", "Touch", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Healing", " ", "Touch", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(target.\n            calculate_max_health()), self)\n"}, {"score": -6.033348872718612, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "players", "value": {"id": "game", "_type": "Name"}}}}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HealingTouch", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.583032467868179e-06, -0.0002356490003876388, -0.00011944102152483538, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -7.760523294564337e-05, -2.7894868253497407e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00435638427734375, -1.9073486328125e-06, -1.7523756469017826e-05, -4.768370445162873e-07, -5.7220458984375e-06, -2.86102294921875e-05, -5.7220458984375e-06, -0.021589908748865128, -2.384185791015625e-06, -0.0005035400390625, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.2874520507466514e-05, -6.79492904964718e-06, -1.811981201171875e-05, -1.6689286894688848e-06, -0.0002994537353515625, -0.00038909912109375, -9.5367431640625e-05, -1.6689286894688848e-06, -7.832050323486328e-05, -0.00019620107195805758, -0.0001049041748046875, -1.9073486328125e-05, -7.62939453125e-06, -7.033323527139146e-06, -3.504691630951129e-05, -2.09808349609375e-05, -7.05718994140625e-05, -1.71661376953125e-05, -0.0001468658447265625, -5.030631655245088e-05, -4.053113570989808e-06, -0.13866806030273438, -2.3841830625315197e-06, -1.9073486328125e-06, -0.0001621246337890625, -9.34600830078125e-05, -0.00014495849609375, -0.0003192424774169922, -3.504691630951129e-05, -0.0024701356887817383, 0.0, -3.0517578125e-05, -4.00543212890625e-05, -2.86102294921875e-05, -0.0008945465087890625, -5.960462772236497e-07, -0.0003070831298828125, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0006160736083984375, -0.0001621246337890625, -9.5367431640625e-06, -0.00017976760864257812, -0.0001533031463623047, -0.07198619842529297, -2.1219253540039062e-05, -0.00042724609375, -8.7738037109375e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -0.00042724609375, -0.0006856918334960938, 0.0, -0.00018131732940673828, -5.960462772236497e-07, -0.008662223815917969, -6.79492904964718e-06, -2.09808349609375e-05, -0.0018177032470703125, -0.001445770263671875, -0.0070362091064453125, -0.000202178955078125, -9.5367431640625e-06, -7.62939453125e-05, -0.0003719329833984375, -4.768370445162873e-07, -0.002017711056396365, -1.1920928244535389e-07, -0.0005817413330078125, -2.9531688690185547, -0.0012531280517578125, -1.9073486328125e-06, -7.43865966796875e-05, -0.08185577392578125, -6.67572021484375e-05, -0.0003643035888671875, -2.09808349609375e-05, -0.1582927703857422, -1.1563301086425781e-05, -1.5781049728393555, -3.4570634852570947e-06, -0.9879515171051025, -5.7220458984375e-06, -0.0022220611572265625, -0.0004405975341796875, -6.4849853515625e-05, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "Healing", "Touch", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Healing", " ", "Touch", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "players", "<EOS>", "minions", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(game.players.minions()\n            ), self)\n"}, {"score": -6.462485029760039, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 3}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HealingTouch", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.583032467868179e-06, -0.0002356490003876388, -0.00011944102152483538, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -7.760523294564337e-05, -2.7894868253497407e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00435638427734375, -1.9073486328125e-06, -1.7523756469017826e-05, -4.768370445162873e-07, -5.7220458984375e-06, -2.86102294921875e-05, -5.7220458984375e-06, -0.021589908748865128, -2.384185791015625e-06, -0.0005035400390625, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.2874520507466514e-05, -6.79492904964718e-06, -1.811981201171875e-05, -1.6689286894688848e-06, -0.0002994537353515625, -0.00038909912109375, -9.5367431640625e-05, -1.6689286894688848e-06, -7.832050323486328e-05, -0.00019620107195805758, -0.0001049041748046875, -1.9073486328125e-05, -7.62939453125e-06, -7.033323527139146e-06, -3.504691630951129e-05, -2.09808349609375e-05, -7.05718994140625e-05, -1.71661376953125e-05, -0.0001468658447265625, -5.030631655245088e-05, -4.053113570989808e-06, -0.13866806030273438, -2.3841830625315197e-06, -1.9073486328125e-06, -0.0001621246337890625, -9.34600830078125e-05, -0.00014495849609375, -0.0003192424774169922, -3.504691630951129e-05, -0.0024701356887817383, 0.0, -3.0517578125e-05, -4.00543212890625e-05, -2.86102294921875e-05, -0.0008945465087890625, -5.960462772236497e-07, -0.0003070831298828125, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0006160736083984375, -0.0001621246337890625, -9.5367431640625e-06, -0.00017976760864257812, -0.0001533031463623047, -0.07198619842529297, -2.1219253540039062e-05, -0.00042724609375, -8.7738037109375e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -0.00042724609375, -0.0006856918334960938, 0.0, -0.00018131732940673828, -5.960462772236497e-07, -0.008662223815917969, -6.79492904964718e-06, -2.09808349609375e-05, -0.0018177032470703125, -0.001445770263671875, -0.0070362091064453125, -0.000202178955078125, -9.5367431640625e-06, -7.62939453125e-05, -0.0003719329833984375, -4.768370445162873e-07, -0.002017711056396365, -1.1920928244535389e-07, -0.0005817413330078125, -0.05415058135986328, -2.86102294921875e-05, -6.1385111808776855, -7.152555099310121e-07, -7.2479248046875e-05, -8.96453857421875e-05, -0.0001863241195678711, -4.768370445162873e-07], "choice_history": [55, 124, 221, 63, 103, "Healing", "Touch", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Healing", " ", "Touch", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(3), self)\n"}, {"score": -7.800638413686414, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "Healing Touch", "hole1": 3}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 8}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HealingTouch", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.583032467868179e-06, -0.0002356490003876388, -0.00011944102152483538, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -7.760523294564337e-05, -2.7894868253497407e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.508829116821289, -0.0008831024169921875, -0.0012724861735478044, -5.14984130859375e-05, -2.1457663024193607e-05, 0.0, -9.29828001972055e-06, -5.006777428206988e-06, -0.17406237125396729, -3.373566141817719e-05, -0.4252958297729492, -0.0025348663330078125, -5.7220458984375e-06, -1.1444091796875e-05, -0.010894775390625, -3.814697265625e-06, -2.09808349609375e-05, -0.0002956390380859375, -0.018619537353515625, -4.5299530029296875e-06, -0.03147362545132637, -2.3841855067985307e-07, -0.9509884715080261, -2.3841855067985307e-07, -0.5348820686340332, -6.914137884450611e-06, -1.52587890625e-05, -0.011602401733398438, -0.010315895080566406, -0.0021572113037109375, -0.000457763671875, -0.000152587890625, -6.866455078125e-05, -0.000274658203125, -1.5497195136049413e-06, -0.002804812043905258, -2.3841855067985307e-07, -0.0014057159423828125, -0.10395431518554688, -5.53131103515625e-05, -0.006182413082569838, -3.361645576660521e-05, -0.00019073486328125, -5.340576171875e-05, -0.00012087821960449219, -5.960462772236497e-07], "choice_history": [55, 124, 221, 63, 103, "Healing", "Touch", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Healing", " ", "Touch", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "8", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.heal(player.effective_heal_power(8), self)\n"}, {"score": -23.578275680541992, "model_output": {"_type": "Module", "body": []}, "score_history": [-7.62939453125e-06, -3.814697265625e-06, -23.578264236450195], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 47}
{"beams": [{"score": -1.4156622842301374, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}}, {"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"id": "minion", "_type": "Name"}}], "value": {"id": "frog", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "minion", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Hex", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.6927575416048057e-05, -0.000526554649695754, -1.9073486328125e-06, -7.62939453125e-05, -3.0517578125e-05, -0.0003989934630226344, -1.358979079668643e-05, -1.9073486328125e-06, -0.0009613037109375, -0.008932113647460938, -1.9073486328125e-06, -0.0001958416833076626, -1.0728830375228426e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.7192741729086265e-05, -2.2649765014648438e-06, -0.000659942626953125, -5.14984130859375e-05, -4.00543212890625e-05, 0.0, -0.0006198883056640625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.2186049793381244e-05, -1.9073486328125e-06, -3.4451481042196974e-05, 0.0, -0.0011692047119140625, -2.288818359375e-05, -3.4332275390625e-05, -2.3841855067985307e-07, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -5.0662616558838636e-05, -2.9802276912960224e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -1.8835065930034034e-05, -0.0009655952453613281, -0.0323634147644043, -3.254413604736328e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00012028217315673828, -2.2053514840081334e-05, -0.023433923721313477, -5.841255187988281e-06, -0.011667251586914062, -2.47955322265625e-05, 0.0, -0.0009312629699707031, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -6.29425048828125e-05, -0.0001277923583984375, -4.839897155761719e-05, -2.288818359375e-05, -0.08094942569732666, -0.00046038624714128673, -0.03805828094482422, -2.09808349609375e-05, -0.0001074075698852539, -3.576278118089249e-07, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -5.602834789897315e-06, -8.344646857949556e-07, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -2.47955322265625e-05, -4.291534423828125e-06, -0.0003444568137638271, -0.10055732727050781, -0.000141143798828125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.4066675248614047e-05, 0.0, -6.330013275146484e-05, 0.0, -1.9073486328125e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -2.6702880859375e-05, 0.0, -2.861022494471399e-06, -0.00025865263887681067, -0.003509521484375, -1.1444091796875e-05, -2.86102294921875e-05, -0.022815704345703125, 0.0, -0.101418137550354, -0.0010166737483814359, -0.0010862350463867188, -0.005218505859375, -0.0020771026611328125, -1.9073486328125e-06, -0.0002346038818359375, -2.288818359375e-05, -0.0065631866455078125, -5.7220458984375e-06, -0.08213424682617188, -7.62939453125e-06, -0.021538734436035156, -1.9073486328125e-06, -0.000396728515625, -0.0005214214324951172, -0.016162633895874023, -0.0001850128173828125, -0.021602626889944077, -0.00014507534797303379, -0.04915967583656311, -0.004974781069904566, -0.01859845593571663, -0.00045323200174607337, -0.07334423065185547, -9.72747802734375e-05, -7.62939453125e-06, -0.00716400146484375, 0.0, -0.04483664035797119, -7.90343910921365e-05, -0.011838912963867188, -0.0014638900756835938, -5.7220458984375e-06, 0.0, -0.0075168609619140625, 0.0, -0.17562007904052734, -0.0002652140101417899, -0.03202378749847412, 0.0, -0.0011386871337890625, -0.011359214782714844, -0.0002956390380859375, -0.0001426914386684075, -6.079673767089844e-06, -0.10488700866699219, -5.91278076171875e-05, -5.340576171875e-05, -0.0001468658447265625, -1.52587890625e-05, -0.00305938720703125, 0.0, -0.011250495910644531, -0.000676369818393141, -0.008958697319030762, -2.1457672119140625e-06, -0.0035295486450195312, -3.814697265625e-06, -0.1768341064453125, -0.0001727342460071668, -0.0021610260009765625, -5.7220458984375e-06, -6.67572021484375e-05, -0.00063323974609375, 0.0, -1.9073486328125e-06, -0.0013141632080078125, 0.0, -0.0001163482666015625, 0.0, -0.00028264522552490234, -2.95634672511369e-05, -0.00023794034495949745, -7.271765298355604e-06, -0.00945580005645752, -2.2649765014648438e-06, -0.000949859619140625, -0.0049152374267578125, 0.0, -0.05339241027832031, -5.5312928452622145e-05], "choice_history": [55, 124, 221, 63, 103, "Hex", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hex", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "frog", "<EOS>", 14, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "frog", "<EOS>", "create_minion", "<EOS>", 208, 38, 127, "Null", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", 19, 125, "frog", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -4.2339123895905, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}}, {"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"id": "minion", "_type": "Name"}}], "value": {"id": "frog", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "minion", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Hex", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.6927575416048057e-05, -0.000526554649695754, -1.9073486328125e-06, -7.62939453125e-05, -3.0517578125e-05, -0.0003989934630226344, -1.358979079668643e-05, -1.9073486328125e-06, -0.0009613037109375, -0.008932113647460938, -1.9073486328125e-06, -0.0001958416833076626, -1.0728830375228426e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.7192741729086265e-05, -2.2649765014648438e-06, -0.000659942626953125, -5.14984130859375e-05, -4.00543212890625e-05, 0.0, -0.0006198883056640625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.2186049793381244e-05, -1.9073486328125e-06, -3.4451481042196974e-05, 0.0, -0.0011692047119140625, -2.288818359375e-05, -3.4332275390625e-05, -2.3841855067985307e-07, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -5.0662616558838636e-05, -2.9802276912960224e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -1.8835065930034034e-05, -0.0009655952453613281, -0.0323634147644043, -3.254413604736328e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00012028217315673828, -2.2053514840081334e-05, -0.023433923721313477, -5.841255187988281e-06, -0.011667251586914062, -2.47955322265625e-05, 0.0, -0.0009312629699707031, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -6.29425048828125e-05, -0.0001277923583984375, -4.839897155761719e-05, -2.288818359375e-05, -2.760468006134033, -0.13878905773162842, -0.031209945678710938, -2.09808349609375e-05, -5.7697296142578125e-05, -2.3841855067985307e-07, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -3.8146954466355965e-06, -8.344646857949556e-07, 0.0, -5.7220458984375e-06, -1.4305104514278355e-06, -2.288818359375e-05, -4.291534423828125e-06, -0.0003921231545973569, -0.092498779296875, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.2040118235745467e-05, 0.0, -6.139278411865234e-05, 0.0, -1.9073486328125e-05, -5.91278076171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.960462772236497e-07, -2.6702880859375e-05, 0.0, -2.861022494471399e-06, -0.00025674578500911593, -0.00394439697265625, -9.5367431640625e-06, -2.86102294921875e-05, -0.022863388061523438, 0.0, -0.10083317756652832, -0.0010246597230434418, -0.0010900497436523438, -0.0051670074462890625, -0.0020999908447265625, -1.9073486328125e-06, -0.000232696533203125, -2.288818359375e-05, -0.00653076171875, -5.7220458984375e-06, -0.08220672607421875, -7.62939453125e-06, -0.02153778076171875, -1.9073486328125e-06, -0.0003986358642578125, -0.0005195140838623047, -0.016138792037963867, -0.000186920166015625, -0.021550271660089493, -0.0001453137374483049, -0.04931138455867767, -0.004971561953425407, -0.018594056367874146, -0.00045323200174607337, -0.08377647399902344, -0.0001049041748046875, -7.62939453125e-06, -0.0074901580810546875, 0.0, -0.04400181770324707, -7.891518180258572e-05, -0.011885643005371094, -0.001468658447265625, -5.7220458984375e-06, 0.0, -0.0074253082275390625, 0.0, -0.1754312515258789, -0.0002643797197379172, -0.03200185298919678, 0.0, -0.001132965087890625, -0.011335372924804688, -0.0002956390380859375, -0.00014281063340604305, -6.079673767089844e-06, -0.11165618896484375, -6.29425048828125e-05, -5.340576171875e-05, -0.00014495849609375, -1.52587890625e-05, -0.0030059814453125, 0.0, -0.011244654655456543, -0.0006726745050400496, -0.008935809135437012, -2.1457672119140625e-06, -0.003536224365234375, -3.814697265625e-06, -0.17677021026611328, -0.0001727342460071668, -0.0020122528076171875, -5.7220458984375e-06, -6.866455078125e-05, -0.0006198883056640625, 0.0, -1.9073486328125e-06, -0.0012149810791015625, 0.0, -0.0001163482666015625, 0.0, -0.00028264522552490234, -2.9801878554280847e-05, -0.00023567538300994784, -7.271765298355604e-06, -0.009458184242248535, -2.2649765014648438e-06, -0.0009708404541015625, -0.0050830841064453125, 0.0, -0.05253887176513672, -5.5193719163071364e-05], "choice_history": [55, 124, 221, 63, 103, "Hex", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hex", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "frog", "<EOS>", 14, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "frog", "<EOS>", "create_minion", "<EOS>", 208, 38, 127, "Null", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", 19, 125, "frog", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -4.403016498524693, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"id": "minion", "_type": "Name"}}], "value": {"id": "frog", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "minion", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Hex", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.6927575416048057e-05, -0.000526554649695754, -1.9073486328125e-06, -7.62939453125e-05, -3.0517578125e-05, -0.0003989934630226344, -1.358979079668643e-05, -1.9073486328125e-06, -0.0009613037109375, -0.008932113647460938, -1.9073486328125e-06, -0.0001958416833076626, -1.0728830375228426e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.7192741729086265e-05, -2.2649765014648438e-06, -0.000659942626953125, -5.14984130859375e-05, -4.00543212890625e-05, 0.0, -0.0006198883056640625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.2186049793381244e-05, -1.9073486328125e-06, -3.4451481042196974e-05, 0.0, -0.0011692047119140625, -2.288818359375e-05, -3.4332275390625e-05, -2.3841855067985307e-07, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -5.0662616558838636e-05, -2.9802276912960224e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -1.8835065930034034e-05, -0.0009655952453613281, -0.0323634147644043, -3.254413604736328e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00012028217315673828, -2.2053514840081334e-05, -0.023433923721313477, -5.841255187988281e-06, -0.011667251586914062, -2.47955322265625e-05, 0.0, -0.0009312629699707031, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -6.29425048828125e-05, -0.0001277923583984375, -4.839897155761719e-05, -2.288818359375e-05, -0.08094942569732666, -0.00046038624714128673, -0.03805828094482422, -2.09808349609375e-05, -0.0001074075698852539, -3.576278118089249e-07, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -5.602834789897315e-06, -8.344646857949556e-07, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -2.47955322265625e-05, -4.291534423828125e-06, -0.0003444568137638271, -0.10055732727050781, -0.000141143798828125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.4066675248614047e-05, 0.0, -6.330013275146484e-05, 0.0, -1.9073486328125e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -2.6702880859375e-05, 0.0, -2.861022494471399e-06, -0.00025865263887681067, -0.003509521484375, -1.1444091796875e-05, -2.86102294921875e-05, -0.022815704345703125, 0.0, -0.101418137550354, -0.0010166737483814359, -0.0010862350463867188, -0.005218505859375, -0.0020771026611328125, -1.9073486328125e-06, -0.0002346038818359375, -2.288818359375e-05, -0.0065631866455078125, -5.7220458984375e-06, -2.5542678833007812, 0.0, -0.0010013580322265625, -8.58306884765625e-05, -0.0472639799118042, -2.288818359375e-05, -0.16841095685958862, -0.00010383028711657971, -0.3746802806854248, -0.012463808059692383, -0.057631492614746094, -1.1444091796875e-05, -1.33514404296875e-05, -0.06481361389160156, 0.0, -0.02206539548933506, -0.00011133906809845939, -0.011267662048339844, -0.0019893646240234375, -3.814697265625e-06, 0.0, -0.017496109008789062, 0.0, -0.1979457139968872, -0.0003773712960537523, -0.04205930233001709, 0.0, -0.00104522705078125, -0.013709068298339844, -0.0002899169921875, -0.00013732767547480762, -5.9604644775390625e-06, -0.0848846435546875, -5.53131103515625e-05, -5.14984130859375e-05, -0.0001678466796875, -1.52587890625e-05, -0.003032684326171875, 0.0, -0.011762022972106934, -0.0006618269253522158, -0.009338855743408203, -2.1457672119140625e-06, -0.0034923553466796875, -3.814697265625e-06, -0.17502498626708984, -0.00017070768808480352, -0.0021686553955078125, -5.7220458984375e-06, -6.4849853515625e-05, -0.000682830810546875, 0.0, -1.9073486328125e-06, -0.0014705657958984375, 0.0, -0.0001239776611328125, 0.0, -0.00029408931732177734, -2.884823152271565e-05, -0.0002483114949427545, -7.152556463552173e-06, -0.0095367431640625, -2.2649765014648438e-06, -0.000888824462890625, -0.004421234130859375, 0.0, -0.05578041076660156, -5.3763200412504375e-05], "choice_history": [55, 124, 221, 63, 103, "Hex", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hex", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "frog", "<EOS>", 14, 99, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "frog", "<EOS>", "create_minion", "<EOS>", 208, 38, 127, "Null", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", 19, 125, "frog", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -4.649929197957562, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"id": "minion", "_type": "Name"}}], "value": {"id": "frog", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "minion", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Hex", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.6927575416048057e-05, -0.000526554649695754, -1.9073486328125e-06, -7.62939453125e-05, -3.0517578125e-05, -0.0003989934630226344, -1.358979079668643e-05, -1.9073486328125e-06, -0.0009613037109375, -0.008932113647460938, -1.9073486328125e-06, -0.0001958416833076626, -1.0728830375228426e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.7192741729086265e-05, -2.2649765014648438e-06, -0.000659942626953125, -5.14984130859375e-05, -4.00543212890625e-05, 0.0, -0.0006198883056640625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.2186049793381244e-05, -1.9073486328125e-06, -3.4451481042196974e-05, 0.0, -0.0011692047119140625, -2.288818359375e-05, -3.4332275390625e-05, -2.3841855067985307e-07, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -5.0662616558838636e-05, -2.9802276912960224e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -1.8835065930034034e-05, -0.0009655952453613281, -0.0323634147644043, -3.254413604736328e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00012028217315673828, -2.2053514840081334e-05, -0.023433923721313477, -5.841255187988281e-06, -0.011667251586914062, -2.47955322265625e-05, 0.0, -0.0009312629699707031, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -6.29425048828125e-05, -0.0001277923583984375, -4.839897155761719e-05, -2.288818359375e-05, -0.08094942569732666, -0.00046038624714128673, -0.03805828094482422, -2.09808349609375e-05, -0.0001074075698852539, -3.576278118089249e-07, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -5.602834789897315e-06, -8.344646857949556e-07, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -2.47955322265625e-05, -4.291534423828125e-06, -0.0003444568137638271, -0.10055732727050781, -0.000141143798828125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.4066675248614047e-05, 0.0, -6.330013275146484e-05, 0.0, -1.9073486328125e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -2.6702880859375e-05, 0.0, -2.861022494471399e-06, -0.00025865263887681067, -0.003509521484375, -1.1444091796875e-05, -2.86102294921875e-05, -0.022815704345703125, 0.0, -0.101418137550354, -0.0010166737483814359, -0.0010862350463867188, -0.005218505859375, -0.0020771026611328125, -1.9073486328125e-06, -0.0002346038818359375, -2.288818359375e-05, -0.0065631866455078125, -5.7220458984375e-06, -0.08213424682617188, -7.62939453125e-06, -0.021538734436035156, -1.9073486328125e-06, -0.000396728515625, -0.0005214214324951172, -0.016162633895874023, -0.0001850128173828125, -0.021602626889944077, -0.00014507534797303379, -0.04915967583656311, -0.004974781069904566, -0.01859845593571663, -0.00045323200174607337, -2.664379119873047, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0023021697998046875, 0.0, -0.000186920166015625, 0.0, -0.0071184635162353516, -2.622600959512056e-06, -0.000223159629967995, -2.622604142743512e-06, -0.1032552570104599, -5.9604562920867465e-06, -0.0001926422119140625, -0.05843353271484375, -1.9073486328125e-06, -0.01714015007019043, -9.644021338317543e-05, -0.6916437149047852, -1.1444091796875e-05, -4.76837158203125e-05, -4.76837158203125e-05, -1.9073486328125e-06, -0.012389183044433594, 0.0, -0.12475836277008057, -0.00027024676091969013, -0.0061435699462890625, -2.0265579223632812e-06, -0.0028476715087890625, -3.814697265625e-06, -0.17879438400268555, -4.363057087175548e-05, -0.0031261444091796875, -3.814697265625e-06, -8.0108642578125e-05, -0.0080108642578125, 0.0, -1.9073486328125e-06, -0.0013294219970703125, 0.0, -0.0001010894775390625, 0.0, -0.00015676021575927734, -4.088794958079234e-05, -0.0002826429554261267, -7.510183422709815e-06, -0.009148597717285156, -2.384185791015625e-06, -0.00042724609375, -0.009247779846191406, 0.0, -0.08237433433532715, -4.5895310904597864e-05], "choice_history": [55, 124, 221, 63, 103, "Hex", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hex", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "frog", "<EOS>", 14, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", 19, 125, "frog", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        self.target.<UNK>(minion)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -4.782707038523739, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}}, {"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"id": "minion", "_type": "Name"}}], "value": {"id": "frog", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "minion", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Hex", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.6927575416048057e-05, -0.000526554649695754, -1.9073486328125e-06, -7.62939453125e-05, -3.0517578125e-05, -0.0003989934630226344, -1.358979079668643e-05, -1.9073486328125e-06, -0.0009613037109375, -0.008932113647460938, -1.9073486328125e-06, -0.0001958416833076626, -1.0728830375228426e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.7192741729086265e-05, -2.2649765014648438e-06, -0.000659942626953125, -5.14984130859375e-05, -4.00543212890625e-05, 0.0, -0.0006198883056640625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.2186049793381244e-05, -1.9073486328125e-06, -3.4451481042196974e-05, 0.0, -0.0011692047119140625, -2.288818359375e-05, -3.4332275390625e-05, -2.3841855067985307e-07, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -5.0662616558838636e-05, -2.9802276912960224e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -1.8835065930034034e-05, -0.0009655952453613281, -0.0323634147644043, -3.254413604736328e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00012028217315673828, -2.2053514840081334e-05, -0.023433923721313477, -5.841255187988281e-06, -0.011667251586914062, -2.47955322265625e-05, 0.0, -0.0009312629699707031, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -6.29425048828125e-05, -0.0001277923583984375, -4.839897155761719e-05, -2.288818359375e-05, -0.08094942569732666, -0.00046038624714128673, -0.03805828094482422, -2.09808349609375e-05, -0.0001074075698852539, -3.576278118089249e-07, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -5.602834789897315e-06, -8.344646857949556e-07, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -2.47955322265625e-05, -4.291534423828125e-06, -0.0003444568137638271, -0.10055732727050781, -0.000141143798828125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.4066675248614047e-05, 0.0, -6.330013275146484e-05, 0.0, -1.9073486328125e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -2.6702880859375e-05, 0.0, -2.861022494471399e-06, -0.00025865263887681067, -0.003509521484375, -1.1444091796875e-05, -2.86102294921875e-05, -0.022815704345703125, 0.0, -0.101418137550354, -0.0010166737483814359, -0.0010862350463867188, -0.005218505859375, -0.0020771026611328125, -1.9073486328125e-06, -0.0002346038818359375, -2.288818359375e-05, -0.0065631866455078125, -5.7220458984375e-06, -0.08213424682617188, -7.62939453125e-06, -0.021538734436035156, -1.9073486328125e-06, -0.000396728515625, -0.0005214214324951172, -0.016162633895874023, -0.0001850128173828125, -0.021602626889944077, -0.00014507534797303379, -3.1633691787719727, -0.0002970596542581916, -0.05388969928026199, -0.00033867324236780405, -0.24507999420166016, -0.0002307891845703125, -5.7220458984375e-06, -0.0026531219482421875, 0.0, -0.09208202362060547, -8.642506145406514e-05, -0.014084815979003906, -0.001758575439453125, -5.7220458984375e-06, 0.0, -0.01038360595703125, 0.0, -0.18157052993774414, -0.00028678710805252194, -0.03266561031341553, 0.0, -0.0011081695556640625, -0.012354850769042969, -0.0003032684326171875, -0.00014149941853247583, -6.079673767089844e-06, -0.10035133361816406, -5.7220458984375e-05, -5.340576171875e-05, -0.0001468658447265625, -1.52587890625e-05, -0.0030364990234375, 0.0, -0.011084675788879395, -0.0006755352951586246, -0.0091017484664917, -2.1457672119140625e-06, -0.0035390853881835938, -3.814697265625e-06, -0.17669105529785156, -0.0001727342460071668, -0.0021572113037109375, -5.7220458984375e-06, -6.866455078125e-05, -0.0006237030029296875, 0.0, -1.9073486328125e-06, -0.001285552978515625, 0.0, -0.0001163482666015625, 0.0, -0.0002797842025756836, -2.9682672902708873e-05, -0.0002357945777475834, -7.271765298355604e-06, -0.009421825408935547, -2.2649765014648438e-06, -0.0009670257568359375, -0.005045890808105469, 0.0, -0.05277538299560547, -5.5312928452622145e-05], "choice_history": [55, 124, 221, 63, 103, "Hex", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hex", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "frog", "<EOS>", 14, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Frog", "<EOS>", "Frog", "<EOS>", 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "frog", "<EOS>", "create_minion", "<EOS>", 208, 38, 127, "Null", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", 19, 125, "frog", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.Frog.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -5.001991863765362, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}}, {"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"id": "minion", "_type": "Name"}}], "value": {"id": "frog", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Hex", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.6927575416048057e-05, -0.000526554649695754, -1.9073486328125e-06, -7.62939453125e-05, -3.0517578125e-05, -0.0003989934630226344, -1.358979079668643e-05, -1.9073486328125e-06, -0.0009613037109375, -0.008932113647460938, -1.9073486328125e-06, -0.0001958416833076626, -1.0728830375228426e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.7192741729086265e-05, -2.2649765014648438e-06, -0.000659942626953125, -5.14984130859375e-05, -4.00543212890625e-05, 0.0, -0.0006198883056640625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.2186049793381244e-05, -1.9073486328125e-06, -3.4451481042196974e-05, 0.0, -0.0011692047119140625, -2.288818359375e-05, -3.4332275390625e-05, -2.3841855067985307e-07, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -5.0662616558838636e-05, -2.9802276912960224e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -1.8835065930034034e-05, -0.0009655952453613281, -0.0323634147644043, -3.254413604736328e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00012028217315673828, -2.2053514840081334e-05, -0.023433923721313477, -5.841255187988281e-06, -0.011667251586914062, -2.47955322265625e-05, 0.0, -0.0009312629699707031, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -6.29425048828125e-05, -0.0001277923583984375, -4.839897155761719e-05, -2.288818359375e-05, -0.08094942569732666, -0.00046038624714128673, -0.03805828094482422, -2.09808349609375e-05, -0.0001074075698852539, -3.576278118089249e-07, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -5.602834789897315e-06, -8.344646857949556e-07, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -2.47955322265625e-05, -4.291534423828125e-06, -0.0003444568137638271, -0.10055732727050781, -0.000141143798828125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.4066675248614047e-05, 0.0, -6.330013275146484e-05, 0.0, -1.9073486328125e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -2.6702880859375e-05, 0.0, -2.861022494471399e-06, -0.00025865263887681067, -0.003509521484375, -1.1444091796875e-05, -2.86102294921875e-05, -0.022815704345703125, 0.0, -0.101418137550354, -0.0010166737483814359, -0.0010862350463867188, -0.005218505859375, -0.0020771026611328125, -1.9073486328125e-06, -0.0002346038818359375, -2.288818359375e-05, -0.0065631866455078125, -5.7220458984375e-06, -0.08213424682617188, -7.62939453125e-06, -0.021538734436035156, -1.9073486328125e-06, -0.000396728515625, -0.0005214214324951172, -0.016162633895874023, -0.0001850128173828125, -0.021602626889944077, -0.00014507534797303379, -0.04915967583656311, -0.004974781069904566, -0.01859845593571663, -0.00045323200174607337, -0.07334423065185547, -9.72747802734375e-05, -7.62939453125e-06, -0.00716400146484375, 0.0, -0.04483664035797119, -7.90343910921365e-05, -0.011838912963867188, -0.0014638900756835938, -5.7220458984375e-06, 0.0, -0.0075168609619140625, 0.0, -0.17562007904052734, -0.0002652140101417899, -0.03202378749847412, 0.0, -0.0011386871337890625, -0.011359214782714844, -0.0002956390380859375, -0.0001426914386684075, -6.079673767089844e-06, -0.10488700866699219, -5.91278076171875e-05, -5.340576171875e-05, -0.0001468658447265625, -1.52587890625e-05, -0.00305938720703125, 0.0, -0.011250495910644531, -0.000676369818393141, -0.008958697319030762, -2.1457672119140625e-06, -0.0035295486450195312, -3.814697265625e-06, -0.1768341064453125, -0.0001727342460071668, -0.0021610260009765625, -5.7220458984375e-06, -6.67572021484375e-05, -0.00063323974609375, 0.0, -1.9073486328125e-06, -0.0013141632080078125, 0.0, -0.0001163482666015625, 0.0, -0.00028264522552490234, -2.95634672511369e-05, -0.00023794034495949745, -7.271765298355604e-06, -0.00945580005645752, -2.2649765014648438e-06, -0.000949859619140625, -0.0049152374267578125, 0.0, -3.639777183532715, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Hex", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hex", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "frog", "<EOS>", 14, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "frog", "<EOS>", "create_minion", "<EOS>", 208, 38, 127, "Null", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", 19, 125, "frog", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(self)\n"}, {"score": -5.213874990338205, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}}, {"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"id": "minion", "_type": "Name"}}], "value": {"id": "frog", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "minion", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Hex", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.6927575416048057e-05, -0.000526554649695754, -1.9073486328125e-06, -7.62939453125e-05, -3.0517578125e-05, -0.0003989934630226344, -1.358979079668643e-05, -1.9073486328125e-06, -0.0009613037109375, -0.008932113647460938, -1.9073486328125e-06, -0.0001958416833076626, -1.0728830375228426e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.7192741729086265e-05, -2.2649765014648438e-06, -0.000659942626953125, -5.14984130859375e-05, -4.00543212890625e-05, 0.0, -0.0006198883056640625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.2186049793381244e-05, -1.9073486328125e-06, -3.4451481042196974e-05, 0.0, -0.0011692047119140625, -2.288818359375e-05, -3.4332275390625e-05, -2.3841855067985307e-07, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -5.0662616558838636e-05, -2.9802276912960224e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -1.8835065930034034e-05, -0.0009655952453613281, -0.0323634147644043, -3.254413604736328e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00012028217315673828, -2.2053514840081334e-05, -3.8612377643585205, -2.288818359375e-05, -0.0002117156982421875, -0.0001316070556640625, 0.0, -0.0007731914520263672, -1.1920928244535389e-07, -8.7738037109375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.00016415119171142578, -5.4001808166503906e-05, -3.814697265625e-05, -0.07405424118041992, -0.0009645223617553711, -0.015764236450195312, -1.71661376953125e-05, -0.00010180473327636719, -3.576278118089249e-07, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -4.053113570989808e-06, -7.152555099310121e-07, 0.0, -5.7220458984375e-06, -1.311301275563892e-06, -2.288818359375e-05, -4.291534423828125e-06, -0.0003560161276254803, -0.10039901733398438, -0.00014495849609375, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.3947466868557967e-05, 0.0, -5.936622619628906e-05, 0.0, -1.9073486328125e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -2.6702880859375e-05, 0.0, -2.861022494471399e-06, -0.00025841427850537, -0.0034732818603515625, -1.1444091796875e-05, -2.86102294921875e-05, -0.022800445556640625, 0.0, -0.10133242607116699, -0.0010187008883804083, -0.0010900497436523438, -0.005282402038574219, -0.00208282470703125, -1.9073486328125e-06, -0.0002307891845703125, -2.288818359375e-05, -0.0065174102783203125, -5.7220458984375e-06, -0.0818328857421875, -7.62939453125e-06, -0.02157306671142578, -1.9073486328125e-06, -0.0003948211669921875, -0.0005195140838623047, -0.016176939010620117, -0.0001850128173828125, -0.021604496985673904, -0.00014519454271066934, -0.04919615015387535, -0.00497430469840765, -0.018600942566990852, -0.00045335121103562415, -0.07305622100830078, -9.918212890625e-05, -7.62939453125e-06, -0.006938934326171875, 0.0, -0.045899271965026855, -7.90343910921365e-05, -0.011869430541992188, -0.0014657974243164062, -5.7220458984375e-06, 0.0, -0.007537841796875, 0.0, -0.17560338973999023, -0.0002650948299560696, -0.031977057456970215, 0.0, -0.0011386871337890625, -0.011364936828613281, -0.0002956390380859375, -0.0001426914386684075, -6.079673767089844e-06, -0.10531425476074219, -6.103515625e-05, -5.340576171875e-05, -0.0001468658447265625, -1.52587890625e-05, -0.003040313720703125, 0.0, -0.01122283935546875, -0.0006742241093888879, -0.00894153118133545, -2.1457672119140625e-06, -0.0035276412963867188, -3.814697265625e-06, -0.17690372467041016, -0.0001708268973743543, -0.0021724700927734375, -5.7220458984375e-06, -6.67572021484375e-05, -0.0006237030029296875, 0.0, -1.9073486328125e-06, -0.0013179779052734375, 0.0, -0.000118255615234375, 0.0, -0.00028455257415771484, -2.9682672902708873e-05, -0.00024008609761949629, -7.271765298355604e-06, -0.009459733963012695, -2.2649765014648438e-06, -0.0009517669677734375, -0.004923820495605469, 0.0, -0.053348541259765625, -5.543213774217293e-05], "choice_history": [55, 124, 221, 63, 103, "Hex", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hex", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "frog", "<EOS>", 14, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "frog", "<EOS>", "create_minion", "<EOS>", 208, 38, 127, "Null", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", 19, 125, "frog", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.RARE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -5.239916099514147, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"id": "minion", "_type": "Name"}}], "value": {"id": "frog", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Hex", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.6927575416048057e-05, -0.000526554649695754, -1.9073486328125e-06, -7.62939453125e-05, -3.0517578125e-05, -0.0003989934630226344, -1.358979079668643e-05, -1.9073486328125e-06, -0.0009613037109375, -0.008932113647460938, -1.9073486328125e-06, -0.0001958416833076626, -1.0728830375228426e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.7192741729086265e-05, -2.2649765014648438e-06, -0.000659942626953125, -5.14984130859375e-05, -4.00543212890625e-05, 0.0, -0.0006198883056640625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.2186049793381244e-05, -1.9073486328125e-06, -3.4451481042196974e-05, 0.0, -0.0011692047119140625, -2.288818359375e-05, -3.4332275390625e-05, -2.3841855067985307e-07, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -5.0662616558838636e-05, -2.9802276912960224e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -1.8835065930034034e-05, -0.0009655952453613281, -0.0323634147644043, -3.254413604736328e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00012028217315673828, -2.2053514840081334e-05, -0.023433923721313477, -5.841255187988281e-06, -0.011667251586914062, -2.47955322265625e-05, 0.0, -0.0009312629699707031, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -6.29425048828125e-05, -0.0001277923583984375, -4.839897155761719e-05, -2.288818359375e-05, -0.08094942569732666, -0.00046038624714128673, -0.03805828094482422, -2.09808349609375e-05, -0.0001074075698852539, -3.576278118089249e-07, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -5.602834789897315e-06, -8.344646857949556e-07, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -2.47955322265625e-05, -4.291534423828125e-06, -0.0003444568137638271, -0.10055732727050781, -0.000141143798828125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.4066675248614047e-05, 0.0, -6.330013275146484e-05, 0.0, -1.9073486328125e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -2.6702880859375e-05, 0.0, -2.861022494471399e-06, -0.00025865263887681067, -0.003509521484375, -1.1444091796875e-05, -2.86102294921875e-05, -0.022815704345703125, 0.0, -0.101418137550354, -0.0010166737483814359, -0.0010862350463867188, -0.005218505859375, -0.0020771026611328125, -1.9073486328125e-06, -0.0002346038818359375, -2.288818359375e-05, -0.0065631866455078125, -5.7220458984375e-06, -0.08213424682617188, -7.62939453125e-06, -0.021538734436035156, -1.9073486328125e-06, -0.000396728515625, -0.0005214214324951172, -0.016162633895874023, -0.0001850128173828125, -0.021602626889944077, -0.00014507534797303379, -0.04915967583656311, -0.004974781069904566, -0.01859845593571663, -0.00045323200174607337, -2.664379119873047, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0023021697998046875, 0.0, -0.000186920166015625, 0.0, -0.0071184635162353516, -2.622600959512056e-06, -0.000223159629967995, -2.622604142743512e-06, -0.1032552570104599, -5.9604562920867465e-06, -0.0001926422119140625, -0.05843353271484375, -1.9073486328125e-06, -0.01714015007019043, -9.644021338317543e-05, -0.7220983505249023, -1.71661376953125e-05, -1.33514404296875e-05, -0.03186607360839844, 0.0, 0.0, -0.013622283935546875, 0.0, -0.0001811981201171875, 0.0, -0.00018334388732910156, -3.111314072157256e-05, -0.0010999226942658424, -3.814689989667386e-06, -0.19528865814208984, -1.311301275563892e-06, -0.0005054473876953125, -0.07396602630615234, 0.0, -0.04043698310852051, -5.6385862990282476e-05, -0.3039283752441406, -1.33514404296875e-05, -3.24249267578125e-05, -1.52587890625e-05, -3.814697265625e-06, -0.011434555053710938, 0.0, -0.058100342750549316, -0.0002102844009641558, -0.005990862846374512, -2.0265579223632812e-06, -0.003841400146484375, -1.9073486328125e-06, -0.2584099769592285, -2.3603366571478546e-05], "choice_history": [55, 124, 221, 63, 103, "Hex", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hex", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "frog", "<EOS>", 14, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", 19, 125, "frog", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        self.target.<UNK>(minion)\n        self.target.<UNK>(minion)\n        minion.card = frog\n"}, {"score": -5.386192741601434, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}, {"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"id": "minion", "_type": "Name"}}], "value": {"id": "frog", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "minion", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Hex", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.6927575416048057e-05, -0.000526554649695754, -1.9073486328125e-06, -7.62939453125e-05, -3.0517578125e-05, -0.0003989934630226344, -1.358979079668643e-05, -1.9073486328125e-06, -0.0009613037109375, -0.008932113647460938, -1.9073486328125e-06, -0.0001958416833076626, -1.0728830375228426e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.7192741729086265e-05, -2.2649765014648438e-06, -0.000659942626953125, -5.14984130859375e-05, -4.00543212890625e-05, 0.0, -0.0006198883056640625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.2186049793381244e-05, -1.9073486328125e-06, -3.4451481042196974e-05, 0.0, -0.0011692047119140625, -2.288818359375e-05, -3.4332275390625e-05, -2.3841855067985307e-07, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -5.0662616558838636e-05, -2.9802276912960224e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -1.8835065930034034e-05, -0.0009655952453613281, -0.0323634147644043, -3.254413604736328e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00012028217315673828, -2.2053514840081334e-05, -0.023433923721313477, -5.841255187988281e-06, -0.011667251586914062, -2.47955322265625e-05, 0.0, -0.0009312629699707031, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -6.29425048828125e-05, -0.0001277923583984375, -4.839897155761719e-05, -2.288818359375e-05, -0.08094942569732666, -0.00046038624714128673, -0.03805828094482422, -2.09808349609375e-05, -0.0001074075698852539, -3.576278118089249e-07, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -5.602834789897315e-06, -8.344646857949556e-07, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -2.47955322265625e-05, -4.291534423828125e-06, -0.0003444568137638271, -0.10055732727050781, -0.000141143798828125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.4066675248614047e-05, 0.0, -6.330013275146484e-05, 0.0, -1.9073486328125e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -2.6702880859375e-05, 0.0, -2.861022494471399e-06, -0.00025865263887681067, -0.003509521484375, -1.1444091796875e-05, -2.86102294921875e-05, -0.022815704345703125, 0.0, -0.101418137550354, -0.0010166737483814359, -0.0010862350463867188, -0.005218505859375, -0.0020771026611328125, -1.9073486328125e-06, -0.0002346038818359375, -2.288818359375e-05, -0.0065631866455078125, -5.7220458984375e-06, -2.5542678833007812, 0.0, -0.0010013580322265625, -8.58306884765625e-05, -0.0472639799118042, -2.288818359375e-05, -0.16841095685958862, -0.00010383028711657971, -1.2853556871414185, -0.0014034502673894167, -0.1635141372680664, -0.00012969970703125, -5.7220458984375e-06, -0.003253936767578125, 0.0, -0.05631661415100098, -7.498181366827339e-05, -0.014373779296875, -0.00165557861328125, -3.814697265625e-06, 0.0, -0.024324417114257812, 0.0, -0.19514572620391846, -0.00035055424086749554, -0.04990029335021973, 0.0, -0.0010509490966796875, -0.013764381408691406, -0.0002899169921875, -0.00013553972530644387, -7.867813110351562e-06, -0.07583045959472656, -5.340576171875e-05, -5.14984130859375e-05, -0.000148773193359375, -1.33514404296875e-05, -0.0029449462890625, 0.0, -0.011823415756225586, -0.0006670720758847892, -0.009397745132446289, -2.1457672119140625e-06, -0.0035142898559570312, -3.814697265625e-06, -0.17480230331420898, -0.0001727342460071668, -0.002185821533203125, -5.7220458984375e-06, -6.67572021484375e-05, -0.000682830810546875, 0.0, -1.9073486328125e-06, -0.0013828277587890625, 0.0, -0.0001220703125, 0.0, -0.0002855062484741211, -2.884823152271565e-05, -0.00024163583293557167, -7.152556463552173e-06, -0.009517908096313477, -2.2649765014648438e-06, -0.00090789794921875, -0.004540443420410156, 0.0, -0.0552215576171875, -5.3763200412504375e-05], "choice_history": [55, 124, 221, 63, 103, "Hex", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hex", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "frog", "<EOS>", 14, 99, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Frog", "<EOS>", 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "frog", "<EOS>", "create_minion", "<EOS>", 208, 38, 127, "Null", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", 19, 125, "frog", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -5.5621663688934575, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}}}, {"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"id": "minion", "_type": "Name"}}], "value": {"id": "frog", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "minion", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Hex", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.6927575416048057e-05, -0.000526554649695754, -1.9073486328125e-06, -7.62939453125e-05, -3.0517578125e-05, -0.0003989934630226344, -1.358979079668643e-05, -1.9073486328125e-06, -0.0009613037109375, -0.008932113647460938, -1.9073486328125e-06, -0.0001958416833076626, -1.0728830375228426e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.7192741729086265e-05, -2.2649765014648438e-06, -0.000659942626953125, -5.14984130859375e-05, -4.00543212890625e-05, 0.0, -0.0006198883056640625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.2186049793381244e-05, -1.9073486328125e-06, -3.4451481042196974e-05, 0.0, -0.0011692047119140625, -2.288818359375e-05, -3.4332275390625e-05, -2.3841855067985307e-07, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -5.0662616558838636e-05, -2.9802276912960224e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -1.8835065930034034e-05, -0.0009655952453613281, -0.0323634147644043, -3.254413604736328e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00012028217315673828, -2.2053514840081334e-05, -0.023433923721313477, -5.841255187988281e-06, -0.011667251586914062, -2.47955322265625e-05, 0.0, -0.0009312629699707031, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -6.29425048828125e-05, -0.0001277923583984375, -4.839897155761719e-05, -2.288818359375e-05, -0.08094942569732666, -0.00046038624714128673, -0.03805828094482422, -2.09808349609375e-05, -0.0001074075698852539, -3.576278118089249e-07, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -5.602834789897315e-06, -8.344646857949556e-07, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -2.47955322265625e-05, -4.291534423828125e-06, -0.0003444568137638271, -0.10055732727050781, -0.000141143798828125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.4066675248614047e-05, 0.0, -6.330013275146484e-05, 0.0, -1.9073486328125e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -2.6702880859375e-05, 0.0, -2.861022494471399e-06, -0.00025865263887681067, -0.003509521484375, -1.1444091796875e-05, -2.86102294921875e-05, -0.022815704345703125, 0.0, -0.101418137550354, -0.0010166737483814359, -0.0010862350463867188, -0.005218505859375, -0.0020771026611328125, -1.9073486328125e-06, -0.0002346038818359375, -2.288818359375e-05, -0.0065631866455078125, -5.7220458984375e-06, -0.08213424682617188, -7.62939453125e-06, -4.132966995239258, -4.1961669921875e-05, -0.0046939849853515625, -3.814697265625e-06, -0.0003204345703125, -0.0009909868240356445, -0.017215728759765625, -0.0006504058837890625, -0.012153293006122112, -0.000271425349637866, -0.05144043266773224, -0.001963322516530752, -0.016987213864922523, -3.731212200364098e-05, -0.05686924606561661, -0.00017762040079105645, -0.019296646118164062, -0.000171661376953125, -7.62939453125e-06, -0.010030746459960938, 0.0, -0.09044337272644043, -7.235881639644504e-05, -0.016111373901367188, -0.0015764236450195312, -1.1444091796875e-05, 0.0, -0.00519561767578125, 0.0, -0.17125511169433594, -0.0002201589522883296, -0.030456900596618652, 0.0, -0.0007305145263671875, -0.010783195495605469, -0.0002918243408203125, -0.00014459813246503472, -8.106231689453125e-06, -0.10042381286621094, -5.7220458984375e-05, -5.53131103515625e-05, -0.000133514404296875, -1.33514404296875e-05, -0.0031337738037109375, 0.0, -0.011284828186035156, -0.000695322232786566, -0.008887767791748047, -2.1457672119140625e-06, -0.00351715087890625, -3.814697265625e-06, -0.17767953872680664, -0.0001689195487415418, -0.002178192138671875, -5.7220458984375e-06, -6.866455078125e-05, -0.00057220458984375, 0.0, -1.9073486328125e-06, -0.0012359619140625, 0.0, -0.0001125335693359375, 0.0, -0.0002732276916503906, -3.0636318115284666e-05, -0.00023221829906105995, -7.390974587906385e-06, -0.009325742721557617, -2.2649765014648438e-06, -0.0010318756103515625, -0.0055065155029296875, 0.0, -0.05043613910675049, -5.6862656492739916e-05], "choice_history": [55, 124, 221, 63, 103, "Hex", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hex", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "frog", "<EOS>", 14, 99, 11, 94, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", "Frog", "<EOS>", 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "frog", "<EOS>", "create_minion", "<EOS>", 208, 38, 127, "Null", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", 19, 125, "frog", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"score": -5.797570583251826, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}}, {"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"id": "minion", "_type": "Name"}}], "value": {"id": "buffs", "_type": "Name"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "minion", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Hex", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.6927575416048057e-05, -0.000526554649695754, -1.9073486328125e-06, -7.62939453125e-05, -3.0517578125e-05, -0.0003989934630226344, -1.358979079668643e-05, -1.9073486328125e-06, -0.0009613037109375, -0.008932113647460938, -1.9073486328125e-06, -0.0001958416833076626, -1.0728830375228426e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.7192741729086265e-05, -2.2649765014648438e-06, -0.000659942626953125, -5.14984130859375e-05, -4.00543212890625e-05, 0.0, -0.0006198883056640625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.2186049793381244e-05, -1.9073486328125e-06, -3.4451481042196974e-05, 0.0, -0.0011692047119140625, -2.288818359375e-05, -3.4332275390625e-05, -2.3841855067985307e-07, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -5.0662616558838636e-05, -2.9802276912960224e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -1.8835065930034034e-05, -0.0009655952453613281, -0.0323634147644043, -3.254413604736328e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00012028217315673828, -2.2053514840081334e-05, -0.023433923721313477, -5.841255187988281e-06, -0.011667251586914062, -2.47955322265625e-05, 0.0, -0.0009312629699707031, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -6.29425048828125e-05, -0.0001277923583984375, -4.839897155761719e-05, -2.288818359375e-05, -0.08094942569732666, -0.00046038624714128673, -0.03805828094482422, -2.09808349609375e-05, -0.0001074075698852539, -3.576278118089249e-07, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -5.602834789897315e-06, -8.344646857949556e-07, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -2.47955322265625e-05, -4.291534423828125e-06, -0.0003444568137638271, -0.10055732727050781, -0.000141143798828125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.4066675248614047e-05, 0.0, -6.330013275146484e-05, 0.0, -1.9073486328125e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -2.6702880859375e-05, 0.0, -2.861022494471399e-06, -0.00025865263887681067, -0.003509521484375, -1.1444091796875e-05, -2.86102294921875e-05, -0.022815704345703125, 0.0, -0.101418137550354, -0.0010166737483814359, -0.0010862350463867188, -0.005218505859375, -0.0020771026611328125, -1.9073486328125e-06, -0.0002346038818359375, -2.288818359375e-05, -0.0065631866455078125, -5.7220458984375e-06, -0.08213424682617188, -7.62939453125e-06, -0.021538734436035156, -1.9073486328125e-06, -0.000396728515625, -0.0005214214324951172, -0.016162633895874023, -0.0001850128173828125, -0.021602626889944077, -0.00014507534797303379, -0.04915967583656311, -0.004974781069904566, -0.01859845593571663, -0.00045323200174607337, -0.07334423065185547, -9.72747802734375e-05, -7.62939453125e-06, -0.00716400146484375, 0.0, -0.04483664035797119, -7.90343910921365e-05, -0.011838912963867188, -0.0014638900756835938, -5.7220458984375e-06, 0.0, -0.0075168609619140625, 0.0, -0.17562007904052734, -0.0002652140101417899, -0.03202378749847412, 0.0, -0.0011386871337890625, -0.011359214782714844, -0.0002956390380859375, -0.0001426914386684075, -6.079673767089844e-06, -0.10488700866699219, -5.91278076171875e-05, -5.340576171875e-05, -0.0001468658447265625, -1.52587890625e-05, -0.00305938720703125, 0.0, -0.011250495910644531, -0.000676369818393141, -0.008958697319030762, -2.1457672119140625e-06, -0.0035295486450195312, -3.814697265625e-06, -4.507834434509277, 0.0, -0.04273796081542969, -1.33514404296875e-05, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.003963470458984375, 0.0, -8.20159912109375e-05, 0.0, -0.0008912086486816406, -1.8000440832111053e-05, -0.0001959798246389255, -5.245207830739673e-06, -0.013984441757202148, -2.2649765014648438e-06, -0.0009708404541015625, -0.004627227783203125, 0.0, -0.05712699890136719, -5.1021437684539706e-05], "choice_history": [55, 124, 221, 63, 103, "Hex", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hex", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "frog", "<EOS>", 14, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "frog", "<EOS>", "create_minion", "<EOS>", 208, 38, 127, "Null", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", 19, 125, "buffs", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = buffs\n        self.target.<UNK>(minion)\n"}, {"score": -6.286870224865055, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Attribute", "attr": "card", "value": {"id": "minion", "_type": "Name"}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "deathrattle"}], "_type": "ClassDef", "name": "Hex", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.6927575416048057e-05, -0.000526554649695754, -1.9073486328125e-06, -7.62939453125e-05, -3.0517578125e-05, -0.0003989934630226344, -1.358979079668643e-05, -1.9073486328125e-06, -0.0009613037109375, -0.008932113647460938, -1.9073486328125e-06, -0.0001958416833076626, -1.0728830375228426e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.7192741729086265e-05, -2.2649765014648438e-06, -0.000659942626953125, -5.14984130859375e-05, -4.00543212890625e-05, 0.0, -0.0006198883056640625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.2186049793381244e-05, -1.9073486328125e-06, -3.4451481042196974e-05, 0.0, -0.0011692047119140625, -2.288818359375e-05, -3.4332275390625e-05, -2.3841855067985307e-07, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -5.0662616558838636e-05, -2.9802276912960224e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -1.8835065930034034e-05, -0.0009655952453613281, -0.0323634147644043, -3.254413604736328e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00012028217315673828, -2.2053514840081334e-05, -0.023433923721313477, -5.841255187988281e-06, -0.011667251586914062, -2.47955322265625e-05, 0.0, -0.0009312629699707031, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -6.29425048828125e-05, -0.0001277923583984375, -4.839897155761719e-05, -2.288818359375e-05, -0.08094942569732666, -0.00046038624714128673, -3.33730411529541, -0.000461578369140625, 0.0, 0.0, -1.3351945877075195, 0.0, -7.62939453125e-06, -1.6689286894688848e-06, -6.151198613224551e-05, -2.2649765014648438e-06, -0.33039116859436035, -4.482168878894299e-05, -0.000850677490234375, -0.17194366455078125, -3.814697265625e-06, -0.4055347442626953, 0.0, -0.5349893569946289, -0.00022625920246355236, -0.0043385024182498455, 0.0], "choice_history": [55, 124, 221, 63, 103, "Hex", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hex", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "deathrattle", "<EOS>", 208, 29, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.deathrattle(minion.card)\n"}, {"score": -6.3756952329414105, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}}}}}}}, {"_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"id": "frog", "_type": "Name"}}, "args": [{"_type": "NameConstant", "value": "Null"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "minion", "_type": "Name"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "minion", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Hex", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.6927575416048057e-05, -0.000526554649695754, -1.9073486328125e-06, -7.62939453125e-05, -3.0517578125e-05, -0.0003989934630226344, -1.358979079668643e-05, -1.9073486328125e-06, -0.0009613037109375, -0.008932113647460938, -1.9073486328125e-06, -0.0001958416833076626, -1.0728830375228426e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.7192741729086265e-05, -2.2649765014648438e-06, -0.000659942626953125, -5.14984130859375e-05, -4.00543212890625e-05, 0.0, -0.0006198883056640625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.2186049793381244e-05, -1.9073486328125e-06, -3.4451481042196974e-05, 0.0, -0.0011692047119140625, -2.288818359375e-05, -3.4332275390625e-05, -2.3841855067985307e-07, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -5.0662616558838636e-05, -2.9802276912960224e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -1.8835065930034034e-05, -0.0009655952453613281, -0.0323634147644043, -3.254413604736328e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00012028217315673828, -2.2053514840081334e-05, -0.023433923721313477, -5.841255187988281e-06, -0.011667251586914062, -2.47955322265625e-05, 0.0, -0.0009312629699707031, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -6.29425048828125e-05, -0.0001277923583984375, -4.839897155761719e-05, -2.288818359375e-05, -0.08094942569732666, -0.00046038624714128673, -0.03805828094482422, -2.09808349609375e-05, -0.0001074075698852539, -3.576278118089249e-07, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -5.602834789897315e-06, -8.344646857949556e-07, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -2.47955322265625e-05, -4.291534423828125e-06, -0.0003444568137638271, -0.10055732727050781, -0.000141143798828125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.4066675248614047e-05, 0.0, -6.330013275146484e-05, 0.0, -1.9073486328125e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -2.6702880859375e-05, 0.0, -2.861022494471399e-06, -0.00025865263887681067, -0.003509521484375, -1.1444091796875e-05, -2.86102294921875e-05, -0.022815704345703125, 0.0, -0.101418137550354, -0.0010166737483814359, -0.0010862350463867188, -0.005218505859375, -0.0020771026611328125, -1.9073486328125e-06, -0.0002346038818359375, -2.288818359375e-05, -0.0065631866455078125, -5.7220458984375e-06, -0.08213424682617188, -7.62939453125e-06, -0.021538734436035156, -1.9073486328125e-06, -0.000396728515625, -0.0005214214324951172, -0.016162633895874023, -0.0001850128173828125, -0.021602626889944077, -0.00014507534797303379, -0.04915967583656311, -0.004974781069904566, -0.01859845593571663, -0.00045323200174607337, -0.07334423065185547, -9.72747802734375e-05, -7.62939453125e-06, -0.00716400146484375, 0.0, -0.04483664035797119, -7.90343910921365e-05, -0.011838912963867188, -0.0014638900756835938, -5.7220458984375e-06, 0.0, -0.0075168609619140625, 0.0, -0.17562007904052734, -0.0002652140101417899, -0.03202378749847412, 0.0, -0.0011386871337890625, -0.011359214782714844, -0.0002956390380859375, -0.0001426914386684075, -6.079673767089844e-06, -2.307978630065918, 0.0, -1.9073486328125e-06, -0.07656478881835938, -1.9073486328125e-06, 0.0, -1.92724609375, -1.33514404296875e-05, -4.00543212890625e-05, -3.0517578125e-05, -0.0037349462509155273, -2.145764938177308e-06, -0.0006440876750275493, -1.0728830375228426e-06, -0.29510068893432617, -9.536738616588991e-07, -0.0005321502685546875, -0.08925533294677734, -1.9073486328125e-06, -0.01741647720336914, -7.510181603720412e-05, -0.3431415557861328, -1.1444091796875e-05, -7.62939453125e-06, -0.0015392303466796875, 0.0, 0.0, -0.01953125, 0.0, -0.00014495849609375, 0.0, -0.0001957416534423828, -1.9311717551317997e-05, -0.0009486509952694178, -2.50339189733495e-06, -0.18363690376281738, -2.622604142743512e-06, -0.0007915496826171875, -0.05353736877441406, 0.0, -0.021097660064697266, -5.888934538234025e-05], "choice_history": [55, 124, 221, 63, 103, "Hex", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hex", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "frog", "<EOS>", 14, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "frog", "<EOS>", "create_minion", "<EOS>", 208, 38, 127, "Null", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        self.target.<UNK>(minion)\n        self.target.<UNK>(minion)\n"}, {"score": -7.159142170555185, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Hex", "hole1": 3}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "card", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "append"}], "_type": "ClassDef", "name": "Hex", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.6927575416048057e-05, -0.000526554649695754, -1.9073486328125e-06, -7.62939453125e-05, -3.0517578125e-05, -0.0003989934630226344, -1.358979079668643e-05, -1.9073486328125e-06, -0.0009613037109375, -5.052630424499512, -0.0018091201782226562, -0.0003928373917005956, -3.957677472499199e-05, -1.4424233086174354e-05, -4.768370445162873e-07, -0.3016279935836792, -1.1801649634435307e-05, -0.0889434814453125, -0.000843048095703125, -3.814697265625e-06, -0.000102996826171875, -8.58306884765625e-05, 0.0, -5.91278076171875e-05, -3.814697265625e-06, -0.0005092620849609375, -2.861022494471399e-06, -0.00034868717193603516, -6.914134246471804e-06, -0.1734834760427475, -3.576278118089249e-07, -0.9672795534133911, 0.0, -0.005527496337890625, -0.5190258026123047, 0.0, -0.0442965030670166, -1.5497195136049413e-06], "choice_history": [55, 124, 221, 63, 103, "Hex", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Hex", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "append", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.PRIEST, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.card.append(self)\n"}, {"score": -21.746618270874023, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, 0.0, -21.746618270874023], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 48}
{"beams": [{"score": -0.21408193830504274, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 6}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HolyLight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -2.09808349609375e-05, -7.629365427419543e-06, -0.005023960955440998, -0.047288455069065094, -4.9591064453125e-05, -0.0003414154052734375, -3.4332275390625e-05, -0.00021326530259102583, -1.5377969248220325e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0033664703369140625, -1.9073486328125e-06, -9.298323857365176e-05, -2.1457672119140625e-06, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -0.00016116315964609385, -7.748603820800781e-06, -6.103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0041637420654296875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.0503786799963564e-05, -7.62939453125e-06, -1.9550323486328125e-05, -2.2649765014648438e-06, -0.000701904296875, -7.05718994140625e-05, -7.2479248046875e-05, -4.100715523236431e-05, -0.0002979039854835719, -0.0004865335358772427, -0.030336380004882812, -0.000324249267578125, -9.5367431640625e-06, -0.0009237175108864903, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0004990100860595703, -7.152555099310121e-07, -0.007398843765258789, 0.0, -1.9073486328125e-06, -0.0001125335693359375, -7.62939453125e-06, -1.52587890625e-05, -0.000492095947265625, -1.311301275563892e-06, -0.00144195556640625, 0.0, -0.0001125335693359375, -0.0001010894775390625, -3.24249267578125e-05, -0.0009654760360717773, -7.152555099310121e-07, -0.000240325927734375, -5.7220458984375e-06, -0.0002002716064453125, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.0002002716064453125, -1.9073486328125e-06, -0.00012636184692382812, -0.00021970272064208984, -0.07352149486541748, -4.589557647705078e-05, -0.0003070831298828125, -9.34600830078125e-05, -5.53131103515625e-05, -0.00014495849609375, -1.71661376953125e-05, -0.0001239776611328125, -0.00141143798828125, -1.7881377516459906e-06, -0.00026023387908935547, -1.6689286894688848e-06, -0.007172942161560059, -5.841247457283316e-06, -1.1444091796875e-05, -0.004093170166015625, -0.000141143798828125, -0.010885238647460938, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, -0.00031948089599609375, 0.0, -0.0017552102217450738, -2.3841855067985307e-07, -0.000110626220703125, -0.0010528564453125, -1.52587890625e-05, -0.00042348421993665397, -0.0001308832288486883, -0.000171661376953125, -7.62939453125e-06, -0.004958152770996094, -3.6954811548639555e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Light", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Light", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -2.820934101163367, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 6}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HolyLight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -2.09808349609375e-05, -7.629365427419543e-06, -0.005023960955440998, -0.047288455069065094, -4.9591064453125e-05, -0.0003414154052734375, -3.4332275390625e-05, -0.00021326530259102583, -1.5377969248220325e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0033664703369140625, -1.9073486328125e-06, -9.298323857365176e-05, -2.1457672119140625e-06, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -0.00016116315964609385, -7.748603820800781e-06, -6.103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0041637420654296875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.0503786799963564e-05, -7.62939453125e-06, -1.9550323486328125e-05, -2.2649765014648438e-06, -0.000701904296875, -7.05718994140625e-05, -7.2479248046875e-05, -4.100715523236431e-05, -0.0002979039854835719, -0.0004865335358772427, -0.030336380004882812, -0.000324249267578125, -9.5367431640625e-06, -0.0009237175108864903, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0004990100860595703, -7.152555099310121e-07, -0.007398843765258789, 0.0, -1.9073486328125e-06, -0.0001125335693359375, -7.62939453125e-06, -1.52587890625e-05, -0.000492095947265625, -1.311301275563892e-06, -0.00144195556640625, 0.0, -0.0001125335693359375, -0.0001010894775390625, -3.24249267578125e-05, -0.0009654760360717773, -7.152555099310121e-07, -0.000240325927734375, -5.7220458984375e-06, -0.0002002716064453125, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.0002002716064453125, -1.9073486328125e-06, -0.00012636184692382812, -0.00021970272064208984, -2.684631109237671, -6.723403930664062e-05, -0.0009059906005859375, -0.0001125335693359375, -2.86102294921875e-05, -0.0003528594970703125, -1.9073486328125e-05, -0.0001068115234375, -0.0014133453369140625, -2.145764938177308e-06, -0.00019252300262451172, -1.9073468138230965e-06, -0.008006572723388672, -5.364412118069595e-06, -5.7220458984375e-06, -0.0029706954956054688, -9.34600830078125e-05, -0.0075702667236328125, -9.72747802734375e-05, -7.62939453125e-06, -2.288818359375e-05, -0.000255584716796875, -1.1920928244535389e-07, -0.0015885543543845415, -2.3841855067985307e-07, -0.0001239776611328125, -0.0008373260498046875, -1.71661376953125e-05, -0.0004566132847685367, -0.00011932138295378536, -0.0001850128173828125, -1.71661376953125e-05, -0.0040073394775390625, -4.768360213347478e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Light", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Light", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -3.718965517139928, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Light Light"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 6}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HolyLight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -2.09808349609375e-05, -7.629365427419543e-06, -0.005023960955440998, -0.047288455069065094, -4.9591064453125e-05, -0.0003414154052734375, -3.4332275390625e-05, -0.00021326530259102583, -1.5377969248220325e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0033664703369140625, -1.9073486328125e-06, -9.298323857365176e-05, -2.1457672119140625e-06, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -0.00016116315964609385, -7.748603820800781e-06, -6.103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0041637420654296875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.0503786799963564e-05, -7.62939453125e-06, -1.9550323486328125e-05, -2.2649765014648438e-06, -0.000701904296875, -7.05718994140625e-05, -7.2479248046875e-05, -4.100715523236431e-05, -0.0002979039854835719, -0.0004865335358772427, -3.5330686569213867, -0.000310301489662379, -3.0517578125e-05, -0.0002155303955078125, -3.814697265625e-06, -0.0005979737034067512, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002675056457519531, -1.1920928244535389e-07, -0.008319973945617676, 0.0, 0.0, -5.14984130859375e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.0004425048828125, -8.344646857949556e-07, -0.0023899078369140625, 0.0, -9.1552734375e-05, -0.000102996826171875, -2.6702880859375e-05, -0.0009464025497436523, -7.152555099310121e-07, -0.0002460479736328125, -3.814697265625e-06, -0.000213623046875, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00020599365234375, -1.9073486328125e-06, -0.00013017654418945312, -0.00022161006927490234, -0.07468223571777344, -4.780292510986328e-05, -0.000293731689453125, -9.34600830078125e-05, -5.7220458984375e-05, -0.000148773193359375, -1.71661376953125e-05, -0.0001201629638671875, -0.0014581680297851562, -1.6689286894688848e-06, -0.0002573728561401367, -1.6689286894688848e-06, -0.007033109664916992, -5.722038622479886e-06, -1.1444091796875e-05, -0.003902435302734375, -0.0001430511474609375, -0.010707855224609375, -0.0001049041748046875, -7.62939453125e-06, -2.09808349609375e-05, -0.00032138824462890625, 0.0, -0.0017745206132531166, -2.3841855067985307e-07, -0.0001087188720703125, -0.0010852813720703125, -1.52587890625e-05, -0.0004286083276383579, -0.00013398226292338222, -0.0001735687255859375, -1.52587890625e-05, -0.0049533843994140625, -3.576272320060525e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Light", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Light", " ", "Light", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -4.4448382947762966, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Light Light"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 6}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HolyLightLight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -2.09808349609375e-05, -7.629365427419543e-06, -0.005023960955440998, -3.621532440185547, -0.0022108431439846754, -8.392333984375e-05, -0.000194549560546875, -1.71661376953125e-05, -0.00022852412075735629, -1.3589840818895027e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002277374267578125, -3.814697265625e-06, -0.00010323523747501895, -2.1457672119140625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001991860626731068, -1.1563301086425781e-05, -6.67572021484375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0044994354248046875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9907753085135482e-05, -7.62939453125e-06, -1.9550323486328125e-05, -2.2649765014648438e-06, -0.0006866455078125, -7.2479248046875e-05, -7.2479248046875e-05, -4.1483970562694594e-05, -0.0002939700789283961, -0.0011190141085535288, -0.6830520629882812, -0.00017368767294101417, -4.9591064453125e-05, -0.0002269744873046875, -3.814697265625e-06, -0.0006011934601701796, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002694129943847656, -1.1920928244535389e-07, -0.008176922798156738, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.0004367828369140625, -8.344646857949556e-07, -0.002452850341796875, 0.0, -9.34600830078125e-05, -0.0001049041748046875, -2.6702880859375e-05, -0.0009559392929077148, -7.152555099310121e-07, -0.0002422332763671875, -3.814697265625e-06, -0.000213623046875, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00020599365234375, -1.9073486328125e-06, -0.00013208389282226562, -0.00022351741790771484, -0.07446777820587158, -4.780292510986328e-05, -0.0002899169921875, -9.1552734375e-05, -5.7220458984375e-05, -0.000148773193359375, -1.71661376953125e-05, -0.0001220703125, -0.0014638900756835938, -1.7881377516459906e-06, -0.00025069713592529297, -1.6689286894688848e-06, -0.007052898406982422, -5.841247457283316e-06, -1.1444091796875e-05, -0.0038595199584960938, -0.000141143798828125, -0.010759353637695312, -0.0001049041748046875, -7.62939453125e-06, -1.9073486328125e-05, -0.0003185272216796875, 0.0, -0.0017714215209707618, -2.3841855067985307e-07, -0.0001087188720703125, -0.0010814666748046875, -1.52587890625e-05, -0.0004280125140212476, -0.00013398226292338222, -0.0001735687255859375, -1.52587890625e-05, -0.004955291748046875, -3.576272320060525e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Light", "Light", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Light", " ", "Light", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyLightLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -4.466656330522341, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 6}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HolyLightLight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -2.09808349609375e-05, -7.629365427419543e-06, -0.005023960955440998, -3.621532440185547, -0.0022108431439846754, -8.392333984375e-05, -0.000194549560546875, -1.71661376953125e-05, -0.00022852412075735629, -1.3589840818895027e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002277374267578125, -3.814697265625e-06, -0.00010323523747501895, -2.1457672119140625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001991860626731068, -1.1563301086425781e-05, -6.67572021484375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0044994354248046875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9907753085135482e-05, -7.62939453125e-06, -1.9550323486328125e-05, -2.2649765014648438e-06, -0.0006866455078125, -7.2479248046875e-05, -7.2479248046875e-05, -4.1483970562694594e-05, -0.0002939700789283961, -0.0011190141085535288, -0.7064409255981445, -0.00022125244140625, -1.52587890625e-05, -0.001093398779630661, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0005353689193725586, -8.344646857949556e-07, -0.007345438003540039, 0.0, -1.9073486328125e-06, -0.000118255615234375, -7.62939453125e-06, -1.71661376953125e-05, -0.000492095947265625, -1.311301275563892e-06, -0.001453399658203125, 0.0, -0.00011444091796875, -0.0001010894775390625, -3.24249267578125e-05, -0.0009808540344238281, -7.152555099310121e-07, -0.000232696533203125, -5.7220458984375e-06, -0.0001964569091796875, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.0002002716064453125, -1.9073486328125e-06, -0.00012826919555664062, -0.00021970272064208984, -0.0736846923828125, -4.589557647705078e-05, -0.00030517578125, -9.1552734375e-05, -5.53131103515625e-05, -0.00014495849609375, -1.71661376953125e-05, -0.000125885009765625, -0.001415252685546875, -1.7881377516459906e-06, -0.00025260448455810547, -1.6689286894688848e-06, -0.007180452346801758, -5.9604562920867465e-06, -1.1444091796875e-05, -0.004036903381347656, -0.000141143798828125, -0.010919570922851562, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, -0.00031757354736328125, 0.0, -0.0017523493152111769, -2.3841855067985307e-07, -0.000110626220703125, -0.001049041748046875, -1.52587890625e-05, -0.00042479572584852576, -0.0001311216183239594, -0.000171661376953125, -7.62939453125e-06, -0.004947662353515625, -3.6954811548639555e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Light", "Light", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Light", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyLightLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -4.6618811815189005, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Light Light"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 6}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HolyLightOfLight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -2.09808349609375e-05, -7.629365427419543e-06, -0.005023960955440998, -4.423353672027588, -0.005075514316558838, -0.0036100302822887897, -7.2479248046875e-05, -9.72747802734375e-05, -1.9073486328125e-05, -0.00031554698944091797, -1.1444084520917386e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00186920166015625, -3.814697265625e-06, -0.00010955332254525274, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -2.288818359375e-05, -0.00018977026047650725, -1.728534698486328e-05, -8.7738037109375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.005260467529296875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9907753085135482e-05, -7.62939453125e-06, -1.9550323486328125e-05, -2.2649765014648438e-06, -0.00066375732421875, -7.2479248046875e-05, -7.2479248046875e-05, -4.172238186583854e-05, -0.0002939700789283961, -0.0016772588714957237, -0.09083366394042969, -5.292858259053901e-05, -0.00028228759765625, -0.000232696533203125, -3.814697265625e-06, -0.0005917816888540983, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002675056457519531, -1.1920928244535389e-07, -0.008175015449523926, 0.0, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.00043487548828125, -8.344646857949556e-07, -0.0025310516357421875, 0.0, -9.5367431640625e-05, -0.0001068115234375, -2.6702880859375e-05, -0.0009635686874389648, -5.960462772236497e-07, -0.0002384185791015625, -3.814697265625e-06, -0.000213623046875, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00020599365234375, -1.9073486328125e-06, -0.00013208389282226562, -0.00022351741790771484, -0.07426083087921143, -4.780292510986328e-05, -0.0002841949462890625, -9.1552734375e-05, -5.7220458984375e-05, -0.000148773193359375, -1.71661376953125e-05, -0.0001220703125, -0.0014667510986328125, -1.7881377516459906e-06, -0.0002478361129760742, -1.6689286894688848e-06, -0.007082581520080566, -5.9604562920867465e-06, -1.1444091796875e-05, -0.0038738250732421875, -0.0001430511474609375, -0.010789871215820312, -0.0001049041748046875, -7.62939453125e-06, -1.9073486328125e-05, -0.0003185272216796875, 0.0, -0.001771779265254736, -2.3841855067985307e-07, -0.0001087188720703125, -0.001079559326171875, -1.52587890625e-05, -0.000426940037868917, -0.00013410145766101778, -0.0001735687255859375, -1.71661376953125e-05, -0.004971504211425781, -3.576272320060525e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Light", "Of", "Light", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Light", " ", "Light", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyLightOfLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -5.331435371738024, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 6}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HolyLight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -2.09808349609375e-05, -7.629365427419543e-06, -0.005023960955440998, -0.047288455069065094, -4.9591064453125e-05, -0.0003414154052734375, -3.4332275390625e-05, -0.00021326530259102583, -1.5377969248220325e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0033664703369140625, -1.9073486328125e-06, -9.298323857365176e-05, -2.1457672119140625e-06, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -0.00016116315964609385, -7.748603820800781e-06, -6.103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0041637420654296875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.0503786799963564e-05, -7.62939453125e-06, -1.9550323486328125e-05, -2.2649765014648438e-06, -0.000701904296875, -7.05718994140625e-05, -7.2479248046875e-05, -4.100715523236431e-05, -0.0002979039854835719, -0.0004865335358772427, -0.030336380004882812, -0.000324249267578125, -9.5367431640625e-06, -0.0009237175108864903, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0004990100860595703, -7.152555099310121e-07, -5.113190650939941, -1.7881377516459906e-06, 0.0, -0.0001964569091796875, -2.86102294921875e-05, -9.34600830078125e-05, -0.00016033649444580078, -8.34461570775602e-06, -0.010364651679992676, 0.0, -0.0001506805419921875, -7.82012939453125e-05, -4.57763671875e-05, -0.0008740425109863281, -7.152555099310121e-07, -0.0002422332763671875, -3.814697265625e-06, -0.00020599365234375, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.000217437744140625, -1.9073486328125e-06, -0.0001341104507446289, -0.00022542476654052734, -0.07669961452484131, -4.780292510986328e-05, -0.00023651123046875, -8.7738037109375e-05, -6.4849853515625e-05, -0.00016021728515625, -1.71661376953125e-05, -0.000118255615234375, -0.001583099365234375, -1.6689286894688848e-06, -0.0003052949905395508, -1.6689286894688848e-06, -0.007586121093481779, -5.6028297876764555e-06, -1.1444091796875e-05, -0.0036373138427734375, -0.000152587890625, -0.010282516479492188, -0.000102996826171875, -7.62939453125e-06, -1.9073486328125e-05, -0.0003490447998046875, 0.0, -0.0018275631591677666, -2.3841855067985307e-07, -0.00011444091796875, -0.001148223876953125, -1.52587890625e-05, -0.0004199092509225011, -0.00012790338951162994, -0.0001735687255859375, -7.62939453125e-06, -0.0048656463623046875, -3.576272320060525e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Light", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Light", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -6.1127915824660235, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Light Light"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 6}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HolyOfLight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -2.09808349609375e-05, -7.629365427419543e-06, -5.317821025848389, -8.58306884765625e-06, -0.001728799077682197, -8.0108642578125e-05, -0.0002117156982421875, -1.9073486328125e-05, -0.0002139806456398219, -1.3709050108445808e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0025005340576171875, -3.814697265625e-06, -9.548663365421817e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.000196563865756616, -1.1563301086425781e-05, -6.4849853515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00464630126953125, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.002696055569686e-05, -7.62939453125e-06, -1.9550323486328125e-05, -2.2649765014648438e-06, -0.0006847381591796875, -7.05718994140625e-05, -7.05718994140625e-05, -4.076874756719917e-05, -0.0002939700789283961, -0.0011234264820814133, -0.6599750518798828, -0.0001734492543619126, -5.14984130859375e-05, -0.0002269744873046875, -3.814697265625e-06, -0.0006027424824424088, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002694129943847656, -1.1920928244535389e-07, -0.008175015449523926, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.0004367828369140625, -8.344646857949556e-07, -0.002460479736328125, 0.0, -9.34600830078125e-05, -0.0001049041748046875, -2.6702880859375e-05, -0.0009616613388061523, -5.960462772236497e-07, -0.0002422332763671875, -3.814697265625e-06, -0.000213623046875, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00020599365234375, -1.9073486328125e-06, -0.00013208389282226562, -0.00022351741790771484, -0.07437717914581299, -4.780292510986328e-05, -0.0002880096435546875, -9.1552734375e-05, -5.7220458984375e-05, -0.0001468658447265625, -1.71661376953125e-05, -0.0001220703125, -0.001461029052734375, -1.7881377516459906e-06, -0.0002497434616088867, -1.6689286894688848e-06, -0.007060527801513672, -5.841247457283316e-06, -1.1444091796875e-05, -0.00385284423828125, -0.000141143798828125, -0.010725021362304688, -0.0001049041748046875, -7.62939453125e-06, -1.9073486328125e-05, -0.00031948089599609375, 0.0, -0.0017727327067404985, -2.3841855067985307e-07, -0.0001087188720703125, -0.0010833740234375, -1.52587890625e-05, -0.0004281316651031375, -0.00013398226292338222, -0.0001735687255859375, -1.52587890625e-05, -0.004952430725097656, -3.576272320060525e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Of", "Light", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Light", " ", "Light", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyOfLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -6.181863343942581, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 6}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HolyOfLight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -2.09808349609375e-05, -7.629365427419543e-06, -5.317821025848389, -8.58306884765625e-06, -0.001728799077682197, -8.0108642578125e-05, -0.0002117156982421875, -1.9073486328125e-05, -0.0002139806456398219, -1.3709050108445808e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0025005340576171875, -3.814697265625e-06, -9.548663365421817e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.000196563865756616, -1.1563301086425781e-05, -6.4849853515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00464630126953125, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.002696055569686e-05, -7.62939453125e-06, -1.9550323486328125e-05, -2.2649765014648438e-06, -0.0006847381591796875, -7.05718994140625e-05, -7.05718994140625e-05, -4.076874756719917e-05, -0.0002939700789283961, -0.0011234264820814133, -0.7306032180786133, -0.0002193450927734375, -1.52587890625e-05, -0.0010978064965456724, 0.0, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0005353689193725586, -8.344646857949556e-07, -0.0073435306549072266, 0.0, -1.9073486328125e-06, -0.000118255615234375, -7.62939453125e-06, -1.71661376953125e-05, -0.000492095947265625, -1.311301275563892e-06, -0.0014553070068359375, 0.0, -0.00011444091796875, -0.0001010894775390625, -3.24249267578125e-05, -0.0009846687316894531, -7.152555099310121e-07, -0.000232696533203125, -5.7220458984375e-06, -0.0001983642578125, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.0002002716064453125, -1.9073486328125e-06, -0.00012826919555664062, -0.00021970272064208984, -0.07361030578613281, -4.589557647705078e-05, -0.0003032684326171875, -9.1552734375e-05, -5.53131103515625e-05, -0.0001430511474609375, -1.71661376953125e-05, -0.000125885009765625, -0.00141143798828125, -1.7881377516459906e-06, -0.0002516508102416992, -1.6689286894688848e-06, -0.007189035415649414, -5.841247457283316e-06, -1.1444091796875e-05, -0.004032135009765625, -0.000141143798828125, -0.010885238647460938, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, -0.00031757354736328125, 0.0, -0.0017525877337902784, -2.3841855067985307e-07, -0.000110626220703125, -0.0010509490966796875, -1.52587890625e-05, -0.0004249149060342461, -0.0001311216183239594, -0.000171661376953125, -7.62939453125e-06, -0.004947662353515625, -3.6954811548639555e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Of", "Light", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Light", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyOfLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -6.310217832917331, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Light Light"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 6}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HolyLight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -2.09808349609375e-05, -7.629365427419543e-06, -0.005023960955440998, -0.047288455069065094, -4.9591064453125e-05, -0.0003414154052734375, -3.4332275390625e-05, -0.00021326530259102583, -1.5377969248220325e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0033664703369140625, -1.9073486328125e-06, -9.298323857365176e-05, -2.1457672119140625e-06, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -0.00016116315964609385, -7.748603820800781e-06, -6.103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0041637420654296875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.0503786799963564e-05, -7.62939453125e-06, -1.9550323486328125e-05, -2.2649765014648438e-06, -0.000701904296875, -7.05718994140625e-05, -7.2479248046875e-05, -4.100715523236431e-05, -0.0002979039854835719, -0.0004865335358772427, -3.5330686569213867, -0.000310301489662379, -3.0517578125e-05, -0.0002155303955078125, -3.814697265625e-06, -0.0005979737034067512, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002675056457519531, -1.1920928244535389e-07, -0.008319973945617676, 0.0, 0.0, -5.14984130859375e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.0004425048828125, -8.344646857949556e-07, -0.0023899078369140625, 0.0, -9.1552734375e-05, -0.000102996826171875, -2.6702880859375e-05, -0.0009464025497436523, -7.152555099310121e-07, -0.0002460479736328125, -3.814697265625e-06, -0.000213623046875, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00020599365234375, -1.9073486328125e-06, -0.00013017654418945312, -0.00022161006927490234, -2.6690874099731445, -6.723403930664062e-05, -0.0008563995361328125, -0.0001125335693359375, -2.86102294921875e-05, -0.000339508056640625, -1.9073486328125e-05, -0.000102996826171875, -0.0015039443969726562, -2.145764938177308e-06, -0.00019156932830810547, -1.7881377516459906e-06, -0.0077741146087646484, -5.245203283266164e-06, -5.7220458984375e-06, -0.0028486251831054688, -9.34600830078125e-05, -0.007411956787109375, -9.5367431640625e-05, -7.62939453125e-06, -2.47955322265625e-05, -0.0002613067626953125, -1.1920928244535389e-07, -0.0016103676753118634, -2.3841855067985307e-07, -0.0001220703125, -0.0008640289306640625, -1.71661376953125e-05, -0.0004619755782186985, -0.00011884459672728553, -0.000186920166015625, -3.24249267578125e-05, -0.005122184753417969, -4.887569048150908e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Light", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Light", " ", "Light", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -6.3786162686793375, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 6}]}, {"id": "CHARACTER_CLASS", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HolyLight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -2.09808349609375e-05, -7.629365427419543e-06, -0.005023960955440998, -0.047288455069065094, -4.9591064453125e-05, -0.0003414154052734375, -3.4332275390625e-05, -0.00021326530259102583, -1.5377969248220325e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0033664703369140625, -1.9073486328125e-06, -9.298323857365176e-05, -2.1457672119140625e-06, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -0.00016116315964609385, -7.748603820800781e-06, -6.103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0041637420654296875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.0503786799963564e-05, -7.62939453125e-06, -1.9550323486328125e-05, -2.2649765014648438e-06, -0.000701904296875, -7.05718994140625e-05, -7.2479248046875e-05, -4.100715523236431e-05, -0.0002979039854835719, -0.0004865335358772427, -0.030336380004882812, -0.000324249267578125, -9.5367431640625e-06, -0.0009237175108864903, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0004990100860595703, -7.152555099310121e-07, -0.007398843765258789, 0.0, -1.9073486328125e-06, -0.0001125335693359375, -7.62939453125e-06, -1.52587890625e-05, -0.000492095947265625, -1.311301275563892e-06, -0.00144195556640625, 0.0, -0.0001125335693359375, -0.0001010894775390625, -3.24249267578125e-05, -0.0009654760360717773, -7.152555099310121e-07, -0.000240325927734375, -5.7220458984375e-06, -0.0002002716064453125, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.0002002716064453125, -1.9073486328125e-06, -0.00012636184692382812, -0.00021970272064208984, -0.07352149486541748, -4.589557647705078e-05, -0.0003070831298828125, -9.34600830078125e-05, -5.53131103515625e-05, -0.00014495849609375, -1.71661376953125e-05, -0.0001239776611328125, -0.00141143798828125, -1.7881377516459906e-06, -0.00026023387908935547, -1.6689286894688848e-06, -0.007172942161560059, -5.841247457283316e-06, -1.1444091796875e-05, -0.004093170166015625, -0.000141143798828125, -0.010885238647460938, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, -0.00031948089599609375, 0.0, -0.0017552102217450738, -2.3841855067985307e-07, -0.000110626220703125, -0.0010528564453125, -1.52587890625e-05, -0.00042348421993665397, -0.0001308832288486883, -0.000171661376953125, -7.62939453125e-06, -6.169495105743408, -1.0728830375228426e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Light", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Light", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "6", "<EOS>", 37, 125, "CHARACTER_CLASS", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), CHARACTER_CLASS)\n"}, {"score": -6.835826297777054, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Light Light"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 6}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HolyLighttarget_func", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -2.09808349609375e-05, -7.629365427419543e-06, -0.005023960955440998, -6.015124320983887, -5.531178612727672e-05, -0.00029754638671875, -2.09808349609375e-05, -1.1444091796875e-05, -0.00015091881505213678, -1.8596609152154997e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002712249755859375, -3.814697265625e-06, -0.00011456011998234317, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -0.00019561035151127726, -1.1563301086425781e-05, -6.4849853515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0045719146728515625, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9907753085135482e-05, -7.62939453125e-06, -1.9550323486328125e-05, -2.2649765014648438e-06, -0.000690460205078125, -7.2479248046875e-05, -7.2479248046875e-05, -4.160317621426657e-05, -0.0002939700789283961, -0.0011184182949364185, -0.6822748184204102, -0.00017380688223056495, -4.9591064453125e-05, -0.0002269744873046875, -3.814697265625e-06, -0.0006021467270329595, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002694129943847656, -1.1920928244535389e-07, -0.008167386054992676, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.0004367828369140625, -8.344646857949556e-07, -0.0024509429931640625, 0.0, -9.34600830078125e-05, -0.0001049041748046875, -2.6702880859375e-05, -0.0009616613388061523, -7.152555099310121e-07, -0.0002422332763671875, -3.814697265625e-06, -0.000213623046875, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00020599365234375, -1.9073486328125e-06, -0.00013208389282226562, -0.00022351741790771484, -0.07432186603546143, -4.780292510986328e-05, -0.0002918243408203125, -9.5367431640625e-05, -5.7220458984375e-05, -0.000148773193359375, -1.71661376953125e-05, -0.0001201629638671875, -0.0014829635620117188, -1.6689286894688848e-06, -0.0002592802047729492, -1.6689286894688848e-06, -0.007100105285644531, -5.841247457283316e-06, -1.1444091796875e-05, -0.0038709640502929688, -0.0001430511474609375, -0.010625839233398438, -0.0001049041748046875, -7.62939453125e-06, -2.09808349609375e-05, -0.00032138824462890625, 0.0, -0.001777739031240344, -2.3841855067985307e-07, -0.0001087188720703125, -0.00109100341796875, -1.52587890625e-05, -0.0004280125140212476, -0.00013422065239865333, -0.00017547607421875, -1.52587890625e-05, -0.004975318908691406, -3.576272320060525e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Light", "target_func", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Light", " ", "Light", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyLighttarget_func(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -6.859234108477807, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 6}]}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HolyLighttarget_func", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -2.09808349609375e-05, -7.629365427419543e-06, -0.005023960955440998, -6.015124320983887, -5.531178612727672e-05, -0.00029754638671875, -2.09808349609375e-05, -1.1444091796875e-05, -0.00015091881505213678, -1.8596609152154997e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002712249755859375, -3.814697265625e-06, -0.00011456011998234317, -2.1457672119140625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -0.00019561035151127726, -1.1563301086425781e-05, -6.4849853515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0045719146728515625, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9907753085135482e-05, -7.62939453125e-06, -1.9550323486328125e-05, -2.2649765014648438e-06, -0.000690460205078125, -7.2479248046875e-05, -7.2479248046875e-05, -4.160317621426657e-05, -0.0002939700789283961, -0.0011184182949364185, -0.7072420120239258, -0.00022125244140625, -1.52587890625e-05, -0.0010943518718704581, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0005372762680053711, -8.344646857949556e-07, -0.007337808609008789, 0.0, -1.9073486328125e-06, -0.000118255615234375, -7.62939453125e-06, -1.71661376953125e-05, -0.000492095947265625, -1.311301275563892e-06, -0.001453399658203125, 0.0, -0.00011444091796875, -0.0001010894775390625, -3.24249267578125e-05, -0.0009846687316894531, -7.152555099310121e-07, -0.000232696533203125, -5.7220458984375e-06, -0.0001983642578125, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.0002002716064453125, -1.9073486328125e-06, -0.00012826919555664062, -0.00021970272064208984, -0.0735626220703125, -4.589557647705078e-05, -0.00030517578125, -9.5367431640625e-05, -5.53131103515625e-05, -0.00014495849609375, -1.71661376953125e-05, -0.0001239776611328125, -0.001434326171875, -1.7881377516459906e-06, -0.0002611875534057617, -1.6689286894688848e-06, -0.007222890853881836, -5.841247457283316e-06, -1.1444091796875e-05, -0.004047393798828125, -0.0001430511474609375, -0.010782241821289062, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, -0.00032138824462890625, 0.0, -0.0017596206162124872, -2.3841855067985307e-07, -0.000110626220703125, -0.0010585784912109375, -1.52587890625e-05, -0.00042312670848332345, -0.00013124081306159496, -0.000171661376953125, -7.62939453125e-06, -0.0049648284912109375, -3.6954811548639555e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Light", "target_func", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Light", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyLighttarget_func(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"score": -7.3820757222626625, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 6}]}, {"id": "Selector", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "heal"}], "_type": "ClassDef", "name": "HolyLight", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -2.09808349609375e-05, -7.629365427419543e-06, -0.005023960955440998, -0.047288455069065094, -4.9591064453125e-05, -0.0003414154052734375, -3.4332275390625e-05, -0.00021326530259102583, -1.5377969248220325e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0033664703369140625, -1.9073486328125e-06, -9.298323857365176e-05, -2.1457672119140625e-06, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -0.00016116315964609385, -7.748603820800781e-06, -6.103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0041637420654296875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.0503786799963564e-05, -7.62939453125e-06, -1.9550323486328125e-05, -2.2649765014648438e-06, -0.000701904296875, -7.05718994140625e-05, -7.2479248046875e-05, -4.100715523236431e-05, -0.0002979039854835719, -0.0004865335358772427, -0.030336380004882812, -0.000324249267578125, -9.5367431640625e-06, -0.0009237175108864903, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0004990100860595703, -7.152555099310121e-07, -0.007398843765258789, 0.0, -1.9073486328125e-06, -0.0001125335693359375, -7.62939453125e-06, -1.52587890625e-05, -0.000492095947265625, -1.311301275563892e-06, -0.00144195556640625, 0.0, -0.0001125335693359375, -0.0001010894775390625, -3.24249267578125e-05, -0.0009654760360717773, -7.152555099310121e-07, -0.000240325927734375, -5.7220458984375e-06, -0.0002002716064453125, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.0002002716064453125, -1.9073486328125e-06, -0.00012636184692382812, -0.00021970272064208984, -0.07352149486541748, -4.589557647705078e-05, -0.0003070831298828125, -9.34600830078125e-05, -5.53131103515625e-05, -0.00014495849609375, -1.71661376953125e-05, -0.0001239776611328125, -0.00141143798828125, -1.7881377516459906e-06, -0.00026023387908935547, -1.6689286894688848e-06, -0.007172942161560059, -5.841247457283316e-06, -1.1444091796875e-05, -0.004093170166015625, -0.000141143798828125, -0.010885238647460938, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, -0.00031948089599609375, 0.0, -0.0017552102217450738, -2.3841855067985307e-07, -0.000110626220703125, -0.0010528564453125, -1.52587890625e-05, -0.00042348421993665397, -0.0001308832288486883, -0.000171661376953125, -7.62939453125e-06, -7.172955513000488, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Holy", "Light", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Light", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "6", "<EOS>", 37, 125, "Selector", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), Selector)\n"}, {"score": -22.249608993530273, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -1.1444091796875e-05, -22.249597549438477], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 49}
{"beams": [{"score": -0.6055772422929664, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template4", "hole0": "Holy Nova", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HolyNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.556489552167477e-06, -1.3828182090946939e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -2.002716064453125e-05, -5.7220458984375e-06, -0.0002613067626953125, -0.006977081298828125, -2.6702880859375e-05, -6.651875446550548e-05, -0.0006262828828766942, -1.9431096006883308e-05, 0.0, -0.00021419614495243877, -8.344646857949556e-07, -0.24240970611572266, -2.3841855067985307e-07, -0.0011615753173828125, -3.814697265625e-06, -9.489059448242188e-05, 0.0, -3.24249267578125e-05, -0.00025177001953125, 0.0, -3.266334533691406e-05, 0.0, 0.0, -2.288818359375e-05, 0.0, -3.814697265625e-06, -4.38690185546875e-05, -9.775161743164062e-06, -0.03271961212158203, -3.814697265625e-06, -0.0002346038818359375, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -8.440017700195312e-05, 0.0, -1.71661376953125e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0013027191162109375, -3.62396240234375e-05, -8.0108642578125e-05, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.00011932711640838534, -0.000640869140625, -6.103515625e-05, -4.00543212890625e-05, 0.0, -0.0006841421127319336, -1.490105023549404e-05, -0.00049591064453125, -0.000255584716796875, -0.000118255615234375, -1.1444091796875e-05, -2.6702880859375e-05, 0.0, -0.00030517578125, -1.966933996300213e-05, -9.584426879882812e-05, 0.0, -1.33514404296875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -0.0007152557373046875, 0.0, -0.0015430450439453125, -6.0796710386057384e-06, -0.0030221939086914062, 0.0, -0.0001748797803884372, 0.0, -6.4849853515625e-05, -0.0005054473876953125, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.1961669921875e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.01190495491027832, -8.344646857949556e-07, -0.006470680236816406, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0005779266357421875, -0.0002117156982421875, -0.004060044419020414, -2.3841855067985307e-07, -0.000274658203125, -9.5367431640625e-06, -0.000274658203125, 0.0, -0.06386852264404297, -5.7220458984375e-06, -9.918212890625e-05, 0.0, -0.00022137165069580078, -1.0013571227318607e-05, -0.11603069305419922, -1.9073486328125e-06, -0.027040481567382812, 0.0, -0.013841629028320312, -1.1920928244535389e-07, -0.0005731582641601562, -5.91278076171875e-05, -0.0001583099365234375, -0.0020580291748046875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -0.000202178955078125, -0.0002803802490234375, -3.814697265625e-06, -0.002097487449645996, -4.768370445162873e-07, -0.03615856170654297, -9.417532055522315e-06, -2.09808349609375e-05, -0.0003719329833984375, -1.71661376953125e-05, -0.0004100799560546875, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.0004673004150390625, -1.1920928244535389e-07, -0.008421897888183594, -2.622600959512056e-06, -7.62939453125e-05, -0.000789642333984375, -5.7220458984375e-06, -0.009935921058058739, 0.0, -0.0018444061279296875, -5.340576171875e-05, -0.000118255615234375, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score": -2.049952487208131, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Holy Nova", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HolyNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.556489552167477e-06, -1.3828182090946939e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -2.002716064453125e-05, -5.7220458984375e-06, -0.0002613067626953125, -0.006977081298828125, -2.6702880859375e-05, -6.651875446550548e-05, -0.0006262828828766942, -1.9431096006883308e-05, 0.0, -0.00021419614495243877, -8.344646857949556e-07, -1.6876144409179688, 0.0, -0.0003185272216796875, -3.814697265625e-06, -7.49826431274414e-05, 0.0, -2.6702880859375e-05, -0.0003070831298828125, 0.0, -2.8848648071289062e-05, 0.0, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -9.775161743164062e-06, -0.02921295166015625, -3.814697265625e-06, -0.000202178955078125, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -9.584426879882812e-05, 0.0, -1.9073486328125e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0012912750244140625, -3.4332275390625e-05, -8.0108642578125e-05, 0.0, -8.20159912109375e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001171813637483865, -0.0006580352783203125, -5.7220458984375e-05, -4.00543212890625e-05, 0.0, -0.0007013082504272461, -1.490105023549404e-05, -0.0004863739013671875, -0.000255584716796875, -0.000118255615234375, -1.1444091796875e-05, -2.6702880859375e-05, 0.0, -0.00030517578125, -1.966933996300213e-05, -9.584426879882812e-05, 0.0, -1.33514404296875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -0.00070953369140625, 0.0, -0.001544952392578125, -6.0796710386057384e-06, -0.0030117034912109375, 0.0, -0.0001748797803884372, 0.0, -6.4849853515625e-05, -0.0005054473876953125, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.1961669921875e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.011844873428344727, -8.344646857949556e-07, -0.006489753723144531, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0005779266357421875, -0.0002117156982421875, -0.004062190186232328, -2.3841855067985307e-07, -0.000274658203125, -9.5367431640625e-06, -0.000274658203125, 0.0, -0.06378173828125, -3.814697265625e-06, -0.000102996826171875, 0.0, -0.00022137165069580078, -1.0013571227318607e-05, -0.11931514739990234, -1.9073486328125e-06, -0.0268707275390625, 0.0, -0.01390838623046875, -1.1920928244535389e-07, -0.0005846023559570312, -5.91278076171875e-05, -0.00016021728515625, -0.0020618438720703125, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.33514404296875e-05, -0.0002002716064453125, -0.00028228759765625, -3.814697265625e-06, -0.0021022558212280273, -4.768370445162873e-07, -0.036545753479003906, -9.417532055522315e-06, -2.09808349609375e-05, -0.0003681182861328125, -1.71661376953125e-05, -0.0004100799560546875, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.0004673004150390625, -1.1920928244535389e-07, -0.008486747741699219, -2.622600959512056e-06, -7.62939453125e-05, -0.0007915496826171875, -5.7220458984375e-06, -0.009932432323694229, 0.0, -0.00183868408203125, -5.340576171875e-05, -0.000118255615234375, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score": -3.0178684538386378, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template4", "hole0": "Holy Nova", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HolyNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.556489552167477e-06, -1.3828182090946939e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -2.002716064453125e-05, -5.7220458984375e-06, -0.0002613067626953125, -0.006977081298828125, -2.6702880859375e-05, -6.651875446550548e-05, -0.0006262828828766942, -1.9431096006883308e-05, 0.0, -0.00021419614495243877, -8.344646857949556e-07, -0.24240970611572266, -2.3841855067985307e-07, -0.0011615753173828125, -3.814697265625e-06, -9.489059448242188e-05, 0.0, -3.24249267578125e-05, -0.00025177001953125, 0.0, -3.266334533691406e-05, 0.0, 0.0, -2.288818359375e-05, 0.0, -3.814697265625e-06, -4.38690185546875e-05, -9.775161743164062e-06, -0.03271961212158203, -3.814697265625e-06, -0.0002346038818359375, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -8.440017700195312e-05, 0.0, -1.71661376953125e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0013027191162109375, -3.62396240234375e-05, -8.0108642578125e-05, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.00011932711640838534, -0.000640869140625, -6.103515625e-05, -4.00543212890625e-05, 0.0, -0.0006841421127319336, -1.490105023549404e-05, -0.00049591064453125, -0.000255584716796875, -0.000118255615234375, -1.1444091796875e-05, -2.6702880859375e-05, 0.0, -0.00030517578125, -1.966933996300213e-05, -9.584426879882812e-05, 0.0, -1.33514404296875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -0.0007152557373046875, 0.0, -0.0015430450439453125, -6.0796710386057384e-06, -0.0030221939086914062, 0.0, -0.0001748797803884372, 0.0, -6.4849853515625e-05, -0.0005054473876953125, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.1961669921875e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.01190495491027832, -8.344646857949556e-07, -0.006470680236816406, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0005779266357421875, -0.0002117156982421875, -0.004060044419020414, -2.3841855067985307e-07, -0.000274658203125, -9.5367431640625e-06, -0.000274658203125, 0.0, -0.06386852264404297, -5.7220458984375e-06, -9.918212890625e-05, 0.0, -0.00022137165069580078, -1.0013571227318607e-05, -2.292954444885254, -1.1444091796875e-05, -0.00714111328125, -4.38690185546875e-05, -0.00146484375, -0.00102996826171875, -3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.08712100982666016, -1.9073486328125e-06, -0.047596096992492676, -3.576277322281385e-06, -0.19021141529083252, -1.1920928244535389e-07, -3.814697265625e-06, -0.00030517578125, -0.0001678466796875, -0.005044448655098677, -3.576278118089249e-07, -4.38690185546875e-05, -7.62939453125e-06, -0.00020694732666015625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Holy", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score": -3.2980805032211933, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template4", "hole0": "Holy Nova", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HolyNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.556489552167477e-06, -1.3828182090946939e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -2.002716064453125e-05, -5.7220458984375e-06, -0.0002613067626953125, -0.006977081298828125, -2.6702880859375e-05, -6.651875446550548e-05, -0.0006262828828766942, -1.9431096006883308e-05, 0.0, -0.00021419614495243877, -8.344646857949556e-07, -0.24240970611572266, -2.3841855067985307e-07, -0.0011615753173828125, -3.814697265625e-06, -9.489059448242188e-05, 0.0, -3.24249267578125e-05, -0.00025177001953125, 0.0, -3.266334533691406e-05, 0.0, 0.0, -2.288818359375e-05, 0.0, -3.814697265625e-06, -4.38690185546875e-05, -9.775161743164062e-06, -0.03271961212158203, -3.814697265625e-06, -0.0002346038818359375, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -8.440017700195312e-05, 0.0, -1.71661376953125e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0013027191162109375, -3.62396240234375e-05, -8.0108642578125e-05, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.00011932711640838534, -0.000640869140625, -6.103515625e-05, -4.00543212890625e-05, 0.0, -0.0006841421127319336, -1.490105023549404e-05, -0.00049591064453125, -0.000255584716796875, -0.000118255615234375, -1.1444091796875e-05, -2.6702880859375e-05, 0.0, -0.00030517578125, -1.966933996300213e-05, -9.584426879882812e-05, 0.0, -1.33514404296875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -0.0007152557373046875, 0.0, -0.0015430450439453125, -6.0796710386057384e-06, -0.0030221939086914062, 0.0, -0.0001748797803884372, 0.0, -6.4849853515625e-05, -0.0005054473876953125, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.1961669921875e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.01190495491027832, -8.344646857949556e-07, -0.006470680236816406, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0005779266357421875, -0.0002117156982421875, -0.004060044419020414, -2.3841855067985307e-07, -0.000274658203125, -9.5367431640625e-06, -0.000274658203125, 0.0, -2.9104413986206055, -1.9073486328125e-06, -6.29425048828125e-05, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -0.000156402587890625, -3.814697265625e-06, -0.02313995361328125, -3.814697265625e-06, -0.0003948211669921875, -5.7220458984375e-06, -0.0036449432373046875, -6.4373016357421875e-06, -0.008376836776733398, 0.0, -0.004289241041988134, -2.861022494471399e-06, -0.018629789352416992, 0.0, -1.71661376953125e-05, -0.0002231597900390625, -0.0003757476806640625, -0.007790825329720974, -1.1920928244535389e-07, -7.62939453125e-06, -3.814697265625e-06, -0.00015163421630859375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Holy", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.1843252952127585, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template4", "hole0": "Holy Nova", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HolyNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.556489552167477e-06, -1.3828182090946939e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -2.002716064453125e-05, -5.7220458984375e-06, -0.0002613067626953125, -0.006977081298828125, -2.6702880859375e-05, -6.651875446550548e-05, -0.0006262828828766942, -1.9431096006883308e-05, 0.0, -0.00021419614495243877, -8.344646857949556e-07, -3.8147058486938477, -7.62939453125e-06, -0.000255584716796875, -1.9073486328125e-06, -8.821487426757812e-05, 0.0, -4.1961669921875e-05, -0.00030517578125, 0.0, -3.075599670410156e-05, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -4.1961669921875e-05, -1.1682510375976562e-05, -0.037482261657714844, -3.814697265625e-06, -0.0002422332763671875, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -0.00011110305786132812, 0.0, -2.09808349609375e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0014295578002929688, -3.62396240234375e-05, -8.0108642578125e-05, 0.0, -8.20159912109375e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.00011956552043557167, -0.00067138671875, -6.103515625e-05, -4.00543212890625e-05, 0.0, -0.0007041692733764648, -1.5020257706055418e-05, -0.00048351287841796875, -0.000255584716796875, -0.000118255615234375, -1.33514404296875e-05, -2.6702880859375e-05, 0.0, -0.0003070831298828125, -1.9788545614574105e-05, -9.584426879882812e-05, 0.0, -1.33514404296875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -0.000713348388671875, 0.0, -0.0015430450439453125, -6.0796710386057384e-06, -0.0030126571655273438, 0.0, -0.0001748797803884372, 0.0, -6.4849853515625e-05, -0.0005092620849609375, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.1961669921875e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.011884927749633789, -8.344646857949556e-07, -0.006476402282714844, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0005779266357421875, -0.0002117156982421875, -0.004061951767653227, -2.3841855067985307e-07, -0.000274658203125, -9.5367431640625e-06, -0.000274658203125, 0.0, -0.06620502471923828, -3.814697265625e-06, -0.0001010894775390625, 0.0, -0.00022137165069580078, -1.0013571227318607e-05, -0.11609268188476562, -1.9073486328125e-06, -0.026723861694335938, 0.0, -0.013842582702636719, -1.1920928244535389e-07, -0.0005769729614257812, -5.91278076171875e-05, -0.00016021728515625, -0.002071380615234375, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.33514404296875e-05, -0.0002002716064453125, -0.00028228759765625, -3.814697265625e-06, -0.002101302146911621, -4.768370445162873e-07, -0.036373138427734375, -9.417532055522315e-06, -2.09808349609375e-05, -0.000370025634765625, -1.71661376953125e-05, -0.0004100799560546875, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.0004673004150390625, -1.1920928244535389e-07, -0.008457183837890625, -2.622600959512056e-06, -7.62939453125e-05, -0.000789642333984375, -5.7220458984375e-06, -0.00993407890200615, 0.0, -0.001842498779296875, -5.340576171875e-05, -0.000118255615234375, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score": -4.321398541064603, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template4", "hole0": "Holy Nova", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HolyNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.556489552167477e-06, -1.3828182090946939e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -2.002716064453125e-05, -5.7220458984375e-06, -0.0002613067626953125, -0.006977081298828125, -2.6702880859375e-05, -6.651875446550548e-05, -0.0006262828828766942, -1.9431096006883308e-05, 0.0, -0.00021419614495243877, -8.344646857949556e-07, -0.24240970611572266, -2.3841855067985307e-07, -0.0011615753173828125, -3.814697265625e-06, -9.489059448242188e-05, 0.0, -3.24249267578125e-05, -0.00025177001953125, 0.0, -3.266334533691406e-05, 0.0, 0.0, -2.288818359375e-05, 0.0, -3.814697265625e-06, -4.38690185546875e-05, -9.775161743164062e-06, -0.03271961212158203, -3.814697265625e-06, -0.0002346038818359375, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -8.440017700195312e-05, 0.0, -1.71661376953125e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0013027191162109375, -3.62396240234375e-05, -8.0108642578125e-05, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.00011932711640838534, -0.000640869140625, -6.103515625e-05, -4.00543212890625e-05, 0.0, -0.0006841421127319336, -1.490105023549404e-05, -0.00049591064453125, -0.000255584716796875, -0.000118255615234375, -1.1444091796875e-05, -2.6702880859375e-05, 0.0, -0.00030517578125, -1.966933996300213e-05, -9.584426879882812e-05, 0.0, -1.33514404296875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -0.0007152557373046875, 0.0, -0.0015430450439453125, -6.0796710386057384e-06, -0.0030221939086914062, 0.0, -0.0001748797803884372, 0.0, -6.4849853515625e-05, -0.0005054473876953125, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.1961669921875e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.01190495491027832, -8.344646857949556e-07, -0.006470680236816406, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0005779266357421875, -0.0002117156982421875, -0.004060044419020414, -2.3841855067985307e-07, -0.000274658203125, -9.5367431640625e-06, -0.000274658203125, 0.0, -0.06386852264404297, -5.7220458984375e-06, -9.918212890625e-05, 0.0, -0.00022137165069580078, -1.0013571227318607e-05, -0.11603069305419922, -1.9073486328125e-06, -3.6261768341064453, -0.000133514404296875, -3.814697265625e-06, -1.9073486328125e-06, -0.0029087066650390625, -4.768370445162873e-07, -0.0028030872344970703, 0.0, -0.000704166479408741, -1.33514404296875e-05, -9.5367431640625e-05, -0.0002536773681640625, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -2.288818359375e-05, -3.814697265625e-05, -0.0004940032958984375, -3.814697265625e-06, -0.0009064674377441406, -4.768370445162873e-07, -0.16204547882080078, -2.0861623852397315e-05, -1.52587890625e-05, -0.0001850128173828125, -4.76837158203125e-05, -0.000308990478515625, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -0.000629425048828125, -1.1920928244535389e-07, -0.010305047035217285, -2.145764938177308e-06, -6.103515625e-05, -0.000766754150390625, -5.7220458984375e-06, -0.009745936840772629, 0.0, -0.001918792724609375, -5.53131103515625e-05, -0.00011444091796875, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in game.other_player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score": -4.433314854495613, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Holy Nova", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HolyNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.556489552167477e-06, -1.3828182090946939e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -2.002716064453125e-05, -5.7220458984375e-06, -0.0002613067626953125, -0.006977081298828125, -2.6702880859375e-05, -6.651875446550548e-05, -0.0006262828828766942, -1.9431096006883308e-05, 0.0, -0.00021419614495243877, -8.344646857949556e-07, -1.6876144409179688, 0.0, -0.0003185272216796875, -3.814697265625e-06, -7.49826431274414e-05, 0.0, -2.6702880859375e-05, -0.0003070831298828125, 0.0, -2.8848648071289062e-05, 0.0, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -9.775161743164062e-06, -0.02921295166015625, -3.814697265625e-06, -0.000202178955078125, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -9.584426879882812e-05, 0.0, -1.9073486328125e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0012912750244140625, -3.4332275390625e-05, -8.0108642578125e-05, 0.0, -8.20159912109375e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001171813637483865, -0.0006580352783203125, -5.7220458984375e-05, -4.00543212890625e-05, 0.0, -0.0007013082504272461, -1.490105023549404e-05, -0.0004863739013671875, -0.000255584716796875, -0.000118255615234375, -1.1444091796875e-05, -2.6702880859375e-05, 0.0, -0.00030517578125, -1.966933996300213e-05, -9.584426879882812e-05, 0.0, -1.33514404296875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -0.00070953369140625, 0.0, -0.001544952392578125, -6.0796710386057384e-06, -0.0030117034912109375, 0.0, -0.0001748797803884372, 0.0, -6.4849853515625e-05, -0.0005054473876953125, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.1961669921875e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.011844873428344727, -8.344646857949556e-07, -0.006489753723144531, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0005779266357421875, -0.0002117156982421875, -0.004062190186232328, -2.3841855067985307e-07, -0.000274658203125, -9.5367431640625e-06, -0.000274658203125, 0.0, -0.06378173828125, -3.814697265625e-06, -0.000102996826171875, 0.0, -0.00022137165069580078, -1.0013571227318607e-05, -2.264645576477051, -1.1444091796875e-05, -0.007050514221191406, -4.1961669921875e-05, -0.0014629364013671875, -0.001018524169921875, -3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.089508056640625, -1.9073486328125e-06, -0.04807579517364502, -3.576277322281385e-06, -0.1904670000076294, -1.1920928244535389e-07, -3.814697265625e-06, -0.0003070831298828125, -0.0001678466796875, -0.005048501770943403, -3.576278118089249e-07, -4.38690185546875e-05, -7.62939453125e-06, -0.00020694732666015625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Holy", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.524601723351246, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template4", "hole0": "Holy Nova", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "extend", "value": {"id": "targets", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "current_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HolyNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.556489552167477e-06, -1.3828182090946939e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -2.002716064453125e-05, -5.7220458984375e-06, -0.0002613067626953125, -0.006977081298828125, -2.6702880859375e-05, -6.651875446550548e-05, -0.0006262828828766942, -1.9431096006883308e-05, 0.0, -0.00021419614495243877, -8.344646857949556e-07, -0.24240970611572266, -2.3841855067985307e-07, -0.0011615753173828125, -3.814697265625e-06, -9.489059448242188e-05, 0.0, -3.24249267578125e-05, -0.00025177001953125, 0.0, -3.266334533691406e-05, 0.0, 0.0, -2.288818359375e-05, 0.0, -3.814697265625e-06, -4.38690185546875e-05, -9.775161743164062e-06, -3.666217803955078, -1.1444091796875e-05, -0.000263214111328125, 0.0, -3.814697265625e-06, -0.0001239776611328125, -2.47955322265625e-05, -3.0517578125e-05, -3.814697265625e-06, -4.2438507080078125e-05, 0.0, -2.288818359375e-05, -2.3841855067985307e-07, -2.09808349609375e-05, -0.0008525848388671875, -1.71661376953125e-05, -0.0001087188720703125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -0.0001152739132521674, -0.003326416015625, -2.09808349609375e-05, -2.6702880859375e-05, -0.001049041748046875, -1.9073486328125e-06, -0.0007734298706054688, -2.0265579223632812e-06, -7.05718994140625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.000133514404296875, 0.0, -0.00032520294189453125, -2.0503786799963564e-05, -0.0002976655960083008, 0.0, -5.53131103515625e-05, -0.0002040863037109375, -5.7220458984375e-06, -3.814697265625e-05, -4.00543212890625e-05, -0.00046539306640625, 0.0, -0.0008392333984375, -9.655950634623878e-06, -0.0070372819900512695, 0.0, -0.00016331655206158757, 0.0, -0.0028753280639648438, -0.0001163482666015625, -1.52587890625e-05, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-05, -0.0024929046630859375, 0.0, -0.0012102127075195312, -1.9073486328125e-06, -0.003129124641418457, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.004253387451171875, -9.34600830078125e-05, -0.0002193450927734375, -9.5367431640625e-06, -0.00054931640625, -7.855891453800723e-05, -0.053316473960876465, -7.152555099310121e-07, -0.0017125606536865234, 0.0, -0.0018110275268554688, -5.53131103515625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0006799697875976562, -2.3841855067985307e-07, -0.0004520416259765625, -1.9073486328125e-05, -0.001262664794921875, -3.814697265625e-06, -0.0015573501586914062, -0.28662872314453125, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0008296966552734375, 0.0, -7.05718994140625e-05, -3.814697265625e-06, -0.022114872932434082, -1.0728830375228426e-06, -0.19701683521270752, -1.1920928244535389e-07, -1.9073486328125e-06, -0.000392913818359375, -0.00014495849609375, -0.005520198494195938, -4.768370445162873e-07, -0.0001430511474609375, -9.5367431640625e-06, -0.00032138824462890625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Holy", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.745722590240852, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Holy Nova", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HolyNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.556489552167477e-06, -1.3828182090946939e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -2.002716064453125e-05, -5.7220458984375e-06, -0.0002613067626953125, -0.006977081298828125, -2.6702880859375e-05, -6.651875446550548e-05, -0.0006262828828766942, -1.9431096006883308e-05, 0.0, -0.00021419614495243877, -8.344646857949556e-07, -1.6876144409179688, 0.0, -0.0003185272216796875, -3.814697265625e-06, -7.49826431274414e-05, 0.0, -2.6702880859375e-05, -0.0003070831298828125, 0.0, -2.8848648071289062e-05, 0.0, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -9.775161743164062e-06, -0.02921295166015625, -3.814697265625e-06, -0.000202178955078125, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -9.584426879882812e-05, 0.0, -1.9073486328125e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0012912750244140625, -3.4332275390625e-05, -8.0108642578125e-05, 0.0, -8.20159912109375e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001171813637483865, -0.0006580352783203125, -5.7220458984375e-05, -4.00543212890625e-05, 0.0, -0.0007013082504272461, -1.490105023549404e-05, -0.0004863739013671875, -0.000255584716796875, -0.000118255615234375, -1.1444091796875e-05, -2.6702880859375e-05, 0.0, -0.00030517578125, -1.966933996300213e-05, -9.584426879882812e-05, 0.0, -1.33514404296875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -0.00070953369140625, 0.0, -0.001544952392578125, -6.0796710386057384e-06, -0.0030117034912109375, 0.0, -0.0001748797803884372, 0.0, -6.4849853515625e-05, -0.0005054473876953125, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.1961669921875e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.011844873428344727, -8.344646857949556e-07, -0.006489753723144531, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0005779266357421875, -0.0002117156982421875, -0.004062190186232328, -2.3841855067985307e-07, -0.000274658203125, -9.5367431640625e-06, -0.000274658203125, 0.0, -2.9174909591674805, -1.9073486328125e-06, -6.29425048828125e-05, -8.7738037109375e-05, -1.9073486328125e-06, 0.0, -0.000156402587890625, -3.814697265625e-06, -0.0229644775390625, -3.814697265625e-06, -0.0003833770751953125, -5.7220458984375e-06, -0.003635406494140625, -6.4373016357421875e-06, -0.008385539054870605, 0.0, -0.004265160765498877, -2.861022494471399e-06, -0.018584012985229492, 0.0, -1.71661376953125e-05, -0.0002231597900390625, -0.0003757476806640625, -0.007820388302206993, -1.1920928244535389e-07, -7.62939453125e-06, -3.814697265625e-06, -0.0001506805419921875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Holy", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.907148171882589, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template4", "hole0": "Holy Nova", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HolyNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.556489552167477e-06, -1.3828182090946939e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -2.002716064453125e-05, -5.7220458984375e-06, -0.0002613067626953125, -0.006977081298828125, -2.6702880859375e-05, -6.651875446550548e-05, -0.0006262828828766942, -1.9431096006883308e-05, 0.0, -0.00021419614495243877, -8.344646857949556e-07, -0.24240970611572266, -2.3841855067985307e-07, -0.0011615753173828125, -3.814697265625e-06, -9.489059448242188e-05, 0.0, -3.24249267578125e-05, -0.00025177001953125, 0.0, -3.266334533691406e-05, 0.0, 0.0, -2.288818359375e-05, 0.0, -3.814697265625e-06, -4.38690185546875e-05, -9.775161743164062e-06, -0.03271961212158203, -3.814697265625e-06, -0.0002346038818359375, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -8.440017700195312e-05, 0.0, -1.71661376953125e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0013027191162109375, -3.62396240234375e-05, -8.0108642578125e-05, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.00011932711640838534, -0.000640869140625, -6.103515625e-05, -4.00543212890625e-05, 0.0, -0.0006841421127319336, -1.490105023549404e-05, -0.00049591064453125, -0.000255584716796875, -0.000118255615234375, -1.1444091796875e-05, -2.6702880859375e-05, 0.0, -0.00030517578125, -1.966933996300213e-05, -9.584426879882812e-05, 0.0, -1.33514404296875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -0.0007152557373046875, 0.0, -0.0015430450439453125, -6.0796710386057384e-06, -0.0030221939086914062, 0.0, -0.0001748797803884372, 0.0, -6.4849853515625e-05, -0.0005054473876953125, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.1961669921875e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.01190495491027832, -8.344646857949556e-07, -0.006470680236816406, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0005779266357421875, -0.0002117156982421875, -0.004060044419020414, -2.3841855067985307e-07, -0.000274658203125, -9.5367431640625e-06, -0.000274658203125, 0.0, -0.06386852264404297, -5.7220458984375e-06, -9.918212890625e-05, 0.0, -0.00022137165069580078, -1.0013571227318607e-05, -2.292954444885254, -1.1444091796875e-05, -0.00714111328125, -4.38690185546875e-05, -0.00146484375, -0.00102996826171875, -3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.08712100982666016, -1.9073486328125e-06, -0.047596096992492676, -3.576277322281385e-06, -2.033140182495117, -2.2292137145996094e-05, -1.1444091796875e-05, -0.0007305145263671875, -1.1444091796875e-05, -0.000293731689453125, -3.814697265625e-06, -0.0001239776611328125, 0.0, -0.0011138916015625, -1.1920928244535389e-07, -0.03214418888092041, -1.5497195136049413e-06, -0.0001621246337890625, -0.0003490447998046875, -5.7220458984375e-06, -0.015436870977282524, 0.0, -0.0015125274658203125, -7.2479248046875e-05, -0.0001316070556640625, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in targets:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score": -5.441930359898279, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template4", "hole0": "Holy Nova", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"id": "minion", "_type": "Name"}}, "args": [{"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HolyNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.556489552167477e-06, -1.3828182090946939e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -2.002716064453125e-05, -5.7220458984375e-06, -0.0002613067626953125, -0.006977081298828125, -2.6702880859375e-05, -6.651875446550548e-05, -0.0006262828828766942, -1.9431096006883308e-05, 0.0, -0.00021419614495243877, -8.344646857949556e-07, -0.24240970611572266, -2.3841855067985307e-07, -0.0011615753173828125, -3.814697265625e-06, -9.489059448242188e-05, 0.0, -3.24249267578125e-05, -0.00025177001953125, 0.0, -3.266334533691406e-05, 0.0, 0.0, -2.288818359375e-05, 0.0, -3.814697265625e-06, -4.38690185546875e-05, -9.775161743164062e-06, -0.03271961212158203, -3.814697265625e-06, -0.0002346038818359375, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -8.440017700195312e-05, 0.0, -1.71661376953125e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0013027191162109375, -3.62396240234375e-05, -8.0108642578125e-05, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.00011932711640838534, -0.000640869140625, -6.103515625e-05, -4.00543212890625e-05, 0.0, -0.0006841421127319336, -1.490105023549404e-05, -0.00049591064453125, -0.000255584716796875, -0.000118255615234375, -1.1444091796875e-05, -2.6702880859375e-05, 0.0, -0.00030517578125, -1.966933996300213e-05, -9.584426879882812e-05, 0.0, -1.33514404296875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -0.0007152557373046875, 0.0, -0.0015430450439453125, -6.0796710386057384e-06, -0.0030221939086914062, 0.0, -0.0001748797803884372, 0.0, -6.4849853515625e-05, -0.0005054473876953125, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.1961669921875e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.01190495491027832, -8.344646857949556e-07, -0.006470680236816406, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0005779266357421875, -0.0002117156982421875, -0.004060044419020414, -2.3841855067985307e-07, -0.000274658203125, -9.5367431640625e-06, -0.000274658203125, 0.0, -0.06386852264404297, -5.7220458984375e-06, -9.918212890625e-05, 0.0, -0.00022137165069580078, -1.0013571227318607e-05, -0.11603069305419922, -1.9073486328125e-06, -0.027040481567382812, 0.0, -0.013841629028320312, -1.1920928244535389e-07, -0.0005731582641601562, -5.91278076171875e-05, -0.0001583099365234375, -0.0020580291748046875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -0.000202178955078125, -0.0002803802490234375, -3.814697265625e-06, -0.002097487449645996, -4.768370445162873e-07, -4.876970291137695, 0.0, -3.24249267578125e-05, -0.011608123779296875, -9.5367431640625e-06, -0.006464958190917969, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Holy", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.die(self)\n"}, {"score": -5.576361483626457, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template4", "hole0": "Holy Nova", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 5}]}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"id": "player", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HolyNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.556489552167477e-06, -1.3828182090946939e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -2.002716064453125e-05, -5.7220458984375e-06, -0.0002613067626953125, -0.006977081298828125, -2.6702880859375e-05, -6.651875446550548e-05, -0.0006262828828766942, -1.9431096006883308e-05, 0.0, -0.00021419614495243877, -8.344646857949556e-07, -0.24240970611572266, -2.3841855067985307e-07, -0.0011615753173828125, -3.814697265625e-06, -9.489059448242188e-05, 0.0, -3.24249267578125e-05, -0.00025177001953125, 0.0, -3.266334533691406e-05, 0.0, 0.0, -2.288818359375e-05, 0.0, -3.814697265625e-06, -4.38690185546875e-05, -9.775161743164062e-06, -0.03271961212158203, -3.814697265625e-06, -0.0002346038818359375, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -8.440017700195312e-05, 0.0, -1.71661376953125e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0013027191162109375, -3.62396240234375e-05, -8.0108642578125e-05, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.00011932711640838534, -0.000640869140625, -6.103515625e-05, -4.00543212890625e-05, 0.0, -0.0006841421127319336, -1.490105023549404e-05, -0.00049591064453125, -0.000255584716796875, -0.000118255615234375, -1.1444091796875e-05, -2.6702880859375e-05, 0.0, -0.00030517578125, -1.966933996300213e-05, -9.584426879882812e-05, 0.0, -1.33514404296875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -0.0007152557373046875, 0.0, -0.0015430450439453125, -6.0796710386057384e-06, -0.0030221939086914062, 0.0, -0.0001748797803884372, 0.0, -6.4849853515625e-05, -0.0005054473876953125, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.1961669921875e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.01190495491027832, -8.344646857949556e-07, -0.006470680236816406, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0005779266357421875, -0.0002117156982421875, -0.004060044419020414, -2.3841855067985307e-07, -0.000274658203125, -9.5367431640625e-06, -0.000274658203125, 0.0, -0.06386852264404297, -5.7220458984375e-06, -9.918212890625e-05, 0.0, -0.00022137165069580078, -1.0013571227318607e-05, -0.11603069305419922, -1.9073486328125e-06, -0.027040481567382812, 0.0, -0.013841629028320312, -1.1920928244535389e-07, -0.0005731582641601562, -5.91278076171875e-05, -0.0001583099365234375, -0.0020580291748046875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -0.000202178955078125, -0.0002803802490234375, -3.814697265625e-06, -0.002097487449645996, -4.768370445162873e-07, -0.03615856170654297, -9.417532055522315e-06, -2.09808349609375e-05, -0.0003719329833984375, -1.71661376953125e-05, -0.0004100799560546875, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.0004673004150390625, -1.1920928244535389e-07, -0.008421897888183594, -2.622600959512056e-06, -7.62939453125e-05, -0.000789642333984375, -5.7220458984375e-06, -4.980603218078613, -4.768370445162873e-07, -0.0019130706787109375, -5.7220458984375e-06, -0.000209808349609375, -5.841255187988281e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "5", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(5), self)\n"}, {"score": -5.771809629785643, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "Holy Nova", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"id": "player", "_type": "Name"}}, "args": [{"_type": "Num", "n": 2}]}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HolyNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.556489552167477e-06, -1.3828182090946939e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -2.002716064453125e-05, -5.7220458984375e-06, -0.0002613067626953125, -0.006977081298828125, -2.6702880859375e-05, -6.651875446550548e-05, -0.0006262828828766942, -1.9431096006883308e-05, 0.0, -0.00021419614495243877, -8.344646857949556e-07, -1.6876144409179688, 0.0, -0.0003185272216796875, -3.814697265625e-06, -7.49826431274414e-05, 0.0, -2.6702880859375e-05, -0.0003070831298828125, 0.0, -2.8848648071289062e-05, 0.0, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -4.76837158203125e-05, -9.775161743164062e-06, -0.02921295166015625, -3.814697265625e-06, -0.000202178955078125, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -9.584426879882812e-05, 0.0, -1.9073486328125e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0012912750244140625, -3.4332275390625e-05, -8.0108642578125e-05, 0.0, -8.20159912109375e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001171813637483865, -0.0006580352783203125, -5.7220458984375e-05, -4.00543212890625e-05, 0.0, -0.0007013082504272461, -1.490105023549404e-05, -0.0004863739013671875, -0.000255584716796875, -0.000118255615234375, -1.1444091796875e-05, -2.6702880859375e-05, 0.0, -0.00030517578125, -1.966933996300213e-05, -9.584426879882812e-05, 0.0, -1.33514404296875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -0.00070953369140625, 0.0, -0.001544952392578125, -6.0796710386057384e-06, -0.0030117034912109375, 0.0, -0.0001748797803884372, 0.0, -6.4849853515625e-05, -0.0005054473876953125, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.1961669921875e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.011844873428344727, -8.344646857949556e-07, -0.006489753723144531, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0005779266357421875, -0.0002117156982421875, -0.004062190186232328, -2.3841855067985307e-07, -0.000274658203125, -9.5367431640625e-06, -0.000274658203125, 0.0, -0.06378173828125, -3.814697265625e-06, -0.000102996826171875, 0.0, -0.00022137165069580078, -1.0013571227318607e-05, -0.11931514739990234, -1.9073486328125e-06, -3.6324214935302734, -0.0001316070556640625, -3.814697265625e-06, -1.9073486328125e-06, -0.0029144287109375, -4.768370445162873e-07, -0.002786874771118164, 0.0, -0.0007017822354100645, -1.33514404296875e-05, -9.5367431640625e-05, -0.000255584716796875, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -2.288818359375e-05, -3.814697265625e-05, -0.0004940032958984375, -3.814697265625e-06, -0.0009064674377441406, -4.768370445162873e-07, -0.16217422485351562, -2.0861623852397315e-05, -1.52587890625e-05, -0.00018310546875, -4.76837158203125e-05, -0.000308990478515625, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -0.0006275177001953125, -1.1920928244535389e-07, -0.010326027870178223, -2.145764938177308e-06, -6.103515625e-05, -0.000766754150390625, -5.7220458984375e-06, -0.009767759591341019, 0.0, -0.0019130706787109375, -5.53131103515625e-05, -0.00011444091796875, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in game.other_player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"score": -6.440359657526102, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template4", "hole0": "Holy Nova", "hole1": 5}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"id": "minion", "_type": "Name"}}, "args": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}]}}], "_type": "For", "target": {"id": "minion", "_type": "Name"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"id": "copy", "_type": "Name"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "HolyNova", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.556489552167477e-06, -1.3828182090946939e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -2.002716064453125e-05, -5.7220458984375e-06, -0.0002613067626953125, -0.006977081298828125, -2.6702880859375e-05, -6.651875446550548e-05, -0.0006262828828766942, -1.9431096006883308e-05, 0.0, -0.00021419614495243877, -8.344646857949556e-07, -0.24240970611572266, -2.3841855067985307e-07, -0.0011615753173828125, -3.814697265625e-06, -9.489059448242188e-05, 0.0, -3.24249267578125e-05, -0.00025177001953125, 0.0, -3.266334533691406e-05, 0.0, 0.0, -2.288818359375e-05, 0.0, -3.814697265625e-06, -4.38690185546875e-05, -9.775161743164062e-06, -6.15456485748291, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.9669532775878906e-05, 0.0, -2.86102294921875e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.000904083251953125, -4.9591064453125e-05, -9.5367431640625e-05, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -0.0001243336300831288, -0.000415802001953125, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.001219034194946289, -2.2530381102114916e-05, -0.0007810592651367188, -0.000354766845703125, -0.0001163482666015625, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -0.000431060791015625, -1.490105023549404e-05, -0.0001055002212524414, 0.0, -1.33514404296875e-05, -4.00543212890625e-05, -1.9073486328125e-06, -3.814697265625e-05, -6.4849853515625e-05, -0.00066375732421875, 0.0, -0.0015811920166015625, -6.0796710386057384e-06, -0.003185868263244629, 0.0, -0.0001773831172613427, 0.0, -6.4849853515625e-05, -0.0002613067626953125, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.71661376953125e-05, -3.62396240234375e-05, -0.0001506805419921875, -1.9073486328125e-06, -0.009086966514587402, -9.536738616588991e-07, -0.0074214935302734375, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0005664825439453125, -0.000209808349609375, -0.0041142841801047325, -2.3841855067985307e-07, -0.0002651214599609375, -9.5367431640625e-06, -0.000270843505859375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Holy", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"score": -22.829669952392578, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -22.829601287841797], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 50}
{"beams": [{"score": -1.3579905677551807, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "HolySmite", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001323135511483997, -3.373566141817719e-05, -1.1086449376307428e-05, -1.9073486328125e-05, -3.62396240234375e-05, -7.62939453125e-06, -5.102156865177676e-05, -5.2690502343466505e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0038042068481445312, -5.7220458984375e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003368842590134591, -6.079673767089844e-06, -5.340576171875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0002193450927734375, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.152555099310121e-07, 0.0, -0.00035858154296875, 0.0, -0.001354217529296875, -3.62396240234375e-05, -0.000125885009765625, -2.169608706026338e-05, -5.602836608886719e-05, -0.00017522329289931804, -1.1444091796875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.0728581401053816e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.000408172607421875, -0.00063323974609375, -7.62939453125e-06, -0.0002884864807128906, -4.52994936495088e-06, -1.2839462757110596, -9.5367431640625e-06, -1.9073486328125e-05, -7.43865966796875e-05, -4.38690185546875e-05, -3.4332275390625e-05, -0.000476837158203125, -5.960462772236497e-07, -0.002910614013671875, 0.0, -0.0006961822509765625, -1.9073486328125e-05, -1.1444091796875e-05, -0.00016236305236816406, 0.0, -0.00030517578125, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.62396240234375e-05, -3.24249267578125e-05, -9.5367431640625e-06, -8.20159912109375e-05, -3.814697265625e-06, -0.007451057434082031, -1.71661376953125e-05, -0.000133514404296875, -3.62396240234375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -4.1961669921875e-05, -2.3841855067985307e-07, -3.814697265625e-05, -2.3841855067985307e-07, -0.0002849102020263672, -7.62939453125e-06, -1.9073486328125e-06, -0.00029754638671875, -3.62396240234375e-05, -0.05174097418785095, -4.768360213347478e-06, -1.52587890625e-05, 0.0, -0.000370025634765625, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Holy", "Smite", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Smite", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -1.44621140248735, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "HolySmite", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001323135511483997, -3.373566141817719e-05, -1.1086449376307428e-05, -1.9073486328125e-05, -3.62396240234375e-05, -7.62939453125e-06, -5.102156865177676e-05, -5.2690502343466505e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0038042068481445312, -5.7220458984375e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003368842590134591, -6.079673767089844e-06, -5.340576171875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0002193450927734375, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.152555099310121e-07, 0.0, -0.00035858154296875, 0.0, -0.001354217529296875, -3.62396240234375e-05, -0.000125885009765625, -2.169608706026338e-05, -5.602836608886719e-05, -0.00017522329289931804, -1.1444091796875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.0728581401053816e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.000408172607421875, -0.00063323974609375, -7.62939453125e-06, -0.0002884864807128906, -4.52994936495088e-06, -1.3758137226104736, 0.0, -4.9591064453125e-05, -5.91278076171875e-05, -2.09808349609375e-05, -6.29425048828125e-05, -0.00025177001953125, -3.576278118089249e-07, -0.0011882781982421875, 0.0, -0.0003414154052734375, -1.52587890625e-05, -9.5367431640625e-06, -0.00014698505401611328, 0.0, -0.000347137451171875, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.4332275390625e-05, -4.57763671875e-05, -9.5367431640625e-06, -8.96453857421875e-05, -3.814697265625e-06, -0.0061779022216796875, -1.9073486328125e-05, -0.0001430511474609375, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.4332275390625e-05, -4.57763671875e-05, -4.1961669921875e-05, -2.3841855067985307e-07, -3.814697265625e-05, -2.3841855067985307e-07, -0.00028502941131591797, -7.62939453125e-06, -1.9073486328125e-06, -0.00029754638671875, -3.62396240234375e-05, -0.05160984396934509, -4.768360213347478e-06, -1.52587890625e-05, 0.0, -0.00036907196044921875, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Holy", "Smite", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Smite", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -1.6839593101257861, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "HolySmite", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001323135511483997, -3.373566141817719e-05, -1.1086449376307428e-05, -1.9073486328125e-05, -3.62396240234375e-05, -7.62939453125e-06, -5.102156865177676e-05, -5.2690502343466505e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0038042068481445312, -5.7220458984375e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003368842590134591, -6.079673767089844e-06, -5.340576171875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0002193450927734375, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.152555099310121e-07, 0.0, -0.00035858154296875, 0.0, -0.001354217529296875, -3.62396240234375e-05, -0.000125885009765625, -2.169608706026338e-05, -5.602836608886719e-05, -0.00017522329289931804, -1.1444091796875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.0728581401053816e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.000408172607421875, -0.00063323974609375, -7.62939453125e-06, -0.0002884864807128906, -4.52994936495088e-06, -1.6111118793487549, 0.0, -8.20159912109375e-05, -2.86102294921875e-05, -4.1961669921875e-05, -5.7220458984375e-05, -0.0002079010009765625, -5.960462772236497e-07, -0.0031681060791015625, 0.0, -0.000431060791015625, -1.71661376953125e-05, -1.33514404296875e-05, -0.00015842914581298828, 0.0, -0.00031280517578125, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -4.1961669921875e-05, -9.5367431640625e-06, -9.1552734375e-05, -3.814697265625e-06, -0.0065212249755859375, -1.9073486328125e-05, -0.0001392364501953125, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.62396240234375e-05, -4.57763671875e-05, -4.1961669921875e-05, -2.3841855067985307e-07, -3.814697265625e-05, -2.3841855067985307e-07, -0.00028312206268310547, -7.62939453125e-06, -1.9073486328125e-06, -0.00029754638671875, -3.62396240234375e-05, -0.051701873540878296, -4.768360213347478e-06, -1.52587890625e-05, 0.0, -0.00036907196044921875, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Holy", "Smite", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Smite", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -2.1595259357210637, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "HolySmite", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001323135511483997, -3.373566141817719e-05, -1.1086449376307428e-05, -1.9073486328125e-05, -3.62396240234375e-05, -7.62939453125e-06, -5.102156865177676e-05, -5.2690502343466505e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0038042068481445312, -5.7220458984375e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003368842590134591, -6.079673767089844e-06, -5.340576171875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0002193450927734375, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.152555099310121e-07, 0.0, -0.00035858154296875, 0.0, -0.001354217529296875, -3.62396240234375e-05, -0.000125885009765625, -2.169608706026338e-05, -5.602836608886719e-05, -0.00017522329289931804, -1.1444091796875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.0728581401053816e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.000408172607421875, -0.00063323974609375, -7.62939453125e-06, -0.0002884864807128906, -4.52994936495088e-06, -2.0894577503204346, 0.0, -6.103515625e-05, -7.2479248046875e-05, -3.24249267578125e-05, -0.000133514404296875, -0.0001621246337890625, -1.1920928244535389e-07, -0.0016956329345703125, 0.0, -0.0001354217529296875, -1.1444091796875e-05, -1.1444091796875e-05, -0.00014507770538330078, 0.0, -0.0003509521484375, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, -6.103515625e-05, -9.5367431640625e-06, -9.918212890625e-05, -3.814697265625e-06, -0.005580902099609375, -2.09808349609375e-05, -0.000148773193359375, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.4332275390625e-05, -4.38690185546875e-05, -4.1961669921875e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -1.1920928244535389e-07, -0.00028502941131591797, -7.62939453125e-06, -1.9073486328125e-06, -0.00029754638671875, -3.62396240234375e-05, -0.05153343081474304, -4.768360213347478e-06, -1.52587890625e-05, 0.0, -0.000370025634765625, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Holy", "Smite", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Smite", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -2.481105749665474, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "HolySmite", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001323135511483997, -3.373566141817719e-05, -1.1086449376307428e-05, -1.9073486328125e-05, -3.62396240234375e-05, -7.62939453125e-06, -5.102156865177676e-05, -5.2690502343466505e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0038042068481445312, -5.7220458984375e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003368842590134591, -6.079673767089844e-06, -5.340576171875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0002193450927734375, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.152555099310121e-07, 0.0, -0.00035858154296875, 0.0, -0.001354217529296875, -3.62396240234375e-05, -0.000125885009765625, -2.169608706026338e-05, -5.602836608886719e-05, -0.00017522329289931804, -1.1444091796875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.0728581401053816e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.000408172607421875, -0.00063323974609375, -7.62939453125e-06, -0.0002884864807128906, -4.52994936495088e-06, -2.4074461460113525, -5.006777428206988e-06, -3.62396240234375e-05, -0.0002918243408203125, -1.33514404296875e-05, -4.9591064453125e-05, -0.0001850128173828125, -3.576278118089249e-07, -0.0042591094970703125, 0.0, -0.0008411407470703125, -1.52587890625e-05, -9.5367431640625e-06, -0.00016236305236816406, 0.0, -0.0003337860107421875, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.24249267578125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0057239532470703125, -1.9073486328125e-05, -0.000141143798828125, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -4.1961669921875e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -2.3841855067985307e-07, -0.00028312206268310547, -7.62939453125e-06, -1.9073486328125e-06, -0.00029754638671875, -3.62396240234375e-05, -0.051608890295028687, -4.768360213347478e-06, -1.52587890625e-05, 0.0, -0.00036907196044921875, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Holy", "Smite", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Smite", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -3.864091579984816, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "HolySmite", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001323135511483997, -3.373566141817719e-05, -1.1086449376307428e-05, -1.9073486328125e-05, -3.62396240234375e-05, -7.62939453125e-06, -5.102156865177676e-05, -5.2690502343466505e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0038042068481445312, -5.7220458984375e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003368842590134591, -6.079673767089844e-06, -5.340576171875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0002193450927734375, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.152555099310121e-07, 0.0, -0.00035858154296875, 0.0, -0.001354217529296875, -3.62396240234375e-05, -0.000125885009765625, -2.169608706026338e-05, -5.602836608886719e-05, -0.00017522329289931804, -1.1444091796875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.0728581401053816e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.000408172607421875, -0.00063323974609375, -7.62939453125e-06, -0.0002884864807128906, -4.52994936495088e-06, -3.791597604751587, -5.7220458984375e-06, -1.71661376953125e-05, -4.38690185546875e-05, -5.14984130859375e-05, -0.000164031982421875, -0.000133514404296875, -9.536738616588991e-07, -0.0029850006103515625, 0.0, -0.0004634857177734375, -1.9073486328125e-05, -1.33514404296875e-05, -0.00015854835510253906, 0.0, -0.0003299713134765625, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.24249267578125e-05, -4.1961669921875e-05, -9.5367431640625e-06, -9.1552734375e-05, -3.814697265625e-06, -0.006264686584472656, -1.9073486328125e-05, -0.0001373291015625, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.62396240234375e-05, -4.57763671875e-05, -4.1961669921875e-05, -2.3841855067985307e-07, -3.814697265625e-05, -2.3841855067985307e-07, -0.00028502941131591797, -7.62939453125e-06, -1.9073486328125e-06, -0.00029754638671875, -3.62396240234375e-05, -0.051735132932662964, -4.768360213347478e-06, -1.52587890625e-05, 0.0, -0.000370025634765625, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Holy", "Smite", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Smite", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -3.9128413844818084, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "HolySmite", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001323135511483997, -3.373566141817719e-05, -1.1086449376307428e-05, -1.9073486328125e-05, -3.62396240234375e-05, -7.62939453125e-06, -5.102156865177676e-05, -5.2690502343466505e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0038042068481445312, -5.7220458984375e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003368842590134591, -6.079673767089844e-06, -5.340576171875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0002193450927734375, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.152555099310121e-07, 0.0, -0.00035858154296875, 0.0, -0.001354217529296875, -3.62396240234375e-05, -0.000125885009765625, -2.169608706026338e-05, -5.602836608886719e-05, -0.00017522329289931804, -1.1444091796875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.0728581401053816e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.000408172607421875, -0.00063323974609375, -7.62939453125e-06, -0.0002884864807128906, -4.52994936495088e-06, -3.84130597114563, 0.0, -4.76837158203125e-05, -4.57763671875e-05, -4.1961669921875e-05, -0.00012969970703125, -0.00018131732940673828, -7.152555099310121e-07, -0.002346038818359375, 0.0, -0.0003509521484375, -1.71661376953125e-05, -9.5367431640625e-06, -0.00014901161193847656, 0.0, -0.0003223419189453125, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -9.5367431640625e-06, -9.5367431640625e-05, -3.814697265625e-06, -0.0060825347900390625, -1.9073486328125e-05, -0.0001430511474609375, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.4332275390625e-05, -4.57763671875e-05, -4.1961669921875e-05, -2.3841855067985307e-07, -3.814697265625e-05, -2.3841855067985307e-07, -0.00028312206268310547, -7.62939453125e-06, -1.9073486328125e-06, -0.00029754638671875, -3.62396240234375e-05, -0.051689356565475464, -4.768360213347478e-06, -1.52587890625e-05, 0.0, -0.0003681182861328125, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Holy", "Smite", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Smite", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"score": -4.298802589257285, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "HolySmite", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001323135511483997, -3.373566141817719e-05, -1.1086449376307428e-05, -1.9073486328125e-05, -3.62396240234375e-05, -7.62939453125e-06, -5.102156865177676e-05, -5.2690502343466505e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0038042068481445312, -5.7220458984375e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003368842590134591, -6.079673767089844e-06, -5.340576171875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0002193450927734375, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.152555099310121e-07, 0.0, -0.00035858154296875, 0.0, -0.001354217529296875, -3.62396240234375e-05, -0.000125885009765625, -2.169608706026338e-05, -5.602836608886719e-05, -0.00017522329289931804, -1.1444091796875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.0728581401053816e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.000408172607421875, -0.00063323974609375, -7.62939453125e-06, -0.0002884864807128906, -4.52994936495088e-06, -1.2839462757110596, -9.5367431640625e-06, -1.9073486328125e-05, -7.43865966796875e-05, -4.38690185546875e-05, -3.4332275390625e-05, -0.000476837158203125, -5.960462772236497e-07, -0.002910614013671875, 0.0, -0.0006961822509765625, -1.9073486328125e-05, -1.1444091796875e-05, -0.00016236305236816406, 0.0, -0.00030517578125, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.62396240234375e-05, -3.24249267578125e-05, -9.5367431640625e-06, -8.20159912109375e-05, -3.814697265625e-06, -0.007451057434082031, -1.71661376953125e-05, -0.000133514404296875, -3.62396240234375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -4.1961669921875e-05, -2.3841855067985307e-07, -3.814697265625e-05, -2.3841855067985307e-07, -0.0002849102020263672, -7.62939453125e-06, -1.9073486328125e-06, -0.00029754638671875, -3.62396240234375e-05, -2.9918830394744873, -2.50339189733495e-06, -0.0001888275146484375, -1.9073486328125e-06, -0.0008668899536132812, 0.0], "choice_history": [55, 124, 221, 63, 103, "Holy", "Smite", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Smite", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score": -4.38974735625569, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 1}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "HolySmite", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001323135511483997, -3.373566141817719e-05, -1.1086449376307428e-05, -1.9073486328125e-05, -3.62396240234375e-05, -7.62939453125e-06, -5.102156865177676e-05, -5.2690502343466505e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0038042068481445312, -5.7220458984375e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003368842590134591, -6.079673767089844e-06, -5.340576171875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0002193450927734375, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.152555099310121e-07, 0.0, -0.00035858154296875, 0.0, -0.001354217529296875, -3.62396240234375e-05, -0.000125885009765625, -2.169608706026338e-05, -5.602836608886719e-05, -0.00017522329289931804, -1.1444091796875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.0728581401053816e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.000408172607421875, -0.00063323974609375, -7.62939453125e-06, -0.0002884864807128906, -4.52994936495088e-06, -1.3758137226104736, 0.0, -4.9591064453125e-05, -5.91278076171875e-05, -2.09808349609375e-05, -6.29425048828125e-05, -0.00025177001953125, -3.576278118089249e-07, -0.0011882781982421875, 0.0, -0.0003414154052734375, -1.52587890625e-05, -9.5367431640625e-06, -0.00014698505401611328, 0.0, -0.000347137451171875, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.4332275390625e-05, -4.57763671875e-05, -9.5367431640625e-06, -8.96453857421875e-05, -3.814697265625e-06, -0.0061779022216796875, -1.9073486328125e-05, -0.0001430511474609375, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.4332275390625e-05, -4.57763671875e-05, -4.1961669921875e-05, -2.3841855067985307e-07, -3.814697265625e-05, -2.3841855067985307e-07, -0.00028502941131591797, -7.62939453125e-06, -1.9073486328125e-06, -0.00029754638671875, -3.62396240234375e-05, -2.9944777488708496, -2.50339189733495e-06, -0.0001888275146484375, -1.9073486328125e-06, -0.0008640289306640625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Holy", "Smite", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Smite", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"score": -8.615623339589987, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "Holy Smite", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "index", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "HolySmite", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001323135511483997, -3.373566141817719e-05, -1.1086449376307428e-05, -1.9073486328125e-05, -3.62396240234375e-05, -7.62939453125e-06, -5.102156865177676e-05, -5.2690502343466505e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.859833717346191, -0.0020732879638671875, -0.00041321400203742087, -0.002265684772282839, -1.6331649021594785e-05, -1.9073486328125e-06, -1.4305064723885152e-06, -1.1920928244535389e-07, -0.44959378242492676, 0.0, -1.1108036041259766, -0.00335693359375, -7.62939453125e-06, -9.5367431640625e-06, -0.009534835815429688, -2.6702880859375e-05, -2.6702880859375e-05, -6.866455078125e-05, -0.0155181884765625, 0.0, -2.300739288330078e-05, 0.0, -1.105530858039856, 0.0, -0.013052582740783691, -9.5367431640625e-06, -3.814697265625e-06, -0.0005044937133789062, -3.0517578125e-05, -0.04206940159201622, -7.986990567587782e-06, -3.0517578125e-05, 0.0, -0.00031566619873046875, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Holy", "Smite", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.index.damage(player.effective_spell_damage(2), self)\n"}, {"score": -9.345441825259954, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARLOCK", "_type": "Template6", "hole0": "Holy Smite", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "index", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "HolySmite", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001323135511483997, -3.373566141817719e-05, -1.1086449376307428e-05, -1.9073486328125e-05, -3.62396240234375e-05, -7.62939453125e-06, -5.102156865177676e-05, -5.2690502343466505e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.859833717346191, -0.0020732879638671875, -0.00041321400203742087, -0.002265684772282839, -1.6331649021594785e-05, -1.9073486328125e-06, -1.4305064723885152e-06, -1.1920928244535389e-07, -2.0322678089141846, 0.0, -0.10083961486816406, -0.00109100341796875, -3.814697265625e-06, -4.76837158203125e-05, -0.0030517578125, -8.96453857421875e-05, -2.288818359375e-05, -2.09808349609375e-05, -0.019695281982421875, 0.0, -1.71661376953125e-05, 0.0, -1.2628751993179321, 0.0, -0.012928366661071777, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005664825439453125, -4.57763671875e-05, -0.04640303924679756, -8.821448318485636e-06, -2.6702880859375e-05, 0.0, -0.0003299713134765625, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Holy", "Smite", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.index.damage(player.effective_spell_damage(2), self)\n"}, {"score": -9.347341291095738, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "Holy Smite", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "HolySmite", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001323135511483997, -3.373566141817719e-05, -1.1086449376307428e-05, -1.9073486328125e-05, -3.62396240234375e-05, -7.62939453125e-06, -5.102156865177676e-05, -5.2690502343466505e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.859833717346191, -0.0020732879638671875, -0.00041321400203742087, -0.002265684772282839, -1.6331649021594785e-05, -1.9073486328125e-06, -1.4305064723885152e-06, -1.1920928244535389e-07, -0.44959378242492676, 0.0, -1.1108036041259766, -0.00335693359375, -7.62939453125e-06, -9.5367431640625e-06, -0.009534835815429688, -2.6702880859375e-05, -2.6702880859375e-05, -6.866455078125e-05, -0.0155181884765625, 0.0, -2.300739288330078e-05, 0.0, -1.85739004611969, -2.110004425048828e-05, -0.0012953280238434672, -5.7220458984375e-06, -1.9073486328125e-06, -0.001209259033203125, -1.9073486328125e-05, -0.03300056234002113, -3.3378546504536644e-06, -2.47955322265625e-05, 0.0, -0.00030231475830078125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Holy", "Smite", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal.damage(player.effective_spell_damage(2), self)\n"}, {"score": -9.775433901185345, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARLOCK", "_type": "Template6", "hole0": "Holy Smite", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "HolySmite", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001323135511483997, -3.373566141817719e-05, -1.1086449376307428e-05, -1.9073486328125e-05, -3.62396240234375e-05, -7.62939453125e-06, -5.102156865177676e-05, -5.2690502343466505e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.859833717346191, -0.0020732879638671875, -0.00041321400203742087, -0.002265684772282839, -1.6331649021594785e-05, -1.9073486328125e-06, -1.4305064723885152e-06, -1.1920928244535389e-07, -2.0322678089141846, 0.0, -0.10083961486816406, -0.00109100341796875, -3.814697265625e-06, -4.76837158203125e-05, -0.0030517578125, -8.96453857421875e-05, -2.288818359375e-05, -2.09808349609375e-05, -0.019695281982421875, 0.0, -1.71661376953125e-05, 0.0, -1.7162662744522095, -3.826618194580078e-05, -0.0012898443965241313, -3.814697265625e-06, -1.9073486328125e-06, -0.0012416839599609375, -2.09808349609375e-05, -0.03394483029842377, -3.6954811548639555e-06, -2.288818359375e-05, 0.0, -0.00035381317138671875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Holy", "Smite", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal.damage(player.effective_spell_damage(2), self)\n"}, {"score": -9.885715454402302, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Holy Smite", "hole1": 1}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "index", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "HolySmite", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001323135511483997, -3.373566141817719e-05, -1.1086449376307428e-05, -1.9073486328125e-05, -3.62396240234375e-05, -7.62939453125e-06, -5.102156865177676e-05, -5.2690502343466505e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.859833717346191, -0.0020732879638671875, -0.00041321400203742087, -0.002265684772282839, -1.6331649021594785e-05, -1.9073486328125e-06, -1.4305064723885152e-06, -1.1920928244535389e-07, -2.725639581680298, -7.152555099310121e-07, -0.019773483276367188, -0.0007152557373046875, -5.7220458984375e-06, -4.9591064453125e-05, -0.0015201568603515625, -2.6702880859375e-05, -2.288818359375e-05, -2.09808349609375e-05, -0.01465606689453125, 0.0, -1.71661376953125e-05, 0.0, -1.200257420539856, 0.0, -0.014357686042785645, -5.7220458984375e-06, -3.814697265625e-06, -0.00044345855712890625, -3.4332275390625e-05, -0.04269106313586235, -7.152531907195225e-06, -2.86102294921875e-05, 0.0, -0.000339508056640625, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Holy", "Smite", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Holy", " ", "Smite", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.index.damage(player.effective_spell_damage(2), self)\n"}, {"score": -23.061555862426758, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -23.06147003173828], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 51}
{"beams": [{"score": -0.7763983978788787, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Taunt"}]}]}]}, {"keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024839851539582014, -0.0009966827929019928, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.940656698541716e-06, -0.00021219253540039062, -2.1457672119140625e-06, -3.814697265625e-06, -0.000827789306640625, -1.9073486328125e-06, -4.649158654501662e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001794029667507857, -1.1920928244535389e-07, -2.288818359375e-05, -0.0001125335693359375, -1.71661376953125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.000274658203125, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -5.6862656492739916e-05, -9.5367431640625e-06, -4.410743713378906e-06, 0.0, -0.0005550384521484375, -4.9591064453125e-05, -0.0004062652587890625, -5.006777428206988e-06, -0.00016796588897705078, -1.52587890625e-05, -3.24249267578125e-05, -0.0008860231610015035, -2.2649765014648438e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0037442445755004883, -2.8729436962748878e-05, -0.05684232711791992, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -5.5670738220214844e-05, -2.9802317840221804e-06, -0.20876789093017578, 0.0, -0.0001926422119140625, -0.0001735687255859375, 0.0, -4.25577127316501e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.00092315673828125, 0.0, -0.004569053649902344, 0.0, -0.020340919494628906, -8.797645568847656e-05, -0.00057220458984375, -1.9073486328125e-06, -0.0027341842651367188, 0.0, -0.0018787384033203125, -0.0004711151123046875, -7.62939453125e-06, 0.0, -0.000675201416015625, 0.0, -0.0001010894775390625, -0.02581787109375, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.00023162341676652431, -0.006948590278625488, -2.6702880859375e-05, -0.0024700164794921875, -0.0001926422119140625, -0.026767730712890625, -0.0024929046630859375, -0.019382476806640625, -0.009384588338434696, -1.1086437552876305e-05, -0.0018310546875, -0.0001392364501953125, -0.0021341219544410706, -2.0265579223632812e-06, -0.2927093505859375, -0.000263214111328125, -1.33514404296875e-05, 0.0, -0.015806550160050392, -0.0002915712248068303, -0.0006809234619140625, -0.0004329681396484375, -0.0032930374145507812, -0.004286495968699455, -0.0011176553089171648, -0.00635528564453125, -0.003849029541015625, -0.0021266937255859375, -7.62939453125e-06, -4.5299530029296875e-05, -0.0008220672607421875, 0.0, -1.1444091796875e-05, -0.003841400146484375, -0.000164031982421875, -7.62939453125e-06, 0.0, -0.0025420186575502157, -0.0010051727294921875, -4.6133995056152344e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -0.0023577213287353516, -5.7220458984375e-06, -0.010811805725097656, -7.748603820800781e-06, -0.00089263916015625, -1.52587890625e-05, -3.814697265625e-06, -0.007367968559265137, 0.0, -0.0001430511474609375, -3.4332275390625e-05, -0.0016562938690185547, -0.00010573863983154297, 0.0, -0.000568389892578125, -3.814697265625e-06, -7.079947681631893e-05, 0.0, -0.004805734846740961, 0.0], "choice_history": [55, 124, 221, 63, 103, "Houndmaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Houndmaster", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Taunt", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -2.4943427294788165, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Taunt"}]}]}]}, {"keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024839851539582014, -0.0009966827929019928, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.940656698541716e-06, -0.00021219253540039062, -2.1457672119140625e-06, -3.814697265625e-06, -0.000827789306640625, -1.9073486328125e-06, -4.649158654501662e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001794029667507857, -1.1920928244535389e-07, -2.288818359375e-05, -0.0001125335693359375, -1.71661376953125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.000274658203125, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -5.6862656492739916e-05, -9.5367431640625e-06, -4.410743713378906e-06, 0.0, -0.0005550384521484375, -4.9591064453125e-05, -0.0004062652587890625, -5.006777428206988e-06, -0.00016796588897705078, -1.52587890625e-05, -3.24249267578125e-05, -0.0008860231610015035, -2.2649765014648438e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0037442445755004883, -2.8729436962748878e-05, -0.05684232711791992, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -5.5670738220214844e-05, -2.9802317840221804e-06, -1.7549285888671875, -1.9073486328125e-06, -0.17949485778808594, -7.05718994140625e-05, 0.0, -1.7881393432617188e-05, -7.069110870361328e-05, -9.5367431640625e-06, 0.0, -0.000438690185546875, 0.0, -0.00479888916015625, 0.0, -0.014330863952636719, -7.462501525878906e-05, -0.0004177093505859375, -1.9073486328125e-06, -0.00148773193359375, 0.0, -0.00189971923828125, -0.0004825592041015625, -9.5367431640625e-06, -1.9073486328125e-06, -0.00107574462890625, 0.0, -0.0001068115234375, -0.019527435302734375, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.00022411317331716418, -0.007717251777648926, -2.6702880859375e-05, -0.00217437744140625, -0.0001983642578125, -0.026468276977539062, -0.0025043487548828125, -0.01923084259033203, -0.009524831548333168, -1.1324854312988464e-05, -0.0018405914306640625, -0.00014495849609375, -0.002120573539286852, -2.0265579223632812e-06, -0.2996244430541992, -0.000247955322265625, -1.33514404296875e-05, 0.0, -0.016038769856095314, -0.0002950283815152943, -0.000667572021484375, -0.0004329681396484375, -0.0034332275390625, -0.004162567667663097, -0.0011052556801587343, -0.00592041015625, -0.003757476806640625, -0.0020198822021484375, -7.62939453125e-06, -4.5299530029296875e-05, -0.000827789306640625, 0.0, -1.1444091796875e-05, -0.0034809112548828125, -0.000152587890625, -7.62939453125e-06, 0.0, -0.002326726680621505, -0.0009784698486328125, -4.6133995056152344e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -0.0021746158599853516, -5.7220458984375e-06, -0.010936737060546875, -7.748603820800781e-06, -0.0008831024169921875, -1.52587890625e-05, -3.814697265625e-06, -0.007482409477233887, 0.0, -0.0001430511474609375, -3.4332275390625e-05, -0.0016772747039794922, -0.00010573863983154297, 0.0, -0.0005645751953125, -3.814697265625e-06, -7.056116010062397e-05, 0.0, -0.0047719236463308334, 0.0], "choice_history": [55, 124, 221, 63, 103, "Houndmaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Houndmaster", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Taunt", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -4.429240782712881, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Taunt"}]}]}]}, {"keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024839851539582014, -0.0009966827929019928, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.940656698541716e-06, -0.00021219253540039062, -2.1457672119140625e-06, -3.814697265625e-06, -0.000827789306640625, -1.9073486328125e-06, -4.649158654501662e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001794029667507857, -1.1920928244535389e-07, -2.288818359375e-05, -0.0001125335693359375, -1.71661376953125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.000274658203125, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -5.6862656492739916e-05, -9.5367431640625e-06, -4.410743713378906e-06, 0.0, -0.0005550384521484375, -4.9591064453125e-05, -0.0004062652587890625, -5.006777428206988e-06, -0.00016796588897705078, -1.52587890625e-05, -3.24249267578125e-05, -0.0008860231610015035, -2.2649765014648438e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0037442445755004883, -2.8729436962748878e-05, -3.4919943809509277, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -2.5391578674316406e-05, -5.483625955093885e-06, -0.43905842304229736, 0.0, -0.0002498626708984375, -7.62939453125e-05, 0.0, -3.945827120332979e-05, -2.47955322265625e-05, -9.5367431640625e-06, 0.0, -0.0008144378662109375, 0.0, -0.0037679672241210938, 0.0, -0.02154827117919922, -7.843971252441406e-05, -0.000621795654296875, -1.9073486328125e-06, -0.0027170181274414062, 0.0, -0.00218963623046875, -0.0004978179931640625, -7.62939453125e-06, 0.0, -0.0006771087646484375, 0.0, -0.0001125335693359375, -0.019893646240234375, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.00023055050405673683, -0.007305264472961426, -2.6702880859375e-05, -0.0024871826171875, -0.0001888275146484375, -0.0267333984375, -0.0024871826171875, -0.019242286682128906, -0.00944843515753746, -1.1205645932932384e-05, -0.0018215179443359375, -0.000148773193359375, -0.002083431463688612, -2.0265579223632812e-06, -0.28558826446533203, -0.0002841949462890625, -1.33514404296875e-05, 0.0, -0.015880579128861427, -0.0002869222080335021, -0.000675201416015625, -0.0004291534423828125, -0.0035238265991210938, -0.004283528309315443, -0.0011207533534616232, -0.006053924560546875, -0.0038089752197265625, -0.0020732879638671875, -7.62939453125e-06, -4.5299530029296875e-05, -0.0008144378662109375, 0.0, -1.1444091796875e-05, -0.003692626953125, -0.00016021728515625, -7.62939453125e-06, 0.0, -0.0024240014608949423, -0.0009871721267700195, -4.6133995056152344e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -0.0022814273834228516, -5.7220458984375e-06, -0.01085662841796875, -7.748603820800781e-06, -0.000888824462890625, -1.52587890625e-05, -3.814697265625e-06, -0.007415652275085449, 0.0, -0.0001430511474609375, -3.62396240234375e-05, -0.0016715526580810547, -0.00010573863983154297, 0.0, -0.0005664825439453125, -3.814697265625e-06, -7.091864245012403e-05, 0.0, -0.004796125926077366, 0.0], "choice_history": [55, 124, 221, 63, 103, "Houndmaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Houndmaster", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Taunt", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -4.849966636257236, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Taunt"}]}]}]}, {"keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024839851539582014, -0.0009966827929019928, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.940656698541716e-06, -0.00021219253540039062, -2.1457672119140625e-06, -3.814697265625e-06, -0.000827789306640625, -1.9073486328125e-06, -4.649158654501662e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001794029667507857, -1.1920928244535389e-07, -2.288818359375e-05, -0.0001125335693359375, -1.71661376953125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.000274658203125, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -5.6862656492739916e-05, -9.5367431640625e-06, -4.410743713378906e-06, 0.0, -0.0005550384521484375, -4.9591064453125e-05, -0.0004062652587890625, -5.006777428206988e-06, -0.00016796588897705078, -1.52587890625e-05, -3.24249267578125e-05, -0.0008860231610015035, -2.2649765014648438e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0037442445755004883, -2.8729436962748878e-05, -0.05684232711791992, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -5.5670738220214844e-05, -2.9802317840221804e-06, -1.7549285888671875, -1.9073486328125e-06, -1.8083000183105469, -0.000759124755859375, 0.0, -0.026001811027526855, 0.0, -2.288818359375e-05, -4.9591064453125e-05, -7.62939453125e-06, 0.0, -0.0005397796630859375, 0.0, -0.0002727508544921875, -0.07770919799804688, -1.52587890625e-05, -2.288818359375e-05, 0.0, -0.0002965924795717001, -0.007364392280578613, -1.9073486328125e-05, -0.00170135498046875, -3.4332275390625e-05, -0.9155664443969727, -0.014230728149414062, -0.00970458984375, -0.05572935566306114, -6.914134246471804e-06, -0.0022449493408203125, -9.5367431640625e-05, -0.0035014725290238857, -1.9073486328125e-06, -0.028715133666992188, -0.000865936279296875, -1.71661376953125e-05, 0.0, -0.013221259228885174, -0.0003316277579870075, -0.0004863739013671875, -0.00049591064453125, -0.00324249267578125, -0.006371570285409689, -0.0015954719856381416, -0.00449371337890625, -0.003604888916015625, -0.00335693359375, -5.7220458984375e-06, -7.021427154541016e-05, -0.000965118408203125, 0.0, -9.5367431640625e-06, -0.0021038055419921875, -0.000164031982421875, -7.62939453125e-06, 0.0, -0.0024935004767030478, -0.001018524169921875, -5.9485435485839844e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -0.0021173954010009766, -5.7220458984375e-06, -0.010906219482421875, -7.748603820800781e-06, -0.0008544921875, -1.52587890625e-05, -3.814697265625e-06, -0.007493853569030762, 0.0, -0.000141143798828125, -3.62396240234375e-05, -0.001646876335144043, -0.00010764598846435547, 0.0, -0.0005855560302734375, -3.814697265625e-06, -6.746237340848893e-05, 0.0, -0.004762907512485981, 0.0], "choice_history": [55, 124, 221, 63, 103, "Houndmaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Houndmaster", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Taunt", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeHealth(2\n            )), Buff(ChangeAttack(2)), Buff(Taunt())]), MinionSelector(\n            IsType(MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -4.882189676883158, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Taunt"}]}]}]}, {"keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024839851539582014, -0.0009966827929019928, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.940656698541716e-06, -0.00021219253540039062, -2.1457672119140625e-06, -3.814697265625e-06, -0.000827789306640625, -1.9073486328125e-06, -4.649158654501662e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001794029667507857, -1.1920928244535389e-07, -2.288818359375e-05, -0.0001125335693359375, -1.71661376953125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.000274658203125, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -5.6862656492739916e-05, -9.5367431640625e-06, -4.410743713378906e-06, 0.0, -0.0005550384521484375, -4.9591064453125e-05, -0.0004062652587890625, -5.006777428206988e-06, -0.00016796588897705078, -1.52587890625e-05, -3.24249267578125e-05, -0.0008860231610015035, -2.2649765014648438e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0037442445755004883, -2.8729436962748878e-05, -4.240173816680908, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -3.2782554626464844e-05, -4.5299530029296875e-06, -0.1438007354736328, 0.0, -0.0011005401611328125, -8.7738037109375e-05, 0.0, -2.765655517578125e-05, -2.86102294921875e-05, -1.33514404296875e-05, 0.0, -0.000518798828125, 0.0, -0.0049457550048828125, 0.0, -0.017019271850585938, -7.069110870361328e-05, -0.00054931640625, -1.9073486328125e-06, -0.002410888671875, 0.0, -0.0020008087158203125, -0.0004940032958984375, -7.62939453125e-06, 0.0, -0.0006732940673828125, 0.0, -0.0001087188720703125, -0.020036697387695312, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.0002301928907399997, -0.006982922554016113, -2.6702880859375e-05, -0.0025005340576171875, -0.0001888275146484375, -0.026773452758789062, -0.0024890899658203125, -0.019405364990234375, -0.009385157376527786, -1.0848020792764146e-05, -0.001827239990234375, -0.0001354217529296875, -0.0021391110494732857, -2.0265579223632812e-06, -0.28922176361083984, -0.0002727508544921875, -1.33514404296875e-05, 0.0, -0.01562749780714512, -0.00028716056840494275, -0.0006847381591796875, -0.00043487548828125, -0.0031681060791015625, -0.0044123162515461445, -0.0011320817284286022, -0.00616455078125, -0.00382232666015625, -0.00209808349609375, -5.7220458984375e-06, -4.5418739318847656e-05, -0.0008182525634765625, 0.0, -1.1444091796875e-05, -0.0037364959716796875, -0.00016021728515625, -7.62939453125e-06, 0.0, -0.002447008853778243, -0.0009957551956176758, -4.6133995056152344e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -0.002302408218383789, -5.7220458984375e-06, -0.010848045349121094, -7.748603820800781e-06, -0.0008907318115234375, -1.52587890625e-05, -3.814697265625e-06, -0.007392764091491699, 0.0, -0.0001430511474609375, -3.4332275390625e-05, -0.0016543865203857422, -0.00010573863983154297, 0.0, -0.0005702972412109375, -3.814697265625e-06, -7.068031118251383e-05, 0.0, -0.004794346634298563, 0.0], "choice_history": [55, 124, 221, 63, 103, "Houndmaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Houndmaster", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Taunt", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -5.0617494071261575, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Template28", "hole0": 2}]}]}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Taunt"}]}]}]}, {"keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024839851539582014, -0.0009966827929019928, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.940656698541716e-06, -0.00021219253540039062, -2.1457672119140625e-06, -3.814697265625e-06, -0.000827789306640625, -1.9073486328125e-06, -4.649158654501662e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001794029667507857, -1.1920928244535389e-07, -2.288818359375e-05, -0.0001125335693359375, -1.71661376953125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.000274658203125, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -5.6862656492739916e-05, -9.5367431640625e-06, -4.410743713378906e-06, 0.0, -0.0005550384521484375, -4.9591064453125e-05, -0.0004062652587890625, -5.006777428206988e-06, -0.00016796588897705078, -1.52587890625e-05, -3.24249267578125e-05, -0.0008860231610015035, -2.2649765014648438e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0037442445755004883, -2.8729436962748878e-05, -0.05684232711791992, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -5.5670738220214844e-05, -2.9802317840221804e-06, -0.20876789093017578, 0.0, -0.0001926422119140625, -0.0001735687255859375, 0.0, -4.25577127316501e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.00092315673828125, 0.0, -0.004569053649902344, 0.0, -0.020340919494628906, -8.797645568847656e-05, -0.00057220458984375, -1.9073486328125e-06, -0.0027341842651367188, 0.0, -0.0018787384033203125, -0.0004711151123046875, -7.62939453125e-06, 0.0, -0.000675201416015625, 0.0, -0.0001010894775390625, -0.02581787109375, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.00023162341676652431, -0.006948590278625488, -2.6702880859375e-05, -0.0024700164794921875, -0.0001926422119140625, -0.026767730712890625, -0.0024929046630859375, -0.019382476806640625, -0.009384588338434696, -1.1086437552876305e-05, -0.0018310546875, -0.0001392364501953125, -0.0021341219544410706, -2.0265579223632812e-06, -1.6983423233032227, -0.0022363662719726562, -0.0014767393004149199, -5.7220458984375e-06, -0.004268646240234375, -0.04475879669189453, -3.814697265625e-05, 0.0, -0.038877010345458984, -0.00025010108947753906, -7.748603820800781e-06, -0.9801855087280273, -0.06841850280761719, -0.000213623046875, -1.52587890625e-05, -9.5367431640625e-06, -1.2353278398513794, -0.10632455348968506, -1.9073486328125e-06, -0.2789735794067383, -0.0001049041748046875, -0.018258094787597656, -0.0051422119140625, -0.009743690490722656, -0.013329645618796349, -1.5020364116935525e-05, -0.00125885009765625, -0.0002117156982421875, -0.003323780605569482, -3.933906555175781e-06, -0.045416831970214844, -0.000606536865234375, -3.24249267578125e-05, 0.0, -0.019262902438640594, -0.0005107980687171221, -0.0003948211669921875, -0.0008640289306640625, -0.008599281311035156, -0.0051582371816039085, -0.004057097714394331, -0.0054988861083984375, -0.004340171813964844, -0.0017309188842773438, 0.0, -0.00408172607421875, -0.007386207580566406, 0.0, -9.5367431640625e-06, -0.0024824142456054688, -8.58306884765625e-05, -1.1444091796875e-05, 0.0, -0.0013364552287384868, -0.0007475614547729492, -8.034706115722656e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.001241922378540039, -5.7220458984375e-06, -0.011298179626464844, -9.775161743164062e-06, -0.0005016326904296875, -1.1444091796875e-05, -3.814697265625e-06, -0.009783387184143066, 0.0, -0.0001468658447265625, -3.814697265625e-05, -0.0018051862716674805, -0.00011324882507324219, 0.0, -0.00057220458984375, -3.814697265625e-06, -6.472189852502197e-05, 0.0, -0.004517769441008568, 0.0], "choice_history": [55, 124, 221, 63, 103, "Houndmaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Houndmaster", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Taunt", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeAttack(2))]), MinionSelector(Give([Buff(ChangeHealth\n            (2)), Buff(ChangeAttack(2)), Buff(Taunt())]), MinionSelector(\n            IsType(MINION_TYPE.BEAST), picker=UserPicker()))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -5.125380154755909, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Template28", "hole0": 2}]}]}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024839851539582014, -0.0009966827929019928, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.940656698541716e-06, -0.00021219253540039062, -2.1457672119140625e-06, -3.814697265625e-06, -0.000827789306640625, -1.9073486328125e-06, -4.649158654501662e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001794029667507857, -1.1920928244535389e-07, -2.288818359375e-05, -0.0001125335693359375, -1.71661376953125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.000274658203125, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -5.6862656492739916e-05, -9.5367431640625e-06, -4.410743713378906e-06, 0.0, -0.0005550384521484375, -4.9591064453125e-05, -0.0004062652587890625, -5.006777428206988e-06, -0.00016796588897705078, -1.52587890625e-05, -3.24249267578125e-05, -0.0008860231610015035, -2.2649765014648438e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0037442445755004883, -2.8729436962748878e-05, -0.05684232711791992, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -5.5670738220214844e-05, -2.9802317840221804e-06, -0.20876789093017578, 0.0, -0.0001926422119140625, -0.0001735687255859375, 0.0, -4.25577127316501e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.00092315673828125, 0.0, -0.004569053649902344, 0.0, -0.020340919494628906, -8.797645568847656e-05, -0.00057220458984375, -1.9073486328125e-06, -0.0027341842651367188, 0.0, -0.0018787384033203125, -0.0004711151123046875, -7.62939453125e-06, 0.0, -0.000675201416015625, 0.0, -0.0001010894775390625, -0.02581787109375, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.00023162341676652431, -0.006948590278625488, -2.6702880859375e-05, -0.0024700164794921875, -0.0001926422119140625, -0.026767730712890625, -0.0024929046630859375, -0.019382476806640625, -0.009384588338434696, -1.1086437552876305e-05, -0.0018310546875, -0.0001392364501953125, -0.0021341219544410706, -2.0265579223632812e-06, -1.6983423233032227, -0.0022363662719726562, -0.0014767393004149199, -5.7220458984375e-06, -0.004268646240234375, -0.04475879669189453, -3.814697265625e-05, 0.0, -0.038877010345458984, -0.00025010108947753906, -7.748603820800781e-06, -0.4730243682861328, -0.0749807357788086, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -1.0461273193359375, -0.005114912986755371, -0.0004942417144775391, -1.9073486328125e-06, -3.4332275390625e-05, -0.000141143798828125, -1.1444091796875e-05, 0.0, -0.004017233848571777, -9.5367431640625e-06, -0.01144707202911377, -3.933906555175781e-06, -0.14775562286376953, -0.0005550384521484375, -0.012216455303132534, -1.1920928244535389e-07, -0.004594419617205858, 0.0, -1.1062238216400146, -4.172325134277344e-06, -0.024433135986328125, -0.0094146728515625, -0.006701469421386719, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Houndmaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Houndmaster", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeAttack(2))]), MinionSelector(IsType(MINION_TYPE.BEAST)))\n            )\n\n    def create_minion(self, player):\n        return Minion(4, 3, taunt=True)\n"}, {"score": -5.216380570854639, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Template27", "hole0": 2}]}]}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Taunt"}]}]}]}, {"keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024839851539582014, -0.0009966827929019928, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.940656698541716e-06, -0.00021219253540039062, -2.1457672119140625e-06, -3.814697265625e-06, -0.000827789306640625, -1.9073486328125e-06, -4.649158654501662e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001794029667507857, -1.1920928244535389e-07, -2.288818359375e-05, -0.0001125335693359375, -1.71661376953125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.000274658203125, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -5.6862656492739916e-05, -9.5367431640625e-06, -4.410743713378906e-06, 0.0, -0.0005550384521484375, -4.9591064453125e-05, -0.0004062652587890625, -5.006777428206988e-06, -0.00016796588897705078, -1.52587890625e-05, -3.24249267578125e-05, -0.0008860231610015035, -2.2649765014648438e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0037442445755004883, -2.8729436962748878e-05, -0.05684232711791992, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -5.5670738220214844e-05, -2.9802317840221804e-06, -0.20876789093017578, 0.0, -0.0001926422119140625, -0.0001735687255859375, 0.0, -4.25577127316501e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.00092315673828125, 0.0, -0.004569053649902344, 0.0, -0.020340919494628906, -8.797645568847656e-05, -0.00057220458984375, -1.9073486328125e-06, -0.0027341842651367188, 0.0, -0.0018787384033203125, -0.0004711151123046875, -7.62939453125e-06, 0.0, -0.000675201416015625, 0.0, -0.0001010894775390625, -0.02581787109375, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.00023162341676652431, -0.006948590278625488, -2.6702880859375e-05, -0.0024700164794921875, -0.0001926422119140625, -0.026767730712890625, -0.0024929046630859375, -0.019382476806640625, -0.009384588338434696, -1.1086437552876305e-05, -0.0018310546875, -0.0001392364501953125, -0.0021341219544410706, -2.0265579223632812e-06, -2.827688217163086, -0.000881195068359375, -0.0073878951370716095, -5.7220458984375e-06, -0.001132965087890625, -0.05324268341064453, -9.5367431640625e-06, -1.9073486328125e-06, -0.08499276638031006, -0.0004734992980957031, -1.3470649719238281e-05, -0.3609771728515625, -0.027416229248046875, -0.000873565673828125, -9.5367431640625e-06, -5.7220458984375e-06, -0.8814079165458679, -0.10222005844116211, -1.9073486328125e-06, -0.2628917694091797, -0.000110626220703125, -0.018258094787597656, -0.004383087158203125, -0.012064933776855469, -0.0145175252109766, -1.5020364116935525e-05, -0.0013580322265625, -0.00022125244140625, -0.0034256281796842813, -3.933906555175781e-06, -0.04449748992919922, -0.000713348388671875, -3.24249267578125e-05, 0.0, -0.019452445209026337, -0.0005189036019146442, -0.000415802001953125, -0.0008640289306640625, -0.009307861328125, -0.005527614615857601, -0.0045074340887367725, -0.0058193206787109375, -0.004730224609375, -0.002033233642578125, 0.0, -0.004049420356750488, -0.0050201416015625, 0.0, -9.5367431640625e-06, -0.0026082992553710938, -8.392333984375e-05, -1.1444091796875e-05, 0.0, -0.0013855694560334086, -0.0007455348968505859, -8.225440979003906e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.0012552738189697266, -5.7220458984375e-06, -0.011340141296386719, -9.775161743164062e-06, -0.0004749298095703125, -1.1444091796875e-05, -3.814697265625e-06, -0.009829163551330566, 0.0, -0.0001468658447265625, -3.814697265625e-05, -0.0018013715744018555, -0.00011324882507324219, 0.0, -0.00057220458984375, -3.814697265625e-06, -6.364928412949666e-05, 0.0, -0.004489526152610779, 0.0], "choice_history": [55, 124, 221, 63, 103, "Houndmaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Houndmaster", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Taunt", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeHealth(2))]), MinionSelector(Give([Buff(ChangeHealth\n            (2)), Buff(ChangeAttack(2)), Buff(Taunt())]), MinionSelector(\n            IsType(MINION_TYPE.BEAST), picker=UserPicker()))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -5.548270479941934, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Taunt"}]}]}]}, {"keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024839851539582014, -0.0009966827929019928, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.940656698541716e-06, -0.00021219253540039062, -2.1457672119140625e-06, -3.814697265625e-06, -0.000827789306640625, -1.9073486328125e-06, -4.649158654501662e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001794029667507857, -1.1920928244535389e-07, -2.288818359375e-05, -0.0001125335693359375, -1.71661376953125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.000274658203125, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -5.6862656492739916e-05, -9.5367431640625e-06, -4.410743713378906e-06, 0.0, -0.0005550384521484375, -4.9591064453125e-05, -0.0004062652587890625, -5.006777428206988e-06, -0.00016796588897705078, -1.52587890625e-05, -3.24249267578125e-05, -0.0008860231610015035, -2.2649765014648438e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0037442445755004883, -2.8729436962748878e-05, -0.05684232711791992, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -5.5670738220214844e-05, -2.9802317840221804e-06, -0.20876789093017578, 0.0, -0.0001926422119140625, -0.0001735687255859375, 0.0, -4.25577127316501e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.00092315673828125, 0.0, -0.004569053649902344, 0.0, -0.020340919494628906, -8.797645568847656e-05, -0.00057220458984375, -1.9073486328125e-06, -0.0027341842651367188, 0.0, -0.0018787384033203125, -0.0004711151123046875, -7.62939453125e-06, 0.0, -0.000675201416015625, 0.0, -0.0001010894775390625, -0.02581787109375, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.00023162341676652431, -0.006948590278625488, -2.6702880859375e-05, -0.0024700164794921875, -0.0001926422119140625, -0.026767730712890625, -0.0024929046630859375, -0.019382476806640625, -0.009384588338434696, -1.1086437552876305e-05, -0.0018310546875, -0.0001392364501953125, -0.0021341219544410706, -2.0265579223632812e-06, -0.2927093505859375, -0.000263214111328125, -1.33514404296875e-05, 0.0, -0.015806550160050392, -0.0002915712248068303, -0.0006809234619140625, -0.0004329681396484375, -0.0032930374145507812, -0.004286495968699455, -0.0011176553089171648, -0.00635528564453125, -0.003849029541015625, -0.0021266937255859375, -7.62939453125e-06, -4.5299530029296875e-05, -0.0008220672607421875, 0.0, -1.1444091796875e-05, -0.003841400146484375, -0.000164031982421875, -7.62939453125e-06, 0.0, -0.0025420186575502157, -0.0010051727294921875, -4.6133995056152344e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -0.0023577213287353516, -5.7220458984375e-06, -4.663970947265625, -5.7220458984375e-06, -0.000240325927734375, -2.86102294921875e-05, -1.9073486328125e-06, -0.12694120407104492, -1.9073486328125e-06, -6.29425048828125e-05, -1.71661376953125e-05, -0.0018938779830932617, -7.915496826171875e-05, 0.0, -0.0005035400390625, -1.9073486328125e-06, -3.969357203459367e-05, 0.0, -0.004570565652102232, 0.0], "choice_history": [55, 124, 221, 63, 103, "Houndmaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Houndmaster", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Taunt", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -5.672352314561508, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Template28", "hole0": 2}]}]}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024839851539582014, -0.0009966827929019928, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.940656698541716e-06, -0.00021219253540039062, -2.1457672119140625e-06, -3.814697265625e-06, -0.000827789306640625, -1.9073486328125e-06, -4.649158654501662e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001794029667507857, -1.1920928244535389e-07, -2.288818359375e-05, -0.0001125335693359375, -1.71661376953125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.000274658203125, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -5.6862656492739916e-05, -9.5367431640625e-06, -4.410743713378906e-06, 0.0, -0.0005550384521484375, -4.9591064453125e-05, -0.0004062652587890625, -5.006777428206988e-06, -0.00016796588897705078, -1.52587890625e-05, -3.24249267578125e-05, -0.0008860231610015035, -2.2649765014648438e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0037442445755004883, -2.8729436962748878e-05, -0.05684232711791992, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -5.5670738220214844e-05, -2.9802317840221804e-06, -0.20876789093017578, 0.0, -0.0001926422119140625, -0.0001735687255859375, 0.0, -4.25577127316501e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.00092315673828125, 0.0, -0.004569053649902344, 0.0, -0.020340919494628906, -8.797645568847656e-05, -0.00057220458984375, -1.9073486328125e-06, -0.0027341842651367188, 0.0, -0.0018787384033203125, -0.0004711151123046875, -7.62939453125e-06, 0.0, -0.000675201416015625, 0.0, -0.0001010894775390625, -0.02581787109375, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.00023162341676652431, -0.006948590278625488, -2.6702880859375e-05, -0.0024700164794921875, -0.0001926422119140625, -0.026767730712890625, -0.0024929046630859375, -0.019382476806640625, -0.009384588338434696, -1.1086437552876305e-05, -0.0018310546875, -0.0001392364501953125, -0.0021341219544410706, -2.0265579223632812e-06, -1.6983423233032227, -0.0022363662719726562, -0.0014767393004149199, -5.7220458984375e-06, -0.004268646240234375, -0.04475879669189453, -3.814697265625e-05, 0.0, -0.038877010345458984, -0.00025010108947753906, -7.748603820800781e-06, -0.9801855087280273, -0.06841850280761719, -0.000213623046875, -1.52587890625e-05, -9.5367431640625e-06, -0.9679766893386841, -1.1759798526763916, -3.814697265625e-06, -0.0026988983154296875, -0.0375213623046875, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.01239358726888895, -0.0018889904022216797, -0.0003457069396972656, -3.814697265625e-06, -2.288818359375e-05, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -0.001520395278930664, -1.33514404296875e-05, -0.013416290283203125, -3.933906555175781e-06, -0.1017751693725586, -2.47955322265625e-05, -0.004758833907544613, -3.3020973205566406e-05, -0.0018672943115234375, -0.10053253173828125, -5.7220458984375e-06, -0.00013229814067017287, 0.0, -0.0025099683552980423, 0.0], "choice_history": [55, 124, 221, 63, 103, "Houndmaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Houndmaster", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeAttack(2))]), MinionSelector(MinionSelector(IsType(\n            MINION_TYPE.BEAST)), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -5.809608600217395, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Template28", "hole0": 2}]}]}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024839851539582014, -0.0009966827929019928, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.940656698541716e-06, -0.00021219253540039062, -2.1457672119140625e-06, -3.814697265625e-06, -0.000827789306640625, -1.9073486328125e-06, -4.649158654501662e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001794029667507857, -1.1920928244535389e-07, -2.288818359375e-05, -0.0001125335693359375, -1.71661376953125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.000274658203125, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -5.6862656492739916e-05, -9.5367431640625e-06, -4.410743713378906e-06, 0.0, -0.0005550384521484375, -4.9591064453125e-05, -0.0004062652587890625, -5.006777428206988e-06, -0.00016796588897705078, -1.52587890625e-05, -3.24249267578125e-05, -0.0008860231610015035, -2.2649765014648438e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0037442445755004883, -2.8729436962748878e-05, -0.05684232711791992, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -5.5670738220214844e-05, -2.9802317840221804e-06, -0.20876789093017578, 0.0, -0.0001926422119140625, -0.0001735687255859375, 0.0, -4.25577127316501e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.00092315673828125, 0.0, -0.004569053649902344, 0.0, -0.020340919494628906, -8.797645568847656e-05, -0.00057220458984375, -1.9073486328125e-06, -0.0027341842651367188, 0.0, -0.0018787384033203125, -0.0004711151123046875, -7.62939453125e-06, 0.0, -0.000675201416015625, 0.0, -0.0001010894775390625, -0.02581787109375, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.00023162341676652431, -0.006948590278625488, -2.6702880859375e-05, -0.0024700164794921875, -0.0001926422119140625, -0.026767730712890625, -0.0024929046630859375, -0.019382476806640625, -0.009384588338434696, -1.1086437552876305e-05, -0.0018310546875, -0.0001392364501953125, -0.0021341219544410706, -2.0265579223632812e-06, -1.6983423233032227, -0.0022363662719726562, -0.0014767393004149199, -5.7220458984375e-06, -0.004268646240234375, -0.04475879669189453, -3.814697265625e-05, 0.0, -0.038877010345458984, -0.00025010108947753906, -7.748603820800781e-06, -0.4730243682861328, -0.0749807357788086, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -1.0461273193359375, -0.005114912986755371, -0.0004942417144775391, -1.9073486328125e-06, -3.4332275390625e-05, -0.000141143798828125, -1.1444091796875e-05, 0.0, -0.004017233848571777, -9.5367431640625e-06, -0.01144707202911377, -3.933906555175781e-06, -1.9926071166992188, -1.9073486328125e-06, -0.0009084707708097994, -1.1920928244535389e-07, -0.002611666452139616, 0.0], "choice_history": [55, 124, 221, 63, 103, "Houndmaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Houndmaster", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeAttack(2))]), MinionSelector(IsType(MINION_TYPE.BEAST)))\n            )\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -5.827319815986343, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Template28", "hole0": 2}]}]}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "MinionDied", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024839851539582014, -0.0009966827929019928, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.940656698541716e-06, -0.00021219253540039062, -2.1457672119140625e-06, -3.814697265625e-06, -0.000827789306640625, -1.9073486328125e-06, -4.649158654501662e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001794029667507857, -1.1920928244535389e-07, -2.288818359375e-05, -0.0001125335693359375, -1.71661376953125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.000274658203125, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -5.6862656492739916e-05, -9.5367431640625e-06, -4.410743713378906e-06, 0.0, -0.0005550384521484375, -4.9591064453125e-05, -0.0004062652587890625, -5.006777428206988e-06, -0.00016796588897705078, -1.52587890625e-05, -3.24249267578125e-05, -0.0008860231610015035, -2.2649765014648438e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0037442445755004883, -2.8729436962748878e-05, -0.05684232711791992, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -5.5670738220214844e-05, -2.9802317840221804e-06, -0.20876789093017578, 0.0, -0.0001926422119140625, -0.0001735687255859375, 0.0, -4.25577127316501e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.00092315673828125, 0.0, -0.004569053649902344, 0.0, -0.020340919494628906, -8.797645568847656e-05, -0.00057220458984375, -1.9073486328125e-06, -0.0027341842651367188, 0.0, -0.0018787384033203125, -0.0004711151123046875, -7.62939453125e-06, 0.0, -0.000675201416015625, 0.0, -0.0001010894775390625, -0.02581787109375, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.00023162341676652431, -0.006948590278625488, -2.6702880859375e-05, -0.0024700164794921875, -0.0001926422119140625, -0.026767730712890625, -0.0024929046630859375, -0.019382476806640625, -0.009384588338434696, -1.1086437552876305e-05, -0.0018310546875, -0.0001392364501953125, -0.0021341219544410706, -2.0265579223632812e-06, -1.6983423233032227, -0.0022363662719726562, -0.0014767393004149199, -5.7220458984375e-06, -0.004268646240234375, -0.04475879669189453, -3.814697265625e-05, 0.0, -0.038877010345458984, -0.00025010108947753906, -7.748603820800781e-06, -0.9801855087280273, -0.06841850280761719, -0.000213623046875, -1.52587890625e-05, -9.5367431640625e-06, -0.9679766893386841, -0.45707249641418457, -8.213520050048828e-05, -1.1444091796875e-05, -0.24102020263671875, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.46678420901298523, -0.002852201461791992, -0.00024068355560302734, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -1.71661376953125e-05, 0.0, -0.0017837285995483398, -1.1444091796875e-05, -0.009143948554992676, -7.748603820800781e-06, -0.15415000915527344, -2.6702880859375e-05, -0.0040854187682271, -4.482269287109375e-05, -0.0034637451171875, -0.26874732971191406, -5.7220458984375e-06, -0.00012097455328330398, 0.0, -0.002744074212387204, 0.0], "choice_history": [55, 124, 221, 63, 103, "Houndmaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Houndmaster", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Minion", "Died", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeAttack(2))]), MinionSelector(MinionDied(IsType(\n            MINION_TYPE.BEAST)), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -6.093456817862247, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Template28", "hole0": 2}]}]}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Taunt"}]}]}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024839851539582014, -0.0009966827929019928, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.940656698541716e-06, -0.00021219253540039062, -2.1457672119140625e-06, -3.814697265625e-06, -0.000827789306640625, -1.9073486328125e-06, -4.649158654501662e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001794029667507857, -1.1920928244535389e-07, -2.288818359375e-05, -0.0001125335693359375, -1.71661376953125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.000274658203125, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -5.6862656492739916e-05, -9.5367431640625e-06, -4.410743713378906e-06, 0.0, -0.0005550384521484375, -4.9591064453125e-05, -0.0004062652587890625, -5.006777428206988e-06, -0.00016796588897705078, -1.52587890625e-05, -3.24249267578125e-05, -0.0008860231610015035, -2.2649765014648438e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0037442445755004883, -2.8729436962748878e-05, -0.05684232711791992, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -5.5670738220214844e-05, -2.9802317840221804e-06, -0.20876789093017578, 0.0, -0.0001926422119140625, -0.0001735687255859375, 0.0, -4.25577127316501e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.00092315673828125, 0.0, -0.004569053649902344, 0.0, -0.020340919494628906, -8.797645568847656e-05, -0.00057220458984375, -1.9073486328125e-06, -0.0027341842651367188, 0.0, -0.0018787384033203125, -0.0004711151123046875, -7.62939453125e-06, 0.0, -0.000675201416015625, 0.0, -0.0001010894775390625, -0.02581787109375, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.00023162341676652431, -0.006948590278625488, -2.6702880859375e-05, -0.0024700164794921875, -0.0001926422119140625, -0.026767730712890625, -0.0024929046630859375, -0.019382476806640625, -0.009384588338434696, -1.1086437552876305e-05, -0.0018310546875, -0.0001392364501953125, -0.0021341219544410706, -2.0265579223632812e-06, -1.6983423233032227, -0.0022363662719726562, -0.0014767393004149199, -5.7220458984375e-06, -0.004268646240234375, -0.04475879669189453, -3.814697265625e-05, 0.0, -0.038877010345458984, -0.00025010108947753906, -7.748603820800781e-06, -0.4730243682861328, -0.0749807357788086, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -2.179727554321289, -0.45881223678588867, -1.9073486328125e-05, -0.6936426162719727, -0.000362396240234375, -0.001472646719776094, -0.002538680098950863, -0.008390426635742188, -0.00038909912109375, -1.6568359569646418e-05, 0.0, -0.0020092781633138657, 0.0], "choice_history": [55, 124, 221, 63, 103, "Houndmaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Houndmaster", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "Taunt", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeAttack(2))]), MinionSelector(Give(Taunt()))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"score": -8.368234301184629, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Give", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Template28", "hole0": 2}]}]}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": "effects", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Effect", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "MinionDied", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Taunt"}]}]}, {"keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}, {"_type": "Call", "func": {"id": "Buff", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Taunt"}]}]}, "_type": "Template10", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Houndmaster", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024839851539582014, -0.0009966827929019928, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.940656698541716e-06, -0.00021219253540039062, -2.1457672119140625e-06, -3.814697265625e-06, -0.000827789306640625, -1.9073486328125e-06, -4.649158654501662e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001794029667507857, -1.1920928244535389e-07, -2.288818359375e-05, -0.0001125335693359375, -1.71661376953125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.000274658203125, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -5.6862656492739916e-05, -9.5367431640625e-06, -4.410743713378906e-06, 0.0, -0.0005550384521484375, -4.9591064453125e-05, -0.0004062652587890625, -5.006777428206988e-06, -0.00016796588897705078, -1.52587890625e-05, -3.24249267578125e-05, -0.0008860231610015035, -2.2649765014648438e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0037442445755004883, -2.8729436962748878e-05, -0.05684232711791992, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -5.5670738220214844e-05, -2.9802317840221804e-06, -0.20876789093017578, 0.0, -0.0001926422119140625, -0.0001735687255859375, 0.0, -4.25577127316501e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.00092315673828125, 0.0, -0.004569053649902344, 0.0, -0.020340919494628906, -8.797645568847656e-05, -0.00057220458984375, -1.9073486328125e-06, -0.0027341842651367188, 0.0, -0.0018787384033203125, -0.0004711151123046875, -7.62939453125e-06, 0.0, -0.000675201416015625, 0.0, -0.0001010894775390625, -0.02581787109375, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.00023162341676652431, -0.006948590278625488, -2.6702880859375e-05, -0.0024700164794921875, -0.0001926422119140625, -0.026767730712890625, -0.0024929046630859375, -0.019382476806640625, -0.009384588338434696, -1.1086437552876305e-05, -0.0018310546875, -0.0001392364501953125, -0.0021341219544410706, -2.0265579223632812e-06, -1.6983423233032227, -0.0022363662719726562, -0.0014767393004149199, -5.7220458984375e-06, -0.004268646240234375, -0.04475879669189453, -3.814697265625e-05, 0.0, -0.038877010345458984, -0.00025010108947753906, -7.748603820800781e-06, -0.4730243682861328, -0.0749807357788086, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -1.0461273193359375, -0.005114912986755371, -0.0004942417144775391, -1.9073486328125e-06, -3.4332275390625e-05, -0.000141143798828125, -1.1444091796875e-05, 0.0, -0.004017233848571777, -9.5367431640625e-06, -0.01144707202911377, -3.933906555175781e-06, -0.14775562286376953, -0.0005550384521484375, -0.012216455303132534, -1.1920928244535389e-07, -0.004594419617205858, 0.0, -0.8863780498504639, -1.1920928244535389e-07, -0.0014553070068359375, -0.00012969970703125, -0.018495559692382812, -1.52587890625e-05, -0.0001888275146484375, -0.0008544921875, -3.814697265625e-06, -0.5467064380645752, -2.610662704682909e-05, -0.000148773193359375, -0.01762104034423828, -0.0045299530029296875, -4.57763671875e-05, 0.0, -0.373261034488678, -0.02765965461730957, -0.000988006591796875, -2.288818359375e-05, -0.18962478637695312, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -0.8674249053001404, -0.16988635063171387, -9.5367431640625e-06, -2.86102294921875e-05, -0.0001277923583984375, -0.0033863396383821964, -0.02080734260380268, -0.0003070831298828125, -0.0054721832275390625, -0.001155853271484375, 0.0, -0.007666945457458496, -0.0002918243408203125, 0.0, -1.1444091796875e-05, -0.0002899169921875, -4.1961669921875e-05, -9.5367431640625e-06, 0.0, -0.00156736362259835, -0.0006892681121826172, -4.398822784423828e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0006449222564697266, -1.1444091796875e-05, -0.010786056518554688, -2.6941299438476562e-05, -0.0010051727294921875, -1.52587890625e-05, -1.9073486328125e-06, -0.008524656295776367, -1.9073486328125e-06, -0.0002040863037109375, -2.09808349609375e-05, -0.0014219284057617188, -0.00013637542724609375, 0.0, -0.0001373291015625, -0.0002040863037109375, -4.57763671875e-05, 0.0, -1.1874951124191284, -0.00044286251068115234, -0.0017681121826171875, -0.00017547607421875, -1.33514404296875e-05, -0.00867571122944355, -0.020425651222467422], "choice_history": [55, 124, 221, 63, 103, "Houndmaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Houndmaster", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Minion", "Died", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Taunt", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Taunt", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeAttack(2))]), MinionSelector(IsType(MINION_TYPE.BEAST)))\n            )\n\n    def create_minion(self, player):\n        return Minion(4, 3, effects=[Effect(MinionDied(Buff(Taunt())),\n            MinionSelector(IsType(MINION_TYPE.BEAST), picker=UserPicker())),\n            Buff(Taunt())])\n"}, {"score": -22.270658493041992, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.47955322265625e-05, -3.814697265625e-06, -22.2706298828125], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 52}
{"beams": [{"score": -0.2535450552989005, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Huffer", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 2}], "_type": "ClassDef", "name": "Huffer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0003754405479412526, -0.0004243830917403102, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.5299530029296875e-06, -8.606909977970645e-05, -4.8160552978515625e-05, -1.33514404296875e-05, -0.14760398864746094, -0.000286102294921875, -1.8119757442036644e-05, -0.0014058351516723633, -6.627810944337398e-05, -3.576278118089249e-07, -0.003789185080677271, 0.0, -0.00014709372771903872, -1.3709036466025282e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -0.04868519306182861, -3.802741048275493e-05, -0.02044391632080078, -3.4332275390625e-05, -5.316734313964844e-05, -2.706014311115723e-05, -7.176399230957031e-05, -9.536738616588991e-07, -0.02923261560499668, -0.00019226610311307013, -0.0001201629638671875, -1.52587890625e-05, -0.0001697540283203125, -5.7220458984375e-06], "choice_history": [55, 124, 221, 63, 103, "Huffer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Huffer", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score": -2.0142065403995844, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 2}], "_type": "ClassDef", "name": "Huffer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0003754405479412526, -0.0004243830917403102, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.5299530029296875e-06, -8.606909977970645e-05, -4.8160552978515625e-05, -1.33514404296875e-05, -1.9881343841552734, -5.340576171875e-05, -6.914137884450611e-06, -4.887576324108522e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001152753466158174, -1.7881377516459906e-06, -9.1552734375e-05, -0.0005245208740234375, -1.9073486328125e-06, -7.62939453125e-06, -0.00029754638671875, -5.53131103515625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.0967213711410295e-05, -2.300739288330078e-05, -1.549720036564395e-05, -1.0728830375228426e-06, -0.0015106201171875, -0.0002574920654296875, -1.9073486328125e-06, -2.09808349609375e-05, -2.7179718017578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.228895027656108e-05, -2.0265558760002023e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -3.4332275390625e-05, -6.806631427025422e-05, -0.002238154411315918, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -0.00022468426323030144, -0.006775379180908203, -0.00011324383376631886, -0.0002117156982421875, -5.7220458984375e-06, -2.9087063012411818e-05, -1.1086458471254446e-05, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -5.340576171875e-05, -7.748603820800781e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -2.3841855067985307e-07, -0.0025559663772583008, -7.17639850336127e-05, -0.00492095947265625, -6.866455078125e-05, -3.767012094613165e-05, -4.768360213347478e-06, -2.0623181626433507e-05, -2.3841855067985307e-07, -0.003501414554193616, -2.4318398573086597e-05, -0.00052642822265625, -7.62939453125e-06, -0.0002346038818359375, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Huffer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Huffer", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score": -3.329539148783965, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Huffer", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 2}], "_type": "ClassDef", "name": "Huffer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0003754405479412526, -0.0004243830917403102, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.5299530029296875e-06, -8.606909977970645e-05, -4.8160552978515625e-05, -1.33514404296875e-05, -0.14760398864746094, -0.000286102294921875, -1.8119757442036644e-05, -0.0014058351516723633, -6.627810944337398e-05, -3.576278118089249e-07, -0.003789185080677271, 0.0, -0.00014709372771903872, -1.3709036466025282e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -3.126218795776367, -1.7762184143066406e-05, -0.020277976989746094, -4.9591064453125e-05, -3.361701965332031e-05, -0.00014852374442853034, -6.92605972290039e-05, -1.5497195136049413e-06, -0.02751026675105095, -0.00026675479602999985, -0.00023651123046875, -1.52587890625e-05, -0.0002307891845703125, -7.62939453125e-06], "choice_history": [55, 124, 221, 63, 103, "Huffer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Huffer", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score": -4.291434965316284, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Huffer", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template34", "hole0": 4, "hole1": 2}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}}], "_type": "ClassDef", "name": "Huffer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0003754405479412526, -0.0004243830917403102, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.5299530029296875e-06, -8.606909977970645e-05, -4.8160552978515625e-05, -1.33514404296875e-05, -0.14760398864746094, -0.000286102294921875, -1.8119757442036644e-05, -0.0014058351516723633, -6.627810944337398e-05, -3.576278118089249e-07, -0.003789185080677271, 0.0, -0.00014709372771903872, -1.3709036466025282e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -0.04868519306182861, -3.802741048275493e-05, -3.9579696655273438, -3.814697265625e-06, -0.0002417562936898321, -6.317968654911965e-05, -9.5367431640625e-06, -0.00039196014404296875, -7.62939453125e-06, -0.000301121937809512, -0.00017331528943032026, -0.0004062652587890625, -0.0880666971206665, -9.417489309271332e-06, -0.000133514404296875, -0.03478431701660156, -0.0027713775634765625, -0.00034546852111816406, -0.0005889588501304388, -0.0019598007202148438, -2.90866428258596e-05], "choice_history": [55, 124, 221, 63, 103, "Huffer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Huffer", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 82, 170, "4", "<EOS>", "2", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(4, 2)\n"}, {"score": -5.203270111078609, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Huffer", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 2}], "_type": "ClassDef", "name": "Huffer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0003754405479412526, -0.0004243830917403102, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.5299530029296875e-06, -8.606909977970645e-05, -4.8160552978515625e-05, -1.33514404296875e-05, -0.14760398864746094, -0.000286102294921875, -1.8119757442036644e-05, -0.0014058351516723633, -6.627810944337398e-05, -3.576278118089249e-07, -0.003789185080677271, 0.0, -0.00014709372771903872, -1.3709036466025282e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -0.04868519306182861, -3.802741048275493e-05, -0.02044391632080078, -3.4332275390625e-05, -5.316734313964844e-05, -2.706014311115723e-05, -7.176399230957031e-05, -9.536738616588991e-07, -4.979152202606201, -3.206715700798668e-05, -0.0001678466796875, -1.52587890625e-05, -8.20159912109375e-05, -1.1444091796875e-05], "choice_history": [55, 124, 221, 63, 103, "Huffer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Huffer", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, stealth=True)\n"}, {"score": -5.70811951901328, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Huffer", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "windfury", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 2}], "_type": "ClassDef", "name": "Huffer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0003754405479412526, -0.0004243830917403102, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.5299530029296875e-06, -8.606909977970645e-05, -4.8160552978515625e-05, -1.33514404296875e-05, -0.14760398864746094, -0.000286102294921875, -1.8119757442036644e-05, -0.0014058351516723633, -6.627810944337398e-05, -3.576278118089249e-07, -0.003789185080677271, 0.0, -0.00014709372771903872, -1.3709036466025282e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -0.04868519306182861, -3.802741048275493e-05, -0.02044391632080078, -3.4332275390625e-05, -5.316734313964844e-05, -2.706014311115723e-05, -7.176399230957031e-05, -9.536738616588991e-07, -5.483791828155518, -0.00023231279919855297, -0.00014495849609375, -2.86102294921875e-05, -0.0001087188720703125, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Huffer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Huffer", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "windfury", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, windfury=True)\n"}, {"score": -5.947491559642231, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Huffer", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "divine_shield", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 2}], "_type": "ClassDef", "name": "Huffer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0003754405479412526, -0.0004243830917403102, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.5299530029296875e-06, -8.606909977970645e-05, -4.8160552978515625e-05, -1.33514404296875e-05, -0.14760398864746094, -0.000286102294921875, -1.8119757442036644e-05, -0.0014058351516723633, -6.627810944337398e-05, -3.576278118089249e-07, -0.003789185080677271, 0.0, -0.00014709372771903872, -1.3709036466025282e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -0.04868519306182861, -3.802741048275493e-05, -0.02044391632080078, -3.4332275390625e-05, -5.316734313964844e-05, -2.706014311115723e-05, -7.176399230957031e-05, -9.536738616588991e-07, -5.723498821258545, -3.0874729418428615e-05, -8.96453857421875e-05, -1.71661376953125e-05, -4.38690185546875e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Huffer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Huffer", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, divine_shield=True)\n"}, {"score": -6.1029551263825965, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Huffer", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 2}], "_type": "ClassDef", "name": "Huffer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0003754405479412526, -0.0004243830917403102, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.5299530029296875e-06, -8.606909977970645e-05, -4.8160552978515625e-05, -1.33514404296875e-05, -0.14760398864746094, -0.000286102294921875, -1.8119757442036644e-05, -0.0014058351516723633, -6.627810944337398e-05, -3.576278118089249e-07, -5.849824905395508, 0.0, -2.5510715204291046e-05, -4.768367489305092e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -4.768370445162873e-07, -0.053926706314086914, -4.0292325138580054e-05, -0.01871204376220703, -3.4332275390625e-05, -5.137920379638672e-05, -2.729855441430118e-05, -7.367134094238281e-05, -9.536738616588991e-07, -0.02923714555799961, -0.00018046658078674227, -0.0001201629638671875, -1.52587890625e-05, -0.0001678466796875, -5.7220458984375e-06], "choice_history": [55, 124, 221, 63, 103, "Huffer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Huffer", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score": -6.142100338372188, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Huffer", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 2}], "_type": "ClassDef", "name": "Huffer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0003754405479412526, -0.0004243830917403102, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.5299530029296875e-06, -8.606909977970645e-05, -4.8160552978515625e-05, -1.33514404296875e-05, -0.14760398864746094, -0.000286102294921875, -1.8119757442036644e-05, -0.0014058351516723633, -6.627810944337398e-05, -3.576278118089249e-07, -0.003789185080677271, 0.0, -0.00014709372771903872, -1.3709036466025282e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -5.925763130187988, -5.9604562920867465e-06, -0.02108287811279297, -4.1961669921875e-05, -5.519390106201172e-05, -4.8874615458771586e-05, -0.00010371208190917969, -1.0728830375228426e-06, -0.03994856774806976, -0.0001668790791882202, -0.0001049041748046875, -1.33514404296875e-05, -0.0003032684326171875, -5.7220458984375e-06], "choice_history": [55, 124, 221, 63, 103, "Huffer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Huffer", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"score": -6.528936896458845, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Huffer", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "Kill", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 2}], "_type": "ClassDef", "name": "Huffer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0003754405479412526, -0.0004243830917403102, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.5299530029296875e-06, -8.606909977970645e-05, -4.8160552978515625e-05, -1.33514404296875e-05, -0.14760398864746094, -0.000286102294921875, -1.8119757442036644e-05, -0.0014058351516723633, -6.627810944337398e-05, -3.576278118089249e-07, -0.003789185080677271, 0.0, -0.00014709372771903872, -1.3709036466025282e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -0.04868519306182861, -3.802741048275493e-05, -0.02044391632080078, -3.4332275390625e-05, -5.316734313964844e-05, -2.706014311115723e-05, -7.176399230957031e-05, -9.536738616588991e-07, -6.302310466766357, -1.9073468138230965e-06, -0.0025959014892578125, -2.6702880859375e-05, -0.00019073486328125, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Huffer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Huffer", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "Kill", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, Kill=True)\n"}, {"score": -6.544239117967805, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Huffer", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Charge"}, {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}]}]}, "_type": "Template10", "hole0": 4, "hole1": 2}], "_type": "ClassDef", "name": "Huffer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0003754405479412526, -0.0004243830917403102, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.5299530029296875e-06, -8.606909977970645e-05, -4.8160552978515625e-05, -1.33514404296875e-05, -0.14760398864746094, -0.000286102294921875, -1.8119757442036644e-05, -0.0014058351516723633, -6.627810944337398e-05, -3.576278118089249e-07, -0.003789185080677271, 0.0, -0.00014709372771903872, -1.3709036466025282e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -0.04868519306182861, -3.802741048275493e-05, -0.02044391632080078, -3.4332275390625e-05, -5.316734313964844e-05, -2.706014311115723e-05, -7.176399230957031e-05, -9.536738616588991e-07, -5.230299472808838, -1.3232166566012893e-05, -0.0022258758544921875, -0.0025482177734375, -0.09743690490722656, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0017592906951904297, -1.645074735279195e-05, -0.0072422027587890625, -0.03802680969238281, -1.9073486328125e-05, -0.04035774990916252, -0.00013947486877441406, -0.013858795166015625, -0.46698760986328125, -5.340576171875e-05, 0.0, -0.001486063003540039, -0.0045948028564453125, 0.0, -2.288818359375e-05, -0.03199195861816406, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0037567615509033203, -4.2319072235841304e-05, -2.396077979938127e-05, -4.00543212890625e-05, -3.814697265625e-06, -3.62396240234375e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.000530242919921875, -8.10622896096902e-06, -0.020992398262023926, -5.3882598876953125e-05, -4.76837158203125e-05, -7.62939453125e-05, 0.0, -0.31127870082855225, -2.3841855067985307e-07, -0.0001544952392578125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.000194549560546875, -3.576278118089249e-07, -0.03858768939971924, -0.0053730010986328125], "choice_history": [55, 124, 221, 63, 103, "Huffer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Huffer", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "Charge", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, auras=[Aura(Charge(), MinionSelector(IsType(\n            MINION_TYPE.BEAST), minion_type=MINION_TYPE.BEAST))])\n"}, {"score": -7.116766705120625, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Huffer", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "Charge"}, {"_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}, "args": [{"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}]}, "_type": "Template10", "hole0": 4, "hole1": 2}], "_type": "ClassDef", "name": "Huffer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0003754405479412526, -0.0004243830917403102, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.5299530029296875e-06, -8.606909977970645e-05, -4.8160552978515625e-05, -1.33514404296875e-05, -0.14760398864746094, -0.000286102294921875, -1.8119757442036644e-05, -0.0014058351516723633, -6.627810944337398e-05, -3.576278118089249e-07, -0.003789185080677271, 0.0, -0.00014709372771903872, -1.3709036466025282e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -0.04868519306182861, -3.802741048275493e-05, -0.02044391632080078, -3.4332275390625e-05, -5.316734313964844e-05, -2.706014311115723e-05, -7.176399230957031e-05, -9.536738616588991e-07, -5.230299472808838, -1.3232166566012893e-05, -0.0022258758544921875, -0.0025482177734375, -0.09743690490722656, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0017592906951904297, -1.645074735279195e-05, -0.0072422027587890625, -0.03802680969238281, -1.9073486328125e-05, -0.04035774990916252, -0.00013947486877441406, -0.013858795166015625, -1.006561279296875, -5.7220458984375e-06, 0.0, -0.0002353191375732422, -7.653236389160156e-05, -2.3841855067985307e-07, -0.3630180358886719, -0.05464744567871094, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.002785181161016226, -0.0011212488170713186, -6.222531374078244e-05, -2.6702880859375e-05, -1.9073486328125e-06, -3.24249267578125e-05, -4.57763671875e-05, 0.0, -0.0003376007080078125, -7.033342626527883e-06, -0.022602319717407227, -4.279613494873047e-05, -0.0023956298828125, -4.57763671875e-05, -0.004854798316955566, -1.823902130126953e-05, -1.9073486328125e-05], "choice_history": [55, 124, 221, 63, 103, "Huffer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Huffer", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "Charge", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, auras=[Aura(Charge(), MinionSelector(IsType(\n            MINION_TYPE.BEAST), BothPlayer()))])\n"}, {"score": -7.802658228658174, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Huffer", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 4, "hole1": 2}], "_type": "ClassDef", "name": "Huffer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0003754405479412526, -0.0004243830917403102, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.5299530029296875e-06, -8.606909977970645e-05, -4.8160552978515625e-05, -1.33514404296875e-05, -0.14760398864746094, -0.000286102294921875, -1.8119757442036644e-05, -0.0014058351516723633, -6.627810944337398e-05, -3.576278118089249e-07, -0.003789185080677271, 0.0, -0.00014709372771903872, -1.3709036466025282e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -3.126218795776367, -1.7762184143066406e-05, -4.521061897277832, -0.000335693359375, -0.00032317638397216797, -0.00010787858627736568, -0.00013196468353271484, -6.198863957251888e-06], "choice_history": [55, 124, 221, 63, 103, "Huffer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Huffer", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "4", "<EOS>", "2", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n"}, {"score": -8.48522249164921, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Huffer", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 4, "hole1": 2}], "_type": "ClassDef", "name": "Huffer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0003754405479412526, -0.0004243830917403102, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.5299530029296875e-06, -8.606909977970645e-05, -4.8160552978515625e-05, -1.33514404296875e-05, -0.14760398864746094, -0.000286102294921875, -1.8119757442036644e-05, -0.0014058351516723633, -6.627810944337398e-05, -3.576278118089249e-07, -0.003789185080677271, 0.0, -0.00014709372771903872, -1.3709036466025282e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -0.04868519306182861, -3.802741048275493e-05, -8.281393051147461, -0.0001468658447265625, -0.00033402442932128906, -4.625213477993384e-05, -0.00012230873107910156, -1.9073468138230965e-06], "choice_history": [55, 124, 221, 63, 103, "Huffer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Huffer", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "4", "<EOS>", "2", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n"}, {"score": -21.41791534423828, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, 0.0, -21.41791534423828], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 53}
{"beams": [{"score": -0.20067045859757116, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Humility", "hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}, "_type": "BinOp", "left": {"_type": "Num", "n": 1}, "op": {"_type": "Sub"}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "Humility", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -4.768370445162873e-07, -0.00022232085757423192, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0001354217529296875, -8.690313552506268e-05, -1.9073486328125e-06, -0.000110626220703125, -0.0025196075439453125, -3.814697265625e-05, -5.960462772236497e-07, -2.741813204920618e-06, -2.8609534638235345e-05, -1.1920928244535389e-07, -0.014620661735534668, 0.0, -0.0013174919877201319, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.1444091796875e-05, -0.0001430511474609375, 0.0, -0.004598021507263184, -7.748603820800781e-06, -0.004077911376953125, -0.000629425048828125, 0.0, 0.0, -0.000164031982421875, 0.0, -1.1444091796875e-05, 0.0, -2.682209014892578e-05, 0.0, -0.11832010746002197, 0.0, -0.000156402587890625, -0.03186321258544922, -0.002109527587890625, -0.0002040863037109375, -6.67572021484375e-05, -3.688037395477295e-06, -3.814697265625e-06, -0.003960609436035156, -0.0039386749267578125, -0.000152587890625, -5.7220458984375e-06, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.00048065185546875, 0.0, -6.67572021484375e-05, -1.1920928244535389e-07, -6.985664367675781e-05, 0.0, -0.009861946105957031, 0.0], "choice_history": [55, 124, 221, 63, 103, "Humility", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 30, 96, 21, 130, "1", "<EOS>", 57, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"score": -3.0905979639966645, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Humility", "hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}, "_type": "BinOp", "left": {"_type": "Num", "n": 1}, "op": {"_type": "Sub"}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "set_health_to"}], "_type": "ClassDef", "name": "Humility", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -4.768370445162873e-07, -0.00022232085757423192, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0001354217529296875, -8.690313552506268e-05, -1.9073486328125e-06, -0.000110626220703125, -0.0025196075439453125, -3.814697265625e-05, -5.960462772236497e-07, -2.741813204920618e-06, -2.8609534638235345e-05, -1.1920928244535389e-07, -0.014620661735534668, 0.0, -0.0013174919877201319, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.1444091796875e-05, -0.0001430511474609375, 0.0, -0.004598021507263184, -7.748603820800781e-06, -0.004077911376953125, -0.000629425048828125, 0.0, 0.0, -0.000164031982421875, 0.0, -1.1444091796875e-05, 0.0, -2.682209014892578e-05, 0.0, -2.931094169616699, -2.384185791015625e-06, -0.0001964569091796875, -0.10597896575927734, -0.005550384521484375, -0.00019073486328125, -3.4332275390625e-05, -4.40224539488554e-06, 0.0, -0.0036115646362304688, -0.0045948028564453125, -0.0001392364501953125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -0.0005035400390625, 0.0, -6.4849853515625e-05, -1.1920928244535389e-07, -6.604194641113281e-05, 0.0, -0.009110331535339355, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Humility", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 30, 96, 21, 130, "1", "<EOS>", 57, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1 - self.target.calculate_attack())\n"}, {"score": -4.048769936186709, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Humility", "hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "increase_health"}], "_type": "ClassDef", "name": "Humility", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -4.768370445162873e-07, -0.00022232085757423192, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0001354217529296875, -8.690313552506268e-05, -1.9073486328125e-06, -0.000110626220703125, -0.0025196075439453125, -3.814697265625e-05, -5.960462772236497e-07, -2.741813204920618e-06, -2.8609534638235345e-05, -1.1920928244535389e-07, -0.014620661735534668, 0.0, -0.0013174919877201319, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.1444091796875e-05, -0.0001430511474609375, 0.0, -0.004598021507263184, -7.748603820800781e-06, -0.004077911376953125, -0.000629425048828125, 0.0, 0.0, -0.000164031982421875, 0.0, -1.1444091796875e-05, 0.0, -2.682209014892578e-05, 0.0, -3.602536678314209, 0.0, -9.5367431640625e-06, -0.22632980346679688, -1.9073486328125e-06, -0.04746437072753906, -5.7220458984375e-05, -0.0002574920654296875, 0.0, -0.0010499954223632812, 0.0, -2.288818359375e-05, 0.0, -0.14189159870147705, 0.0], "choice_history": [55, 124, 221, 63, 103, "Humility", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"score": -4.9140146823949, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Humility", "hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "Humility", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -4.768370445162873e-07, -0.00022232085757423192, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0001354217529296875, -8.690313552506268e-05, -1.9073486328125e-06, -0.000110626220703125, -0.0025196075439453125, -3.814697265625e-05, -5.960462772236497e-07, -2.741813204920618e-06, -2.8609534638235345e-05, -1.1920928244535389e-07, -0.014620661735534668, 0.0, -0.0013174919877201319, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.1444091796875e-05, -0.0001430511474609375, 0.0, -0.004598021507263184, -7.748603820800781e-06, -0.004077911376953125, -0.000629425048828125, 0.0, 0.0, -0.000164031982421875, 0.0, -1.1444091796875e-05, 0.0, -2.682209014892578e-05, 0.0, -0.11832010746002197, 0.0, -0.000156402587890625, -4.500781059265137, -0.0008563995361328125, -0.26475226879119873, 0.0], "choice_history": [55, 124, 221, 63, 103, "Humility", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self)\n"}, {"score": -5.050960764858964, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Humility", "hole2": "PRIEST", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}, "_type": "BinOp", "left": {"_type": "Num", "n": 1}, "op": {"_type": "Sub"}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "Humility", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -4.768370445162873e-07, -0.00022232085757423192, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0001354217529296875, -8.690313552506268e-05, -1.9073486328125e-06, -0.000110626220703125, -0.0025196075439453125, -3.814697265625e-05, -5.960462772236497e-07, -2.741813204920618e-06, -2.8609534638235345e-05, -1.1920928244535389e-07, -4.868165969848633, -8.344646857949556e-07, -0.0010998238576576114, -1.1920928244535389e-07, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-05, -1.52587890625e-05, -0.000118255615234375, 0.0, -0.003674030303955078, -9.5367431640625e-06, -0.00263214111328125, -0.000644683837890625, 0.0, 0.0, -0.0001544952392578125, 0.0, -1.1444091796875e-05, 0.0, -2.682209014892578e-05, 0.0, -0.11732840538024902, 0.0, -0.000141143798828125, -0.03231239318847656, -0.0020904541015625, -0.000202178955078125, -6.4849853515625e-05, -3.687804564833641e-06, -1.9073486328125e-06, -0.003963470458984375, -0.0038976669311523438, -0.000156402587890625, -5.7220458984375e-06, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.00048065185546875, 0.0, -6.67572021484375e-05, -1.1920928244535389e-07, -6.985664367675781e-05, 0.0, -0.009865760803222656, 0.0], "choice_history": [55, 124, 221, 63, 103, "Humility", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Humility", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 30, 96, 21, 130, "1", "<EOS>", 57, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"score": -5.190292080532494, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Humility", "hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}, "_type": "BinOp", "left": {"_type": "Num", "n": 1}, "op": {"_type": "Sub"}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "Of"}], "_type": "ClassDef", "name": "Humility", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -4.768370445162873e-07, -0.00022232085757423192, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0001354217529296875, -8.690313552506268e-05, -1.9073486328125e-06, -0.000110626220703125, -0.0025196075439453125, -3.814697265625e-05, -5.960462772236497e-07, -2.741813204920618e-06, -2.8609534638235345e-05, -1.1920928244535389e-07, -0.014620661735534668, 0.0, -0.0013174919877201319, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.1444091796875e-05, -0.0001430511474609375, 0.0, -0.004598021507263184, -7.748603820800781e-06, -0.004077911376953125, -0.000629425048828125, 0.0, 0.0, -0.000164031982421875, 0.0, -1.1444091796875e-05, 0.0, -2.682209014892578e-05, 0.0, -5.023617267608643, -0.00023029083968140185, -0.0046253204345703125, -0.09589481353759766, -0.0182952880859375, -0.000362396240234375, -4.00543212890625e-05, -2.7385540306568146e-06, -1.9073486328125e-06, -0.004000663757324219, -0.003742218017578125, -0.0001468658447265625, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004596710205078125, 0.0, -0.0005016326904296875, 0.0, -7.62939453125e-05, -1.1920928244535389e-07, -6.783008575439453e-05, 0.0, -0.009070515632629395, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Humility", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "Of", "<EOS>", 208, 30, 96, 21, 130, "1", "<EOS>", 57, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.Of(1 - self.target.calculate_attack())\n"}, {"score": -5.45282945245269, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Humility", "hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}, "_type": "BinOp", "left": {"_type": "Num", "n": 1}, "op": {"_type": "Sub"}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "increase_health"}], "_type": "ClassDef", "name": "Humility", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -4.768370445162873e-07, -0.00022232085757423192, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0001354217529296875, -8.690313552506268e-05, -1.9073486328125e-06, -0.000110626220703125, -0.0025196075439453125, -3.814697265625e-05, -5.960462772236497e-07, -2.741813204920618e-06, -2.8609534638235345e-05, -1.1920928244535389e-07, -0.014620661735534668, 0.0, -0.0013174919877201319, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.1444091796875e-05, -0.0001430511474609375, 0.0, -0.004598021507263184, -7.748603820800781e-06, -0.004077911376953125, -0.000629425048828125, 0.0, 0.0, -0.000164031982421875, 0.0, -1.1444091796875e-05, 0.0, -2.682209014892578e-05, 0.0, -3.602536678314209, 0.0, -9.5367431640625e-06, -1.8016338348388672, -0.00241851806640625, -0.0002689361572265625, -3.0517578125e-05, -5.3513795137405396e-06, 0.0, -0.0038728713989257812, -0.00382232666015625, -0.0001220703125, -3.814697265625e-06, -1.9073486328125e-06, -0.0004730224609375, 0.0, -0.00026702880859375, 0.0, -5.91278076171875e-05, -1.1920928244535389e-07, -6.389617919921875e-05, 0.0, -0.008091449737548828, 0.0], "choice_history": [55, 124, 221, 63, 103, "Humility", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 30, 96, 21, 130, "1", "<EOS>", 57, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1 - self.target.calculate_attack())\n"}, {"score": -5.470794306648855, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Humility", "hole2": "DRUID", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}, "_type": "BinOp", "left": {"_type": "Num", "n": 1}, "op": {"_type": "Sub"}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "Humility", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -4.768370445162873e-07, -0.00022232085757423192, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0001354217529296875, -8.690313552506268e-05, -1.9073486328125e-06, -0.000110626220703125, -0.0025196075439453125, -3.814697265625e-05, -5.960462772236497e-07, -2.741813204920618e-06, -2.8609534638235345e-05, -1.1920928244535389e-07, -5.286669731140137, -1.1920928244535389e-07, -0.0003029106301255524, -1.1920928244535389e-07, -1.1444091796875e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0002765655517578125, -5.7220458984375e-06, -0.000164031982421875, 0.0, -0.0034148693084716797, -1.1444091796875e-05, -0.0033111572265625, -0.000675201416015625, 0.0, 0.0, -0.0001430511474609375, 0.0, -1.1444091796875e-05, 0.0, -2.682209014892578e-05, 0.0, -0.11866104602813721, 0.0, -0.0001354217529296875, -0.03251361846923828, -0.0020723342895507812, -0.0002002716064453125, -6.4849853515625e-05, -3.8070138543844223e-06, -3.814697265625e-06, -0.003963470458984375, -0.0037841796875, -0.0001583099365234375, -5.7220458984375e-06, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.00048065185546875, 0.0, -6.67572021484375e-05, -1.1920928244535389e-07, -6.985664367675781e-05, 0.0, -0.009879112243652344, 0.0], "choice_history": [55, 124, 221, 63, 103, "Humility", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Humility", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 30, 96, 21, 130, "1", "<EOS>", 57, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"score": -5.5548319073743, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Humility", "hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Num", "n": 1}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "Humility", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -4.768370445162873e-07, -0.00022232085757423192, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0001354217529296875, -8.690313552506268e-05, -1.9073486328125e-06, -0.000110626220703125, -0.0025196075439453125, -3.814697265625e-05, -5.960462772236497e-07, -2.741813204920618e-06, -2.8609534638235345e-05, -1.1920928244535389e-07, -0.014620661735534668, 0.0, -0.0013174919877201319, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.1444091796875e-05, -0.0001430511474609375, 0.0, -0.004598021507263184, -7.748603820800781e-06, -0.004077911376953125, -0.000629425048828125, 0.0, 0.0, -0.000164031982421875, 0.0, -1.1444091796875e-05, 0.0, -2.682209014892578e-05, 0.0, -0.11832010746002197, 0.0, -0.000156402587890625, -5.378045558929443, -8.7738037109375e-05, -0.029073655605316162, 0.0], "choice_history": [55, 124, 221, 63, 103, "Humility", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n"}, {"score": -5.803306922537722, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Humility", "hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Template28", "hole0": 1}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "Humility", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -4.768370445162873e-07, -0.00022232085757423192, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0001354217529296875, -8.690313552506268e-05, -1.9073486328125e-06, -0.000110626220703125, -0.0025196075439453125, -3.814697265625e-05, -5.960462772236497e-07, -2.741813204920618e-06, -2.8609534638235345e-05, -1.1920928244535389e-07, -0.014620661735534668, 0.0, -0.0013174919877201319, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.1444091796875e-05, -0.0001430511474609375, 0.0, -0.004598021507263184, -7.748603820800781e-06, -0.004077911376953125, -0.000629425048828125, 0.0, 0.0, -0.000164031982421875, 0.0, -1.1444091796875e-05, 0.0, -2.682209014892578e-05, 0.0, -0.11832010746002197, 0.0, -0.000156402587890625, -5.509369373321533, -0.12322044372558594, -0.023092150688171387, 0.0], "choice_history": [55, 124, 221, 63, 103, "Humility", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 43, 163, "1", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(Buff(ChangeAttack(1)))\n"}, {"score": -6.135544046980776, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Humility", "hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "Humility", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -4.768370445162873e-07, -0.00022232085757423192, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0001354217529296875, -8.690313552506268e-05, -1.9073486328125e-06, -0.000110626220703125, -0.0025196075439453125, -3.814697265625e-05, -5.960462772236497e-07, -2.741813204920618e-06, -2.8609534638235345e-05, -1.1920928244535389e-07, -0.014620661735534668, 0.0, -0.0013174919877201319, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.1444091796875e-05, -0.0001430511474609375, 0.0, -0.004598021507263184, -7.748603820800781e-06, -0.004077911376953125, -0.000629425048828125, 0.0, 0.0, -0.000164031982421875, 0.0, -1.1444091796875e-05, 0.0, -2.682209014892578e-05, 0.0, -5.85938024520874, 0.0, -4.1961669921875e-05, -0.24681377410888672, -7.62939453125e-06, -0.0001519918441772461, 0.0], "choice_history": [55, 124, 221, 63, 103, "Humility", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -6.141721219045557, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Humility", "hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Num", "n": 1}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "set_health_to"}], "_type": "ClassDef", "name": "Humility", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -4.768370445162873e-07, -0.00022232085757423192, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0001354217529296875, -8.690313552506268e-05, -1.9073486328125e-06, -0.000110626220703125, -0.0025196075439453125, -3.814697265625e-05, -5.960462772236497e-07, -2.741813204920618e-06, -2.8609534638235345e-05, -1.1920928244535389e-07, -0.014620661735534668, 0.0, -0.0013174919877201319, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.1444091796875e-05, -0.0001430511474609375, 0.0, -0.004598021507263184, -7.748603820800781e-06, -0.004077911376953125, -0.000629425048828125, 0.0, 0.0, -0.000164031982421875, 0.0, -1.1444091796875e-05, 0.0, -2.682209014892578e-05, 0.0, -2.931094169616699, -2.384185791015625e-06, -0.0001964569091796875, -3.15482234954834, -0.0002002716064453125, -0.026257142424583435, 0.0], "choice_history": [55, 124, 221, 63, 103, "Humility", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}, {"score": -6.532040222277061, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Humility", "hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}, "_type": "BinOp", "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "op": {"_type": "Sub"}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "args": [{"id": "<UNK>", "_type": "Name"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "Humility", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -4.768370445162873e-07, -0.00022232085757423192, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0001354217529296875, -8.690313552506268e-05, -1.9073486328125e-06, -0.000110626220703125, -0.0025196075439453125, -3.814697265625e-05, -5.960462772236497e-07, -2.741813204920618e-06, -2.8609534638235345e-05, -1.1920928244535389e-07, -0.014620661735534668, 0.0, -0.0013174919877201319, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.1444091796875e-05, -0.0001430511474609375, 0.0, -0.004598021507263184, -7.748603820800781e-06, -5.5201416015625, -9.918212890625e-05, -0.00046563148498535156, 0.0, -0.000125885009765625, -0.0004978179931640625, -1.9073486328125e-06, -1.6689191397745162e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -4.947120396536775e-05, -2.1457672119140625e-06, -0.5805625915527344, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.3854863431770355e-05, 0.0, -1.1563301086425781e-05, 0.0, -2.86102294921875e-05, -5.14984130859375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.52587890625e-05, -1.7881393432617188e-05, -0.011989593505859375, -1.9073486328125e-05, -1.33514404296875e-05, -0.0013170242309570312, -1.9073486328125e-06, -0.004203915596008301, -1.4781869140279014e-05, -0.03184032440185547, -0.0004596710205078125, -0.002597808837890625, -7.62939453125e-06, -3.4332275390625e-05, -3.62396240234375e-05, -8.0108642578125e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -5.733966827392578e-05, -1.1920928244535389e-07, -0.015375137329101562, 0.0, -0.0015583038330078125, -0.000213623046875, -0.0002956390380859375, -1.33514404296875e-05, 0.0, -0.000110626220703125, 0.0, -0.0001049041748046875, 0.0, -0.0007152557373046875, 0.0, -6.496906280517578e-05, 0.0, -0.011828064918518066, 0.0, -0.00052642822265625, -1.9073486328125e-06, -2.86102294921875e-05, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -0.0001659393310546875, 0.0, -0.0006885528564453125, 0.0, -0.00012886524200439453, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920928244535389e-07, -0.22813332080841064, 0.0, -3.814697265625e-06, -0.0023784637451171875, 0.0, -0.09036397933959961, -5.125993993715383e-06], "choice_history": [55, 124, 221, 63, 103, "Humility", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 12, 96, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 57, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        self.target.change_attack(<UNK>)\n"}, {"score": -6.715468861383826, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Humility", "hole2": "PALADIN", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"right": {"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "_type": "BinOp", "left": {"_type": "Num", "n": 1}, "op": {"_type": "Sub"}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "Humility", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -4.768370445162873e-07, -0.00022232085757423192, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0001354217529296875, -8.690313552506268e-05, -1.9073486328125e-06, -0.000110626220703125, -0.0025196075439453125, -3.814697265625e-05, -5.960462772236497e-07, -2.741813204920618e-06, -2.8609534638235345e-05, -1.1920928244535389e-07, -0.014620661735534668, 0.0, -0.0013174919877201319, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.1444091796875e-05, -0.0001430511474609375, 0.0, -0.004598021507263184, -7.748603820800781e-06, -0.004077911376953125, -0.000629425048828125, 0.0, 0.0, -0.000164031982421875, 0.0, -1.1444091796875e-05, 0.0, -2.682209014892578e-05, 0.0, -0.11832010746002197, 0.0, -0.000156402587890625, -0.03186321258544922, -0.002109527587890625, -0.0002040863037109375, -6.67572021484375e-05, -3.688037395477295e-06, -3.814697265625e-06, -0.003960609436035156, -5.785487174987793, -3.0517578125e-05, -0.05054664611816406, 0.0, -0.0003204345703125, 0.0, -2.09808349609375e-05, 0.0, -3.838539123535156e-05, 0.0, -0.693187952041626, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Humility", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 30, 96, 21, 130, "1", "<EOS>", 57, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.health)\n"}, {"score": -20.07574462890625, "model_output": {"_type": "Module", "body": []}, "score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -20.075672149658203], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 54}
{"beams": [{"score": -0.510048059793462, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "<UNK> Mark", "hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Num", "n": 1}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "set_health_to"}], "_type": "ClassDef", "name": "<UNK>Mark", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -2.09808349609375e-05, -5.340576171875e-05, -2.288818359375e-05, -0.00037657178472727537, -0.0009055821574293077, -6.079652303014882e-05, 0.0, -7.62939453125e-06, 0.0, -0.004181027412414551, -9.918212890625e-05, 0.0, -0.004161834716796875, -0.001033782958984375, -0.0004062652587890625, -0.004724198020994663, -0.000247955322265625, -9.810924530029297e-05, -2.09808349609375e-05, -0.00020263248006813228, 0.0, -0.07937073707580566, 0.0, -0.0008851289749145508, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.006794095039367676, 0.0, -0.0003948211669921875, -0.0007534027099609375, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -5.7220458984375e-06, 0.0, -0.23980486392974854, -2.741813204920618e-06, -4.1961669921875e-05, -0.04341411590576172, -1.52587890625e-05, -0.12127763032913208, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mark", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}, {"score": -2.827627746435155, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "<UNK> Mark", "hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Num", "n": 0}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "set_health_to"}], "_type": "ClassDef", "name": "<UNK>Mark", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -2.09808349609375e-05, -5.340576171875e-05, -2.288818359375e-05, -0.00037657178472727537, -0.0009055821574293077, -6.079652303014882e-05, 0.0, -7.62939453125e-06, 0.0, -0.004181027412414551, -9.918212890625e-05, 0.0, -0.004161834716796875, -0.001033782958984375, -0.0004062652587890625, -0.004724198020994663, -0.000247955322265625, -9.810924530029297e-05, -2.09808349609375e-05, -0.00020263248006813228, 0.0, -0.07937073707580566, 0.0, -0.0008851289749145508, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.006794095039367676, 0.0, -0.0003948211669921875, -0.0007534027099609375, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -5.7220458984375e-06, 0.0, -0.23980486392974854, -2.741813204920618e-06, -4.1961669921875e-05, -0.04341411590576172, -1.52587890625e-05, -2.438857316970825, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mark", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 39, 130, "0", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(0)\n"}, {"score": -2.954624621244875, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "<UNK> Mark", "hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Num", "n": 1}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "<UNK>Mark", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -2.09808349609375e-05, -5.340576171875e-05, -2.288818359375e-05, -0.00037657178472727537, -0.0009055821574293077, -6.079652303014882e-05, 0.0, -7.62939453125e-06, 0.0, -0.004181027412414551, -9.918212890625e-05, 0.0, -0.004161834716796875, -0.001033782958984375, -0.0004062652587890625, -0.004724198020994663, -0.000247955322265625, -9.810924530029297e-05, -2.09808349609375e-05, -0.00020263248006813228, 0.0, -0.07937073707580566, 0.0, -0.0008851289749145508, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.006794095039367676, 0.0, -0.0003948211669921875, -0.0007534027099609375, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -5.7220458984375e-06, 0.0, -2.372735023498535, 0.0, -3.62396240234375e-05, -0.37105369567871094, -5.7220458984375e-06, -0.10530245304107666, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mark", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n"}, {"score": -3.406453339429845, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "<UNK> Mark", "hole2": "PALADIN", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Num", "n": 1}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "set_health_to"}], "_type": "ClassDef", "name": "<UNK>Mark", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -2.09808349609375e-05, -5.340576171875e-05, -2.288818359375e-05, -0.00037657178472727537, -0.0009055821574293077, -6.079652303014882e-05, 0.0, -7.62939453125e-06, 0.0, -0.004181027412414551, -9.918212890625e-05, 0.0, -0.004161834716796875, -0.001033782958984375, -0.0004062652587890625, -0.004724198020994663, -0.000247955322265625, -9.810924530029297e-05, -2.09808349609375e-05, -0.00020263248006813228, 0.0, -2.9797794818878174, 0.0, -0.00037097930908203125, 0.0, -0.0001010894775390625, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -8.58306884765625e-05, -1.1444091796875e-05, -0.006683468818664551, 0.0, -0.0005664825439453125, -0.0007877349853515625, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.0003490447998046875, 0.0, -5.7220458984375e-06, 0.0, -0.23766613006591797, -2.741813204920618e-06, -4.38690185546875e-05, -0.043308258056640625, -1.52587890625e-05, -0.11988985538482666, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mark", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}, {"score": -3.7490507048096333, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "<UNK> Mark", "hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "<UNK>Mark", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -2.09808349609375e-05, -5.340576171875e-05, -2.288818359375e-05, -0.00037657178472727537, -0.0009055821574293077, -6.079652303014882e-05, 0.0, -7.62939453125e-06, 0.0, -0.004181027412414551, -9.918212890625e-05, 0.0, -0.004161834716796875, -0.001033782958984375, -0.0004062652587890625, -0.004724198020994663, -0.000247955322265625, -9.810924530029297e-05, -2.09808349609375e-05, -0.00020263248006813228, 0.0, -0.07937073707580566, 0.0, -0.0008851289749145508, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.006794095039367676, 0.0, -0.0003948211669921875, -0.0007534027099609375, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -5.7220458984375e-06, 0.0, -3.30027437210083, 0.0, -4.76837158203125e-05, -0.3428831100463867, -1.9073486328125e-06, -0.0003521442413330078, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mark", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -3.75206157011052, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "<UNK> Mark", "hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}, "_type": "BinOp", "left": {"_type": "Num", "n": 1}, "op": {"_type": "Sub"}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "change_attack"}], "_type": "ClassDef", "name": "<UNK>Mark", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -2.09808349609375e-05, -5.340576171875e-05, -2.288818359375e-05, -0.00037657178472727537, -0.0009055821574293077, -6.079652303014882e-05, 0.0, -7.62939453125e-06, 0.0, -0.004181027412414551, -9.918212890625e-05, 0.0, -0.004161834716796875, -0.001033782958984375, -0.0004062652587890625, -0.004724198020994663, -0.000247955322265625, -9.810924530029297e-05, -2.09808349609375e-05, -0.00020263248006813228, 0.0, -0.07937073707580566, 0.0, -0.0008851289749145508, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.006794095039367676, 0.0, -0.0003948211669921875, -0.0007534027099609375, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -5.7220458984375e-06, 0.0, -2.372735023498535, 0.0, -3.62396240234375e-05, -1.1941499710083008, -0.004500389099121094, -0.000148773193359375, -5.7220458984375e-06, -0.03748035058379173, 0.0, -0.0045833587646484375, -0.001857757568359375, -0.000141143798828125, -3.0517578125e-05, -5.7220458984375e-06, -0.00128173828125, 0.0, -0.0008449554443359375, 0.0, -0.000362396240234375, -1.1920928244535389e-07, -1.3947486877441406e-05, 0.0, -0.02839195728302002, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mark", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 30, 96, 21, 130, "1", "<EOS>", 57, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"score": -3.873698173137626, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "<UNK> Mark", "hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}, "_type": "BinOp", "left": {"_type": "Num", "n": 1}, "op": {"_type": "Sub"}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "set_health_to"}], "_type": "ClassDef", "name": "<UNK>Mark", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -2.09808349609375e-05, -5.340576171875e-05, -2.288818359375e-05, -0.00037657178472727537, -0.0009055821574293077, -6.079652303014882e-05, 0.0, -7.62939453125e-06, 0.0, -0.004181027412414551, -9.918212890625e-05, 0.0, -0.004161834716796875, -0.001033782958984375, -0.0004062652587890625, -0.004724198020994663, -0.000247955322265625, -9.810924530029297e-05, -2.09808349609375e-05, -0.00020263248006813228, 0.0, -0.07937073707580566, 0.0, -0.0008851289749145508, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.006794095039367676, 0.0, -0.0003948211669921875, -0.0007534027099609375, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -5.7220458984375e-06, 0.0, -0.23980486392974854, -2.741813204920618e-06, -4.1961669921875e-05, -3.3771305084228516, -0.0048809051513671875, -0.000110626220703125, -9.5367431640625e-06, -0.10992595553398132, 0.0, -0.0034770965576171875, -0.0019893646240234375, -0.0001506805419921875, -2.6702880859375e-05, -5.7220458984375e-06, -0.001430511474609375, 0.0, -0.0010166168212890625, 0.0, -0.000354766845703125, -2.3841855067985307e-07, -1.5854835510253906e-05, 0.0, -0.02783203125, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mark", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 30, 96, 21, 130, "1", "<EOS>", 57, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1 - self.target.calculate_attack())\n"}, {"score": -4.48555958089446, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "<UNK> Mark", "hole2": "WARRIOR", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Num", "n": 1}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "set_health_to"}], "_type": "ClassDef", "name": "<UNK>Mark", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -2.09808349609375e-05, -5.340576171875e-05, -2.288818359375e-05, -0.00037657178472727537, -0.0009055821574293077, -6.079652303014882e-05, 0.0, -7.62939453125e-06, 0.0, -0.004181027412414551, -9.918212890625e-05, 0.0, -0.004161834716796875, -0.001033782958984375, -0.0004062652587890625, -0.004724198020994663, -0.000247955322265625, -9.810924530029297e-05, -2.09808349609375e-05, -0.00020263248006813228, 0.0, -4.060131072998047, -3.814697265625e-06, -0.0001741647720336914, 0.0, -0.0001068115234375, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -7.62939453125e-06, -7.82012939453125e-05, -1.1444091796875e-05, -0.006952404975891113, 0.0, -0.0006122589111328125, -0.0007648468017578125, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.0003337860107421875, 0.0, -5.7220458984375e-06, 0.0, -0.23677325248718262, -2.741813204920618e-06, -4.38690185546875e-05, -0.04294586181640625, -1.52587890625e-05, -0.11981239914894104, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mark", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}, {"score": -4.581547347875556, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "<UNK> Mark", "hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Num", "n": 5}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "set_health_to"}], "_type": "ClassDef", "name": "<UNK>Mark", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -2.09808349609375e-05, -5.340576171875e-05, -2.288818359375e-05, -0.00037657178472727537, -0.0009055821574293077, -6.079652303014882e-05, 0.0, -7.62939453125e-06, 0.0, -0.004181027412414551, -9.918212890625e-05, 0.0, -0.004161834716796875, -0.001033782958984375, -0.0004062652587890625, -0.004724198020994663, -0.000247955322265625, -9.810924530029297e-05, -2.09808349609375e-05, -0.00020263248006813228, 0.0, -0.07937073707580566, 0.0, -0.0008851289749145508, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.006794095039367676, 0.0, -0.0003948211669921875, -0.0007534027099609375, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -5.7220458984375e-06, 0.0, -0.23980486392974854, -2.741813204920618e-06, -4.1961669921875e-05, -0.04341411590576172, -1.52587890625e-05, -4.192776679992676, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mark", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 39, 130, "5", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(5)\n"}, {"score": -4.635539976927248, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "<UNK> Mark", "hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "increase_health"}], "_type": "ClassDef", "name": "<UNK>Mark", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -2.09808349609375e-05, -5.340576171875e-05, -2.288818359375e-05, -0.00037657178472727537, -0.0009055821574293077, -6.079652303014882e-05, 0.0, -7.62939453125e-06, 0.0, -0.004181027412414551, -9.918212890625e-05, 0.0, -0.004161834716796875, -0.001033782958984375, -0.0004062652587890625, -0.004724198020994663, -0.000247955322265625, -9.810924530029297e-05, -2.09808349609375e-05, -0.00020263248006813228, 0.0, -0.07937073707580566, 0.0, -0.0008851289749145508, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.006794095039367676, 0.0, -0.0003948211669921875, -0.0007534027099609375, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -5.7220458984375e-06, 0.0, -4.172274589538574, 0.0, -5.7220458984375e-06, -0.007419586181640625, -2.288818359375e-05, -0.031327247619628906, -2.288818359375e-05, -0.0002193450927734375, 0.0, -0.004764556884765625, 0.0, -1.52587890625e-05, 0.0, -0.3139764070510864, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mark", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"score": -5.342100242200104, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "<UNK> Mark", "hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Template28", "hole0": 1}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_buff"}], "_type": "ClassDef", "name": "<UNK>Mark", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -2.09808349609375e-05, -5.340576171875e-05, -2.288818359375e-05, -0.00037657178472727537, -0.0009055821574293077, -6.079652303014882e-05, 0.0, -7.62939453125e-06, 0.0, -0.004181027412414551, -9.918212890625e-05, 0.0, -0.004161834716796875, -0.001033782958984375, -0.0004062652587890625, -0.004724198020994663, -0.000247955322265625, -9.810924530029297e-05, -2.09808349609375e-05, -0.00020263248006813228, 0.0, -0.07937073707580566, 0.0, -0.0008851289749145508, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.006794095039367676, 0.0, -0.0003948211669921875, -0.0007534027099609375, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -5.7220458984375e-06, 0.0, -4.4419755935668945, -4.172325134277344e-06, -2.09808349609375e-05, -0.7604646682739258, -0.0004901885986328125, -0.033653151243925095, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mark", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 43, 163, "1", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(1)))\n"}, {"score": -5.559091920080363, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "<UNK> Mark", "hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}, "_type": "BinOp", "left": {"_type": "Num", "n": 1}, "op": {"_type": "Sub"}}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "<UNK>Mark", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -2.09808349609375e-05, -5.340576171875e-05, -2.288818359375e-05, -0.00037657178472727537, -0.0009055821574293077, -6.079652303014882e-05, 0.0, -7.62939453125e-06, 0.0, -0.004181027412414551, -9.918212890625e-05, 0.0, -0.004161834716796875, -0.001033782958984375, -0.0004062652587890625, -0.004724198020994663, -0.000247955322265625, -9.810924530029297e-05, -2.09808349609375e-05, -0.00020263248006813228, 0.0, -0.07937073707580566, 0.0, -0.0008851289749145508, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.006794095039367676, 0.0, -0.0003948211669921875, -0.0007534027099609375, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -5.7220458984375e-06, 0.0, -3.30027437210083, 0.0, -4.76837158203125e-05, -2.0684852600097656, -0.006622314453125, -0.0001316070556640625, -5.7220458984375e-06, -0.04120924696326256, 0.0, -0.004248619079589844, -0.0023097991943359375, -0.000171661376953125, -1.9073486328125e-05, -7.62939453125e-06, -0.0011310577392578125, 0.0, -0.0006999969482421875, 0.0, -0.000431060791015625, -2.3841855067985307e-07, -1.4066696166992188e-05, 0.0, -0.02779102325439453, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mark", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 30, 96, 21, 130, "1", "<EOS>", 57, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(1 - self.target.calculate_attack())\n"}, {"score": -5.8703971966133395, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "<UNK> Mark", "hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template38", "hole0": "1"}, {"_type": "Template38", "hole0": "TurnEnded"}]}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "add_effect"}], "_type": "ClassDef", "name": "<UNK>Mark", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -2.09808349609375e-05, -5.340576171875e-05, -2.288818359375e-05, -0.00037657178472727537, -0.0009055821574293077, -6.079652303014882e-05, 0.0, -7.62939453125e-06, 0.0, -0.004181027412414551, -9.918212890625e-05, 0.0, -0.004161834716796875, -0.001033782958984375, -0.0004062652587890625, -0.004724198020994663, -0.000247955322265625, -9.810924530029297e-05, -2.09808349609375e-05, -0.00020263248006813228, 0.0, -0.07937073707580566, 0.0, -0.0008851289749145508, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.006794095039367676, 0.0, -0.0003948211669921875, -0.0007534027099609375, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -5.7220458984375e-06, 0.0, -4.3538498878479, 0.0, -1.9073486328125e-06, -0.32330322265625, -0.0015888214111328125, -5.53131103515625e-05, 0.0, -0.016494393348693848, -8.58306884765625e-05, -0.001201629638671875, -0.009385108947753906, -8.0108642578125e-05, -0.022262120619416237, -0.00010549504804657772, -0.019489288330078125, -9.5367431640625e-06, -1.0143218040466309, -0.0026712408289313316, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mark", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "1", "<EOS>", 49, 174, "Turn", "Ended", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Aura(1(), TurnEnded()))\n"}, {"score": -6.014557687612971, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "<UNK> Mark", "hole2": "HUNTER", "hole1": 0, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "<UNK>Mark", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -2.09808349609375e-05, -5.340576171875e-05, -2.288818359375e-05, -0.00037657178472727537, -0.0009055821574293077, -6.079652303014882e-05, 0.0, -7.62939453125e-06, 0.0, -0.004181027412414551, -9.918212890625e-05, 0.0, -0.004161834716796875, -0.001033782958984375, -0.0004062652587890625, -0.004724198020994663, -0.000247955322265625, -9.810924530029297e-05, -2.09808349609375e-05, -0.00020263248006813228, 0.0, -0.07937073707580566, 0.0, -0.0008851289749145508, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.006794095039367676, 0.0, -0.0003948211669921875, -0.0007534027099609375, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -5.7220458984375e-06, 0.0, -4.851362228393555, -1.1920928244535389e-07, -0.0008411407470703125, -0.04227733612060547, -0.43565940856933594, -5.340576171875e-05, -4.00543212890625e-05, -0.0001678466796875, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -0.0012922286987304688, 0.0, -9.655952453613281e-06, -3.933906555175781e-06, -0.03496706485748291, 0.0, -0.5422754287719727, 0.0, -2.6702880859375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mark", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(self.target.calculate_attack(), self)\n"}, {"score": -21.478591918945312, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -21.47850799560547], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 55}
{"beams": [{"score": -0.7759407188853444, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.00027104519540444016, -0.00035124807618558407, -0.014552764594554901, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -2.50339189733495e-06, -1.3709065569855738e-05, -3.445148468017578e-05, -9.5367431640625e-06, -0.5682830810546875, -5.91278076171875e-05, -1.9431114196777344e-05, -1.9073468138230965e-06, -2.47955322265625e-05, -0.001354217529296875, -3.0517578125e-05, -0.001511216163635254, 0.0, -4.76837158203125e-05, -0.0018253326416015625, -7.62939453125e-06, 0.0, -0.0007038116455078125, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -0.00031280517578125, -3.576278118089249e-07, -3.814697265625e-06, -9.655952453613281e-06, 0.0, -0.0012054443359375, -0.0002384185791015625, -0.000133514404296875, -1.537788011773955e-05, -2.6941299438476562e-05, -1.4901099348207936e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.0132769602932967e-05, -3.11136209347751e-05, -1.71661376953125e-05, 0.0, -7.62939453125e-06, -0.0002155303955078125, -0.0041429996490478516, -1.5854835510253906e-05, -0.0018471479415893555, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0008469820022583008, -1.8954096958623268e-05, -0.02419757843017578, -3.6239478504285216e-05, -0.00026702880859375, -2.86102294921875e-05, 0.0, -0.00015437598631251603, -2.801412483677268e-05, -7.62939453125e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0007171630859375, 0.0, -0.04604935646057129, -0.007565140724182129, -0.000118255615234375, -1.71661376953125e-05, -0.0016412734985351562, 0.0, -2.6702880859375e-05, -4.00543212890625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0002689361572265625, -1.311301275563892e-06, -2.288818359375e-05, -0.0034208297729492188, -0.0003223419189453125, -0.007105459924787283, -0.0001742839813232422, -0.06927871704101562, -0.000209808349609375, -0.0003032684326171875, 0.0, -0.008629322052001953, -0.0007877347525209188, -2.0265579223632812e-06, -0.003368377685546875, -6.866455078125e-05, -1.9073486328125e-05, -9.72747802734375e-05, -2.86102294921875e-05, -9.34600830078125e-05, -1.1444091796875e-05, -0.0007081031799316406, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.1444091796875e-05, -0.0003986358642578125, -1.9073486328125e-06, -5.14984130859375e-05, -2.09808349609375e-05, -0.00040459632873535156, -7.2479248046875e-05, -4.768370445162873e-07, -0.0001163482666015625, -9.5367431640625e-06, -2.2649765014648438e-06, -1.311301275563892e-06, -0.0004590749158523977, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Ironforge", "Rifleman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ironforge", " ", "Rifleman", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -0.9527617196272189, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}, {"_type": "Template11", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.00027104519540444016, -0.00035124807618558407, -0.014552764594554901, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -2.50339189733495e-06, -1.3709065569855738e-05, -3.445148468017578e-05, -9.5367431640625e-06, -0.8370895385742188, -2.09808349609375e-05, -5.960462772236497e-07, -1.2159347534179688e-05, -7.62939453125e-06, -4.0531158447265625e-06, -4.792177060153335e-05, -1.1920928244535389e-07, -0.000555872917175293, -1.9073486328125e-06, -0.000586986483540386, -1.311301275563892e-06, -6.103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.630750380689278e-05, -1.6689286894688848e-06, -9.5367431640625e-06, -0.07042884826660156, -0.0002002716064453125, -0.011994955129921436, -4.4226646423339844e-05, -0.007513999938964844, -0.0001220703125, -0.000339508056640625, -3.814697265625e-06, -0.0036391019821166992, -0.00045835963101126254, -2.0265579223632812e-06, -0.0018634796142578125, -9.5367431640625e-05, -1.9073486328125e-05, -7.62939453125e-05, -2.09808349609375e-05, -8.0108642578125e-05, -7.62939453125e-06, -0.0003992319107055664, -1.52587890625e-05, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -0.00037384033203125, 0.0, -4.76837158203125e-05, -2.09808349609375e-05, -0.00039315223693847656, -6.4849853515625e-05, -5.960462772236497e-07, -0.0001201629638671875, -9.5367431640625e-06, -2.1457672119140625e-06, -1.0728830375228426e-06, -0.0004817246808670461, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Ironforge", "Rifleman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -4.222212844424973, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"_type": "Template38", "hole0": "SelfSelector"}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.00027104519540444016, -0.00035124807618558407, -0.014552764594554901, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -2.50339189733495e-06, -1.3709065569855738e-05, -3.445148468017578e-05, -9.5367431640625e-06, -0.5682830810546875, -5.91278076171875e-05, -1.9431114196777344e-05, -1.9073468138230965e-06, -2.47955322265625e-05, -0.001354217529296875, -3.0517578125e-05, -0.001511216163635254, 0.0, -4.76837158203125e-05, -0.0018253326416015625, -7.62939453125e-06, 0.0, -0.0007038116455078125, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -0.00031280517578125, -3.576278118089249e-07, -3.814697265625e-06, -9.655952453613281e-06, 0.0, -0.0012054443359375, -0.0002384185791015625, -0.000133514404296875, -1.537788011773955e-05, -2.6941299438476562e-05, -1.4901099348207936e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.0132769602932967e-05, -3.11136209347751e-05, -1.71661376953125e-05, 0.0, -7.62939453125e-06, -0.0002155303955078125, -0.0041429996490478516, -1.5854835510253906e-05, -0.0018471479415893555, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0008469820022583008, -1.8954096958623268e-05, -0.02419757843017578, -3.6239478504285216e-05, -0.00026702880859375, -2.86102294921875e-05, 0.0, -0.00015437598631251603, -2.801412483677268e-05, -7.62939453125e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0007171630859375, 0.0, -0.04604935646057129, -0.007565140724182129, -0.000118255615234375, -1.71661376953125e-05, -0.0016412734985351562, 0.0, -2.6702880859375e-05, -4.00543212890625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0002689361572265625, -1.311301275563892e-06, -2.288818359375e-05, -0.0034208297729492188, -0.0003223419189453125, -0.007105459924787283, -0.0001742839813232422, -2.7325429916381836, -1.9073486328125e-06, -0.7981287240982056, -0.00014351849677041173, 0.0, -0.0002231597900390625, -2.47955322265625e-05, -4.768370445162873e-07, -5.483612312673358e-06, -0.00038850304554216564, -1.5497195136049413e-06], "choice_history": [55, 124, 221, 63, 103, "Ironforge", "Rifleman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ironforge", " ", "Rifleman", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -4.407698073277508, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template37", "hole0": 1}, {"hole2": 2, "_type": "Template32", "hole0": "Give", "hole1": "ChangeAttack"}]}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}]}}, {"_type": "Template11", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.00027104519540444016, -0.00035124807618558407, -0.014552764594554901, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -2.50339189733495e-06, -1.3709065569855738e-05, -3.445148468017578e-05, -9.5367431640625e-06, -0.8370895385742188, -2.09808349609375e-05, -5.960462772236497e-07, -1.2159347534179688e-05, -7.62939453125e-06, -4.0531158447265625e-06, -4.792177060153335e-05, -1.1920928244535389e-07, -0.000555872917175293, -1.9073486328125e-06, -0.000586986483540386, -1.311301275563892e-06, -6.103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.630750380689278e-05, -1.6689286894688848e-06, -9.5367431640625e-06, -2.7961292266845703, -0.001293182373046875, -0.0008115768432617188, -0.0016012191772460938, -0.001056671142578125, -0.0004986634012311697, -0.0008560419082641602, -0.44501495361328125, -0.026673316955566406, -0.029334137216210365, -5.4120333516038954e-05, -0.042054273188114166, -0.17428815364837646, -5.7220458984375e-06, -0.00010020943591371179, -4.291534423828125e-06, -0.0051288604736328125, -0.013584136962890625, -0.0006313323974609375, -0.000164031982421875, -0.008277966640889645, -0.002193450927734375, -2.2649765014648438e-06, -0.001293182373046875, -0.000152587890625, -1.33514404296875e-05, -0.0001544952392578125, -2.288818359375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.00027000904083251953, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -1.33514404296875e-05, -0.0009212493896484375, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -0.00040459632873535156, -7.259845733642578e-05, -4.768370445162873e-07, -0.0001220703125, -9.5367431640625e-06, -2.1457672119140625e-06, -5.960462772236497e-07, -0.0005067586316727102, 0.0], "choice_history": [55, 124, 221, 63, 103, "Ironforge", "Rifleman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 35, 120, 209, 48, 173, "1", "<EOS>", 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry([Damage(1), Give(\n            ChangeAttack(2))], MinionSelector(players=BothPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -4.470850148993399, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.00027104519540444016, -0.00035124807618558407, -0.014552764594554901, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -2.50339189733495e-06, -1.3709065569855738e-05, -3.445148468017578e-05, -9.5367431640625e-06, -0.5682830810546875, -5.91278076171875e-05, -1.9431114196777344e-05, -1.9073468138230965e-06, -2.47955322265625e-05, -0.001354217529296875, -3.0517578125e-05, -0.001511216163635254, 0.0, -4.76837158203125e-05, -0.0018253326416015625, -7.62939453125e-06, 0.0, -0.0007038116455078125, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -0.00031280517578125, -3.576278118089249e-07, -3.814697265625e-06, -9.655952453613281e-06, 0.0, -0.0012054443359375, -0.0002384185791015625, -0.000133514404296875, -1.537788011773955e-05, -2.6941299438476562e-05, -1.4901099348207936e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.0132769602932967e-05, -3.11136209347751e-05, -1.71661376953125e-05, 0.0, -7.62939453125e-06, -0.0002155303955078125, -0.0041429996490478516, -1.5854835510253906e-05, -0.0018471479415893555, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0008469820022583008, -1.8954096958623268e-05, -0.02419757843017578, -3.6239478504285216e-05, -0.00026702880859375, -2.86102294921875e-05, 0.0, -0.00015437598631251603, -2.801412483677268e-05, -7.62939453125e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0007171630859375, 0.0, -3.7581026554107666, -0.000141143798828125, -4.57763671875e-05, -2.47955322265625e-05, -0.00104522705078125, 0.0, -2.86102294921875e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.00020623207092285156, -1.9073468138230965e-06, -2.288818359375e-05, -0.0042266845703125, -0.0003070831298828125, -0.005332556087523699, -0.00018787384033203125, -0.059932708740234375, -0.000255584716796875, -0.00028228759765625, 0.0, -0.00976264476776123, -0.000698804622516036, -2.0265579223632812e-06, -0.0036191940307617188, -7.2479248046875e-05, -2.09808349609375e-05, -9.5367431640625e-05, -2.47955322265625e-05, -9.34600830078125e-05, -9.5367431640625e-06, -0.0007233619689941406, -1.52587890625e-05, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -0.000396728515625, -1.9073486328125e-06, -5.340576171875e-05, -2.09808349609375e-05, -0.00040459632873535156, -7.2479248046875e-05, -4.768370445162873e-07, -0.00011444091796875, -9.5367431640625e-06, -2.2649765014648438e-06, -1.311301275563892e-06, -0.0004607438459061086, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Ironforge", "Rifleman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ironforge", " ", "Rifleman", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -4.644541802277331, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"_type": "Template38", "hole0": "HeroSelector"}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.00027104519540444016, -0.00035124807618558407, -0.014552764594554901, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -2.50339189733495e-06, -1.3709065569855738e-05, -3.445148468017578e-05, -9.5367431640625e-06, -0.5682830810546875, -5.91278076171875e-05, -1.9431114196777344e-05, -1.9073468138230965e-06, -2.47955322265625e-05, -0.001354217529296875, -3.0517578125e-05, -0.001511216163635254, 0.0, -4.76837158203125e-05, -0.0018253326416015625, -7.62939453125e-06, 0.0, -0.0007038116455078125, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -0.00031280517578125, -3.576278118089249e-07, -3.814697265625e-06, -9.655952453613281e-06, 0.0, -0.0012054443359375, -0.0002384185791015625, -0.000133514404296875, -1.537788011773955e-05, -2.6941299438476562e-05, -1.4901099348207936e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.0132769602932967e-05, -3.11136209347751e-05, -1.71661376953125e-05, 0.0, -7.62939453125e-06, -0.0002155303955078125, -0.0041429996490478516, -1.5854835510253906e-05, -0.0018471479415893555, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0008469820022583008, -1.8954096958623268e-05, -0.02419757843017578, -3.6239478504285216e-05, -0.00026702880859375, -2.86102294921875e-05, 0.0, -0.00015437598631251603, -2.801412483677268e-05, -7.62939453125e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0007171630859375, 0.0, -0.04604935646057129, -0.007565140724182129, -0.000118255615234375, -1.71661376953125e-05, -0.0016412734985351562, 0.0, -2.6702880859375e-05, -4.00543212890625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0002689361572265625, -1.311301275563892e-06, -2.288818359375e-05, -0.0034208297729492188, -0.0003223419189453125, -0.007105459924787283, -0.0001742839813232422, -2.7325429916381836, -1.9073486328125e-06, -1.2204233407974243, -0.00019168791186530143, 0.0, -0.0001163482666015625, -3.4332275390625e-05, -4.768370445162873e-07, -9.536738616588991e-07, -0.00047743317554704845, -5.960462772236497e-07], "choice_history": [55, 124, 221, 63, 103, "Ironforge", "Rifleman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ironforge", " ", "Rifleman", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -4.9357763453998444, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "IronforgeRiflemanRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.00027104519540444016, -0.00035124807618558407, -4.238951683044434, -0.00019643944688141346, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.245203283266164e-06, -1.6212459740927443e-05, -1.3470649719238281e-05, -9.5367431640625e-06, -0.5024862289428711, -7.05718994140625e-05, -2.1338462829589844e-05, -2.622600959512056e-06, -1.9073486328125e-05, -0.001636505126953125, -3.24249267578125e-05, -0.0016086101531982422, -1.1920928244535389e-07, -4.57763671875e-05, -0.0014448165893554688, -9.5367431640625e-06, 0.0, -0.0007228851318359375, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -0.0003108978271484375, -4.768370445162873e-07, -3.814697265625e-06, -9.655952453613281e-06, 0.0, -0.00130462646484375, -0.00023651123046875, -0.0001316070556640625, -1.549708758830093e-05, -2.491474151611328e-05, -2.4676208340679295e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -9.059892363438848e-06, -2.932548159151338e-05, -1.52587890625e-05, 0.0, -7.62939453125e-06, -0.0002288818359375, -0.0040438175201416016, -1.3947486877441406e-05, -0.001818537712097168, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -7.43865966796875e-05, -0.0007497072219848633, -1.9192511899746023e-05, -0.0237579345703125, -3.635868415585719e-05, -0.0002727508544921875, -3.0517578125e-05, 0.0, -0.0001565217535244301, -2.801412483677268e-05, -7.62939453125e-06, 0.0, -3.62396240234375e-05, 0.0, -0.000705718994140625, 0.0, -0.04751992225646973, -0.007961869239807129, -0.000118255615234375, -1.71661376953125e-05, -0.0016078948974609375, 0.0, -2.6702880859375e-05, -4.38690185546875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.000270843505859375, -1.4305104514278355e-06, -2.288818359375e-05, -0.0034036636352539062, -0.0003223419189453125, -0.0071264407597482204, -0.0001742839813232422, -0.06902503967285156, -0.000209808349609375, -0.0003032684326171875, 0.0, -0.00860452651977539, -0.0007818934973329306, -2.0265579223632812e-06, -0.003383636474609375, -6.866455078125e-05, -1.9073486328125e-05, -9.72747802734375e-05, -2.86102294921875e-05, -9.34600830078125e-05, -1.1444091796875e-05, -0.0007042884826660156, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.1444091796875e-05, -0.0003986358642578125, -1.9073486328125e-06, -5.14984130859375e-05, -2.09808349609375e-05, -0.00040459632873535156, -7.2479248046875e-05, -4.768370445162873e-07, -0.00011444091796875, -7.62939453125e-06, -2.2649765014648438e-06, -1.311301275563892e-06, -0.0004590748867485672, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Ironforge", "Rifleman", "Rifleman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ironforge", " ", "Rifleman", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRiflemanRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -5.035825075519192, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.00027104519540444016, -0.00035124807618558407, -0.014552764594554901, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -2.50339189733495e-06, -1.3709065569855738e-05, -3.445148468017578e-05, -9.5367431640625e-06, -0.5682830810546875, -5.91278076171875e-05, -1.9431114196777344e-05, -1.9073468138230965e-06, -2.47955322265625e-05, -0.001354217529296875, -3.0517578125e-05, -0.001511216163635254, 0.0, -4.76837158203125e-05, -0.0018253326416015625, -7.62939453125e-06, 0.0, -0.0007038116455078125, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -0.00031280517578125, -3.576278118089249e-07, -3.814697265625e-06, -9.655952453613281e-06, 0.0, -0.0012054443359375, -0.0002384185791015625, -0.000133514404296875, -1.537788011773955e-05, -2.6941299438476562e-05, -1.4901099348207936e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.0132769602932967e-05, -3.11136209347751e-05, -1.71661376953125e-05, 0.0, -7.62939453125e-06, -0.0002155303955078125, -0.0041429996490478516, -1.5854835510253906e-05, -0.0018471479415893555, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0008469820022583008, -1.8954096958623268e-05, -3.9806594848632812, -1.2040138244628906e-05, -0.29738807678222656, -1.1444091796875e-05, -1.9073486328125e-06, -0.0003283023543190211, -3.457064667600207e-05, -9.5367431640625e-06, 0.0, -4.00543212890625e-05, 0.0, -0.0007171630859375, 0.0, -0.057428598403930664, -0.010138988494873047, -8.0108642578125e-05, -1.52587890625e-05, -0.0012979507446289062, 0.0, -2.6702880859375e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0003261566162109375, -1.311301275563892e-06, -2.09808349609375e-05, -0.0034418106079101562, -0.0003185272216796875, -0.007078160066157579, -0.00018203258514404297, -0.06179046630859375, -0.0002002716064453125, -0.00029754638671875, 0.0, -0.008638978004455566, -0.000778436369728297, -2.0265579223632812e-06, -0.0034093856811523438, -7.2479248046875e-05, -2.09808349609375e-05, -9.72747802734375e-05, -2.86102294921875e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0007061958312988281, -1.52587890625e-05, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -0.000396728515625, -1.9073486328125e-06, -5.14984130859375e-05, -2.09808349609375e-05, -0.00040268898010253906, -7.2479248046875e-05, -4.768370445162873e-07, -0.0001163482666015625, -9.5367431640625e-06, -2.2649765014648438e-06, -1.311301275563892e-06, -0.0004570483579300344, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Ironforge", "Rifleman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ironforge", " ", "Rifleman", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -5.274608254383608, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}, {"_type": "Template11", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "IronforgeRiflemanRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.00027104519540444016, -0.00035124807618558407, -4.238951683044434, -0.00019643944688141346, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.245203283266164e-06, -1.6212459740927443e-05, -1.3470649719238281e-05, -9.5367431640625e-06, -0.9302501678466797, -2.288818359375e-05, -4.768370445162873e-07, -1.0251998901367188e-05, -5.7220458984375e-05, -5.9485435485839844e-05, -4.5299231715034693e-05, -1.1920928244535389e-07, -0.0005713701248168945, -1.9073486328125e-06, -0.0006091594113968313, -1.6689286894688848e-06, -6.29425048828125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -8.35656828712672e-05, -1.6689286894688848e-06, -9.5367431640625e-06, -0.07568645477294922, -0.0002040863037109375, -0.011116025038063526, -4.4226646423339844e-05, -0.0072174072265625, -0.0001201629638671875, -0.0003604888916015625, -5.7220458984375e-06, -0.003477334976196289, -0.0004657505778595805, -2.0265579223632812e-06, -0.0018701553344726562, -9.72747802734375e-05, -1.9073486328125e-05, -7.82012939453125e-05, -2.288818359375e-05, -8.0108642578125e-05, -7.62939453125e-06, -0.0003973245620727539, -1.52587890625e-05, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -0.000370025634765625, 0.0, -4.76837158203125e-05, -2.09808349609375e-05, -0.00039124488830566406, -6.4849853515625e-05, -5.960462772236497e-07, -0.000118255615234375, -7.62939453125e-06, -2.1457672119140625e-06, -1.0728830375228426e-06, -0.0004817246808670461, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Ironforge", "Rifleman", "Rifleman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRiflemanRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -5.731911016291619, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 2}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}}, {"_type": "Template11", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.00027104519540444016, -0.00035124807618558407, -0.014552764594554901, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -2.50339189733495e-06, -1.3709065569855738e-05, -3.445148468017578e-05, -9.5367431640625e-06, -0.8370895385742188, -2.09808349609375e-05, -5.960462772236497e-07, -1.2159347534179688e-05, -7.62939453125e-06, -4.0531158447265625e-06, -4.792177060153335e-05, -1.1920928244535389e-07, -0.000555872917175293, -1.9073486328125e-06, -0.000586986483540386, -1.311301275563892e-06, -6.103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.630750380689278e-05, -1.6689286894688848e-06, -9.5367431640625e-06, -0.07042884826660156, -0.0002002716064453125, -4.795291900634766, -0.0001684427261352539, -0.00238800048828125, -0.0001163482666015625, -0.0004825592041015625, -1.1444091796875e-05, -0.004851818084716797, -0.000409364583902061, -1.9073486328125e-06, -0.0014705657958984375, -0.000102996826171875, -2.6702880859375e-05, -6.103515625e-05, -1.71661376953125e-05, -7.62939453125e-05, -7.62939453125e-06, -0.0003935098648071289, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, -1.33514404296875e-05, -0.0003337860107421875, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, -0.00039315223693847656, -6.4849853515625e-05, -5.960462772236497e-07, -0.0001163482666015625, -7.62939453125e-06, -2.1457672119140625e-06, -1.0728830375228426e-06, -0.000481247843708843, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Ironforge", "Rifleman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -5.827557049728554, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "CharacterSelector", "_type": "Name"}}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.00027104519540444016, -0.00035124807618558407, -0.014552764594554901, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -2.50339189733495e-06, -1.3709065569855738e-05, -3.445148468017578e-05, -9.5367431640625e-06, -0.8370895385742188, -2.09808349609375e-05, -5.960462772236497e-07, -1.2159347534179688e-05, -7.62939453125e-06, -4.0531158447265625e-06, -4.792177060153335e-05, -1.1920928244535389e-07, -0.000555872917175293, -1.9073486328125e-06, -0.000586986483540386, -1.311301275563892e-06, -6.103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.630750380689278e-05, -1.6689286894688848e-06, -9.5367431640625e-06, -2.7961292266845703, -0.001293182373046875, -0.0008115768432617188, -0.0016012191772460938, -0.001056671142578125, -0.0004986634012311697, -0.0008560419082641602, -1.9565315246582031, -0.00014495849609375, -0.0001773834228515625, -3.814697265625e-06, -0.041941285133361816, -0.000772713276091963, -1.1920928244535389e-07, -0.004311561584472656, -0.000125885009765625, -0.00023651123046875, -0.0002499818801879883, -1.33514404296875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.000521540641784668, -7.748603820800781e-06, 0.0, -1.9073486328125e-05, -1.71661376953125e-05, -0.0003681182861328125, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -0.0004750490188598633, -4.780292510986328e-05, -5.960462772236497e-07, -0.00075531005859375, -1.9073486328125e-06, -0.16390252113342285, -3.814697265625e-06, 0.0, -0.0003528594970703125, -1.71661376953125e-05, -2.7418097943154862e-06, -1.7881377516459906e-06, -0.00035023680538870394, -3.576278118089249e-07], "choice_history": [55, 124, 221, 63, 103, "Ironforge", "Rifleman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 35, 120, 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry([Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())],\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -6.161788879792105, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"_type": "Template38", "hole0": "SelfSelector"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.00027104519540444016, -0.00035124807618558407, -0.014552764594554901, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -2.50339189733495e-06, -1.3709065569855738e-05, -3.445148468017578e-05, -9.5367431640625e-06, -0.8370895385742188, -2.09808349609375e-05, -5.960462772236497e-07, -1.2159347534179688e-05, -7.62939453125e-06, -4.0531158447265625e-06, -4.792177060153335e-05, -1.1920928244535389e-07, -0.000555872917175293, -1.9073486328125e-06, -0.000586986483540386, -1.311301275563892e-06, -6.103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.630750380689278e-05, -1.6689286894688848e-06, -9.5367431640625e-06, -0.07042884826660156, -0.0002002716064453125, -0.011994955129921436, -4.4226646423339844e-05, -5.000033378601074, -1.9073486328125e-06, -0.22380363941192627, -0.00015210005221888423, 0.0, -0.000728607177734375, -5.340576171875e-05, -2.3841855067985307e-07, -1.2397689715726301e-05, -0.0004416703886818141, -4.410734163684538e-06], "choice_history": [55, 124, 221, 63, 103, "Ironforge", "Rifleman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -6.496384874407049, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "List", "elts": [{"_type": "Template37", "hole0": 1}, {"_type": "Template27", "hole0": 1}]}, {"_type": "Template38", "hole0": "SelfSelector"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.00027104519540444016, -0.00035124807618558407, -0.014552764594554901, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -2.50339189733495e-06, -1.3709065569855738e-05, -3.445148468017578e-05, -9.5367431640625e-06, -0.8370895385742188, -2.09808349609375e-05, -5.960462772236497e-07, -1.2159347534179688e-05, -7.62939453125e-06, -4.0531158447265625e-06, -4.792177060153335e-05, -1.1920928244535389e-07, -0.000555872917175293, -1.9073486328125e-06, -0.000586986483540386, -1.311301275563892e-06, -6.103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.630750380689278e-05, -1.6689286894688848e-06, -9.5367431640625e-06, -2.7961292266845703, -0.001293182373046875, -0.0008115768432617188, -0.0016012191772460938, -0.001056671142578125, -0.0004986634012311697, -0.0008560419082641602, -2.2239551544189453, -0.002193450927734375, -0.09818023443222046, -0.00010573863255558535, -0.4975414276123047, -1.9073486328125e-06, -0.017006874084472656, -0.00013934723392594606, 0.0, -0.0005340576171875, -4.57763671875e-05, -4.768370445162873e-07, -2.9802276912960224e-06, -0.0005396603955887258, -2.3841830625315197e-06], "choice_history": [55, 124, 221, 63, 103, "Ironforge", "Rifleman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 35, 120, 209, 48, 173, "1", "<EOS>", 42, 162, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry([Damage(1), Buff(\n            ChangeHealth(1))], SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -6.830175111752325, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "battlecry", "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Call", "func": {"id": "Battlecry", "_type": "Name"}, "args": [{"_type": "Template37", "hole0": 1}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "_type": "Call", "func": {"id": "MinionSelector", "_type": "Name"}}]}}, {"_type": "Template11", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.00027104519540444016, -0.00035124807618558407, -0.014552764594554901, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -2.50339189733495e-06, -1.3709065569855738e-05, -3.445148468017578e-05, -9.5367431640625e-06, -0.8370895385742188, -2.09808349609375e-05, -5.960462772236497e-07, -1.2159347534179688e-05, -7.62939453125e-06, -4.0531158447265625e-06, -4.792177060153335e-05, -1.1920928244535389e-07, -0.000555872917175293, -1.9073486328125e-06, -0.000586986483540386, -1.311301275563892e-06, -6.103515625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.630750380689278e-05, -1.6689286894688848e-06, -9.5367431640625e-06, -0.07042884826660156, -0.0002002716064453125, -0.011994955129921436, -4.4226646423339844e-05, -0.007513999938964844, -0.0001220703125, -0.000339508056640625, -3.814697265625e-06, -5.88203239440918, -0.0003148317337036133, -2.1457672119140625e-06, -0.0002841949462890625, -0.0002384185791015625, -5.7220458984375e-06, -0.00014495849609375, -8.392333984375e-05, -6.103515625e-05, -3.24249267578125e-05, -0.0007941722869873047, -1.919269561767578e-05, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.0004329681396484375, -1.9073486328125e-06, -4.38690185546875e-05, -2.09808349609375e-05, -0.00039505958557128906, -8.7738037109375e-05, -4.768370445162873e-07, -0.0001277923583984375, -9.5367431640625e-06, -2.1457672119140625e-06, -1.1920922133867862e-06, -0.00047278395504690707, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Ironforge", "Rifleman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"score": -20.214948654174805, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -20.214914321899414], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 56}
{"beams": [{"score": -0.12502281992207998, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Ironfur Grizzly", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 3}], "_type": "ClassDef", "name": "IronfurGrizzly", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.0009302341495640576, -0.0003873551613651216, -0.0019255500519648194, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.3378591979271732e-06, -0.0004391669644974172, -7.987022399902344e-06, -2.09808349609375e-05, -0.05291175842285156, -0.000118255615234375, -1.2278481335670222e-05, -1.7642965758568607e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -9.775219950824976e-06, -1.1920928244535389e-07, -6.663741078227758e-05, -1.1920928244535389e-07, -5.2689312724396586e-05, -1.0967229172820225e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -8.344646857949556e-07, -0.05846226215362549, -7.152543730626348e-06, -0.007989883422851562, -1.52587890625e-05, -4.053106749779545e-06, -3.2066785934148356e-05, -6.002592840559373e-07, -3.576272320060525e-06, -0.0013372884131968021, -1.2636104656849056e-05, -7.62939453125e-05, -1.71661376953125e-05, -7.05718994140625e-05, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Ironfur", "Grizzly", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -3.165954753141932, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"hole3": "minion_type", "hole0": "Ironfur Grizzly", "hole2": "FREE", "hole1": 3, "_type": "Template14", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 3}], "_type": "ClassDef", "name": "IronfurGrizzly", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.0009302341495640576, -0.0003873551613651216, -0.0019255500519648194, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.3378591979271732e-06, -0.0004391669644974172, -7.987022399902344e-06, -2.09808349609375e-05, -2.969834327697754, -7.62939453125e-05, -0.0004616975784301758, -2.264974000354414e-06, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -8.714188152225688e-05, -5.722029527532868e-06, -5.7220458984375e-05, -0.13173580169677734, -0.0008716583251953125, -4.351044481154531e-05, -0.00012409476039465517, -4.88758041683468e-06, -4.00543212890625e-05, -5.484416760737076e-06, -1.9073486328125e-06, -0.020104646682739258, -1.2278503163543064e-05, -0.0002806185220833868, -1.752369644236751e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.71661376953125e-05, -4.768370445162873e-07, -0.02975308895111084, -5.364412118069595e-06, -0.0070400238037109375, -0.0001392364501953125, -4.887565864919452e-06, -6.854299135738984e-05, -1.4344624332807143e-06, -3.933898824470816e-06, -0.0011564439628273249, -9.65590606938349e-06, -5.340576171875e-05, -2.86102294921875e-05, -5.7220458984375e-05, -1.1444091796875e-05], "choice_history": [55, 124, 221, 63, 103, "Ironfur", "Grizzly", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -3.1795113508893422, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Ironfur Grizzly", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 3}], "_type": "ClassDef", "name": "IronfurGrizzly", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.0009302341495640576, -0.0003873551613651216, -0.0019255500519648194, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.3378591979271732e-06, -0.0004391669644974172, -7.987022399902344e-06, -2.09808349609375e-05, -0.05291175842285156, -0.000118255615234375, -1.2278481335670222e-05, -1.7642965758568607e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -9.775219950824976e-06, -1.1920928244535389e-07, -6.663741078227758e-05, -1.1920928244535389e-07, -5.2689312724396586e-05, -1.0967229172820225e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -8.344646857949556e-07, -3.1125268936157227, -9.894371032714844e-06, -0.007503509521484375, -1.71661376953125e-05, -1.5497080312343314e-05, -0.00010716341057559475, -1.1938354873564094e-06, -2.3841830625315197e-06, -0.0021742559038102627, -1.2516897186287679e-05, -6.103515625e-05, -1.9073486328125e-05, -6.4849853515625e-05, -5.7220458984375e-06], "choice_history": [55, 124, 221, 63, 103, "Ironfur", "Grizzly", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -4.78313343213641, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Ironfur Grizzly", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 3}], "_type": "ClassDef", "name": "IronfurGrizzly", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.0009302341495640576, -0.0003873551613651216, -0.0019255500519648194, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.3378591979271732e-06, -0.0004391669644974172, -7.987022399902344e-06, -2.09808349609375e-05, -0.05291175842285156, -0.000118255615234375, -1.2278481335670222e-05, -1.7642965758568607e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -9.775219950824976e-06, -1.1920928244535389e-07, -6.663741078227758e-05, -1.1920928244535389e-07, -5.2689312724396586e-05, -1.0967229172820225e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -8.344646857949556e-07, -4.719943046569824, -8.583065209677443e-06, -0.0039730072021484375, -2.288818359375e-05, -5.364403023122577e-06, -9.142934868577868e-05, -1.909655111376196e-06, -3.814689989667386e-06, -0.0019302346045151353, -1.2278481335670222e-05, -5.7220458984375e-05, -1.71661376953125e-05, -7.2479248046875e-05, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Ironfur", "Grizzly", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 145, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -5.2294992073767474, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Ironfur Grizzly", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template31", "hole0": 3, "hole1": 3}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}}], "_type": "ClassDef", "name": "IronfurGrizzly", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.0009302341495640576, -0.0003873551613651216, -0.0019255500519648194, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.3378591979271732e-06, -0.0004391669644974172, -7.987022399902344e-06, -2.09808349609375e-05, -0.05291175842285156, -0.000118255615234375, -1.2278481335670222e-05, -1.7642965758568607e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -9.775219950824976e-06, -1.1920928244535389e-07, -6.663741078227758e-05, -1.1920928244535389e-07, -5.2689312724396586e-05, -1.0967229172820225e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -8.344646857949556e-07, -0.05846226215362549, -7.152543730626348e-06, -4.8791656494140625, -1.9073486328125e-06, -0.0002783536911010742, -0.0001146736103692092, -7.62939453125e-06, -0.0001697540283203125, -2.09808349609375e-05, -7.247924077091739e-05, -8.666139910928905e-05, -1.52587890625e-05, -0.19392311573028564, -3.4570634852570947e-06, -0.0001926422119140625, -0.02446269989013672, -0.0003490447998046875, -0.00021419594122562557, -0.01119326800107956, -6.365488661685959e-05, -1.740443622111343e-05, -0.002789989812299609, -0.00027307376149110496, -0.000133514404296875, -0.0002384185791015625, -0.0001468658447265625, -0.0001049041748046875], "choice_history": [55, 124, 221, 63, 103, "Ironfur", "Grizzly", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 81, 167, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -5.4265248969114595, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 3}], "_type": "ClassDef", "name": "IronfurGrizzly", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.0009302341495640576, -0.0003873551613651216, -0.0019255500519648194, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.3378591979271732e-06, -0.0004391669644974172, -7.987022399902344e-06, -2.09808349609375e-05, -2.969834327697754, -7.62939453125e-05, -0.0004616975784301758, -2.264974000354414e-06, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -8.714188152225688e-05, -5.722029527532868e-06, -5.7220458984375e-05, -2.1394214630126953, -1.1444091796875e-05, -5.7220458984375e-06, -0.2068042755126953, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -4.1723224057932384e-06, -1.1444091796875e-05, -1.96695291379001e-05, -4.768370445162873e-07, -0.000255584716796875, -0.0002117156982421875, -3.62396240234375e-05, -1.2993750715395436e-05, -1.7404556274414062e-05, -7.867811291362159e-06, -3.814697265625e-06, 0.0, 0.0, -9.41749840421835e-06, -9.536738616588991e-07, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -3.6954811548639555e-06, -0.008991718292236328, -8.344646857949556e-07, -1.9073486328125e-06, -0.0024394989013671875, -1.1444091796875e-05, -9.5367431640625e-06, -6.103515625e-05, -0.0002613918040879071, -0.0007497072219848633, -4.470256681088358e-05, -0.0001010894775390625, -4.38690185546875e-05, -8.559226989746094e-05, -1.1920928244535389e-07, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -0.00098419189453125, -2.622604142743512e-06, -0.000217437744140625, -5.14984130859375e-05, -3.0517578125e-05, -1.9073486328125e-06, -5.14984130859375e-05, -1.1920928244535389e-07, -0.08534789085388184, -1.3113020031596534e-05, -0.004154205322265625, -5.14984130859375e-05, -8.463439007755369e-05, -1.728522875055205e-05, -6.56506290397374e-06, -3.6954863844584906e-06, -0.0011215208796784282, -1.0728830375228426e-06, -0.0001583099365234375, -1.9073486328125e-05, -7.62939453125e-05, -7.62939453125e-06], "choice_history": [55, 124, 221, 63, 103, "Ironfur", "Grizzly", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Ironfur", " ", "Grizzly", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -6.4527207284485115, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Ironfur Grizzly", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 3}], "_type": "ClassDef", "name": "IronfurGrizzlyGrizzly", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.0009302341495640576, -0.0003873551613651216, -6.261616230010986, -5.8291960158385336e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -6.675719760096399e-06, -0.00020611278887372464, -8.225440979003906e-06, -2.6702880859375e-05, -0.11440277099609375, -0.0001544952392578125, -1.3232143828645349e-05, -1.692770456429571e-05, -1.1563301086425781e-05, -0.0004140138626098633, -1.0013613064074889e-05, -1.1920928244535389e-07, -6.508779915748164e-05, -1.1920928244535389e-07, -7.08080769982189e-05, -1.0490395652595907e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -8.344646857949556e-07, -0.06447148323059082, -6.794917680963408e-06, -0.008258819580078125, -1.9073486328125e-05, -4.410732799442485e-06, -2.9682672902708873e-05, -1.554035407025367e-06, -3.2186455882765586e-06, -0.001272557768970728, -1.2040065485052764e-05, -7.62939453125e-05, -1.71661376953125e-05, -6.866455078125e-05, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Ironfur", "Grizzly", "Grizzly", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronfurGrizzlyGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -6.916949199145094, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Ironfur Grizzly", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "ALL", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 3}], "_type": "ClassDef", "name": "IronfurGrizzly", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.0009302341495640576, -0.0003873551613651216, -0.0019255500519648194, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.3378591979271732e-06, -0.0004391669644974172, -7.987022399902344e-06, -2.09808349609375e-05, -0.05291175842285156, -0.000118255615234375, -1.2278481335670222e-05, -1.7642965758568607e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -9.775219950824976e-06, -1.1920928244535389e-07, -6.663741078227758e-05, -1.1920928244535389e-07, -5.2689312724396586e-05, -1.0967229172820225e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -8.344646857949556e-07, -6.852622985839844, -5.9604644775390625e-06, -0.0056629180908203125, -2.6702880859375e-05, -7.867780368542299e-06, -8.332382276421413e-05, -5.995898959554324e-07, -2.622600959512056e-06, -0.0013781761517748237, -1.7165990357170813e-05, -4.76837158203125e-05, -1.9073486328125e-05, -8.0108642578125e-05, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Ironfur", "Grizzly", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "ALL", "<EOS>", 72, 145, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.ALL)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -7.015377070645286, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"hole3": "minion_type", "hole0": "Ironfur Grizzly", "hole2": "FREE", "hole1": 3, "_type": "Template14", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 3}], "_type": "ClassDef", "name": "IronfurGrizzly", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.0009302341495640576, -0.0003873551613651216, -0.0019255500519648194, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.3378591979271732e-06, -0.0004391669644974172, -7.987022399902344e-06, -2.09808349609375e-05, -2.969834327697754, -7.62939453125e-05, -0.0004616975784301758, -2.264974000354414e-06, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -8.714188152225688e-05, -5.722029527532868e-06, -5.7220458984375e-05, -0.13173580169677734, -0.0008716583251953125, -4.351044481154531e-05, -0.00012409476039465517, -4.88758041683468e-06, -4.00543212890625e-05, -5.484416760737076e-06, -1.9073486328125e-06, -0.020104646682739258, -1.2278503163543064e-05, -0.0002806185220833868, -1.752369644236751e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.71661376953125e-05, -4.768370445162873e-07, -3.8798372745513916, -1.728534698486328e-05, -0.0057659149169921875, -0.000263214111328125, -3.2781841582618654e-05, -0.00019464982324279845, -2.028609742410481e-06, -3.576272320060525e-06, -0.001482482417486608, -7.629365427419543e-06, -3.814697265625e-05, -3.814697265625e-05, -5.14984130859375e-05, -2.09808349609375e-05], "choice_history": [55, 124, 221, 63, 103, "Ironfur", "Grizzly", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -7.276915439202966, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Ironfur Grizzly", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "NameConstant", "value": true}}, {"_type": "keyword", "arg": "taunt", "value": {"_type": "NameConstant", "value": true}}], "_type": "Call", "func": {"id": "Minion", "_type": "Name"}, "args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 3}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "IronfurGrizzly", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.0009302341495640576, -0.0003873551613651216, -0.0019255500519648194, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.3378591979271732e-06, -0.0004391669644974172, -7.987022399902344e-06, -2.09808349609375e-05, -0.05291175842285156, -0.000118255615234375, -1.2278481335670222e-05, -1.7642965758568607e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -9.775219950824976e-06, -1.1920928244535389e-07, -6.663741078227758e-05, -1.1920928244535389e-07, -5.2689312724396586e-05, -1.0967229172820225e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -8.344646857949556e-07, -0.05846226215362549, -7.152543730626348e-06, -4.8791656494140625, -1.9073486328125e-06, -0.0002783536911010742, -0.0001146736103692092, -7.62939453125e-06, -0.0001697540283203125, -2.09808349609375e-05, -7.247924077091739e-05, -8.666139910928905e-05, -1.52587890625e-05, -2.0174245834350586, -8.856858039507642e-05, -0.00469207763671875, -0.0001735687255859375, -0.0001506805419921875, -7.62939453125e-05, -0.0011768341064453125, -1.71661376953125e-05, -1.9073486328125e-06, -0.0003908872604370117, -0.00013494258746504784, -0.000102996826171875, -7.62939453125e-06, -7.62939453125e-06, -6.437279353121994e-06, -1.6689286894688848e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.0359992049634457e-05, -2.0265558760002023e-06, -0.0036182403564453125, -0.005150794982910156, -6.29425048828125e-05, -0.013680458068847656, -4.9114227294921875e-05, -0.0001373291015625, -7.43865966796875e-05, -3.4332275390625e-05, -4.57763671875e-05, -0.016195297241210938, -3.62396240234375e-05, -0.21782588958740234, 0.0, -6.67572021484375e-05, -2.09808349609375e-05, -3.814697265625e-05, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Ironfur", "Grizzly", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 102, 19, 125, "Minion", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "3", "<EOS>", 217, 54, 197, "charge", "<EOS>", 20, 126, "True", "<EOS>", 54, 197, "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, charge=True, taunt=True)\n"}, {"score": -7.656743648862026, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template31", "hole0": 3, "hole1": 3}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}}], "_type": "ClassDef", "name": "IronfurGrizzly", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.0009302341495640576, -0.0003873551613651216, -0.0019255500519648194, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.3378591979271732e-06, -0.0004391669644974172, -7.987022399902344e-06, -2.09808349609375e-05, -2.969834327697754, -7.62939453125e-05, -0.0004616975784301758, -2.264974000354414e-06, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -8.714188152225688e-05, -5.722029527532868e-06, -5.7220458984375e-05, -2.1394214630126953, -1.1444091796875e-05, -5.7220458984375e-06, -1.682455062866211, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -2.121916077157948e-05, -9.655952453613281e-06, -3.123283386230469e-05, -2.3841855067985307e-07, -0.6701374053955078, -0.000152587890625, -1.9073486328125e-06, -4.196086956653744e-05, -1.919269561767578e-05, -1.406666160619352e-05, -3.4332275390625e-05, 0.0, 0.0, -0.005438381806015968, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.000118255615234375, -2.622604142743512e-06, -0.004549145698547363, -4.768370445162873e-07, -3.814697265625e-06, -0.0065326690673828125, -9.5367431640625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -0.00025293012731708586, -0.0011922121047973633, -2.360320468142163e-05, -0.0008907318115234375, -9.34600830078125e-05, -0.00010073184967041016, -1.1920928244535389e-07, -9.918212890625e-05, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.0004177093505859375, -2.5629668016335927e-05, -0.03336691856384277, -3.814624506048858e-05, -0.032955169677734375, -5.7220458984375e-06, -0.0008050203323364258, -2.765645331237465e-05, -1.52587890625e-05, -0.0005016326904296875, -7.62939453125e-06, -0.0002611874369904399, -7.056941103655845e-05, -5.7220458984375e-06, -0.040770649909973145, -4.6491513785440475e-06, -0.0006046295166015625, -0.02084636688232422, -0.000274658203125, -0.00020299247989896685, -0.03650878369808197, -6.0554979427251965e-05, -2.7179487005923875e-05, -0.0020366674289107323, -6.139112520031631e-05, -0.0001087188720703125, -0.0002040863037109375, -0.000110626220703125, -0.0002593994140625], "choice_history": [55, 124, 221, 63, 103, "Ironfur", "Grizzly", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Ironfur", " ", "Grizzly", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 81, 167, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -7.715579818735385, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template31", "hole0": 3, "hole1": 3}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "p"}]}}], "_type": "ClassDef", "name": "IronfurGrizzly", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.0009302341495640576, -0.0003873551613651216, -0.0019255500519648194, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.3378591979271732e-06, -0.0004391669644974172, -7.987022399902344e-06, -2.09808349609375e-05, -2.969834327697754, -7.62939453125e-05, -0.0004616975784301758, -2.264974000354414e-06, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -8.714188152225688e-05, -5.722029527532868e-06, -5.7220458984375e-05, -2.1394214630126953, -1.1444091796875e-05, -5.7220458984375e-06, -1.682455062866211, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -2.121916077157948e-05, -9.655952453613281e-06, -3.123283386230469e-05, -2.3841855067985307e-07, -0.7528400421142578, -9.1552734375e-05, -5.7220458984375e-06, -1.025196434056852e-05, -2.110004425048828e-05, -1.0967249181703664e-05, -1.9073486328125e-06, 0.0, 0.0, -8.463833182759117e-06, -4.768370445162873e-07, -1.9073486328125e-06, -4.9591064453125e-05, -7.62939453125e-06, 0.0, -3.0517578125e-05, -2.50339189733495e-06, -0.0034641027450561523, -5.960462772236497e-07, -1.9073486328125e-06, -0.00357818603515625, -9.5367431640625e-06, -7.62939453125e-06, -5.14984130859375e-05, -0.0002989322238136083, -0.0008794069290161133, -4.6133016439853236e-05, -8.58306884765625e-05, -4.00543212890625e-05, -6.234645115910098e-05, -1.1920928244535389e-07, -0.04803466796875, -1.33514404296875e-05, -0.0046634674072265625, -5.9604644775390625e-06, -4.57763671875e-05, -0.0004787445068359375, -1.33514404296875e-05, -0.00028002247563563287, -5.686121585313231e-05, -3.814697265625e-06, -0.04704105854034424, -1.764281842042692e-05, -0.0002574920654296875, -0.01860523223876953, -0.00031280517578125, -0.0003151390701532364, -0.03405486047267914, -6.949478120077401e-05, -2.634504016896244e-05, -0.0026028354186564684, -5.8411060308571905e-05, -0.0001201629638671875, -0.00022125244140625, -0.0001049041748046875, -0.0002288818359375], "choice_history": [55, 124, 221, 63, 103, "Ironfur", "Grizzly", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Ironfur", " ", "Grizzly", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 81, 167, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, p):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -7.834422331761388, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Ironfur Grizzly", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 3}], "_type": "ClassDef", "name": "ForceGrizzly", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -7.662653923034668, -0.03980382904410362, -0.019873395562171936, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -2.861022494471399e-06, -0.0005137919215485454, -7.987022399902344e-06, -1.9073486328125e-05, -0.04302787780761719, -9.72747802734375e-05, -1.1801670552813448e-05, -1.6927711840253323e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.656020665715914e-06, -1.1920928244535389e-07, -5.1259848987683654e-05, -1.1920928244535389e-07, -5.2212497394066304e-05, -1.204010459332494e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -8.344646857949556e-07, -0.059040069580078125, -7.271752110682428e-06, -0.007556915283203125, -1.52587890625e-05, -3.814689080172684e-06, -3.361645576660521e-05, -1.196080120280385e-06, -3.6954811548639555e-06, -0.001331327948719263, -1.2874520507466514e-05, -7.43865966796875e-05, -1.71661376953125e-05, -7.05718994140625e-05, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Force", "Grizzly", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class ForceGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -7.852535659139093, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Ironfur Grizzly", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "Draw", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 3, "hole1": 3}], "_type": "ClassDef", "name": "IronfurGrizzly", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.0009302341495640576, -0.0003873551613651216, -0.0019255500519648194, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.3378591979271732e-06, -0.0004391669644974172, -7.987022399902344e-06, -2.09808349609375e-05, -0.05291175842285156, -0.000118255615234375, -1.2278481335670222e-05, -1.7642965758568607e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -9.775219950824976e-06, -1.1920928244535389e-07, -6.663741078227758e-05, -1.1920928244535389e-07, -5.2689312724396586e-05, -1.0967229172820225e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -8.344646857949556e-07, -7.771722793579102, -8.344650268554688e-06, -0.0223541259765625, -7.62939453125e-06, -5.483609584189253e-06, -1.0251946150674485e-05, -9.5977884484455e-07, -1.311301275563892e-06, -0.001259087584912777, -1.7165990357170813e-05, -6.103515625e-05, -2.09808349609375e-05, -7.2479248046875e-05, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Ironfur", "Grizzly", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "Draw", "<EOS>", 72, 145, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.Draw)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"score": -22.81645965576172, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, 0.0, -22.81645965576172], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 57}
{"beams": [{"score": -0.733901900797413, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Kill Command", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "body": {"comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}}]}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "orelse": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "KillCommand", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005241450853645802, -0.0022647941950708628, -6.556489552167477e-06, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -2.6702791728894226e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00090789794921875, -1.71661376953125e-05, -8.034398342715576e-05, -4.0650367736816406e-05, -9.655952453613281e-06, 0.0, -5.006776973459637e-06, -1.1920928244535389e-07, -0.010599493980407715, 0.0, -0.0157846137881279, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, -2.0265579223632812e-06, -2.8848648071289062e-05, 0.0, -0.1498488187789917, -4.4465065002441406e-05, -0.0014171600341796875, -7.62939453125e-06, -3.123283386230469e-05, 0.0, -1.1444091796875e-05, -9.72747802734375e-05, -3.814697265625e-06, -3.361688504810445e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -2.4199485778808594e-05, -1.3947389561508317e-05, -2.47955322265625e-05, -0.00015449509373866022, -1.4066696166992188e-05, -0.020565032958984375, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.24249267578125e-05, -5.340576171875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -8.106230961857364e-05, 0.0, -4.7087669372558594e-05, -2.384185791015625e-06, -3.814697265625e-05, -0.00078582763671875, -1.9073486328125e-06, -3.814697265625e-06, -9.536738616588991e-07, -4.00543212890625e-05, 0.0, -4.613399141817354e-05, -2.8252427000552416e-05, -0.00399017333984375, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-05, 0.0, -0.0034477668814361095, -0.00012611594866029918, -0.0012102127075195312, -3.4332275390625e-05, -3.814697265625e-06, 0.0, -0.000308990478515625, 0.0, -0.0021114349365234375, -3.814697265625e-06, -0.0051413774490356445, -4.053113570989808e-06, -0.0009430646896362305, -1.1920928244535389e-07, -0.016165776178240776, -0.00016057479660958052, -0.000415802001953125, -0.0003414154052734375, 0.0, -0.001247406005859375, 0.0, -0.000354766845703125, -1.1920928244535389e-07, -0.0016874074935913086, -2.384185791015625e-06, -0.010494232177734375, -0.000255584716796875, -3.0517578125e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0026208162307739258, -3.814697265625e-06, -0.007380485534667969, -0.0008449554443359375, -0.0004673004150390625, -1.1444091796875e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0009613037109375, 0.0, -0.06276798248291016, 0.0, -0.005979418754577637, -1.0609603123157285e-05, -0.0013240575790405273, -1.0251998901367188e-05, -3.62396240234375e-05, -0.0834817886352539, -3.4332275390625e-05, -6.866455078125e-05, 0.0, -0.0017852783203125, 0.0, -6.103515625e-05, 0.0, -0.0018025636672973633, -1.9073486328125e-06, -0.003979682922363281, -0.0022525787353515625, -0.0028133392333984375, -2.6702880859375e-05, -0.005481719970703125, -1.33514404296875e-05, -0.017054319381713867, -2.574920654296875e-05, -4.00543212890625e-05, -0.012301445007324219, -8.20159912109375e-05, -0.0009908676147460938, -9.5367431640625e-06, -4.6133995056152344e-05, -2.3841855067985307e-07, -0.000995635986328125, -0.0001220703125, -1.9073486328125e-06, -0.0017185211181640625, -0.000507354736328125, -0.07258760929107666, -8.451643225271255e-05, -0.0001926422119140625, -0.0015439987182617188, -1.9073486328125e-06, -0.0018310546875, -0.008351325988769531, -0.17675769329071045, -0.0014845009427517653], "choice_history": [55, 124, 221, 63, 103, "Kill", "Command", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 101, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 209, 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 34, 118, 195, 201, 194, "x", "<EOS>", 15, 104, 11, 94, 11, 94, 19, 125, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 6, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 67, 112, 15, 104, 19, 125, "<UNK>", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -2.377363731478603, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Kill Command", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "body": {"comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}}]}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "orelse": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 5}}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "KillCommand", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005241450853645802, -0.0022647941950708628, -6.556489552167477e-06, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -2.6702791728894226e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00090789794921875, -1.71661376953125e-05, -8.034398342715576e-05, -4.0650367736816406e-05, -9.655952453613281e-06, 0.0, -5.006776973459637e-06, -1.1920928244535389e-07, -0.010599493980407715, 0.0, -0.0157846137881279, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, -2.0265579223632812e-06, -2.8848648071289062e-05, 0.0, -0.1498488187789917, -4.4465065002441406e-05, -0.0014171600341796875, -7.62939453125e-06, -3.123283386230469e-05, 0.0, -1.1444091796875e-05, -9.72747802734375e-05, -3.814697265625e-06, -3.361688504810445e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -2.4199485778808594e-05, -1.3947389561508317e-05, -2.47955322265625e-05, -0.00015449509373866022, -1.4066696166992188e-05, -0.020565032958984375, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.24249267578125e-05, -5.340576171875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -8.106230961857364e-05, 0.0, -4.7087669372558594e-05, -2.384185791015625e-06, -3.814697265625e-05, -0.00078582763671875, -1.9073486328125e-06, -3.814697265625e-06, -9.536738616588991e-07, -4.00543212890625e-05, 0.0, -4.613399141817354e-05, -2.8252427000552416e-05, -0.00399017333984375, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-05, 0.0, -0.0034477668814361095, -0.00012611594866029918, -0.0012102127075195312, -3.4332275390625e-05, -3.814697265625e-06, 0.0, -0.000308990478515625, 0.0, -0.0021114349365234375, -3.814697265625e-06, -0.0051413774490356445, -4.053113570989808e-06, -0.0009430646896362305, -1.1920928244535389e-07, -0.016165776178240776, -0.00016057479660958052, -0.000415802001953125, -0.0003414154052734375, 0.0, -0.001247406005859375, 0.0, -0.000354766845703125, -1.1920928244535389e-07, -0.0016874074935913086, -2.384185791015625e-06, -0.010494232177734375, -0.000255584716796875, -3.0517578125e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0026208162307739258, -3.814697265625e-06, -0.007380485534667969, -0.0008449554443359375, -0.0004673004150390625, -1.1444091796875e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0009613037109375, 0.0, -0.06276798248291016, 0.0, -0.005979418754577637, -1.0609603123157285e-05, -0.0013240575790405273, -1.0251998901367188e-05, -3.62396240234375e-05, -0.0834817886352539, -3.4332275390625e-05, -6.866455078125e-05, 0.0, -0.0017852783203125, 0.0, -6.103515625e-05, 0.0, -0.0018025636672973633, -1.9073486328125e-06, -0.003979682922363281, -0.0022525787353515625, -0.0028133392333984375, -2.6702880859375e-05, -0.005481719970703125, -1.33514404296875e-05, -0.017054319381713867, -2.574920654296875e-05, -4.00543212890625e-05, -0.012301445007324219, -8.20159912109375e-05, -0.0009908676147460938, -9.5367431640625e-06, -4.6133995056152344e-05, -2.3841855067985307e-07, -0.000995635986328125, -0.0001220703125, -1.9073486328125e-06, -0.0017185211181640625, -0.000507354736328125, -0.07258760929107666, -8.451643225271255e-05, -0.0001926422119140625, -0.0015439987182617188, -1.9073486328125e-06, -0.0018310546875, -0.008351325988769531, -1.8205596208572388, -0.0011444040574133396], "choice_history": [55, 124, 221, 63, 103, "Kill", "Command", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 101, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 209, 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 34, 118, 195, 201, 194, "x", "<EOS>", 15, 104, 11, 94, 11, 94, 19, 125, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 6, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 67, 112, 15, 104, 19, 125, "<UNK>", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>", 221, 64, 106, 24, 160, "5", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -3.142696780793621, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Kill Command", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "body": {"comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}}]}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "orelse": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "KillCommand", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005241450853645802, -0.0022647941950708628, -6.556489552167477e-06, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -2.6702791728894226e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00090789794921875, -1.71661376953125e-05, -8.034398342715576e-05, -4.0650367736816406e-05, -9.655952453613281e-06, 0.0, -5.006776973459637e-06, -1.1920928244535389e-07, -0.010599493980407715, 0.0, -0.0157846137881279, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, -2.0265579223632812e-06, -2.8848648071289062e-05, 0.0, -2.5506865978240967, -5.8650970458984375e-05, -0.0010929107666015625, -1.33514404296875e-05, -2.9206275939941406e-05, 0.0, -9.5367431640625e-06, -8.58306884765625e-05, -3.814697265625e-06, -2.777568624878768e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -2.014636993408203e-05, -1.3708974620385561e-05, -2.86102294921875e-05, -0.00015175329463090748, -1.4066696166992188e-05, -0.028527259826660156, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.24249267578125e-05, -4.9591064453125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -8.499621617374942e-05, 0.0, -4.7087669372558594e-05, -2.384185791015625e-06, -4.00543212890625e-05, -0.0007839202880859375, -1.9073486328125e-06, -3.814697265625e-06, -9.536738616588991e-07, -4.00543212890625e-05, 0.0, -4.613399141817354e-05, -2.8610047593247145e-05, -0.004166603088378906, -1.9073486328125e-06, -1.1444091796875e-05, -9.34600830078125e-05, 0.0, -0.003462787251919508, -0.00012587755918502808, -0.0011987686157226562, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -0.000308990478515625, 0.0, -0.0021343231201171875, -3.814697265625e-06, -0.005249142646789551, -4.053113570989808e-06, -0.0009430646896362305, -1.1920928244535389e-07, -0.01620141975581646, -0.00016057479660958052, -0.000415802001953125, -0.0003414154052734375, 0.0, -0.0012493133544921875, 0.0, -0.0003528594970703125, -1.1920928244535389e-07, -0.0016835927963256836, -2.384185791015625e-06, -0.010493278503417969, -0.000255584716796875, -3.0517578125e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0026208162307739258, -3.814697265625e-06, -0.007380485534667969, -0.0008449554443359375, -0.0004673004150390625, -1.1444091796875e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0009613037109375, 0.0, -0.06276226043701172, 0.0, -0.005979418754577637, -1.0609603123157285e-05, -0.0013240575790405273, -1.0251998901367188e-05, -3.62396240234375e-05, -0.08348751068115234, -3.4332275390625e-05, -6.866455078125e-05, 0.0, -0.0017871856689453125, 0.0, -6.103515625e-05, 0.0, -0.0018025636672973633, -1.9073486328125e-06, -0.0037937164306640625, -0.002346038818359375, -0.0028133392333984375, -2.6702880859375e-05, -0.005311012268066406, -1.33514404296875e-05, -0.017039060592651367, -2.574920654296875e-05, -4.00543212890625e-05, -0.012304306030273438, -8.20159912109375e-05, -0.0009899139404296875, -9.5367431640625e-06, -4.6133995056152344e-05, -2.3841855067985307e-07, -0.0010013580322265625, -0.0001220703125, -1.9073486328125e-06, -0.0017223358154296875, -0.0005054473876953125, -0.07257604598999023, -8.46356269903481e-05, -0.000194549560546875, -0.0015544891357421875, -1.9073486328125e-06, -0.001834869384765625, -0.00833892822265625, -0.17701315879821777, -0.0014899845700711012], "choice_history": [55, 124, 221, 63, 103, "Kill", "Command", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 101, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 209, 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 34, 118, 195, 201, 194, "x", "<EOS>", 15, 104, 11, 94, 11, 94, 19, 125, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 6, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 67, 112, 15, 104, 19, 125, "<UNK>", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -3.27315692336348, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Kill Command", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "body": {"comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Eq"}]}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}}]}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "orelse": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "KillCommand", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005241450853645802, -0.0022647941950708628, -6.556489552167477e-06, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -2.6702791728894226e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00090789794921875, -1.71661376953125e-05, -8.034398342715576e-05, -4.0650367736816406e-05, -9.655952453613281e-06, 0.0, -5.006776973459637e-06, -1.1920928244535389e-07, -0.010599493980407715, 0.0, -0.0157846137881279, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, -2.0265579223632812e-06, -2.8848648071289062e-05, 0.0, -0.1498488187789917, -4.4465065002441406e-05, -0.0014171600341796875, -7.62939453125e-06, -3.123283386230469e-05, 0.0, -1.1444091796875e-05, -9.72747802734375e-05, -3.814697265625e-06, -3.361688504810445e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -2.4199485778808594e-05, -1.3947389561508317e-05, -2.47955322265625e-05, -0.00015449509373866022, -1.4066696166992188e-05, -0.020565032958984375, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.24249267578125e-05, -5.340576171875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -8.106230961857364e-05, 0.0, -4.7087669372558594e-05, -2.384185791015625e-06, -3.814697265625e-05, -0.00078582763671875, -1.9073486328125e-06, -3.814697265625e-06, -9.536738616588991e-07, -4.00543212890625e-05, 0.0, -4.613399141817354e-05, -2.8252427000552416e-05, -0.00399017333984375, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-05, 0.0, -0.0034477668814361095, -0.00012611594866029918, -0.0012102127075195312, -3.4332275390625e-05, -3.814697265625e-06, 0.0, -0.000308990478515625, 0.0, -0.0021114349365234375, -3.814697265625e-06, -0.0051413774490356445, -4.053113570989808e-06, -0.0009430646896362305, -1.1920928244535389e-07, -0.016165776178240776, -0.00016057479660958052, -0.000415802001953125, -0.0003414154052734375, 0.0, -0.001247406005859375, 0.0, -0.000354766845703125, -1.1920928244535389e-07, -0.0016874074935913086, -2.384185791015625e-06, -0.010494232177734375, -0.000255584716796875, -3.0517578125e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0026208162307739258, -3.814697265625e-06, -0.007380485534667969, -0.0008449554443359375, -0.0004673004150390625, -1.1444091796875e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0009613037109375, 0.0, -0.06276798248291016, 0.0, -0.005979418754577637, -1.0609603123157285e-05, -0.0013240575790405273, -1.0251998901367188e-05, -3.62396240234375e-05, -2.62164306640625, -1.52587890625e-05, -0.0012063980102539062, 0.0, -0.003139495849609375, 0.0, -8.404254913330078e-05, 0.0, -0.0016442537307739258, -1.9073486328125e-06, -0.004204750061035156, -0.0018157958984375, -0.0026912689208984375, -2.86102294921875e-05, -0.0056018829345703125, -1.33514404296875e-05, -0.017711400985717773, -2.181529998779297e-05, -3.24249267578125e-05, -0.012671470642089844, -7.82012939453125e-05, -0.000919342041015625, -7.62939453125e-06, -4.4226646423339844e-05, -2.3841855067985307e-07, -0.0011119842529296875, -0.0001277923583984375, -1.9073486328125e-06, -0.00174713134765625, -0.000518798828125, -0.07133269309997559, -8.415883348789066e-05, -0.0002002716064453125, -0.0015974044799804688, -1.9073486328125e-06, -0.0017910003662109375, -0.008708000183105469, -0.17559874057769775, -0.0013904443476349115], "choice_history": [55, 124, 221, 63, 103, "Kill", "Command", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 101, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 209, 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 34, 118, 195, 201, 194, "x", "<EOS>", 15, 104, 11, 94, 11, 94, 19, 125, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 2, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 67, 112, 15, 104, 19, 125, "<UNK>", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type == MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -3.29624108661816, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Kill Command", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "body": {"comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}}]}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 5}}], "orelse": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "KillCommand", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005241450853645802, -0.0022647941950708628, -6.556489552167477e-06, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -2.6702791728894226e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00090789794921875, -1.71661376953125e-05, -8.034398342715576e-05, -4.0650367736816406e-05, -9.655952453613281e-06, 0.0, -5.006776973459637e-06, -1.1920928244535389e-07, -0.010599493980407715, 0.0, -0.0157846137881279, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, -2.0265579223632812e-06, -2.8848648071289062e-05, 0.0, -0.1498488187789917, -4.4465065002441406e-05, -0.0014171600341796875, -7.62939453125e-06, -3.123283386230469e-05, 0.0, -1.1444091796875e-05, -9.72747802734375e-05, -3.814697265625e-06, -3.361688504810445e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -2.4199485778808594e-05, -1.3947389561508317e-05, -2.47955322265625e-05, -0.00015449509373866022, -1.4066696166992188e-05, -0.020565032958984375, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.24249267578125e-05, -5.340576171875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -8.106230961857364e-05, 0.0, -4.7087669372558594e-05, -2.384185791015625e-06, -3.814697265625e-05, -0.00078582763671875, -1.9073486328125e-06, -3.814697265625e-06, -9.536738616588991e-07, -4.00543212890625e-05, 0.0, -4.613399141817354e-05, -2.8252427000552416e-05, -0.00399017333984375, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-05, 0.0, -0.0034477668814361095, -0.00012611594866029918, -0.0012102127075195312, -3.4332275390625e-05, -3.814697265625e-06, 0.0, -0.000308990478515625, 0.0, -0.0021114349365234375, -3.814697265625e-06, -0.0051413774490356445, -4.053113570989808e-06, -0.0009430646896362305, -1.1920928244535389e-07, -0.016165776178240776, -0.00016057479660958052, -0.000415802001953125, -0.0003414154052734375, 0.0, -0.001247406005859375, 0.0, -0.000354766845703125, -1.1920928244535389e-07, -0.0016874074935913086, -2.384185791015625e-06, -0.010494232177734375, -0.000255584716796875, -3.0517578125e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0026208162307739258, -3.814697265625e-06, -0.007380485534667969, -0.0008449554443359375, -0.0004673004150390625, -1.1444091796875e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0009613037109375, 0.0, -0.06276798248291016, 0.0, -0.005979418754577637, -1.0609603123157285e-05, -0.0013240575790405273, -1.0251998901367188e-05, -3.62396240234375e-05, -0.0834817886352539, -3.4332275390625e-05, -6.866455078125e-05, 0.0, -0.0017852783203125, 0.0, -6.103515625e-05, 0.0, -0.0018025636672973633, -1.9073486328125e-06, -0.003979682922363281, -0.0022525787353515625, -0.0028133392333984375, -2.6702880859375e-05, -0.005481719970703125, -1.33514404296875e-05, -0.017054319381713867, -2.574920654296875e-05, -4.00543212890625e-05, -0.012301445007324219, -8.20159912109375e-05, -0.0009908676147460938, -9.5367431640625e-06, -4.6133995056152344e-05, -2.3841855067985307e-07, -0.000995635986328125, -0.0001220703125, -1.9073486328125e-06, -0.0017185211181640625, -0.000507354736328125, -2.6597232818603516, -5.9723428421420977e-05, -0.0002613067626953125, -0.0003509521484375, -1.9073486328125e-06, -0.00247955322265625, -0.0059871673583984375, -0.1549222469329834, -0.0013882956700399518], "choice_history": [55, 124, 221, 63, 103, "Kill", "Command", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 101, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 209, 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 34, 118, 195, 201, 194, "x", "<EOS>", 15, 104, 11, 94, 11, 94, 19, 125, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 6, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 67, 112, 15, 104, 19, 125, "<UNK>", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 24, 160, "5", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -3.5834112578960813, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Kill Command", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "body": {"comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}}]}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "orelse": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "KillCommand", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005241450853645802, -0.0022647941950708628, -6.556489552167477e-06, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -2.6702791728894226e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00090789794921875, -1.71661376953125e-05, -8.034398342715576e-05, -4.0650367736816406e-05, -9.655952453613281e-06, 0.0, -5.006776973459637e-06, -1.1920928244535389e-07, -0.010599493980407715, 0.0, -0.0157846137881279, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, -2.0265579223632812e-06, -2.8848648071289062e-05, 0.0, -2.976569890975952, -0.0007872580899856985, -0.0199432373046875, -3.62396240234375e-05, -2.8252599804545753e-05, 0.0, -3.814697265625e-06, -0.0001239776611328125, -1.9073486328125e-06, -3.4212884202133864e-05, -2.264974000354414e-06, -1.9073486328125e-06, -1.9073484509135596e-05, -3.4689302992774174e-05, -2.47955322265625e-05, -0.00017785972158890218, -1.609325408935547e-05, -0.023672103881835938, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -5.340576171875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.903575169621035e-05, 0.0, -4.7087669372558594e-05, -2.384185791015625e-06, -3.62396240234375e-05, -0.0007839202880859375, -1.9073486328125e-06, -3.814697265625e-06, -9.536738616588991e-07, -4.00543212890625e-05, 0.0, -4.7922130761435255e-05, -2.765639146673493e-05, -0.004004478454589844, -1.9073486328125e-06, -1.1444091796875e-05, -9.72747802734375e-05, 0.0, -0.0034439521841704845, -0.00012742709077429026, -0.0011987686157226562, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -0.000308990478515625, 0.0, -0.0021152496337890625, -3.814697265625e-06, -0.005155682563781738, -4.053113570989808e-06, -0.000941157341003418, -1.1920928244535389e-07, -0.01611916534602642, -0.00016057479660958052, -0.000415802001953125, -0.0003414154052734375, 0.0, -0.001251220703125, 0.0, -0.000354766845703125, -1.1920928244535389e-07, -0.001685500144958496, -2.384185791015625e-06, -0.01049041748046875, -0.000255584716796875, -3.0517578125e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.002621769905090332, -3.814697265625e-06, -0.0073795318603515625, -0.0008449554443359375, -0.0004673004150390625, -1.1444091796875e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0009613037109375, 0.0, -0.06276607513427734, 0.0, -0.005980372428894043, -1.0609603123157285e-05, -0.0013240575790405273, -1.0251998901367188e-05, -3.62396240234375e-05, -0.08347606658935547, -3.4332275390625e-05, -6.866455078125e-05, 0.0, -0.0017852783203125, 0.0, -6.103515625e-05, 0.0, -0.0018025636672973633, -1.9073486328125e-06, -0.004010200500488281, -0.0024662017822265625, -0.0028171539306640625, -2.6702880859375e-05, -0.005423545837402344, -1.33514404296875e-05, -0.017084836959838867, -2.384185791015625e-05, -3.814697265625e-05, -0.012340545654296875, -8.20159912109375e-05, -0.000980377197265625, -9.5367431640625e-06, -4.6133995056152344e-05, -2.3841855067985307e-07, -0.0010013580322265625, -0.0001220703125, -1.9073486328125e-06, -0.001720428466796875, -0.0005054473876953125, -0.07255315780639648, -8.49932330311276e-05, -0.00019073486328125, -0.0015583038330078125, -1.9073486328125e-06, -0.001834869384765625, -0.008362770080566406, -0.17686641216278076, -0.0015022630104795098], "choice_history": [55, 124, 221, 63, 103, "Kill", "Command", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 101, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 209, 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 34, 118, 195, 201, 194, "x", "<EOS>", 15, 104, 11, 94, 11, 94, 19, 125, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 6, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 67, 112, 15, 104, 19, 125, "<UNK>", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -4.329992575160674, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Kill Command", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "body": {"comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"id": "character", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}}]}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "orelse": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "KillCommand", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005241450853645802, -0.0022647941950708628, -6.556489552167477e-06, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -2.6702791728894226e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00090789794921875, -1.71661376953125e-05, -8.034398342715576e-05, -4.0650367736816406e-05, -9.655952453613281e-06, 0.0, -5.006776973459637e-06, -1.1920928244535389e-07, -0.010599493980407715, 0.0, -0.0157846137881279, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, -2.0265579223632812e-06, -2.8848648071289062e-05, 0.0, -0.1498488187789917, -4.4465065002441406e-05, -0.0014171600341796875, -7.62939453125e-06, -3.123283386230469e-05, 0.0, -1.1444091796875e-05, -9.72747802734375e-05, -3.814697265625e-06, -3.361688504810445e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -2.4199485778808594e-05, -1.3947389561508317e-05, -2.47955322265625e-05, -0.00015449509373866022, -1.4066696166992188e-05, -0.020565032958984375, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.24249267578125e-05, -5.340576171875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -8.106230961857364e-05, 0.0, -4.7087669372558594e-05, -2.384185791015625e-06, -3.814697265625e-05, -0.00078582763671875, -1.9073486328125e-06, -3.814697265625e-06, -9.536738616588991e-07, -4.00543212890625e-05, 0.0, -4.613399141817354e-05, -2.8252427000552416e-05, -0.00399017333984375, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-05, 0.0, -0.0034477668814361095, -0.00012611594866029918, -0.0012102127075195312, -3.4332275390625e-05, -3.814697265625e-06, 0.0, -0.000308990478515625, 0.0, -0.0021114349365234375, -3.814697265625e-06, -0.0051413774490356445, -4.053113570989808e-06, -0.0009430646896362305, -1.1920928244535389e-07, -0.016165776178240776, -0.00016057479660958052, -0.000415802001953125, -0.0003414154052734375, 0.0, -0.001247406005859375, 0.0, -0.000354766845703125, -1.1920928244535389e-07, -0.0016874074935913086, -2.384185791015625e-06, -0.010494232177734375, -0.000255584716796875, -3.0517578125e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0026208162307739258, -3.814697265625e-06, -0.007380485534667969, -0.0008449554443359375, -0.0004673004150390625, -1.1444091796875e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0009613037109375, 0.0, -3.621753215789795, -1.1920928244535389e-07, -0.00988304615020752, -2.264974000354414e-06, -0.0015243291854858398, -1.2278556823730469e-05, -3.814697265625e-05, -0.11499691009521484, -4.38690185546875e-05, -5.91278076171875e-05, 0.0, -0.001689910888671875, 0.0, -6.29425048828125e-05, 0.0, -0.0017586946487426758, -1.9073486328125e-06, -0.004154205322265625, -0.0020465850830078125, -0.002811431884765625, -2.6702880859375e-05, -0.00551605224609375, -1.33514404296875e-05, -0.01711249351501465, -2.574920654296875e-05, -4.00543212890625e-05, -0.012327194213867188, -8.20159912109375e-05, -0.0009851455688476562, -9.5367431640625e-06, -4.6133995056152344e-05, -2.3841855067985307e-07, -0.000988006591796875, -0.0001220703125, -1.9073486328125e-06, -0.0017108917236328125, -0.00051116943359375, -0.07262396812438965, -8.523162978235632e-05, -0.0001888275146484375, -0.001590728759765625, -1.9073486328125e-06, -0.001842498779296875, -0.008296012878417969, -0.17823994159698486, -0.0015264626126736403], "choice_history": [55, 124, 221, 63, 103, "Kill", "Command", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 101, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 209, 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 34, 118, 195, 201, 194, "x", "<EOS>", 15, 104, 11, 94, 11, 94, 19, 125, "character", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 6, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 67, 112, 15, 104, 19, 125, "<UNK>", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: \n            character.card.minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -4.7845701476915465, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Kill Command", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "body": {"comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}}]}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "orelse": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 5}}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "KillCommand", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005241450853645802, -0.0022647941950708628, -6.556489552167477e-06, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -2.6702791728894226e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00090789794921875, -1.71661376953125e-05, -8.034398342715576e-05, -4.0650367736816406e-05, -9.655952453613281e-06, 0.0, -5.006776973459637e-06, -1.1920928244535389e-07, -0.010599493980407715, 0.0, -0.0157846137881279, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, -2.0265579223632812e-06, -2.8848648071289062e-05, 0.0, -2.5506865978240967, -5.8650970458984375e-05, -0.0010929107666015625, -1.33514404296875e-05, -2.9206275939941406e-05, 0.0, -9.5367431640625e-06, -8.58306884765625e-05, -3.814697265625e-06, -2.777568624878768e-05, -1.4305104514278355e-06, -1.9073486328125e-06, -2.014636993408203e-05, -1.3708974620385561e-05, -2.86102294921875e-05, -0.00015175329463090748, -1.4066696166992188e-05, -0.028527259826660156, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.24249267578125e-05, -4.9591064453125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -8.499621617374942e-05, 0.0, -4.7087669372558594e-05, -2.384185791015625e-06, -4.00543212890625e-05, -0.0007839202880859375, -1.9073486328125e-06, -3.814697265625e-06, -9.536738616588991e-07, -4.00543212890625e-05, 0.0, -4.613399141817354e-05, -2.8610047593247145e-05, -0.004166603088378906, -1.9073486328125e-06, -1.1444091796875e-05, -9.34600830078125e-05, 0.0, -0.003462787251919508, -0.00012587755918502808, -0.0011987686157226562, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -0.000308990478515625, 0.0, -0.0021343231201171875, -3.814697265625e-06, -0.005249142646789551, -4.053113570989808e-06, -0.0009430646896362305, -1.1920928244535389e-07, -0.01620141975581646, -0.00016057479660958052, -0.000415802001953125, -0.0003414154052734375, 0.0, -0.0012493133544921875, 0.0, -0.0003528594970703125, -1.1920928244535389e-07, -0.0016835927963256836, -2.384185791015625e-06, -0.010493278503417969, -0.000255584716796875, -3.0517578125e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0026208162307739258, -3.814697265625e-06, -0.007380485534667969, -0.0008449554443359375, -0.0004673004150390625, -1.1444091796875e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0009613037109375, 0.0, -0.06276226043701172, 0.0, -0.005979418754577637, -1.0609603123157285e-05, -0.0013240575790405273, -1.0251998901367188e-05, -3.62396240234375e-05, -0.08348751068115234, -3.4332275390625e-05, -6.866455078125e-05, 0.0, -0.0017871856689453125, 0.0, -6.103515625e-05, 0.0, -0.0018025636672973633, -1.9073486328125e-06, -0.0037937164306640625, -0.002346038818359375, -0.0028133392333984375, -2.6702880859375e-05, -0.005311012268066406, -1.33514404296875e-05, -0.017039060592651367, -2.574920654296875e-05, -4.00543212890625e-05, -0.012304306030273438, -8.20159912109375e-05, -0.0009899139404296875, -9.5367431640625e-06, -4.6133995056152344e-05, -2.3841855067985307e-07, -0.0010013580322265625, -0.0001220703125, -1.9073486328125e-06, -0.0017223358154296875, -0.0005054473876953125, -0.07257604598999023, -8.46356269903481e-05, -0.000194549560546875, -0.0015544891357421875, -1.9073486328125e-06, -0.001834869384765625, -0.00833892822265625, -1.8192301988601685, -0.0011463114060461521], "choice_history": [55, 124, 221, 63, 103, "Kill", "Command", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 101, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 209, 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 34, 118, 195, 201, 194, "x", "<EOS>", 15, 104, 11, 94, 11, 94, 19, 125, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 6, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 67, 112, 15, 104, 19, 125, "<UNK>", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>", 221, 64, 106, 24, 160, "5", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -4.923911620984349, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Kill Command", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "body": {"comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Eq"}]}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}}]}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "orelse": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 5}}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "KillCommand", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005241450853645802, -0.0022647941950708628, -6.556489552167477e-06, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -2.6702791728894226e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00090789794921875, -1.71661376953125e-05, -8.034398342715576e-05, -4.0650367736816406e-05, -9.655952453613281e-06, 0.0, -5.006776973459637e-06, -1.1920928244535389e-07, -0.010599493980407715, 0.0, -0.0157846137881279, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, -2.0265579223632812e-06, -2.8848648071289062e-05, 0.0, -0.1498488187789917, -4.4465065002441406e-05, -0.0014171600341796875, -7.62939453125e-06, -3.123283386230469e-05, 0.0, -1.1444091796875e-05, -9.72747802734375e-05, -3.814697265625e-06, -3.361688504810445e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -2.4199485778808594e-05, -1.3947389561508317e-05, -2.47955322265625e-05, -0.00015449509373866022, -1.4066696166992188e-05, -0.020565032958984375, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.24249267578125e-05, -5.340576171875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -8.106230961857364e-05, 0.0, -4.7087669372558594e-05, -2.384185791015625e-06, -3.814697265625e-05, -0.00078582763671875, -1.9073486328125e-06, -3.814697265625e-06, -9.536738616588991e-07, -4.00543212890625e-05, 0.0, -4.613399141817354e-05, -2.8252427000552416e-05, -0.00399017333984375, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-05, 0.0, -0.0034477668814361095, -0.00012611594866029918, -0.0012102127075195312, -3.4332275390625e-05, -3.814697265625e-06, 0.0, -0.000308990478515625, 0.0, -0.0021114349365234375, -3.814697265625e-06, -0.0051413774490356445, -4.053113570989808e-06, -0.0009430646896362305, -1.1920928244535389e-07, -0.016165776178240776, -0.00016057479660958052, -0.000415802001953125, -0.0003414154052734375, 0.0, -0.001247406005859375, 0.0, -0.000354766845703125, -1.1920928244535389e-07, -0.0016874074935913086, -2.384185791015625e-06, -0.010494232177734375, -0.000255584716796875, -3.0517578125e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0026208162307739258, -3.814697265625e-06, -0.007380485534667969, -0.0008449554443359375, -0.0004673004150390625, -1.1444091796875e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0009613037109375, 0.0, -0.06276798248291016, 0.0, -0.005979418754577637, -1.0609603123157285e-05, -0.0013240575790405273, -1.0251998901367188e-05, -3.62396240234375e-05, -2.62164306640625, -1.52587890625e-05, -0.0012063980102539062, 0.0, -0.003139495849609375, 0.0, -8.404254913330078e-05, 0.0, -0.0016442537307739258, -1.9073486328125e-06, -0.004204750061035156, -0.0018157958984375, -0.0026912689208984375, -2.86102294921875e-05, -0.0056018829345703125, -1.33514404296875e-05, -0.017711400985717773, -2.181529998779297e-05, -3.24249267578125e-05, -0.012671470642089844, -7.82012939453125e-05, -0.000919342041015625, -7.62939453125e-06, -4.4226646423339844e-05, -2.3841855067985307e-07, -0.0011119842529296875, -0.0001277923583984375, -1.9073486328125e-06, -0.00174713134765625, -0.000518798828125, -0.07133269309997559, -8.415883348789066e-05, -0.0002002716064453125, -0.0015974044799804688, -1.9073486328125e-06, -0.0017910003662109375, -0.008708000183105469, -1.8265819549560547, -0.0011619275901466608], "choice_history": [55, 124, 221, 63, 103, "Kill", "Command", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 101, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 209, 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 34, 118, 195, 201, 194, "x", "<EOS>", 15, 104, 11, 94, 11, 94, 19, 125, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 2, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 67, 112, 15, 104, 19, 125, "<UNK>", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>", 221, 64, 106, 24, 160, "5", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type == MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -5.027982396337883, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Kill Command", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "body": {"comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"id": "m", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}}]}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "orelse": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "KillCommand", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005241450853645802, -0.0022647941950708628, -6.556489552167477e-06, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -2.6702791728894226e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00090789794921875, -1.71661376953125e-05, -8.034398342715576e-05, -4.0650367736816406e-05, -9.655952453613281e-06, 0.0, -5.006776973459637e-06, -1.1920928244535389e-07, -0.010599493980407715, 0.0, -0.0157846137881279, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, -2.0265579223632812e-06, -2.8848648071289062e-05, 0.0, -0.1498488187789917, -4.4465065002441406e-05, -0.0014171600341796875, -7.62939453125e-06, -3.123283386230469e-05, 0.0, -1.1444091796875e-05, -9.72747802734375e-05, -3.814697265625e-06, -3.361688504810445e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -2.4199485778808594e-05, -1.3947389561508317e-05, -2.47955322265625e-05, -0.00015449509373866022, -1.4066696166992188e-05, -0.020565032958984375, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.24249267578125e-05, -5.340576171875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -8.106230961857364e-05, 0.0, -4.7087669372558594e-05, -2.384185791015625e-06, -3.814697265625e-05, -0.00078582763671875, -1.9073486328125e-06, -3.814697265625e-06, -9.536738616588991e-07, -4.00543212890625e-05, 0.0, -4.613399141817354e-05, -2.8252427000552416e-05, -0.00399017333984375, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-05, 0.0, -0.0034477668814361095, -0.00012611594866029918, -0.0012102127075195312, -3.4332275390625e-05, -3.814697265625e-06, 0.0, -0.000308990478515625, 0.0, -0.0021114349365234375, -3.814697265625e-06, -0.0051413774490356445, -4.053113570989808e-06, -0.0009430646896362305, -1.1920928244535389e-07, -0.016165776178240776, -0.00016057479660958052, -0.000415802001953125, -0.0003414154052734375, 0.0, -0.001247406005859375, 0.0, -0.000354766845703125, -1.1920928244535389e-07, -0.0016874074935913086, -2.384185791015625e-06, -0.010494232177734375, -0.000255584716796875, -3.0517578125e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0026208162307739258, -3.814697265625e-06, -0.007380485534667969, -0.0008449554443359375, -0.0004673004150390625, -1.1444091796875e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0009613037109375, 0.0, -4.307712078094482, -4.768370445162873e-07, -0.004301905632019043, -6.794917680963408e-06, -0.0032781362533569336, -6.198883056640625e-06, -3.0517578125e-05, -0.1331958770751953, -3.62396240234375e-05, -8.7738037109375e-05, 0.0, -0.0011692047119140625, 0.0, -5.7220458984375e-05, 0.0, -0.0018540620803833008, -1.9073486328125e-06, -0.0035524368286132812, -0.0020351409912109375, -0.0028438568115234375, -2.6702880859375e-05, -0.005623817443847656, -1.33514404296875e-05, -0.01711249351501465, -2.765655517578125e-05, -4.00543212890625e-05, -0.012383460998535156, -8.20159912109375e-05, -0.0009918212890625, -7.62939453125e-06, -4.6133995056152344e-05, -2.3841855067985307e-07, -0.00101470947265625, -0.0001239776611328125, -1.9073486328125e-06, -0.00171661376953125, -0.00051116943359375, -0.07260298728942871, -8.737738244235516e-05, -0.00019073486328125, -0.0016183853149414062, -1.9073486328125e-06, -0.0018367767333984375, -0.008412361145019531, -0.17658424377441406, -0.00151477986946702], "choice_history": [55, 124, 221, 63, 103, "Kill", "Command", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 101, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 209, 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 34, 118, 195, 201, 194, "x", "<EOS>", 15, 104, 11, 94, 11, 94, 19, 125, "m", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 6, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 67, 112, 15, 104, 19, 125, "<UNK>", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: m.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -5.082354479936534, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Kill Command", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "body": {"comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}}]}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 5}}], "orelse": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 5}}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "KillCommand", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005241450853645802, -0.0022647941950708628, -6.556489552167477e-06, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -2.6702791728894226e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00090789794921875, -1.71661376953125e-05, -8.034398342715576e-05, -4.0650367736816406e-05, -9.655952453613281e-06, 0.0, -5.006776973459637e-06, -1.1920928244535389e-07, -0.010599493980407715, 0.0, -0.0157846137881279, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, -2.0265579223632812e-06, -2.8848648071289062e-05, 0.0, -0.1498488187789917, -4.4465065002441406e-05, -0.0014171600341796875, -7.62939453125e-06, -3.123283386230469e-05, 0.0, -1.1444091796875e-05, -9.72747802734375e-05, -3.814697265625e-06, -3.361688504810445e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -2.4199485778808594e-05, -1.3947389561508317e-05, -2.47955322265625e-05, -0.00015449509373866022, -1.4066696166992188e-05, -0.020565032958984375, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.24249267578125e-05, -5.340576171875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -8.106230961857364e-05, 0.0, -4.7087669372558594e-05, -2.384185791015625e-06, -3.814697265625e-05, -0.00078582763671875, -1.9073486328125e-06, -3.814697265625e-06, -9.536738616588991e-07, -4.00543212890625e-05, 0.0, -4.613399141817354e-05, -2.8252427000552416e-05, -0.00399017333984375, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-05, 0.0, -0.0034477668814361095, -0.00012611594866029918, -0.0012102127075195312, -3.4332275390625e-05, -3.814697265625e-06, 0.0, -0.000308990478515625, 0.0, -0.0021114349365234375, -3.814697265625e-06, -0.0051413774490356445, -4.053113570989808e-06, -0.0009430646896362305, -1.1920928244535389e-07, -0.016165776178240776, -0.00016057479660958052, -0.000415802001953125, -0.0003414154052734375, 0.0, -0.001247406005859375, 0.0, -0.000354766845703125, -1.1920928244535389e-07, -0.0016874074935913086, -2.384185791015625e-06, -0.010494232177734375, -0.000255584716796875, -3.0517578125e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0026208162307739258, -3.814697265625e-06, -0.007380485534667969, -0.0008449554443359375, -0.0004673004150390625, -1.1444091796875e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0009613037109375, 0.0, -0.06276798248291016, 0.0, -0.005979418754577637, -1.0609603123157285e-05, -0.0013240575790405273, -1.0251998901367188e-05, -3.62396240234375e-05, -0.0834817886352539, -3.4332275390625e-05, -6.866455078125e-05, 0.0, -0.0017852783203125, 0.0, -6.103515625e-05, 0.0, -0.0018025636672973633, -1.9073486328125e-06, -0.003979682922363281, -0.0022525787353515625, -0.0028133392333984375, -2.6702880859375e-05, -0.005481719970703125, -1.33514404296875e-05, -0.017054319381713867, -2.574920654296875e-05, -4.00543212890625e-05, -0.012301445007324219, -8.20159912109375e-05, -0.0009908676147460938, -9.5367431640625e-06, -4.6133995056152344e-05, -2.3841855067985307e-07, -0.000995635986328125, -0.0001220703125, -1.9073486328125e-06, -0.0017185211181640625, -0.000507354736328125, -2.6597232818603516, -5.9723428421420977e-05, -0.0002613067626953125, -0.0003509521484375, -1.9073486328125e-06, -0.00247955322265625, -0.0059871673583984375, -1.9417226314544678, -0.0007013044669292867], "choice_history": [55, 124, 221, 63, 103, "Kill", "Command", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 101, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 209, 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 34, 118, 195, 201, 194, "x", "<EOS>", 15, 104, 11, 94, 11, 94, 19, 125, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 6, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 67, 112, 15, 104, 19, 125, "<UNK>", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 24, 160, "5", "<EOS>", 221, 64, 106, 24, 160, "5", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -5.2261841782093725, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Kill Command", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}, "args": [{"_type": "Attribute", "attr": "game", "value": {"id": "player", "_type": "Name"}}, {"_type": "Lambda", "body": {"comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"id": "x", "_type": "Name"}}}, "ops": [{"_type": "Is"}]}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}}]}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "orelse": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 5}}], "test": {"comparators": [{"_type": "NameConstant", "value": "Null"}], "_type": "Compare", "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "KillCommand", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005241450853645802, -0.0022647941950708628, -6.556489552167477e-06, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -2.6702791728894226e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00090789794921875, -1.71661376953125e-05, -8.034398342715576e-05, -4.0650367736816406e-05, -9.655952453613281e-06, 0.0, -5.006776973459637e-06, -1.1920928244535389e-07, -0.010599493980407715, 0.0, -0.0157846137881279, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, -2.0265579223632812e-06, -2.8848648071289062e-05, 0.0, -2.976569890975952, -0.0007872580899856985, -0.0199432373046875, -3.62396240234375e-05, -2.8252599804545753e-05, 0.0, -3.814697265625e-06, -0.0001239776611328125, -1.9073486328125e-06, -3.4212884202133864e-05, -2.264974000354414e-06, -1.9073486328125e-06, -1.9073484509135596e-05, -3.4689302992774174e-05, -2.47955322265625e-05, -0.00017785972158890218, -1.609325408935547e-05, -0.023672103881835938, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -5.340576171875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.903575169621035e-05, 0.0, -4.7087669372558594e-05, -2.384185791015625e-06, -3.62396240234375e-05, -0.0007839202880859375, -1.9073486328125e-06, -3.814697265625e-06, -9.536738616588991e-07, -4.00543212890625e-05, 0.0, -4.7922130761435255e-05, -2.765639146673493e-05, -0.004004478454589844, -1.9073486328125e-06, -1.1444091796875e-05, -9.72747802734375e-05, 0.0, -0.0034439521841704845, -0.00012742709077429026, -0.0011987686157226562, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -0.000308990478515625, 0.0, -0.0021152496337890625, -3.814697265625e-06, -0.005155682563781738, -4.053113570989808e-06, -0.000941157341003418, -1.1920928244535389e-07, -0.01611916534602642, -0.00016057479660958052, -0.000415802001953125, -0.0003414154052734375, 0.0, -0.001251220703125, 0.0, -0.000354766845703125, -1.1920928244535389e-07, -0.001685500144958496, -2.384185791015625e-06, -0.01049041748046875, -0.000255584716796875, -3.0517578125e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.002621769905090332, -3.814697265625e-06, -0.0073795318603515625, -0.0008449554443359375, -0.0004673004150390625, -1.1444091796875e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0009613037109375, 0.0, -0.06276607513427734, 0.0, -0.005980372428894043, -1.0609603123157285e-05, -0.0013240575790405273, -1.0251998901367188e-05, -3.62396240234375e-05, -0.08347606658935547, -3.4332275390625e-05, -6.866455078125e-05, 0.0, -0.0017852783203125, 0.0, -6.103515625e-05, 0.0, -0.0018025636672973633, -1.9073486328125e-06, -0.004010200500488281, -0.0024662017822265625, -0.0028171539306640625, -2.6702880859375e-05, -0.005423545837402344, -1.33514404296875e-05, -0.017084836959838867, -2.384185791015625e-05, -3.814697265625e-05, -0.012340545654296875, -8.20159912109375e-05, -0.000980377197265625, -9.5367431640625e-06, -4.6133995056152344e-05, -2.3841855067985307e-07, -0.0010013580322265625, -0.0001220703125, -1.9073486328125e-06, -0.001720428466796875, -0.0005054473876953125, -0.07255315780639648, -8.49932330311276e-05, -0.00019073486328125, -0.0015583038330078125, -1.9073486328125e-06, -0.001834869384765625, -0.008362770080566406, -1.8199931383132935, -0.0011484571732580662], "choice_history": [55, 124, 221, 63, 103, "Kill", "Command", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 101, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 209, 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 34, 118, 195, 201, 194, "x", "<EOS>", 15, 104, 11, 94, 11, 94, 19, 125, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 6, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 67, 112, 15, 104, 19, 125, "<UNK>", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>", 221, 64, 106, 24, 160, "5", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -6.457552581591749, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Kill Command", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "orelse": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "test": {"comparators": [{"_type": "Num", "n": 5}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "ops": [{"_type": "LtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "KillCommand", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005241450853645802, -0.0022647941950708628, -6.556489552167477e-06, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -2.6702791728894226e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00090789794921875, -1.71661376953125e-05, -8.034398342715576e-05, -4.0650367736816406e-05, -9.655952453613281e-06, 0.0, -5.006776973459637e-06, -1.1920928244535389e-07, -0.010599493980407715, 0.0, -0.0157846137881279, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, -2.0265579223632812e-06, -2.8848648071289062e-05, 0.0, -0.1498488187789917, -4.4465065002441406e-05, -0.0014171600341796875, -7.62939453125e-06, -3.123283386230469e-05, 0.0, -1.1444091796875e-05, -9.72747802734375e-05, -3.814697265625e-06, -3.361688504810445e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -2.4199485778808594e-05, -1.3947389561508317e-05, -2.47955322265625e-05, -0.00015449509373866022, -1.4066696166992188e-05, -4.750166893005371, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -8.368491398869082e-05, 0.0, -4.279613494873047e-05, -1.311301275563892e-06, -2.288818359375e-05, -0.0005664825439453125, -1.9073486328125e-06, -5.7220458984375e-06, -7.152555099310121e-07, -4.00543212890625e-05, 0.0, -3.7312503991415724e-05, -2.8490840122685768e-05, -0.11451339721679688, -0.0667877197265625, -0.018388748168945312, -0.000759124755859375, -0.0011920928955078125, 0.0, -0.005218505859375, 0.0, -5.53131103515625e-05, 0.0, -0.03909492492675781, -1.5735502529423684e-05, -0.02558908611536026, -0.0001393524435115978, -0.2142985314130783, -2.3841855067985307e-07, -5.340576171875e-05, -0.12141990661621094, -3.814697265625e-06, -0.00019073486328125, 0.0, -0.0014933813363313675, -8.344646857949556e-07, -0.0008449554443359375, -0.010069847106933594, -5.7220458984375e-06, -0.00617218017578125, -0.001636505126953125, -0.6464199423789978, -5.638536822516471e-05, -9.34600830078125e-05, -0.00055694580078125, -3.814697265625e-06, -0.0033435821533203125, -0.0046558380126953125, -0.24088847637176514, -0.00017463890253566206], "choice_history": [55, 124, 221, 63, 103, "Kill", "Command", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 67, 112, 15, 104, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "health", "<EOS>", 205, 9, 208, 39, 130, "5", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.hero.health <= 5:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -6.560967414016936, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "target_func", "hole0": "Kill Command", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "use", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}]}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 5}}], "orelse": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "test": {"comparators": [{"_type": "Num", "n": 5}], "_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "ops": [{"_type": "LtE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}], "_type": "ClassDef", "name": "KillCommand", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005241450853645802, -0.0022647941950708628, -6.556489552167477e-06, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -2.6702791728894226e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00090789794921875, -1.71661376953125e-05, -8.034398342715576e-05, -4.0650367736816406e-05, -9.655952453613281e-06, 0.0, -5.006776973459637e-06, -1.1920928244535389e-07, -0.010599493980407715, 0.0, -0.0157846137881279, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, -2.0265579223632812e-06, -2.8848648071289062e-05, 0.0, -0.1498488187789917, -4.4465065002441406e-05, -0.0014171600341796875, -7.62939453125e-06, -3.123283386230469e-05, 0.0, -1.1444091796875e-05, -9.72747802734375e-05, -3.814697265625e-06, -3.361688504810445e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -2.4199485778808594e-05, -1.3947389561508317e-05, -2.47955322265625e-05, -0.00015449509373866022, -1.4066696166992188e-05, -4.750166893005371, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -8.368491398869082e-05, 0.0, -4.279613494873047e-05, -1.311301275563892e-06, -2.288818359375e-05, -0.0005664825439453125, -1.9073486328125e-06, -5.7220458984375e-06, -7.152555099310121e-07, -4.00543212890625e-05, 0.0, -3.7312503991415724e-05, -2.8490840122685768e-05, -0.11451339721679688, -0.0667877197265625, -0.018388748168945312, -0.000759124755859375, -0.0011920928955078125, 0.0, -0.005218505859375, 0.0, -5.53131103515625e-05, 0.0, -0.03909492492675781, -1.5735502529423684e-05, -0.02558908611536026, -0.0001393524435115978, -0.2142985314130783, -2.3841855067985307e-07, -5.340576171875e-05, -0.12141990661621094, -3.814697265625e-06, -0.00019073486328125, 0.0, -0.0014933813363313675, -8.344646857949556e-07, -0.0008449554443359375, -0.010069847106933594, -5.7220458984375e-06, -0.00617218017578125, -0.001636505126953125, -0.7422881126403809, -3.9338774513453245e-05, -0.0001735687255859375, -9.1552734375e-05, -3.814697265625e-06, -0.00363922119140625, -0.004117012023925781, -0.2491011619567871, -0.00015413344954140484], "choice_history": [55, 124, 221, 63, 103, "Kill", "Command", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 67, 112, 15, 104, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "health", "<EOS>", 205, 9, 208, 39, 130, "5", "<EOS>", 221, 64, 106, 24, 160, "5", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.hero.health <= 5:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"score": -23.196531295776367, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, 0.0, -23.196529388427734], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 58}
{"beams": [{"score": -0.4482843024849217, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Kobold Geomancer", "hole1": 2}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "KoboldGeomancerGeomancer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.009405823424458504, -0.04883825406432152, -0.34119632840156555, -0.035102203488349915, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -3.576278118089249e-07, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.00122833251953125, -0.0005092620849609375, -0.0002487597812432796, -8.463859558105469e-06, -0.0013980865478515625, -0.004451512359082699, -8.666513895150274e-05, -0.0001091899539460428, -5.316662281984463e-05, -2.0265579223632812e-06, -0.0001373291015625, -1.9073486328125e-05, -2.9921080567874014e-05, -7.152531907195225e-06, -4.9709669838193804e-05, -5.960462772236497e-07, -0.004388689994812012, -4.768370445162873e-07, -0.0004425048828125, -0.0001678466796875, -0.00025558468769304454, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kobold", "Geomancer", "Geomancer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class KoboldGeomancerGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -1.3078265727494909, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Kobold Geomancer", "hole1": 2}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "KoboldGeomancer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.009405823424458504, -0.04883825406432152, -1.2414352893829346, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -5.960462772236497e-07, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.0016231536865234375, -0.00064849853515625, -0.0002456619986332953, -1.060962586052483e-05, -6.29425048828125e-05, -0.00010609549644868821, -5.495544974110089e-05, -8.05823874543421e-05, -4.529902071226388e-05, -2.0265579223632812e-06, -0.0001506805419921875, -1.71661376953125e-05, -2.9682669264730066e-05, -7.390948667307384e-06, -4.851762787438929e-05, -5.960462772236497e-07, -0.004003405570983887, -4.768370445162873e-07, -0.000438690185546875, -0.000164031982421875, -0.000259160966379568, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kobold", "Geomancer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -3.4432557007490914, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Kobold Geomancer", "hole1": 2}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "Kobold<UNK>Geomancer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.009405823424458504, -3.043809652328491, -0.34119632840156555, -0.035102203488349915, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -3.576278118089249e-07, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.00122833251953125, -0.0005092620849609375, -0.0002487597812432796, -8.463859558105469e-06, -0.0013980865478515625, -0.004451512359082699, -8.666513895150274e-05, -0.0001091899539460428, -5.316662281984463e-05, -2.0265579223632812e-06, -0.0001373291015625, -1.9073486328125e-05, -2.9921080567874014e-05, -7.152531907195225e-06, -4.9709669838193804e-05, -5.960462772236497e-07, -0.004388689994812012, -4.768370445162873e-07, -0.0004425048828125, -0.0001678466796875, -0.00025558468769304454, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kobold", "<UNK>", "Geomancer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class Kobold<UNK>Geomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -4.302797971013661, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Kobold Geomancer", "hole1": 2}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "Kobold<UNK>", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.009405823424458504, -3.043809652328491, -1.2414352893829346, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -5.960462772236497e-07, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.0016231536865234375, -0.00064849853515625, -0.0002456619986332953, -1.060962586052483e-05, -6.29425048828125e-05, -0.00010609549644868821, -5.495544974110089e-05, -8.05823874543421e-05, -4.529902071226388e-05, -2.0265579223632812e-06, -0.0001506805419921875, -1.71661376953125e-05, -2.9682669264730066e-05, -7.390948667307384e-06, -4.851762787438929e-05, -5.960462772236497e-07, -0.004003405570983887, -4.768370445162873e-07, -0.000438690185546875, -0.000164031982421875, -0.000259160966379568, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kobold", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class Kobold<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -4.355697433795967, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Kobold Geomancer", "hole1": 2}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "KoboldGeomancerGeomancerGeomancer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.009405823424458504, -0.04883825406432152, -0.34119632840156555, -3.3672327995300293, -0.0011311351554468274, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -2.2649765014648438e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, -0.00118255615234375, -0.000431060791015625, -0.00023374253942165524, -8.225440979003906e-06, -0.0055408477783203125, -0.5747162103652954, -0.0002087355387629941, -0.00011133548832731321, -7.080908108036965e-05, -2.0265579223632812e-06, -0.0001354217529296875, -1.9073486328125e-05, -3.039790317416191e-05, -7.033323527139146e-06, -5.066332232672721e-05, -5.960462772236497e-07, -0.004170656204223633, -3.576278118089249e-07, -0.00043487548828125, -0.00017547607421875, -0.0002461671538185328, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kobold", "Geomancer", "Geomancer", "Geomancer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class KoboldGeomancerGeomancerGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -4.621258660722901, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Kobold Geomancer Geomancer", "hole1": 2}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "KoboldGeomancerGeomancerGeomancer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.009405823424458504, -0.04883825406432152, -0.34119632840156555, -3.3672327995300293, -0.0011311351554468274, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -2.2649765014648438e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, -0.00118255615234375, -0.000431060791015625, -0.00023374253942165524, -8.225440979003906e-06, -0.0055408477783203125, -0.8387523889541626, -1.537799835205078e-05, -0.00012147306551923975, -3.8385325751733035e-05, -6.13910160609521e-05, -5.6147142458939925e-05, -2.0265579223632812e-06, -0.0002117156982421875, -1.9073486328125e-05, -2.7179345124750398e-05, -8.583032467868179e-06, -4.422615165822208e-05, -8.344646857949556e-07, -0.005688309669494629, -7.152555099310121e-07, -0.0004749298095703125, -0.0001697540283203125, -0.00024855133960954845, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kobold", "Geomancer", "Geomancer", "Geomancer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kobold", " ", "Geomancer", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class KoboldGeomancerGeomancerGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer Geomancer', 2, CHARACTER_CLASS.\n            ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -5.150015296992592, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Kobold Geomancer", "hole1": 2}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "<UNK>GeomancerGeomancer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -4.711136817932129, -0.04883825406432152, -0.34119632840156555, -0.035102203488349915, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -3.576278118089249e-07, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.00122833251953125, -0.0005092620849609375, -0.0002487597812432796, -8.463859558105469e-06, -0.0013980865478515625, -0.004451512359082699, -8.666513895150274e-05, -0.0001091899539460428, -5.316662281984463e-05, -2.0265579223632812e-06, -0.0001373291015625, -1.9073486328125e-05, -2.9921080567874014e-05, -7.152531907195225e-06, -4.9709669838193804e-05, -5.960462772236497e-07, -0.004388689994812012, -4.768370445162873e-07, -0.0004425048828125, -0.0001678466796875, -0.00025558468769304454, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Geomancer", "Geomancer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class <UNK>GeomancerGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -6.009557567257161, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Kobold Geomancer", "hole1": 2}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "<UNK>Geomancer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -4.711136817932129, -0.04883825406432152, -1.2414352893829346, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -5.960462772236497e-07, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.0016231536865234375, -0.00064849853515625, -0.0002456619986332953, -1.060962586052483e-05, -6.29425048828125e-05, -0.00010609549644868821, -5.495544974110089e-05, -8.05823874543421e-05, -4.529902071226388e-05, -2.0265579223632812e-06, -0.0001506805419921875, -1.71661376953125e-05, -2.9682669264730066e-05, -7.390948667307384e-06, -4.851762787438929e-05, -5.960462772236497e-07, -0.004003405570983887, -4.768370445162873e-07, -0.000438690185546875, -0.000164031982421875, -0.000259160966379568, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Geomancer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class <UNK>Geomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -6.035661258968787, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Kobold Geomancer Geomancer", "hole1": 2}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "KoboldGeomancerGeomancer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.009405823424458504, -0.04883825406432152, -0.34119632840156555, -0.035102203488349915, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -3.576278118089249e-07, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.00122833251953125, -0.0005092620849609375, -0.0002487597812432796, -8.463859558105469e-06, -0.0013980865478515625, -5.590882778167725, -1.9311904907226562e-05, -6.604084046557546e-05, -2.9802271455992013e-05, -6.162942008813843e-05, -5.269016764941625e-05, -2.0265579223632812e-06, -0.0002651214599609375, -1.9073486328125e-05, -2.801378650474362e-05, -8.702239938429557e-06, -4.363012340036221e-05, -8.344646857949556e-07, -0.0052106380462646484, -7.152555099310121e-07, -0.0004673004150390625, -0.0001659393310546875, -0.00025415417621843517, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kobold", "Geomancer", "Geomancer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kobold", " ", "Geomancer", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class KoboldGeomancerGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer Geomancer', 2, CHARACTER_CLASS.\n            ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -6.894828115265909, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Kobold Geomancer", "hole1": 2}, {"hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "KoboldGeomancerGeomancer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.009405823424458504, -0.04883825406432152, -0.34119632840156555, -0.035102203488349915, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -3.576278118089249e-07, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.00122833251953125, -0.0005092620849609375, -0.0002487597812432796, -8.463859558105469e-06, -0.0013980865478515625, -0.004451512359082699, -8.666513895150274e-05, -0.0001091899539460428, -5.316662281984463e-05, -2.0265579223632812e-06, -0.0001373291015625, -1.9073486328125e-05, -2.9921080567874014e-05, -7.152531907195225e-06, -4.9709669838193804e-05, -5.960462772236497e-07, -6.449805736541748, -1.52587890625e-05, -0.0016155242919921875, -9.5367431640625e-06, -0.0003528594970703125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kobold", "Geomancer", "Geomancer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class KoboldGeomancerGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, stealth=True)\n"}, {"score": -7.020382080805234, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Kobold Kobold", "hole1": 2}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "KoboldGeomancerGeomancer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.009405823424458504, -0.04883825406432152, -0.34119632840156555, -0.035102203488349915, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -3.576278118089249e-07, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.00122833251953125, -0.0005092620849609375, -0.0002487597812432796, -8.463859558105469e-06, -6.573495864868164, -0.004451512359082699, -8.666513895150274e-05, -0.0001091899539460428, -5.316662281984463e-05, -2.0265579223632812e-06, -0.0001373291015625, -1.9073486328125e-05, -2.9921080567874014e-05, -7.152531907195225e-06, -4.9709669838193804e-05, -5.960462772236497e-07, -0.004388689994812012, -4.768370445162873e-07, -0.0004425048828125, -0.0001678466796875, -0.00025558468769304454, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kobold", "Geomancer", "Geomancer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kobold", " ", "Kobold", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class KoboldGeomancerGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Kobold', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -7.350668832060137, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Kobold Geomancer", "hole1": 2}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "Kobold<UNK>GeomancerGeomancer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.009405823424458504, -3.043809652328491, -0.34119632840156555, -3.3672327995300293, -0.0011311351554468274, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -2.2649765014648438e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, -0.00118255615234375, -0.000431060791015625, -0.00023374253942165524, -8.225440979003906e-06, -0.0055408477783203125, -0.5747162103652954, -0.0002087355387629941, -0.00011133548832731321, -7.080908108036965e-05, -2.0265579223632812e-06, -0.0001354217529296875, -1.9073486328125e-05, -3.039790317416191e-05, -7.033323527139146e-06, -5.066332232672721e-05, -5.960462772236497e-07, -0.004170656204223633, -3.576278118089249e-07, -0.00043487548828125, -0.00017547607421875, -0.0002461671538185328, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kobold", "<UNK>", "Geomancer", "Geomancer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class Kobold<UNK>GeomancerGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -7.616230058987071, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Kobold Geomancer Geomancer", "hole1": 2}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "Kobold<UNK>GeomancerGeomancer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.009405823424458504, -3.043809652328491, -0.34119632840156555, -3.3672327995300293, -0.0011311351554468274, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -2.2649765014648438e-06, -7.748603820800781e-06, 0.0, -1.9073486328125e-06, -0.00118255615234375, -0.000431060791015625, -0.00023374253942165524, -8.225440979003906e-06, -0.0055408477783203125, -0.8387523889541626, -1.537799835205078e-05, -0.00012147306551923975, -3.8385325751733035e-05, -6.13910160609521e-05, -5.6147142458939925e-05, -2.0265579223632812e-06, -0.0002117156982421875, -1.9073486328125e-05, -2.7179345124750398e-05, -8.583032467868179e-06, -4.422615165822208e-05, -8.344646857949556e-07, -0.005688309669494629, -7.152555099310121e-07, -0.0004749298095703125, -0.0001697540283203125, -0.00024855133960954845, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kobold", "<UNK>", "Geomancer", "Geomancer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kobold", " ", "Geomancer", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class Kobold<UNK>GeomancerGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer Geomancer', 2, CHARACTER_CLASS.\n            ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -7.959887090309422, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Kobold Geomancer", "hole2": "ALL", "hole1": 2, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MECH", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}, "_type": "Template10", "hole0": 2, "hole1": 2}], "_type": "ClassDef", "name": "KoboldGeomancerGeomancer", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [0.0, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.009405823424458504, -0.04883825406432152, -0.34119632840156555, -0.035102203488349915, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -3.576278118089249e-07, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -7.2032976150512695, -0.00038909912109375, -0.00011693747364915907, -2.0265573766664602e-05, -0.0003719329833984375, -9.715557098388672e-05, -5.376347326091491e-05, -4.768370445162873e-07, -0.0001823902130126953, 0.0, -3.790846676565707e-05, -6.651826697634533e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.27095603942871094, -1.1682510375976562e-05, -0.044182777404785156, -2.09808349609375e-05, -1.3232142009655945e-05, -1.311301275563892e-06, -2.2411411919165403e-05, -2.3841855067985307e-07, -0.004135488532483578, -3.6954811548639555e-06, -0.0005512237548828125, -0.00026702880859375, -0.00035881821531802416, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kobold", "Geomancer", "Geomancer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class KoboldGeomancerGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"score": -20.925228118896484, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -1.33514404296875e-05, -20.925214767456055], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 59}
{"beams": [{"score": -0.3434900650594841, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Kor'kron Elite", "hole1": 4}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Kor'kronElite", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.28361064195632935, -0.005084560252726078, -0.0005251090624369681, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -8.594989776611328e-05, 0.0, -5.7220458984375e-06, -0.0037326812744140625, -0.0003871917724609375, -0.000272714183665812, -1.2040138244628906e-05, -8.58306884765625e-05, -7.545948028564453e-05, -6.9141347012191545e-06, -1.4185851796355564e-05, -0.024538874626159668, -7.62939453125e-06, -0.005679130554199219, -3.62396240234375e-05, -6.675692930002697e-06, -6.198863957251888e-06, -4.0173512388719246e-05, -1.1086402082582936e-05, -0.018996000289916992, -3.576272320060525e-06, -0.0001430511474609375, -2.6702880859375e-05, -5.14984130859375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kor'kron", "Elite", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -1.4737700233076225, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Kor'kron Elite", "hole1": 4}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "<UNK>Elite", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.4138906002044678, -0.005084560252726078, -0.0005251090624369681, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -8.594989776611328e-05, 0.0, -5.7220458984375e-06, -0.0037326812744140625, -0.0003871917724609375, -0.000272714183665812, -1.2040138244628906e-05, -8.58306884765625e-05, -7.545948028564453e-05, -6.9141347012191545e-06, -1.4185851796355564e-05, -0.024538874626159668, -7.62939453125e-06, -0.005679130554199219, -3.62396240234375e-05, -6.675692930002697e-06, -6.198863957251888e-06, -4.0173512388719246e-05, -1.1086402082582936e-05, -0.018996000289916992, -3.576272320060525e-06, -0.0001430511474609375, -2.6702880859375e-05, -5.14984130859375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Elite", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -4.221025765360025, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Kor'kron Elite", "hole1": 4}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Kor'kronElite", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.28361064195632935, -0.005084560252726078, -0.0005251090624369681, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -8.594989776611328e-05, 0.0, -5.7220458984375e-06, -0.0037326812744140625, -0.0003871917724609375, -0.000272714183665812, -1.2040138244628906e-05, -8.58306884765625e-05, -7.545948028564453e-05, -6.9141347012191545e-06, -1.4185851796355564e-05, -3.895576238632202, 0.0, -0.006758689880371094, -1.52587890625e-05, -5.841237452841597e-06, -2.7894584491150454e-05, -2.4795524950604886e-05, -2.0265373677830212e-05, -0.024401068687438965, -4.529942543740617e-06, -0.0001544952392578125, -3.24249267578125e-05, -6.103515625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kor'kron", "Elite", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -5.351305723608164, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Kor'kron Elite", "hole1": 4}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "<UNK>Elite", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.4138906002044678, -0.005084560252726078, -0.0005251090624369681, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -8.594989776611328e-05, 0.0, -5.7220458984375e-06, -0.0037326812744140625, -0.0003871917724609375, -0.000272714183665812, -1.2040138244628906e-05, -8.58306884765625e-05, -7.545948028564453e-05, -6.9141347012191545e-06, -1.4185851796355564e-05, -3.895576238632202, 0.0, -0.006758689880371094, -1.52587890625e-05, -5.841237452841597e-06, -2.7894584491150454e-05, -2.4795524950604886e-05, -2.0265373677830212e-05, -0.024401068687438965, -4.529942543740617e-06, -0.0001544952392578125, -3.24249267578125e-05, -6.103515625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Elite", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -5.510630310503473, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Kor'kron Elite", "hole1": 4}, {"hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Kor'kronElite", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.28361064195632935, -0.005084560252726078, -0.0005251090624369681, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -8.594989776611328e-05, 0.0, -5.7220458984375e-06, -0.0037326812744140625, -0.0003871917724609375, -0.000272714183665812, -1.2040138244628906e-05, -8.58306884765625e-05, -7.545948028564453e-05, -6.9141347012191545e-06, -1.4185851796355564e-05, -0.024538874626159668, -7.62939453125e-06, -0.005679130554199219, -3.62396240234375e-05, -6.675692930002697e-06, -6.198863957251888e-06, -4.0173512388719246e-05, -1.1086402082582936e-05, -5.185903072357178, -4.220008850097656e-05, -0.0003452301025390625, -1.1444091796875e-05, -5.91278076171875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kor'kron", "Elite", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, stealth=True)\n"}, {"score": -5.623098269088985, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Kor'kron Elite", "hole1": 4}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Kor'kron<UNK>", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.28361064195632935, -5.284692764282227, -0.0005251090624369681, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -8.594989776611328e-05, 0.0, -5.7220458984375e-06, -0.0037326812744140625, -0.0003871917724609375, -0.000272714183665812, -1.2040138244628906e-05, -8.58306884765625e-05, -7.545948028564453e-05, -6.9141347012191545e-06, -1.4185851796355564e-05, -0.024538874626159668, -7.62939453125e-06, -0.005679130554199219, -3.62396240234375e-05, -6.675692930002697e-06, -6.198863957251888e-06, -4.0173512388719246e-05, -1.1086402082582936e-05, -0.018996000289916992, -3.576272320060525e-06, -0.0001430511474609375, -2.6702880859375e-05, -5.14984130859375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kor'kron", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Kor'kron<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -5.834420860730631, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Kor'kron Elite", "hole1": 4}, {"hole2": "windfury", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Kor'kronElite", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.28361064195632935, -0.005084560252726078, -0.0005251090624369681, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -8.594989776611328e-05, 0.0, -5.7220458984375e-06, -0.0037326812744140625, -0.0003871917724609375, -0.000272714183665812, -1.2040138244628906e-05, -8.58306884765625e-05, -7.545948028564453e-05, -6.9141347012191545e-06, -1.4185851796355564e-05, -0.024538874626159668, -7.62939453125e-06, -0.005679130554199219, -3.62396240234375e-05, -6.675692930002697e-06, -6.198863957251888e-06, -4.0173512388719246e-05, -1.1086402082582936e-05, -5.509620189666748, -3.099436753473128e-06, -0.00042724609375, -5.7220458984375e-05, -4.38690185546875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kor'kron", "Elite", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "windfury", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, windfury=True)\n"}, {"score": -6.429094375101386, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Kor'kron Elite", "hole1": 4}, {"hole2": "divine_shield", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Kor'kronElite", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.28361064195632935, -0.005084560252726078, -0.0005251090624369681, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -8.594989776611328e-05, 0.0, -5.7220458984375e-06, -0.0037326812744140625, -0.0003871917724609375, -0.000272714183665812, -1.2040138244628906e-05, -8.58306884765625e-05, -7.545948028564453e-05, -6.9141347012191545e-06, -1.4185851796355564e-05, -0.024538874626159668, -7.62939453125e-06, -0.005679130554199219, -3.62396240234375e-05, -6.675692930002697e-06, -6.198863957251888e-06, -4.0173512388719246e-05, -1.1086402082582936e-05, -6.104124546051025, -5.960462772236497e-07, -0.00061798095703125, -4.1961669921875e-05, -4.00543212890625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kor'kron", "Elite", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "divine_shield", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, divine_shield=True)\n"}, {"score": -6.600543558980455, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Kor'kron Elite", "hole1": 4}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Force<UNK>Elite", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.895390510559082, -0.21610642969608307, -0.43954285979270935, -8.463837730232626e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.924701690673828e-05, 0.0, -5.7220458984375e-06, -0.002685546875, -0.000316619873046875, -0.00029893277678638697, -1.2040138244628906e-05, -0.001628875732421875, -0.0012720823287963867, -8.702274499228224e-06, -1.3589810805569869e-05, -0.017593979835510254, -7.62939453125e-06, -0.006366729736328125, -3.4332275390625e-05, -6.794901310058776e-06, -5.722029527532868e-06, -4.220006667310372e-05, -1.0251946150674485e-05, -0.018859386444091797, -3.576272320060525e-06, -0.00014495849609375, -2.6702880859375e-05, -4.9591064453125e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Force", "<UNK>", "Elite", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Force<UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -6.629698575328291, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Kor'kron Elite", "hole1": 4}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Kor'kronElite", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.28361064195632935, -0.005084560252726078, -0.0005251090624369681, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -8.594989776611328e-05, 0.0, -5.7220458984375e-06, -0.0037326812744140625, -0.0003871917724609375, -0.000272714183665812, -1.2040138244628906e-05, -8.58306884765625e-05, -7.545948028564453e-05, -6.9141347012191545e-06, -1.4185851796355564e-05, -0.024538874626159668, -7.62939453125e-06, -0.005679130554199219, -3.62396240234375e-05, -6.675692930002697e-06, -6.198863957251888e-06, -4.0173512388719246e-05, -1.1086402082582936e-05, -6.3052544593811035, -1.8477303456165828e-05, -8.58306884765625e-05, -9.5367431640625e-06, -6.103515625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kor'kron", "Elite", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, taunt=True)\n"}, {"score": -6.640910268751611, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Kor'kron Elite", "hole1": 4}, {"hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "<UNK>Elite", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.4138906002044678, -0.005084560252726078, -0.0005251090624369681, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -8.594989776611328e-05, 0.0, -5.7220458984375e-06, -0.0037326812744140625, -0.0003871917724609375, -0.000272714183665812, -1.2040138244628906e-05, -8.58306884765625e-05, -7.545948028564453e-05, -6.9141347012191545e-06, -1.4185851796355564e-05, -0.024538874626159668, -7.62939453125e-06, -0.005679130554199219, -3.62396240234375e-05, -6.675692930002697e-06, -6.198863957251888e-06, -4.0173512388719246e-05, -1.1086402082582936e-05, -5.185903072357178, -4.220008850097656e-05, -0.0003452301025390625, -1.1444091796875e-05, -5.91278076171875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Elite", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, stealth=True)\n"}, {"score": -6.753378227337123, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Kor'kron Elite", "hole1": 4}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "<UNK><UNK>", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.4138906002044678, -5.284692764282227, -0.0005251090624369681, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -8.594989776611328e-05, 0.0, -5.7220458984375e-06, -0.0037326812744140625, -0.0003871917724609375, -0.000272714183665812, -1.2040138244628906e-05, -8.58306884765625e-05, -7.545948028564453e-05, -6.9141347012191545e-06, -1.4185851796355564e-05, -0.024538874626159668, -7.62939453125e-06, -0.005679130554199219, -3.62396240234375e-05, -6.675692930002697e-06, -6.198863957251888e-06, -4.0173512388719246e-05, -1.1086402082582936e-05, -0.018996000289916992, -3.576272320060525e-06, -0.0001430511474609375, -2.6702880859375e-05, -5.14984130859375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class <UNK><UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -7.423015452176031, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Kor'kron Elite", "hole2": "WARRIOR", "hole1": 4, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "charge", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 4, "hole1": 3}], "_type": "ClassDef", "name": "Kor'kronElite", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.28361064195632935, -0.005084560252726078, -0.0005251090624369681, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -8.594989776611328e-05, 0.0, -5.7220458984375e-06, -6.202556610107422, -0.0006885528564453125, -4.5298504119273275e-05, -1.7762184143066406e-05, -1.71661376953125e-05, 0.0, -9.298380064137746e-06, -3.576278118089249e-07, -0.13545608520507812, -1.52587890625e-05, -0.00013518329069484025, -9.846687316894531e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.3841855067985307e-07, -0.5385055541992188, -4.0531158447265625e-06, -0.21322917938232422, -1.1444091796875e-05, -1.5497195136049413e-06, -1.7881233361549675e-05, -4.673004150390625e-05, -1.2755313036905136e-05, -0.042578816413879395, -5.006777428206988e-06, -8.7738037109375e-05, -4.57763671875e-05, -5.91278076171875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kor'kron", "Elite", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"score": -7.9752014942041, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARRIOR", "_type": "Template4", "hole0": "Kor'kron Elite", "hole1": 4}, {"hole3": "Give", "hole0": 4, "hole2": "DidDamage", "hole1": 3, "_type": "Template0", "hole5": "TargetSelector", "hole4": [{"_type": "Template38", "hole0": "Frozen"}]}], "_type": "ClassDef", "name": "Kor'kronElite", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.28361064195632935, -0.005084560252726078, -0.0005251090624369681, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -8.594989776611328e-05, 0.0, -5.7220458984375e-06, -0.0037326812744140625, -0.0003871917724609375, -0.000272714183665812, -1.2040138244628906e-05, -8.58306884765625e-05, -7.545948028564453e-05, -6.9141347012191545e-06, -1.4185851796355564e-05, -0.024538874626159668, -7.62939453125e-06, -5.413331985473633, -0.014660835266113281, -2.145764938177308e-06, -0.0036051911301910877, -0.0004324910987634212, -0.009241458959877491, -0.7948309183120728, -0.019771933555603027, -6.449187640100718e-05, -0.8814675807952881, -0.0002881288528442383, 0.0, -0.006957054138183594, -1.71661376953125e-05, -0.4520244002342224, -0.0007331419037654996, -0.05835002660751343, -0.0009328126907348633, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kor'kron", "Elite", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 70, 140, "4", "<EOS>", "3", "<EOS>", "Did", "Damage", "<EOS>", "Give", "<EOS>", 208, 49, 174, "Frozen", "<EOS>", "Target", "Selector", "<EOS>"], "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, effects=[Effect(DidDamage(), ActionTag(Give(\n            Frozen()), TargetSelector()))])\n"}, {"score": -22.487171173095703, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -22.48715591430664], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 60}
{"beams": [{"score": -0.6785453080849138, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}]}, "_type": "Template10", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "Leokk", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.00014530702901538461, -0.011691340245306492, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001069306890713051, -2.682209014892578e-05, -9.5367431640625e-05, -0.25687694549560547, -8.392333984375e-05, -2.932548159151338e-05, -1.5497195136049413e-06, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -4.4345855712890625e-05, -3.576278118089249e-07, -8.20159912109375e-05, -0.0008258819580078125, -5.7220458984375e-06, -7.62939453125e-06, -0.0004901885986328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001811981201171875, -3.814697265625e-06, -2.7417858291300945e-05, -2.384185791015625e-06, -3.0040735509828664e-05, -6.794906312279636e-06, -0.0004558563232421875, -0.000843048095703125, -3.814697265625e-06, -9.930133819580078e-05, -0.0006592991412617266, -5.7220458984375e-06, 0.0, -1.8596449081087485e-05, -3.576278118089249e-07, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.00011264664499321952, -0.0002751349238678813, 0.0, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0006741396500729024, -0.0057451725006103516, -1.8596589143271558e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.0002295970916748047, -1.6212459740927443e-05, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -0.00019848346710205078, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0027828216552734375, -3.2782554626464844e-05, -0.03471946716308594, -0.000186920166015625, -1.3708974620385561e-05, -3.099436753473128e-06, -0.0011521474225446582, -6.794906312279636e-06, -0.002179821953177452, -0.0001050182618200779, -0.000171661376953125, -0.00042724609375, -0.33705902099609375, -2.86102294921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.00022971630096435547, -4.887569048150908e-06, -0.0039844512939453125, -0.007031440734863281, -0.001712799072265625, -0.000551580626051873, -7.402896153507754e-05, -0.0011730194091796875, -3.814697265625e-06, -0.004237584304064512, -2.288818359375e-05, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "Leokk", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Leokk", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score": -1.7567435619517866, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}, {"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template36", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}]}, "_type": "Template10", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "Leokk", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.00014530702901538461, -0.011691340245306492, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001069306890713051, -2.682209014892578e-05, -9.5367431640625e-05, -0.25687694549560547, -8.392333984375e-05, -2.932548159151338e-05, -1.5497195136049413e-06, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -4.4345855712890625e-05, -3.576278118089249e-07, -8.20159912109375e-05, -0.0008258819580078125, -5.7220458984375e-06, -7.62939453125e-06, -0.0004901885986328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001811981201171875, -3.814697265625e-06, -2.7417858291300945e-05, -2.384185791015625e-06, -3.0040735509828664e-05, -6.794906312279636e-06, -0.0004558563232421875, -0.000843048095703125, -3.814697265625e-06, -9.930133819580078e-05, -0.0006592991412617266, -5.7220458984375e-06, 0.0, -1.8596449081087485e-05, -3.576278118089249e-07, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.00011264664499321952, -0.0002751349238678813, 0.0, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0006741396500729024, -0.0057451725006103516, -1.8596589143271558e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.0002295970916748047, -1.6212459740927443e-05, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -0.00019848346710205078, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0027828216552734375, -3.2782554626464844e-05, -0.03471946716308594, -0.000186920166015625, -1.3708974620385561e-05, -3.099436753473128e-06, -0.0011521474225446582, -6.794906312279636e-06, -0.002179821953177452, -0.0001050182618200779, -0.000171661376953125, -0.00042724609375, -1.2520761489868164, -9.918212890625e-05, -2.09808349609375e-05, -2.86102294921875e-05, -1.71661376953125e-05, -0.0021268129348754883, -1.7762025890988298e-05, -0.00099945068359375, -0.01122283935546875, -0.001415252685546875, -0.0005438282387331128, -0.00013458725879900157, -0.0006561279296875, -3.814697265625e-06, -0.007625790312886238, -2.682209014892578e-05, -1.9073468138230965e-06, -7.43865966796875e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.03327620029449463, -6.914126061019488e-06, -0.001010894775390625, -0.09742069244384766, -0.008893013000488281, -0.002085647080093622, -0.00213015079498291, -0.0035495758056640625, -3.814697265625e-06, -0.0087741045281291, -7.069110870361328e-05, -1.0728830375228426e-06], "choice_history": [55, 124, 221, 63, 103, "Leokk", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Leokk", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 47, 172, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector()),\n            Aura(ChangeHealth(1), MinionSelector())])\n"}, {"score": -2.0108103922332816, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Leokk", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}, {"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template36", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}]}, "_type": "Template10", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "Leokk", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.00014530702901538461, -0.011691340245306492, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001069306890713051, -2.682209014892578e-05, -9.5367431640625e-05, -1.491647720336914, -0.0004520416259765625, -0.00034558758488856256, -0.0025239677634090185, -9.476978448219597e-05, -2.861018856492592e-06, -0.026718009263277054, 0.0, -0.00011002492828993127, -1.5616367818438448e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -5.960462772236497e-07, -0.07391166687011719, -1.0967229172820225e-05, -0.00118255615234375, -0.0002346038818359375, -5.125986263010418e-06, -3.6000557884108275e-05, -0.0019104474922642112, -3.135155202471651e-05, -0.0020451433956623077, -0.0002675900759641081, -0.0002117156982421875, -0.000232696533203125, -0.23766708374023438, -0.00045013427734375, -1.1444091796875e-05, -6.4849853515625e-05, -4.1961669921875e-05, -0.0008298158645629883, -1.3708974620385561e-05, -0.0016498565673828125, -0.010593414306640625, -0.0010929107666015625, -0.0013824567431584, -0.00011336793249938637, -0.0004825592041015625, -1.9073486328125e-06, -0.006057388614863157, -1.919269561767578e-05, -1.7881377516459906e-06, -0.000125885009765625, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.03018629550933838, -9.059880540007725e-06, -0.0014095306396484375, -0.08253002166748047, -0.006099700927734375, -0.0021905687171965837, -0.0018802881240844727, -0.004298210144042969, -1.9073486328125e-06, -0.007234139367938042, -7.641315460205078e-05, -1.1920922133867862e-06], "choice_history": [55, 124, 221, 63, 103, "Leokk", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Leokk", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 47, 172, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector()),\n            Aura(ChangeHealth(1), MinionSelector())])\n"}, {"score": -3.1914237142453246, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Leokk", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}]}, "_type": "Template10", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "Leokk", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.00014530702901538461, -0.011691340245306492, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001069306890713051, -2.682209014892578e-05, -9.5367431640625e-05, -1.491647720336914, -0.0004520416259765625, -0.00034558758488856256, -0.0025239677634090185, -9.476978448219597e-05, -2.861018856492592e-06, -0.026718009263277054, 0.0, -0.00011002492828993127, -1.5616367818438448e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -5.960462772236497e-07, -0.07391166687011719, -1.0967229172820225e-05, -0.00118255615234375, -0.0002346038818359375, -5.125986263010418e-06, -3.6000557884108275e-05, -0.0019104474922642112, -3.135155202471651e-05, -0.0020451433956623077, -0.0002675900759641081, -0.0002117156982421875, -0.000232696533203125, -1.5557794570922852, -8.7738037109375e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -0.00015687942504882812, -8.702239938429557e-06, -0.0063266754150390625, -0.008316993713378906, -0.0009441375732421875, -0.001410722266882658, -5.388259160099551e-05, -0.00102996826171875, -3.814697265625e-06, -0.002980767283588648, -1.52587890625e-05, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Leokk", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Leokk", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score": -3.717233611605927, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "Leokk", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.00014530702901538461, -0.011691340245306492, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001069306890713051, -2.682209014892578e-05, -9.5367431640625e-05, -0.25687694549560547, -8.392333984375e-05, -2.932548159151338e-05, -1.5497195136049413e-06, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -4.4345855712890625e-05, -3.576278118089249e-07, -8.20159912109375e-05, -0.0008258819580078125, -5.7220458984375e-06, -7.62939453125e-06, -0.0004901885986328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001811981201171875, -3.814697265625e-06, -2.7417858291300945e-05, -2.384185791015625e-06, -3.0040735509828664e-05, -6.794906312279636e-06, -0.0004558563232421875, -0.000843048095703125, -3.814697265625e-06, -9.930133819580078e-05, -0.0006592991412617266, -5.7220458984375e-06, 0.0, -1.8596449081087485e-05, -3.576278118089249e-07, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.00011264664499321952, -0.0002751349238678813, 0.0, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0006741396500729024, -0.0057451725006103516, -1.8596589143271558e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.0002295970916748047, -1.6212459740927443e-05, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -0.00019848346710205078, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0027828216552734375, -3.2782554626464844e-05, -3.4030046463012695, -0.0011692047119140625, -9.179073458653875e-06, -6.747018051100895e-05, -0.029532909393310547, -3.933898824470816e-06], "choice_history": [55, 124, 221, 63, 103, "Leokk", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Leokk", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -4.523187942681091, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Leokk", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}, {"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template36", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}]}, "_type": "Template10", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "Leokk", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.00014530702901538461, -0.011691340245306492, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001069306890713051, -2.682209014892578e-05, -9.5367431640625e-05, -1.491647720336914, -0.0004520416259765625, -0.00034558758488856256, -0.0025239677634090185, -9.476978448219597e-05, -2.861018856492592e-06, -0.026718009263277054, 0.0, -0.00011002492828993127, -1.5616367818438448e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -5.960462772236497e-07, -2.7239303588867188, -4.172325134277344e-06, -0.003997802734375, -3.62396240234375e-05, -8.4638240878121e-06, -0.00010013079008786008, -0.002520560985431075, -3.0874729418428615e-05, -0.0017808006377890706, -0.00032562800333835185, -0.0001373291015625, -0.0002117156982421875, -0.10195350646972656, -0.00041961669921875, -1.52587890625e-05, -7.43865966796875e-05, -4.57763671875e-05, -0.0010815858840942383, -1.4185804502631072e-05, -0.001316070556640625, -0.010721206665039062, -0.0011234283447265625, -0.001235235366038978, -0.00012373915524221957, -0.000457763671875, -1.9073486328125e-06, -0.006490527186542749, -1.919269561767578e-05, -1.6689286894688848e-06, -0.0001316070556640625, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.02680349349975586, -8.344629350176547e-06, -0.001422882080078125, -0.08069801330566406, -0.0060977935791015625, -0.0021036691032350063, -0.0019530057907104492, -0.004149436950683594, -1.9073486328125e-06, -0.0073399473913013935, -8.213520050048828e-05, -1.1920922133867862e-06], "choice_history": [55, 124, 221, 63, 103, "Leokk", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Leokk", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 47, 172, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector()),\n            Aura(ChangeHealth(1), MinionSelector())])\n"}, {"score": -5.006009660307903, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}]}, "_type": "Template10", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "LeokkLeokk", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.00014530702901538461, -4.473999500274658, -0.00019562174566090107, -3.814697265625e-06, -6.4849853515625e-05, -1.9073486328125e-06, -0.000133514404296875, -6.675717304460704e-05, -3.266334533691406e-05, -0.00022125244140625, -0.13243675231933594, -6.103515625e-05, -3.480910527287051e-05, -1.7881377516459906e-06, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -4.8160552978515625e-05, -3.576278118089249e-07, -7.82012939453125e-05, -0.0008983612060546875, -5.7220458984375e-06, -9.5367431640625e-06, -0.0004711151123046875, -2.09808349609375e-05, 0.0, -0.000171661376953125, -3.814697265625e-06, -2.658341145433951e-05, -2.384185791015625e-06, -2.9921526220277883e-05, -6.9141146923357155e-06, -0.000476837158203125, -0.0006961822509765625, -3.814697265625e-06, -0.00014507770538330078, -0.0011560781858861446, -3.814697265625e-06, 0.0, -1.728519237076398e-05, -4.768370445162873e-07, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.00010847477824427187, -0.00026869759312830865, 0.0, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0006789048202335835, -0.0057337284088134766, -1.83581723831594e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.0002315044403076172, -1.6331669030478224e-05, -7.2479248046875e-05, -1.9073486328125e-06, 0.0, -0.00019848346710205078, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.002773284912109375, -3.2782554626464844e-05, -0.03129768371582031, -0.00019073486328125, -1.4185804502631072e-05, -2.9802276912960224e-06, -0.0011277105659246445, -7.271740287251305e-06, -0.00221212487667799, -0.0001100245353882201, -0.0001735687255859375, -0.000431060791015625, -0.3291797637939453, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.00022780895233154297, -4.887569048150908e-06, -0.0040531158447265625, -0.007058143615722656, -0.00170135498046875, -0.0005516998353414237, -7.390975224552676e-05, -0.0011692047119140625, -3.814697265625e-06, -0.00424997229129076, -2.288818359375e-05, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "Leokk", "Leokk", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Leokk", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class LeokkLeokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score": -5.079657422402356, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Leokk", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}, {"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}]}, "_type": "Template10", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "Leokk", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.00014530702901538461, -0.011691340245306492, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001069306890713051, -2.682209014892578e-05, -9.5367431640625e-05, -1.491647720336914, -0.0004520416259765625, -0.00034558758488856256, -0.0025239677634090185, -9.476978448219597e-05, -2.861018856492592e-06, -0.026718009263277054, 0.0, -0.00011002492828993127, -1.5616367818438448e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -5.960462772236497e-07, -0.07391166687011719, -1.0967229172820225e-05, -0.00118255615234375, -0.0002346038818359375, -5.125986263010418e-06, -3.6000557884108275e-05, -0.0019104474922642112, -3.135155202471651e-05, -0.0020451433956623077, -0.0002675900759641081, -0.0002117156982421875, -0.000232696533203125, -0.23766708374023438, -0.00045013427734375, -1.1444091796875e-05, -6.4849853515625e-05, -4.1961669921875e-05, -0.0008298158645629883, -1.3708974620385561e-05, -0.0016498565673828125, -0.010593414306640625, -0.0010929107666015625, -0.0013824567431584, -0.00011336793249938637, -0.0004825592041015625, -1.9073486328125e-06, -0.006057388614863157, -1.919269561767578e-05, -1.7881377516459906e-06, -0.000125885009765625, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.03018629550933838, -9.059880540007725e-06, -0.0014095306396484375, -3.163022994995117, -0.0014934539794921875, -0.002327561378479004, -8.320808410644531e-05, -0.0011005401611328125, -1.9073486328125e-06, -0.005106798373162746, -2.288818359375e-05, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Leokk", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Leokk", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector()),\n            Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score": -6.2806793372745915, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Leokk", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}, {"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template36", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}]}, "_type": "Template10", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "Leokk", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.00014530702901538461, -0.011691340245306492, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001069306890713051, -2.682209014892578e-05, -9.5367431640625e-05, -1.491647720336914, -0.0004520416259765625, -0.00034558758488856256, -0.0025239677634090185, -9.476978448219597e-05, -2.861018856492592e-06, -4.295357704162598, 0.0, -7.259792619151995e-05, -8.821474693831988e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, -0.061626434326171875, -1.0848020792764146e-05, -0.001361846923828125, -0.0002536773681640625, -5.006777428206988e-06, -3.731181277544238e-05, -0.002037524711340666, -3.313963316031732e-05, -0.0020609910134226084, -0.0002902336127590388, -0.000213623046875, -0.000240325927734375, -0.2500467300415039, -0.0004482269287109375, -9.5367431640625e-06, -6.67572021484375e-05, -4.1961669921875e-05, -0.0008298158645629883, -1.3947389561508317e-05, -0.00164794921875, -0.010508537292480469, -0.00109100341796875, -0.0014190527144819498, -0.00011205662303837016, -0.00048065185546875, -1.9073486328125e-06, -0.006056341342628002, -1.919269561767578e-05, -1.7881377516459906e-06, -0.000125885009765625, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.030800461769104004, -9.179088920063805e-06, -0.001407623291015625, -0.08277416229248047, -0.0061016082763671875, -0.00221794075332582, -0.0018745660781860352, -0.004311561584472656, -1.9073486328125e-06, -0.007201589643955231, -7.641315460205078e-05, -1.1920922133867862e-06], "choice_history": [55, 124, 221, 63, 103, "Leokk", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Leokk", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 47, 172, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector()),\n            Aura(ChangeHealth(1), MinionSelector())])\n"}, {"score": -6.503168973604545, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Leokk", "hole2": "DRUID", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}, {"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template36", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}]}, "_type": "Template10", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "Leokk", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.00014530702901538461, -0.011691340245306492, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001069306890713051, -2.682209014892578e-05, -9.5367431640625e-05, -1.491647720336914, -0.0004520416259765625, -0.00034558758488856256, -0.0025239677634090185, -9.476978448219597e-05, -2.861018856492592e-06, -4.4863433837890625, -1.156323378381785e-05, -0.0002446163853164762, -1.8000548152485862e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -0.09964656829833984, -1.4305078366305679e-05, -0.0031375885009765625, -0.0001926422119140625, -5.602820692729438e-06, -3.981510963058099e-05, -0.0021106000058352947, -3.421248038648628e-05, -0.001941141439601779, -0.00029797994648106396, -0.0002117156982421875, -0.00023651123046875, -0.2405996322631836, -0.000453948974609375, -9.5367431640625e-06, -6.4849853515625e-05, -4.1961669921875e-05, -0.0008469820022583008, -1.4424220353248529e-05, -0.001682281494140625, -0.010498046875, -0.0010929107666015625, -0.0013902040664106607, -0.00011038768570870161, -0.0004787445068359375, -1.9073486328125e-06, -0.0061050220392644405, -1.919269561767578e-05, -1.7881377516459906e-06, -0.0001277923583984375, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.031212449073791504, -9.179088920063805e-06, -0.00140380859375, -0.08332252502441406, -0.0061130523681640625, -0.002222225535660982, -0.0018764734268188477, -0.004315376281738281, -1.9073486328125e-06, -0.007211058866232634, -8.022785186767578e-05, -1.1920922133867862e-06], "choice_history": [55, 124, 221, 63, 103, "Leokk", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Leokk", "<EOS>", "3", "<EOS>", "DRUID", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 47, 172, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector()),\n            Aura(ChangeHealth(1), MinionSelector())])\n"}, {"score": -6.624462213537576, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Leokk", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}]}, "_type": "Template10", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "Leokk", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.00014530702901538461, -0.011691340245306492, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001069306890713051, -2.682209014892578e-05, -9.5367431640625e-05, -1.491647720336914, -0.0004520416259765625, -0.00034558758488856256, -0.0025239677634090185, -9.476978448219597e-05, -2.861018856492592e-06, -0.026718009263277054, 0.0, -0.00011002492828993127, -1.5616367818438448e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -5.960462772236497e-07, -2.7239303588867188, -4.172325134277344e-06, -0.003997802734375, -3.62396240234375e-05, -8.4638240878121e-06, -0.00010013079008786008, -0.002520560985431075, -3.0874729418428615e-05, -0.0017808006377890706, -0.00032562800333835185, -0.0001373291015625, -0.0002117156982421875, -2.336459159851074, -0.0001068115234375, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -0.0001646280288696289, -7.510157047363464e-06, -0.00594329833984375, -0.007999420166015625, -0.000946044921875, -0.0011359448544681072, -5.364417302189395e-05, -0.0009517669677734375, -3.814697265625e-06, -0.0033581675961613655, -1.71661376953125e-05, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Leokk", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Leokk", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score": -6.664861078418937, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Leokk", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}, {"_type": "Call", "func": {"id": "IsType", "_type": "Name"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}]}]}, "_type": "Template10", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "Leokk", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.00014530702901538461, -0.011691340245306492, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001069306890713051, -2.682209014892578e-05, -9.5367431640625e-05, -1.491647720336914, -0.0004520416259765625, -0.00034558758488856256, -0.0025239677634090185, -9.476978448219597e-05, -2.861018856492592e-06, -0.026718009263277054, 0.0, -0.00011002492828993127, -1.5616367818438448e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -5.960462772236497e-07, -0.07391166687011719, -1.0967229172820225e-05, -0.00118255615234375, -0.0002346038818359375, -5.125986263010418e-06, -3.6000557884108275e-05, -0.0019104474922642112, -3.135155202471651e-05, -0.0020451433956623077, -0.0002675900759641081, -0.0002117156982421875, -0.000232696533203125, -0.23766708374023438, -0.00045013427734375, -1.1444091796875e-05, -6.4849853515625e-05, -4.1961669921875e-05, -0.0008298158645629883, -1.3708974620385561e-05, -0.0016498565673828125, -0.010593414306640625, -0.0010929107666015625, -0.0013824567431584, -0.00011336793249938637, -0.0004825592041015625, -1.9073486328125e-06, -0.006057388614863157, -1.919269561767578e-05, -1.7881377516459906e-06, -0.000125885009765625, -7.62939453125e-06, -7.62939453125e-06, 0.0, -4.560944080352783, -0.017372727394104004, -4.1723224057932384e-06, -8.392333984375e-05, -0.0042934417724609375, -0.008081436157226562, -0.000179290771484375, -3.814697265625e-06, -0.000579833984375, -1.7881377516459906e-06, -0.1983853578567505, -3.814697265625e-05], "choice_history": [55, 124, 221, 63, 103, "Leokk", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Leokk", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector()),\n            IsType(MINION_TYPE.BEAST)])\n"}, {"score": -7.4033667653715085, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Leokk", "hole2": "HUNTER", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"id": "Aura", "_type": "Name"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}]}, "_type": "Template10", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "Leokk", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.00014530702901538461, -0.011691340245306492, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001069306890713051, -2.682209014892578e-05, -9.5367431640625e-05, -1.491647720336914, -0.0004520416259765625, -0.00034558758488856256, -0.0025239677634090185, -9.476978448219597e-05, -2.861018856492592e-06, -4.295357704162598, 0.0, -7.259792619151995e-05, -8.821474693831988e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -4.768370445162873e-07, -0.061626434326171875, -1.0848020792764146e-05, -0.001361846923828125, -0.0002536773681640625, -5.006777428206988e-06, -3.731181277544238e-05, -0.002037524711340666, -3.313963316031732e-05, -0.0020609910134226084, -0.0002902336127590388, -0.000213623046875, -0.000240325927734375, -1.5108509063720703, -8.58306884765625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -0.00015687942504882812, -8.583032467868179e-06, -0.00646209716796875, -0.008329391479492188, -0.0009479522705078125, -0.0014554256340488791, -5.4001797252567485e-05, -0.0010280609130859375, -3.814697265625e-06, -0.002973394701257348, -1.52587890625e-05, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Leokk", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Leokk", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"score": -8.68521263339727, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Leokk", "hole2": "ALL", "hole1": 3, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 2, "hole1": 4}], "_type": "ClassDef", "name": "Leokk", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.00014530702901538461, -0.011691340245306492, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001069306890713051, -2.682209014892578e-05, -9.5367431640625e-05, -1.491647720336914, -0.0004520416259765625, -0.00034558758488856256, -0.0025239677634090185, -9.476978448219597e-05, -2.861018856492592e-06, -0.026718009263277054, 0.0, -0.00011002492828993127, -1.5616367818438448e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -5.960462772236497e-07, -0.07391166687011719, -1.0967229172820225e-05, -6.961025238037109, -0.000370025634765625, -2.2649765014648438e-06, -0.00023827097902540118, -0.11544454097747803, -1.1444046322139911e-05], "choice_history": [55, 124, 221, 63, 103, "Leokk", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Leokk", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"score": -21.17133140563965, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -21.17131805419922], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 61}
{"beams": [{"score": -0.059827007278272504, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "<UNK> Justice", "hole1": 1}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "<UNK>Justice", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.00028228759765625, -5.340576171875e-05, -0.00017237472638953477, -0.002625948516651988, -4.053113570989808e-06, 0.0, -3.814697265625e-06, 0.0, -0.0012559890747070312, -3.24249267578125e-05, -1.71661376953125e-05, -0.000133514404296875, -0.014364242553710938, -0.0005855560302734375, -0.005122646223753691, -0.0003147125244140625, -0.00029416801407933235, -1.9073486328125e-06, -4.041369538754225e-05, -1.9073486328125e-06, -0.0053043365478515625, 0.0, -0.00032806396484375, -1.9073486328125e-06, -0.0047626495361328125, 0.0, -1.9073486328125e-06, -0.00345611572265625, -5.7220458984375e-06, -3.254413604736328e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001583099365234375, -0.0005855560302734375, -2.86102294921875e-05, -0.0008945465087890625, -0.0024967193603515625, -9.5367431640625e-05, 0.0, -0.00014901161193847656, -1.52587890625e-05, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.00010763233876787126, 0.0, 0.0, 0.0, -0.015958886593580246, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Justice", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -4.1997852883482665, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "<UNK> Justice", "hole1": 1}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "<UNK>Justice", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.00028228759765625, -5.340576171875e-05, -0.00017237472638953477, -0.002625948516651988, -4.053113570989808e-06, 0.0, -3.814697265625e-06, 0.0, -0.0012559890747070312, -3.24249267578125e-05, -1.71661376953125e-05, -0.000133514404296875, -0.014364242553710938, -0.0005855560302734375, -0.005122646223753691, -0.0003147125244140625, -0.00029416801407933235, -1.9073486328125e-06, -4.041369538754225e-05, -1.9073486328125e-06, -0.0053043365478515625, 0.0, -0.00032806396484375, -1.9073486328125e-06, -0.0047626495361328125, 0.0, -1.9073486328125e-06, -0.00345611572265625, -5.7220458984375e-06, -3.254413604736328e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001583099365234375, -0.0005855560302734375, -2.86102294921875e-05, -0.0008945465087890625, -0.0024967193603515625, -9.5367431640625e-05, 0.0, -0.00014901161193847656, -1.52587890625e-05, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.00010763233876787126, 0.0, 0.0, 0.0, -4.155911445617676, -5.7220458984375e-06], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Justice", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "1", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 1)\n"}, {"score": -5.950709666690727, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": " Justice Justice", "hole1": 1}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "<UNK>Justice", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.00028228759765625, -5.340576171875e-05, -0.00017237472638953477, -0.002625948516651988, -4.053113570989808e-06, 0.0, -3.814697265625e-06, 0.0, -0.0012559890747070312, -3.24249267578125e-05, -1.71661376953125e-05, -0.000133514404296875, -0.014364242553710938, -0.0005855560302734375, -5.536760330200195, -0.232915997505188, -0.12712955474853516, -0.0006993967690505087, 0.0, -3.3972697565332055e-05, -1.9073486328125e-06, -0.00518798828125, 0.0, -0.0003147125244140625, -1.9073486328125e-06, -0.005051612854003906, 0.0, -1.9073486328125e-06, -0.002521514892578125, -7.62939453125e-06, -3.266334533691406e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001544952392578125, -0.0005645751953125, -2.86102294921875e-05, -0.0009517669677734375, -0.0024623870849609375, -9.918212890625e-05, 0.0, -0.00015091896057128906, -1.52587890625e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.00010799005394801497, 0.0, 0.0, 0.0, -0.01584337279200554, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Justice", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, " ", "Justice", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(' Justice Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -6.00609018550449, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template4", "hole0": "<UNK> Justice", "hole1": 1}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "<UNK>Justice", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.00028228759765625, -5.340576171875e-05, -0.00017237472638953477, -0.002625948516651988, -4.053113570989808e-06, 0.0, -3.814697265625e-06, 0.0, -0.0012559890747070312, -3.24249267578125e-05, -1.71661376953125e-05, -0.000133514404296875, -5.93575382232666, -8.20159912109375e-05, -0.000836024759337306, -6.29425048828125e-05, -3.671645754366182e-05, -1.9073486328125e-06, -2.078292891383171e-05, -1.9073486328125e-06, -0.03707695007324219, 0.0, -0.0001354217529296875, 0.0, -0.0031147003173828125, 0.0, -1.9073486328125e-06, -0.0034933090209960938, 0.0, -5.14984130859375e-05, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0001468658447265625, -0.00043487548828125, -2.6702880859375e-05, -0.00095367431640625, -0.003376007080078125, -9.1552734375e-05, 0.0, -0.00014901161193847656, -1.52587890625e-05, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0001116850835387595, 0.0, 0.0, 0.0, -0.015394429676234722, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Justice", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -6.011109341889096, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "<UNK> Justice", "hole1": 1}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "<UNK><UNK>", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.00028228759765625, -5.340576171875e-05, -0.00017237472638953477, -5.9450860023498535, -0.00013470287376549095, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.000507354736328125, -2.86102294921875e-05, -1.1444091796875e-05, -0.0001850128173828125, -0.020689010620117188, -0.0007762908935546875, -0.007089914288371801, -0.0003299713134765625, -0.00028117885813117027, -1.9073486328125e-06, -3.350226324982941e-05, -1.9073486328125e-06, -0.0050144195556640625, 0.0, -0.000331878662109375, -1.9073486328125e-06, -0.0058879852294921875, 0.0, -1.9073486328125e-06, -0.003314971923828125, -5.7220458984375e-06, -3.445148468017578e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001659393310546875, -0.00058746337890625, -2.86102294921875e-05, -0.000911712646484375, -0.002513885498046875, -9.5367431640625e-05, 0.0, -0.00015091896057128906, -1.52587890625e-05, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.00010822823242051527, 0.0, 0.0, 0.0, -0.01612124778330326, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "<UNK>", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK><UNK>(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -6.110918178817087, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Gallywix's Justice"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "<UNK>Justice", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.00028228759765625, -5.340576171875e-05, -0.00017237472638953477, -0.002625948516651988, -4.053113570989808e-06, 0.0, -3.814697265625e-06, 0.0, -0.0012559890747070312, -3.24249267578125e-05, -1.71661376953125e-05, -0.000133514404296875, -4.977896690368652, -2.6702880859375e-05, -1.52587890625e-05, -1.52587890625e-05, -0.0001049041748046875, -5.340576171875e-05, -1.9073486328125e-06, -0.0001590251922607422, -8.7738037109375e-05, -0.0001220703125, -9.5367431640625e-06, -0.0001621246337890625, -9.5367431640625e-06, -0.00145721435546875, -0.00020599365234375, 0.0, -0.0002880096435546875, 0.0, -6.77089556120336e-05, -1.9073486328125e-05, -4.1961669921875e-05, 0.0, -0.0020694732666015625, -2.47955322265625e-05, -2.09808349609375e-05, -0.2195064276456833, -0.005127906799316406, -0.0007651601918041706, -0.001575469970703125, -0.0001277923583984375, 0.0, -0.06197807937860489, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.918212890625e-05, 0.0, -0.42809009552001953, 0.0, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0010204315185546875, 0.0, -0.3827848434448242, 0.0, -0.0002460479736328125, -0.0004711151123046875, -2.300739288330078e-05, -8.344646857949556e-07, -0.001708984375, -1.9073486328125e-06, -0.004054069519042969, 0.0, -1.9073486328125e-06, -0.002956390380859375, -1.9073486328125e-06, -6.878376007080078e-05, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.0001316070556640625, -0.001857757568359375, -4.9591064453125e-05, -0.00079345703125, -0.0001964569091796875, -3.62396240234375e-05, 0.0, -0.00016510486602783203, -2.288818359375e-05, -1.71661376953125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.00018723169341683388, 0.0, 0.0, 0.0, -0.009205898270010948, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Justice", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Gallywix's", " ", "Justice", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice\", 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, True)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -6.112374369416557, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template5", "hole0": "<UNK> Justice", "hole1": 1}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "<UNK>Justice", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.00028228759765625, -5.340576171875e-05, -0.00017237472638953477, -0.002625948516651988, -4.053113570989808e-06, 0.0, -3.814697265625e-06, 0.0, -0.0012559890747070312, -3.24249267578125e-05, -1.71661376953125e-05, -0.000133514404296875, -5.881941795349121, -0.0003185272216796875, -0.1654907763004303, -7.62939453125e-05, -6.639955972786993e-05, -0.0008106231689453125, -0.001241261838003993, -1.9073486328125e-06, -0.02643299102783203, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.008195042610168457, 0.0, -1.9073486328125e-06, -0.0023069381713867188, -3.814697265625e-06, -2.872943878173828e-05, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.000125885009765625, -0.0007114410400390625, -3.24249267578125e-05, -0.0010814666748046875, -0.002521514892578125, -9.5367431640625e-05, 0.0, -0.00016248226165771484, -1.52587890625e-05, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -9.261532977689058e-05, 0.0, 0.0, 0.0, -0.015831932425498962, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Justice", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 84, 177, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -6.175175713707631, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "<UNK> Justice", "hole1": 1}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "<UNK>Justice", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.00028228759765625, -5.340576171875e-05, -0.00017237472638953477, -0.002625948516651988, -4.053113570989808e-06, 0.0, -3.814697265625e-06, 0.0, -0.0012559890747070312, -3.24249267578125e-05, -1.71661376953125e-05, -0.000133514404296875, -0.014364242553710938, -0.0005855560302734375, -0.005122646223753691, -0.0003147125244140625, -0.00029416801407933235, -1.9073486328125e-06, -4.041369538754225e-05, -1.9073486328125e-06, -0.0053043365478515625, 0.0, -0.00032806396484375, -1.9073486328125e-06, -6.120853424072266, 0.0, 0.0, -0.0004119873046875, -1.1444091796875e-05, -2.1219253540039062e-05, 0.0, 0.0, -1.52587890625e-05, 0.0, -0.000141143798828125, -0.0003814697265625, -2.47955322265625e-05, -0.0004901885986328125, -0.00311279296875, -0.0001010894775390625, 0.0, -0.00014901161193847656, -1.71661376953125e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -8.62998713273555e-05, 0.0, 0.0, 0.0, -0.018287882208824158, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Justice", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Weapon(1, 4)\n"}, {"score": -6.188890373666027, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "<UNK> Justice", "hole1": 1}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "<UNK>Justice", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.00028228759765625, -5.340576171875e-05, -0.00017237472638953477, -0.002625948516651988, -4.053113570989808e-06, 0.0, -3.814697265625e-06, 0.0, -0.0012559890747070312, -3.24249267578125e-05, -1.71661376953125e-05, -0.000133514404296875, -0.014364242553710938, -0.0005855560302734375, -0.005122646223753691, -0.0003147125244140625, -0.00029416801407933235, -1.9073486328125e-06, -4.041369538754225e-05, -1.9073486328125e-06, -6.11590051651001, -1.1920922133867862e-06, -0.011112213134765625, -1.9073486328125e-06, -0.010975003242492676, 0.0, -1.9073486328125e-06, -0.004207611083984375, -5.7220458984375e-06, -2.300739288330078e-05, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.00014495849609375, -0.0007648468017578125, -2.6702880859375e-05, -0.0009708404541015625, -0.0029296875, -8.392333984375e-05, 0.0, -0.00013184547424316406, -1.52587890625e-05, -1.33514404296875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.00010501014185138047, 0.0, 0.0, 0.0, -0.016042450442910194, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Justice", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -6.737725869473024, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Gallywix's Justice"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "<UNK>Justice", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.00028228759765625, -5.340576171875e-05, -0.00017237472638953477, -0.002625948516651988, -4.053113570989808e-06, 0.0, -3.814697265625e-06, 0.0, -0.0012559890747070312, -3.24249267578125e-05, -1.71661376953125e-05, -0.000133514404296875, -4.977896690368652, -2.6702880859375e-05, -1.52587890625e-05, -1.52587890625e-05, -0.0001049041748046875, -5.340576171875e-05, -1.9073486328125e-06, -0.0001590251922607422, -8.7738037109375e-05, -0.0001220703125, -9.5367431640625e-06, -0.0001621246337890625, -9.5367431640625e-06, -0.00145721435546875, -0.00020599365234375, 0.0, -0.0002880096435546875, 0.0, -6.77089556120336e-05, -1.9073486328125e-05, -4.1961669921875e-05, 0.0, -0.0020694732666015625, -2.47955322265625e-05, -2.09808349609375e-05, -0.2195064276456833, -0.005127906799316406, -0.0007651601918041706, -0.001575469970703125, -0.0001277923583984375, 0.0, -0.06197807937860489, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.918212890625e-05, 0.0, -1.376948356628418, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -7.05718994140625e-05, 0.0, -0.0614776611328125, -2.0265579223632812e-06, -8.7738037109375e-05, -0.00018310546875, -1.728534698486328e-05, -3.099440846199286e-06, -0.00102996826171875, -1.9073486328125e-06, -0.003937721252441406, 0.0, -3.814697265625e-06, -0.00307464599609375, -1.9073486328125e-06, -6.496906280517578e-05, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.000133514404296875, -0.00186920166015625, -5.7220458984375e-05, -0.0005588531494140625, -0.0001659393310546875, -3.62396240234375e-05, 0.0, -0.00014269351959228516, -3.24249267578125e-05, -1.71661376953125e-05, -1.52587890625e-05, -3.814697265625e-06, -0.00018008291954174638, 0.0, 0.0, 0.0, -0.010814744047820568, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Justice", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Gallywix's", " ", "Justice", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice\", 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -6.964241302206091, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "DRUID", "_type": "Template6", "hole0": "<UNK> Justice", "hole1": 1}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "<UNK>Justice", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.00028228759765625, -5.340576171875e-05, -0.00017237472638953477, -0.002625948516651988, -4.053113570989808e-06, 0.0, -3.814697265625e-06, 0.0, -0.0012559890747070312, -3.24249267578125e-05, -1.71661376953125e-05, -0.000133514404296875, -0.014364242553710938, -0.0005855560302734375, -0.005122646223753691, -0.0003147125244140625, -0.00029416801407933235, -1.9073486328125e-06, -4.041369538754225e-05, -1.9073486328125e-06, -6.90057373046875, -2.3841855067985307e-07, -0.00025177001953125, 0.0, -0.013355374336242676, 0.0, -1.9073486328125e-06, -0.002704620361328125, -1.9073486328125e-06, -2.110004425048828e-05, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.0009098052978515625, -2.86102294921875e-05, -0.0007381439208984375, -0.002559661865234375, -9.1552734375e-05, 0.0, -0.00014328956604003906, -1.52587890625e-05, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.00011371079017408192, 0.0, 0.0, 0.0, -0.01715705916285515, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Justice", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -7.027242318447861, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Gallywix's Justice"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "<UNK>Justice", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.00028228759765625, -5.340576171875e-05, -0.00017237472638953477, -0.002625948516651988, -4.053113570989808e-06, 0.0, -3.814697265625e-06, 0.0, -0.0012559890747070312, -3.24249267578125e-05, -1.71661376953125e-05, -0.000133514404296875, -4.977896690368652, -2.6702880859375e-05, -1.52587890625e-05, -1.52587890625e-05, -0.0001049041748046875, -5.340576171875e-05, -1.9073486328125e-06, -0.0001590251922607422, -8.7738037109375e-05, -0.0001220703125, -9.5367431640625e-06, -0.0001621246337890625, -9.5367431640625e-06, -0.00145721435546875, -0.00020599365234375, 0.0, -0.0002880096435546875, 0.0, -6.77089556120336e-05, -1.9073486328125e-05, -4.1961669921875e-05, 0.0, -0.0020694732666015625, -2.47955322265625e-05, -2.09808349609375e-05, -0.2195064276456833, -0.005127906799316406, -0.0007651601918041706, -0.001575469970703125, -0.0001277923583984375, 0.0, -0.06197807937860489, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.918212890625e-05, 0.0, -0.42809009552001953, 0.0, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0010204315185546875, 0.0, -1.2989015579223633, 0.0, -0.0001659393310546875, -0.00022125244140625, -2.110004425048828e-05, -2.9802317840221804e-06, -0.0007648468017578125, -1.9073486328125e-06, -0.0041522979736328125, 0.0, -3.814697265625e-06, -0.0029449462890625, -1.9073486328125e-06, -6.115436553955078e-05, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.0001354217529296875, -0.0018901824951171875, -5.53131103515625e-05, -0.0005626678466796875, -0.000171661376953125, -3.4332275390625e-05, 0.0, -0.00014460086822509766, -3.24249267578125e-05, -1.71661376953125e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0001824661740101874, 0.0, 0.0, 0.0, -0.010835487395524979, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Justice", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Gallywix's", " ", "Justice", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice\", 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -7.1524260665223665, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "Light Justice", "hole1": 1}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "<UNK>Justice", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.00028228759765625, -5.340576171875e-05, -0.00017237472638953477, -0.002625948516651988, -4.053113570989808e-06, 0.0, -3.814697265625e-06, 0.0, -0.0012559890747070312, -3.24249267578125e-05, -1.71661376953125e-05, -0.000133514404296875, -0.014364242553710938, -0.0005855560302734375, -7.0551371574401855, -0.037171363830566406, -0.004792686086148024, -5.7220458984375e-06, -7.233500946313143e-05, 0.0, -0.005293846130371094, 0.0, -0.00034332275390625, -1.9073486328125e-06, -0.00605010986328125, 0.0, -1.9073486328125e-06, -0.0031452178955078125, -5.7220458984375e-06, -3.254413604736328e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001583099365234375, -0.0006008148193359375, -2.86102294921875e-05, -0.0009136199951171875, -0.002445220947265625, -9.5367431640625e-05, 0.0, -0.00014901161193847656, -1.71661376953125e-05, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.00010775156988529488, 0.0, 0.0, 0.0, -0.01618824526667595, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Justice", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "Light", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Light Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"score": -10.821463161742145, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Gallywix's Justice"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"id": "Weapon", "_type": "Name"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 1}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}], "_type": "ClassDef", "name": "<UNK>Justice", "bases": [{"id": "WeaponCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.00028228759765625, -5.340576171875e-05, -0.00017237472638953477, -0.002625948516651988, -4.053113570989808e-06, 0.0, -3.814697265625e-06, 0.0, -0.0012559890747070312, -3.24249267578125e-05, -1.71661376953125e-05, -0.000133514404296875, -4.977896690368652, -2.6702880859375e-05, -1.52587890625e-05, -1.52587890625e-05, -0.0001049041748046875, -5.340576171875e-05, -1.9073486328125e-06, -0.0001590251922607422, -8.7738037109375e-05, -0.0001220703125, -9.5367431640625e-06, -0.0001621246337890625, -9.5367431640625e-06, -0.00145721435546875, -0.00020599365234375, 0.0, -0.0002880096435546875, 0.0, -6.77089556120336e-05, -1.9073486328125e-05, -4.1961669921875e-05, 0.0, -0.0020694732666015625, -2.47955322265625e-05, -2.09808349609375e-05, -0.2195064276456833, -0.005127906799316406, -0.0007651601918041706, -0.001575469970703125, -0.0001277923583984375, 0.0, -0.06197807937860489, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.918212890625e-05, 0.0, -0.42809009552001953, 0.0, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0010204315185546875, 0.0, -0.3827848434448242, 0.0, -0.0002460479736328125, -0.0004711151123046875, -2.300739288330078e-05, -8.344646857949556e-07, -0.001708984375, -1.9073486328125e-06, -0.004054069519042969, 0.0, -1.9073486328125e-06, -0.002956390380859375, -1.9073486328125e-06, -6.878376007080078e-05, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.0001316070556640625, -0.001857757568359375, -4.9591064453125e-05, -0.00079345703125, -0.0001964569091796875, -3.62396240234375e-05, 0.0, -0.00016510486602783203, -2.288818359375e-05, -1.71661376953125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.00018723169341683388, 0.0, 0.0, 0.0, -4.7197489738464355, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Justice", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Gallywix's", " ", "Justice", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "1", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice\", 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, True)\n\n    def create_weapon(self, player):\n        return Weapon(1, 1)\n"}, {"score": -21.795961380004883, "model_output": {"_type": "Module", "body": []}, "score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -21.79588508605957], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 62}
{"beams": [{"score": -0.12453372299960819, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Lord of the Arena", "hole1": 6}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 6, "hole1": 5}], "_type": "ClassDef", "name": "LordOfTheArena", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -0.0001220703125, -9.34600830078125e-05, -0.0001468658447265625, -0.00021383940475061536, -0.0007154704653657973, -0.000577683502342552, -0.0007458598120138049, -0.0006623268127441406, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -8.82148651726311e-06, -0.0010892152786254883, -1.9073486328125e-06, -4.57763671875e-05, -0.006622314453125, -0.00070953369140625, -0.0002349356800550595, -0.005035604815930128, -0.004822731018066406, -0.0003776450757868588, -0.0027908075135201216, -0.0007394552230834961, -0.02920222282409668, -0.00142669677734375, -2.050456896540709e-05, -4.768371127283899e-06, -0.0003552436828613281, -0.0001850128173828125, -0.0018558502197265625, -3.24249267578125e-05, -0.005563843995332718, -2.13382354559144e-05, -0.05798947438597679, -5.960462772236497e-07, -0.0011904239654541016, -1.1920928244535389e-07, -0.000469207763671875, -0.0002002716064453125, -9.918212890625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Lord", "Of", "The", "Arena", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 72, 145, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -2.94588072493886, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Lord of the Arena", "hole1": 6}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 6, "hole1": 6}], "_type": "ClassDef", "name": "LordOfTheArena", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -0.0001220703125, -9.34600830078125e-05, -0.0001468658447265625, -0.00021383940475061536, -0.0007154704653657973, -0.000577683502342552, -0.0007458598120138049, -0.0006623268127441406, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -8.82148651726311e-06, -0.0010892152786254883, -1.9073486328125e-06, -4.57763671875e-05, -0.006622314453125, -0.00070953369140625, -0.0002349356800550595, -0.005035604815930128, -0.004822731018066406, -0.0003776450757868588, -0.0027908075135201216, -0.0007394552230834961, -0.02920222282409668, -0.00142669677734375, -2.050456896540709e-05, -4.768371127283899e-06, -0.0003552436828613281, -0.0001850128173828125, -0.0018558502197265625, -3.24249267578125e-05, -0.005563843995332718, -2.13382354559144e-05, -2.877732276916504, -1.311301275563892e-06, -0.002692699432373047, -2.3841855067985307e-07, -0.000591278076171875, -0.00016021728515625, -0.000118255615234375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Lord", "Of", "The", "Arena", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 72, 145, "6", "<EOS>", "6", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 6, taunt=True)\n"}, {"score": -3.6503293383346147, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Lord of the the Arena", "hole1": 6}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 6, "hole1": 5}], "_type": "ClassDef", "name": "LordOfTheArena", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -0.0001220703125, -9.34600830078125e-05, -0.0001468658447265625, -0.00021383940475061536, -0.0007154704653657973, -0.000577683502342552, -0.0007458598120138049, -0.0006623268127441406, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -8.82148651726311e-06, -0.0010892152786254883, -1.9073486328125e-06, -4.57763671875e-05, -0.006622314453125, -0.00070953369140625, -0.0002349356800550595, -0.005035604815930128, -0.004822731018066406, -0.0003776450757868588, -0.0027908075135201216, -0.0007394552230834961, -3.549513578414917, -0.014407157897949219, -0.0008411406306549907, -0.000606536865234375, -2.372374729020521e-05, -4.5299530029296875e-06, -0.0008664131164550781, -0.0001430511474609375, -0.003997802734375, -3.24249267578125e-05, -0.004330660216510296, -3.40932747349143e-05, -0.04783773049712181, -5.960462772236497e-07, -0.0009396076202392578, -2.3841855067985307e-07, -0.0004901885986328125, -0.0002231597900390625, -0.0001201629638671875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Lord", "Of", "The", "Arena", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Lord", " ", "of", " ", "the", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 72, 145, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -5.316129035337774, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Lord of the Arena", "hole1": 6}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 0, "hole1": 6}], "_type": "ClassDef", "name": "LordOfTheArena", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -0.0001220703125, -9.34600830078125e-05, -0.0001468658447265625, -0.00021383940475061536, -0.0007154704653657973, -0.000577683502342552, -0.0007458598120138049, -0.0006623268127441406, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -8.82148651726311e-06, -0.0010892152786254883, -1.9073486328125e-06, -4.57763671875e-05, -0.006622314453125, -0.00070953369140625, -0.0002349356800550595, -0.005035604815930128, -0.004822731018066406, -0.0003776450757868588, -0.0027908075135201216, -0.0007394552230834961, -0.02920222282409668, -0.00142669677734375, -2.050456896540709e-05, -4.768371127283899e-06, -0.0003552436828613281, -0.0001850128173828125, -0.0018558502197265625, -3.24249267578125e-05, -5.237785816192627, -0.01629207655787468, -1.3947389561508317e-05, -0.0021947622299194336, -1.1920928244535389e-07, -0.0005855560302734375, -9.1552734375e-05, -0.0001659393310546875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Lord", "Of", "The", "Arena", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 72, 145, "<EOS>", "6", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(0, 6, taunt=True)\n"}, {"score": -5.455668337908996, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "LordLord of the Arena", "hole1": 6}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 6, "hole1": 5}], "_type": "ClassDef", "name": "LordOfTheArena", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -0.0001220703125, -9.34600830078125e-05, -0.0001468658447265625, -0.00021383940475061536, -0.0007154704653657973, -0.000577683502342552, -0.0007458598120138049, -0.0006623268127441406, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -8.82148651726311e-06, -0.0010892152786254883, -1.9073486328125e-06, -4.57763671875e-05, -0.006622314453125, -0.00070953369140625, -0.0002349356800550595, -5.312738418579102, -0.04877208173274994, -0.0008120486163534224, -0.0003024330362677574, -0.0003076566499657929, -0.0021746158599853516, -0.00616610050201416, -0.0007610321044921875, -3.099458263022825e-05, -4.649161837733118e-06, -0.0005593299865722656, -0.0001468658447265625, -0.002315521240234375, -3.62396240234375e-05, -0.005825445055961609, -2.0265373677830212e-05, -0.06058072671294212, -5.960462772236497e-07, -0.001177072525024414, -1.1920928244535389e-07, -0.0004730224609375, -0.0002117156982421875, -0.0001010894775390625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Lord", "Of", "The", "Arena", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Lord", "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 72, 145, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('LordLord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -5.778443171326948, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Lord Lord the Arena", "hole1": 6}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 6, "hole1": 5}], "_type": "ClassDef", "name": "LordOfTheArena", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -0.0001220703125, -9.34600830078125e-05, -0.0001468658447265625, -0.00021383940475061536, -0.0007154704653657973, -0.000577683502342552, -0.0007458598120138049, -0.0006623268127441406, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -8.82148651726311e-06, -0.0010892152786254883, -1.9073486328125e-06, -4.57763671875e-05, -0.006622314453125, -0.00070953369140625, -0.0002349356800550595, -0.005035604815930128, -5.366774559020996, -0.00013077254698146135, -0.06739151477813721, -0.0006811618804931641, -0.24953365325927734, -0.002628326416015625, -2.670330650289543e-05, -4.5299530029296875e-06, -0.0003381967544555664, -0.000209808349609375, -0.0016078948974609375, -3.62396240234375e-05, -0.005303479731082916, -1.9311717551317997e-05, -0.06446349620819092, -5.960462772236497e-07, -0.0013554096221923828, -1.1920928244535389e-07, -0.000457763671875, -0.0002040863037109375, -8.96453857421875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Lord", "Of", "The", "Arena", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Lord", " ", "Lord", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 72, 145, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord Lord the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -6.580942884353874, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 6, "hole1": 5}], "_type": "ClassDef", "name": "LordOfTheArena", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -0.0001220703125, -9.34600830078125e-05, -0.0001468658447265625, -0.00021383940475061536, -0.0007154704653657973, -0.000577683502342552, -0.0007458598120138049, -0.0006623268127441406, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -8.82148651726311e-06, -0.0010892152786254883, -1.9073486328125e-06, -4.57763671875e-05, -5.175365447998047, -0.0008754730224609375, -0.0006248443969525397, -0.00017069891327992082, -0.015448808670043945, -5.805492401123047e-05, -0.00046253204345703125, -0.0004367828369140625, -0.00013780593872070312, -1.9073486328125e-06, -5.4575386457145214e-05, 0.0, -0.2577991485595703, 0.0, -0.14327645301818848, -1.5616416931152344e-05, -0.0009937286376953125, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -0.853827714920044, -1.9073486328125e-06, -0.015825271606445312, -2.288818359375e-05, -0.00034171511651948094, -1.9550132492440753e-05, -0.10505568981170654, -3.814689989667386e-06, -0.005034804344177246, -5.960462772236497e-07, -0.0001773834228515625, -8.58306884765625e-05, -3.4332275390625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Lord", "Of", "The", "Arena", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -6.633062021205006, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Lord of of the Arena", "hole1": 6}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 6, "hole1": 5}], "_type": "ClassDef", "name": "LordOfTheArena", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -0.0001220703125, -9.34600830078125e-05, -0.0001468658447265625, -0.00021383940475061536, -0.0007154704653657973, -0.000577683502342552, -0.0007458598120138049, -0.0006623268127441406, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -8.82148651726311e-06, -0.0010892152786254883, -1.9073486328125e-06, -4.57763671875e-05, -0.006622314453125, -0.00070953369140625, -0.0002349356800550595, -0.005035604815930128, -0.004822731018066406, -0.0003776450757868588, -5.9079766273498535, -0.0007832049741409719, -0.6321214437484741, -0.008900880813598633, -0.00117063510697335, -0.0005445480346679688, -2.0623974705813453e-05, -6.556510470545618e-06, -0.0008338689804077148, -0.000110626220703125, -0.004276275634765625, -2.86102294921875e-05, -0.004404959734529257, -3.194758028257638e-05, -0.04770719259977341, -5.960462772236497e-07, -0.0009520053863525391, -2.3841855067985307e-07, -0.0004787445068359375, -0.0002117156982421875, -0.00011444091796875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Lord", "Of", "The", "Arena", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Lord", " ", "of", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 72, 145, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -6.669873705081244, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Lord of the the Arena", "hole1": 6}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 6, "hole1": 6}], "_type": "ClassDef", "name": "LordOfTheArena", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -0.0001220703125, -9.34600830078125e-05, -0.0001468658447265625, -0.00021383940475061536, -0.0007154704653657973, -0.000577683502342552, -0.0007458598120138049, -0.0006623268127441406, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -8.82148651726311e-06, -0.0010892152786254883, -1.9073486328125e-06, -4.57763671875e-05, -0.006622314453125, -0.00070953369140625, -0.0002349356800550595, -0.005035604815930128, -0.004822731018066406, -0.0003776450757868588, -0.0027908075135201216, -0.0007394552230834961, -3.549513578414917, -0.014407157897949219, -0.0008411406306549907, -0.000606536865234375, -2.372374729020521e-05, -4.5299530029296875e-06, -0.0008664131164550781, -0.0001430511474609375, -0.003997802734375, -3.24249267578125e-05, -0.004330660216510296, -3.40932747349143e-05, -3.0659842491149902, -1.1920922133867862e-06, -0.0022128820419311523, -2.3841855067985307e-07, -0.00063323974609375, -0.0001811981201171875, -0.0001430511474609375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Lord", "Of", "The", "Arena", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Lord", " ", "of", " ", "the", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 72, 145, "6", "<EOS>", "6", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 6, taunt=True)\n"}, {"score": -6.757221238691038, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Lord of of Arena", "hole1": 6}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 6, "hole1": 5}], "_type": "ClassDef", "name": "LordOfTheArena", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -0.0001220703125, -9.34600830078125e-05, -0.0001468658447265625, -0.00021383940475061536, -0.0007154704653657973, -0.000577683502342552, -0.0007458598120138049, -0.0006623268127441406, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -8.82148651726311e-06, -0.0010892152786254883, -1.9073486328125e-06, -4.57763671875e-05, -0.006622314453125, -0.00070953369140625, -0.0002349356800550595, -0.005035604815930128, -0.004822731018066406, -0.0003776450757868588, -5.9079766273498535, -0.0007832049741409719, -0.7584604024887085, -0.0024232864379882812, -1.75243076228071e-05, -7.033347174001392e-06, -0.00033795833587646484, -0.0001354217529296875, -0.001827239990234375, -2.6702880859375e-05, -0.005509192124009132, -2.276871418871451e-05, -0.055368658155202866, -7.152555099310121e-07, -0.0012285709381103516, -1.1920928244535389e-07, -0.0004367828369140625, -0.0001850128173828125, -8.7738037109375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Lord", "Of", "The", "Arena", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Lord", " ", "of", " ", "of", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 72, 145, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of of Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -6.955646140809563, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 6, "hole1": 5}], "_type": "ClassDef", "name": "LordOfTheArena", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -0.0001220703125, -9.34600830078125e-05, -0.0001468658447265625, -0.00021383940475061536, -0.0007154704653657973, -0.000577683502342552, -0.0007458598120138049, -0.0006623268127441406, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -8.82148651726311e-06, -0.0010892152786254883, -1.9073486328125e-06, -4.57763671875e-05, -5.175365447998047, -0.0008754730224609375, -0.0006248443969525397, -0.00017069891327992082, -0.015448808670043945, -5.805492401123047e-05, -0.00046253204345703125, -0.0004367828369140625, -0.00013780593872070312, -1.9073486328125e-06, -5.4575386457145214e-05, 0.0, -0.2577991485595703, 0.0, -0.14327645301818848, -1.5616416931152344e-05, -0.0009937286376953125, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001468658447265625, 0.0, -1.1065523624420166, -1.9073486328125e-06, -0.0061130523681640625, -3.0517578125e-05, -0.00041726461495272815, -7.235741941258311e-05, -0.2352350950241089, -4.529942543740617e-06, -0.006428718566894531, -4.768370445162873e-07, -0.0001811981201171875, -6.4849853515625e-05, -3.24249267578125e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Lord", "Of", "The", "Arena", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -7.041504260133053, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Lord Lord the the Arena", "hole1": 6}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 6, "hole1": 5}], "_type": "ClassDef", "name": "LordOfTheArena", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -0.0001220703125, -9.34600830078125e-05, -0.0001468658447265625, -0.00021383940475061536, -0.0007154704653657973, -0.000577683502342552, -0.0007458598120138049, -0.0006623268127441406, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -8.82148651726311e-06, -0.0010892152786254883, -1.9073486328125e-06, -4.57763671875e-05, -0.006622314453125, -0.00070953369140625, -0.0002349356800550595, -0.005035604815930128, -5.366774559020996, -0.00013077254698146135, -0.06739151477813721, -0.0006811618804931641, -1.5106782913208008, -0.008960723876953125, -0.0015662906225770712, -0.0008544921875, -2.8014954295940697e-05, -2.503394853192731e-06, -0.0007921457290649414, -0.0001678466796875, -0.0032520294189453125, -3.62396240234375e-05, -0.004648828413337469, -3.0636318115284666e-05, -0.05650448426604271, -5.960462772236497e-07, -0.0010139942169189453, -2.3841855067985307e-07, -0.0004749298095703125, -0.000217437744140625, -0.000110626220703125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Lord", "Of", "The", "Arena", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Lord", " ", "Lord", " ", "the", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 72, 145, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord Lord the the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -7.250970680108701, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Lord of the Arena Arena", "hole1": 6}, {"hole2": "taunt", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 6, "hole1": 5}], "_type": "ClassDef", "name": "LordOfTheArena", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -0.0001220703125, -9.34600830078125e-05, -0.0001468658447265625, -0.00021383940475061536, -0.0007154704653657973, -0.000577683502342552, -0.0007458598120138049, -0.0006623268127441406, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -8.82148651726311e-06, -0.0010892152786254883, -1.9073486328125e-06, -4.57763671875e-05, -0.006622314453125, -0.00070953369140625, -0.0002349356800550595, -0.005035604815930128, -0.004822731018066406, -0.0003776450757868588, -0.0027908075135201216, -0.0007394552230834961, -0.02920222282409668, -7.132625102996826, -0.0007308721542358398, -0.0005435943603515625, -2.491585837560706e-05, -4.768371127283899e-06, -0.0011676549911499023, -9.918212890625e-05, -0.0051174163818359375, -2.6702880859375e-05, -0.004951000679284334, -2.6702524337451905e-05, -0.048582904040813446, -4.768370445162873e-07, -0.0010254383087158203, -1.1920928244535389e-07, -0.000514984130859375, -0.0002460479736328125, -0.000164031982421875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Lord", "Of", "The", "Arena", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Lord", " ", "of", " ", "the", " ", "Arena", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 72, 145, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"score": -7.373033298374594, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template4", "hole0": "Lord of the Arena", "hole1": 6}, {"_type": "Template11", "hole0": 6, "hole1": 5}], "_type": "ClassDef", "name": "LordOfTheArena", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -0.0001220703125, -9.34600830078125e-05, -0.0001468658447265625, -0.00021383940475061536, -0.0007154704653657973, -0.000577683502342552, -0.0007458598120138049, -0.0006623268127441406, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -8.82148651726311e-06, -0.0010892152786254883, -1.9073486328125e-06, -4.57763671875e-05, -0.006622314453125, -0.00070953369140625, -0.0002349356800550595, -0.005035604815930128, -0.004822731018066406, -0.0003776450757868588, -0.0027908075135201216, -0.0007394552230834961, -0.02920222282409668, -0.00142669677734375, -2.050456896540709e-05, -4.768371127283899e-06, -0.0003552436828613281, -0.0001850128173828125, -7.016258239746094, -0.0001239776611328125, -0.00028880234458483756, -1.943104507518001e-05, -0.29911741614341736, -0.00011444091796875], "choice_history": [55, 124, 221, 63, 103, "Lord", "Of", "The", "Arena", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 73, 146, "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}, {"score": -18.528888702392578, "model_output": {"_type": "Module", "body": []}, "score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -18.528785705566406], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 63}
{"beams": [{"score": -0.06824775714012787, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MECH", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "MechanicalDragonling", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001773834228515625, -1.71661376953125e-05, -9.775161743164062e-06, -4.172325134277344e-06, -1.740443622111343e-05, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -7.271760750882095e-06, -3.5762786865234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.015684127807617188, -0.0001621246337890625, -3.647804260253906e-05, -2.741813204920618e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-06, -7.605343853356317e-05, -3.635852044681087e-05, -7.82012939453125e-05, -0.000347137451171875, -1.9073486328125e-06, -7.62939453125e-06, -0.0016880035400390625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.1801719665527344e-05, -1.9073486328125e-06, -1.537799835205078e-05, -2.3841855067985307e-07, -0.000194549560546875, -0.0002288818359375, -2.6702880859375e-05, -1.3709068298339844e-05, -4.4941658416064456e-05, -2.5510787963867188e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -3.206555265933275e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -4.768370445162873e-07, -0.0004693269729614258, -5.841255187988281e-06, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -7.62939453125e-06, -7.62939453125e-06, -0.00013600854435935616, -0.014190673828125, -2.4795530407573096e-05, -2.47955322265625e-05, -9.5367431640625e-06, -2.133846101060044e-05, -2.0265579223632812e-06, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0001010894775390625, 0.0, -0.033458709716796875, -5.245208740234375e-05, -4.9591064453125e-05, -5.7220458984375e-06, -0.00033626522053964436, -2.145764938177308e-06, -1.3113011618770543e-06, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Mechanical", "Dragonling", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Mechanical", " ", "Dragonling", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -3.8376105870989576, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "MechanicalDragonling", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001773834228515625, -1.71661376953125e-05, -9.775161743164062e-06, -4.172325134277344e-06, -1.740443622111343e-05, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -7.271760750882095e-06, -3.5762786865234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.015684127807617188, -0.0001621246337890625, -3.647804260253906e-05, -2.741813204920618e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-06, -7.605343853356317e-05, -3.635852044681087e-05, -7.82012939453125e-05, -0.000347137451171875, -1.9073486328125e-06, -7.62939453125e-06, -0.0016880035400390625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.1801719665527344e-05, -1.9073486328125e-06, -1.537799835205078e-05, -2.3841855067985307e-07, -0.000194549560546875, -0.0002288818359375, -2.6702880859375e-05, -1.3709068298339844e-05, -4.4941658416064456e-05, -2.5510787963867188e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -3.206555265933275e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -4.768370445162873e-07, -0.0004693269729614258, -5.841255187988281e-06, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -7.62939453125e-06, -7.62939453125e-06, -0.00013600854435935616, -0.014190673828125, -2.4795530407573096e-05, -2.47955322265625e-05, -9.5367431640625e-06, -2.133846101060044e-05, -2.0265579223632812e-06, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0001010894775390625, 0.0, -3.80294132232666, -5.7220458984375e-06, -9.5367431640625e-05, -5.7220458984375e-06, -0.00021684019884560257, -1.7881377516459906e-06, -2.384182607784169e-06, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mechanical", "Dragonling", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Mechanical", " ", "Dragonling", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -4.222219753665627, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Mechanical Dragonling", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MECH", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "MechanicalDragonling", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001773834228515625, -1.71661376953125e-05, -9.775161743164062e-06, -4.172325134277344e-06, -1.740443622111343e-05, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -7.271760750882095e-06, -3.5762786865234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.181693077087402, -0.0001220703125, -3.290176027803682e-05, -0.0006310247117653489, -4.0531158447265625e-06, 0.0, -1.0370560630690306e-05, 0.0, -1.8477434423402883e-05, 0.0, -1.573560803080909e-05, -2.2649765014648438e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -0.037418365478515625, -1.0251987987430766e-05, -0.001697540283203125, -1.9073486328125e-06, -0.00015580568287987262, -1.9311717551317997e-05, -8.344644584212801e-07, -2.384185791015625e-06], "choice_history": [55, 124, 221, 63, 103, "Mechanical", "Dragonling", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Mechanical", " ", "Dragonling", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -4.328909839924862, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MECH", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "RARE", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "MechanicalDragonling", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001773834228515625, -1.71661376953125e-05, -9.775161743164062e-06, -4.172325134277344e-06, -1.740443622111343e-05, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -7.271760750882095e-06, -3.5762786865234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.015684127807617188, -0.0001621246337890625, -3.647804260253906e-05, -2.741813204920618e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-06, -7.605343853356317e-05, -3.635852044681087e-05, -7.82012939453125e-05, -0.000347137451171875, -1.9073486328125e-06, -7.62939453125e-06, -0.0016880035400390625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.1801719665527344e-05, -1.9073486328125e-06, -1.537799835205078e-05, -2.3841855067985307e-07, -0.000194549560546875, -0.0002288818359375, -2.6702880859375e-05, -1.3709068298339844e-05, -4.4941658416064456e-05, -2.5510787963867188e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -3.206555265933275e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -4.768370445162873e-07, -0.0004693269729614258, -5.841255187988281e-06, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -7.62939453125e-06, -7.62939453125e-06, -0.00013600854435935616, -4.278546333312988, -2.682209014892578e-05, -6.103515625e-05, -1.71661376953125e-05, -3.528594606905244e-05, -2.0265579223632812e-06, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -9.918212890625e-05, 0.0, -0.02975940704345703, -3.540515899658203e-05, -5.91278076171875e-05, -3.814697265625e-06, -0.00032339454628527164, -2.861018856492592e-06, -1.1920919860131107e-06, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Mechanical", "Dragonling", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Mechanical", " ", "Dragonling", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -5.466971364316883, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "MechanicalDragonling", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001773834228515625, -1.71661376953125e-05, -9.775161743164062e-06, -4.172325134277344e-06, -1.740443622111343e-05, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -7.271760750882095e-06, -3.5762786865234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.015684127807617188, -0.0001621246337890625, -3.647804260253906e-05, -2.741813204920618e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-06, -7.605343853356317e-05, -3.635852044681087e-05, -7.82012939453125e-05, -0.000347137451171875, -1.9073486328125e-06, -7.62939453125e-06, -0.0016880035400390625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.1801719665527344e-05, -1.9073486328125e-06, -1.537799835205078e-05, -2.3841855067985307e-07, -0.000194549560546875, -0.0002288818359375, -2.6702880859375e-05, -1.3709068298339844e-05, -4.4941658416064456e-05, -2.5510787963867188e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -3.206555265933275e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -4.768370445162873e-07, -0.0004693269729614258, -5.841255187988281e-06, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -7.62939453125e-06, -7.62939453125e-06, -0.00013600854435935616, -0.014190673828125, -2.4795530407573096e-05, -2.47955322265625e-05, -9.5367431640625e-06, -2.133846101060044e-05, -2.0265579223632812e-06, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0001010894775390625, 0.0, -5.432214736938477, -6.29425048828125e-05, -5.14984130859375e-05, -5.7220458984375e-06, -0.0002898976963479072, -9.536738616588991e-07, -4.172314675088273e-06, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mechanical", "Dragonling", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Mechanical", " ", "Dragonling", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -7.371157971565111, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "attr": "ALL", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "COMMON", "value": {"id": "CARD_RARITY", "_type": "Name"}}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "MechanicalDragonling", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001773834228515625, -1.71661376953125e-05, -9.775161743164062e-06, -4.172325134277344e-06, -1.740443622111343e-05, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -7.271760750882095e-06, -3.5762786865234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.015684127807617188, -0.0001621246337890625, -3.647804260253906e-05, -2.741813204920618e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-06, -7.605343853356317e-05, -3.635852044681087e-05, -7.82012939453125e-05, -0.000347137451171875, -1.9073486328125e-06, -7.62939453125e-06, -6.538498878479004, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.3589859008789062e-05, -2.0265579223632812e-06, -0.0001850128173828125, -4.768370445162873e-07, -0.7850217819213867, -4.00543212890625e-05, -3.62396240234375e-05, -1.1682510375976562e-05, -6.556427979376167e-05, -2.205371856689453e-05, 0.0, -9.5367431640625e-06, 0.0, -6.435433169826865e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, 0.0, -4.76837158203125e-05, -2.3841855067985307e-07, -0.0005931854248046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.00012051333033014089, -0.016078948974609375, -2.4437902538920753e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.990794771700166e-05, -2.0265579223632812e-06, -0.013103485107421875, -3.814697265625e-06, -0.00013124891847837716, -6.961580220377073e-05, -2.6226039153698366e-06, -1.1920922133867862e-06], "choice_history": [55, 124, 221, 63, 103, "Mechanical", "Dragonling", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Mechanical", " ", "Dragonling", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -7.695674110556837, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Mechanical Dragonling", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "MechanicalDragonling", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001773834228515625, -1.71661376953125e-05, -9.775161743164062e-06, -4.172325134277344e-06, -1.740443622111343e-05, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -7.271760750882095e-06, -3.5762786865234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.181693077087402, -0.0001220703125, -3.290176027803682e-05, -0.0006310247117653489, -4.0531158447265625e-06, 0.0, -1.0370560630690306e-05, 0.0, -1.8477434423402883e-05, 0.0, -1.573560803080909e-05, -2.2649765014648438e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -3.50946044921875, -2.384185791015625e-06, -0.00313568115234375, -1.9073486328125e-06, -0.00013589848822448403, -2.2649508537142538e-05, -1.5497193999181036e-06, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "Mechanical", "Dragonling", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Mechanical", " ", "Dragonling", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -9.205629727205228, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"hole3": "minion_type", "hole0": "Mechanical Dragonling", "hole2": "FREE", "hole1": 1, "_type": "Template14", "hole4": {"_type": "Attribute", "attr": "MECH", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "MechanicalDragonling", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001773834228515625, -1.71661376953125e-05, -9.775161743164062e-06, -4.172325134277344e-06, -1.740443622111343e-05, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -7.271760750882095e-06, -3.5762786865234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.015684127807617188, -0.0001621246337890625, -3.647804260253906e-05, -2.741813204920618e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-06, -7.605343853356317e-05, -3.635852044681087e-05, -7.82012939453125e-05, -8.118176460266113, -0.00047016143798828125, -0.006885647773742676, -0.0021608120296150446, -5.745887756347656e-05, 0.0, -2.1458019546116702e-05, 0.0, -0.0008604526519775391, -4.5299530029296875e-06, -0.00029849950806237757, -6.43729799776338e-06, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, 0.0, -4.1961669921875e-05, -1.1920928244535389e-07, -1.0342360734939575, -1.752373282215558e-05, -0.02559661865234375, -5.7220458984375e-06, -0.00022327863553073257, -3.135155202471651e-05, -5.960462772236497e-07, -7.152555099310121e-07], "choice_history": [55, 124, 221, 63, 103, "Mechanical", "Dragonling", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Mechanical", " ", "Dragonling", "<EOS>", "1", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -9.2395864936721, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"hole3": "minion_type", "hole0": "Mechanical Dragonling", "hole2": "FREE", "hole1": 1, "_type": "Template14", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "MechanicalDragonling", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001773834228515625, -1.71661376953125e-05, -9.775161743164062e-06, -4.172325134277344e-06, -1.740443622111343e-05, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -7.271760750882095e-06, -3.5762786865234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.015684127807617188, -0.0001621246337890625, -3.647804260253906e-05, -2.741813204920618e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-06, -7.605343853356317e-05, -3.635852044681087e-05, -7.82012939453125e-05, -8.118176460266113, -0.00047016143798828125, -0.006885647773742676, -0.0021608120296150446, -5.745887756347656e-05, 0.0, -2.1458019546116702e-05, 0.0, -0.0008604526519775391, -4.5299530029296875e-06, -0.00029849950806237757, -6.43729799776338e-06, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, 0.0, -4.1961669921875e-05, -1.1920928244535389e-07, -1.0799981355667114, -6.914138793945312e-05, -0.013767242431640625, -5.7220458984375e-06, -0.00019502636860124767, -3.2305197237292305e-05, -7.152553962441743e-07, -3.576278118089249e-07], "choice_history": [55, 124, 221, 63, 103, "Mechanical", "Dragonling", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Mechanical", " ", "Dragonling", "<EOS>", "1", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -10.327117730518438, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Mechanical Dragonling", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "DRAGON", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "MechanicalDragonling", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001773834228515625, -1.71661376953125e-05, -9.775161743164062e-06, -4.172325134277344e-06, -1.740443622111343e-05, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -7.271760750882095e-06, -3.5762786865234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.181693077087402, -0.0001220703125, -3.290176027803682e-05, -0.0006310247117653489, -4.0531158447265625e-06, 0.0, -1.0370560630690306e-05, 0.0, -1.8477434423402883e-05, 0.0, -1.573560803080909e-05, -2.2649765014648438e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -6.1434326171875, -4.029273986816406e-05, -0.00051116943359375, 0.0, -0.0002088546025333926, -1.0251946150674485e-05, -9.536736342852237e-07, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "Mechanical", "Dragonling", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Mechanical", " ", "Dragonling", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -10.355182039309327, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ALL", "_type": "Template6", "hole0": "Mechanical Dragonling", "hole1": 1}, {"hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "MechanicalDragonling", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001773834228515625, -1.71661376953125e-05, -9.775161743164062e-06, -4.172325134277344e-06, -1.740443622111343e-05, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -7.271760750882095e-06, -3.5762786865234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -10.053807258605957, -0.03641796112060547, -0.012840681709349155, -0.014711194671690464, -6.556510470545618e-06, -1.9073486328125e-06, -6.032243254594505e-05, -5.245195097813848e-06, -0.0002504587173461914, -1.1920928244535389e-07, -0.17031478881835938, -2.09808349609375e-05, -8.606776827946305e-05, -5.960462772236497e-07, -2.467595913913101e-05, -1.1920928244535389e-07, -0.06598460674285889, -3.0517578125e-05, -9.5367431640625e-05, -7.62939453125e-06, -0.0001392364501953125, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Mechanical", "Dragonling", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Mechanical", " ", "Dragonling", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n"}, {"score": -10.494306374279631, "model_output": {"_type": "Module", "body": [{"body": [{"hole3": "minion_type", "hole0": "Mechanical Dragonling", "hole2": "ALL", "hole1": 1, "_type": "Template3", "hole4": {"_type": "Attribute", "attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}}}, {"_type": "Template11", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "MechanicalDragonling", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001773834228515625, -1.71661376953125e-05, -9.775161743164062e-06, -4.172325134277344e-06, -1.740443622111343e-05, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -7.271760750882095e-06, -3.5762786865234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.181693077087402, -0.0001220703125, -3.290176027803682e-05, -0.0006310247117653489, -4.0531158447265625e-06, 0.0, -1.0370560630690306e-05, 0.0, -1.8477434423402883e-05, 0.0, -1.573560803080909e-05, -2.2649765014648438e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -6.308548927307129, -9.775161743164062e-06, -0.002643585205078125, -1.9073486328125e-06, -0.0001597399968886748, -2.539125671319198e-05, -1.0728826964623295e-06, -2.622604142743512e-06], "choice_history": [55, 124, 221, 63, 103, "Mechanical", "Dragonling", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Mechanical", " ", "Dragonling", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -10.666634275409528, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Template34", "hole0": 2, "hole1": 1}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "MechanicalDragonling", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001773834228515625, -1.71661376953125e-05, -9.775161743164062e-06, -4.172325134277344e-06, -1.740443622111343e-05, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -7.271760750882095e-06, -3.5762786865234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.015684127807617188, -0.0001621246337890625, -3.647804260253906e-05, -2.741813204920618e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-06, -7.605343853356317e-05, -3.635852044681087e-05, -7.82012939453125e-05, -10.432002067565918, -0.0011730194091796875, -0.19045650959014893, -2.992119152622763e-05, -0.0009088516235351562, -5.960462772236497e-07, -0.025106430053710938, -8.20159912109375e-05, -0.0003557968302629888, -8.4638240878121e-06, -3.3378591979271732e-06, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Mechanical", "Dragonling", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 82, 170, "2", "<EOS>", "1", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        return Minion(2, 1)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -11.534226723369493, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "stealth", "hole3": {"_type": "NameConstant", "value": true}, "_type": "Template10", "hole0": 2, "hole1": 1}, {"_type": "Template11", "hole0": 2, "hole1": 1}], "_type": "ClassDef", "name": "MechanicalDragonling", "bases": [{"id": "MinionCard", "_type": "Name"}]}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001773834228515625, -1.71661376953125e-05, -9.775161743164062e-06, -4.172325134277344e-06, -1.740443622111343e-05, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -7.271760750882095e-06, -3.5762786865234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -11.12227725982666, -0.037766456604003906, -0.21451807022094727, -2.3841855067985307e-07, -9.977298032026738e-05, -2.3841855067985307e-07, -0.15662670135498047, -4.38690185546875e-05, -0.0007801055908203125, -2.86102294921875e-05, -0.0001430511474609375, -1.9073486328125e-05, -0.00104522705078125, -2.86102294921875e-05, -0.00046451229718513787, -1.1920928244535389e-07, -1.8596474546939135e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mechanical", "Dragonling", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 72, 145, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"score": -22.70524787902832, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -22.705242156982422], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 64}
{"beams": [{"score": -0.08380600150029238, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Mind Blast", "hole1": 2}, {"hole2": [{"_type": "Template33", "hole0": 5}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "MindBlast", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.00010561384988250211, -0.0006556744920089841, -7.748602001811378e-06, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -5.364418029785156e-05, -3.075599670410156e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.009532928466796875, -0.0007534027099609375, -0.0003375437227077782, -0.0016542673110961914, -1.8477439880371094e-05, 0.0, -6.19885486230487e-06, -1.1920928244535389e-07, -0.032790303230285645, -1.1920928244535389e-07, -0.00128173828125, -0.0023813247680664062, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.0011081695556640625, -1.9073486328125e-06, -0.0043392181396484375, -1.9073486328125e-06, -0.0018481016159057617, 0.0, -0.00252819387242198, 0.0, -0.0011636014096438885, -3.814697265625e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0002918243408203125, -0.02211129665374756, -2.181529998779297e-05, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mind", "Blast", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "5", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score": -3.885706149892016, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Mind Blast", "hole1": 2}, {"hole2": [{"_type": "Template33", "hole0": 2}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "MindBlast", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.00010561384988250211, -0.0006556744920089841, -7.748602001811378e-06, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -5.364418029785156e-05, -3.075599670410156e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.009532928466796875, -0.0007534027099609375, -0.0003375437227077782, -0.0016542673110961914, -1.8477439880371094e-05, 0.0, -6.19885486230487e-06, -1.1920928244535389e-07, -0.032790303230285645, -1.1920928244535389e-07, -0.00128173828125, -0.0023813247680664062, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.0011081695556640625, -1.9073486328125e-06, -0.0043392181396484375, -1.9073486328125e-06, -0.0018481016159057617, 0.0, -0.00252819387242198, 0.0, -0.0011636014096438885, -3.814697265625e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0002918243408203125, -3.82399320602417, 0.0, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mind", "Blast", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"score": -3.899090200698076, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PALADIN", "_type": "Template6", "hole0": "Mind Blast", "hole1": 2}, {"hole2": [{"_type": "Template33", "hole0": 5}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "MindBlast", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.00010561384988250211, -0.0006556744920089841, -7.748602001811378e-06, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -5.364418029785156e-05, -3.075599670410156e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.009532928466796875, -0.0007534027099609375, -0.0003375437227077782, -0.0016542673110961914, -1.8477439880371094e-05, 0.0, -6.19885486230487e-06, -1.1920928244535389e-07, -3.813351631164551, 0.0, -0.029242515563964844, -0.007561683654785156, -3.814697265625e-06, -3.24249267578125e-05, -5.53131103515625e-05, -3.814697265625e-06, -0.000972747802734375, -3.814697265625e-06, -0.006107330322265625, -1.9073486328125e-06, -0.0013651847839355469, 0.0, -0.0027411687187850475, 0.0, -0.00148010125849396, -5.7220458984375e-06, -7.62939453125e-06, -0.00049591064453125, -0.00023651123046875, -0.022071123123168945, -1.990795135498047e-05, -9.5367431640625e-06, 0.0, -2.6702880859375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mind", "Blast", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "5", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score": -5.642880107893681, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "ROGUE", "_type": "Template6", "hole0": "Mind Blast", "hole1": 2}, {"hole2": [{"_type": "Template33", "hole0": 5}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "MindBlast", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.00010561384988250211, -0.0006556744920089841, -7.748602001811378e-06, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -5.364418029785156e-05, -3.075599670410156e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.009532928466796875, -0.0007534027099609375, -0.0003375437227077782, -0.0016542673110961914, -1.8477439880371094e-05, 0.0, -6.19885486230487e-06, -1.1920928244535389e-07, -5.583344459533691, 0.0, -0.009267807006835938, -0.0021581649780273438, -1.9073486328125e-06, -0.000141143798828125, -9.5367431640625e-06, -1.9073486328125e-06, -0.00164031982421875, 0.0, -0.004230499267578125, -1.9073486328125e-06, -0.0017180442810058594, 0.0, -0.0022571743465960026, 0.0, -0.0013442032504826784, -3.814697265625e-06, -1.1444091796875e-05, -0.0005168914794921875, -0.0002346038818359375, -0.02264261245727539, -1.990795135498047e-05, -9.5367431640625e-06, 0.0, -3.0517578125e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mind", "Blast", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "5", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score": -6.00068030777674, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "HUNTER", "_type": "Template6", "hole0": "Mind Blast", "hole1": 2}, {"hole2": [{"_type": "Template33", "hole0": 5}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "MindBlast", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.00010561384988250211, -0.0006556744920089841, -7.748602001811378e-06, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -5.364418029785156e-05, -3.075599670410156e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.009532928466796875, -0.0007534027099609375, -0.0003375437227077782, -0.0016542673110961914, -1.8477439880371094e-05, 0.0, -6.19885486230487e-06, -1.1920928244535389e-07, -5.926233768463135, 0.0, -0.023944854736328125, -0.0023698806762695312, -1.9073486328125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0012798309326171875, -1.9073486328125e-06, -0.004425048828125, -1.9073486328125e-06, -0.0018745660781860352, 0.0, -0.002796074142679572, 0.0, -0.0011388056445866823, -3.814697265625e-06, -9.5367431640625e-06, -0.00058746337890625, -0.000225067138671875, -0.022390246391296387, -2.181529998779297e-05, -9.5367431640625e-06, 0.0, -2.6702880859375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mind", "Blast", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "5", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score": -6.069065768188793, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Mind Blast", "hole1": 2}, {"hole2": [{"_type": "Template33", "hole0": 5}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "hero", "value": {"id": "player", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "MindBlast", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.00010561384988250211, -0.0006556744920089841, -7.748602001811378e-06, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -5.364418029785156e-05, -3.075599670410156e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.009532928466796875, -0.0007534027099609375, -0.0003375437227077782, -0.0016542673110961914, -1.8477439880371094e-05, 0.0, -6.19885486230487e-06, -1.1920928244535389e-07, -0.032790303230285645, -1.1920928244535389e-07, -0.00128173828125, -0.0023813247680664062, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.0011081695556640625, -1.9073486328125e-06, -5.733475685119629, -2.1457672119140625e-06, -0.02096831612288952, -4.768370445162873e-07, -0.23357927799224854, -1.9073486328125e-06, -0.003212451934814453, -5.7220458984375e-06, -9.5367431640625e-06, -0.000545501708984375, -0.0008983612060546875, -0.02533590793609619, -2.4437902538920753e-05, -9.5367431640625e-06, 0.0, -2.288818359375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mind", "Blast", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "5", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score": -6.8393022679326805, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Mind<UNK>", "hole1": 2}, {"hole2": [{"_type": "Template33", "hole0": 5}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "MindBlast", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.00010561384988250211, -0.0006556744920089841, -7.748602001811378e-06, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -5.364418029785156e-05, -3.075599670410156e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.009532928466796875, -0.0007534027099609375, -0.0003375437227077782, -6.515448093414307, -0.11878478527069092, -3.933897005481413e-06, -8.344646857949556e-07, -0.15205490589141846, -8.344646857949556e-07, -0.001132965087890625, -0.006119728088378906, -1.9073486328125e-06, -9.1552734375e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0010395050048828125, -1.9073486328125e-06, -0.004734039306640625, -1.9073486328125e-06, -0.001831650733947754, 0.0, -0.002153641078621149, 0.0, -0.0011527534807100892, -1.9073486328125e-06, -9.5367431640625e-06, -0.0004673004150390625, -0.000308990478515625, -0.022265911102294922, -2.181529998779297e-05, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mind", "Blast", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Mind", "<UNK>", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "5", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind<UNK>', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score": -6.921391328715785, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Mind Blast", "hole1": 2}, {"hole2": [{"_type": "Template33", "hole0": 5}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "5", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "MindBlast", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.00010561384988250211, -0.0006556744920089841, -7.748602001811378e-06, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -5.364418029785156e-05, -3.075599670410156e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.009532928466796875, -0.0007534027099609375, -0.0003375437227077782, -0.0016542673110961914, -1.8477439880371094e-05, 0.0, -6.19885486230487e-06, -1.1920928244535389e-07, -0.032790303230285645, -1.1920928244535389e-07, -0.00128173828125, -0.0023813247680664062, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.0011081695556640625, -1.9073486328125e-06, -0.0043392181396484375, -1.9073486328125e-06, -0.0018481016159057617, 0.0, -6.837587833404541, 0.0, -0.0056912899017333984, 0.0, -1.71661376953125e-05, -0.0010356903076171875, -0.000186920166015625, -0.019640445709228516, -2.3365020751953125e-05, -1.1444091796875e-05, 0.0, -3.4332275390625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mind", "Blast", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "5", "<EOS>", "damage", "<EOS>", 209, 45, 169, "5", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.5.damage(player.effective_spell_damage(5), self)\n"}, {"score": -6.931203487559507, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "MindBlast", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.00010561384988250211, -0.0006556744920089841, -7.748602001811378e-06, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -5.364418029785156e-05, -3.075599670410156e-05, -1.9073486328125e-06, -2.86102294921875e-05, -5.77916145324707, -3.814697265625e-06, -5.9604644775390625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.4901134818501305e-05, -3.933906555175781e-06, -4.76837158203125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00241851806640625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001239776611328125, -4.1961669921875e-05, -1.9073486328125e-05, -2.264974000354414e-06, -9.620189666748047e-05, -0.00015115525457076728, 0.0, -0.003143310546875, 0.0, -0.00015889335190877318, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.19265270233154297, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -4.9591064453125e-05, -5.9604562920867465e-06, -0.023797988891601562, 0.0, -0.00075531005859375, -3.62396240234375e-05, 0.0, -0.0022602081298828125, 0.0, -9.918212890625e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -7.05718994140625e-05, -5.7220458984375e-06, -0.0005245208740234375, -2.6702880859375e-05, -0.40233850479125977, -7.62939453125e-06, -0.2009754180908203, -0.000759124755859375, -1.9073486328125e-06, 0.0, -0.0013828277587890625, 0.0, -0.0032024383544921875, 0.0, -5.7220458984375e-06, 0.0, -0.2237762212753296, 0.0, -0.0001277923583984375, -0.0859375, 0.0, -0.0058841705322265625, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Mind", "Blast", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mind", " ", "Blast", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -7.04437708066596, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Mind Blast", "hole1": 2}, {"hole2": [{"_type": "Template33", "hole0": 5}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "MindBlast", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.00010561384988250211, -0.0006556744920089841, -7.748602001811378e-06, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -5.364418029785156e-05, -3.075599670410156e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.009532928466796875, -0.0007534027099609375, -0.0003375437227077782, -0.0016542673110961914, -1.8477439880371094e-05, 0.0, -6.19885486230487e-06, -1.1920928244535389e-07, -0.032790303230285645, -1.1920928244535389e-07, -0.00128173828125, -0.0023813247680664062, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-05, -3.814697265625e-06, -6.85114860534668, -0.00208282470703125, -4.57763671875e-05, -1.9073486328125e-06, -0.00592041015625, -7.62939453125e-06, -0.001909494400024414, 0.0, -0.008322151377797127, -1.1920928244535389e-07, -0.10225093364715576, 0.0, -0.0012577768648043275, -3.814697265625e-06, -9.5367431640625e-06, -0.000457763671875, -0.000453948974609375, -0.02056896686553955, -3.1828880310058594e-05, -9.5367431640625e-06, 0.0, -3.0517578125e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mind", "Blast", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "5", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.hero.damage(player.effective_spell_damage(5),\n            self)\n"}, {"score": -7.160354949802233, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "WARLOCK", "_type": "Template6", "hole0": "Mind Blast", "hole1": 2}, {"hole2": [{"_type": "Template33", "hole0": 5}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"id": "game", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "MindBlast", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.00010561384988250211, -0.0006556744920089841, -7.748602001811378e-06, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -5.364418029785156e-05, -3.075599670410156e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.009532928466796875, -0.0007534027099609375, -0.0003375437227077782, -0.0016542673110961914, -1.8477439880371094e-05, 0.0, -6.19885486230487e-06, -1.1920928244535389e-07, -7.091248512268066, 0.0, -0.018064498901367188, -0.0029993057250976562, -3.814697265625e-06, -3.0517578125e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.0015201568603515625, -1.9073486328125e-06, -0.0039081573486328125, -1.9073486328125e-06, -0.0017905235290527344, 0.0, -0.0027175124268978834, 0.0, -0.0012627836549654603, -3.814697265625e-06, -9.5367431640625e-06, -0.0005931854248046875, -0.0002307891845703125, -0.02257251739501953, -1.7881393432617188e-05, -9.5367431640625e-06, 0.0, -2.6702880859375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mind", "Blast", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "5", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"score": -7.394031485461639, "model_output": {"_type": "Module", "body": [{"body": [{"hole2": "PRIEST", "_type": "Template6", "hole0": "Mind Blast", "hole1": 2}, {"hole2": [{"_type": "Template33", "hole0": 5}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "card", "value": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}}, "hole1": "damage"}], "_type": "ClassDef", "name": "MindBlast", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.00010561384988250211, -0.0006556744920089841, -7.748602001811378e-06, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -5.364418029785156e-05, -3.075599670410156e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.009532928466796875, -0.0007534027099609375, -0.0003375437227077782, -0.0016542673110961914, -1.8477439880371094e-05, 0.0, -6.19885486230487e-06, -1.1920928244535389e-07, -0.032790303230285645, -1.1920928244535389e-07, -0.00128173828125, -0.0023813247680664062, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.0011081695556640625, -1.9073486328125e-06, -6.949118614196777, 0.0, -0.000148773193359375, -3.576278118089249e-07, -0.35539472103118896, 0.0, -0.013492226600646973, -1.1444091796875e-05, -3.814697265625e-06, -0.0010814666748046875, -0.0003757476806640625, -0.023365378379821777, -1.9550323486328125e-05, -1.9073486328125e-05, 0.0, -2.6702880859375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mind", "Blast", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "damage", "<EOS>", 209, 45, 169, "5", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.card.damage(player.effective_spell_damage(5), self)\n"}, {"score": -7.652723196192937, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "die"}], "_type": "ClassDef", "name": "MindBlast", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.00010561384988250211, -0.0006556744920089841, -7.748602001811378e-06, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -5.364418029785156e-05, -3.075599670410156e-05, -1.9073486328125e-06, -2.86102294921875e-05, -5.77916145324707, -3.814697265625e-06, -5.9604644775390625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.4901134818501305e-05, -3.933906555175781e-06, -4.76837158203125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00241851806640625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001239776611328125, -4.1961669921875e-05, -1.9073486328125e-05, -2.264974000354414e-06, -9.620189666748047e-05, -0.00015115525457076728, 0.0, -0.003143310546875, 0.0, -0.00015889335190877318, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.19265270233154297, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -4.9591064453125e-05, -5.9604562920867465e-06, -0.023797988891601562, 0.0, -0.00075531005859375, -3.62396240234375e-05, 0.0, -0.0022602081298828125, 0.0, -9.918212890625e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -7.05718994140625e-05, -5.7220458984375e-06, -0.0005245208740234375, -2.6702880859375e-05, -1.238236904144287, -2.86102294921875e-05, -0.04894733428955078, -0.00159454345703125, -3.814697265625e-06, 0.0, -0.029378890991210938, 0.0, -0.00970458984375, 0.0, -5.7220458984375e-06, 0.0, -0.2218940258026123, 0.0, -5.14984130859375e-05, -0.0901947021484375, 0.0, -0.005878448486328125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mind", "Blast", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mind", " ", "Blast", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"score": -8.367814424678045, "model_output": {"_type": "Module", "body": [{"body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "__init__", "value": {"_type": "Template38", "hole0": "super"}}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}}, {"_type": "Attribute", "attr": "FREE", "value": {"id": "CARD_RARITY", "_type": "Name"}}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"hole2": [{"_type": "Template33", "hole0": 5}, {"id": "self", "_type": "Name"}], "_type": "Template1", "hole0": {"_type": "Attribute", "attr": "target", "value": {"id": "self", "_type": "Name"}}, "hole1": "damage"}], "_type": "ClassDef", "name": "MindBlast", "bases": [{"id": "SpellCard", "_type": "Name"}]}]}, "score_history": [0.0, -2.47955322265625e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.00010561384988250211, -0.0006556744920089841, -7.748602001811378e-06, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -5.364418029785156e-05, -3.075599670410156e-05, -1.9073486328125e-06, -2.86102294921875e-05, -5.77916145324707, -3.814697265625e-06, -5.9604644775390625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.4901134818501305e-05, -3.933906555175781e-06, -4.76837158203125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00241851806640625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -3.933906555175781e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001239776611328125, -4.1961669921875e-05, -1.9073486328125e-05, -2.264974000354414e-06, -9.620189666748047e-05, -0.00015115525457076728, 0.0, -0.003143310546875, 0.0, -0.00015889335190877318, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.19265270233154297, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.52587890625e-05, -4.9591064453125e-05, -5.9604562920867465e-06, -0.023797988891601562, 0.0, -0.00075531005859375, -3.62396240234375e-05, 0.0, -0.0022602081298828125, 0.0, -9.918212890625e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -7.05718994140625e-05, -5.7220458984375e-06, -0.0005245208740234375, -2.6702880859375e-05, -0.40233850479125977, -7.62939453125e-06, -0.2009754180908203, -0.000759124755859375, -1.9073486328125e-06, 0.0, -0.0013828277587890625, 0.0, -0.0032024383544921875, 0.0, -5.7220458984375e-06, 0.0, -1.7273420095443726, -7.62939453125e-06, -5.7220458984375e-06, -0.0016536712646484375, -0.0001430511474609375, -0.02313089370727539, -1.7523765563964844e-05, -7.62939453125e-06, 0.0, -2.86102294921875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mind", "Blast", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mind", " ", "Blast", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "5", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n"}, {"score": -22.298946380615234, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -2.47955322265625e-05, -22.298921585083008], "choice_history": [55, 124, 220], "inferred_code": ""}], "index": 65}
