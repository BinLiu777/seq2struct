{"beams": [{"score_history": [0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001438752660760656, -0.07383837550878525, -0.0006826304015703499, -0.00010895135346800089, -4.9591064453125e-05, -8.96453857421875e-05, 0.0, -7.987004210008308e-06, -5.4001786338631064e-05, 0.0, -1.1444091796875e-05, -0.008281707763671875, -0.0001583099365234375, -9.333751950180158e-05, -8.690356480656192e-05, -0.0004978179931640625, -9.72747802734375e-05, -8.046627044677734e-05, 0.0, -0.0003464224864728749, 0.0, -6.687641143798828e-05, 0.0, -0.0010524988174438477, -1.4305104514278355e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.2067298889160156e-05, -1.4305104514278355e-06, -9.5367431640625e-06, -0.0009021759033203125, -1.9073486328125e-06, -0.0032705296762287617, -0.10490504652261734, -0.6785573959350586, 0.0, -0.7612853050231934, -0.00012552738189697266, -1.1920928244535389e-07, -0.3066368103027344, -1.9073486328125e-06, -1.1920923270736239e-07, -1.1920928244535389e-07, -4.768367489305092e-06, 0.0], "choice_history": [55, 124, 221, 63, 103, "Acidic", "Swamp", "Ooze", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Destroy", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -1.941530090273929, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "AcidicSwampOoze", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template38", "hole0": "Destroy"}, {"_type": "Template38", "hole0": "PlayerSelector"}]}, "hole3": "battlecry", "hole2": "ALL", "hole1": 2, "hole0": "Acidic Swamp Ooze"}, {"_type": "Template11", "hole1": 2, "hole0": 3}]}]}}], "index": 0}
{"beams": [{"score_history": [-1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -8.940656698541716e-06, -4.6491513785440475e-06, -8.344646857949556e-07, -4.76837158203125e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.000156998576130718, -1.9669481844175607e-05, 0.0, -2.09808349609375e-05, -0.000194549560546875, 0.0, -1.7762085917638615e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00045670827967114747, -2.0265579223632812e-06, -8.0108642578125e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.0069122314453125, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -9.298297300119884e-06, -1.3709068298339844e-05, -3.933906555175781e-06, 0.0, -0.007822036743164062, -1.52587890625e-05, -1.33514404296875e-05, -4.410734163684538e-06, -0.00013196468353271484, -4.017311584902927e-05, -9.5367431640625e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00010656761878635734, -2.1457672119140625e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.05420398712158203, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -5.1856040954589844e-05, -9.298280929215252e-06, -0.0114593505859375, 0.0, -0.000728607177734375, -7.62939453125e-06, 0.0, -0.0014367103576660156, -1.1920928244535389e-07, -0.0001811981201171875, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -9.34600830078125e-05, -1.71661376953125e-05, -1.919269561767578e-05, -4.76837158203125e-05, -0.0007959604263305664, -9.393692016601562e-05, -0.00067138671875, -2.288818359375e-05, -9.763240814208984e-05, 0.0, -3.4332275390625e-05, -4.76837158203125e-05, 0.0, -4.768367489305092e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -8.70227722771233e-06, -8.463837730232626e-06, -0.22623825073242188, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, 0.0, -1.3947486877441406e-05, 0.0, -0.00011265277862548828, 0.0, -1.9073486328125e-05, -0.0001087188720703125, 0.0, -3.24249267578125e-05, -1.1920928244535389e-07, -2.09808349609375e-05, 0.0, -4.565715789794922e-05, -4.136537609156221e-05, -0.005889892578125, -3.24249267578125e-05, -0.0023937225341796875, -0.002323150634765625, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, 0.0, -8.022785186767578e-05, -2.861018856492592e-06, -5.245207830739673e-06, -2.3841855067985307e-07, -0.03955721855163574, -4.4226457248441875e-05, -1.33514404296875e-05, -0.000629425048828125, -0.004390716552734375, -8.58306884765625e-05, -5.7220458984375e-06, -0.002429962158203125, 0.0, -0.00014400482177734375, -2.3841855067985307e-07, -0.009006500244140625, -1.1920928244535389e-07, -0.00795745849609375, -0.0017042160034179688, -0.0001544952392578125, -9.34600830078125e-05, -3.814697265625e-06, -0.0012645721435546875, -1.9073486328125e-06, -0.007442474365234375, 0.0, -0.0009337663650512695, -7.152555099310121e-07, -1.0848044439626392e-05, -3.933906555175781e-06, -0.019434690475463867, -2.741813204920618e-06, -0.0017099380493164062, -3.814697265625e-06, -5.53131103515625e-05, -1.1920928244535389e-07, -0.009897232055664062, -5.7220458984375e-06, -9.1552734375e-05, -1.9073486328125e-06, -0.000278472900390625, -0.033652305603027344, 0.0, -0.0002384185791015625, 0.0, -1.9073486328125e-05, -1.1920928244535389e-07, -0.0001316070556640625, -7.987022399902344e-06, -0.02229595184326172, -2.3841855067985307e-07, -0.00041961669921875, -0.00095367431640625, -6.687641143798828e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Ancestral", "Healing", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ancestral", " ", "Healing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n", "score": -0.4890246499109949, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "AncestralHealing", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "heal"}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_max_health"}}]}, {"_type": "Name", "id": "self"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "taunt"}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 1}
{"beams": [{"score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.00019560330838430673, -0.0019712080247700214, -0.0009434557869099081, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00010156629286939278, -6.318092346191406e-06, -1.71661376953125e-05, -0.003154754638671875, -0.002330780029296875, -0.00264739990234375, -1.1444026313256472e-05, -3.814697265625e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.6927573597058654e-05, -3.8146954466355965e-06, -0.020366191864013672, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.0007891654968261719, -1.1920928244535389e-07, -6.4849853515625e-05, -0.0001049041748046875, 0.0, -2.861022494471399e-06, 0.0, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, 0.0, -9.655952453613281e-06, -1.0371208190917969e-05, -0.20910358428955078, -0.0004291534423828125, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -9.417505680175964e-06, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -0.0001544952392578125, 0.0, 0.0, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -7.748603820800781e-06, -4.5656361180590466e-05, -0.016269683837890625, -1.33514404296875e-05, -0.0001068115234375, -5.91278076171875e-05, 0.0, -0.0017075524665415287, -1.9788545614574105e-05, -0.06723976135253906, -0.0043354034423828125, -0.015641212463378906, -0.000537872314453125, -0.000896453857421875, -0.0001430511474609375, -0.0004444122314453125, -0.0001659393310546875, -0.0002536773681640625, -0.002532958984375, -0.000537872314453125, -0.012041091918945312, -0.0002651214599609375, -0.0409698486328125, 0.0, -0.0005514621734619141, -3.814697265625e-05, -0.0033559799194335938, -0.000102996826171875, -0.0022317166440188885, -6.914138793945312e-05, -0.014428973197937012, -0.00011634825932560489, -1.055777907371521, -0.0006862878799438477, -0.0002536773681640625, -0.000156402587890625, -4.57763671875e-05, -0.0002994537353515625, -3.814697265625e-05, -0.000186920166015625, -0.00153350830078125, -4.9591064453125e-05, -0.03755760192871094, -4.00543212890625e-05, -0.011991500854492188, 0.0, -0.0004482269287109375, -0.000102996826171875, -0.0032262802124023438, -3.814697265625e-05, -0.0028649510350078344, -0.0003421306610107422, -0.012038946151733398, -0.0002572536177467555, -0.8101654648780823, -0.002293229103088379, -0.0002422332763671875, -0.00011444091796875, -7.2479248046875e-05, -0.0003833770751953125, -3.24249267578125e-05, -0.0002574920654296875, -0.00130462646484375, -5.340576171875e-05, -0.022510528564453125, -3.24249267578125e-05, -0.026208877563476562, 0.0, -0.0003814697265625, -8.96453857421875e-05, -0.0044116973876953125, -3.814697265625e-05, -0.002990598091855645, -0.0003192424774169922, -0.012052297592163086, -0.0002324581000721082, -0.8050493001937866, -0.002156972885131836, -0.001239776611328125, -9.34600830078125e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.016298294067382812, -3.099436753473128e-06, -0.0003795623779296875, -0.0001087188720703125, -0.00069427490234375, 0.0, -0.0045146942138671875, 0.0, -0.0059566497802734375, -8.702239938429557e-06, -0.009640691801905632, 0.0, -0.08507919311523438, -0.0009059906005859375, 0.0, -0.009019136428833008, -0.00021455410751514137, -0.0015106201171875, -3.4332275390625e-05, -2.47955322265625e-05, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -0.0001735687255859375, 0.0, -0.011630058288574219, -2.3841855067985307e-07, -0.007167816162109375, 0.0, -0.000186920166015625, -0.00618743896484375, -1.9073486328125e-06, -0.0048465728759765625, -3.933898824470816e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -0.05477714538574219, -2.0265579223632812e-06, -0.0009750127792358398, -3.814697265625e-06, -0.000461578369140625, -0.1797027587890625, -0.029013633728027344, 0.0, -0.0008410215377807617, -4.100737351109274e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.004055023193359375, 0.0, -0.004444122314453125, -2.2649765014648438e-06, -0.0005487203598022461, -1.9073486328125e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.0003910064697265625, -1.1920928244535389e-07, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, 0.0, -0.012493133544921875, -3.576278118089249e-07, -1.9073486328125e-06, -0.00015306472778320312, -2.6225792680634186e-05, -0.0012054443359375, -0.0011425018310546875, -0.0008697509765625, -0.000743865966796875, -0.0001087188720703125, -0.00125885009765625, -4.1961669921875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -6.747218139935285e-05, -1.1920922133867862e-06, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0011806488037109375, 0.0, -0.0001068115234375, -1.3470649719238281e-05, -0.00079512590309605, -1.9073486328125e-06, -0.000164031982421875, -0.00041961669921875, -9.5367431640625e-06, -0.000354766845703125, -3.814697265625e-06, -0.0017063617706298828, -9.5367431640625e-06], "choice_history": [55, 124, 221, 63, 103, "Animal", "Companion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 17, 120, 210, 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 32, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 60, 93, 208, 37, 125, "card", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk(), hearthbreaker.\n            cards.minions.hunter.Leokk(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -3.712131735732207, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "AnimalCompanion", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template4", "hole2": "HUNTER", "hole1": 3, "hole0": "Animal Companion"}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "cards"}, "attr": "minions"}, "attr": "hunter"}, "attr": "Leokk"}}, {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "cards"}, "attr": "minions"}, "attr": "hunter"}, "attr": "Leokk"}}, {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "cards"}, "attr": "minions"}, "attr": "hunter"}, "attr": "Leokk"}}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "summon"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"_type": "Template21", "hole2": [{"_type": "Num", "n": 7}], "hole1": [{"_type": "Lt"}], "hole0": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}]}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 2}
{"beams": [{"score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -5.7220458984375e-06, -2.3841830625315197e-06, -2.50339189733495e-06, -4.732529851025902e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.254413604736328e-05, -3.1948089599609375e-05, -5.7220458984375e-06, -0.00017547607421875, -0.01834392547607422, -0.00045013427734375, -4.470248313737102e-05, -4.172325134277344e-05, -7.867813110351562e-06, 0.0, -5.125993993715383e-06, -1.6689286894688848e-06, -0.06945490837097168, -4.768370445162873e-07, -0.0029697418212890625, -3.814697265625e-06, -5.3763389587402344e-05, 0.0, -6.103515625e-05, -3.62396240234375e-05, 0.0, -2.300739288330078e-05, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-06, -0.000164031982421875, -3.814697265625e-06, -0.04518699645996094, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.52587890625e-05, 0.0, -3.814697265625e-05, 0.0, -4.410743713378906e-06, 0.0, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -0.0001010894775390625, -8.96453857421875e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -6.29425048828125e-05, -6.520748138427734e-05, -0.0002002716064453125, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.0002846717834472656, -1.8238888515043072e-05, -0.0002651214599609375, -0.000274658203125, -0.0002956390380859375, 0.0, -3.814697265625e-05, 0.0, -0.0001277923583984375, -5.960462772236497e-07, -0.00019848346710205078, 0.0, -0.0005435943603515625, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.000286102294921875, -1.9073486328125e-06, -0.00077056884765625, -1.71661376953125e-05, -0.0011883974075317383, 0.0, -9.119509923039004e-05, 0.0, -0.0002460479736328125, -0.0001239776611328125, -2.288818359375e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -0.0014362335205078125, -3.814697265625e-06, -0.004463315010070801, -4.887569048150908e-06, -0.0004311800003051758, 0.0, -1.9073486328125e-06, -0.0016078948974609375, -0.000385284423828125, -0.003579838899895549, -7.534006726928055e-05, -3.814697265625e-05, -0.0001316070556640625, -7.43865966796875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Explosion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -0.15521083439915628, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ArcaneExplosion", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template6", "hole2": "MAGE", "hole1": 2, "hole0": "Arcane Explosion"}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "damage"}, "args": [{"_type": "Template33", "hole0": 1}, {"_type": "Name", "id": "self"}]}}], "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "target": {"_type": "Name", "id": "minion"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 3}
{"beams": [{"score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -7.784063927829266e-05, -4.136505594942719e-05, -0.0006580743356607854, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.0010771751403808594, -5.7220440794480965e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.024137496948242188, -0.000255584716796875, -0.001912789884954691, -0.0001342296600341797, -2.1219253540039062e-05, -1.9073486328125e-06, -5.364409389585489e-06, -7.152555099310121e-07, -0.20325279235839844, -2.8132995794294402e-05, -0.0009784698486328125, -1.9073486328125e-06, -1.4901160284352954e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.447862349683419e-05, -1.1920928244535389e-07, -2.09808349609375e-05, -1.3470649719238281e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.0001895427703857422, -1.7881340681924485e-05, -0.00394439697265625, -0.0009613037109375, 0.0, 0.0, -7.62939453125e-06, -0.0002841949462890625, 0.0, -0.0006103515625, 0.0, -4.2318933992646635e-05, -2.3841855067985307e-07, -2.491474151611328e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.1920928244535389e-07, -5.14984130859375e-05, -3.814697265625e-06, -1.0132789611816406e-05, -9.369479812448844e-05, -0.0005512237548828125, -9.5367431640625e-06, -0.0002193450927734375, 0.0, -0.012544512748718262, -4.160325261182152e-05, -8.392333984375e-05, -0.0009899139404296875, -0.000179290771484375, -1.9073486328125e-06, -0.0005967617034912109, -5.006777428206988e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00041698600398376584, -1.9073486328125e-06, -0.0010623931884765625, -1.33514404296875e-05, -0.000920221209526062, -2.2649765014648438e-06, -0.0012989044189453125, -0.0002727508544921875, -1.1444091796875e-05, -2.288818359375e-05, -0.005657196044921875, -2.86102294921875e-05, -1.9073486328125e-06, -0.000301361083984375, 0.0, -0.0009183883666992188, -1.2636104656849056e-05, -0.006751039065420628, -2.503394853192731e-06], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Intellect", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "c", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "score": -0.2721697120531985, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ArcaneIntellect", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template6", "hole2": "MAGE", "hole1": 3, "hole0": "Arcane Intellect"}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "draw"}}}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "c"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 4}
{"beams": [{"score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -3.45700973412022e-05, -8.34461570775602e-06, -1.609317769180052e-05, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00016415119171142578, -2.0265579223632812e-06, -5.7220458984375e-05, -5.7220458984375e-05, -0.1013193130493164, -0.0013980865478515625, -0.00019131260341964662, -6.568430399056524e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -4.768370445162873e-07, -0.09150004386901855, -3.516612196108326e-05, -0.004311561584472656, 0.0, -6.437301635742188e-05, 0.0, -3.0517578125e-05, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -3.4332275390625e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -5.7220458984375e-06, -0.0032558441162109375, -2.47955322265625e-05, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, -3.814697265625e-06, -0.000118255615234375, 0.0, -7.748602001811378e-06, 0.0, -0.00018310546875, 0.0, -2.09808349609375e-05, -7.05718994140625e-05, -2.6702880859375e-05, -0.000125885009765625, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.2755393072438892e-05, -0.000400543212890625, -3.814697265625e-06, -7.43865966796875e-05, 0.0, -0.05732762813568115, -1.1920928244535389e-07, -3.814697265625e-06, -3.0517578125e-05, -0.0004177093505859375, 0.0, -0.0004696846008300781, -5.960462772236497e-07, -0.001018524169921875, -0.00016021728515625, -7.62939453125e-06, -0.00019800575682893395, -0.00010120868682861328, -0.017106056213378906, -4.38690185546875e-05, -0.12156405299901962, -4.696760879596695e-05, -0.008162498474121094, -0.0005741119384765625, -0.00032806396484375, -3.4332275390625e-05, -0.00044727325439453125, -3.814697265625e-06, -0.0025397539138793945, -1.1444091796875e-05, -4.38690185546875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0016632080078125, 0.0, -0.0014810562133789062, -4.768370445162873e-07, -0.0014944076538085938, -1.1920928244535389e-07, -0.000156402587890625, -0.000194549560546875, 0.0, -3.814697265625e-05, 0.0, -0.000522613525390625, 0.0, -0.000640869140625, -1.1920928244535389e-07, -0.0008422136306762695, 0.0, -0.004295287188142538, 0.0, -0.0035762786865234375, -0.0013551712036132812, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00051116943359375, 0.0, -0.05034446716308594, 0.0, -0.01186370849609375, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.000728607177734375, -2.47955322265625e-05, -0.000537872314453125, -1.9073486328125e-06, -0.0009555816650390625, -2.1457672119140625e-06, -0.009966135025024414, 0.0, -0.002503783907741308, -5.7220458984375e-06, -0.0123443603515625, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, 0.0, -0.0028285980224609375, -1.5497195136049413e-06, -0.000347137451171875, -1.33514404296875e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.0001678466796875, 0.0, -0.000690460205078125, -4.768370445162873e-07, -0.00442051887512207, 0.0, -0.0050640106201171875, -0.0004730224609375, -1.9073486328125e-06, -0.0019588470458984375, 0.0, -5.340576171875e-05, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00016021728515625, -1.1920928244535389e-07, -0.009610176086425781, 0.0, -3.814697265625e-06, -0.000186920166015625, -0.000118255615234375, -0.01503168884664774, -3.814697265625e-06, -0.008619308471679688, -1.1444091796875e-05, -0.0034093856811523438, 0.0], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Missiles", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 45, 169, "3", "<EOS>", 224, 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "append", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 60, 93, 208, 37, 125, "target", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "targets", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "score": -0.5742331380470489, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ArcaneMissiles", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template6", "hole2": "MAGE", "hole1": 1, "hole0": "Arcane Missiles"}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "targets"}, "attr": "append"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "targets"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "damage"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}]}}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Template33", "hole0": 3}]}, "target": {"_type": "Name", "id": "i"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 5}
{"beams": [{"score_history": [-6.67572021484375e-05, -1.1444091796875e-05, -3.814697265625e-06, -5.53131103515625e-05, -3.814697265625e-06, -1.2636104656849056e-05, -8.583032467868179e-06, -2.52720492426306e-05, -5.53131103515625e-05, -0.0002460479736328125, -7.05718994140625e-05, -7.843970524845645e-05, -3.600119089242071e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.001026153564453125, 0.0, -4.196165536995977e-05, -1.1920928244535389e-07, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001491284347139299, -5.9604644775390625e-06, -9.5367431640625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0002574920654296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.6689286894688848e-06, -1.9073486328125e-06, -6.687641143798828e-05, 0.0, -0.000629425048828125, -2.86102294921875e-05, -0.0002040863037109375, -9.894321920000948e-06, -0.0001087188720703125, -0.0004375240532681346, -0.0013275146484375, -0.000255584716796875, -7.62939453125e-06, -5.3642688726540655e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.00029480457305908203, -2.0265558760002023e-06, -0.8107777833938599, 0.0, -7.2479248046875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -7.05718994140625e-05, -0.00020599365234375, -1.1920922133867862e-06, -0.002498626708984375, 0.0, -0.0013027191162109375, -1.52587890625e-05, -1.1444091796875e-05, -0.00017189979553222656, 0.0, -0.0003032684326171875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0001068115234375, -3.814697265625e-06, -0.006786346435546875, -1.9073486328125e-05, -0.0001735687255859375, -3.24249267578125e-05, -7.62939453125e-06, -1.1444091796875e-05, -4.00543212890625e-05, -2.86102294921875e-05, -5.340576171875e-05, -3.576278118089249e-07, -7.069110870361328e-05, -2.3841855067985307e-07, -0.0002676248550415039, -7.62939453125e-06, -1.9073486328125e-06, -0.0002765655517578125, -2.86102294921875e-05, -0.04708181694149971, -5.006777428206988e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002593994140625, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcane", "Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Arcane", " ", "Shot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -0.8766409275807661, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ArcaneShot", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole2": [{"_type": "Template33", "hole0": 2}, {"_type": "Name", "id": "self"}], "hole1": "damage", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}]}}], "index": 6}
{"beams": [{"score_history": [-3.0517578125e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0018130784155800939, -0.00010930894495686516, -2.6226003683404997e-05, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0004121065139770508, -0.0002884864807128906, -2.09808349609375e-05, -7.62939453125e-06, -0.03546142578125, -4.9591064453125e-05, -7.319182623177767e-05, -2.384185791015625e-05, -1.9073486328125e-06, -0.000732421875, -5.149726348463446e-05, -7.271740287251305e-06, -0.071114182472229, -0.002246856689453125, -0.0016384124755859375, -1.9073486328125e-06, -0.0006469488143920898, 0.0, 0.0, -0.0001430511474609375, -2.86102294921875e-05, -6.282326648943126e-05, -5.960462772236497e-07, -1.9073486328125e-06, -1.3470649719238281e-05, -7.629365427419543e-06, -0.005809783935546875, -0.0001316070556640625, -0.0001659393310546875, -9.34600830078125e-05, -0.0004405975341796875, -3.814697265625e-05, 0.0, -0.00012838741531595588, -0.0003625154204200953, -1.33514404296875e-05, -7.05718994140625e-05, -1.9073486328125e-06, -7.343021570704877e-05, -1.728529969113879e-05, -3.814697265625e-05, 0.0, -0.004307534079998732, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Arcanite", "Reaper", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "5", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -0.12687841701954738, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ArcaniteReaper", "bases": [{"_type": "Name", "id": "WeaponCard"}], "body": [{"_type": "Template4", "hole2": "WARRIOR", "hole1": 5, "hole0": "Arcanite Reaper"}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Weapon"}, "args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}]}]}}], "index": 7}
{"beams": [{"score_history": [-4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-05, -2.0265558760002023e-06, -0.00014710056711919606, -7.62939453125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.428096771240234e-05, -0.0001114606493501924, -9.5367431640625e-06, -0.0001010894775390625, -0.004146575927734375, -7.62939453125e-06, -5.1377883210079744e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -6.97356226737611e-05, -1.919269561767578e-05, -0.00038909912109375, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006046295166015625, -4.57763671875e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -2.300717096659355e-05, 0.0, -8.7738037109375e-05, 0.0, -0.000152587890625, -0.0019073486328125, -2.47955322265625e-05, -3.576278118089249e-07, -2.1457672119140625e-06, -2.6702880859375e-05, -0.0001201629638671875, -2.9682672902708873e-05, -4.410743713378906e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.000110626220703125, -0.12218272686004639, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00026702880859375, -7.987019671418238e-06, -0.0017322301864624023, -1.9073486328125e-06, -0.02095317840576172, -0.0001678466796875, 0.0, -0.0005208253860473633, 0.0, -5.7220458984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.000152587890625, -1.9073486328125e-05, -0.0002346038818359375, -0.0005817413330078125, -0.007639050483703613, -1.71661376953125e-05, -0.0002307891845703125, -0.0008983612060546875, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002689361572265625, -1.1920928244535389e-07, -2.1457672119140625e-06, 0.0, -0.0011148452758789062, 0.0, -0.000827789306640625, -0.0001354217529296875, 0.0, -0.0001201629638671875, 0.0], "choice_history": [55, 124, 221, 63, 103, "Assassinate", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Assassinate", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -0.16672944269401313, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Assassinate", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_enemy_minion_spell_target"}}], "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}]}}], "index": 8}
{"beams": [{"score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -0.00019178935326635838, -0.0004836319130845368, -8.58306884765625e-05, -8.7738037109375e-05, -1.1444091796875e-05, -2.5510787963867188e-05, -0.0007424351642839611, -1.9073486328125e-06, -3.814697265625e-05, -0.0039424896240234375, -7.62939453125e-06, -2.0503857740550302e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.0980818590032868e-05, -6.103515625e-05, -8.96453857421875e-05, -1.52587890625e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.000213623046875, -7.43865966796875e-05, -1.52587890625e-05, -7.62939453125e-06, -3.814697265625e-06, -2.503394853192731e-06, -3.814697265625e-06, -6.496906280517578e-05, 0.0, -0.0004863739013671875, -8.96453857421875e-05, -5.91278076171875e-05, -4.0531076592742465e-06, -4.768370445162873e-07, -4.76837158203125e-05, -4.76837158203125e-05, -0.00010144187399419025, -3.933906555175781e-06, -3.24249267578125e-05, -2.09808349609375e-05, -1.1444091796875e-05, -0.000164031982421875, -0.0006333589553833008, -3.0517578125e-05, -0.009534716606140137, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-05, -4.29153169534402e-06, -0.007282376289367676, 0.0, -0.019331932067871094, -0.000102996826171875, -5.7220458984375e-06, -0.0003434419631958008, 0.0, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.14984130859375e-05, -4.38690185546875e-05, -4.9591064453125e-05, -7.62939453125e-06, -0.0035543441772460938, -5.7220458984375e-06, -0.0028743743896484375, -0.0001773834228515625, -0.0019865036010742188, -3.814697265625e-06, -0.0004100799560546875, -0.0007724761962890625, -3.814697265625e-06, -0.0001239776611328125, -1.33514404296875e-05, -0.0049953460693359375, -4.0531158447265625e-06, -0.007615089416503906, -5.340576171875e-05, -0.016541481018066406, -0.0005741119384765625, -0.0013637542724609375, -0.000263214111328125, -0.001125335693359375, -5.53131103515625e-05, -0.030516624450683594, -9.5367431640625e-06, -0.0022439956665039062, -2.622600959512056e-06, -0.0031243562698364258, 0.0, -2.09808349609375e-05, -0.09781360626220703, -5.53131103515625e-05, -0.010313034057617188, -0.008440971374511719, -2.288818359375e-05, -7.62939453125e-06, -0.01116180419921875, 0.0, -0.008465766906738281, -4.768370445162873e-07, -0.0143280029296875, 0.0, -0.0030164718627929688, -0.0004024505615234375, -9.5367431640625e-06, -4.38690185546875e-05, -0.00592803955078125, 0.0, -0.0038309097290039062, -1.1920928244535389e-07, -0.039028167724609375, -1.9073486328125e-06, -0.001796722412109375, -9.1552734375e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0002574920654296875, -7.62939453125e-06, -1.52587890625e-05, -2.3841855067985307e-07, -1.1563301086425781e-05, 0.0, -0.03167724609375, -3.814697265625e-06, -5.14984130859375e-05, -0.0010738372802734375, -1.71661376953125e-05, -0.010245099663734436, -5.9604562920867465e-06, -1.9073486328125e-05, 0.0, -0.00016605854034423828, 0.0], "choice_history": [55, 124, 221, 63, 103, "Backstab", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Backstab", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 2, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -0.3717832471617939, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Backstab", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"_type": "BoolOp", "values": [{"_type": "Compare", "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "calculate_max_health"}}], "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "health"}}, {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "spell_targetable"}}], "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole2": [{"_type": "Template33", "hole0": 2}, {"_type": "Name", "id": "self"}], "hole1": "damage", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}]}}], "index": 9}
{"beams": [{"score_history": [-8.0108642578125e-05, -0.000492095947265625, -5.91278076171875e-05, -0.0018482208251953125, -2.6702880859375e-05, -2.610649426060263e-05, -0.0008650663658045232, -0.04605865478515625, -0.0002617835416458547, -0.0002613067626953125, -5.340576171875e-05, -3.814697265625e-06, -0.0001581907126819715, -1.9431114196777344e-05, -1.9073486328125e-06, -0.0048656463623046875, -0.004344940185546875, -1.71661376953125e-05, -0.000910328992176801, -0.0005348920822143555, -0.00010847726662177593, -0.0011589527130126953, -3.409367855056189e-05, -1.9073486328125e-06, -0.0001613961358089, 0.0, -0.004573822021484375, 0.0, -0.008217096328735352, 0.0, -0.001277923583984375, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -0.0018520355224609375, 0.0, -0.0014801025390625, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00016427040100097656, -1.1563301086425781e-05, -0.0020294189453125, -3.4332275390625e-05, -2.181529998779297e-05, -1.1801719665527344e-05, -3.0517578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.2993811651540454e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.283687591552734e-05, -1.5020368664409034e-05, -0.9499721527099609, -1.1444091796875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.33514404296875e-05, -5.7220458984375e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000233053884585388, 0.0, -2.682209014892578e-05, 0.0, -3.62396240234375e-05, -0.00135040283203125, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -2.8848648071289062e-05, -3.802764695137739e-05, -0.03334236145019531, -0.0006017684936523438, -0.03455543518066406, -0.000362396240234375, -0.007003392092883587, -7.987022399902344e-06, -0.00012969970703125, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-05, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000682830810546875, -7.62939453125e-06, -0.0032634735107421875, 0.0, -0.000247955322265625, -4.2319297790527344e-05, -0.03264141082763672, 0.0, -0.000202178955078125, -3.0517578125e-05, -7.62939453125e-06, -0.0053955987095832825, 0.0], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Kings", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "4", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "score": -1.1530869273000803, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "BlessingOfKings", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}, "hole3": "target_func", "hole2": "PALADIN", "hole1": 4, "hole0": "Blessing of Kings"}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 4}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "increase_health"}, "args": [{"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 10}
{"beams": [{"score_history": [-4.57763671875e-05, -0.000476837158203125, -5.91278076171875e-05, -0.001789093017578125, -3.0517578125e-05, -2.8252303309272975e-05, -0.0008657812140882015, -0.03291149437427521, -0.3832813501358032, -3.814697265625e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.00047278404235839844, -4.4345855712890625e-05, -5.7220458984375e-06, -0.0030803680419921875, -0.001132965087890625, -5.7220458984375e-06, -0.0003282534016761929, -7.987022399902344e-06, -3.24249267578125e-05, -2.6702880859375e-05, -2.47955322265625e-05, -0.00016331326332874596, -1.9073486328125e-05, -0.00272369384765625, -3.62396240234375e-05, -7.62939453125e-06, -1.52587890625e-05, -0.0015411376953125, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.483621498569846e-05, -3.814697265625e-06, -8.404254913330078e-05, 0.0, -0.000659942626953125, -4.57763671875e-05, -0.0002002716064453125, -7.343049946939573e-05, -0.0005460977554321289, -0.00018882608856074512, -0.00030517578125, -6.830690836068243e-05, -0.0002079010009765625, -0.000606536865234375, -0.000194549560546875, -0.0005078210378997028, -8.0108642578125e-05, -1.9073486328125e-06, -0.0006256103515625, -0.0027589797973632812, -1.9073486328125e-06, -0.031366944313049316, -1.1920928244535389e-07, -0.0069844722747802734, -1.9073486328125e-06, -1.33514404296875e-05, -3.62396240234375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0014736652374267578, -5.960462772236497e-07, -0.0063582658767700195, -1.1920928244535389e-07, -8.58306884765625e-05, -0.00067138671875, -7.62939453125e-06, -0.018906712532043457, -2.741813204920618e-06, -0.0013179779052734375, -0.0002899169921875, -0.00042724609375, -6.4849853515625e-05, -0.0015697479248046875, -1.9073486328125e-06, -0.000423431396484375, 0.0, -0.000179290771484375, -1.9073486328125e-06, -0.0024824142456054688, -1.5616416931152344e-05, -0.00165557861328125, -0.000171661376953125, -1.1444091796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.00019276142120361328, -1.1920922133867862e-06, -0.0009864568710327148, -2.384185791015625e-06, -0.1214747428894043, 0.0, -0.0001087188720703125, -0.00226593017578125, -3.814697265625e-05, -0.005041696596890688, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Blessing", "Of", "Might", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessing", " ", "of", " ", "Might", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -0.6411677094570649, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "BlessingOfMight", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole2": [{"_type": "Num", "n": 3}], "hole1": "change_attack", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}]}}], "index": 11}
{"beams": [{"score_history": [-1.9073486328125e-05, -8.392333984375e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.02917155809700489, -0.01733122393488884, -0.043100591748952866, -3.814697265625e-06, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.00018346309661865234, -2.6702880859375e-05, -1.9073486328125e-05, -0.00371551513671875, -1.52587890625e-05, -0.0016521215438842773, -1.9073486328125e-06, -4.00543212890625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0003819454868789762, -1.0371208190917969e-05, -5.14984130859375e-05, -0.3450345993041992, -0.0002307891845703125, -0.0001408954558428377, -4.076952609466389e-05, -3.6954863844584906e-06, -3.814697265625e-06, -0.0008192489622160792, 0.0, -0.0015774965286254883, -1.3351438610698096e-05, -7.438641478074715e-05, -9.059892363438848e-06, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.340576171875e-05, -1.1920928244535389e-07, -0.0073299407958984375, -6.79492904964718e-06, -0.0016584396362304688, -0.0008392333984375, -0.00018332690524403006, -4.172325134277344e-06, -1.2755334864777979e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Bloodfen", "Raptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -0.4542582868559677, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "BloodfenRaptor", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Template14", "hole4": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "hole3": "minion_type", "hole2": "FREE", "hole1": 2, "hole0": "Bloodfen Raptor"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole1": 2, "hole0": 3}]}]}}], "index": 12}
{"beams": [{"score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -3.099436753473128e-06, -0.000187516154255718, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00017189979553222656, -6.663799285888672e-05, -1.9073486328125e-06, -0.00017547607421875, -0.009004592895507812, -3.62396240234375e-05, -3.576272320060525e-06, -3.540466059348546e-05, -0.00016080040950328112, -1.931178485392593e-05, -0.04144775867462158, -1.9073486328125e-06, -0.006590843200683594, 0.0, -0.0008126497268676758, -1.9073486328125e-06, -7.62939453125e-06, -0.000102996826171875, 0.0, -1.919269561767578e-05, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -6.103515625e-05, -0.00025177001953125, -1.7404556274414062e-05, -0.032036781311035156, -1.33514404296875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.00012969970703125, -1.1444091796875e-05, -0.0002880095271393657, -3.576278118089249e-07, -0.00010883808135986328, 0.0, -5.7220458984375e-06, -0.000255584716796875, -1.9073486328125e-06, -4.38690185546875e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -4.589557647705078e-05, -0.00290179206058383, -0.0002384185791015625, -2.288818359375e-05, -7.2479248046875e-05, 0.0, -0.0013066529063507915, -4.494140375754796e-05, -0.000331878662109375, -1.1444091796875e-05, -0.0001678466796875, 0.0, -0.004474639892578125, -2.384185791015625e-06, -0.00021398067474365234, 0.0, -0.0001850128173828125, -0.0039501190185546875, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001430511474609375, 0.0, -0.001044154167175293, -1.025196434056852e-05, -0.01905810832977295, 0.0, -1.33514404296875e-05, -0.0002689361572265625, 0.0, -0.0055676973424851894, -1.33514404296875e-05], "choice_history": [55, 124, 221, 63, 103, "Bloodlust", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "change_temp_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "score": -0.13245261978743628, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Bloodlust", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template4", "hole2": "SHAMAN", "hole1": 5, "hole0": "Bloodlust"}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "change_temp_attack"}, "args": [{"_type": "Num", "n": 3}]}}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 13}
{"beams": [{"score_history": [0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.429045167053118e-05, -0.00017212370585184544, -0.0017200212460011244, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -2.0265579223632812e-06, -5.614757537841797e-05, -3.933906555175781e-06, -1.52587890625e-05, -0.0010128021240234375, -0.0001468658447265625, -3.695439227158204e-05, -6.079601735109463e-05, -6.377696990966797e-05, -1.1920928244535389e-07, -0.00022077529865782708, -3.576278118089249e-07, -7.593620830448344e-05, 0.0, -2.9325288778636605e-05, -2.4914723326219246e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -3.3378546504536644e-06, -0.05781972408294678, -0.00018346309661865234, -0.06793498992919922, -1.52587890625e-05, -2.7418097943154862e-06, -4.577531944960356e-05, -0.005664825439453125, -5.364403477869928e-06, -0.009188649244606495, -3.755022044060752e-05, -0.0004520416259765625, -1.1444091796875e-05, -0.00051116943359375, -1.52587890625e-05], "choice_history": [55, 124, 221, 63, 103, "Bluegill", "Warrior", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -0.14573292424181972, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "BluegillWarrior", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}, "hole3": "minion_type", "hole2": "ALL", "hole1": 2, "hole0": "Bluegill Warrior"}, {"_type": "Template10", "hole3": {"_type": "NameConstant", "value": true}, "hole2": "charge", "hole1": 1, "hole0": 2}]}]}}], "index": 14}
{"beams": [{"score_history": [-8.20159912109375e-05, -1.33514404296875e-05, -6.103515625e-05, -3.814697265625e-05, -0.0001087188720703125, -2.50339189733495e-06, -6.020063301548362e-05, -5.7220458984375e-06, -0.0001678466796875, 0.0, -4.220007031108253e-05, -5.6385990319540724e-05, -3.814697265625e-06, -1.52587890625e-05, -0.08246135711669922, -0.00018310546875, -1.7046926586772315e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.5629758965806104e-05, -8.344650268554688e-06, -6.29425048828125e-05, -0.00043487548828125, -1.9073486328125e-05, -1.1444091796875e-05, -0.00876617431640625, -1.9073486328125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.7418136596679688e-05, -7.62939453125e-06, -0.0005475282669067383, -2.0265579223632812e-06, -0.0014057159423828125, -0.000232696533203125, -3.814697265625e-06, -2.622604142743512e-06, -2.384185791015625e-06, -1.9073486328125e-06, 0.0, -0.025239359587430954, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.09808349609375e-05, -5.245195097813848e-06, -0.0008183717727661133, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -0.000110626220703125, -6.01988795096986e-05, -0.6581497192382812, -2.491474151611328e-05, -4.38690185546875e-05, -9.5367431640625e-06, -1.9669532775878906e-05, -2.2649765014648438e-06, -5.53131103515625e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -6.29425048828125e-05, 0.0, -0.000415802001953125, 0.0, -0.0067234039306640625, -7.748603820800781e-06, -0.0004482269287109375, -0.00081634521484375, -1.7761856724973768e-05, -2.3841855067985307e-07, -1.5023122614366002e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Boar", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -0.788143169410624, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Boar", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole1": 1, "hole0": 1}]}]}}], "index": 15}
{"beams": [{"score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.9591064453125e-05, -8.0108642578125e-05, -3.71926071238704e-05, -0.00013887141540180892, -3.814697265625e-06, -4.1961669921875e-05, -9.5367431640625e-06, -2.348422094655689e-05, -0.00014209638175088912, -1.9073486328125e-05, -7.62939453125e-06, -0.000682830810546875, -1.52587890625e-05, -2.3364969820249826e-05, 0.0, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.0003934426058549434, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0001220703125, -0.011846542358398438, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.4185804502631072e-05, -3.814697265625e-06, -7.748603820800781e-06, 0.0, -0.000743865966796875, -1.52587890625e-05, -3.4332275390625e-05, -9.536738616588991e-07, -3.4332275390625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00041524512926116586, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.3947486877441406e-05, -0.000141143798828125, -0.042793866246938705, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9550323486328125e-05, -5.936446541454643e-05, -0.01181793212890625, -1.9073486328125e-06, -0.0022220611572265625, -1.1444091796875e-05, 0.0, -0.0009289979934692383, 0.0, -0.000194549560546875, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.00023663043975830078, -1.9073486328125e-06, -0.01860499382019043, -0.00026285648345947266, -0.023698806762695312, -3.0517578125e-05, -5.173683166503906e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -7.6293927122605965e-06, 0.0, 0.0, -7.62939453125e-06, -2.0265558760002023e-06, -3.24249267578125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -0.12376880645751953, -3.814697265625e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -4.57763671875e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -2.539145316404756e-05, 0.0, -0.00025010108947753906, 0.0, -2.09808349609375e-05, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -2.3841855067985307e-07, -1.1444091796875e-05, 0.0, -1.2159347534179688e-05, -5.674361455021426e-05, -0.0074901580810546875, -0.0002269744873046875, -0.0733795166015625, -0.0001277923583984375, -0.0076584285125136375, -9.536738616588991e-07, -0.030660629272460938, -0.0032873153686523438, -0.007453948259353638, -8.022785186767578e-05], "choice_history": [55, 124, 221, 63, 103, "Charge", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Charge", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "2", "<EOS>", 78, 161, "<UNK>", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -0.3710893921229115, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Charge", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_friendly_minion_spell_target"}}], "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 2}}, {"_type": "Template25", "hole0": "<UNK>"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 16}
{"beams": [{"score_history": [-3.814697265625e-06, -7.62939453125e-06, -4.00543212890625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0024835001677274704, -0.020717179402709007, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.1444091796875e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.009952545166015625, -0.0003757476806640625, -0.000271879427600652, -7.867813110351562e-06, -1.7523765563964844e-05, -5.841255187988281e-06, -3.778930476983078e-05, -8.583057933719829e-06, -3.123283386230469e-05, -2.0265579223632812e-06, -0.00737762451171875, -1.9073486328125e-05, -0.003443320281803608, -1.311301275563892e-06, -0.0004433771246112883, -0.0003129243850708008], "choice_history": [55, 124, 221, 63, 103, "Chillwind", "Yeti", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -0.04570890387401505, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ChillwindYeti", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template4", "hole2": "ALL", "hole1": 4, "hole0": "Chillwind Yeti"}, {"_type": "Template11", "hole1": 5, "hole0": 4}]}]}}], "index": 17}
{"beams": [{"score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.9802317840221804e-06, -0.004856968764215708, -1.1444091796875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.00011336803436279297, -9.417532055522315e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.011888504028320312, -0.0006427764892578125, -0.00012170527770649642, -0.0003272957692388445, -3.576169547159225e-07, -1.1920928244535389e-07, -0.0008469820022583008, -1.311301275563892e-06, -0.002574920654296875, 0.0, -9.059905096364673e-06, -3.933906555175781e-06, -1.9073486328125e-06, -0.000133514404296875, 0.0, -2.0742414562846534e-05, 0.0, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.57763671875e-05, -0.0002117156982421875, -1.71661376953125e-05, -0.0064258575439453125, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -7.224082946777344e-05, 0.0, -1.52587890625e-05, -3.576278118089249e-07, -1.9073486328125e-05, -0.0001773834228515625, -6.103515625e-05, -6.508827209472656e-05, 0.0, -3.4332275390625e-05, 0.0, -6.520748138427734e-05, -0.00013673304056283087, -0.02089214324951172, -0.0026273727416992188, -0.10333019495010376, -1.6689286894688848e-06, -0.000423431396484375, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.000423431396484375, -2.3841855067985307e-07, -0.001599879702553153, -7.867804924899247e-06, -0.03467237949371338, 0.0, -0.001522064208984375, -0.0001277923583984375, 0.0, -0.0057360329665243626, 0.0], "choice_history": [55, 124, 221, 63, 103, "Claw", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "score": -0.20077112867411273, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Claw", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template6", "hole2": "DRUID", "hole1": 1, "hole0": "Claw"}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "Template29", "hole0": 2}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "attr": "increase_armor"}, "args": [{"_type": "Num", "n": 2}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 18}
{"beams": [{"score_history": [-7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, -0.0001220703125, -7.62939453125e-06, -2.2172740500536747e-05, -0.00013637541269417852, -0.00014495849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0002595186233520508, -1.3947486877441406e-05, 0.0, -0.007565498352050781, -0.007755279541015625, -7.43865966796875e-05, -4.327203714638017e-05, -8.344646857949556e-07, -0.00013231286720838398, -3.2186049793381244e-05, -0.01263892650604248, -0.0013027191162109375, -0.000453948974609375, -0.0002880096435546875, -0.00020623207092285156, 0.0, -8.58306884765625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.1682510375976562e-05, -1.9073486328125e-06, -0.03538703918457031, -1.1444091796875e-05, -0.0004673004150390625, 0.0, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -9.5367431640625e-06, -6.103515625e-05, -3.8862031942699105e-05, 0.0, -4.00543212890625e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -0.00067901611328125, -7.62939453125e-06, -8.58306884765625e-05, 0.0, -0.0002231597900390625, 0.0, -2.09808349609375e-05, -1.2874562344222795e-05, -0.0010128021240234375, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-05, -9.5367431640625e-06, -0.0023708343505859375, -5.7220458984375e-06, -0.000209808349609375, -7.62939453125e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.00018310546875, 0.0, -0.0053863525390625, -2.0146166207268834e-05, -0.003911375999450684, -2.3841855067985307e-07, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -0.0018596649169921875, -0.0003833770751953125, -0.0004119873046875, 0.0, -0.0009937286376953125, -6.079665126890177e-06, -0.0015960931777954102, 0.0, -0.0005908854654990137, -1.9073486328125e-06, -0.0047702789306640625, -0.0001010894775390625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0098801851272583, 0.0, -8.58306884765625e-05, -1.52587890625e-05, -0.000713348388671875, -7.62939453125e-06, -0.0001392364501953125, -1.9073486328125e-06, -8.58306884765625e-05, -0.0012149810791015625, -3.814697265625e-06, -0.00011551380157470703, -3.0517578125e-05, -0.004654884338378906, -7.62939453125e-06, -0.0005396604537963867, 0.0, -0.006850242614746094, -0.0004062652587890625, -2.09808349609375e-05, -6.67572021484375e-05, -3.0517578125e-05, -3.814697265625e-06, -0.010035514831542969, -2.3126602172851562e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0001163482666015625, 0.0, -0.0013856887817382812, -1.5497195136049413e-06, -0.003182053565979004, -5.7220458984375e-06, -0.0053653717041015625, -0.000484466552734375, -1.9073486328125e-06, -0.0017728805541992188, -2.09808349609375e-05, -2.09808349609375e-05, -0.00017547607421875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.000396728515625, 0.0, -0.0072956085205078125, -9.5367431640625e-06, -0.019354939460754395, 0.0, -0.0004634857177734375, -0.0031728744506835938, -3.814697265625e-06, -0.0284881591796875, -3.933906555175781e-06, -0.0010700225830078125, -6.866455078125e-05, -2.47955322265625e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.0003814697265625, -1.9073486328125e-06, -0.3626232147216797, -1.537799835205078e-05, -0.022002220153808594, 0.0, -0.0008296966552734375, -0.00760650634765625, -3.814697265625e-06, -0.027396202087402344, -3.933906555175781e-06, -0.002223968505859375, -0.0003681182861328125, -0.0007791519165039062, 0.0, -0.0001583099365234375, -0.0005207061767578125, -1.9073486328125e-06, -3.814697265625e-05, 0.0, 0.0, -0.0021772384643554688, 0.0, -1.9073486328125e-06, -0.00016021728515625, 0.0, -0.00069427490234375, -0.005161285400390625, -0.000156402587890625, -0.00038909912109375, -7.82012939453125e-05, -0.0001888275146484375, -3.0517578125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -9.083747863769531e-05, 0.0, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0014896392822265625, -1.52587890625e-05, -0.0012416839599609375, -3.814697265625e-06, -0.0014362335205078125, -4.649161837733118e-06, -0.00041556358337402344, 0.0, -0.0004616273217834532, 0.0, -0.00470733642578125, -0.005451202392578125, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.015948772430419922, 0.0], "choice_history": [55, 124, 221, 63, 103, "Cleave", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -0.6662974382390416, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Cleave", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template4", "hole2": "WARRIOR", "hole1": 2, "hole0": "Cleave"}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minions"}, "attr": "remove"}, "args": [{"_type": "Name", "id": "minion"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minions"}, "attr": "remove"}, "args": [{"_type": "Name", "id": "minion"}]}}], "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}]}, "target": {"_type": "Name", "id": "i"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"_type": "Template21", "hole2": [{"_type": "Num", "n": 2}], "hole1": [{"_type": "GtE"}], "hole0": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 19}
{"beams": [{"score_history": [-7.62939453125e-06, -1.33514404296875e-05, -3.814697265625e-06, -3.4332275390625e-05, -2.09808349609375e-05, -3.015949550899677e-05, -0.00015401840209960938, -9.5367431640625e-06, -4.76837158203125e-05, -3.814697265625e-06, -7.82012939453125e-05, -8.821487426757812e-05, -5.7220458984375e-06, -0.0004558563232421875, -0.0712137222290039, -0.0001163482666015625, -3.9934315282152966e-05, -4.887576324108522e-06, -2.706014311115723e-05, -1.4066622497921344e-05, -0.0023660659790039062, 0.0, -0.015104293823242188, -1.9073486328125e-06, -1.263618378288811e-05, 0.0, -8.58306884765625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -5.733966827392578e-05, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -2.0265579223632812e-06, -0.050772666931152344, -5.7220458984375e-06, -0.00014495849609375, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0002275705337524414, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0014591217041015625, -1.71661376953125e-05, -0.000102996826171875, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -4.160325261182152e-05, -0.006834983825683594, -4.38690185546875e-05, -9.72747802734375e-05, 0.0, -0.000942230224609375, -3.7431014789035544e-05, -0.0001430511474609375, -0.0003910064697265625, -0.0001773834228515625, 0.0, -2.47955322265625e-05, 0.0, -0.0004558563232421875, -1.2516897186287679e-05, -8.630752563476562e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-05, -2.288818359375e-05, -0.00038909912109375, -1.9073486328125e-06, -0.0006351470947265625, -2.384185791015625e-06, -0.0009124279022216797, 0.0, -0.00016915719606913626, 0.0, -0.0001983642578125, -0.0007648468017578125, -3.814697265625e-06, -4.1961669921875e-05, -1.1444091796875e-05, -6.67572021484375e-05, -1.52587890625e-05, -0.000324249267578125, -3.814697265625e-06, -0.0026694536209106445, -8.940656698541716e-06, -0.00025773048400878906, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0002918243408203125, -0.0001697540283203125, -0.0020786458626389503, -1.4781950994802173e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.00033664703369140625, -1.1920928244535389e-07, -0.13533973693847656, -3.814697265625e-06, -3.62396240234375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005702972412109375, -7.62939453125e-06, -0.00200653076171875, -7.62939453125e-06, -0.001285552978515625, -3.814697265625e-06, -0.0024051666259765625, -2.1457672119140625e-06, -0.006669402122497559, 0.0, -0.008612626232206821, -3.576278118089249e-07, -0.0038979053497314453, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001735687255859375, -0.0002880096435546875, -0.002991664921864867, -2.384185791015625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0001220703125, 0.0], "choice_history": [55, 124, 221, 63, 103, "Consecration", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -0.32631918914173497, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Consecration", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template4", "hole2": "PALADIN", "hole1": 4, "hole0": "Consecration"}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "damage"}, "args": [{"_type": "Template33", "hole0": 2}, {"_type": "Name", "id": "self"}]}}], "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}, "attr": "damage"}, "args": [{"_type": "Template33", "hole0": 2}, {"_type": "Name", "id": "self"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 20}
{"beams": [{"score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.004038512706756592, -0.0012822417775169015, -1.0967213711410295e-05, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -2.7298927307128906e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000286102294921875, -0.000125885009765625, -0.0001227780303452164, -0.00015043580788187683, -6.723403930664062e-05, -5.7220458984375e-06, -0.005258199758827686, -2.0265579223632812e-06, -3.921983443433419e-05, 0.0, -0.00011873109906446189, -1.2874597814516164e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.01779007911682129, -8.940695806813892e-06, -0.000141143798828125, -1.9073486328125e-06, -0.00012587709352374077, -4.291525328881107e-06, -1.8238915799884126e-05, -7.450580596923828e-05], "choice_history": [55, 124, 221, 63, 103, "Core", "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -0.029861987195545225, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "CoreHound", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "hole3": "minion_type", "hole2": "ALL", "hole1": 7, "hole0": "Core Hound"}, {"_type": "Template11", "hole1": 5, "hole0": 9}]}]}}], "index": 21}
{"beams": [{"score_history": [-5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -8.59463689266704e-05, -9.489053627476096e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -9.751319885253906e-05, -0.0002255438157590106, -1.9073486328125e-06, -0.0025806427001953125, -0.0003681182861328125, -0.0001163482666015625, -9.894339200400282e-06, -1.1920928244535389e-07, -0.0004362915933597833, 0.0, -0.11945855617523193, 0.0, -0.0006513589178211987, 0.0, -0.00011444091796875, -7.05718994140625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, 0.0, -0.0022296905517578125, -2.0265579223632812e-06, -0.00029098987579345703, -1.1444091796875e-05, -0.11105811595916748, -9.5367431640625e-06, -0.0044384002685546875, -0.021722793579101562, -0.00028228759765625, -2.6702880859375e-05, -3.24249267578125e-05, 0.0, -0.00018525123596191406, -1.1920928244535389e-07, -4.625310975825414e-05, -2.0265579223632812e-06, -0.41280901432037354, 0.0, -0.000278472900390625, -0.005329132080078125, -0.000675201416015625, -3.814697265625e-05, 0.0, -0.0014541149139404297, -0.000141143798828125, -1.33514404296875e-05, -0.0025768280029296875, -0.0014142990112304688, -0.0008335113525390625, 0.0, -0.0013735294342041016, -0.020914196968078613, -2.47955322265625e-05, -0.010376930236816406, -0.000171661376953125, -2.6702880859375e-05, -0.0002804994583129883, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.5686308145523071, -4.1961669921875e-05, 0.0, -0.0002193450927734375, -4.57763671875e-05, -1.33514404296875e-05, 0.0, -0.0022050142288208008, -5.7220458984375e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.0019283294677734375, -5.91278076171875e-05, -0.006411909591406584, -7.05718994140625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0006035566329956055, -1.3470649719238281e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Corruption", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Started", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 49, 174, "Kill", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -1.3040655657505198, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Corruption", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_enemy_minion_spell_target"}, "hole3": "target_func", "hole2": "WARLOCK", "hole1": 1, "hole0": "Corruption"}, {"_type": "Template1", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Effect"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}, "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template38", "hole0": "EnemyPlayer"}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template38", "hole0": "Kill"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}], "hole1": "add_effect", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}]}}], "index": 22}
{"beams": [{"score_history": [-7.62939453125e-06, 0.0, -9.5367431640625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.033323527139146e-06, -6.198863957251888e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -9.5367431640625e-06, -0.14910602569580078, -8.392333984375e-05, -4.327211718191393e-05, -9.775161743164062e-06, -1.9073486328125e-05, -1.33514404296875e-05, -0.00012290450104046613, -3.6120269214734435e-05, -1.823902130126953e-05, -1.9073486328125e-06, -0.0004940032958984375, -2.86102294921875e-05, -7.152546004363103e-07, -1.5020257706055418e-05, -5.8889178035315126e-05, -8.22540732769994e-06, -0.04308903217315674, -2.3841855067985307e-07, -0.000965118408203125, -0.0002269744873046875, -0.00023722639889456332, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dalaran", "Mage", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "score": -0.19468378844038625, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "DalaranMage", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template4", "hole2": "ALL", "hole1": 3, "hole0": "Dalaran Mage"}, {"_type": "Template10", "hole3": {"_type": "Num", "n": 1}, "hole2": "spell_damage", "hole1": 4, "hole0": 1}]}]}}], "index": 23}
{"beams": [{"score_history": [-9.5367431640625e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0001767873764038086, -4.0531158447265625e-06, -1.251697449333733e-05, -4.38690185546875e-05, -8.7738037109375e-05, 0.0, -1.7404538084520027e-05, -0.0006326402071863413, -2.0265579223632812e-06, -0.0001049041748046875, -0.0009899139404296875, -6.4849853515625e-05, -0.0003652571758721024, -0.00047194294165819883, -0.00012052059173583984, -0.0001010894775390625, -0.00018689793068915606, 0.0, -0.019364118576049805, -1.1920928244535389e-07, -2.7418136596679688e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -0.00042366981506347656, -9.775161743164062e-06, -0.001129150390625, -0.0009021759033203125, -1.9073486328125e-06, 0.0, -0.0002498626708984375, 0.0, -1.1444091796875e-05, 0.0, -9.655952453613281e-06, 0.0, -0.057137370109558105, 0.0, -0.000156402587890625, -2.47955322265625e-05, -5.7220458984375e-06, -0.02478313446044922, -5.7220458984375e-06, -0.0004482269287109375, 0.0, -0.0001544952392578125, 0.0, -4.017353057861328e-05, 0.0, -0.035903096199035645, 0.0], "choice_history": [55, 124, 221, 63, 103, "Divine", "Spirit", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "score": -0.14446076483999803, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "DivineSpirit", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}, "hole3": "target_func", "hole2": "PRIEST", "hole1": 2, "hole0": "Divine Spirit"}, {"_type": "Template1", "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "health"}], "hole1": "increase_health", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}]}}], "index": 24}
{"beams": [{"score_history": [-3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.0006995138246566057, -0.0003730561875272542, -0.00018702188390307128, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -4.41074053014745e-06, -4.088878631591797e-05, -9.655952453613281e-06, -5.7220458984375e-05, -0.0028553009033203125, -1.52587890625e-05, -8.344646857949556e-07, -0.00020478830265346915, -0.000186920166015625, 0.0, -0.006028652656823397, 0.0, -0.0007561437669210136, 0.0, -0.0023126602172851562, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.0004889965057373047, 0.0, -5.7220458984375e-06, -0.0004520416259765625, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0016340856673195958, -6.31808916295995e-06, -0.0003871917724609375, -6.103515625e-05, -7.62939453125e-06, -0.0008946496527642012, -0.006284023635089397, -0.0006787856691516936, 0.0, -1.71661376953125e-05, -9.322135883849114e-05, -7.867813110351562e-05, -3.576278118089249e-07, -0.0005340576171875, -3.814697265625e-06, -6.198883056640625e-06, -2.3841855067985307e-07, -1.1563301086425781e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Dragonling", "Mechanic", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Mechanical", "Dragonling", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -0.025540227121865655, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "DragonlingMechanic", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Summon"}, "args": [{"_type": "Template38", "hole0": "MechanicalDragonling"}]}, {"_type": "Template38", "hole0": "PlayerSelector"}]}, "hole3": "battlecry", "hole2": "ALL", "hole1": 4, "hole0": "Dragonling Mechanic"}, {"_type": "Template11", "hole1": 4, "hole0": 2}]}]}}], "index": 25}
{"beams": [{"score_history": [-1.9073486328125e-06, -0.000118255615234375, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -9.059495641849935e-05, -0.0071852137334644794, -6.318072337307967e-06, -1.71661376953125e-05, -9.34600830078125e-05, -7.62939453125e-06, -0.0004982948303222656, -3.278254735050723e-05, -3.814697265625e-06, -2.09808349609375e-05, -0.037227630615234375, -1.9073486328125e-06, -2.9802317840221804e-06, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -0.0005928949103690684, -1.0967253729177173e-05, -0.000102996826171875, -2.6702880859375e-05, -1.1444091796875e-05, 0.0, -0.0001544952392578125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -5.006789251638111e-06, -1.9073486328125e-06, -1.2397744285408407e-05, -1.1920928244535389e-07, -0.0002155303955078125, -0.000598907470703125, -4.76837158203125e-05, -8.4638240878121e-06, -2.6702880859375e-05, -1.6689286894688848e-06, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -2.7537011192180216e-05, -4.410734163684538e-06, -8.392333984375e-05, -3.4332275390625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.254413604736328e-05, -2.0265579223632812e-06, -0.014548063278198242, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -7.62939453125e-06, -0.0001506805419921875, -4.780292510986328e-05, -1.1086437552876305e-05, -0.016620755195617676, 0.0, -0.0001811981201171875, -3.814697265625e-05, -3.814697265625e-06, -0.00016260147094726562, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004749298095703125, -3.814697265625e-06, -0.00020992755889892578, -5.841255187988281e-06, -0.05283081531524658, -5.7220458984375e-06, -0.15659809112548828, -8.0108642578125e-05, -9.560585021972656e-05, 0.0, -7.62939453125e-06, -4.38690185546875e-05, -6.4849853515625e-05, -0.0001826285442803055, -5.960462772236497e-07, -1.9073486328125e-06, -0.000240325927734375, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0008335113525390625, -5.364416665543104e-06, -0.0024785995483398438, -5.7220458984375e-06, -6.103515625e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -2.6941299438476562e-05, 0.0, -2.7179718017578125e-05, -3.576278118089249e-07, -9.5367431640625e-06, -0.0003910064697265625, -2.47955322265625e-05, -6.29425048828125e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -1.9073486328125e-06, -1.7404556274414062e-05, -1.8835040464182384e-05, -0.0001506805419921875, -6.103515625e-05, -0.5724611282348633, -0.0006656646728515625, -0.0007125142146833241, -6.568216485902667e-05, -7.05718994140625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -5.14984130859375e-05, -2.6702880859375e-05, 0.0, -3.0517578125e-05, 0.0, -0.000759124755859375, 0.0, -0.013428688049316406, 0.0, -0.009608502499759197, -1.9550319848349318e-05, -0.025048820301890373, -0.0009636878967285156, -7.62939453125e-06, -0.02172565460205078, -0.00041961669921875, -0.000186920166015625, -5.7220458984375e-06, -0.0001163482666015625, 0.0, -0.0007190704345703125, -5.960462772236497e-07, -0.00326936854980886, -2.3841855067985307e-07, -2.288818359375e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.2576900189742446e-05, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -0.0005067586898803711, -7.510183422709815e-06], "choice_history": [55, 124, 221, 63, 103, "Drain", "Life", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drain", " ", "Life", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score": -0.9455947993569751, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "DrainLife", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 2}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "hero"}, "attr": "heal"}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 26}
{"beams": [{"score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -6.568313983734697e-05, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.0004452898574527353, -2.8133366868132725e-05, -0.00012004375457763672, -5.14984130859375e-05, -0.010133743286132812, -5.340576171875e-05, -6.914137884450611e-06, 0.0, 0.0, -0.0001373291015625, -2.6702880859375e-05, -0.00017189729260280728, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.00040435791015625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -4.768367489305092e-06, -5.7220458984375e-06, -1.1563301086425781e-05, 0.0, -0.0176544189453125, -0.00052642822265625, -4.9591064453125e-05, -3.576278118089249e-07, -3.647802441264503e-05, -2.145763937733136e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.8358097804593854e-05, -9.894339200400282e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000156402587890625, -0.006133079528808594, -0.00019168852304574102, -1.1205671398784034e-05, -0.027000783011317253, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -2.47955322265625e-05, -0.0012760162353515625, -0.0002263784408569336, -2.6464205802767538e-05, -0.0034161806106567383, -0.0002843138063326478, -0.008324623107910156, -1.9073486328125e-05, 0.0, -5.161762237548828e-05, -2.503394853192731e-06, -5.7220458984375e-06, 0.0, -0.000156402587890625, 0.0, -0.0004596710205078125, 0.0, -0.006997108459472656, -1.9073486328125e-06, -0.0004673004150390625, -1.9073486328125e-06, -0.005008697509765625, 0.0, -9.1552734375e-05, -2.6702880859375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.0010874271392822266, -2.3841855067985307e-07, -4.9591064453125e-05, -0.005085945129394531, -0.0009918212890625, -0.034696757793426514, -3.182848740834743e-05, -0.0043048858642578125, -0.000431060791015625, -0.00023651123046875, -1.9073486328125e-06, -0.14714395999908447, -8.45193862915039e-05, -1.9073486328125e-06, -0.0037746429443359375, -0.0002346038818359375, -3.814697265625e-05, -0.006461143493652344, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -7.271766662597656e-05, -5.7220458984375e-05, -3.814697265625e-06, -0.0004291534423828125, -2.09808349609375e-05, -1.3709017366636544e-05, -2.586808113846928e-05, -7.331240340135992e-05, -5.364403477869928e-06], "choice_history": [55, 124, 221, 63, 103, "Dread", "Infernal", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Dread", " ", "Infernal", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -0.2961373079566769, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "DreadInfernal", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template37", "hole0": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}]}]}}], "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole1": 6, "hole0": 6}]}]}}], "index": 27}
{"beams": [{"score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -4.1961669921875e-05, -2.47955322265625e-05, 0.0, -0.00012039413559250534, -0.00011669908417388797, -0.0008911775075830519, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.861022494471399e-06, -1.990795135498047e-05, -4.017353057861328e-05, -1.71661376953125e-05, -0.6861886978149414, -9.5367431640625e-06, -1.5497195136049413e-06, -1.8477439880371094e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.2278149370104074e-05, 0.0, -0.00041174888610839844, 0.0, -0.0050719971768558025, -8.344646857949556e-07, -0.0001850128173828125, -1.71661376953125e-05, -3.814697265625e-06, -1.71661376953125e-05, -7.772437675157562e-05, -1.9073468138230965e-06, -1.1444091796875e-05, -0.04322528839111328, -0.0002040863037109375, -0.004065753426402807, -5.5909156799316406e-05, -0.0073795318603515625, -0.000118255615234375, -0.000499725341796875, -1.1444091796875e-05, -0.0030281543731689453, -0.00045275644515641034, -2.0265579223632812e-06, -0.0020294189453125, -9.72747802734375e-05, -1.71661376953125e-05, -7.62939453125e-05, -1.71661376953125e-05, -6.67572021484375e-05, -9.5367431640625e-06, -0.0005424022674560547, -1.537799835205078e-05, 0.0, -3.0517578125e-05, -1.1444091796875e-05, -0.000335693359375, -1.9073486328125e-06, -4.76837158203125e-05, -1.9073486328125e-05, -0.00042939186096191406, -6.103515625e-05, -2.0265579223632812e-06, -0.000179290771484375, -2.6702880859375e-05, 3.574878064682707e-07, -2.384185791015625e-06, -2.0503823179751635e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Elven", "Archer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -0.756437614034212, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ElvenArcher", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template37", "hole0": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}]}]}, "hole3": "battlecry", "hole2": "ALL", "hole1": 1, "hole0": "Elven Archer"}, {"_type": "Template11", "hole1": 1, "hole0": 1}]}]}}], "index": 28}
{"beams": [{"score_history": [-4.00543212890625e-05, -4.1961669921875e-05, -5.53131103515625e-05, -0.0005359649658203125, -5.7220458984375e-06, -1.4543427823809907e-05, -1.5139465176616795e-05, -0.000248291646130383, -2.09808349609375e-05, -0.00064849853515625, -2.86102294921875e-05, -0.00044536334462463856, -1.3112959095451515e-05, 0.0, -2.47955322265625e-05, -0.006285667419433594, -7.62939453125e-06, -0.0004333248652983457, -0.00011193750106031075, -7.62939453125e-06, -9.5367431640625e-06, -0.000141143798828125, -0.00015258559142239392, -1.52587890625e-05, -0.000164031982421875, -0.000102996826171875, -1.1444091796875e-05, -3.814697265625e-06, -0.00046539306640625, -4.1961669921875e-05, -3.814697265625e-06, -0.0001468658447265625, 0.0, -1.0132769602932967e-05, -1.9073486328125e-06, -0.00012981891632080078, 0.0, -0.0057888031005859375, -5.7220458984375e-05, -0.01570892333984375, -0.00012158675963291898, -5.567064363276586e-05, -0.0004248924378771335, -0.000301361083984375, -0.008295059204101562, 0.0, -0.0011943173594772816, -7.152555099310121e-07, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.001262664794921875, 0.0, -0.0017795562744140625, -1.1920928244535389e-07, -3.814697265625e-06, -1.52587890625e-05, -0.0001316070556640625, -2.09808349609375e-05, -0.00014340877532958984, -5.245195097813848e-06, -0.0011196136474609375, -5.006789251638111e-06, -0.020191192626953125, -6.29425048828125e-05, -0.00012159344623796642, -2.3841855067985307e-07, -0.004055023193359375, -0.015324592590332031, -0.002475738525390625, -1.9073486328125e-06, -0.005392193794250488, -7.510157047363464e-06, -0.02271135151386261, -0.00014841511438135058], "choice_history": [55, 124, 221, 63, 103, "Excess", "Mana", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Excess", " ", "Mana", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 71, 143, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -0.11731949448195422, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ExcessMana", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole1": "draw", "hole0": {"_type": "Name", "id": "player"}}]}]}}], "index": 29}
{"beams": [{"score_history": [-9.5367431640625e-06, 0.0, -7.62939453125e-06, -7.43865966796875e-05, -1.71661376953125e-05, -4.768370445162873e-07, -0.00020825113460887223, -5.7220458984375e-06, -3.4332275390625e-05, -5.7220458984375e-06, -3.8623809814453125e-05, -4.0054277633316815e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.00014495849609375, -1.9073486328125e-06, -3.33781645167619e-05, -1.1920928244535389e-07, 0.0, -3.4332275390625e-05, 0.0, -0.00014387683768291026, -1.1920928955078125e-05, -0.0004425048828125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00040435791015625, -6.67572021484375e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.0623032469302416e-05, 0.0, -4.9591064453125e-05, 0.0, -0.000133514404296875, -0.00038909912109375, -8.0108642578125e-05, -2.384185791015625e-06, -2.1457672119140625e-06, -2.09808349609375e-05, -4.38690185546875e-05, -9.298104487243108e-06, -1.0728830375228426e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -4.2438507080078125e-05, -0.00034046173095703125, -0.07693994045257568, -2.1457672119140625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -4.6967357775429264e-05, -0.015567302703857422, 0.0, -0.0018434524536132812, -3.62396240234375e-05, -9.34600830078125e-05, -0.0045166015625, 0.0, -1.71661376953125e-05, -0.000156402587890625, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0002155303955078125, -3.62396240234375e-05, -0.0002002716064453125, -0.00122833251953125, -0.021416664123535156, -0.0002193450927734375, -0.0017261505126953125, -5.7220458984375e-06, -0.0035581588745117188, 0.0, -0.000164031982421875, -0.001079559326171875, -5.7220458984375e-06, -5.7220458984375e-05, -2.47955322265625e-05, -0.00268709659576416, -4.208087921142578e-05, -0.0013113021850585938, -8.20159912109375e-05, -0.0056858062744140625, -0.00022125244140625, -0.0008087158203125, -3.62396240234375e-05, -0.000423431396484375, -0.0009403228759765625, -0.00067138671875, -1.9073486328125e-06, -0.002056121826171875, -1.1920928244535389e-07, -0.004368901252746582, 0.0, -2.288818359375e-05, -0.007822990417480469, -2.09808349609375e-05, -0.010733604431152344, -9.34600830078125e-05, -0.000614166259765625, -3.814697265625e-06, -0.020086288452148438, 0.0, -0.001079559326171875, -1.1920928244535389e-07, -0.031090855598449707, -2.3841855067985307e-07, -0.0047149658203125, -0.000705718994140625, -0.00032138824462890625, -0.0034885406494140625, -0.0003566741943359375, 0.0, -0.0001239776611328125, -1.9073486328125e-06, -0.06220054626464844, 0.0, -0.000339508056640625, -8.96453857421875e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0018177032470703125, 0.0, -6.103515625e-05, -0.0001277923583984375, 0.0, -0.0001125335693359375, 0.0], "choice_history": [55, 124, 221, 63, 103, "Execute", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Execute", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 54, 197, "filter_func", "<EOS>", 16, 118, 195, 201, 194, "target", "<EOS>", 13, 97, 0, 209, 33, 104, 11, 94, 19, 125, "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 19, 125, "target", "<EOS>", "calculate_max_health", "<EOS>", 32, 99, 11, 94, 19, 125, "target", "<EOS>", "spell_targetable", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -0.2975908335367379, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Execute", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_enemy_minion_spell_target"}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"_type": "BoolOp", "values": [{"_type": "Compare", "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "calculate_max_health"}}], "ops": [{"_type": "NotEq"}], "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "health"}}, {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "spell_targetable"}}], "op": {"_type": "And"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}}], "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole2": [{"_type": "Name", "id": "self"}], "hole1": "die", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}]}}], "index": 30}
{"beams": [{"score_history": [0.0, -2.09808349609375e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000148773193359375, -0.00011324241495458409, -0.00011038715456379578, -0.009238339960575104, -0.1179867684841156, -9.1552734375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -9.357929229736328e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001316070556640625, -0.1069650650024414, -0.000286102294921875, -1.0728830375228426e-06, -0.0001250481145689264, -0.0005615949630737305, -0.0003800392150878906, -0.015152335166931152, -0.00183868408203125, -4.649161837733118e-06, -5.841255187988281e-06, -0.4935673475265503, -1.71661376953125e-05, -0.000213623046875, 0.0, -1.4424319488171022e-05, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -4.0531158447265625e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, 0.0, -0.06266593933105469, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.1563293810468167e-05, 0.0, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.000148773193359375, -1.52587890625e-05, -7.62939453125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -6.437291176553117e-06, -0.00376129150390625, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -0.000554203987121582, -5.245195097813848e-06, -0.00019073486328125, -0.010143280029296875, -0.0001010894775390625, 0.0, -0.00098419189453125, 0.0, -0.00016021728515625, -9.536738616588991e-07, -0.00026345252990722656, 0.0, -8.96453857421875e-05, -2.09808349609375e-05, 0.0, -0.00042724609375, -3.814697265625e-05, -0.0007038116455078125, 0.0, -0.00042724609375, -2.5033950805664062e-05, -0.00319063663482666, 0.0, -7.665156590519473e-05, 0.0, -0.000148773193359375, -2.09808349609375e-05, -2.86102294921875e-05, -2.09808349609375e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.0001926422119140625, -0.002246856689453125, -1.9073486328125e-06, -0.0007420778274536133, -3.3378546504536644e-06, -0.000640869140625, 0.0, -1.9073486328125e-06, -0.00131988525390625, -0.0001983642578125, -0.001528948312625289, -2.6822061045095325e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.00020313262939453125, 0.0, -0.01830577850341797, -1.9073486328125e-06, -0.0004329681396484375, -0.0042705535888671875, -2.288818359375e-05, -2.86102294921875e-05, -0.0013294219970703125, -2.47955322265625e-05, -0.0024576187133789062, -4.768370445162873e-07, -0.003943085670471191, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fan", "Of", "Knives", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score": -0.8698770082344254, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "FanOfKnives", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template4", "hole2": "ROGUE", "hole1": 3, "hole0": "Fan of Knives"}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "damage"}, "args": [{"_type": "Template33", "hole0": 1}, {"_type": "Name", "id": "self"}]}}], "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "draw"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 31}
{"beams": [{"score_history": [-1.52587890625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.0517578125e-05, -0.0001259990967810154, -0.00015854835510253906, -0.000392913818359375, -0.000156402587890625, -0.000202178955078125, -9.906289051286876e-05, -5.435927232610993e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0011425018310546875, -7.62939453125e-06, -0.0002226733195129782, -1.1920928244535389e-07, -3.4332275390625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -0.0001703489979263395, -3.814697265625e-06, -4.1961669921875e-05, -4.1961669921875e-05, -1.71661376953125e-05, -1.33514404296875e-05, -0.0002689361572265625, -1.71661376953125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.311301275563892e-06, 0.0, -0.0016255378723144531, 0.0, -0.0006160736083984375, -0.0002117156982421875, -1.71661376953125e-05, -0.00043380260467529297, -1.1444091796875e-05, -2.6702880859375e-05, -1.9073486328125e-05, -1.4305012882687151e-05, -1.239776611328125e-05, -3.814697265625e-06, -7.62939453125e-06, -2.09808349609375e-05, -9.5367431640625e-06, -7.760524022160098e-05, -5.9604644775390625e-06, -0.019916534423828125, -3.576278118089249e-07, -9.5367431640625e-06, -1.33514404296875e-05, -8.392333984375e-05, -0.0006465911865234375, -0.0005130767822265625, -1.0728830375228426e-06, -0.005413055419921875, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003358125686645508, 0.0, -6.29425048828125e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -7.62939453125e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.0002880096435546875, -1.9073486328125e-06, -0.007718563079833984, -1.71661376953125e-05, -7.82012939453125e-05, -3.814697265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001220703125, -5.7220458984375e-05, 0.0, -8.26120376586914e-05, -2.0265579223632812e-06, -0.001331329345703125, -3.4332275390625e-05, -1.9073486328125e-06, -0.00028228759765625, -5.14984130859375e-05, -0.0004155627975706011, -1.406666160619352e-05, -2.86102294921875e-05, -1.9073486328125e-06, -9.250640869140625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Fireball", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fireball", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -0.044408066005694025, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Fireball", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole2": [{"_type": "Template33", "hole0": 6}, {"_type": "Name", "id": "self"}], "hole1": "damage", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}]}}], "index": 32}
{"beams": [{"score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001544952392578125, -4.00543212890625e-05, -5.245195097813848e-06, -0.005008577834814787, -0.0001068115234375, -3.814697265625e-05, -9.5367431640625e-06, -0.00042724609375, -3.6597251892089844e-05, -1.71661376953125e-05, -0.00020599365234375, -0.00144195556640625, -1.52587890625e-05, -5.125986263010418e-06, -2.861022494471399e-06, -5.638595757773146e-05, -0.0006165056838653982, -0.07587778568267822, -2.0265579223632812e-06, -0.0002231597900390625, 0.0, -1.9192677427781746e-05, 0.0, -4.76837158203125e-05, -3.0517578125e-05, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -4.0531158447265625e-06, -0.11179828643798828, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.549720582261216e-05, 0.0, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.82012939453125e-05, -1.71661376953125e-05, -0.0001163482666015625, 0.0, -4.76837158203125e-05, 0.0, -1.33514404296875e-05, -1.4901134818501305e-05, -0.0002727508544921875, -4.1961669921875e-05, -6.866455078125e-05, 0.0, -0.0038105249404907227, -1.5377907402580604e-05, -0.000171661376953125, -0.00030517578125, -0.000152587890625, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -0.000362396240234375, -2.3841855067985307e-07, -0.00023853778839111328, 0.0, -0.0001773834228515625, -1.71661376953125e-05, 0.0, -1.71661376953125e-05, -3.0517578125e-05, -0.0006809234619140625, -3.814697265625e-06, -0.0002841949462890625, -1.919269561767578e-05, -0.0017933845520019531, 0.0, -9.918186697177589e-05, 0.0, -6.29425048828125e-05, -4.9591064453125e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.00046539306640625, -0.00025177001953125, -3.814697265625e-06, -0.02528214454650879, -2.264974000354414e-06, -0.00017178058624267578, 0.0, -1.9073486328125e-06, -0.0004425048828125, -0.000240325927734375, -0.000673164613544941, -5.841253368998878e-06, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Flamestrike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -0.233102980941311, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Flamestrike", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template4", "hole2": "MAGE", "hole1": 7, "hole0": "Flamestrike"}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "damage"}, "args": [{"_type": "Template33", "hole0": 4}, {"_type": "Name", "id": "self"}]}}], "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "target": {"_type": "Name", "id": "minion"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 33}
{"beams": [{"score_history": [-3.4332275390625e-05, -7.62939453125e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -3.45700973412022e-05, -0.0011173223610967398, -0.009875833056867123, -7.62939453125e-06, -4.57763671875e-05, -3.814697265625e-06, -5.722029527532868e-06, -0.0010399818420410156, -4.768370445162873e-07, -7.43865966796875e-05, -0.0027790069580078125, -4.1961669921875e-05, -5.364284152165055e-05, -2.562999725341797e-05, -0.0003091096878051758, -0.00086212158203125, -0.00011872626782860607, 0.0, -0.47086429595947266, 0.0, -0.02287578582763672, -2.861022494471399e-06, -0.0001583099365234375, 0.0, -1.9073486328125e-05, 0.0, -0.0002841949462890625, 0.0, -0.024877548217773438, 0.0, -0.0029010772705078125, -3.62396240234375e-05, -9.107174992095679e-05, -9.214453893946484e-05, -0.00013804103946313262, -5.602820692729438e-06, -0.0010083912638947368, -3.111330443061888e-05, -0.00012969970703125, -0.000408172607421875, -0.0485992431640625, -0.00011444091796875, -4.00543212890625e-05, -0.001529693603515625, -9.5367431640625e-06, -0.000988602638244629, -1.1920928244535389e-07, -0.00222015380859375, -0.005257606506347656, -0.0004634857177734375, -0.027494430541992188, -6.318092346191406e-06, -0.02107524871826172, -0.00012969970703125, -7.62939453125e-06, -5.7220458984375e-06, -0.00014710426330566406, -0.00012886524200439453, -2.0265579223632812e-06, -0.00067901611328125, -0.0005245208740234375, 0.0, -0.009930230677127838, -0.0004832139820791781, -0.0227508544921875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.9180015325546265, -0.007701992988586426, 0.0, -0.11139488220214844, -0.009595870971679688, 0.0, -9.5367431640625e-06, 0.0, -0.33624720573425293, -7.903575897216797e-05, -1.311301275563892e-06, -0.000522613525390625, -4.9591064453125e-05, -8.7738037109375e-05, -1.52587890625e-05, -1.52587890625e-05, -0.0013103485107421875, -1.1920928244535389e-07, -0.06598091125488281, -5.841255187988281e-06], "choice_history": [55, 124, 221, 63, 103, "Flametongue", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 72, 145, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent())), MinionSelector(IsType(MINION_TYPE.BEAST))])\n", "score": -2.134044457244144, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "FlametongueTotem", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}, "hole3": "minion_type", "hole2": "SHAMAN", "hole1": 2, "hole0": "Flametongue Totem"}, {"_type": "Template10", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Name", "id": "Aura"}, "args": [{"_type": "Template35", "hole0": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Template38", "hole0": "Adjacent"}]}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}]}]}, "hole2": "auras", "hole1": 3, "hole0": 0}]}]}}], "index": 34}
{"beams": [{"score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -7.152531907195225e-06, -0.0006680639344267547, -1.9073486328125e-06, -0.000202178955078125, 0.0, -1.0967240996251348e-05, -0.00012099735613446683, -1.060962586052483e-05, -2.288818359375e-05, -0.25918102264404297, -0.000743865966796875, -7.080780778778717e-05, -0.0010293230880051851, -0.6530183553695679, -1.1920928244535389e-07, -0.00016426731599494815, 0.0, -0.00012122917542001233, -5.960462772236497e-07, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -0.053903818130493164, -6.198873961693607e-06, -0.008636474609375, -4.00543212890625e-05, -1.8477303456165828e-05, -4.529942543740617e-06, -0.0005555152893066406, -1.311301275563892e-06, -0.009731882251799107, -3.933898824470816e-06, -4.00543212890625e-05, -1.9073486328125e-05, -6.103515625e-05, -1.1444091796875e-05], "choice_history": [55, 124, 221, 63, 103, "Frog", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Frog", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n", "score": -0.9885322516482091, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Frog", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "hole3": "minion_type", "hole2": "ALL", "hole1": 1, "hole0": "Frog"}, {"_type": "Template10", "hole3": {"_type": "NameConstant", "value": true}, "hole2": "taunt", "hole1": 1, "hole0": 0}]}]}}], "index": 35}
{"beams": [{"score_history": [-5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -4.827859811484814e-05, -7.510157047363464e-06, 0.0, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.00020039081573486328, -9.775161743164062e-06, -1.1444091796875e-05, -6.4849853515625e-05, -0.0004520416259765625, -0.000164031982421875, -4.911301948595792e-05, -0.00031755800591781735, -7.033347174001392e-06, -1.9073486328125e-06, -0.0003114459686912596, -2.3841855067985307e-07, -0.004874706268310547, 0.0, -0.000408172607421875, 0.0, -1.3709068298339844e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -6.103515625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.010919570922851562, -0.0001773834228515625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -3.4332275390625e-05, -2.86102294921875e-05, -2.0861582015641034e-05, 0.0, -2.288818359375e-05, 0.0, -7.62939453125e-06, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -2.288818359375e-05, 0.0, -0.000125885009765625, -5.006789251638111e-06, -8.58306884765625e-05, -8.0108642578125e-05, -0.000385284423828125, -1.9073486328125e-06, -0.0003522634506225586, -0.00023553027131129056, -0.05646800994873047, -2.288818359375e-05, -0.0002536773681640625, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0007877349853515625, -1.1920928244535389e-07, -0.0033839941024780273, 0.0, -0.0012573786079883575, 0.0, -0.00035858154296875, -2.288818359375e-05, -9.5367431640625e-06, -0.000423431396484375, -3.0517578125e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.000682830810546875, -7.62939453125e-06, -0.00010347366333007812, -1.5139465176616795e-05, -0.09331393241882324, 0.0, -0.0001392364501953125, -0.0003948211669921875, -0.0001926422119140625, -0.0001201629638671875, -1.9073486328125e-06, -0.005817770957946777, -1.060962586052483e-05, -5.340576171875e-05, -6.4849853515625e-05, -1.33514404296875e-05, -0.015073814429342747, -0.0004907846450805664], "choice_history": [55, 124, 221, 63, 103, "Frost", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Frozen", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "score": -0.19951262402170045, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "FrostNova", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template4", "hole2": "MAGE", "hole1": 3, "hole0": "Frost Nova"}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "add_buff"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Buff"}, "args": [{"_type": "Template38", "hole0": "Frozen"}]}]}}], "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 36}
{"beams": [{"score_history": [-9.5367431640625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0001431601122021675, -3.0397906812140718e-05, -3.099440846199286e-06, -5.7220458984375e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.802776336669922e-05, -6.520748138427734e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.013066291809082031, -7.62939453125e-06, -4.5299530029296875e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -2.4199485778808594e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001583099365234375, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, 0.0, -0.000194549560546875, 0.0, -0.001010894775390625, -0.000152587890625, -2.288818359375e-05, -1.5497195136049413e-06, -5.185603731661104e-05, -2.503368341422174e-05, 0.0, -1.1444091796875e-05, 0.0, -7.747308700345457e-06, -5.7220458984375e-06, -1.9073486328125e-05, -1.1444091796875e-05, -2.09808349609375e-05, 0.0, -5.53131103515625e-05, 0.0, -0.05152130126953125, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -0.000133514404296875, -3.576278118089249e-07, -0.0039653778076171875, 0.0, -0.0003757476806640625, -0.0003299713134765625, -5.7220458984375e-06, -0.00023663043975830078, -2.0265579223632812e-06, -0.0013828277587890625, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -9.918212890625e-05, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -0.009055137634277344, -4.398822784423828e-05, -0.247772216796875, -3.4332275390625e-05, -9.381771087646484e-05, 0.0, -0.0001087188720703125, -1.71661376953125e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, -3.0517578125e-05, -5.924701690673828e-05, 0.0, -0.001953125, -5.7220458984375e-06, -5.7220458984375e-06, -0.000743865966796875, -1.52587890625e-05, -0.0001068115234375, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.000110626220703125, 0.0, -9.5367431640625e-06, -0.000244140625, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.000141143798828125, -2.5153160095214844e-05, -0.0007867813110351562, -0.000209808349609375, -0.005730628967285156, -0.0002002716064453125, -0.00015400777920149267, -0.0010735034011304379, -0.016773223876953125, -0.0009403228759765625, -0.005013823509216309, -4.398822784423828e-05], "choice_history": [55, 124, 221, 63, 103, "Frost", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Frost", " ", "Shock", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "1", "<EOS>", 78, 161, "Frozen", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -0.3652712115215806, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "FrostShock", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "<UNK>"}}], "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 1}}, {"_type": "Template25", "hole0": "Frozen"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 37}
{"beams": [{"score_history": [-7.62939453125e-06, -0.00064849853515625, -7.62939453125e-06, -0.00026702880859375, -2.47955322265625e-05, -0.0009048675419762731, -8.881091343937442e-05, -0.0023632049560546875, -4.1961669921875e-05, -1.33514404296875e-05, -0.00010561942326603457, -5.865095590706915e-05, -5.7220458984375e-06, -2.09808349609375e-05, -0.0005779266357421875, -0.000141143798828125, -0.00016068121476564556, -2.3841855067985307e-07, -5.789310671389103e-05, 0.0, -0.5518696308135986, -1.1920928244535389e-07, -0.0005253551062196493, 0.0, -0.00152587890625, -3.4332275390625e-05, -2.09808349609375e-05, -7.62939453125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.38581764698028564, -2.6702880859375e-05, -0.0014209747314453125, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.0003833770751953125, -3.24249267578125e-05, -3.814697265625e-06, -2.491474151611328e-05, 0.0, -3.24249267578125e-05, -6.103515625e-05, 0.0, -6.103515625e-05, -7.641315460205078e-05, -3.814697265625e-06, -0.0016527175903320312, -5.7220458984375e-06, -1.9073486328125e-06, -0.0006732940673828125, -2.6702880859375e-05, -4.76837158203125e-05, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.1961669921875e-05, 0.0, -2.6702880859375e-05, -0.0005474090576171875, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.000217437744140625, -1.454353241570061e-05, -0.0009365081787109375, -3.62396240234375e-05, -0.0111846923828125, -0.0005207061767578125, -0.0317302867770195, -8.106027235044166e-05, -0.05602455139160156, -0.0006656646728515625, -0.0032112598419189453, -2.6702880859375e-05], "choice_history": [55, 124, 221, 63, 103, "Frostbolt", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 78, 161, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -1.0555433072504101, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Frostbolt", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}, "hole3": "target_func", "hole2": "MAGE", "hole1": 2, "hole0": "Frostbolt"}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}, {"_type": "Template25", "hole0": "Frozen"}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 38}
{"beams": [{"score_history": [0.0, -1.52587890625e-05, -4.57763671875e-05, -7.62939453125e-06, -7.62939453125e-06, -0.011210784316062927, -0.04384377598762512, -0.31617382168769836, -0.040043678134679794, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -4.768370445162873e-07, -2.8967857360839844e-05, 0.0, -1.1444091796875e-05, -0.000392913818359375, -0.0003566741943359375, -0.00030548733775503933, -8.225440979003906e-06, -0.0005855560302734375, -0.001719474676065147, -2.5868414013530128e-05, -3.528532761265524e-05, -0.00022695207735523582, -2.0265579223632812e-06, -0.0004520416259765625, -3.814697265625e-05, -1.692757177806925e-05, -1.1920858014491387e-05, -5.1259885367471725e-06, -2.3841855067985307e-07, -0.0016144514083862305, -1.1324817933200393e-05, -0.0007305145263671875, -8.0108642578125e-05, -0.0001010894775390625, 0.0], "choice_history": [55, 124, 221, 63, 103, "Frostwolf", "Grunt", "Grunt", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FrostwolfGruntGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score": -0.4182068718208427, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "FrostwolfGruntGrunt", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template4", "hole2": "ALL", "hole1": 2, "hole0": "Frostwolf Grunt"}, {"_type": "Template10", "hole3": {"_type": "NameConstant", "value": true}, "hole2": "taunt", "hole1": 2, "hole0": 2}]}]}}], "index": 39}
{"beams": [{"score_history": [0.0, -2.47955322265625e-05, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00028546605608426034, -0.0010003806091845036, -0.04269422963261604, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.741813204920618e-06, -9.1552734375e-05, 0.0, -1.71661376953125e-05, -0.0014743804931640625, -0.0004940032958984375, -0.00018142042972613126, -8.225440979003906e-06, -1.71661376953125e-05, -6.783008575439453e-05, -7.867814019846264e-06, -1.3947466868557967e-05, -0.0002677185693755746, 0.0, -0.0008106231689453125, -1.9073486328125e-05, -4.768294274981599e-06, -9.536738616588991e-07, -3.063666736125015e-05, -1.1920928244535389e-07, -0.001631021499633789, -3.099436753473128e-06, -0.00072479248046875, -7.2479248046875e-05, -9.5367431640625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Goldshire", "Footman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "score": -0.05009332525855115, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "GoldshireFootman", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template4", "hole2": "ALL", "hole1": 1, "hole0": "Goldshire Footman"}, {"_type": "Template10", "hole3": {"_type": "NameConstant", "value": true}, "hole2": "taunt", "hole1": 2, "hole0": 1}]}]}}], "index": 40}
{"beams": [{"score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -6.794906312279636e-06, -2.7418097943154862e-06, -2.1219027985353023e-05, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.6954863844584906e-06, -3.0994415283203125e-05, -1.2874597814516164e-05, -0.0002040863037109375, -0.0028228759765625, -1.52587890625e-05, -2.2172822355059907e-05, -2.9325325158424675e-05, -2.0265579223632812e-06, 0.0, -4.768298822455108e-07, -7.152555099310121e-07, -8.356363105122e-05, 0.0, -0.00022231652110349387, -7.867811291362159e-06, -6.29425048828125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.152555099310121e-07, -0.015663743019104004, -0.0001137256549554877, -0.0026531219482421875, -4.76837158203125e-05, -2.5033900783455465e-06, -5.602679812000133e-05, -7.154249033192173e-07, -2.312633478140924e-05, -0.0024223250802606344, -7.426712545566261e-05, -0.0012874603271484375, -8.58306884765625e-05, -0.023004531860351562, -4.00543212890625e-05, -3.24249267578125e-05, -2.6702880859375e-05, 0.0, -0.0004901885986328125, -6.0796710386057384e-06, -0.001674652099609375, -0.006500244140625, -0.000896453857421875, -0.008702754974365234, -3.099440846199286e-06, -0.0001392364501953125, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-06, -6.80685043334961e-05, -0.00013172626495361328, -1.1920928244535389e-07, -0.0004596710205078125, -0.000522613525390625, 0.0, -4.76837158203125e-05, -5.7220458984375e-06, -0.009734498336911201, -0.0006414634990505874, -8.22540732769994e-06, -2.47955322265625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.00012969970703125, -8.463859558105469e-06, -0.010415077209472656, -1.1444091796875e-05, -0.00605010986328125, -0.000110626220703125, -0.0005694627179764211, -9.07182547962293e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Grimscale", "Oracle", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score": -0.09685214746217952, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "GrimscaleOracle", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}, "hole3": "minion_type", "hole2": "ALL", "hole1": 1, "hole0": "Grimscale Oracle"}, {"_type": "Template10", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Name", "id": "Aura"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}]}, {"_type": "Template38", "hole0": "BothPlayer"}]}]}]}, "hole2": "auras", "hole1": 1, "hole0": 1}]}]}}], "index": 41}
{"beams": [{"score_history": [-2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -5.53131103515625e-05, -0.000120751719805412, -0.000750049832277, -0.027740325778722763, -6.83054095134139e-05, -3.0517578125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -6.341933476505801e-05, -2.1696068870369345e-05, -1.0013580322265625e-05, -2.288818359375e-05, -0.6584911346435547, -8.7738037109375e-05, -0.00019621843239292502, -2.4437902538920753e-05, -4.7087669372558594e-05, -4.38690185546875e-05, -0.00012695734039880335, 0.0, -2.1219066184130497e-05, -8.344646857949556e-07, -0.008971333503723145, 0.0, -0.001201748033054173, -7.986990567587782e-06, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00019752979278564453, 0.0, -1.1444091796875e-05, -0.004726409912109375, -1.9073486328125e-06, -0.00069427490234375, 0.0, -0.006220675073564053, -6.329878669930622e-05, -2.09808349609375e-05, -0.001171112060546875, -1.9073486328125e-06, -0.002253147540614009, -3.552392445271835e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0008982419967651367, -7.43865966796875e-05, 0.0, -0.0001010894775390625, -7.62939453125e-06, -0.00037407875061035156, -1.7881377516459906e-06, -0.00012028215860482305, -1.847726889536716e-05], "choice_history": [55, 124, 221, 63, 103, "Guardian", "Of", "Kings", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -0.7155176477962186, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "GuardianOfKings", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Heal"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Template38", "hole0": "HeroSelector"}]}, "hole3": "battlecry", "hole2": "PALADIN", "hole1": 7, "hole0": "Guardian of Kings"}, {"_type": "Template11", "hole1": 6, "hole0": 5}]}]}}], "index": 42}
{"beams": [{"score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0012165057705715299, -0.00805240124464035, -0.01554206945002079, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -1.1920928244535389e-07, -4.172325134277344e-06, 0.0, -5.7220458984375e-06, -0.0022945404052734375, -0.001247406005859375, -1.4781869140279014e-05, -9.894371032714844e-06, -0.0001983642578125, -0.003442049026489258, -1.77621805050876e-05, -0.0001641377166379243, -7.939338684082031e-05, 0.0, -0.0030546188354492188, -2.288818359375e-05, -3.3378546504536644e-06, -1.6689286894688848e-06, -0.00037443137262016535, -7.033334895822918e-06, -0.00586852990090847, -1.3709036466025282e-05, -0.000148773193359375, -0.0001316070556640625, -0.13050460815429688, -7.62939453125e-06, -0.0001621246337890625, -4.38690185546875e-05, -1.71661376953125e-05, -0.0001370906684314832, -1.3828268492943607e-05, -9.918212890625e-05, -0.0020847320556640625, -0.002262115478515625, -6.866455078125e-05, 0.0, -0.04850733280181885, -0.0021923771128058434, -4.231927960063331e-05, -0.003002166748046875, -0.0001010894775390625, -1.9073486328125e-06, -0.010135054588317871, -4.768371127283899e-06, -0.0002117156982421875, -3.4332275390625e-05, -5.3524916438618675e-05, -0.03172016143798828, -0.0037769079208374023, -0.0009788274765014648, -7.82012939453125e-05, -0.0001926422119140625, -3.814697265625e-06, 0.0, -0.001455664518289268, -0.0001404285430908203, -2.6226018235320225e-05, -7.82012939453125e-05, -0.0022487640380859375, -0.0002460479736328125, -0.0004444122314453125, -1.52587890625e-05, -0.0004169940948486328, -0.0023674964904785156, -5.7220458984375e-06, -0.005710208788514137, -0.000110626220703125, -7.2479248046875e-05, -3.0517578125e-05, -0.000578761100769043, -5.53131103515625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Gurubashi", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Character", "Damaged", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Minion", "Is", "Target", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "score": -0.29241822834728026, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "GurubashiBerserker", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template4", "hole2": "ALL", "hole1": 5, "hole0": "Gurubashi Berserker"}, {"_type": "Template10", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Name", "id": "Effect"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}, "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template38", "hole0": "MinionIsTarget"}}]}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template32", "hole2": 3, "hole1": "ChangeAttack", "hole0": "Give"}, {"_type": "Template38", "hole0": "SelfSelector"}]}]}]}, "hole2": "effects", "hole1": 7, "hole0": 2}]}]}}], "index": 43}
{"beams": [{"score_history": [-3.62396240234375e-05, -0.0004978179931640625, -0.0001468658447265625, -0.001003265380859375, -1.9073486328125e-05, -3.242440288886428e-05, -0.00025784020544961095, -0.011264204047620296, -0.0011657429859042168, -0.000164031982421875, -5.340576171875e-05, -5.7220458984375e-06, -0.00019669531320687383, -1.1801719665527344e-05, 0.0, -7.05718994140625e-05, -0.00420379638671875, -3.814697265625e-06, -9.38159428187646e-05, -6.699562072753906e-05, -3.4332275390625e-05, -0.000118255615234375, -0.0001049041748046875, -4.863728827331215e-05, -4.76837158203125e-05, -0.00292205810546875, -8.20159912109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012607574462890625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003211498260498047, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -0.0005950927734375, -0.0002002716064453125, -6.103515625e-05, -1.9192511899746023e-05, -8.237361907958984e-05, -0.00024783489061519504, -0.0001220703125, -0.0009065864724107087, -0.000324249267578125, -0.0003757476806640625, -9.918212890625e-05, -0.00027630478143692017, -0.00019156932830810547, -1.9073486328125e-06, -8.7738037109375e-05, -0.000885009765625, -1.9073486328125e-06, -0.005854606628417969, -1.1682510375976562e-05, -0.0038918256759643555, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004982947721146047, -3.576278118089249e-07, -0.030530095100402832, -7.152555099310121e-07, -0.000110626220703125, -0.0010662078857421875, -1.71661376953125e-05, -0.000903010368347168, -3.576278118089249e-07, -0.0001773834228515625, -7.62939453125e-06, -3.0517578125e-05, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -8.7738037109375e-05, 0.0, -6.115436553955078e-05, -1.9073486328125e-06, -0.008742690086364746, -1.1563301086425781e-05, -0.0012302398681640625, -7.62939453125e-05, -2.9087066650390625e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -5.91278076171875e-05, 0.0, -3.325938087073155e-05, 0.0, -1.9073486328125e-06, -2.5391578674316406e-05, -1.1920928244535389e-07, -7.62939453125e-06, -2.6941299438476562e-05, -3.3378591979271732e-06, -0.08665847778320312, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -2.0980687622795813e-05, -1.9073486328125e-06, -2.8967857360839844e-05, 0.0, -2.6702880859375e-05, -0.00176239013671875, 0.0, -7.82012939453125e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -8.940695806813892e-06, -0.006096839904785156, -0.000640869140625, -0.6753215789794922, -0.0001735687255859375, -0.09948044270277023, -2.47955322265625e-05, -5.340576171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.008111953735351562, -3.814697265625e-06, -1.1444091796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00086212158203125, -9.5367431640625e-06, -0.006334424018859863, 0.0, -2.6702879040385596e-05, -5.9604644775390625e-06, -0.12920725345611572, -1.072883515007561e-05, -7.62939453125e-06, -0.020948410034179688, -1.33514404296875e-05, -0.33063527941703796, 0.0, -4.1961669921875e-05, -4.38690185546875e-05, -0.0001964569091796875, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "Hammer", "Of", "Wrath", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.damage(3, self)\n", "score": -1.4495345161208917, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "HammerOfWrath", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "Expr", "value": {"_type": "Template30", "hole0": 3}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "damage"}, "args": [{"_type": "Num", "n": 3}, {"_type": "Name", "id": "self"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 44}
{"beams": [{"score_history": [-1.9073486328125e-05, -0.0006103515625, -5.53131103515625e-05, -0.0034732818603515625, -2.6702880859375e-05, -2.109982233378105e-05, -0.0009200607310049236, -0.0537823848426342, -0.018501531332731247, -2.47955322265625e-05, -5.53131103515625e-05, -5.7220458984375e-06, -0.00042319297790527344, -1.823902130126953e-05, 0.0, -0.0009250640869140625, -0.000690460205078125, -1.9073486328125e-06, -0.00015127251390367746, -8.106231689453125e-06, -7.05718994140625e-05, -3.62396240234375e-05, -4.38690185546875e-05, -8.010857709450647e-05, -3.814697265625e-06, -0.0010986328125, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0004367828369140625, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -1.025196434056852e-05, -9.655952453613281e-06, -7.295608520507812e-05, -4.768370445162873e-07, -0.0008525848388671875, -2.47955322265625e-05, -3.814697265625e-05, -5.769562994828448e-05, -0.0002090930938720703, -0.0006247880519367754, -9.1552734375e-05, -4.494189124670811e-05, -0.000415802001953125, -4.9591064453125e-05, -5.14984130859375e-05, -1.7880229279398918e-06, -1.3709065569855738e-05, -1.9073486328125e-06, -0.0001850128173828125, -0.0008440017700195312, -1.9073486328125e-06, -0.002587556838989258, -2.2649765014648438e-06, -0.004185795318335295, -1.1920928244535389e-07, -5.7220458984375e-06, -3.814697265625e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00041198727558366954, -6.318072337307967e-06, -0.023759126663208008, -1.9073468138230965e-06, -0.0001277923583984375, -0.002223968505859375, -3.814697265625e-06, -0.005816459655761719, -7.152555099310121e-07, -0.000453948974609375, -5.7220458984375e-06, -8.20159912109375e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -7.462501525878906e-05, -1.3470649719238281e-05, -0.0032614469528198242, -0.00014019012451171875, -0.0020236968994140625, -2.86102294921875e-05, -4.017353057861328e-05, -4.410743713378906e-06, -4.9591064453125e-05, -4.38690185546875e-05, 0.0, -2.014636993408203e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -7.855892181396484e-05, -4.053115117130801e-05, -0.23036575317382812, -6.4849853515625e-05, 0.0, 0.0, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -4.9591064453125e-05, 0.0, -2.6941073883790523e-05, -7.152555099310121e-07, -3.075599670410156e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0001850128173828125, -1.9073486328125e-06, -5.7220458984375e-05, -2.3841855067985307e-07, -3.0517578125e-05, -1.9073486328125e-06, -7.867813110351562e-06, -8.070290641626343e-05, -0.010481834411621094, -3.62396240234375e-05, -1.33514404296875e-05, -9.72747802734375e-05, -0.00141143798828125, -0.0017671585083007812, 0.0, -5.53131103515625e-05, 0.0, -0.0001010894775390625, 0.0, -0.002610325813293457, -4.768370445162873e-07, -0.08006811141967773, -1.6689286894688848e-06, -0.00772857666015625, -0.0011005401611328125, -0.00010883808135986328, -5.7220458984375e-06], "choice_history": [55, 124, 221, 63, 103, "Hand", "Of", "Protection", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hand", " ", "of", " ", "Protection", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score": -0.46744280995762466, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "HandOfProtection", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "divine_shield"}], "value": {"_type": "NameConstant", "value": true}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 45}
{"beams": [{"score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.05718994140625e-05, -2.09808349609375e-05, -3.1470921385334805e-05, -0.0026181063149124384, -0.0007329100626520813, -5.7220458984375e-06, -4.9591064453125e-05, 0.0, -2.7179487005923875e-05, -0.0011082887649536133, -3.576278118089249e-07, -1.33514404296875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.0006376504898071289, -2.1457672119140625e-06, -5.7220458984375e-06, -9.918212890625e-05, -1.1444091796875e-05, -0.00012481189332902431, -2.0623201635316946e-05, -6.29425048828125e-05, -5.14984130859375e-05, -0.00014495849609375, -9.5367431640625e-06, -0.0023632049560546875, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0004913771990686655, 0.0, -9.226799011230469e-05, 0.0, -0.00058746337890625, -0.0015735626220703125, -7.62939453125e-06, -3.3855263609439135e-05, -0.00020062919065821916, -4.91138307552319e-05, -1.1444091796875e-05, -0.001018524169921875, -2.47955322265625e-05, -7.893331348896027e-05, 0.0, -0.000545501708984375, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -0.000247955322265625, 0.0, -0.012195587158203125, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0008983612060546875, -2.3841855067985307e-07, -0.002288818359375, 0.0, -0.00170135498046875, -4.9591064453125e-05, -6.687641143798828e-05, 0.0, 0.0, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000591278076171875, 0.0, -0.0058612823486328125, 0.0, -0.0024662017822265625, -0.02575206756591797, -0.005023357458412647, -5.125986263010418e-06, -0.012804141268134117, -3.6954811548639555e-06, -0.0013989186845719814, -0.0005424022674560547, 0.0, -0.020122885704040527, -9.179109838441946e-06, -1.9073486328125e-06, -0.000377655029296875, -6.29425048828125e-05, -0.00042366934940218925, 0.0, -0.0012881755828857422, -3.814697265625e-05, 0.0, -0.0001087188720703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.000782012939453125, 0.0, -0.017765045166015625, -0.0004177093505859375, -7.05718994140625e-05, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Healing", "Totem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Healing", " ", "Totem", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 141, "0", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score": -0.1269569798750183, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "HealingTotem", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template0", "hole4": [{"_type": "Num", "n": 1}], "hole3": "Heal", "hole2": "TurnEnded", "hole7": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "hole1": 2, "hole5": "MinionSelector", "hole0": 0}]}]}}], "index": 46}
{"beams": [{"score_history": [-7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -8.583032467868179e-06, -0.0002356490003876388, -0.00011944102152483538, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, -7.760523294564337e-05, -2.7894868253497407e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00435638427734375, -1.9073486328125e-06, -1.7523756469017826e-05, -4.768370445162873e-07, -5.7220458984375e-06, -2.86102294921875e-05, -5.7220458984375e-06, -0.021589908748865128, -2.384185791015625e-06, -0.0005035400390625, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000255584716796875, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.2874520507466514e-05, -6.79492904964718e-06, -1.811981201171875e-05, -1.6689286894688848e-06, -0.0002994537353515625, -0.00038909912109375, -9.5367431640625e-05, -1.6689286894688848e-06, -7.832050323486328e-05, -0.00019620107195805758, -0.0001049041748046875, -1.9073486328125e-05, -7.62939453125e-06, -7.033323527139146e-06, -3.504691630951129e-05, -2.09808349609375e-05, -7.05718994140625e-05, -1.71661376953125e-05, -0.0001468658447265625, -5.030631655245088e-05, -4.053113570989808e-06, -0.13866806030273438, -2.3841830625315197e-06, -1.9073486328125e-06, -0.0001621246337890625, -9.34600830078125e-05, -0.00014495849609375, -0.0003192424774169922, -3.504691630951129e-05, -0.0024701356887817383, 0.0, -3.0517578125e-05, -4.00543212890625e-05, -2.86102294921875e-05, -0.0008945465087890625, -5.960462772236497e-07, -0.0003070831298828125, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0006160736083984375, -0.0001621246337890625, -9.5367431640625e-06, -0.00017976760864257812, -0.0001533031463623047, -0.07198619842529297, -2.1219253540039062e-05, -0.00042724609375, -8.7738037109375e-05, -7.62939453125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -0.00042724609375, -0.0006856918334960938, 0.0, -0.00018131732940673828, -5.960462772236497e-07, -0.008662223815917969, -6.79492904964718e-06, -2.09808349609375e-05, -0.0018177032470703125, -0.001445770263671875, -0.0070362091064453125, -0.000202178955078125, -9.5367431640625e-06, -7.62939453125e-05, -0.0003719329833984375, -4.768370445162873e-07, -0.002017711056396365, -1.1920928244535389e-07, -0.0005817413330078125, -0.05415058135986328, -2.86102294921875e-05, -0.005615594331175089, -3.397406908334233e-05, -0.000152587890625, -0.0001010894775390625, -0.00010192394256591797, -9.536738616588991e-07], "choice_history": [55, 124, 221, 63, 103, "Healing", "Touch", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Healing", " ", "Touch", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "8", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "score": -0.32963033142129206, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "HealingTouch", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}, "args": [{"_type": "Num", "n": 8}]}, {"_type": "Name", "id": "self"}], "hole1": "heal", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}]}}], "index": 47}
{"beams": [{"score_history": [0.0, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.6927575416048057e-05, -0.000526554649695754, -1.9073486328125e-06, -7.62939453125e-05, -3.0517578125e-05, -0.0003989934630226344, -1.358979079668643e-05, -1.9073486328125e-06, -0.0009613037109375, -0.008932113647460938, -1.9073486328125e-06, -0.0001958416833076626, -1.0728830375228426e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -3.7192741729086265e-05, -2.2649765014648438e-06, -0.000659942626953125, -5.14984130859375e-05, -4.00543212890625e-05, 0.0, -0.0006198883056640625, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.2186049793381244e-05, -1.9073486328125e-06, -3.4451481042196974e-05, 0.0, -0.0011692047119140625, -2.288818359375e-05, -3.4332275390625e-05, -2.3841855067985307e-07, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -5.0662616558838636e-05, -2.9802276912960224e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -1.8835065930034034e-05, -0.0009655952453613281, -0.0323634147644043, -3.254413604736328e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.00012028217315673828, -2.2053514840081334e-05, -0.023433923721313477, -5.841255187988281e-06, -0.011667251586914062, -2.47955322265625e-05, 0.0, -0.0009312629699707031, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -6.29425048828125e-05, -0.0001277923583984375, -4.839897155761719e-05, -2.288818359375e-05, -0.08094942569732666, -0.00046038624714128673, -0.03805828094482422, -2.09808349609375e-05, -0.0001074075698852539, -3.576278118089249e-07, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -5.602834789897315e-06, -8.344646857949556e-07, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -2.47955322265625e-05, -4.291534423828125e-06, -0.0003444568137638271, -0.10055732727050781, -0.000141143798828125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -1.4066675248614047e-05, 0.0, -6.330013275146484e-05, 0.0, -1.9073486328125e-05, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -2.6702880859375e-05, 0.0, -2.861022494471399e-06, -0.00025865263887681067, -0.003509521484375, -1.1444091796875e-05, -2.86102294921875e-05, -0.022815704345703125, 0.0, -0.101418137550354, -0.0010166737483814359, -0.0010862350463867188, -0.005218505859375, -0.0020771026611328125, -1.9073486328125e-06, -0.0002346038818359375, -2.288818359375e-05, -0.0065631866455078125, -5.7220458984375e-06, -0.08213424682617188, -7.62939453125e-06, -0.021538734436035156, -1.9073486328125e-06, -0.000396728515625, -0.0005214214324951172, -0.016162633895874023, -0.0001850128173828125, -0.021602626889944077, -0.00014507534797303379, -0.04915967583656311, -0.004974781069904566, -0.01859845593571663, -0.00045323200174607337, -0.07334423065185547, -9.72747802734375e-05, -7.62939453125e-06, -0.00716400146484375, 0.0, -0.04483664035797119, -7.90343910921365e-05, -0.011838912963867188, -0.0014638900756835938, -5.7220458984375e-06, 0.0, -0.0075168609619140625, 0.0, -0.17562007904052734, -0.0002652140101417899, -0.03202378749847412, 0.0, -0.0011386871337890625, -0.011359214782714844, -0.0002956390380859375, -0.0001426914386684075, -6.079673767089844e-06, -0.10488700866699219, -5.91278076171875e-05, -5.340576171875e-05, -0.0001468658447265625, -1.52587890625e-05, -0.00305938720703125, 0.0, -0.011250495910644531, -0.000676369818393141, -0.008958697319030762, -2.1457672119140625e-06, -0.0035295486450195312, -3.814697265625e-06, -0.1768341064453125, -0.0001727342460071668, -0.0021610260009765625, -5.7220458984375e-06, -6.67572021484375e-05, -0.00063323974609375, 0.0, -1.9073486328125e-06, -0.0013141632080078125, 0.0, -0.0001163482666015625, 0.0, -0.00028264522552490234, -2.95634672511369e-05, -0.00023794034495949745, -7.271765298355604e-06, -0.00945580005645752, -2.2649765014648438e-06, -0.000949859619140625, -0.0049152374267578125, 0.0, -0.05339241027832031, -5.5312928452622145e-05], "choice_history": [55, 124, 221, 63, 103, "Hex", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Hex", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 225, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "frog", "<EOS>", 14, 99, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "frog", "<EOS>", "create_minion", "<EOS>", 208, 38, 127, "Null", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", 19, 125, "frog", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "score": -1.4156622842301374, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Hex", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}}], "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "cards"}, "attr": "minions"}, "attr": "<UNK>"}, "attr": "Frog"}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "frog"}, "attr": "create_minion"}, "args": [{"_type": "NameConstant", "value": "Null"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}], "value": {"_type": "Name", "id": "frog"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "<UNK>"}, "args": [{"_type": "Name", "id": "minion"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 48}
{"beams": [{"score_history": [0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.000217437744140625, -2.09808349609375e-05, -7.629365427419543e-06, -0.005023960955440998, -0.047288455069065094, -4.9591064453125e-05, -0.0003414154052734375, -3.4332275390625e-05, -0.00021326530259102583, -1.5377969248220325e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0033664703369140625, -1.9073486328125e-06, -9.298323857365176e-05, -2.1457672119140625e-06, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -0.00016116315964609385, -7.748603820800781e-06, -6.103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0041637420654296875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.0503786799963564e-05, -7.62939453125e-06, -1.9550323486328125e-05, -2.2649765014648438e-06, -0.000701904296875, -7.05718994140625e-05, -7.2479248046875e-05, -4.100715523236431e-05, -0.0002979039854835719, -0.0004865335358772427, -0.030336380004882812, -0.000324249267578125, -9.5367431640625e-06, -0.0009237175108864903, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0004990100860595703, -7.152555099310121e-07, -0.007398843765258789, 0.0, -1.9073486328125e-06, -0.0001125335693359375, -7.62939453125e-06, -1.52587890625e-05, -0.000492095947265625, -1.311301275563892e-06, -0.00144195556640625, 0.0, -0.0001125335693359375, -0.0001010894775390625, -3.24249267578125e-05, -0.0009654760360717773, -7.152555099310121e-07, -0.000240325927734375, -5.7220458984375e-06, -0.0002002716064453125, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.0002002716064453125, -1.9073486328125e-06, -0.00012636184692382812, -0.00021970272064208984, -0.07352149486541748, -4.589557647705078e-05, -0.0003070831298828125, -9.34600830078125e-05, -5.53131103515625e-05, -0.00014495849609375, -1.71661376953125e-05, -0.0001239776611328125, -0.00141143798828125, -1.7881377516459906e-06, -0.00026023387908935547, -1.6689286894688848e-06, -0.007172942161560059, -5.841247457283316e-06, -1.1444091796875e-05, -0.004093170166015625, -0.000141143798828125, -0.010885238647460938, -0.0001068115234375, -7.62939453125e-06, -1.71661376953125e-05, -0.00031948089599609375, 0.0, -0.0017552102217450738, -2.3841855067985307e-07, -0.000110626220703125, -0.0010528564453125, -1.52587890625e-05, -0.00042348421993665397, -0.0001308832288486883, -0.000171661376953125, -7.62939453125e-06, -0.004958152770996094, -3.6954811548639555e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Light", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Light", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -0.21408193830504274, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "HolyLight", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Num", "n": 2}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}], "hole1": "heal", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}]}}], "index": 49}
{"beams": [{"score_history": [-1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.556489552167477e-06, -1.3828182090946939e-05, 0.0, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, -2.002716064453125e-05, -5.7220458984375e-06, -0.0002613067626953125, -0.006977081298828125, -2.6702880859375e-05, -6.651875446550548e-05, -0.0006262828828766942, -1.9431096006883308e-05, 0.0, -0.00021419614495243877, -8.344646857949556e-07, -0.24240970611572266, -2.3841855067985307e-07, -0.0011615753173828125, -3.814697265625e-06, -9.489059448242188e-05, 0.0, -3.24249267578125e-05, -0.00025177001953125, 0.0, -3.266334533691406e-05, 0.0, 0.0, -2.288818359375e-05, 0.0, -3.814697265625e-06, -4.38690185546875e-05, -9.775161743164062e-06, -0.03271961212158203, -3.814697265625e-06, -0.0002346038818359375, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -8.440017700195312e-05, 0.0, -1.71661376953125e-05, -4.768370445162873e-07, -1.52587890625e-05, -0.0013027191162109375, -3.62396240234375e-05, -8.0108642578125e-05, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.00011932711640838534, -0.000640869140625, -6.103515625e-05, -4.00543212890625e-05, 0.0, -0.0006841421127319336, -1.490105023549404e-05, -0.00049591064453125, -0.000255584716796875, -0.000118255615234375, -1.1444091796875e-05, -2.6702880859375e-05, 0.0, -0.00030517578125, -1.966933996300213e-05, -9.584426879882812e-05, 0.0, -1.33514404296875e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.53131103515625e-05, -0.0007152557373046875, 0.0, -0.0015430450439453125, -6.0796710386057384e-06, -0.0030221939086914062, 0.0, -0.0001748797803884372, 0.0, -6.4849853515625e-05, -0.0005054473876953125, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.1961669921875e-05, -0.0001468658447265625, -1.9073486328125e-06, -0.01190495491027832, -8.344646857949556e-07, -0.006470680236816406, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0005779266357421875, -0.0002117156982421875, -0.004060044419020414, -2.3841855067985307e-07, -0.000274658203125, -9.5367431640625e-06, -0.000274658203125, 0.0, -0.06386852264404297, -5.7220458984375e-06, -9.918212890625e-05, 0.0, -0.00022137165069580078, -1.0013571227318607e-05, -0.11603069305419922, -1.9073486328125e-06, -0.027040481567382812, 0.0, -0.013841629028320312, -1.1920928244535389e-07, -0.0005731582641601562, -5.91278076171875e-05, -0.0001583099365234375, -0.0020580291748046875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.52587890625e-05, -0.000202178955078125, -0.0002803802490234375, -3.814697265625e-06, -0.002097487449645996, -4.768370445162873e-07, -0.03615856170654297, -9.417532055522315e-06, -2.09808349609375e-05, -0.0003719329833984375, -1.71661376953125e-05, -0.0004100799560546875, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.0004673004150390625, -1.1920928244535389e-07, -0.008421897888183594, -2.622600959512056e-06, -7.62939453125e-05, -0.000789642333984375, -5.7220458984375e-06, -0.009935921058058739, 0.0, -0.0018444061279296875, -5.340576171875e-05, -0.000118255615234375, -1.9073486328125e-06], "choice_history": [55, 124, 221, 63, 103, "Holy", "Nova", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 83, 176, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -0.6055772422929664, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "HolyNova", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template4", "hole2": "PRIEST", "hole1": 5, "hole0": "Holy Nova"}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "damage"}, "args": [{"_type": "Template33", "hole0": 2}, {"_type": "Name", "id": "self"}]}}], "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "target": {"_type": "Name", "id": "minion"}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "heal"}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "effective_heal_power"}, "args": [{"_type": "Num", "n": 2}]}, {"_type": "Name", "id": "self"}]}}], "iter": {"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 50}
{"beams": [{"score_history": [-2.09808349609375e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001323135511483997, -3.373566141817719e-05, -1.1086449376307428e-05, -1.9073486328125e-05, -3.62396240234375e-05, -7.62939453125e-06, -5.102156865177676e-05, -5.2690502343466505e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0038042068481445312, -5.7220458984375e-06, -1.0132780516869389e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003368842590134591, -6.079673767089844e-06, -5.340576171875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0002193450927734375, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.152555099310121e-07, 0.0, -0.00035858154296875, 0.0, -0.001354217529296875, -3.62396240234375e-05, -0.000125885009765625, -2.169608706026338e-05, -5.602836608886719e-05, -0.00017522329289931804, -1.1444091796875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.0728581401053816e-06, -1.1920928244535389e-07, -7.62939453125e-06, -0.000408172607421875, -0.00063323974609375, -7.62939453125e-06, -0.0002884864807128906, -4.52994936495088e-06, -1.2839462757110596, -9.5367431640625e-06, -1.9073486328125e-05, -7.43865966796875e-05, -4.38690185546875e-05, -3.4332275390625e-05, -0.000476837158203125, -5.960462772236497e-07, -0.002910614013671875, 0.0, -0.0006961822509765625, -1.9073486328125e-05, -1.1444091796875e-05, -0.00016236305236816406, 0.0, -0.00030517578125, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.62396240234375e-05, -3.24249267578125e-05, -9.5367431640625e-06, -8.20159912109375e-05, -3.814697265625e-06, -0.007451057434082031, -1.71661376953125e-05, -0.000133514404296875, -3.62396240234375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.4332275390625e-05, -4.76837158203125e-05, -4.1961669921875e-05, -2.3841855067985307e-07, -3.814697265625e-05, -2.3841855067985307e-07, -0.0002849102020263672, -7.62939453125e-06, -1.9073486328125e-06, -0.00029754638671875, -3.62396240234375e-05, -0.05174097418785095, -4.768360213347478e-06, -1.52587890625e-05, 0.0, -0.000370025634765625, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Holy", "Smite", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Holy", " ", "Smite", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -1.3579905677551807, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "HolySmite", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}}], "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template1", "hole2": [{"_type": "Template33", "hole0": 2}, {"_type": "Name", "id": "self"}], "hole1": "damage", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}]}}], "index": 51}
{"beams": [{"score_history": [-2.47955322265625e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024839851539582014, -0.0009966827929019928, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.940656698541716e-06, -0.00021219253540039062, -2.1457672119140625e-06, -3.814697265625e-06, -0.000827789306640625, -1.9073486328125e-06, -4.649158654501662e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -0.0001794029667507857, -1.1920928244535389e-07, -2.288818359375e-05, -0.0001125335693359375, -1.71661376953125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -0.000274658203125, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -5.6862656492739916e-05, -9.5367431640625e-06, -4.410743713378906e-06, 0.0, -0.0005550384521484375, -4.9591064453125e-05, -0.0004062652587890625, -5.006777428206988e-06, -0.00016796588897705078, -1.52587890625e-05, -3.24249267578125e-05, -0.0008860231610015035, -2.2649765014648438e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0037442445755004883, -2.8729436962748878e-05, -0.05684232711791992, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -5.5670738220214844e-05, -2.9802317840221804e-06, -0.20876789093017578, 0.0, -0.0001926422119140625, -0.0001735687255859375, 0.0, -4.25577127316501e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.00092315673828125, 0.0, -0.004569053649902344, 0.0, -0.020340919494628906, -8.797645568847656e-05, -0.00057220458984375, -1.9073486328125e-06, -0.0027341842651367188, 0.0, -0.0018787384033203125, -0.0004711151123046875, -7.62939453125e-06, 0.0, -0.000675201416015625, 0.0, -0.0001010894775390625, -0.02581787109375, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.00023162341676652431, -0.006948590278625488, -2.6702880859375e-05, -0.0024700164794921875, -0.0001926422119140625, -0.026767730712890625, -0.0024929046630859375, -0.019382476806640625, -0.009384588338434696, -1.1086437552876305e-05, -0.0018310546875, -0.0001392364501953125, -0.0021341219544410706, -2.0265579223632812e-06, -0.2927093505859375, -0.000263214111328125, -1.33514404296875e-05, 0.0, -0.015806550160050392, -0.0002915712248068303, -0.0006809234619140625, -0.0004329681396484375, -0.0032930374145507812, -0.004286495968699455, -0.0011176553089171648, -0.00635528564453125, -0.003849029541015625, -0.0021266937255859375, -7.62939453125e-06, -4.5299530029296875e-05, -0.0008220672607421875, 0.0, -1.1444091796875e-05, -0.003841400146484375, -0.000164031982421875, -7.62939453125e-06, 0.0, -0.0025420186575502157, -0.0010051727294921875, -4.6133995056152344e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -0.0023577213287353516, -5.7220458984375e-06, -0.010811805725097656, -7.748603820800781e-06, -0.00089263916015625, -1.52587890625e-05, -3.814697265625e-06, -0.007367968559265137, 0.0, -0.0001430511474609375, -3.4332275390625e-05, -0.0016562938690185547, -0.00010573863983154297, 0.0, -0.000568389892578125, -3.814697265625e-06, -7.079947681631893e-05, 0.0, -0.004805734846740961, 0.0], "choice_history": [55, 124, 221, 63, 103, "Houndmaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Houndmaster", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Taunt", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -0.7763983978788787, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Houndmaster", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "<UNK>"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"_type": "List", "elts": [{"_type": "Template27", "hole0": 2}, {"_type": "Template28", "hole0": 2}, {"_type": "Call", "func": {"_type": "Name", "id": "Buff"}, "args": [{"_type": "Template38", "hole0": "Taunt"}]}]}]}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}], "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}]}]}}], "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Num", "n": 4}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole1": 3, "hole0": 4}]}]}}], "index": 52}
{"beams": [{"score_history": [0.0, 0.0, -7.62939453125e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0003754405479412526, -0.0004243830917403102, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -4.5299530029296875e-06, -8.606909977970645e-05, -4.8160552978515625e-05, -1.33514404296875e-05, -0.14760398864746094, -0.000286102294921875, -1.8119757442036644e-05, -0.0014058351516723633, -6.627810944337398e-05, -3.576278118089249e-07, -0.003789185080677271, 0.0, -0.00014709372771903872, -1.3709036466025282e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -0.04868519306182861, -3.802741048275493e-05, -0.02044391632080078, -3.4332275390625e-05, -5.316734313964844e-05, -2.706014311115723e-05, -7.176399230957031e-05, -9.536738616588991e-07, -0.02923261560499668, -0.00019226610311307013, -0.0001201629638671875, -1.52587890625e-05, -0.0001697540283203125, -5.7220458984375e-06], "choice_history": [55, 124, 221, 63, 103, "Huffer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Huffer", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -0.2535450552989005, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Huffer", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "hole3": "minion_type", "hole2": "ALL", "hole1": 3, "hole0": "Huffer"}, {"_type": "Template10", "hole3": {"_type": "NameConstant", "value": true}, "hole2": "charge", "hole1": 2, "hole0": 4}]}]}}], "index": 53}
{"beams": [{"score_history": [-4.76837158203125e-05, -2.47955322265625e-05, -2.6702880859375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -4.768370445162873e-07, -0.00022232085757423192, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-05, -0.0001354217529296875, -8.690313552506268e-05, -1.9073486328125e-06, -0.000110626220703125, -0.0025196075439453125, -3.814697265625e-05, -5.960462772236497e-07, -2.741813204920618e-06, -2.8609534638235345e-05, -1.1920928244535389e-07, -0.014620661735534668, 0.0, -0.0013174919877201319, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.1444091796875e-05, -0.0001430511474609375, 0.0, -0.004598021507263184, -7.748603820800781e-06, -0.004077911376953125, -0.000629425048828125, 0.0, 0.0, -0.000164031982421875, 0.0, -1.1444091796875e-05, 0.0, -2.682209014892578e-05, 0.0, -0.11832010746002197, 0.0, -0.000156402587890625, -0.03186321258544922, -0.002109527587890625, -0.0002040863037109375, -6.67572021484375e-05, -3.688037395477295e-06, -3.814697265625e-06, -0.003960609436035156, -0.0039386749267578125, -0.000152587890625, -5.7220458984375e-06, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.00048065185546875, 0.0, -6.67572021484375e-05, -1.1920928244535389e-07, -6.985664367675781e-05, 0.0, -0.009861946105957031, 0.0], "choice_history": [55, 124, 221, 63, 103, "Humility", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 30, 96, 21, 130, "1", "<EOS>", 57, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score": -0.20067045859757116, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Humility", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}, "hole3": "target_func", "hole2": "PALADIN", "hole1": 1, "hole0": "Humility"}, {"_type": "Template1", "hole2": [{"_type": "BinOp", "right": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}, "attr": "calculate_attack"}}, "op": {"_type": "Sub"}, "left": {"_type": "Num", "n": 1}}], "hole1": "change_attack", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}]}}], "index": 54}
{"beams": [{"score_history": [-1.9073486328125e-06, -8.20159912109375e-05, -2.09808349609375e-05, -5.340576171875e-05, -2.288818359375e-05, -0.00037657178472727537, -0.0009055821574293077, -6.079652303014882e-05, 0.0, -7.62939453125e-06, 0.0, -0.004181027412414551, -9.918212890625e-05, 0.0, -0.004161834716796875, -0.001033782958984375, -0.0004062652587890625, -0.004724198020994663, -0.000247955322265625, -9.810924530029297e-05, -2.09808349609375e-05, -0.00020263248006813228, 0.0, -0.07937073707580566, 0.0, -0.0008851289749145508, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -8.0108642578125e-05, -1.33514404296875e-05, -0.006794095039367676, 0.0, -0.0003948211669921875, -0.0007534027099609375, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.00034332275390625, 0.0, -5.7220458984375e-06, 0.0, -0.23980486392974854, -2.741813204920618e-06, -4.1961669921875e-05, -0.04341411590576172, -1.52587890625e-05, -0.12127763032913208, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Mark", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score": -0.510048059793462, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "<UNK>Mark", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}, "hole3": "target_func", "hole2": "HUNTER", "hole1": 0, "hole0": "<UNK> Mark"}, {"_type": "Template1", "hole2": [{"_type": "Num", "n": 1}], "hole1": "set_health_to", "hole0": {"_type": "Attribute", "value": {"_type": "Name", "id": "self"}, "attr": "target"}}]}]}}], "index": 55}
{"beams": [{"score_history": [-2.09808349609375e-05, -1.33514404296875e-05, -5.340576171875e-05, -3.0517578125e-05, 0.0, -0.00027104519540444016, -0.00035124807618558407, -0.014552764594554901, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -2.50339189733495e-06, -1.3709065569855738e-05, -3.445148468017578e-05, -9.5367431640625e-06, -0.5682830810546875, -5.91278076171875e-05, -1.9431114196777344e-05, -1.9073468138230965e-06, -2.47955322265625e-05, -0.001354217529296875, -3.0517578125e-05, -0.001511216163635254, 0.0, -4.76837158203125e-05, -0.0018253326416015625, -7.62939453125e-06, 0.0, -0.0007038116455078125, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -0.00031280517578125, -3.576278118089249e-07, -3.814697265625e-06, -9.655952453613281e-06, 0.0, -0.0012054443359375, -0.0002384185791015625, -0.000133514404296875, -1.537788011773955e-05, -2.6941299438476562e-05, -1.4901099348207936e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.0132769602932967e-05, -3.11136209347751e-05, -1.71661376953125e-05, 0.0, -7.62939453125e-06, -0.0002155303955078125, -0.0041429996490478516, -1.5854835510253906e-05, -0.0018471479415893555, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0008469820022583008, -1.8954096958623268e-05, -0.02419757843017578, -3.6239478504285216e-05, -0.00026702880859375, -2.86102294921875e-05, 0.0, -0.00015437598631251603, -2.801412483677268e-05, -7.62939453125e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0007171630859375, 0.0, -0.04604935646057129, -0.007565140724182129, -0.000118255615234375, -1.71661376953125e-05, -0.0016412734985351562, 0.0, -2.6702880859375e-05, -4.00543212890625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0002689361572265625, -1.311301275563892e-06, -2.288818359375e-05, -0.0034208297729492188, -0.0003223419189453125, -0.007105459924787283, -0.0001742839813232422, -0.06927871704101562, -0.000209808349609375, -0.0003032684326171875, 0.0, -0.008629322052001953, -0.0007877347525209188, -2.0265579223632812e-06, -0.003368377685546875, -6.866455078125e-05, -1.9073486328125e-05, -9.72747802734375e-05, -2.86102294921875e-05, -9.34600830078125e-05, -1.1444091796875e-05, -0.0007081031799316406, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -1.1444091796875e-05, -0.0003986358642578125, -1.9073486328125e-06, -5.14984130859375e-05, -2.09808349609375e-05, -0.00040459632873535156, -7.2479248046875e-05, -4.768370445162873e-07, -0.0001163482666015625, -9.5367431640625e-06, -2.2649765014648438e-06, -1.311301275563892e-06, -0.0004590749158523977, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Ironforge", "Rifleman", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Ironforge", " ", "Rifleman", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -0.7759407188853444, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "IronforgeRifleman", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "<UNK>"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template37", "hole0": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}, "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template38", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template38", "hole0": "UserPicker"}}]}]}}], "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole1": 2, "hole0": 2}]}]}}], "index": 56}
{"beams": [{"score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -0.0009302341495640576, -0.0003873551613651216, -0.0019255500519648194, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.3378591979271732e-06, -0.0004391669644974172, -7.987022399902344e-06, -2.09808349609375e-05, -0.05291175842285156, -0.000118255615234375, -1.2278481335670222e-05, -1.7642965758568607e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -9.775219950824976e-06, -1.1920928244535389e-07, -6.663741078227758e-05, -1.1920928244535389e-07, -5.2689312724396586e-05, -1.0967229172820225e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -8.344646857949556e-07, -0.05846226215362549, -7.152543730626348e-06, -0.007989883422851562, -1.52587890625e-05, -4.053106749779545e-06, -3.2066785934148356e-05, -6.002592840559373e-07, -3.576272320060525e-06, -0.0013372884131968021, -1.2636104656849056e-05, -7.62939453125e-05, -1.71661376953125e-05, -7.05718994140625e-05, -3.814697265625e-06], "choice_history": [55, 124, 221, 63, 103, "Ironfur", "Grizzly", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -0.12502281992207998, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "IronfurGrizzly", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "hole3": "minion_type", "hole2": "ALL", "hole1": 3, "hole0": "Ironfur Grizzly"}, {"_type": "Template10", "hole3": {"_type": "NameConstant", "value": true}, "hole2": "taunt", "hole1": 3, "hole0": 3}]}]}}], "index": 57}
{"beams": [{"score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0005241450853645802, -0.0022647941950708628, -6.556489552167477e-06, -3.814697265625e-06, -8.96453857421875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -2.6702791728894226e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00090789794921875, -1.71661376953125e-05, -8.034398342715576e-05, -4.0650367736816406e-05, -9.655952453613281e-06, 0.0, -5.006776973459637e-06, -1.1920928244535389e-07, -0.010599493980407715, 0.0, -0.0157846137881279, -2.3841855067985307e-07, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -6.103515625e-05, -2.0265579223632812e-06, -2.8848648071289062e-05, 0.0, -0.1498488187789917, -4.4465065002441406e-05, -0.0014171600341796875, -7.62939453125e-06, -3.123283386230469e-05, 0.0, -1.1444091796875e-05, -9.72747802734375e-05, -3.814697265625e-06, -3.361688504810445e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -2.4199485778808594e-05, -1.3947389561508317e-05, -2.47955322265625e-05, -0.00015449509373866022, -1.4066696166992188e-05, -0.020565032958984375, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.24249267578125e-05, -5.340576171875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -8.106230961857364e-05, 0.0, -4.7087669372558594e-05, -2.384185791015625e-06, -3.814697265625e-05, -0.00078582763671875, -1.9073486328125e-06, -3.814697265625e-06, -9.536738616588991e-07, -4.00543212890625e-05, 0.0, -4.613399141817354e-05, -2.8252427000552416e-05, -0.00399017333984375, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-05, 0.0, -0.0034477668814361095, -0.00012611594866029918, -0.0012102127075195312, -3.4332275390625e-05, -3.814697265625e-06, 0.0, -0.000308990478515625, 0.0, -0.0021114349365234375, -3.814697265625e-06, -0.0051413774490356445, -4.053113570989808e-06, -0.0009430646896362305, -1.1920928244535389e-07, -0.016165776178240776, -0.00016057479660958052, -0.000415802001953125, -0.0003414154052734375, 0.0, -0.001247406005859375, 0.0, -0.000354766845703125, -1.1920928244535389e-07, -0.0016874074935913086, -2.384185791015625e-06, -0.010494232177734375, -0.000255584716796875, -3.0517578125e-05, -0.0002422332763671875, -5.7220458984375e-06, -0.0026208162307739258, -3.814697265625e-06, -0.007380485534667969, -0.0008449554443359375, -0.0004673004150390625, -1.1444091796875e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0009613037109375, 0.0, -0.06276798248291016, 0.0, -0.005979418754577637, -1.0609603123157285e-05, -0.0013240575790405273, -1.0251998901367188e-05, -3.62396240234375e-05, -0.0834817886352539, -3.4332275390625e-05, -6.866455078125e-05, 0.0, -0.0017852783203125, 0.0, -6.103515625e-05, 0.0, -0.0018025636672973633, -1.9073486328125e-06, -0.003979682922363281, -0.0022525787353515625, -0.0028133392333984375, -2.6702880859375e-05, -0.005481719970703125, -1.33514404296875e-05, -0.017054319381713867, -2.574920654296875e-05, -4.00543212890625e-05, -0.012301445007324219, -8.20159912109375e-05, -0.0009908676147460938, -9.5367431640625e-06, -4.6133995056152344e-05, -2.3841855067985307e-07, -0.000995635986328125, -0.0001220703125, -1.9073486328125e-06, -0.0017185211181640625, -0.000507354736328125, -0.07258760929107666, -8.451643225271255e-05, -0.0001926422119140625, -0.0015439987182617188, -1.9073486328125e-06, -0.0018310546875, -0.008351325988769531, -0.17675769329071045, -0.0014845009427517653], "choice_history": [55, 124, 221, 63, 103, "Kill", "Command", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 101, 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 209, 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 34, 118, 195, 201, 194, "x", "<EOS>", 15, 104, 11, 94, 11, 94, 19, 125, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 205, 6, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 67, 112, 15, 104, 19, 125, "<UNK>", "<EOS>", 205, 6, 208, 38, 127, "Null", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>", 221, 64, 106, 24, 160, "3", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score": -0.733901900797413, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "KillCommand", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template3", "hole4": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}, "hole3": "target_func", "hole2": "HUNTER", "hole1": 3, "hole0": "Kill Command"}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "use"}, "args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "<UNK>"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "player"}, "attr": "game"}, {"_type": "Lambda", "body": {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "ops": [{"_type": "Is"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "x"}, "attr": "card"}, "attr": "minion_type"}}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}}]}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "orelse": [{"_type": "Expr", "value": {"_type": "Template22", "hole0": 3}}], "test": {"_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "<UNK>"}}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}}]}]}}], "index": 58}
{"beams": [{"score_history": [0.0, -1.33514404296875e-05, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.009405823424458504, -0.04883825406432152, -0.34119632840156555, -0.035102203488349915, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -3.576278118089249e-07, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.00122833251953125, -0.0005092620849609375, -0.0002487597812432796, -8.463859558105469e-06, -0.0013980865478515625, -0.004451512359082699, -8.666513895150274e-05, -0.0001091899539460428, -5.316662281984463e-05, -2.0265579223632812e-06, -0.0001373291015625, -1.9073486328125e-05, -2.9921080567874014e-05, -7.152531907195225e-06, -4.9709669838193804e-05, -5.960462772236497e-07, -0.004388689994812012, -4.768370445162873e-07, -0.0004425048828125, -0.0001678466796875, -0.00025558468769304454, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kobold", "Geomancer", "Geomancer", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class KoboldGeomancerGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "score": -0.4482843024849217, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "KoboldGeomancerGeomancer", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template4", "hole2": "ALL", "hole1": 2, "hole0": "Kobold Geomancer"}, {"_type": "Template10", "hole3": {"_type": "Num", "n": 1}, "hole2": "spell_damage", "hole1": 2, "hole0": 2}]}]}}], "index": 59}
{"beams": [{"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.28361064195632935, -0.005084560252726078, -0.0005251090624369681, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -8.594989776611328e-05, 0.0, -5.7220458984375e-06, -0.0037326812744140625, -0.0003871917724609375, -0.000272714183665812, -1.2040138244628906e-05, -8.58306884765625e-05, -7.545948028564453e-05, -6.9141347012191545e-06, -1.4185851796355564e-05, -0.024538874626159668, -7.62939453125e-06, -0.005679130554199219, -3.62396240234375e-05, -6.675692930002697e-06, -6.198863957251888e-06, -4.0173512388719246e-05, -1.1086402082582936e-05, -0.018996000289916992, -3.576272320060525e-06, -0.0001430511474609375, -2.6702880859375e-05, -5.14984130859375e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Kor'kron", "Elite", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -0.3434900650594841, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Kor'kronElite", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template4", "hole2": "WARRIOR", "hole1": 4, "hole0": "Kor'kron Elite"}, {"_type": "Template10", "hole3": {"_type": "NameConstant", "value": true}, "hole2": "charge", "hole1": 3, "hole0": 4}]}]}}], "index": 60}
{"beams": [{"score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.00014530702901538461, -0.011691340245306492, -1.52587890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0001069306890713051, -2.682209014892578e-05, -9.5367431640625e-05, -0.25687694549560547, -8.392333984375e-05, -2.932548159151338e-05, -1.5497195136049413e-06, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -4.4345855712890625e-05, -3.576278118089249e-07, -8.20159912109375e-05, -0.0008258819580078125, -5.7220458984375e-06, -7.62939453125e-06, -0.0004901885986328125, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001811981201171875, -3.814697265625e-06, -2.7417858291300945e-05, -2.384185791015625e-06, -3.0040735509828664e-05, -6.794906312279636e-06, -0.0004558563232421875, -0.000843048095703125, -3.814697265625e-06, -9.930133819580078e-05, -0.0006592991412617266, -5.7220458984375e-06, 0.0, -1.8596449081087485e-05, -3.576278118089249e-07, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -4.1961669921875e-05, -0.00011264664499321952, -0.0002751349238678813, 0.0, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0006741396500729024, -0.0057451725006103516, -1.8596589143271558e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.0002295970916748047, -1.6212459740927443e-05, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -0.00019848346710205078, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0027828216552734375, -3.2782554626464844e-05, -0.03471946716308594, -0.000186920166015625, -1.3708974620385561e-05, -3.099436753473128e-06, -0.0011521474225446582, -6.794906312279636e-06, -0.002179821953177452, -0.0001050182618200779, -0.000171661376953125, -0.00042724609375, -0.33705902099609375, -2.86102294921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.00022971630096435547, -4.887569048150908e-06, -0.0039844512939453125, -0.007031440734863281, -0.001712799072265625, -0.000551580626051873, -7.402896153507754e-05, -0.0011730194091796875, -3.814697265625e-06, -0.004237584304064512, -2.288818359375e-05, -2.3841855067985307e-07], "choice_history": [55, 124, 221, 63, 103, "Leokk", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Leokk", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score": -0.6785453080849138, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Leokk", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}}], "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Num", "n": 3}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template10", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Name", "id": "Aura"}, "args": [{"_type": "Template35", "hole0": 1}, {"_type": "Template38", "hole0": "MinionSelector"}]}]}, "hole2": "auras", "hole1": 4, "hole0": 2}]}]}}], "index": 61}
{"beams": [{"score_history": [-4.38690185546875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -0.00028228759765625, -5.340576171875e-05, -0.00017237472638953477, -0.002625948516651988, -4.053113570989808e-06, 0.0, -3.814697265625e-06, 0.0, -0.0012559890747070312, -3.24249267578125e-05, -1.71661376953125e-05, -0.000133514404296875, -0.014364242553710938, -0.0005855560302734375, -0.005122646223753691, -0.0003147125244140625, -0.00029416801407933235, -1.9073486328125e-06, -4.041369538754225e-05, -1.9073486328125e-06, -0.0053043365478515625, 0.0, -0.00032806396484375, -1.9073486328125e-06, -0.0047626495361328125, 0.0, -1.9073486328125e-06, -0.00345611572265625, -5.7220458984375e-06, -3.254413604736328e-05, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001583099365234375, -0.0005855560302734375, -2.86102294921875e-05, -0.0008945465087890625, -0.0024967193603515625, -9.5367431640625e-05, 0.0, -0.00014901161193847656, -1.52587890625e-05, -1.1444091796875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.00010763233876787126, 0.0, 0.0, 0.0, -0.015958886593580246, 0.0], "choice_history": [55, 124, 221, 63, 103, "<UNK>", "Justice", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -0.059827007278272504, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "<UNK>Justice", "bases": [{"_type": "Name", "id": "WeaponCard"}], "body": [{"_type": "Template6", "hole2": "PALADIN", "hole1": 1, "hole0": "<UNK> Justice"}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Weapon"}, "args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}, {"_type": "arg", "arg": "player"}]}}]}]}}], "index": 62}
{"beams": [{"score_history": [-4.38690185546875e-05, -5.91278076171875e-05, -0.0001220703125, -9.34600830078125e-05, -0.0001468658447265625, -0.00021383940475061536, -0.0007154704653657973, -0.000577683502342552, -0.0007458598120138049, -0.0006623268127441406, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -8.82148651726311e-06, -0.0010892152786254883, -1.9073486328125e-06, -4.57763671875e-05, -0.006622314453125, -0.00070953369140625, -0.0002349356800550595, -0.005035604815930128, -0.004822731018066406, -0.0003776450757868588, -0.0027908075135201216, -0.0007394552230834961, -0.02920222282409668, -0.00142669677734375, -2.050456896540709e-05, -4.768371127283899e-06, -0.0003552436828613281, -0.0001850128173828125, -0.0018558502197265625, -3.24249267578125e-05, -0.005563843995332718, -2.13382354559144e-05, -0.05798947438597679, -5.960462772236497e-07, -0.0011904239654541016, -1.1920928244535389e-07, -0.000469207763671875, -0.0002002716064453125, -9.918212890625e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Lord", "Of", "The", "Arena", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 72, 145, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score": -0.12453372299960819, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "LordOfTheArena", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "Template4", "hole2": "ALL", "hole1": 6, "hole0": "Lord of the Arena"}, {"_type": "Template10", "hole3": {"_type": "NameConstant", "value": true}, "hole2": "taunt", "hole1": 5, "hole0": 6}]}]}}], "index": 63}
{"beams": [{"score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0001773834228515625, -1.71661376953125e-05, -9.775161743164062e-06, -4.172325134277344e-06, -1.740443622111343e-05, -9.5367431640625e-06, -5.7220458984375e-05, 0.0, -7.271760750882095e-06, -3.5762786865234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.015684127807617188, -0.0001621246337890625, -3.647804260253906e-05, -2.741813204920618e-06, -1.9073486328125e-06, -5.340576171875e-05, -9.5367431640625e-06, -7.605343853356317e-05, -3.635852044681087e-05, -7.82012939453125e-05, -0.000347137451171875, -1.9073486328125e-06, -7.62939453125e-06, -0.0016880035400390625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.1801719665527344e-05, -1.9073486328125e-06, -1.537799835205078e-05, -2.3841855067985307e-07, -0.000194549560546875, -0.0002288818359375, -2.6702880859375e-05, -1.3709068298339844e-05, -4.4941658416064456e-05, -2.5510787963867188e-05, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -3.206555265933275e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, -4.768370445162873e-07, -0.0004693269729614258, -5.841255187988281e-06, -1.9073486328125e-06, -2.288818359375e-05, -5.7220458984375e-06, -7.62939453125e-06, -7.62939453125e-06, -0.00013600854435935616, -0.014190673828125, -2.4795530407573096e-05, -2.47955322265625e-05, -9.5367431640625e-06, -2.133846101060044e-05, -2.0265579223632812e-06, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.0001010894775390625, 0.0, -0.033458709716796875, -5.245208740234375e-05, -4.9591064453125e-05, -5.7220458984375e-06, -0.00033626522053964436, -2.145764938177308e-06, -1.3113011618770543e-06, -1.1920928244535389e-07], "choice_history": [55, 124, 221, 63, 103, "Mechanical", "Dragonling", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Mechanical", " ", "Dragonling", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -0.06824775714012787, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "MechanicalDragonling", "bases": [{"_type": "Name", "id": "MinionCard"}], "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template38", "hole0": "super"}, "attr": "__init__"}, "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}}], "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Num", "n": 1}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ALL"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "COMMON"}, {"_type": "NameConstant", "value": true}]}}], "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "self"}]}}, {"_type": "Template11", "hole1": 1, "hole0": 2}]}]}}], "index": 64}
{"beams": [{"score_history": [0.0, -2.47955322265625e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.00010561384988250211, -0.0006556744920089841, -7.748602001811378e-06, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -5.364418029785156e-05, -3.075599670410156e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.009532928466796875, -0.0007534027099609375, -0.0003375437227077782, -0.0016542673110961914, -1.8477439880371094e-05, 0.0, -6.19885486230487e-06, -1.1920928244535389e-07, -0.032790303230285645, -1.1920928244535389e-07, -0.00128173828125, -0.0023813247680664062, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.0011081695556640625, -1.9073486328125e-06, -0.0043392181396484375, -1.9073486328125e-06, -0.0018481016159057617, 0.0, -0.00252819387242198, 0.0, -0.0011636014096438885, -3.814697265625e-06, -9.5367431640625e-06, -0.0004749298095703125, -0.0002918243408203125, -0.02211129665374756, -2.181529998779297e-05, -9.5367431640625e-06, 0.0, -2.86102294921875e-05, 0.0], "choice_history": [55, 124, 221, 63, 103, "Mind", "Blast", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "5", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score": -0.08380600150029238, "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "MindBlast", "bases": [{"_type": "Name", "id": "SpellCard"}], "body": [{"_type": "Template6", "hole2": "PRIEST", "hole1": 2, "hole0": "Mind Blast"}, {"_type": "Template1", "hole2": [{"_type": "Template33", "hole0": 5}, {"_type": "Name", "id": "self"}], "hole1": "damage", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}}]}]}}], "index": 65}
