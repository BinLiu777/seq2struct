{"beams": [{"score_history": [-3.4332275390625e-05, -5.340576171875e-05, -0.005135800689458847, -0.16366074979305267, -0.009060001000761986, -0.00018130417447537184, -4.600969987222925e-05, -4.410743713378906e-06, -2.0265579223632812e-05, -0.0006923675537109375, -0.00213623046875, -0.23095035552978516, -0.001198185607790947, -0.00014925003051757812, -0.0004158932133577764, -5.7220458984375e-05, -0.00021004522568546236, 0.0, -0.00018084049224853516, -1.1920922133867862e-06, -0.0232694149017334, 0.0, -0.0008622173336334527, -0.0008629633230157197, -0.0361272469162941, -1.3709068298339844e-05, 0.0, -4.1961669921875e-05, -0.001194000244140625, 0.0, -0.002355333883315325, -4.649161837733118e-06, -5.91278076171875e-05, -7.62939453125e-05, -1.9073486328125e-06, -1.3709068298339844e-05, 0.0, -7.82012939453125e-05, -0.0001087188720703125, -9.5367431640625e-06, -1.5616416931152344e-05, 0.0, -0.0001834630675148219, -1.71661376953125e-05], "score": -0.47948309759408403, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template32", "hole0": 3, "hole1": 2}], "hole0": "AcidicSwampOoze", "hole2": [{"_type": "Template6", "hole3": "Destroy", "hole6": [{"_type": "Template46", "hole0": "EnemyPlayer"}], "hole0": "Acidic Swamp Ooze", "hole2": "COMMON", "hole5": "WeaponSelector", "hole1": 2}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 332, 148, 274, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "Destroy", "<EOS>", "Weapon", "Selector", "<EOS>", 320, 93, 255, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 143, 235, "3", "<EOS>", "2", "<EOS>"]}], "index": 0}
{"beams": [{"score_history": [-0.11480712890625, -0.0001277923583984375, -3.576278118089249e-07, -4.0172799344873056e-05, -3.3020849514286965e-05, -8.342613000422716e-07, -1.537799835205078e-05, -1.2040138244628906e-05, -0.0007839202880859375, -0.0004405975341796875, -5.7220458984375e-06, -0.0002899169921875, -0.0001697540283203125, -2.6702880859375e-05, -0.000385284423828125, -7.62939453125e-06, -8.96453857421875e-05, -0.00010609064338495955, -0.00011420249938964844, -0.0003664468531496823, -0.00054168701171875, -0.001323699951171875, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.0003223419189453125, -1.9073486328125e-05, -0.009366989135742188, -7.62939453125e-06, -0.00028228759765625, -0.0005092620849609375, -3.4332275390625e-05, -9.1552734375e-05, -5.7220458984375e-05, -2.47955322265625e-05, -0.015056610107421875, -3.814697265625e-06, 0.0, -0.00029599666595458984, 0.0, -3.814697265625e-06, -0.0002593994140625, -0.000171661376953125, -0.0016433000564575195, -5.7220458984375e-06, -0.009669303894042969, -0.000156402587890625, -0.000194549560546875, -8.96453857421875e-05, -0.0057392120361328125, -0.022773941978812218, -3.814697265625e-06, -0.00018310546875, -0.0036773681640625, -0.00020599365234375, -0.0008020401000976562, -1.9073486328125e-06, -7.05718994140625e-05, -0.011492484249174595, -3.218649908376392e-06, -1.52587890625e-05, -0.0024738311767578125, -0.000385284423828125, -0.012706756591796875, -0.015820860862731934, -5.7220458984375e-06, -0.013228416442871094, -0.0002841949462890625, -0.0001621246337890625, -2.86102294921875e-05, -0.00135040283203125, -4.38690185546875e-05, -7.43865966796875e-05, -0.038636207580566406, 0.0, -0.0001678466796875], "score": -0.2883312153962265, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "effective_heal_power"}, "args": [{"_type": "Template43", "hole0": {"_type": "Template52"}, "hole1": "calculate_max_health"}]}, {"_type": "Template68"}], "hole1": "heal"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Template52"}, "attr": "taunt"}], "value": {"_type": "Template79"}}], "hole0": "AncestralHealing", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Template39"}}], "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template76"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template51"}]}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 323, 76, 194, "Ancestral", " ", "Healing", "<EOS>", 113, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 97, 327, 119, 310, "target_func", "<EOS>", 35, "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 334, 141, 145, 250, 41, "heal", "<EOS>", 321, 68, 163, 17, 156, 50, "effective_heal_power", "<EOS>", 320, 90, 249, 41, "calculate_max_health", "<EOS>", 110, 126, 155, 320, 65, 156, 41, "taunt", "<EOS>", 62]}], "index": 1}
{"beams": [{"score_history": [-2.09808349609375e-05, -0.014146804809570312, -0.00027021096320822835, -7.629378160345368e-06, -0.0003668637073133141, 0.0, -2.3126602172851562e-05, -4.0531158447265625e-06, -1.33514404296875e-05, -0.0045642852783203125, -7.2479248046875e-05, -8.511180931236595e-05, -3.600116178859025e-05, -6.198883056640625e-06, 0.0, -8.344646857949556e-07, 0.0, -0.0071260929107666016, 0.0, -0.0002613067626953125, 0.0, -0.00010037422180175781, 0.0, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -8.118152618408203e-05, 0.0, -0.0055027008056640625, -0.0005397796630859375, -0.007096290588378906, -7.62939453125e-06, -7.62939453125e-06, -0.0001087188720703125, -5.7220458984375e-06, -0.000704646110534668, -2.3841855067985307e-07, -0.02173614501953125, -0.000659942626953125, -0.016611099243164062, -0.0028400421142578125, -2.288818359375e-05, -0.002376556396484375, 0.0, -0.000118255615234375, -1.9073486328125e-06, -0.1471710205078125, -1.33514404296875e-05, -0.020325660705566406, -0.002390742301940918, -0.0004119873046875, -0.0009404420852661133, -7.62939453125e-06, -0.004546165466308594, -3.814697265625e-06, -0.2891206741333008, -1.1444091796875e-05, -0.0034666061401367188, -1.71661376953125e-05, -0.0003509521484375, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.45298099517822266, -5.7220458984375e-06, -0.008358955383300781, -0.001508949906565249, -0.00020599365234375, -0.0002866983413696289, -3.814697265625e-06, -0.00682818703353405, -1.1920928244535389e-07, -0.7210012078285217, -0.000244140625, -0.05063152313232422, -1.71661376953125e-05, -0.0011310577392578125, -1.9073486328125e-06, -0.000530242919921875, -5.7220458984375e-06, -0.2567710876464844, -0.0014952417695894837, -0.0001068115234375, -0.004508376121520996, -1.9073486328125e-06, -1.0175061225891113, -0.00019741058349609375, -0.15219688415527344, -1.71661376953125e-05, -0.0021800994873046875, -1.9073486328125e-06, -0.0006313323974609375, -3.814697265625e-06, -0.34505176544189453, -0.001456856494769454, -0.0001068115234375, -0.0043343305587768555, -1.9073486328125e-06, -0.9873218536376953, -0.0001659393310546875, -0.22920799255371094, 0.0, -0.5325717926025391, -1.9073486328125e-06, -0.059928178787231445, -2.0265558760002023e-06, -0.0008929967298172414, -1.9073486328125e-06, -5.340576171875e-05, -0.005306243896484375, -0.01172637939453125, -1.9073486328125e-06, -0.0010051727294921875, -0.0007901191711425781, 0.0, -6.29425048828125e-05, -0.0001544952392578125, -3.814697265625e-06, 0.0, -0.00022363662719726562, 0.0, -1.1444091796875e-05, -7.43865966796875e-05, 0.0, -0.0003376007080078125, -0.0001136064383899793, -1.9073486328125e-06, -0.11159992218017578, 0.0, -0.31122589111328125, 0.0, -0.1016092300415039, -3.814697265625e-06, -0.013283491134643555, 0.0, -7.05718994140625e-05, -0.0007152557373046875, -0.0041370391845703125, -1.9073486328125e-06, -0.000553131103515625, -0.00035178661346435547, 0.0, -6.4849853515625e-05, -8.7738037109375e-05, -3.814697265625e-06, 0.0, -0.0003095865249633789, 0.0, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0001468658447265625, -0.00010585783456917852, -1.9073486328125e-06, -7.43865966796875e-05, -0.0019969940185546875, -1.33514404296875e-05, -0.0004422653291840106, -1.71661376953125e-05, -0.0013141632080078125, -7.05718994140625e-05, -0.0004749298095703125, -9.72747802734375e-05, -0.0001964569091796875, -0.0001354217529296875, -0.0009899139404296875, -0.005963325500488281, -6.103515625e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.000125885009765625, -0.00022614002227783203, -9.655952453613281e-06, -6.783008575439453e-05, 0.0, -0.0001430511474609375, 0.0, -0.0003833770751953125, 0.0, -0.0022869110107421875, -5.340576171875e-05, -0.0007610321044921875, -6.866455078125e-05, 0.0, 0.0, -0.00014340877532958984, 0.0, -7.62939453125e-06, -0.000110626220703125, 0.0, -0.0004119873046875, -0.0002267358941026032, -1.9073486328125e-06, -5.7220458984375e-06, -0.0010528564453125, -9.5367431640625e-06, -0.001129150390625], "score": -5.978122424577428, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            Misha(), hearthbreaker.cards.minions.Misha()]\n        <UNK>.summon(player, player.game, len(player.minions))\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Template43", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template70"}, "attr": "cards"}, "attr": "minions"}, "attr": "hunter"}, "hole1": "Huffer"}, {"_type": "Template43", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template70"}, "attr": "cards"}, "attr": "minions"}, "attr": "hunter"}, "hole1": "Misha"}, {"_type": "Template43", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template70"}, "attr": "cards"}, "attr": "minions"}, "hole1": "Misha"}, {"_type": "Template43", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template70"}, "attr": "cards"}, "attr": "minions"}, "hole1": "Misha"}]}}, {"_type": "Template44", "hole0": {"_type": "Name", "id": "<UNK>"}, "hole2": [{"_type": "Template64"}, {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "minions"}]}], "hole1": "summon"}, {"_type": "Template44", "hole0": {"_type": "Name", "id": "card"}, "hole2": [{"_type": "Template64"}, {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "minions"}]}], "hole1": "summon"}], "hole7": [{"_type": "FunctionDef", "name": "can_use", "args": {"_type": "Template17"}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "values": [{"_type": "Template33", "hole3": "game", "hole0": {"_type": "Template46", "hole0": "super"}, "hole2": "player", "hole1": "can_use"}, {"_type": "Compare", "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}], "comparators": [{"_type": "Template72"}]}], "op": {"_type": "And"}}}]}], "hole0": "AnimalCompanion", "hole2": [{"_type": "Template14", "hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 201, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 332, 139, 204, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 335, 141, 126, 155, 320, 73, 186, "<UNK>", "<EOS>", 23, 181, 323, 90, 249, 17, 156, 17, 156, 17, 156, 54, "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 90, 249, 17, 156, 17, 156, 17, 156, 54, "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 90, 249, 17, 156, 17, 156, 54, "cards", "<EOS>", "minions", "<EOS>", "Misha", "<EOS>", 90, 249, 17, 156, 17, 156, 54, "cards", "<EOS>", "minions", "<EOS>", "Misha", "<EOS>", 145, 250, 25, 186, "<UNK>", "<EOS>", "summon", "<EOS>", 322, 107, 65, 156, 50, "game", "<EOS>", 68, 163, 25, 186, "len", "<EOS>", 320, 65, 156, 50, "minions", "<EOS>", 145, 250, 25, 186, "card", "<EOS>", "summon", "<EOS>", 322, 107, 65, 156, 50, "game", "<EOS>", 68, 163, 25, 186, "len", "<EOS>", 320, 65, 156, 50, "minions", "<EOS>", 332, 132, 170, "can_use", "<EOS>", 2, 332, 135, 192, 19, 159, 6, 321, 83, 236, 39, 255, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 69, 166, 20, 163, 25, 186, "len", "<EOS>", 320, 65, 156, 50, "minions", "<EOS>", 317, 14, 320, 111]}], "index": 2}
{"beams": [{"score_history": [-5.14984130859375e-05, -0.0001125335693359375, -4.768370445162873e-07, -4.649158654501662e-06, -2.503394853192731e-06, -2.145752659998834e-06, -0.00015079975128173828, -0.0001214742660522461, -0.003284454345703125, -0.0005702972412109375, -0.0003185272216796875, -2.145764938177308e-06, -7.95125961303711e-05, -7.748603820800781e-06, 0.0, -2.980193130497355e-06, 0.0, -0.003711700439453125, -7.62939453125e-06, -0.00106048583984375, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.0371204552939162e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-05, -3.62396240234375e-05, -0.000110626220703125, 0.0, -0.009765625, -0.000316619873046875, -0.000274658203125, -0.0001678466796875, -0.0006561279296875, -2.288818359375e-05, -0.00023363465152215213, -2.264974000354414e-06, -0.0001125335693359375, -5.7220458984375e-05, -2.09808349609375e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0002344846143387258, -0.0001678466796875, -0.0002565380127634853, 0.0, -0.0002574920654296875, -2.09808349609375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -1.1920922133867862e-06, -0.005622148513793945, 0.0, -0.00024270080029964447, -9.5367431640625e-06, -0.000217437744140625, -5.7220458984375e-06, -9.72747802734375e-05, -0.0001010894775390625, -1.9073486328125e-06, -0.0001776218123268336, -4.565611743601039e-05, -0.00027450211928226054, -2.3841855067985307e-07, -4.9591064453125e-05, -0.003231048583984375, -0.0001392364501953125, -3.24249267578125e-05, -2.372264498262666e-05, -1.2636104656849056e-05, -0.0001974105543922633, -1.1920928244535389e-07, -4.57763671875e-05], "score": -0.033010657777218455, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template44", "hole0": {"_type": "Name", "id": "minion"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 1, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}]}], "hole0": "ArcaneExplosion", "hole2": [{"_type": "Template15", "hole3": "FREE", "hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 332, 140, 205, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 131, 169, 25, 186, "minion", "<EOS>", 20, 163, 17, 156, 25, 186, "copy", "<EOS>", "copy", "<EOS>", 320, 65, 156, 17, 156, 25, 186, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 332, 145, 250, 25, 186, "minion", "<EOS>", "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "1", "<EOS>", 110]}], "index": 3}
{"beams": [{"score_history": [-0.0024166107177734375, -0.000156402587890625, -5.483612312673358e-06, -6.437280717364047e-06, -2.384185791015625e-06, -3.218574420316145e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.0001354217529296875, -0.0077304840087890625, -3.814697265625e-05, -3.6954811548639555e-06, -8.678436279296875e-05, -4.1723224057932384e-06, 0.0, -2.622600959512056e-06, 0.0, -0.02858734130859375, -1.9073486328125e-06, -0.0005913972854614258, -1.1444091796875e-05, -0.0001621246337890625, 0.0, -5.030570537201129e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-05, -3.0517576306010596e-05, -1.1920928244535389e-07, -0.0007305145263671875, -0.001102447509765625, -0.00020599365234375, -6.29425048828125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.007070179563015699, -1.1920928244535389e-07, -3.4332275390625e-05, -0.000732421875, -0.0004329681396484375, 0.0, -0.005514340475201607, -3.4450891689630225e-05, -0.0001678466796875, -0.0001201629638671875, -0.0029096603393554688, -0.0001277923583984375, -0.011293411254882812, -1.52587890625e-05, -0.000614166259765625, -2.6702880859375e-05, -6.4849853515625e-05, -0.00029659271240234375, -1.9073486328125e-06], "score": -0.07175011566526734, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Template76"}, {"_type": "Template59"}]}, "target": {"_type": "Name", "id": "c"}, "body": [{"_type": "Expr", "value": {"_type": "Template43", "hole0": {"_type": "Template64"}, "hole1": "draw"}}]}], "hole0": "ArcaneIntellect", "hole2": [{"_type": "Template15", "hole3": "FREE", "hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 332, 140, 205, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 131, 169, 25, 186, "c", "<EOS>", 20, 163, 25, 186, "range", "<EOS>", 321, 113, 102, 332, 130, 168, 37, 249, 50, "draw", "<EOS>"]}], "index": 4}
{"beams": [{"score_history": [-6.103515625e-05, -0.001071929931640625, -1.1920928244535389e-07, -5.245207830739673e-06, -4.52994936495088e-06, -5.84125473324093e-06, -2.6702880859375e-05, -5.5551525292685255e-05, -0.0029315948486328125, -0.0012340545654296875, -4.76837158203125e-05, -5.483612312673358e-06, -0.0001609325408935547, -2.0265579223632812e-06, 0.0, -4.66107958345674e-05, 0.0, -0.002239227294921875, -5.14984130859375e-05, -0.0004901885986328125, -2.86102294921875e-05, -0.0007402896881103516, 0.0, -5.078230606159195e-05, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -6.115436553955078e-05, 0.0, -0.00121307373046875, -0.000118255615234375, -0.0003662109375, -1.71661376953125e-05, -9.918212890625e-05, -1.71661376953125e-05, -0.007904887199401855, -5.14984130859375e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.0002155303955078125, -1.9073486328125e-06, -0.00034344062441959977, -7.867794920457527e-06, -0.0009479522705078125, -0.0005550384521484375, -0.003566741943359375, -3.814697265625e-05, -4.76837158203125e-05, -0.00047707516932860017, -8.344646857949556e-07, -0.0012951752869412303, 0.0, -0.0026063919067382812, -0.0006961822509765625, -7.62939453125e-06, -7.2479248046875e-05, -0.0005168914794921875, -9.5367431640625e-06, -0.003197908401489258, -0.0001373291015625, -3.62396240234375e-05, -2.09808349609375e-05, -0.000110626220703125, -9.5367431640625e-06, -0.000377655029296875, 0.0, -0.024120807647705078, -1.0967253729177173e-05, -0.0005869861925020814, 0.0, -4.1961669921875e-05, -0.0004329681396484375, -5.7220458984375e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, -1.311301275563892e-06, -0.00022351737425196916, -4.768370445162873e-07, -0.0006326246657408774, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.0001430511474609375, 0.0, -0.0008058547973632812, -3.814697265625e-06, -0.007606041617691517, 0.0, -1.9073486328125e-06, -0.000606536865234375, -1.9073486328125e-06, -0.0003814697265625, -0.0001087188720703125, -5.7220458984375e-06, 0.0, -0.0010623931884765625, 0.0, -0.007931351661682129, -4.768370445162873e-07, -0.0026940139941871166, -9.655950634623878e-06, -0.0024242401123046875, -3.814697265625e-06, -7.62939453125e-06, -0.000179290771484375, -1.9073486328125e-06, -0.00018525123596191406, -2.9802317840221804e-06, -5.340576171875e-05, -7.05718994140625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.000942230224609375, 0.0, -0.0002565383620094508, -1.5735502529423684e-05, -0.008662819862365723, -1.1920928244535389e-07, -0.000141143798828125, -0.00252532958984375, -7.62939453125e-06, -0.0023775100708007812, -1.549720582261216e-05, -0.0002002716064453125, -2.288818359375e-05, -0.0011882781982421875, -1.9073486328125e-06, -0.00021922588348388672, -9.894321920000948e-06, -0.00030262928339652717, 0.0, -0.000179290771484375, -0.00324249267578125, -0.000606536865234375], "score": -0.10584620212908646, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Template76"}, {"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 3, "hole1": "effective_spell_damage"}]}, "target": {"_type": "Name", "id": "i"}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}}, {"_type": "Template44", "hole0": {"_type": "Name", "id": "targets"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}], "hole1": "append"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "targets"}]}}, {"_type": "Template44", "hole0": {"_type": "Name", "id": "target"}, "hole2": [{"_type": "Template60"}, {"_type": "Template68"}], "hole1": "damage"}]}], "hole0": "ArcaneMissiles", "hole2": [{"_type": "Template15", "hole3": "FREE", "hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 332, 140, 205, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 131, 169, 25, 186, "i", "<EOS>", 20, 163, 25, 186, "range", "<EOS>", 321, 113, 85, 243, 50, "effective_spell_damage", "<EOS>", "3", "<EOS>", 335, 126, 155, 320, 73, 186, "targets", "<EOS>", 20, 163, 17, 156, 25, 186, "copy", "<EOS>", "copy", "<EOS>", 320, 65, 156, 17, 156, 25, 186, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 145, 250, 25, 186, "targets", "<EOS>", "append", "<EOS>", 320, 65, 156, 17, 156, 25, 186, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 126, 155, 320, 73, 186, "target", "<EOS>", 20, 163, 17, 156, 25, 186, "game", "<EOS>", "random_choice", "<EOS>", 320, 73, 186, "targets", "<EOS>", 145, 250, 25, 186, "target", "<EOS>", "damage", "<EOS>", 321, 103, 110]}], "index": 5}
{"beams": [{"score_history": [-0.019374847412109375, -0.000225067138671875, -1.1920928244535389e-07, -0.0001070497528417036, -2.694129761948716e-05, -1.868000254034996e-05, -5.53131103515625e-05, -1.1563301086425781e-05, -0.0001468658447265625, -0.0001125335693359375, -1.9073486328125e-06, -0.0001583099365234375, -4.38690185546875e-05, -7.62939453125e-06, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -3.3855299989227206e-05, -0.00019097326730843633, 0.0, -0.00035858154296875, -3.814697265625e-05, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -0.000507354736328125, -3.814697265625e-06, -0.09651768207550049, 0.0, -0.000385284423828125, -1.1444091796875e-05, -0.000202178955078125, -8.7738037109375e-05, -3.24249267578125e-05, 0.0, -1.52587890625e-05, -3.0517578125e-05, -0.0001010894775390625, -0.000141143798828125, 0.0, -1.52587890625e-05, 0.0, -1.0967253729177173e-05, 0.0, -0.0004119873046875, -5.340576171875e-05, -0.0001277923583984375, -0.00022351741790771484, 0.0, -0.000911712646484375, -1.9073486328125e-05, -6.866455078125e-05, -7.62939453125e-06, -4.1961669921875e-05, -4.410743713378906e-06, -1.2874520507466514e-05, -3.24249267578125e-05, -0.0002880096435546875, -1.1444091796875e-05, -7.43865966796875e-05, -9.429454075871035e-05, -1.1920928244535389e-07, -0.0024269791319966316, 0.0, -1.52587890625e-05], "score": -0.12397976781537778, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 2, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}], "hole0": "ArcaneShot", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Template50"}, "attr": "find_spell_target"}}], "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template60"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template51"}]}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 323, 76, 194, "Arcane", " ", "Shot", "<EOS>", 103, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 97, 327, 119, 310, "target_func", "<EOS>", 17, 156, 40, "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 145, 250, 41, "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "2", "<EOS>", 110]}], "index": 6}
{"beams": [{"score_history": [-1.1444091796875e-05, -7.2479248046875e-05, -0.00010239553375868127, -3.576214658096433e-05, -4.613332566805184e-05, -1.4424300388782285e-05, -1.692770456429571e-05, -7.665147859370336e-05, -8.58306884765625e-05, -0.0058994293212890625, -0.0001735687255859375, -1.9073468138230965e-06, -9.775161743164062e-06, -3.576278118089249e-07, 0.0, -2.4199245672207326e-05, 0.0, -0.03292393684387207, 0.0, -0.003502433653920889, 0.0, -0.0002700089826248586, 0.0, -8.392333984375e-05, -0.0002956390380859375, -0.000629425048828125, -1.4305104514278355e-06, -0.0004082918167114258, -1.4305104514278355e-06, 0.0, -0.0023653507232666016, 0.0], "score": -0.04705315641484731, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "model_output": {"_type": "Template1", "hole3": "create_weapon", "hole6": [{"_type": "Template36", "hole0": "Weapon", "hole2": 2, "hole1": 5}], "hole0": "ArcaniteReaper", "hole2": [{"_type": "Template14", "hole0": "Arcanite Reaper", "hole2": "WARRIOR", "hole1": 5}], "hole4": "player", "hole1": "WeaponCard"}, "choice_history": [121, 198, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 332, 139, 204, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 332, 144, 241, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"]}], "index": 7}
{"beams": [{"score_history": [-0.0001163482666015625, -6.29425048828125e-05, -3.3378546504536644e-06, -7.271765298355604e-06, -1.1920201359316707e-07, -4.57763671875e-05, -3.063678741455078e-05, -0.0013103485107421875, -0.0001773834228515625, -7.62939453125e-06, -3.4332275390625e-05, -0.0002231597900390625, -3.0517578125e-05, -7.82012939453125e-05, -6.103515625e-05, -0.0002288818359375, -3.790783375734463e-05, -2.0265579223632812e-06, -0.017927169799804688, -0.0003204345703125, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0010318756103515625, -7.62939453125e-06, -0.0009508132934570312, 0.0, -0.0019922256469726562, -4.1961669921875e-05, -0.0006313323974609375, -0.000392913818359375, -0.00014495849609375, 0.0, -0.0001316070556640625, -5.7220458984375e-05, -0.0006923675537109375, -0.016180038452148438, 0.0, -4.017353057861328e-05, 0.0, -2.4676293833181262e-05, 0.0, -7.62939453125e-06, -0.0001125335693359375, -0.0005359649658203125, -9.655952453613281e-06, 0.0, -0.0026340484619140625, -1.52587890625e-05, -0.0002346038818359375, -0.000682830810546875, -0.000522613525390625, -0.025482619181275368, -0.0001811981201171875, -3.814697265625e-05, -0.0011157989501953125], "score": -0.07464584073068181, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template68"}], "hole1": "die"}], "hole0": "Assassinate", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Template50"}, "attr": "find_enemy_minion_spell_target"}}], "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template67"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template51"}]}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 323, 76, 194, "Assassinate", "<EOS>", 109, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 97, 327, 119, 310, "target_func", "<EOS>", 17, 156, 40, "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 145, 250, 41, "die", "<EOS>", 320, 110]}], "index": 8}
{"beams": [{"score_history": [-0.005316734313964844, -0.000247955322265625, -0.000110626220703125, -0.00084686279296875, -7.43865966796875e-05, -0.00023209804203361273, -0.00043836544500663877, -3.814697265625e-06, -0.001033782958984375, -0.00022125244140625, -0.0010833740234375, -0.0001735687255859375, -0.009675383567810059, -1.4066675248614047e-05, -0.0002459285024087876, -2.7418097943154862e-06, -0.0038410425186157227, -8.7738037109375e-05, -0.0022430419921875, 0.0, -0.001261114957742393, 0.0, -0.017145156860351562, -0.10313034057617188, -2.09808349609375e-05, -0.00824880599975586, -1.9073486328125e-05, -0.0012836456298828125, -0.000392913818359375, -0.00049591064453125, -0.00019073486328125, -0.0029261112213134766, -1.1444091796875e-05, -0.01239013671875, -0.0003204345703125, -0.0007495880126953125, -0.0001621246337890625, -0.000507354736328125, -0.00042724609375, -0.24199962615966797, 0.0, -0.000408172607421875, 0.0, -0.0038585662841796875, -2.2649765014648438e-06, -0.002308829454705119, 0.0, -0.006411552429199219, -0.06890583038330078, -3.814697265625e-06, -0.01673412322998047, -3.814697265625e-06, -9.1552734375e-05, -5.7220458984375e-06, -0.0009002685546875, -9.5367431640625e-06, -0.0012592070270329714, -3.24249267578125e-05, -0.033423423767089844, -0.000507354736328125, -0.0001049041748046875, -3.814697265625e-06, -0.005129814147949219, -3.814697265625e-06, -0.003832101821899414, -0.0010318756103515625, -0.0011119842529296875, -0.0005550384521484375, -2.47955322265625e-05, -1.9073486328125e-06, -0.001148223876953125, -0.0025196075439453125, -0.00023651123046875, -4.57763671875e-05, -1.1444091796875e-05, -0.000255584716796875, -0.0037542323116213083, 0.0, -6.4849853515625e-05, -0.0003814697265625, -4.9591064453125e-05, -1.33514404296875e-05, -6.651866715401411e-05, -2.3841855067985307e-07, -0.001431107404641807, 0.0, -1.71661376953125e-05, -3.62396240234375e-05], "score": -0.5742739310996683, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Backstab", "body": [{"_type": "Template0", "hole3": "FREE", "hole6": "find_minion_spell_target", "hole7": "filter_func", "hole8": {"_type": "Lambda", "args": {"_type": "Template26", "hole0": "target"}, "body": {"_type": "BoolOp", "values": [{"_type": "Compare", "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "health"}, "ops": [{"_type": "Eq"}], "comparators": [{"_type": "Template43", "hole0": {"_type": "Name", "id": "target"}, "hole1": "calculate_max_health"}]}, {"_type": "Template43", "hole0": {"_type": "Name", "id": "target"}, "hole1": "spell_targetable"}], "op": {"_type": "And"}}}, "hole0": "Backstab", "hole2": "ROGUE", "hole5": {"_type": "Template50"}, "hole4": "target_func", "hole1": 0}, {"_type": "FunctionDef", "name": "use", "args": {"_type": "Template17"}, "body": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 2, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}]}], "bases": [{"_type": "Template65"}]}, {"_type": "Template55_stmt_seq"}]}, "choice_history": [120, 185, 333, 129, 165, "Backstab", "<EOS>", 320, 108, 333, 136, 197, "Backstab", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 40, "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 22, 180, 4, 229, "target", "<EOS>", 19, 159, 6, 321, 69, 166, 17, 156, 25, 186, "target", "<EOS>", "health", "<EOS>", 317, 8, 320, 90, 249, 25, 186, "target", "<EOS>", "calculate_max_health", "<EOS>", 90, 249, 25, 186, "target", "<EOS>", "spell_targetable", "<EOS>", 132, 170, "use", "<EOS>", 2, 333, 141, 145, 250, 41, "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "2", "<EOS>", 110, 147]}], "index": 9}
{"beams": [{"score_history": [-0.000911712646484375, -0.000118255615234375, -0.0001817776501411572, -5.435943239717744e-05, -0.00030703714583069086, -4.863739013671875e-05, -2.8552021831274033e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0003643035888671875, -0.000560760498046875, -0.0006084442138671875, -1.168244216387393e-05, -8.034706115722656e-05, -0.0006047487258911133, -4.00543212890625e-05, -0.00020742416381835938, -5.7220458984375e-06, -2.9801929485984147e-05, -3.814697265625e-06, -0.02201080322265625, 0.0, -0.0002980232238769531, 0.0, -0.0004425048828125, -7.62939453125e-06, 0.0, -0.00015163329953793436, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -8.427952707279474e-05, -0.0006618499755859375, -0.06449317932128906, -0.0019207000732421875, -0.1817169189453125, -1.71661376953125e-05, -4.57763671875e-05, -5.7220458984375e-06, -0.006954193115234375, -0.004837632179260254, -2.09808349609375e-05, -0.005429625511169434, -1.52587890625e-05, -0.0022029876708984375, 0.0, -5.7220458984375e-06, -0.000141143798828125, -0.0006389617919921875, -0.0005379915237426758, -1.9073486328125e-06, -0.002374783158302307, -3.814697265625e-06], "score": -0.29920298197339434, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Expr", "value": {"_type": "Template37", "hole0": {"_type": "Template52"}, "hole2": 4, "hole1": "change_attack"}}, {"_type": "Expr", "value": {"_type": "Template37", "hole0": {"_type": "Template52"}, "hole2": 4, "hole1": "increase_health"}}], "hole0": "BlessingOfKings", "hole2": [{"_type": "Template11", "hole3": "target_func", "hole0": "Blessing of Kings", "hole2": "PALADIN", "hole4": {"_type": "Template39"}, "hole1": 4}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 332, 138, 203, "Blessing", " ", "of", " ", "Kings", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 35, "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 334, 141, 130, 168, 34, 243, 41, "change_attack", "<EOS>", "4", "<EOS>", 130, 168, 34, 243, 41, "increase_health", "<EOS>", "4", "<EOS>"]}], "index": 10}
{"beams": [{"score_history": [-0.000606536865234375, -0.0001678466796875, -7.903263758635148e-05, -5.3643991122953594e-05, -0.00018904806347563863, -3.814697265625e-06, -4.528352292254567e-06, -0.0001201629638671875, -1.9073486328125e-06, -0.0002269744873046875, -4.00543212890625e-05, -5.7220458984375e-06, -6.103515625e-05, -0.0008716583251953125, -0.0001068115234375, -0.0001010894775390625, -0.0001220703125, -0.0011196136474609375, -6.079655122448457e-06, -0.0011365681421011686, -0.00011157965491292998, -0.00014221668243408203, -0.000740981544367969, -1.9073486328125e-06, -0.000156402587890625, -0.0003814697265625, -3.814697265625e-06, -0.0035066604614257812, -1.9073486328125e-06, -0.00010049335105577484, -1.9073486328125e-06, -0.024119993671774864, 0.0, -1.9073486328125e-05, -8.96453857421875e-05, -0.0002307891845703125, -3.62396240234375e-05, -0.000354766845703125, 0.0, -0.03444099426269531, -0.0001583099365234375, 0.0, -0.0007536407210864127, 0.0, -2.09808349609375e-05, -0.0003204345703125, -1.52587890625e-05, -2.2768930648453534e-05, -2.0265579223632812e-06, -0.0001010894775390625, -0.000881195068359375, -0.07552146911621094, -0.0001430511474609375, -9.5367431640625e-06, -0.000820159912109375, -9.34600830078125e-05, -0.02400684356689453, -4.57763671875e-05, -0.011530807241797447, -3.814697265625e-06], "score": -0.18391566566742767, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Expr", "value": {"_type": "Template37", "hole0": {"_type": "Template52"}, "hole2": 3, "hole1": "change_attack"}}], "hole0": "BlessingOfMight", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Template39"}}], "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template60"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template51"}]}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 323, 76, 194, "Blessing", " ", "of", " ", "Might", "<EOS>", 103, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 97, 327, 119, 310, "target_func", "<EOS>", 35, "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 130, 168, 34, 243, 41, "change_attack", "<EOS>", "3", "<EOS>"]}], "index": 11}
{"beams": [{"score_history": [-7.62939453125e-06, -2.47955322265625e-05, -0.007739320397377014, -0.004328066948801279, -1.1920928244535389e-07, -1.4304987416835502e-06, -3.933906555175781e-06, -8.988380432128906e-05, -0.000110626220703125, -0.0019378662109375, -0.00020599365234375, -0.0005162813467904925, -3.230565198464319e-05, -2.2649765014648438e-06, 0.0, -0.00030136111308820546, 0.0, -0.0009002685546875, -1.9073486328125e-06, -0.00012230873107910156, 0.0, -0.0001697540283203125, -0.0002918243408203125, -0.0002651214599609375, 0.0, -1.33514404296875e-05, 0.0, -0.0004998445510864258, 0.0, -3.62396240234375e-05, 0.0, -7.641315460205078e-05, 0.0, -3.0517578125e-05, -0.0021457672119140625, -9.5367431640625e-06, -1.8000580894295126e-05, 0.0, -7.843970524845645e-05, 0.0], "score": -0.019961173917174335, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template32", "hole0": 3, "hole1": 2}], "hole0": "BloodfenRaptor", "hole2": [{"_type": "Template10", "hole3": "minion_type", "hole0": "Bloodfen Raptor", "hole2": "FREE", "hole4": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "hole1": 2}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 332, 137, 202, "Bloodfen", " ", "Raptor", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 17, 156, 25, 186, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 143, 235, "3", "<EOS>", "2", "<EOS>"]}], "index": 12}
{"beams": [{"score_history": [-0.000240325927734375, -0.0001163482666015625, -0.00038211196078918874, -1.3232229321147315e-05, -2.0965933799743652e-05, -1.71661376953125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.000385284423828125, -0.0007915496826171875, -0.0009288447326980531, -8.20159912109375e-05, -0.0004213159263599664, -7.05718994140625e-05, -0.020303726196289062, -3.814697265625e-06, -0.001003265380859375, 0.0, -0.00042736477917060256, 0.0, -0.0003452301025390625, -0.000133514404296875, -0.000213623046875, -0.00011813575110863894, -1.9073486328125e-06, -0.00372314453125, -0.0021877288818359375, -0.0007419586181640625, -1.33514404296875e-05, -0.00019073486328125, -3.814697265625e-06, -0.00021779535745736212, -2.0265579223632812e-06, -0.0006542205810546875, -1.33514404296875e-05, -0.00116729736328125, -0.002779960399493575, -3.814697265625e-06, -3.24249267578125e-05, -0.0006465911865234375, -9.918212890625e-05, -0.000179290771484375, -0.000743865966796875, -9.5367431640625e-06, -7.62939453125e-06, -0.0026750564575195312, -5.7220458984375e-06, -0.014490127563476562, 0.0, -0.0006051063537597656, -2.6702880859375e-05], "score": -0.05728652703510306, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "For", "iter": {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Expr", "value": {"_type": "Template37", "hole0": {"_type": "Name", "id": "minion"}, "hole2": 3, "hole1": "change_temp_attack"}}]}], "hole0": "Bloodlust", "hole2": [{"_type": "Template14", "hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 332, 139, 204, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 131, 169, 25, 186, "minion", "<EOS>", 17, 156, 50, "minions", "<EOS>", 332, 130, 168, 34, 243, 25, 186, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"]}], "index": 13}
{"beams": [{"score_history": [-7.62939453125e-06, -2.86102294921875e-05, -0.00011085860023740679, -5.722038622479886e-06, -2.2649765014648438e-06, -1.192074705613777e-07, -5.7220458984375e-06, -1.9073486328125e-06, -0.000396728515625, -0.0010662078857421875, -0.0001888275146484375, -4.9947491788771003e-05, -2.6702880859375e-05, -1.5377996533061378e-05, -9.5367431640625e-06, -0.00017104788275901228, 0.0, -0.010150909423828125, 0.0, -0.0001316070556640625, -9.5367431640625e-06, -0.0047760009765625, -0.03938484191894531, -0.000133514404296875, -5.7220458984375e-06, -0.0067903995513916016, -3.4332275390625e-05, -0.008159518241882324, -8.20159912109375e-05, -7.069110870361328e-05, 0.0, -1.7642974853515625e-05, 0.0, -0.0004253387451171875, -0.000331878662109375, -0.000141143798828125, -2.622604142743512e-06, -7.152555099310121e-07, -5.50746735825669e-05, -2.3841855067985307e-07, -0.005177735351026058, -5.7220458984375e-06, -0.0013275146484375], "score": -0.0793019276675011, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template27", "hole3": {"_type": "Template79"}, "hole0": 2, "hole2": "charge", "hole1": 1}], "hole0": "BluegillWarrior", "hole2": [{"_type": "Template10", "hole3": "minion_type", "hole0": "Bluegill Warrior", "hole2": "COMMON", "hole4": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}, "hole1": 2}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 332, 137, 202, "Bluegill", " ", "Warrior", "<EOS>", "2", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 17, 156, 25, 186, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 142, 230, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 62]}], "index": 14}
{"beams": [{"score_history": [-0.000141143798828125, -0.000324249267578125, -6.6756979322235566e-06, -6.937813304830343e-05, -9.175186278298497e-06, -3.933906555175781e-06, -0.0001703500747680664, -0.000194549560546875, -0.0006694793701171875, -3.4332275390625e-05, -0.0001697540283203125, -0.016641616821289062, -0.000354766845703125, -0.00095367431640625, -4.00543212890625e-05, -0.0001621246337890625, -1.1920928244535389e-07, -3.4332275390625e-05, -0.0008411407470703125, -5.53131103515625e-05, -0.001346588134765625, -2.288818359375e-05, -0.000213623046875, -0.000339508056640625, -0.0003108978271484375, -0.011766433715820312, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -0.00013363361358642578, 0.0, -1.9073486328125e-05, -4.57763671875e-05, -3.24249267578125e-05, -4.363059997558594e-05, 0.0, -5.724083166569471e-06, 0.0], "score": -0.03520023464033528, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template32", "hole0": 1, "hole1": 1}], "hole0": "Boar", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "Template42", "hole0": "BEAST"}], "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template60"}, {"_type": "Template48"}, {"_type": "Template47"}, {"_type": "Template75"}]}}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 324, 76, 194, "Boar", "<EOS>", 103, 95, 94, 112, 327, 118, 248, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 143, 235, "1", "<EOS>", "1", "<EOS>"]}], "index": 15}
{"beams": [{"score_history": [-0.0042858123779296875, -7.2479248046875e-05, -5.483612312673358e-06, -5.4597840062342584e-05, -6.555812433362007e-06, -6.29425048828125e-05, -3.814697265625e-06, -8.0108642578125e-05, -0.0001430511474609375, 0.0, -1.9073486328125e-05, -8.58306884765625e-05, -1.71661376953125e-05, -9.918212890625e-05, -2.288818359375e-05, -1.1444091796875e-05, -8.344646857949556e-07, -1.1920928244535389e-07, -0.020483970642089844, -2.6702880859375e-05, 0.0, 0.0, 0.0, -8.368489216081798e-05, 0.0, -0.010283231735229492, 0.0, -0.001617431640625, -0.0001373291015625, -6.29425048828125e-05, -4.1961669921875e-05, -0.0006237030029296875, 0.0, -7.82012939453125e-05, -1.33514404296875e-05, -0.000225067138671875, -0.0052967071533203125, -2.0265579223632812e-06, -6.508827209472656e-05, 0.0, -5.507469177246094e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.647804260253906e-05, 0.0, -0.0049304962158203125, -0.0045566558837890625, -0.04171562194824219, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -0.0003681182861328125, -0.017724156379699707, 0.0, -0.004670342430472374, -1.9073486328125e-06, -0.0043392181396484375, -0.00043487548828125, -9.72747802734375e-05, -0.12460446357727051, -5.7220458984375e-06, -7.43865966796875e-05, -0.036698341369628906, -0.00028228759765625, -0.01632511429488659, -4.935264587402344e-05], "score": -0.3010837614411841, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Expr", "value": {"_type": "Template37", "hole0": {"_type": "Template52"}, "hole2": 2, "hole1": "change_attack"}}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template30", "hole0": "<UNK>"}], "hole1": "add_buff"}], "hole0": "Charge", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Template50"}, "attr": "find_friendly_minion_spell_target"}}], "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template61"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Template51"}]}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 323, 76, 194, "Charge", "<EOS>", 104, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 97, 327, 119, 310, "target_func", "<EOS>", 17, 156, 40, "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 334, 141, 130, 168, 34, 243, 41, "change_attack", "<EOS>", "2", "<EOS>", 145, 250, 41, "add_buff", "<EOS>", 320, 81, 232, "<UNK>", "<EOS>"]}], "index": 16}
{"beams": [{"score_history": [-6.4849853515625e-05, -2.47955322265625e-05, -0.15789195895195007, -0.003576907329261303, -1.6689286894688848e-06, -3.576233211788349e-07, -4.649158654501662e-06, -2.193449836340733e-05, -9.34600830078125e-05, -0.008679389953613281, -0.00063323974609375, -0.0001264730526600033, -1.3709068298339844e-05, -7.152555099310121e-07, 0.0, -0.001414658036082983, 0.0, -0.00611722469329834, 0.0, -1.9788742065429688e-05, 0.0, -0.0002463854616507888, 0.0, -3.62396240234375e-05, -0.0003719329833984375, -3.814697265625e-06, -1.192074705613777e-07, 0.0, -7.24771452951245e-05, -2.0265579223632812e-06], "score": -0.17941877618363833, "inferred_code": "class <UNK>Yeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template32", "hole0": 4, "hole1": 5}], "hole0": "<UNK>Yeti", "hole2": [{"_type": "Template14", "hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 4}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "<UNK>", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 332, 139, 204, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 143, 235, "4", "<EOS>", "5", "<EOS>"]}], "index": 17}
{"beams": [{"score_history": [-0.0001983642578125, -5.53131103515625e-05, -1.2516897186287679e-05, -0.00020466548448894173, -2.3364671505987644e-05, -0.000102996826171875, -3.814697265625e-05, -0.0001049041748046875, -0.0047054290771484375, -8.96453857421875e-05, -8.463859558105469e-06, -3.814697265625e-06, -0.00015962112229317427, 0.0, -0.0011944770812988281, 0.0, -0.0018856525421142578, -5.7220458984375e-06, -4.1961669921875e-05, 0.0, -0.00013089146523270756, 0.0, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -4.255703970557079e-05, -2.0265579223632812e-06, -0.0004520416259765625, -0.0057315826416015625, -0.00090789794921875, -9.5367431640625e-06, -3.814697265625e-05, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.000141143798828125, -0.00035511344322003424, 0.0, -0.004672050476074219, 0.0, -0.0002846393035724759, 0.0, -0.008040428161621094, 0.0, -9.1552734375e-05, -1.1444091796875e-05, -0.000164031982421875, -1.9073486328125e-06, -0.0001125335693359375, -0.00031149378628470004, 0.0, -0.4839209318161011, 0.0, -0.0004434549482539296, 0.0], "score": -0.5148301660392463, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Expr", "value": {"_type": "Template37", "hole0": {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "hero"}, "hole2": 2, "hole1": "change_temp_attack"}}, {"_type": "Expr", "value": {"_type": "Template37", "hole0": {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "hero"}, "hole2": 2, "hole1": "increase_armor"}}], "hole0": "Claw", "hole2": [{"_type": "Template15", "hole3": "FREE", "hole0": "Claw", "hole2": "DRUID", "hole1": 1}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 332, 140, 205, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 334, 141, 130, 168, 34, 243, 17, 156, 50, "hero", "<EOS>", "change_temp_attack", "<EOS>", "2", "<EOS>", 130, 168, 34, 243, 17, 156, 50, "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>"]}], "index": 18}
{"beams": [{"score_history": [-5.91278076171875e-05, -0.4542808532714844, -6.7949122239951976e-06, -2.1457672119140625e-06, -5.36041334271431e-05, -5.7220458984375e-06, -1.919269561767578e-05, -0.0002841949462890625, -0.0060882568359375, -0.0002956390380859375, -1.1920928955078125e-06, -2.47955322265625e-05, -9.536597644910216e-07, 0.0, -0.026691675186157227, -0.0001678466796875, -2.6702880859375e-05, 0.0, -1.4185883628670126e-05, 0.0, -3.814697265625e-06, -9.34600830078125e-05, -2.86102294921875e-05, -2.2649765014648438e-06, -2.0265579223632812e-06, -0.1474132537841797, -0.0005092620849609375, -0.6233615875244141, -0.009074211120605469, -0.0247568991035223, -5.7220458984375e-06, -0.9171361923217773, -0.051410675048828125, -0.0005256260628812015, -0.007712528109550476, -0.3793623447418213, -1.1920928244535389e-07, -0.010993003845214844, -0.0002079010009765625, -0.000213623046875, -1.9073486328125e-05, -0.0021822452545166016, -2.0265579223632812e-06, -0.009326934814453125, -0.0009937286376953125, -4.38690185546875e-05, 0.0, -5.7220458984375e-05, 0.0, -0.003706812858581543, -2.288818359375e-05, -0.0006822342402301729, -1.9073486328125e-06, -5.7220458984375e-06, -0.0003414154052734375, 0.0, -3.24249267578125e-05, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -1.0728830375228426e-06, -0.0005209443042986095, -8.344650268554688e-06, -0.0007353090913966298, -0.0002498626708984375, -6.866455078125e-05, -0.0022487640380859375, -1.9073486328125e-06, -0.0003070831298828125, 0.0, -0.0007730202050879598, -2.3841574147809297e-05, -0.0005746588576585054, 0.0, -0.000396728515625, -0.0003490447998046875, -3.814697265625e-06, -4.9591064453125e-05, -0.00048089027404785156, -2.3841855067985307e-07, -0.5033826231956482, 0.0, -0.0001621246337890625], "score": -3.188640724820594, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import damage\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "ImportFrom", "level": 0, "module": "hearthbreaker.cards.minions.druid", "names": [{"_type": "alias", "name": "damage"}]}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template44", "hole0": {"_type": "Name", "id": "minion"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 2, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}]}], "hole0": "Cleave", "hole2": [{"_type": "Template14", "hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 332, 139, 204, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 334, 141, 134, 175, "hearthbreaker.cards.minions.druid", "<EOS>", 311, 306, "damage", "<EOS>", "0", "<EOS>", 131, 169, 25, 186, "minion", "<EOS>", 20, 163, 17, 156, 25, 186, "copy", "<EOS>", "copy", "<EOS>", 320, 65, 156, 17, 156, 25, 186, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 332, 145, 250, 25, 186, "minion", "<EOS>", "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "2", "<EOS>", 110]}], "index": 19}
{"beams": [{"score_history": [-0.0007801055908203125, -0.000102996826171875, -4.172324224782642e-06, -3.099436753473128e-06, -8.701812475919724e-06, -3.635883331298828e-05, -0.0003724098205566406, -0.0030498504638671875, -0.00041961669921875, -0.0001220703125, -2.384185791015625e-06, -1.9073486328125e-06, -2.0861578377662227e-05, -2.0265579223632812e-06, -0.038555264472961426, -3.62396240234375e-05, -0.00010752677189884707, 0.0, -0.00034461217001080513, 0.0, -2.09808349609375e-05, -8.7738037109375e-05, -2.6702880859375e-05, -1.1563301086425781e-05, 0.0, -0.031905174255371094, -9.1552734375e-05, -0.009214401245117188, -0.0001049041748046875, -0.0001201629638671875, -2.288818359375e-05, -0.0004576120700221509, -2.384185791015625e-06, -0.000255584716796875, -0.0003223419189453125, -1.71661376953125e-05, -1.9073486328125e-05, -1.1444091796875e-05, 0.0, -0.00045120716094970703, -2.09808349609375e-05, -0.0001521109661553055, 0.0, -9.5367431640625e-06, -0.0024662017822265625, 0.0, -9.918212890625e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -2.86102294921875e-05, -1.1920928244535389e-07, -0.0005408520228229463, -3.576278118089249e-07, -0.000600620754994452, -3.24249267578125e-05, -0.000431060791015625, -1.9073486328125e-05, -2.09808349609375e-05, -0.00014495849609375, -1.9073486328125e-06, -0.00011789763811975718, -8.809195423964411e-05, -4.14840251323767e-05, -4.768370445162873e-07, -9.72747802734375e-05, -0.0023660659790039062, -5.7220458984375e-06, -0.0001049041748046875, -4.267692565917969e-05, 0.0, -0.004798646084964275, 0.0, -4.1961669921875e-05, -0.008371353149414062, -9.5367431640625e-06, -0.0023937225341796875, -5.7220458984375e-06, -0.0050144195556640625, -6.866455078125e-05, -8.392333984375e-05, -1.9073486328125e-06, -0.0009493820834904909, -3.576278118089249e-07, -0.04920528084039688, -7.152555099310121e-07, -0.0074396319687366486, -1.1920928244535389e-07, -0.00013660472177434713, 0.0, -0.00035858154296875, -0.00049591064453125, -1.9073486328125e-06, -0.0004215240478515625, -0.00024068355560302734, 0.0, -0.003327086800709367, 0.0, -7.05718994140625e-05], "score": -0.17800204045964563, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template44", "hole0": {"_type": "Name", "id": "minion"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 2, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}]}, {"_type": "Template44", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 2, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}], "hole0": "Consecration", "hole2": [{"_type": "Template14", "hole0": "Consecration", "hole2": "PALADIN", "hole1": 4}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 332, 139, 204, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 334, 141, 131, 169, 25, 186, "minion", "<EOS>", 20, 163, 17, 156, 25, 186, "copy", "<EOS>", "copy", "<EOS>", 320, 65, 156, 17, 156, 25, 186, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 332, 145, 250, 25, 186, "minion", "<EOS>", "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "2", "<EOS>", 110, 145, 250, 17, 156, 17, 156, 25, 186, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "2", "<EOS>", 110]}], "index": 20}
{"beams": [{"score_history": [-2.47955322265625e-05, -1.33514404296875e-05, -0.010423033498227596, -1.680836794548668e-05, -1.931178485392593e-05, -1.2864533346146345e-05, -3.933906555175781e-06, -2.3126602172851562e-05, -0.0002956390380859375, -0.0020999908447265625, -0.0002460479736328125, -0.0003799677360802889, -4.9591064453125e-05, -2.1457672119140625e-06, 0.0, -0.01047175470739603, 0.0, -0.0003871917724609375, 0.0, -1.71661376953125e-05, 0.0, -0.00081634521484375, -2.288818359375e-05, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.0015697479248046875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.2479248046875e-05, 0.0, -0.0001163482666015625, -8.20159912109375e-05, -3.814697265625e-06, -5.364403477869928e-06, -5.9604644775390625e-06, -5.721993511542678e-05, -0.0001544952392578125], "score": -0.02744680603791494, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template32", "hole0": 9, "hole1": 5}], "hole0": "CoreHound", "hole2": [{"_type": "Template10", "hole3": "minion_type", "hole0": "Core Hound", "hole2": "COMMON", "hole4": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "hole1": 7}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 332, 137, 202, "Core", " ", "Hound", "<EOS>", "7", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 17, 156, 25, 186, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 143, 235, "9", "<EOS>", "5", "<EOS>"]}], "index": 21}
{"beams": [{"score_history": [-9.34600830078125e-05, -0.000301361083984375, -2.264974000354414e-06, -9.417532055522315e-06, -1.7162412405014038e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.0002536773681640625, -0.0002002716064453125, -9.34600830078125e-05, -7.259582343976945e-05, -3.576278118089249e-07, -1.0371154530730564e-05, 0.0, -0.004352569580078125, -1.9073486328125e-05, -0.0008544921875, 0.0, -0.0001926422119140625, -9.5367431640625e-06, -0.00089263916015625, -0.011626243591308594, 0.0, -4.57763671875e-05, 0.0, -1.1563301086425781e-05, 0.0, -7.05718994140625e-05, -5.91278076171875e-05, -0.000339508056640625, -0.0001697540283203125, -5.7220458984375e-06, -0.0036640167236328125, -0.00313568115234375, -0.0002117156982421875, -0.0023174285888671875, -0.0013141632080078125, -0.021355748176574707, -1.0013580322265625e-05, -1.52587890625e-05, -9.72747802734375e-05, -0.0001621246337890625, -0.0045871734619140625, -0.000858306884765625, -0.0018491744995117188, -0.0003643035888671875, -0.0007762908935546875, -3.814697265625e-06, -0.0033288002014160156, -0.0573272705078125, -7.641315460205078e-05, -6.29425048828125e-05, -7.82012939453125e-05, -9.5367431640625e-06, -0.001932382583618164, 0.0, -0.000701904296875, 0.0, -0.006843686103820801, -1.537799835205078e-05, -3.814697265625e-06, -0.00310516357421875, -0.005469322204589844, -0.0030317306518554688, -3.576278118089249e-07, -0.00025606132112443447, -3.814697265625e-06, 0.0], "score": -0.1426881485241438, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Call", "func": {"_type": "Template77"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}, "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template46", "hole0": "EnemyPlayer"}}]}, {"_type": "Template23", "hole3": "SelfSelector", "hole0": "Kill"}]}], "hole1": "add_effect"}], "hole0": "Corruption", "hole2": [{"_type": "Template11", "hole3": "target_func", "hole0": "Corruption", "hole2": "WARLOCK", "hole4": {"_type": "Attribute", "value": {"_type": "Template50"}, "attr": "find_enemy_minion_spell_target"}, "hole1": 1}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 332, 138, 203, "Corruption", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 17, 156, 40, "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 145, 250, 41, "add_effect", "<EOS>", 320, 68, 163, 60, 321, 68, 162, 25, 186, "Turn", "Started", "<EOS>", 327, 119, 310, "player", "<EOS>", 39, 255, "Enemy", "Player", "<EOS>", 79, 220, "Kill", "<EOS>", "Self", "Selector", "<EOS>"]}], "index": 22}
{"beams": [{"score_history": [-3.814697265625e-06, -3.62396240234375e-05, -1.8000440832111053e-05, -5.185479312785901e-05, -3.576278118089249e-07, 0.0, -8.702254490344785e-06, -3.7431549571920186e-05, -0.0002231597900390625, -0.0003147125244140625, -0.000202178955078125, -1.1920928244535389e-07, -1.3470649719238281e-05, -1.1920928244535389e-07, 0.0, -0.0007623418932780623, 0.0, -0.00030207488453015685, 0.0, -2.3126602172851562e-05, 0.0, -2.384185791015625e-05, 0.0, -8.392333984375e-05, -0.0007305145263671875, -2.47955322265625e-05, -3.814697265625e-06, -5.364403477869928e-06, -3.814697265625e-05, -1.311301275563892e-06, -0.002567630959674716, -2.0265579223632812e-06, -0.0025873184204101562], "score": -0.008066393273949757, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template27", "hole3": {"_type": "Template60"}, "hole0": 1, "hole2": "spell_damage", "hole1": 4}], "hole0": "DalaranMage", "hole2": [{"_type": "Template14", "hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 332, 139, 204, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 142, 230, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 46]}], "index": 23}
{"beams": [{"score_history": [-3.814697265625e-05, -0.0001201629638671875, -6.66379855829291e-05, -7.390948667307384e-06, -4.649161837733118e-06, -4.329020157456398e-05, -7.62939453125e-06, -2.0265579223632812e-06, -0.0001430511474609375, -0.000308990478515625, -0.000244140625, -8.583032467868179e-06, -6.783008575439453e-05, -4.029273259220645e-05, 0.0, -4.767629434354603e-06, 0.0, -0.021079421043395996, 0.0, -9.167194366455078e-05, 0.0, -0.0004558563232421875, -1.71661376953125e-05, 0.0, -0.00010371206008130684, 0.0, -5.7220458984375e-06, -3.62396240234375e-05, -9.1552734375e-05, -1.1920909855689388e-05, 0.0, -0.0030517578125, -1.52587890625e-05, -0.0008697509765625, -9.5367431640625e-06, -0.06195068359375, -0.02375185489654541, 0.0, -0.000240325927734375, -0.003772735595703125, -0.0001964569091796875, -0.0001201629638671875, -0.016815185546875, -7.62939453125e-06], "score": -0.133802191889572, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Attribute", "value": {"_type": "Template52"}, "attr": "health"}], "hole1": "increase_health"}], "hole0": "DivineSpirit", "hole2": [{"_type": "Template11", "hole3": "target_func", "hole0": "Divine Spirit", "hole2": "PRIEST", "hole4": {"_type": "Template39"}, "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 332, 138, 203, "Divine", " ", "Spirit", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "target_func", "<EOS>", 35, "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 145, 250, 41, "increase_health", "<EOS>", 320, 65, 156, 41, "health", "<EOS>"]}], "index": 24}
{"beams": [{"score_history": [-5.340576171875e-05, -1.33514404296875e-05, -0.00040141629870049655, -0.0010051673743873835, -2.9802317840221804e-06, -1.1563301086425781e-05, -4.172325134277344e-06, -1.692770456429571e-05, -0.0002994537353515625, -0.0007266998291015625, -0.0322265625, -0.00018607586389407516, -0.00018906593322753906, -0.00010502338409423828, -2.503394853192731e-06, -0.0006016513216309249, -2.3841855067985307e-07, -8.773802255745977e-05, -0.0001354217529296875, -0.0020986583549529314, -0.0021793919149786234, -1.1444091796875e-05, -8.0108642578125e-05, -3.24249267578125e-05, -0.0017373220762237906, -0.00045346643310040236, -2.1338413716875948e-05, -0.0003797836252488196, -4.768370445162873e-07, -1.1920928244535389e-07, -8.273124694824219e-05, -1.9073486328125e-06, -8.344650268554688e-06, 0.0, -6.4849853515625e-05, -9.1552734375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -3.814697265625e-06, -9.536738616588991e-07], "score": -0.04334874411195244, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template32", "hole0": 2, "hole1": 4}], "hole0": "DragonlingMechanic", "hole2": [{"_type": "Template6", "hole3": "Summon", "hole0": "Dragonling Mechanic", "hole2": "COMMON", "hole5": "PlayerSelector", "hole4": [{"_type": "Template46", "hole0": "MechanicalDragonling"}], "hole1": 4}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 332, 148, 277, "Dragonling", " ", "Mechanic", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 320, 93, 255, "Mechanical", "Dragonling", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 143, 235, "2", "<EOS>", "4", "<EOS>"]}], "index": 25}
{"beams": [{"score_history": [-0.001983642578125, -0.0001506805419921875, -4.291528966859914e-06, -0.0002354280004510656, -0.00044123383122496307, -4.164408892393112e-06, -3.063678741455078e-05, -0.0002225637435913086, -0.0005645751953125, -0.0003604888916015625, -3.62396240234375e-05, -0.0005855560302734375, -2.86102294921875e-05, -5.7220458984375e-06, -7.43865966796875e-05, -9.5367431640625e-06, -3.814697265625e-05, -0.00010632903286023065, -9.19092126423493e-05, -0.0001764173648552969, -1.9073486328125e-06, -0.000782012939453125, -0.0001316070556640625, 0.0, 0.0, -1.9073486328125e-06, -0.000392913818359375, -2.09808349609375e-05, -0.007246136665344238, -1.9073486328125e-06, -0.0001659393310546875, -2.09808349609375e-05, -0.0004119873046875, -0.0009479522705078125, -0.0001659393310546875, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -0.0001373291015625, -0.0001621246337890625, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -1.3232202945800964e-05, 0.0, -0.0002994537353515625, -2.09808349609375e-05, -0.0001392364501953125, -4.398822784423828e-05, -1.9073486328125e-06, -0.0036420822143554688, -0.000354766845703125, -9.5367431640625e-06, -5.7220458984375e-06, -0.04912757873535156, -0.02144617587327957, 0.0, -0.00081634521484375, -0.000499725341796875, -3.0517578125e-05, -1.71661376953125e-05, -0.0008320808410644531, -3.576278118089249e-07, -0.0006470409571193159, -1.9073486328125e-06, -2.288818359375e-05, -0.000453948974609375, -2.09808349609375e-05, -0.000247955322265625, 0.0, -0.0001697540283203125, -0.0012913942337036133, -7.2479248046875e-05, -0.0036700803320854902, 0.0, -9.72747802734375e-05, -0.0005741119384765625, -0.0003604888916015625, -0.0001163482666015625, -0.0029097795486450195, -2.2649765014648438e-06, -0.0004336661077104509, -3.063678741455078e-05, -2.288818359375e-05], "score": -0.10425377832410732, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 2, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}, {"_type": "Template44", "hole0": {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "hero"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 2, "hole1": "effective_heal_power"}, {"_type": "Template68"}], "hole1": "heal"}], "hole0": "DrainLife", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Template50"}, "attr": "find_spell_target"}}], "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template61"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template51"}]}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 323, 76, 194, "Drain", " ", "Life", "<EOS>", 104, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 97, 327, 119, 310, "target_func", "<EOS>", 17, 156, 40, "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 334, 141, 145, 250, 41, "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "2", "<EOS>", 110, 145, 250, 17, 156, 50, "hero", "<EOS>", "heal", "<EOS>", 321, 85, 243, 50, "effective_heal_power", "<EOS>", "2", "<EOS>", 110]}], "index": 26}
{"beams": [{"score_history": [-0.0045413970947265625, -8.392333984375e-05, -7.43865966796875e-05, -0.001117706298828125, -1.1444091796875e-05, -0.004229537211358547, -5.400045120040886e-05, -4.768370445162873e-07, -6.4849853515625e-05, -0.00020599365234375, -1.9073486328125e-05, -0.00067138671875, -7.62939453125e-06, -0.00010001159535022452, -5.018673982704058e-05, -1.7762111383490264e-05, 0.0, -1.8311693565919995e-05, -2.384185791015625e-06, -0.011574029922485352, -0.000156402587890625, -0.0020084381103515625, 0.0, -0.012108802795410156, 0.0, -0.0011119842529296875, -0.0001354217529296875, -0.00081634521484375, 0.0, -0.0027170181274414062, -3.814697265625e-06, -0.013216018676757812, -5.7220458984375e-06, -0.00428009033203125, -0.056082725524902344, -0.000442353542894125, -0.04860341548919678, -3.4332275390625e-05, -0.001941680908203125, -0.0012396574020385742, -0.00014162063598632812, 0.0, -0.002620697021484375, -3.0517578125e-05, -5.7220458984375e-06, -0.0001659393310546875, -7.62939453125e-06, -7.05718994140625e-05, 0.0, -0.00038123130798339844, -0.0007363557815551758, -2.6702880859375e-05, -0.0005016326904296875, -0.0005664825439453125, -0.00011562818690435961, -0.00023792609863448888, -1.3061799108982086e-05, -3.612010914366692e-05, -0.0017633438110351562], "score": -0.17516989812781958, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "DreadInfernal", "body": [{"_type": "Template0", "hole3": "COMMON", "hole6": "DEMON", "hole7": "battlecry", "hole8": {"_type": "Template22", "hole4": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template46", "hole0": "BothPlayer"}}], "hole0": "Damage", "hole2": "CharacterSelector", "hole1": [{"_type": "Template60"}]}, "hole0": "Dread Infernal", "hole2": "WARLOCK", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole4": "minion_type", "hole1": 6}, {"_type": "Template8", "hole0": 6, "hole1": 6}], "bases": [{"_type": "Template57"}]}, {"_type": "Template55_stmt_seq"}]}, "choice_history": [120, 185, 333, 129, 165, "Dread", "Infernal", "<EOS>", 320, 100, 333, 136, 197, "Dread", " ", "Infernal", "<EOS>", "6", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 25, 186, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 217, "Damage", "<EOS>", 320, 103, "Character", "Selector", "<EOS>", 327, 119, 310, "players", "<EOS>", 39, 255, "Both", "Player", "<EOS>", 150, 302, "6", "<EOS>", "6", "<EOS>", 147]}], "index": 27}
{"beams": [{"score_history": [-0.03958320617675781, -3.814697265625e-05, -0.0001401803019689396, -1.6689160474925302e-05, -5.960462772236497e-07, -2.3841766960686073e-07, -1.0013580322265625e-05, -5.4835698392707855e-05, -0.0003376007080078125, -0.001110076904296875, -0.09229850769042969, -3.576278118089249e-07, -3.242491220589727e-05, -1.3112959095451515e-05, 0.0, -1.1444068150012754e-05, 0.0, -0.001605987548828125, -5.14984130859375e-05, -0.0009783495916053653, -0.006723880767822266, -1.71661376953125e-05, -0.000820159912109375, -0.0008437633514404297, -7.748603820800781e-06, 0.0, -0.000629425048828125, -3.814697265625e-06, -1.9073486328125e-06, -0.0004329681396484375, -1.9073486328125e-06, -0.0001277923583984375, -5.7220458984375e-06, -0.00010836123692570254, -0.00016415119171142578, -5.7220458984375e-06, -0.0001010894775390625, -0.0002346038818359375, -0.0012187957763671875, -2.288818359375e-05, -0.004569053649902344, -3.814697265625e-06, -0.0009071826934814453, -0.0007381439208984375, -1.1444091796875e-05, -0.005152106285095215, -3.814697265625e-06, -3.933906555175781e-06, 0.0, -2.86102294921875e-05, -2.47955322265625e-05, -0.0001430511474609375, -3.576278118089249e-07, 0.0, -0.00014650716912001371, -3.814697265625e-06], "score": -0.15949176467773896, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template32", "hole0": 1, "hole1": 1}], "hole0": "ElvenArcher", "hole2": [{"_type": "Template6", "hole3": "Damage", "hole7": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template46", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template46", "hole0": "UserPicker"}}], "hole0": "Elven Archer", "hole2": "COMMON", "hole5": "CharacterSelector", "hole4": [{"_type": "Template60"}], "hole1": 1}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 332, 148, 279, "Elven", " ", "Archer", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Damage", "<EOS>", 320, 103, "Character", "Selector", "<EOS>", 328, 119, 310, "players", "<EOS>", 39, 255, "Both", "Player", "<EOS>", 119, 310, "picker", "<EOS>", 39, 255, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 143, 235, "1", "<EOS>", "1", "<EOS>"]}], "index": 28}
{"beams": [{"score_history": [-0.0002803802490234375, -0.000118255615234375, -2.384185791015625e-06, -6.43729799776338e-06, -0.00042137171840295196, -4.6844128519296646e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0010585784912109375, -0.0024547576904296875, -3.0517578125e-05, -0.00022125244140625, -0.00252532958984375, -1.71661376953125e-05, -0.000457763671875, -0.0001049041748046875, -5.7220458984375e-06, -2.5748875486897305e-05, -8.690332469996065e-05, -0.00013422116171568632, -4.1961669921875e-05, -0.003528594970703125, -0.0038356781005859375, 0.0, -0.0005626678466796875, 0.0, -0.0013132095336914062, -7.62939453125e-06, -0.021582722663879395, 0.0, -0.0024347305297851562, -0.0005321502685546875, -9.72747802734375e-05, 0.0, -6.341929110931233e-05, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -6.103515625e-05, -0.00143337226472795, -3.814689989667386e-06, -0.07664871215820312, -3.814697265625e-05, -0.20432567596435547, -0.001148223876953125, -0.0001735687255859375, -1.9073486328125e-06, -0.004572868347167969, -0.0016698837280273438, -5.3882598876953125e-05], "score": -0.3321907044155523, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Expr", "value": {"_type": "Template43", "hole0": {"_type": "Template64"}, "hole1": "draw"}}], "hole0": "ExcessMana", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template76"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Template47"}, {"_type": "Template75"}]}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 332, 130, 168, 20, 163, 32, 324, 76, 194, "Excess", " ", "Mana", "<EOS>", 113, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 94, 112, "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 130, 168, 37, 249, 50, "draw", "<EOS>"]}], "index": 29}
{"beams": [{"score_history": [-0.007720947265625, -4.1961669921875e-05, -4.1961669921875e-05, -0.000507354736328125, -7.62939453125e-05, -0.00013982271775603294, -0.00020823888189624995, -1.1444091796875e-05, -0.001678466796875, -4.9591064453125e-05, -0.0025424957275390625, -0.00041961669921875, -1.5974017514963634e-05, -3.313969500595704e-05, -3.528526576701552e-05, 0.0, -0.013782978057861328, -1.9073486328125e-06, -0.0009876489639282227, 0.0, -0.0004173516936134547, 0.0, -0.0012331008911132812, -0.0319671630859375, 0.0, -0.0027812719345092773, -2.86102294921875e-05, -0.005340576171875, -0.00025177001953125, -0.0002079010009765625, -0.000156402587890625, -0.000934123934712261, 0.0, -0.000606536865234375, -1.71661376953125e-05, -5.14984130859375e-05, -0.00063323974609375, -0.000865936279296875, -0.0001239776611328125, -0.028446197509765625, -3.814697265625e-06, -0.0017709732055664062, -1.9073486328125e-06, -0.0043506622314453125, -5.7220458984375e-06, -0.0005012750625610352, -1.9073486328125e-06, -0.0006084442138671875, -0.013330459594726562, -8.96453857421875e-05, -0.007938385009765625, -3.24249267578125e-05, -0.000125885009765625, 0.0, -0.0004062652587890625, -1.9073486328125e-05, -0.0013504024827852845, -1.33514404296875e-05, -0.0029973983764648438, -0.0009613037109375, -0.00020599365234375, -1.9073486328125e-06, -0.0006875991821289062, -1.9073486328125e-06, -0.002504110336303711, -0.0002633333206176758, -0.0008144378662109375, -4.57763671875e-05, -0.00031280517578125, 0.0, -0.000354766845703125, -0.000316619873046875, -0.000347137451171875, -3.4332275390625e-05, -0.0005283355712890625, -0.0001735687255859375, -0.0013834844576194882, -2.288818359375e-05, -0.0001201629638671875, -0.0014562606811523438, -2.86102294921875e-05], "score": -0.1464712914694246, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Execute", "body": [{"_type": "Template0", "hole3": "FREE", "hole6": "find_enemy_minion_spell_target", "hole7": "filter_func", "hole8": {"_type": "Lambda", "args": {"_type": "Template26", "hole0": "target"}, "body": {"_type": "BoolOp", "values": [{"_type": "Compare", "left": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "health"}, "ops": [{"_type": "NotEq"}], "comparators": [{"_type": "Template43", "hole0": {"_type": "Name", "id": "target"}, "hole1": "calculate_max_health"}]}, {"_type": "Template43", "hole0": {"_type": "Name", "id": "target"}, "hole1": "spell_targetable"}], "op": {"_type": "And"}}}, "hole0": "Execute", "hole2": "WARRIOR", "hole5": {"_type": "Template50"}, "hole4": "target_func", "hole1": 1}, {"_type": "FunctionDef", "name": "use", "args": {"_type": "Template17"}, "body": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template68"}], "hole1": "die"}]}], "bases": [{"_type": "Template65"}]}, {"_type": "Template55_stmt_seq"}]}, "choice_history": [120, 185, 333, 129, 165, "Execute", "<EOS>", 320, 108, 333, 136, 197, "Execute", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 40, "find_enemy_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 22, 180, 4, 229, "target", "<EOS>", 19, 159, 6, 321, 69, 166, 17, 156, 25, 186, "target", "<EOS>", "health", "<EOS>", 317, 16, 320, 90, 249, 25, 186, "target", "<EOS>", "calculate_max_health", "<EOS>", 90, 249, 25, 186, "target", "<EOS>", "spell_targetable", "<EOS>", 132, 170, "use", "<EOS>", 2, 333, 141, 145, 250, 41, "die", "<EOS>", 320, 110, 147]}], "index": 30}
{"beams": [{"score_history": [-2.6702880859375e-05, -0.0001087188720703125, -7.843663479434326e-05, -0.00027060447609983385, -0.00026020052609965205, -7.748602001811378e-06, -4.040077328681946e-06, -3.814697265625e-06, -4.780292510986328e-05, -7.05718994140625e-05, -0.0005893707275390625, -2.6702880859375e-05, -1.1920928244535389e-07, -0.000377655029296875, -2.4557000870117918e-05, -4.38690185546875e-05, -6.46108528599143e-05, 0.0, -1.7881369558381266e-06, 0.0, -0.009063830599188805, 0.0, -3.8742946344427764e-05, 0.0, -0.0017167559126392007, 0.0, -0.000118255615234375, -6.4849853515625e-05, -1.52587890625e-05, -2.5153151000267826e-05, 0.0, -0.00054168701171875, -0.00038909912109375, -0.000400543212890625, -1.33514404296875e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00015329872258007526, -2.8609820219571702e-05, -0.007846832275390625, -0.0004482269287109375, -0.00012969970703125, -5.7220458984375e-06, -5.7220458984375e-05, 0.0, -0.0011355876922607422, -1.1444091796875e-05, -0.00013673299690708518, 0.0, -4.38690185546875e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0005435943603515625, 0.0, -0.0001544952392578125, 0.0, -4.76837158203125e-05, -3.576278118089249e-07, -0.0077735185623168945, 0.0, -0.00021517270943149924, -7.62939453125e-06, -4.1961669921875e-05, -0.0001430511474609375, 0.0, -8.0108642578125e-05, 0.0, -0.0003265139530412853, -7.819823804311454e-05, -0.00017546933668199927, -1.1920928244535389e-07, -1.52587890625e-05, -0.0001583099365234375, -0.000148773193359375, -3.814697265625e-06, -0.0001624783908482641, -1.6808447981020436e-05, -0.07606983184814453, -4.768370445162873e-07, -8.58306884765625e-05, -0.00057220458984375, -5.7220458984375e-06, -0.0005245208740234375, -0.0003948211669921875, -0.00011444091796875, -0.0002448558807373047, -9.775161743164062e-06], "score": -0.11256891828740834, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template44", "hole0": {"_type": "Name", "id": "minion"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 1, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}]}, {"_type": "Expr", "value": {"_type": "Template43", "hole0": {"_type": "Template64"}, "hole1": "draw"}}], "hole0": "FanOfKnives", "hole2": [{"_type": "Template14", "hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 332, 139, 204, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 334, 141, 131, 169, 25, 186, "minion", "<EOS>", 20, 163, 17, 156, 25, 186, "copy", "<EOS>", "copy", "<EOS>", 320, 65, 156, 17, 156, 25, 186, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 332, 145, 250, 25, 186, "minion", "<EOS>", "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "1", "<EOS>", 110, 130, 168, 37, 249, 50, "draw", "<EOS>"]}], "index": 31}
{"beams": [{"score_history": [-1.71661376953125e-05, -7.43865966796875e-05, -3.635882603703067e-05, -2.503394853192731e-06, -0.0003119704779237509, -5.14984130859375e-05, -7.867813110351562e-06, -0.0006732940673828125, -0.0003204345703125, -1.71661376953125e-05, -3.62396240234375e-05, -3.4332275390625e-05, -4.1961669921875e-05, -0.0002307891845703125, -2.86102294921875e-05, -8.7738037109375e-05, -1.7881393432617188e-05, -3.933906555175781e-06, -0.011031150817871094, -8.20159912109375e-05, -6.866455078125e-05, -8.58306884765625e-05, -3.814697265625e-06, -0.0003587007522583008, -3.814697265625e-06, -0.09356510639190674, -1.9073486328125e-06, -0.000484466552734375, -4.38690185546875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -4.57763671875e-05, -0.0001163482666015625, 0.0, -1.9073486328125e-05, 0.0, -4.696843461715616e-05, 0.0, -0.0007076263427734375, -0.00011444091796875, -0.005306243896484375, -0.0001882314682006836, 0.0, -0.0001277923583984375, -2.86102294921875e-05, -9.72747802734375e-05, -5.7220458984375e-06, -9.5367431640625e-05, -3.2186455882765586e-06, -2.0265558760002023e-06, -4.57763671875e-05, -0.0001087188720703125, -1.1444091796875e-05, -0.000141143798828125, -0.00013720989227294922, -4.768370445162873e-07, -0.00040256904321722686, -2.0265558760002023e-06, -9.5367431640625e-06], "score": -0.1155843724712895, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 6, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}], "hole0": "Fireball", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Template50"}, "attr": "find_spell_target"}}], "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template63"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Template51"}]}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 323, 76, 194, "Fireball", "<EOS>", 106, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 97, 327, 119, 310, "target_func", "<EOS>", 17, 156, 40, "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 145, 250, 41, "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "6", "<EOS>", 110]}], "index": 32}
{"beams": [{"score_history": [-0.0001068115234375, -0.00014495849609375, -2.7179703465662897e-05, -1.811964830267243e-05, -7.977010682225227e-06, -4.589557647705078e-05, -2.491474151611328e-05, -0.0035877227783203125, -0.003887176513671875, -0.00011444091796875, -2.2292111680144444e-05, -1.9073486328125e-06, -0.0001990600721910596, -1.9073486328125e-06, -0.0013867616653442383, -7.62939453125e-06, -7.62939453125e-06, 0.0, -8.797636110102758e-05, 0.0, -3.814697265625e-06, -0.000408172607421875, -1.33514404296875e-05, -3.063678741455078e-05, 0.0, -0.047760009765625, -6.29425048828125e-05, -0.0002288818359375, -0.0001392364501953125, -0.00025177001953125, -1.52587890625e-05, -0.00018214115698356181, -4.41074053014745e-06, -0.000492095947265625, -0.0001430511474609375, -1.52587890625e-05, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -0.00016415117715951055, -1.9073486328125e-05, -0.00015747534052934498, 0.0, -3.62396240234375e-05, -0.0001163482666015625, 0.0, -0.0002040863037109375, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -6.866455078125e-05, -2.3841855067985307e-07, -0.0007047652616165578, -1.1920928244535389e-07, -0.00024043567827902734, -1.1444091796875e-05, -0.000308990478515625, -1.52587890625e-05, -6.67572021484375e-05, -0.00011444091796875, -1.9073486328125e-06, -0.00017249576922040433, -6.19869097135961e-05, -0.0001623489079065621, -1.1920928244535389e-07, -6.29425048828125e-05, -0.0023851394653320312, -1.52587890625e-05, -3.24249267578125e-05, -1.8715856640483253e-05, -3.6954863844584906e-06, -0.0011484355200082064, -2.0265579223632812e-06, -0.00054931640625], "score": -0.06632056475855563, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template44", "hole0": {"_type": "Name", "id": "minion"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 4, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}]}], "hole0": "Flamestrike", "hole2": [{"_type": "Template14", "hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 332, 139, 204, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 131, 169, 25, 186, "minion", "<EOS>", 20, 163, 17, 156, 25, 186, "copy", "<EOS>", "copy", "<EOS>", 320, 65, 156, 17, 156, 25, 186, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 332, 145, 250, 25, 186, "minion", "<EOS>", "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "4", "<EOS>", 110]}], "index": 33}
{"beams": [{"score_history": [-0.0010662078857421875, -0.000133514404296875, -0.0001230164198204875, -1.8358061424805783e-05, -5.9604644775390625e-06, -1.1680458555929363e-05, -2.741813204920618e-06, -3.266334533691406e-05, -9.34600830078125e-05, -0.00030517578125, -0.001312255859375, -4.768370445162873e-07, -2.5153160095214844e-05, -4.172325134277344e-06, 0.0, -0.00010650604963302612, -1.9073486328125e-06, -0.002834320068359375, -1.9073486328125e-06, -0.01832258701324463, -1.9073486328125e-06, -0.003204345703125, -1.9073486328125e-06, -0.0005035400390625, 0.0, -1.52587890625e-05, 0.0, -0.007855892181396484, 0.0, -0.0017604827880859375, 0.0, -0.0001888275146484375, 0.0, -7.82012939453125e-05, -0.009801864624023438, -0.001590728759765625, -2.503394853192731e-06, -6.198863957251888e-06, -8.583047019783407e-06, -1.1920928244535389e-07, -0.0021195404697209597, -1.9073486328125e-06, -0.0003509521484375, -7.82012939453125e-05, -0.0013980865478515625, -0.0002536773681640625, -0.000148773193359375, -0.0001544952392578125, -0.000209808349609375, -0.017559250816702843, -4.8041343688964844e-05, -0.00091552734375, -0.0006999969482421875, -0.0003675222396850586, -7.98673354438506e-05, -2.062299427052494e-05, -0.0030548060312867165, -0.00011277198063908145, -6.866455078125e-05, -4.9591064453125e-05], "score": -0.07711453024068504, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template27", "hole3": {"_type": "Template45", "hole0": "Aura", "hole2": [{"_type": "Template62_expr_seq"}], "hole1": [{"_type": "Template38", "hole0": 2}, {"_type": "Template31", "hole0": "MinionSelector", "hole1": "Adjacent"}]}, "hole0": 0, "hole2": "auras", "hole1": 3}], "hole0": "FlametongueTotem", "hole2": [{"_type": "Template11", "hole3": "minion_type", "hole0": "Flametongue Totem", "hole2": "SHAMAN", "hole4": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}, "hole1": 2}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 332, 138, 203, "Flametongue", " ", "Totem", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "minion_type", "<EOS>", 17, 156, 25, 186, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 142, 230, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 38, 252, "Aura", "<EOS>", 321, 86, 244, "2", "<EOS>", 82, 234, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>", 320, 105]}], "index": 34}
{"beams": [{"score_history": [-0.0010280609130859375, -0.0001964569091796875, -1.8715683836489916e-05, -0.00032925320556387305, -0.0008077323436737061, -1.1444091796875e-05, -4.458427429199219e-05, -0.00058746337890625, -0.03945636749267578, -1.71661376953125e-05, -6.103515625e-05, -0.003223419189453125, -2.86102294921875e-05, -0.0045032501220703125, -0.000102996826171875, -5.91278076171875e-05, -2.861022494471399e-06, -0.0005093812942504883, -0.009212493896484375, -0.0013103485107421875, -0.0012607574462890625, -9.918212890625e-05, -9.5367431640625e-05, -0.0019092559814453125, -0.0004787445068359375, -0.0006943941116333008, -0.0036334991455078125, -0.00092315673828125, -3.814697265625e-06, -0.01182246208190918, -0.0001163482666015625, -0.000232696533203125, -0.0008029937744140625, -8.20159912109375e-05, -8.261200127890334e-05, -3.4570634852570947e-06, -0.0001425640657544136, -2.622604142743512e-06, -0.0012872215593233705, 0.0, -2.47955322265625e-05], "score": -0.08520873014708741, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template27", "hole3": {"_type": "Template79"}, "hole0": 0, "hole2": "taunt", "hole1": 1}], "hole0": "Frog", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "Template42", "hole0": "BEAST"}], "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template76"}, {"_type": "Template48"}, {"_type": "Template47"}, {"_type": "Template75"}]}}], "hole4": "p", "hole1": "MinionCard"}, "choice_history": [121, 198, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 324, 76, 194, "Frog", "<EOS>", 113, 95, 94, 112, 327, 118, 248, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 332, 142, 230, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 62]}], "index": 35}
{"beams": [{"score_history": [-0.0001506805419921875, -0.0001850128173828125, -1.4305104514278355e-06, -1.4424220353248529e-05, -1.1920928244535389e-07, -4.490651190280914e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.000789642333984375, -0.000362396240234375, -0.000339508056640625, -1.3589766240329482e-05, -3.62396240234375e-05, -4.410734163684538e-06, 0.0, -0.000608854228630662, 0.0, -0.0016632080078125, 0.0, -1.52587890625e-05, 0.0, -2.8491003831732087e-05, 0.0, -1.33514404296875e-05, -0.00011444091796875, -1.52587890625e-05, -7.2479248046875e-05, 0.0, -0.00461578369140625, -7.62939453125e-05, -9.34600830078125e-05, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -5.924701690673828e-05, 0.0, -0.0004711151123046875, -1.52587890625e-05, -0.0047779083251953125, -0.000274658203125, -0.000133514404296875, 0.0, -0.0006923675537109375, 0.0, -0.0019407272338867188, 0.0, -0.00131618685554713, -1.9073486328125e-06, -6.67572021484375e-05, -1.52587890625e-05, -5.340576171875e-05, -0.0008258819580078125, -1.9073486328125e-06, -0.0002480745315551758, -7.62939453125e-06, -0.02221982181072235, 0.0, -5.91278076171875e-05, -0.002307891845703125, -0.00136566162109375, -0.002352118259295821, -3.814697265625e-06], "score": -0.04852670304023121, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "For", "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template44", "hole0": {"_type": "Name", "id": "minion"}, "hole2": [{"_type": "Template30", "hole0": "Frozen"}], "hole1": "add_buff"}]}], "hole0": "FrostNova", "hole2": [{"_type": "Template14", "hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 332, 139, 204, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 131, 169, 25, 186, "minion", "<EOS>", 17, 156, 17, 156, 25, 186, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 332, 145, 250, 25, 186, "minion", "<EOS>", "add_buff", "<EOS>", 320, 81, 232, "Frozen", "<EOS>"]}], "index": 36}
{"beams": [{"score_history": [-0.00272369384765625, -7.62939453125e-05, -1.1920928955078125e-06, -4.41074053014745e-06, -1.7166130419354886e-05, -1.1920201359316707e-07, -2.7894973754882812e-05, -4.875659942626953e-05, -0.0002384185791015625, -0.000514984130859375, -1.9073486328125e-06, -0.000316619873046875, -0.0016155242919921875, -9.5367431640625e-06, -0.000225067138671875, -7.62939453125e-05, -0.0001735687255859375, -8.106198947643861e-06, -5.4120995628181845e-05, -3.313969500595704e-05, 0.0, -0.0048732757568359375, -3.62396240234375e-05, 0.0, -0.000720977783203125, -3.0517578125e-05, -0.0003566741943359375, -0.0003681182861328125, -0.01307988166809082, -3.814697265625e-06, -0.004139900207519531, -0.0002346038818359375, -0.0002422332763671875, -0.0001926422119140625, -0.000621795654296875, -5.7220458984375e-06, -5.53131103515625e-05, 0.0, -0.0002155303955078125, -0.009158134460449219, -0.0003871917724609375, -1.811981201171875e-05, 0.0, -1.1682508556987159e-05, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.00011444091796875, -6.902217864990234e-05, 0.0, -0.02244281768798828, -2.09808349609375e-05, -1.9073486328125e-05, -1.1444091796875e-05, -8.58306884765625e-05, -0.0004978138022124767, 0.0, -0.0001049041748046875, -0.009139060974121094, -3.814697265625e-06, -7.62939453125e-06, -5.2809715270996094e-05, -1.1920928244535389e-07, -0.0009260978549718857, 0.0, -9.5367431640625e-06, -0.0014629364013671875, -3.4332275390625e-05, -0.0053272247314453125, -0.026924727484583855, -1.52587890625e-05, -0.000110626220703125, -0.004656791687011719, -0.00025177001953125, -0.002291321288794279, -0.00016796588897705078], "score": -0.11570949703172317, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 1, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template30", "hole0": "Frozen"}], "hole1": "add_buff"}], "hole0": "FrostShock", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Template50"}, "attr": "<UNK>"}}], "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template60"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template51"}]}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 323, 76, 194, "Frost", " ", "Shock", "<EOS>", 103, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 97, 327, 119, 310, "target_func", "<EOS>", 17, 156, 40, "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 334, 141, 145, 250, 41, "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "1", "<EOS>", 110, 145, 250, 41, "add_buff", "<EOS>", 320, 81, 232, "Frozen", "<EOS>"]}], "index": 37}
{"beams": [{"score_history": [-0.000156402587890625, -4.9591064453125e-05, -5.328649785951711e-05, -4.768371127283899e-06, -6.793939974159002e-06, -1.1444091796875e-05, -0.0001850128173828125, -0.0002536773681640625, -0.00075531005859375, -7.82012939453125e-05, -0.0002110004425048828, -1.9073486328125e-06, -5.125981260789558e-06, -1.9073486328125e-06, -0.004039764404296875, -0.000209808349609375, -0.0003833770751953125, 0.0, -6.67572021484375e-05, 0.0, -0.0001430511474609375, -0.0008935928344726562, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.633167266845703e-05, 0.0, -7.62939453125e-06, -2.288818359375e-05, -4.00543212890625e-05, -7.867813110351562e-05, -5.841255187988281e-06, -0.009543418884277344, -2.6702880859375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001373291015625, -0.002818891080096364, -1.1920928244535389e-07, -5.53131103515625e-05, -0.000690460205078125, -1.9073486328125e-06, -6.4849853515625e-05, -3.4809112548828125e-05, 0.0, -7.891452696640044e-05, -4.5299530029296875e-06, -2.288818359375e-05, -0.000133514404296875, -7.62939453125e-06, -0.10167884826660156, -0.01749098300933838, -1.9073486328125e-06, -0.000171661376953125, -0.0071277618408203125, -0.0009517669677734375, -0.0015590187394991517, -3.814697265625e-06], "score": -0.15032548230328047, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 3, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template30", "hole0": "Frozen"}], "hole1": "add_buff"}], "hole0": "Frostbolt", "hole2": [{"_type": "Template11", "hole3": "target_func", "hole0": "Frostbolt", "hole2": "MAGE", "hole4": {"_type": "Attribute", "value": {"_type": "Template50"}, "attr": "find_spell_target"}, "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 332, 138, 203, "Frostbolt", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 17, 156, 40, "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 334, 141, 145, 250, 41, "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "3", "<EOS>", 110, 145, 250, 41, "add_buff", "<EOS>", 320, 81, 232, "Frozen", "<EOS>"]}], "index": 38}
{"beams": [{"score_history": [-1.52587890625e-05, -3.814697265625e-05, -0.0037100547924637794, -0.0031607276760041714, -1.0013561222876888e-05, -4.767935024574399e-07, -7.62939453125e-06, -9.894371032714844e-06, -4.9591064453125e-05, -0.003482818603515625, -0.0003452301025390625, -6.05564855504781e-05, -3.6597251892089844e-05, -4.1723224057932384e-06, 0.0, -0.0009820330888032913, 0.0, -0.000766754150390625, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.0016309022903442383, 0.0, -0.0001678466796875, -0.000484466552734375, -2.6702880859375e-05, -3.576278118089249e-07, 0.0, -0.00014219718286767602, 0.0, -0.0002874135971069336, 0.0, -0.00054931640625], "score": -0.016011120307609872, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template27", "hole3": {"_type": "Template79"}, "hole0": 2, "hole2": "taunt", "hole1": 2}], "hole0": "FrostwolfGrunt", "hole2": [{"_type": "Template14", "hole0": "Frostwolf Grunt", "hole2": "ALL", "hole1": 2}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 332, 139, 204, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 142, 230, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 62]}], "index": 39}
{"beams": [{"score_history": [-7.62939453125e-06, -2.09808349609375e-05, -4.3748852476710454e-05, -2.3722410332993604e-05, -5.125998541188892e-06, -4.7681533033028245e-07, -3.814697265625e-06, -4.2557716369628906e-05, -0.0001049041748046875, -0.0037593841552734375, -7.82012939453125e-05, -1.5497195136049413e-06, -2.431869324936997e-05, -1.1920928244535389e-07, 0.0, -2.6460897061042488e-05, 0.0, -0.0015298128128051758, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.0019378662109375, 0.0, -0.00014495849609375, -0.0004978179931640625, -1.9073486328125e-05, -1.1920928244535389e-07, -3.576278118089249e-07, -0.00015436655667144805, 0.0, -0.00024712085723876953, 0.0, -0.000537872314453125], "score": -0.009260044143545088, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template27", "hole3": {"_type": "Template79"}, "hole0": 1, "hole2": "taunt", "hole1": 2}], "hole0": "GoldshireFootman", "hole2": [{"_type": "Template14", "hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 332, 139, 204, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 142, 230, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 62]}], "index": 40}
{"beams": [{"score_history": [-0.0004520416259765625, -0.0001010894775390625, -0.00019977481861133128, -7.987004210008308e-06, -2.2649765014648438e-06, -3.218265192117542e-06, -1.33514404296875e-05, -3.814697265625e-06, -3.4332275390625e-05, -0.0011157989501953125, -0.000637054443359375, -5.590759246842936e-05, -7.367130456259474e-05, -2.3841855067985307e-07, 0.0, -6.083240805310197e-06, 0.0, -0.002140045166015625, 0.0, -4.839869507122785e-05, -1.9073486328125e-06, -0.0006122589111328125, -3.24249267578125e-05, -0.0003147125244140625, 0.0, -0.0001010894775390625, 0.0, -0.0015323162078857422, -1.1444091796875e-05, -1.919269561767578e-05, 0.0, -5.602834789897315e-06, 0.0, -1.33514404296875e-05, -0.0022411346435546875, -7.62939453125e-06, -1.1920928244535389e-07, -7.152555099310121e-07, -9.199080523103476e-06, -1.1920928244535389e-07, -0.0039997100830078125, 0.0, -0.000396728515625, -1.9073486328125e-05, -0.0002498626708984375, -8.0108642578125e-05, -0.000141143798828125, -4.1961669921875e-05, -0.000102996826171875, -0.0007550716982223094, -5.7220458984375e-06, -0.004727363586425781, -0.001865386962890625, -0.0046234130859375, -0.0001068115234375, -0.004505157470703125, -0.00041961669921875, -0.0002346038818359375, 0.0, -0.000485299649881199, -0.0039667291566729546, -1.1920922133867862e-06, -4.57763671875e-05, -0.0002918243408203125, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0010528564453125, -1.9073486328125e-06, -0.0027114152908325195, -5.53131103515625e-05, -0.000244140625, -9.5367431640625e-06, -0.0004469743580557406, -8.428096771240234e-05, -2.6702880859375e-05, -7.62939453125e-06, -0.00012969970703125], "score": -0.041661003650872885, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template27", "hole3": {"_type": "Template45", "hole0": "Aura", "hole2": [{"_type": "Template62_expr_seq"}], "hole1": [{"_type": "Template38", "hole0": 1}, {"_type": "Call", "func": {"_type": "Template74"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}]}, {"_type": "Template46", "hole0": "BothPlayer"}]}]}, "hole0": 1, "hole2": "auras", "hole1": 1}], "hole0": "GrimscaleOracle", "hole2": [{"_type": "Template10", "hole3": "minion_type", "hole0": "Grimscale Oracle", "hole2": "COMMON", "hole4": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}, "hole1": 1}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 332, 137, 202, "Grimscale", " ", "Oracle", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 17, 156, 25, 186, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 142, 230, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 38, 252, "Aura", "<EOS>", 321, 86, 244, "1", "<EOS>", 68, 163, 57, 321, 68, 163, 25, 186, "Is", "Type", "<EOS>", 320, 65, 156, 25, 186, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 93, 255, "Both", "Player", "<EOS>", 320, 105]}], "index": 41}
{"beams": [{"score_history": [-8.20159912109375e-05, -0.0002307891845703125, -8.141678699757904e-05, -0.0006724100676365197, -0.0005395148764364421, -7.963177631609142e-05, -6.914031473570503e-06, -1.3589840818895027e-05, -2.3007385607343167e-05, -8.20159912109375e-05, -0.002269744873046875, -0.0002803802490234375, -4.768370445162873e-07, -1.728534698486328e-05, -2.837163265212439e-05, -8.0108642578125e-05, -0.00033923896262422204, -7.62939453125e-06, -0.000196087101357989, -5.7220458984375e-06, -0.0041065216064453125, 0.0, -0.0008470993489027023, -1.9073486328125e-06, -0.007267951965332031, -0.0013456344604492188, -0.014570293016731739, -4.303455352783203e-05, -3.62396240234375e-05, -0.005360603332519531, -0.0005016326904296875, -0.006096423137933016, -0.00010371208190917969, -0.00195467472076416, -7.748603820800781e-06, -5.7220458984375e-06, -0.0014667510986328125, -0.000118255615234375, -0.0001020424606394954, 0.0, -0.000148773193359375, -7.62939453125e-05, -7.62939453125e-06, -4.291534423828125e-06, -3.814697265625e-05, -0.0005855558556504548, -5.53131103515625e-05], "score": -0.04988860273613227, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template32", "hole0": 5, "hole1": 6}], "hole0": "GuardianOfKings", "hole2": [{"_type": "Template11", "hole3": "battlecry", "hole0": "Guardian of Kings", "hole2": "PALADIN", "hole4": {"_type": "Template22", "hole0": "Heal", "hole2": "HeroSelector", "hole1": [{"_type": "Num", "n": 6}]}, "hole1": 7}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 332, 138, 203, "Guardian", " ", "of", " ", "Kings", "<EOS>", "7", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 29, 216, "Heal", "<EOS>", 320, 75, 190, "6", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 143, 235, "5", "<EOS>", "6", "<EOS>"]}], "index": 42}
{"beams": [{"score_history": [-5.7220458984375e-06, -0.0001087188720703125, -0.08478090912103653, -0.009039228782057762, -6.0795613535447046e-05, -1.1920883480343036e-07, -5.9604644775390625e-06, -3.6954863844584906e-06, -2.288818359375e-05, -0.000263214111328125, -0.0001888275146484375, -2.6702524337451905e-05, -1.7523765563964844e-05, -9.179088920063805e-06, 0.0, -0.0003041938762180507, 0.0, -0.0007078647613525391, -1.9073486328125e-06, -6.914138793945312e-05, 0.0, -0.00013494490121956915, 0.0, -1.71661376953125e-05, -0.00241851806640625, -9.5367431640625e-06, -1.9073486328125e-06, -7.390948667307384e-06, -7.390969585685525e-06, -2.622600959512056e-06, -0.001887319260276854, 0.0, -0.0016937255859375, -0.00028228759765625, -0.0003497600555419922, 0.0, -0.0004253387451171875, -0.0008716583251953125, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -0.0012898445129394531, -0.0003359317488502711, -5.7220458984375e-06, -0.000606536865234375, -3.0517578125e-05, -1.52587890625e-05, -0.005012631416320801, 0.0, -0.0003757476806640625, -7.62939453125e-06, -0.007806132081896067, -0.00039958953857421875, -0.011792661622166634, -0.0010443925857543945, -0.000293731689453125, -0.0006561279296875, -0.0009291172027587891, -2.8848648071289062e-05, -1.9073486328125e-06, -0.0008144378662109375, -0.0001125335693359375, -0.0011821985244750977, -0.0003376007080078125, -0.0003376007080078125, -4.57763671875e-05, 0.0, -4.38690185546875e-05, -9.72747802734375e-05], "score": -0.13737174133348162, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template27", "hole3": {"_type": "Template45", "hole0": "Effect", "hole2": [{"_type": "Template62_expr_seq"}], "hole1": [{"_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}, "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template46", "hole0": "MinionIsTarget"}}]}, {"_type": "Template23", "hole3": "SelfSelector", "hole0": "Give", "hole1": [{"_type": "Template38", "hole0": 3}]}]}, "hole0": 2, "hole2": "effects", "hole1": 7}], "hole0": "GurubashiBerserker", "hole2": [{"_type": "Template14", "hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 332, 139, 204, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 142, 230, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 38, 252, "Effect", "<EOS>", 321, 68, 162, 25, 186, "Character", "Damaged", "<EOS>", 327, 119, 310, "condition", "<EOS>", 39, 255, "Minion", "Is", "Target", "<EOS>", 79, 223, "Give", "<EOS>", 320, 86, 244, "3", "<EOS>", "Self", "Selector", "<EOS>", 320, 105]}], "index": 43}
{"beams": [{"score_history": [-5.340576171875e-05, -0.0001220703125, -6.925819616299123e-05, -0.00020658571156673133, -0.0014205592451617122, -0.0005509853363037109, -4.526693373918533e-06, -7.62939453125e-06, -5.7220458984375e-06, -6.103515625e-05, -0.00074005126953125, -0.0001068115234375, -0.0001659393310546875, -6.4849853515625e-05, -6.103515625e-05, -2.09808349609375e-05, -5.91278076171875e-05, -0.008419036865234375, -3.2186455882765586e-06, -0.002082227263599634, -0.0001887042890302837, -0.00011897087097167969, -0.004147528205066919, -6.103515625e-05, -0.0015516281127929688, -5.340576171875e-05, 0.0, -0.0003910064697265625, -0.000102996826171875, -0.0002537965774536133, -5.9604644775390625e-05, -0.021944880485534668, 0.0, -0.0014095306396484375, -1.9073486328125e-05, -0.0002593994140625, -5.91278076171875e-05, -0.0035533905029296875, -2.0265579223632812e-06, -2.86102294921875e-05, -7.62939453125e-06, -0.0001049041748046875, -0.00024449825286865234, 0.0, -7.62939453125e-06, 0.0, -0.00019001959299203008, 0.0, -3.24249267578125e-05, -2.6702880859375e-05, -0.000148773193359375, -0.00019454903667792678, -2.384185791015625e-06, -0.005333900451660156, -0.0002231597900390625, -3.0517578125e-05, -5.7220458984375e-06, -6.866455078125e-05, -0.00010835530702024698, 0.0, -5.14984130859375e-05, -0.000545501708984375, -3.0517578125e-05, -1.1444091796875e-05, -0.00012457156844902784, -7.152555099310121e-07, -0.001215219497680664, -5.829278234159574e-05, -2.6702880859375e-05, -0.0023136138916015625, -4.9591064453125e-05, -8.0108642578125e-05, -0.0003414154052734375, -0.0003223419189453125, -0.0003824232844635844, -3.814697265625e-06], "score": -0.060717379879861255, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 3, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}, {"_type": "Expr", "value": {"_type": "Template43", "hole0": {"_type": "Template64"}, "hole1": "draw"}}], "hole0": "HammerOfWrath", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Template50"}, "attr": "find_spell_target"}}], "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template63"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template51"}]}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 323, 76, 194, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 106, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 97, 327, 119, 310, "target_func", "<EOS>", 17, 156, 40, "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 334, 141, 145, 250, 41, "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "3", "<EOS>", 110, 130, 168, 37, 249, 50, "draw", "<EOS>"]}], "index": 44}
{"beams": [{"score_history": [-0.0007343292236328125, -0.0001277923583984375, -0.00012194366718176752, -0.0003550850669853389, -9.476689592702314e-05, -3.2543870474910364e-05, -8.700677426531911e-06, -9.655952453613281e-06, -1.9073486328125e-06, -7.2479248046875e-05, -0.0002193450927734375, -1.33514404296875e-05, -6.67572021484375e-05, -0.000255584716796875, -6.866455078125e-05, -6.67572021484375e-05, -0.0001049041748046875, -0.002040863037109375, -2.861018856492592e-06, -0.004970229230821133, -0.000992536311969161, -0.00015604496002197266, -0.001084321876987815, -0.00013554096221923828, -0.0001773834228515625, -0.0003871917724609375, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -6.341921834973618e-05, 0.0, -0.0066189696080982685, -1.9073486328125e-06, -3.24249267578125e-05, -8.392333984375e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.00054931640625, -1.9073486328125e-06, -0.0057239532470703125, -1.71661376953125e-05, 0.0, -0.00011002915562130511, 0.0, -9.5367431640625e-06, -0.0012664794921875, -2.86102294921875e-05, -7.629387982888147e-05, -5.91278076171875e-05, -0.0008754730224609375, -0.0002593994140625, -0.5190868377685547, -9.5367431640625e-06, -1.9073486328125e-05, -0.0071868896484375, -0.0009307861328125, -0.000377655029296875, -0.019262194633483887, -2.7060459615313448e-05, -0.0006084442138671875], "score": -0.5756470845312833, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Template52"}, "attr": "divine_shield"}], "value": {"_type": "Template79"}}], "hole0": "HandOfProtection", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Template39"}}], "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template60"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template51"}]}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 323, 76, 194, "Hand", " ", "of", " ", "Protection", "<EOS>", 103, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 97, 327, 119, 310, "target_func", "<EOS>", 35, "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 126, 155, 320, 65, 156, 41, "divine_shield", "<EOS>", 62]}], "index": 45}
{"beams": [{"score_history": [-7.62939453125e-06, -2.6702880859375e-05, -4.887569048150908e-06, -1.7881233361549675e-05, -2.0265579223632812e-06, -4.302110755816102e-05, -9.5367431640625e-06, -9.5367431640625e-06, -4.9591064453125e-05, -2.6702880859375e-05, -3.814697265625e-06, -3.0517578125e-05, -0.00916290283203125, -0.000255584716796875, -0.0014286041259765625, -8.20159912109375e-05, -7.62939453125e-06, -8.344646857949556e-07, -0.000222086877329275, -3.099440846199286e-06, 0.0, -7.05718994140625e-05, -0.0002460479736328125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002574920654296875, -8.7738037109375e-05, -0.0034334659576416016, -2.86102294921875e-05, -0.0007877349853515625, -0.000339508056640625, -0.00051116943359375, -1.9073486328125e-06, -0.000209808349609375, -3.814697265625e-06, -0.0004444122314453125, -1.9073486328125e-06, -0.004180908203125, -1.9073486328125e-06, -0.00070953369140625, -3.814697265625e-06, -0.001407623291015625, 0.0, -0.0001659393310546875, -0.0001125335693359375, -0.0001010894775390625, -2.6225920919387136e-06, -8.785724639892578e-05, -5.960462772236497e-07, -2.3841855067985307e-07, -7.628720777574927e-05, -2.0265579223632812e-06, -0.00016021728515625, -0.000240325927734375, -0.0031147003173828125, -8.392333984375e-05, -0.0002613067626953125, -5.7220458984375e-06, -0.0002117156982421875, -0.0005626678466796875, -0.03779411315917969, -0.004804372787475586, -1.8477359844837338e-05, -0.0014629364013671875, -0.000335693359375, -0.0008360270876437426, -0.000301361083984375, 0.0, -0.0002155303955078125, -1.71661376953125e-05, -1.9073486328125e-06, -0.0006802082061767578, 0.0, -0.0020322799682617188, -0.0008258819580078125, -7.62939453125e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.866455078125e-05], "score": -0.07875084063212512, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template36", "hole3": [{"_type": "Template24", "hole3": [{"_type": "Template62_expr_seq"}], "hole0": "TurnEnded", "hole2": [{"_type": "Template23", "hole3": "MinionSelector", "hole5": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "hole0": "Heal", "hole1": [{"_type": "Template60"}]}]}], "hole0": "Minion", "hole2": 2, "hole1": 0}], "hole0": "HealingTotem", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template60"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template51"}, {"_type": "Template75"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}]}}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 332, 130, 168, 20, 163, 32, 325, 76, 194, "Healing", " ", "Totem", "<EOS>", 103, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 97, 112, 65, 156, 25, 186, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 144, 242, "Minion", "<EOS>", "0", "<EOS>", "2", "<EOS>", 327, 117, 227, "Turn", "Ended", "<EOS>", 320, 79, 224, "Heal", "<EOS>", 320, 103, "Minion", "Selector", "<EOS>", 327, 119, 310, "condition", "<EOS>", 26, 187, "Null", "<EOS>", 320, 105]}], "index": 46}
{"beams": [{"score_history": [-0.000202178955078125, -0.0001049041748046875, -2.3841830625315197e-06, -7.5101784204889555e-06, -7.390974587906385e-06, -1.192074705613777e-07, -1.7642974853515625e-05, -1.3947486877441406e-05, -0.000118255615234375, -0.0012187957763671875, -3.814697265625e-06, -8.392333984375e-05, -5.7220458984375e-05, -1.71661376953125e-05, -0.0008697509765625, -7.62939453125e-06, -2.86102294921875e-05, -2.2172682292875834e-05, -0.00016271841013804078, -5.054364737588912e-05, -9.655952453613281e-06, -0.00475311279296875, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.2319297790527344e-05, -1.9073486328125e-06, -0.010179638862609863, 0.0, -9.72747802734375e-05, -9.72747802734375e-05, -9.5367431640625e-06, -0.0006008148193359375, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -0.00017547607421875, -0.0001316070556640625, -0.0023126602172851562, -1.9073486328125e-06, -5.543231964111328e-05, 0.0, -3.504720370983705e-05, 0.0, -1.71661376953125e-05, -0.00016021728515625, -0.000316619873046875, -0.00012159276229795069, 0.0, -0.00164031982421875, -1.9073486328125e-06, -8.58306884765625e-05, -0.00052642822265625, -0.0005779266357421875, -0.009437091648578644, -3.62396240234375e-05, -0.0004711151123046875, -0.0030374526977539062, -6.67572021484375e-05, -0.00029754638671875, -0.0013246536254882812, -3.814697265625e-06, -0.00017476032371632755, -1.7404556274414062e-05, -0.00014495849609375], "score": -0.04006886711795232, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 8, "hole1": "effective_heal_power"}, {"_type": "Template68"}], "hole1": "heal"}], "hole0": "HealingTouch", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Template50"}, "attr": "find_spell_target"}}], "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template61"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Template51"}]}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 323, 76, 194, "Healing", " ", "Touch", "<EOS>", 104, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 97, 327, 119, 310, "target_func", "<EOS>", 17, 156, 40, "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 145, 250, 41, "heal", "<EOS>", 321, 85, 243, 50, "effective_heal_power", "<EOS>", "8", "<EOS>", 110]}], "index": 47}
{"beams": [{"score_history": [-5.7220458984375e-06, -0.0001773834228515625, -3.71926071238704e-05, -1.1324880688334815e-05, -2.264967406517826e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0007476806640625, -0.0001926422119140625, -1.9073486328125e-05, -3.62396240234375e-05, -0.0001621246337890625, -2.6702880859375e-05, -5.340576171875e-05, -1.1444091796875e-05, -8.7738037109375e-05, -7.152555099310121e-07, -1.537799835205078e-05, -0.02490234375, -0.00031280517578125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.00010561943054199219, -1.9073486328125e-06, -0.0007381439208984375, 0.0, -0.001651763916015625, -0.0004825592041015625, -6.103515625e-05, -2.09808349609375e-05, -0.00060272216796875, -2.47955322265625e-05, -0.001544952392578125, -2.86102294921875e-05, 0.0, -4.279613494873047e-05, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -3.4332275390625e-05, -1.9431114196777344e-05, 0.0, -0.129150390625, -0.0003204345703125, -0.2047119140625, -4.9591064453125e-05, -0.006587982177734375, -0.24789011478424072, 0.0, -1.52587890625e-05, -0.8156232833862305, -0.005847930908203125, -0.28590020537376404, -0.0037594360765069723, -0.031085968017578125, -8.7738037109375e-05, 0.0, -0.370849609375, -1.9073486328125e-06, -0.027370452880859375, -0.36363112926483154, 0.0, -1.4483613967895508, -8.20159912109375e-05, -0.02172565460205078, 0.0, -0.011101722717285156, 0.0, -0.026956558227539062, -0.00366197363473475, 0.0, -0.13688607513904572, 0.0, -0.07305837422609329, -4.768360213347478e-06, -0.036594390869140625, -5.7220458984375e-06, -7.62939453125e-06, -0.08457660675048828, -3.814697265625e-06, -0.021840453147888184, 0.0, -0.000644683837890625, -0.001331329345703125, -0.00012969970703125, 0.0, -0.0027093887329101562, -3.814697265625e-06, -0.08010125160217285, -5.960462772236497e-07, -0.007349371910095215, 0.0, -0.0026378631591796875, -0.019191741943359375, -0.001033782958984375, -0.002321474254131317, -3.099440846199286e-06, -0.009805679321289062, -1.9073486328125e-06, -1.71661376953125e-05, -0.000133514404296875, -1.9073486328125e-06, -0.0003147125244140625, 0.0, -0.001572728157043457, -0.0006107091903686523, -0.005612092092633247, -1.9073486328125e-06, -0.007046699523925781, -5.7220458984375e-06, -0.27453160285949707, -1.3470649719238281e-05], "score": -4.8071127303249455, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.card = hearthbreaker.cards.minions.<UNK>()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template30", "hole0": "<UNK>"}], "hole1": "add_buff"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Template52"}, "attr": "card"}], "value": {"_type": "Template43", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template70"}, "attr": "cards"}, "attr": "minions"}, "hole1": "<UNK>"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "frog"}, "attr": "create_minion"}, "args": [{"_type": "NameConstant", "value": "Null"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "card"}], "value": {"_type": "Name", "id": "frog"}}], "hole0": "Hex", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Template39"}}], "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template61"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template51"}]}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 323, 76, 194, "Hex", "<EOS>", 104, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 97, 327, 119, 310, "target_func", "<EOS>", 35, "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 336, 141, 145, 250, 41, "add_buff", "<EOS>", 320, 81, 232, "<UNK>", "<EOS>", 126, 155, 320, 65, 156, 41, "card", "<EOS>", 37, 249, 17, 156, 17, 156, 54, "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", 126, 155, 320, 73, 186, "minion", "<EOS>", 20, 163, 17, 156, 25, 186, "frog", "<EOS>", "create_minion", "<EOS>", 320, 74, 187, "Null", "<EOS>", 126, 155, 320, 65, 156, 25, 186, "minion", "<EOS>", "card", "<EOS>", 25, 186, "frog", "<EOS>"]}], "index": 48}
{"beams": [{"score_history": [-0.0021076202392578125, -0.0001010894775390625, -7.152555099310121e-07, -7.271752110682428e-06, -2.110004425048828e-05, -1.4394056051969528e-05, -1.3470649719238281e-05, -7.987022399902344e-06, -0.0001049041748046875, -0.00106048583984375, -3.814697265625e-06, -2.09808349609375e-05, -0.0001316070556640625, -1.52587890625e-05, -7.2479248046875e-05, -5.7220458984375e-06, -3.814697265625e-06, -5.960462772236497e-07, -0.00019109249114990234, -0.00010061143257189542, 0.0, -0.005295753479003906, -4.57763671875e-05, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.000133514404296875, -4.017353057861328e-05, -0.06561219692230225, -3.814697265625e-06, -9.34600830078125e-05, -0.0004367828369140625, -0.0001983642578125, -0.0009632110595703125, -6.67572021484375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -0.00042724609375, -0.0010852813720703125, 0.0, -0.00026917457580566406, 0.0, -3.743146953638643e-05, 0.0, -2.86102294921875e-05, -0.0001850128173828125, -0.000469207763671875, -0.00025188911240547895, 0.0, -0.0008525848388671875, -1.9073486328125e-06, -0.00011444091796875, -2.288818359375e-05, -0.000316619873046875, -0.01592615246772766, -2.6702880859375e-05, -0.0008563995361328125, -0.0029544830322265625, -3.24249267578125e-05, -9.918212890625e-05, -0.0014858245849609375, -1.9073486328125e-06, -0.0018006488680839539, -1.7404556274414062e-05, -8.7738037109375e-05], "score": -0.10427938941535331, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 6, "hole1": "effective_heal_power"}, {"_type": "Template68"}], "hole1": "heal"}], "hole0": "HolyLight", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Template50"}, "attr": "find_spell_target"}}], "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template59"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template51"}]}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 323, 76, 194, "Holy", " ", "Light", "<EOS>", 102, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 97, 327, 119, 310, "target_func", "<EOS>", 17, 156, 40, "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 145, 250, 41, "heal", "<EOS>", 321, 85, 243, 50, "effective_heal_power", "<EOS>", "6", "<EOS>", 110]}], "index": 49}
{"beams": [{"score_history": [-0.007686614990234375, -0.0001544952392578125, -4.768370445162873e-07, -2.9802317840221804e-06, -3.576278118089249e-07, -5.479902029037476e-06, -2.288818359375e-05, -9.34600830078125e-05, -0.0002460479736328125, -0.011976242065429688, -4.00543212890625e-05, -9.536738616588991e-07, -0.00040638327482156456, -1.4781926438445225e-05, 0.0, -0.0004207210731692612, -5.7220458984375e-06, -0.01777958869934082, 0.0, -1.1563299267436378e-05, 0.0, -0.0003319675743114203, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -4.220008850097656e-05, 0.0, -0.6121501922607422, -0.00014495849609375, -0.013719558715820312, -0.00014495849609375, -1.9073486328125e-06, -7.62939453125e-06, -0.0005069315666332841, -2.2649765014648438e-06, -0.0014514923095703125, -0.0001544952392578125, -4.38690185546875e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0013524293899536133, -0.0002803802490234375, -0.00010073183511849493, 0.0, -2.86102294921875e-05, -0.0001392364501953125, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -9.72747802734375e-05, 0.0, -0.0005035400390625, -2.2649765014648438e-06, -0.0002182706375606358, -0.0001544952392578125, -0.000247955322265625, -1.9073486328125e-05, -1.52587890625e-05, -2.288818359375e-05, -3.814697265625e-06, -0.00021898731938563287, -1.6450776456622407e-05, -0.005620504263788462, 0.0, -0.0001468658447265625, -0.000225067138671875, -3.814697265625e-05, -2.09808349609375e-05, -0.0019065141677856445, -5.841255187988281e-06, -0.0006534731946885586, -1.9073486328125e-06, -4.38690185546875e-05, -0.0028285980224609375, -0.0008487701416015625, -3.814697265625e-06, -3.814697265625e-06, -0.00022900104522705078, -7.62939453125e-06, -0.012202262878417969, -1.71661376953125e-05, -0.010608673095703125, -0.0007228851318359375, -1.9073486328125e-06, -0.00017547607421875, -8.20159912109375e-05, -4.38690185546875e-05, -0.0001354217529296875, -1.1444091796875e-05, -0.00018155574798583984, -1.9073486328125e-06, -0.01412560697644949, -5.7220458984375e-06, -0.0007228851318359375, -0.0005168914794921875, -2.6702880859375e-05, -0.000110626220703125, -0.006031990051269531, -3.814697265625e-06, -0.001596515765413642, -4.1961669921875e-05, -6.67572021484375e-05], "score": -0.7311891395336829, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}]}, "target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template44", "hole0": {"_type": "Name", "id": "minion"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 2, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}]}, {"_type": "For", "iter": {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "minions"}, "target": {"_type": "Name", "id": "minion"}, "body": [{"_type": "Template44", "hole0": {"_type": "Name", "id": "minion"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 2, "hole1": "effective_heal_power"}, {"_type": "Template68"}], "hole1": "heal"}]}], "hole0": "HolyNova", "hole2": [{"_type": "Template14", "hole0": "Holy Nova", "hole2": "PRIEST", "hole1": 5}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 332, 139, 204, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 334, 141, 131, 169, 25, 186, "minion", "<EOS>", 20, 163, 17, 156, 25, 186, "copy", "<EOS>", "copy", "<EOS>", 320, 65, 156, 17, 156, 25, 186, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 332, 145, 250, 25, 186, "minion", "<EOS>", "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "2", "<EOS>", 110, 131, 169, 25, 186, "minion", "<EOS>", 17, 156, 50, "minions", "<EOS>", 332, 145, 250, 25, 186, "minion", "<EOS>", "heal", "<EOS>", 321, 85, 243, 50, "effective_heal_power", "<EOS>", "2", "<EOS>", 110]}], "index": 50}
{"beams": [{"score_history": [-0.0002288818359375, -7.82012939453125e-05, -4.768370445162873e-07, -2.503394853192731e-06, -2.861022494471399e-06, -9.059673175215721e-06, -0.000217437744140625, -1.537799835205078e-05, -4.76837158203125e-05, -0.000152587890625, -3.814697265625e-06, -5.340576171875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -0.0006465911865234375, -9.5367431640625e-06, -1.1444091796875e-05, -2.0265558760002023e-06, -0.00026190225617028773, -3.7312427593860775e-05, 0.0, -0.0002117156982421875, -2.09808349609375e-05, -2.288818359375e-05, -0.0001239776611328125, -1.9073486328125e-05, -0.00016987323760986328, 0.0, -0.012359141372144222, 0.0, -0.0005283355712890625, -7.62939453125e-06, -1.9073486328125e-05, -1.33514404296875e-05, -2.491474151611328e-05, 0.0, -1.71661376953125e-05, -0.000186920166015625, -5.340576171875e-05, -0.000171661376953125, 0.0, -4.00543212890625e-05, 0.0, -1.5139577953959815e-05, 0.0, -0.0001544952392578125, -3.4332275390625e-05, -0.00026702880859375, -0.0003724098205566406, 0.0, -0.0005168914794921875, -1.71661376953125e-05, -5.340576171875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -2.741813204920618e-06, -7.033323527139146e-06, -3.814697265625e-05, -0.0003452301025390625, -1.33514404296875e-05, -8.20159912109375e-05, -0.00011348723637638614, -1.1920928244535389e-07, -0.0022301645949482918, 0.0, -1.52587890625e-05], "score": -0.020139331957913953, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 2, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}], "hole0": "HolySmite", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "value": {"_type": "Template50"}, "attr": "find_spell_target"}}], "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template60"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Template51"}]}}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 323, 76, 194, "Holy", " ", "Smite", "<EOS>", 103, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 97, 327, 119, 310, "target_func", "<EOS>", 17, 156, 40, "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 145, 250, 41, "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "2", "<EOS>", 110]}], "index": 51}
{"beams": [{"score_history": [-0.0026493072509765625, -3.814697265625e-05, -0.0001277923583984375, -0.000385284423828125, -1.9073486328125e-05, -0.007153256796300411, -2.2768756025470793e-05, -2.09808349609375e-05, -0.000469207763671875, -7.62939453125e-06, -0.0002117156982421875, -3.62396240234375e-05, -4.2557105189189315e-05, -2.0384788513183594e-05, -0.00010406970977783203, -3.814697265625e-06, -0.005033612251281738, 0.0, -0.00909113883972168, -1.9073486328125e-06, -0.01735091209411621, 0.0, -0.0051212310791015625, -1.52587890625e-05, -0.001129150390625, 0.0, -0.0040274858474731445, 0.0, -0.0011827945709228516, 0.0, -0.011940956115722656, -0.021108627319335938, -0.005122020840644836, -0.0013257265090942383, -6.866455078125e-05, -0.007143974304199219, -0.0006008148193359375, -0.0024023056030273438, -0.0037746429443359375, -0.0001983642578125, -0.0058890581130981445, -1.9073486328125e-06, -0.00109612918458879, -0.5255166292190552, 0.0, -0.0005086638266220689, -3.814697265625e-06, -0.0001926422119140625, -0.0001373291015625, -0.0001377999724354595, -6.115436553955078e-05, -0.0021331720054149628, -0.013145999051630497, -3.814697265625e-06, -0.0012541516916826367, -0.000385284423828125, -0.5972967147827148, -8.7738037109375e-05, -0.0001128899457398802, -1.704684109427035e-05, -0.0003299713134765625, -8.58306884765625e-05, -0.00010693073272705078, -6.115436553955078e-05, -3.24249267578125e-05, -0.0002803802490234375, -0.0002841949462890625, -1.9073486328125e-06, -3.814697265625e-06, -0.0002803802490234375, -0.0005215267301537097, -6.318092346191406e-06, -1.1444091796875e-05, -0.001300811767578125, -7.62939453125e-06, -1.33514404296875e-05, -3.24249267578125e-05, -0.0001544952392578125, 0.0, -0.011858582496643066, -2.86102294921875e-05, -0.0003871917724609375, -0.0002899169921875, -2.288818359375e-05, -0.0015184879302978516, -1.9073486328125e-06, -1.52587890625e-05, -2.86102294921875e-05, -0.005802033469080925, -6.902217864990234e-05, -1.9073486328125e-06, -0.0017871856689453125, -6.29425048828125e-05, -3.0636387236882e-05, -1.1920922133867862e-06, -0.0006167888641357422, -9.536738616588991e-07, -0.000225067138671875], "score": -1.2821979321513481, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Houndmaster", "body": [{"_type": "Template0", "hole3": "FREE", "hole6": "<UNK>", "hole7": "battlecry", "hole8": {"_type": "Template22", "hole3": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}], "hole0": "Give", "hole2": "MinionSelector", "hole4": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template46", "hole0": "UserPicker"}}], "hole1": [{"_type": "List", "elts": [{"_type": "Template28", "hole0": "Buff", "hole2": 2, "hole1": "ChangeHealth"}, {"_type": "Template28", "hole0": "Buff", "hole2": 2, "hole1": "ChangeAttack"}, {"_type": "Template30", "hole0": "Taunt"}, {"_type": "Template62_expr_seq"}]}]}, "hole0": "Houndmaster", "hole2": "HUNTER", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole4": "minion_type", "hole1": 4}, {"_type": "Template8", "hole0": 4, "hole1": 3}], "bases": [{"_type": "Template57"}]}, {"_type": "Template55_stmt_seq"}]}, "choice_history": [120, 185, 333, 129, 165, "Houndmaster", "<EOS>", 320, 100, 333, 136, 197, "Houndmaster", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 25, 186, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 29, 219, "Give", "<EOS>", 320, 71, 181, 323, 80, 231, "Buff", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 80, 231, "Buff", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 81, 232, "Taunt", "<EOS>", 105, "Minion", "Selector", "<EOS>", 320, 68, 163, 25, 186, "Is", "Type", "<EOS>", 320, 65, 156, 25, 186, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 327, 119, 310, "picker", "<EOS>", 39, 255, "User", "Picker", "<EOS>", 150, 302, "4", "<EOS>", "3", "<EOS>", 147]}], "index": 52}
{"beams": [{"score_history": [-5.7220458984375e-06, -7.2479248046875e-05, -1.823885577323381e-05, -5.924613287788816e-05, -2.383749233558774e-07, -2.86102294921875e-05, -1.1563301086425781e-05, -0.00038909912109375, -0.008955001831054688, -3.4332275390625e-05, -2.09808349609375e-05, -0.00344085693359375, -5.53131103515625e-05, -0.001270294189453125, -5.14984130859375e-05, -5.340576171875e-05, 0.0, -9.5367431640625e-06, -0.010394096374511719, -0.001201629638671875, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.0003421306610107422, -7.748603820800781e-06, -0.0006679296493530273, 0.0, -0.0013484954833984375, -0.0001888275146484375, -0.00028228759765625, -0.000576019287109375, -0.00014495849609375, -0.0001583099365234375, -4.00543212890625e-05, -5.53131103515625e-05, -3.814697265625e-06, -0.00048828125, 0.0, -0.0002880096435546875, -0.003147125244140625, -0.000270843505859375, -0.00017940998077392578, -4.410734163684538e-06, -1.9073479052167386e-05, -5.245207830739673e-06, -0.005319524090737104, -1.9073486328125e-06, -0.0017032623291015625], "score": -0.04132466233068044, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template27", "hole3": {"_type": "Template79"}, "hole0": 4, "hole2": "charge", "hole1": 2}], "hole0": "Huffer", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "Template42", "hole0": "BEAST"}], "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template61"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template47"}, {"_type": "Template75"}]}}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 324, 76, 194, "Huffer", "<EOS>", 104, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 112, 327, 118, 248, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 142, 230, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 62]}], "index": 53}
{"beams": [{"score_history": [-2.86102294921875e-05, -0.000244140625, -1.6689286894688848e-06, -3.218649908376392e-06, -5.9963203966617584e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0002002716064453125, -8.96453857421875e-05, -8.0108642578125e-05, -6.73532485961914e-05, -1.1920928244535389e-07, -3.8146868064359296e-06, -6.556510470545618e-06, -0.015619397163391113, 0.0, -0.0002288818359375, 0.0, -0.0008487701416015625, -3.814697265625e-06, 0.0, -3.981590270996094e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -9.72747802734375e-05, -1.5974044799804688e-05, 0.0, -0.021579742431640625, -3.62396240234375e-05, -0.000705718994140625, -7.05718994140625e-05, -0.004245758056640625, -0.0140265803784132, 0.0, -0.00016021728515625, -0.024526596069335938, -0.009568214416503906, -0.0018358230590820312, -0.0040225982666015625, -0.0016241073608398438, -1.9073486328125e-05, -0.000339508056640625, -0.0017578596016392112, 0.0], "score": -0.1021942481033804, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "BinOp", "right": {"_type": "Template43", "hole0": {"_type": "Template52"}, "hole1": "calculate_attack"}, "left": {"_type": "Template60"}, "op": {"_type": "Sub"}}], "hole1": "change_attack"}], "hole0": "Humility", "hole2": [{"_type": "Template11", "hole3": "target_func", "hole0": "Humility", "hole2": "PALADIN", "hole4": {"_type": "Template39"}, "hole1": 1}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 332, 138, 203, "Humility", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 35, "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 145, 250, 41, "change_attack", "<EOS>", 320, 66, 158, 46, 123, 37, 249, 41, "calculate_attack", "<EOS>"]}], "index": 54}
{"beams": [{"score_history": [-0.05270862579345703, -0.00312042236328125, -0.001801469479687512, -0.0001629458274692297, 0.0, -1.7978018149733543e-05, -1.1444091796875e-05, -2.872943878173828e-05, -9.5367431640625e-05, -0.000171661376953125, -0.0001239776611328125, -0.0008007189026102424, -0.00018310546875, -0.0003077983856201172, -1.9073486328125e-06, -0.0023972264025360346, -3.814697265625e-06, -0.021897315979003906, 0.0, -0.0003110170364379883, 0.0, -0.0012187957763671875, -5.7220458984375e-06, 0.0, -5.757808321504854e-05, 0.0, -3.4332275390625e-05, -1.52587890625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.71661376953125e-05, -0.013757705688476562, -0.0005741119384765625, -0.35489368438720703, -0.000293731689453125, -2.09808349609375e-05, -7.62939453125e-06, -0.0021076202392578125, -0.03327476978302002, -3.814697265625e-06, -0.000236132851568982, 0.0], "score": -0.49067791175548336, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Expr", "value": {"_type": "Template37", "hole0": {"_type": "Template52"}, "hole2": 1, "hole1": "set_health_to"}}], "hole0": "<UNK>Mark", "hole2": [{"_type": "Template11", "hole3": "target_func", "hole0": "<UNK> Mark", "hole2": "HUNTER", "hole4": {"_type": "Template39"}, "hole1": 0}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 332, 138, 203, "<UNK>", " ", "Mark", "<EOS>", "0", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 35, "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 130, 168, 34, 243, 41, "set_health_to", "<EOS>", "1", "<EOS>"]}], "index": 55}
{"beams": [{"score_history": [-0.23857688903808594, -0.0002307891845703125, -5.91278076171875e-05, -0.0016880035400390625, -1.52587890625e-05, -0.003830978646874428, -0.00010657125676516443, -1.1444026313256472e-05, -7.62939453125e-05, -0.0004024505615234375, -1.1444091796875e-05, -7.62939453125e-05, -3.4332275390625e-05, -0.00048113305820152164, -3.719319647643715e-05, -4.0531158447265625e-06, 0.0, -3.135204315185547e-05, -1.1920928244535389e-07, -0.00018155574798583984, -3.0517578125e-05, -0.0022335052490234375, 0.0, -0.00033783912658691406, 0.0, -0.00045013427734375, -5.7220458984375e-06, -0.000148773193359375, 0.0, -0.0019916296005249023, 0.0, -0.0024056434631347656, 0.0, -0.0025787353515625, -0.021042823791503906, -0.0016318259295076132, -0.0002415154449408874, -0.0001125335693359375, -0.001438140869140625, -0.00030994415283203125, -1.8477303456165828e-05, 0.0, -0.00330352783203125, -3.62396240234375e-05, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -9.608268737792969e-05, -0.00017404556274414062, -9.5367431640625e-06, -4.57763671875e-05, -0.0002651214599609375, -0.000766754150390625, -4.9591064453125e-05, -0.0016384124755859375, -7.62939453125e-06, -0.0011905431747436523, -0.000640869140625, -1.52587890625e-05, -0.0003147125244140625, -0.000102996826171875, -2.634490556374658e-05, -2.3841855067985307e-07, -1.3709079212276265e-05, -1.1920928244535389e-07, -3.814697265625e-05], "score": -0.289727010764139, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "IronforgeRifleman", "body": [{"_type": "Template0", "hole3": "COMMON", "hole6": "<UNK>", "hole7": "battlecry", "hole8": {"_type": "Template22", "hole4": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template46", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template46", "hole0": "UserPicker"}}], "hole0": "Damage", "hole2": "CharacterSelector", "hole1": [{"_type": "Template60"}]}, "hole0": "Ironforge Rifleman", "hole2": "ALL", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole4": "minion_type", "hole1": 3}, {"_type": "Template8", "hole0": 2, "hole1": 2}], "bases": [{"_type": "Template57"}]}, {"_type": "Template55_stmt_seq"}]}, "choice_history": [120, 185, 333, 129, 165, "Ironforge", "Rifleman", "<EOS>", 320, 100, 333, 136, 197, "Ironforge", " ", "Rifleman", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 25, 186, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 29, 217, "Damage", "<EOS>", 320, 103, "Character", "Selector", "<EOS>", 328, 119, 310, "players", "<EOS>", 39, 255, "Both", "Player", "<EOS>", 119, 310, "picker", "<EOS>", 39, 255, "User", "Picker", "<EOS>", 150, 302, "2", "<EOS>", "2", "<EOS>", 147]}], "index": 56}
{"beams": [{"score_history": [-0.00054931640625, -7.43865966796875e-05, -0.00244556600227952, -0.006962324492633343, -1.1920928244535389e-07, -2.859393134713173e-06, -1.9073486328125e-06, -0.00031507015228271484, -0.000194549560546875, -0.0004138946533203125, -0.00037384033203125, -0.00011097769311163574, -7.152507896535099e-05, -1.3828206647303887e-05, 0.0, -2.0420866349013522e-05, 0.0, -0.000171661376953125, 0.0, -0.0003948211669921875, -7.62939453125e-06, -0.000698089599609375, -0.0013103485107421875, -7.82012939453125e-05, 0.0, -3.4332275390625e-05, -8.20159912109375e-05, -0.000980377197265625, -9.5367431640625e-06, -0.0001010894775390625, 0.0, -0.07868385314941406, 0.0, -0.0001888275146484375, -0.0005321502685546875, -0.0002117156982421875, -8.106231689453125e-06, -1.311301275563892e-06, -0.0002369890280533582, -3.8146954466355965e-06, -0.0006335973739624023, 0.0, -7.05718994140625e-05], "score": -0.09598962618019158, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template27", "hole3": {"_type": "Template79"}, "hole0": 3, "hole2": "taunt", "hole1": 3}], "hole0": "IronfurGrizzly", "hole2": [{"_type": "Template10", "hole3": "minion_type", "hole0": "Ironfur Grizzly", "hole2": "COMMON", "hole4": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "hole1": 3}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 332, 137, 202, "Ironfur", " ", "Grizzly", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 17, 156, 25, 186, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 142, 230, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 62]}], "index": 57}
{"beams": [{"score_history": [-2.6702880859375e-05, -0.0001163482666015625, -2.0027044229209423e-05, -0.0007697342080064118, -1.1920928244535389e-07, -7.748021744191647e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0002269744873046875, -0.0002536773681640625, -0.000202178955078125, -9.536738616588991e-07, -2.2292131689027883e-05, -3.457069396972656e-05, 0.0, -1.5854835510253906e-05, -2.2649765014648438e-06, -0.00577855110168457, -1.33514404296875e-05, -0.0003110170364379883, 0.0, -0.000156402587890625, -2.47955322265625e-05, -7.05718994140625e-05, -0.0005245208740234375, -5.7220458984375e-06, -3.814697265625e-05, 0.0, -0.00045633313129656017, 0.0, -5.340576171875e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0004069805145263672, 0.0, -0.19292163848876953, -0.000125885009765625, -0.1988391876220703, -1.9073486328125e-05, 0.0, -0.0003299713134765625, -3.814697265625e-06, -0.0015455401735380292, -0.0003156163729727268, -0.007388114929199219, -0.0003070831298828125, -1.52587890625e-05, -3.0517578125e-05, -0.0026693344116210938, -0.010024785995483398, -1.9550323486328125e-05, -0.00600433349609375, -0.0007495880126953125, -3.814697265625e-05, -0.000354766845703125, -0.0013338207500055432, -1.1920928244535389e-07, -0.004105567932128906, -0.0001010894775390625, -7.05718994140625e-05, -0.000263214111328125, -0.002882873173803091, 0.0, -0.0062122344970703125, -2.6702880859375e-05, -0.0004367828369140625, -1.9073486328125e-06, -0.000438690185546875, -1.9073486328125e-05, -0.023275375366210938, -9.5367431640625e-06, -0.0069658756256103516, 0.0, -0.010808587074279785, 0.0, -0.015428543090820312, 0.0, -8.58306884765625e-05, -0.021735191345214844, -1.9073486328125e-06, -0.0012569427490234375, -3.62396240234375e-05, -1.9073486328125e-05, -1.1444091796875e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.01125335693359375, -5.7220458984375e-06, -0.008424758911132812, -0.0015163421630859375, -0.001430511474609375, -5.14984130859375e-05, -0.000743865966796875, -1.52587890625e-05, -0.00040912628173828125, -4.70866471005138e-05, -0.0003452301025390625, -0.0039234161376953125, -2.6702880859375e-05, -0.0023374557495117188, -0.000148773193359375, -0.00010251987987430766, -0.00032532215118408203, -0.03738975524902344, -4.57763671875e-05, -7.62939453125e-06, -0.0016002655029296875, -3.0994276585261105e-06, -3.576278118089249e-07, -1.52587890625e-05, -0.00043487548828125, -2.47955322265625e-05, -0.0002689361572265625, -0.0001807212393032387, -1.1920928244535389e-07, -0.26034677028656006, -8.344646857949556e-07, -0.000392913818359375, -0.0002498626708984375, -0.01316070556640625, -0.00040435791015625, -0.0005435943603515625, -6.079604645492509e-06, -9.536738616588991e-07, -9.5367431640625e-06, -0.008409500122070312, -7.62939453125e-06, -8.58306884765625e-05, -0.00012004372547380626, 0.0, -0.12033860385417938, -1.1920928244535389e-07, -0.0001087188720703125], "score": -1.002099998194609, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template50"}, "attr": "<UNK>"}, "args": [{"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "game"}, {"_type": "Lambda", "args": {"_type": "Template26", "hole0": "x"}, "body": {"_type": "Compare", "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "x"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}], "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}}]}}, {"_type": "If", "orelse": [{"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 5, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}], "body": [{"_type": "Template44", "hole0": {"_type": "Template52"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 5, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}], "test": {"_type": "Compare", "left": {"_type": "Name", "id": "<UNK>"}, "ops": [{"_type": "Is"}], "comparators": [{"_type": "NameConstant", "value": "Null"}]}}], "hole0": "KillCommand", "hole2": [{"_type": "Template11", "hole3": "target_func", "hole0": "Kill Command", "hole2": "HUNTER", "hole4": {"_type": "Attribute", "value": {"_type": "Template50"}, "attr": "find_spell_target"}, "hole1": 3}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 332, 138, 203, "Kill", " ", "Command", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 17, 156, 40, "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 334, 141, 126, 155, 320, 73, 186, "<UNK>", "<EOS>", 20, 163, 17, 156, 40, "<UNK>", "<EOS>", 321, 65, 156, 50, "game", "<EOS>", 70, 180, 4, 229, "x", "<EOS>", 21, 166, 17, 156, 17, 156, 25, 186, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 317, 12, 320, 65, 156, 25, 186, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 133, 174, 21, 166, 25, 186, "<UNK>", "<EOS>", 317, 12, 320, 74, 187, "Null", "<EOS>", 332, 145, 250, 41, "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "5", "<EOS>", 110, 332, 145, 250, 41, "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "5", "<EOS>", 110]}], "index": 58}
{"beams": [{"score_history": [-1.1444091796875e-05, -3.4332275390625e-05, -0.005817985162138939, -0.0030346375424414873, -7.390969585685525e-06, 0.0, -4.29153169534402e-06, -1.8477434423402883e-05, -6.103515625e-05, -0.0002193450927734375, -0.0001506805419921875, -9.548207890475169e-05, -3.266334533691406e-05, -3.4570680327306036e-06, 0.0, -6.437305273720995e-06, 0.0, -0.0032601349521428347, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.00011515617370605469, 0.0, -0.0001201629638671875, -0.0002384185791015625, -6.4849853515625e-05, 0.0, -4.768370445162873e-07, -1.771992538124323e-05, -3.576278118089249e-07, -0.0024690579157322645, -2.3841855067985307e-07, -0.00109100341796875], "score": -0.01689240239855394, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template27", "hole3": {"_type": "Template60"}, "hole0": 2, "hole2": "spell_damage", "hole1": 2}], "hole0": "KoboldGeomancer", "hole2": [{"_type": "Template14", "hole0": "Kobold Geomancer", "hole2": "ALL", "hole1": 2}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 332, 139, 204, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 142, 230, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 46]}], "index": 59}
{"beams": [{"score_history": [-0.0001239776611328125, -3.0517578125e-05, -0.032860249280929565, -0.016505014151334763, -5.364403477869928e-06, -5.96035533817485e-07, -4.0531158447265625e-06, -4.172325134277344e-06, -3.0517578125e-05, -0.000392913818359375, -0.00176239013671875, -0.0002022777043748647, -1.7762184143066406e-05, -1.1920928244535389e-07, 0.0, -0.0002006291615543887, 0.0, -0.003465890884399414, -7.62939453125e-06, -8.785724639892578e-05, 0.0, -0.0009958744049072266, 0.0, -0.0001850128173828125, -0.000843048095703125, -0.0001239776611328125, -1.1920928244535389e-07, -7.152555099310121e-07, -0.0003635883331298828, -1.6093124941107817e-05, -0.0073430524207651615, 0.0, -0.000278472900390625], "score": -0.06585188609254544, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template27", "hole3": {"_type": "Template79"}, "hole0": 4, "hole2": "charge", "hole1": 3}], "hole0": "<UNK>Elite", "hole2": [{"_type": "Template14", "hole0": "Kor'kron Elite", "hole2": "WARRIOR", "hole1": 4}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 332, 139, 204, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 142, 230, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 62]}], "index": 60}
{"beams": [{"score_history": [-0.00040435791015625, -4.38690185546875e-05, -8.415821503149346e-05, -0.0001437593309674412, -0.00018787430599331856, -1.1444091796875e-05, -1.919269561767578e-05, -0.0001125335693359375, -0.003459930419921875, -3.62396240234375e-05, -7.62939453125e-06, -0.00711822509765625, -4.76837158203125e-05, -0.0017242431640625, -3.4332275390625e-05, -0.00012969970703125, 0.0, -1.549720582261216e-05, -0.0024051666259765625, -0.000858306884765625, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.00047135353088378906, -0.000152587890625, -0.0026180732529610395, -7.62939453125e-06, -0.003935813903808594, -0.00030517578125, -0.0001220703125, -0.003025054931640625, -0.0009593963623046875, -0.0019227266311645508, -3.4332275390625e-05, -4.1961669921875e-05, 0.0, -1.3470649719238281e-05, 0.0, -3.0517578125e-05, -0.000476837158203125, -0.000484466552734375, -5.125983079778962e-06, -1.0728830375228426e-06, -2.6940973839373328e-05, -2.1457672119140625e-06, -0.000320429855491966, -6.4849853515625e-05, -2.288818359375e-05, -0.0001621246337890625, -0.00045680999755859375, -0.0002899169921875, -1.33514404296875e-05, -0.000301361083984375, -6.29425048828125e-05, -0.0006500257295556366, -5.7220458984375e-06, -0.0898885726928711, -0.000110626220703125, -0.0013366341590881348, -2.8848648071289062e-05, -3.576278118089249e-07, -1.9073486328125e-06, -0.0008983612060546875], "score": -0.1261214224917353, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template27", "hole3": {"_type": "Template45", "hole0": "Aura", "hole2": [{"_type": "Template62_expr_seq"}], "hole1": [{"_type": "Template38", "hole0": 1}, {"_type": "Template46", "hole0": "MinionSelector"}]}, "hole0": 2, "hole2": "auras", "hole1": 4}], "hole0": "Leokk", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "Template42", "hole0": "BEAST"}], "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template61"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template47"}, {"_type": "Template75"}]}}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 324, 76, 194, "Leokk", "<EOS>", 104, 65, 156, 25, 186, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 112, 327, 118, 248, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 142, 230, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 38, 252, "Aura", "<EOS>", 321, 86, 244, "1", "<EOS>", 93, 255, "Minion", "Selector", "<EOS>", 320, 105]}], "index": 61}
{"beams": [{"score_history": [-0.000396728515625, -0.0003108978271484375, -0.0008652133401483297, -0.0003259842633269727, -9.453258098801598e-05, -0.002688257722184062, -0.00024378264788538218, -0.00014972686767578125, -0.0011577606201171875, -0.0028362274169921875, -0.0008392333984375, -0.0002474773791618645, -0.000156402587890625, -0.00022647327568847686, 0.0, -0.0018272054148837924, -1.9073486328125e-06, -0.0072803497314453125, 0.0, -0.004047989845275879, -9.5367431640625e-06, -0.0041522979736328125, -3.814697265625e-06, -3.075599670410156e-05, -1.9073486328125e-06, -0.0001621246337890625, -0.0003719329833984375, -0.00121307373046875, -7.998622459126636e-05, -0.0002346038818359375, -2.7298916393192485e-05, 0.0, -0.004742482677102089, -0.000270843505859375], "score": -0.03499681009634514, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"_type": "Template1", "hole3": "create_weapon", "hole6": [{"_type": "Template36", "hole0": "Weapon", "hole2": 4, "hole1": 1}], "hole0": "<UNK>Justice", "hole2": [{"_type": "Template15", "hole3": "FREE", "hole0": "<UNK> Justice", "hole2": "PALADIN", "hole1": 1}], "hole4": "player", "hole1": "WeaponCard"}, "choice_history": [121, 198, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 332, 140, 205, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 332, 144, 241, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"]}], "index": 62}
{"beams": [{"score_history": [-0.000118255615234375, -0.0004711151123046875, -0.00046397498226724565, -0.0004408954700920731, -0.007542185485363007, -9.024007886182517e-05, -7.748603820800781e-06, -7.15237547410652e-07, -6.67572021484375e-05, -1.537799835205078e-05, -3.24249267578125e-05, -0.00093841552734375, -6.67572021484375e-05, -6.43729799776338e-06, -0.0001327991485595703, -0.0004990195157006383, -0.00011444091796875, -0.0016263611614704132, -0.0010242462158203125, -0.0035096376668661833, -3.814697265625e-06, -0.009446283802390099, -1.9073486328125e-06, -0.0003275871276855469, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -0.00311887264251709, 0.0, -6.103515625e-05, -0.0023651123046875, -7.62939453125e-06, -1.5020368664409034e-05, -1.4543520592269488e-05, -0.0013524210080504417, -7.867813110351562e-06, -0.0004178285598754883, -1.9073486328125e-06, -0.0002956390380859375], "score": -0.03469682823197218, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template27", "hole3": {"_type": "Template79"}, "hole0": 6, "hole2": "taunt", "hole1": 5}], "hole0": "LordOfTheArena", "hole2": [{"_type": "Template14", "hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 332, 139, 204, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 142, 230, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 62]}], "index": 63}
{"beams": [{"score_history": [-3.0517578125e-05, -4.1961669921875e-05, -1.311301275563892e-06, -0.0043788752518594265, -2.1457672119140625e-06, -3.574823495000601e-07, -3.814697265625e-06, -1.33514404296875e-05, -0.0008411407470703125, -0.03209686279296875, -2.6702880859375e-05, -2.09808349609375e-05, -0.010869979858398438, -3.24249267578125e-05, -0.000537872314453125, -6.103515625e-05, -2.6702880859375e-05, 0.0, -0.00029098967206664383, -9.059905096364673e-06, 0.0, -0.001953125, -0.000370025634765625, -0.0075969696044921875, -0.00016021728515625, -3.62396240234375e-05, -0.0001583099365234375, -8.58306884765625e-05, -0.003762124804779887, 0.0, -9.5367431640625e-06, 0.0, -0.00023555755615234375, 0.0, -0.000110626220703125, -0.0001373291015625, -9.5367431640625e-06, -5.9604644775390625e-06, 0.0, -2.193450927734375e-05, 0.0], "score": -0.06393941107489809, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"_type": "Template1", "hole3": "create_minion", "hole6": [{"_type": "Template32", "hole0": 2, "hole1": 1}], "hole0": "MechanicalDragonling", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template34"}, "keywords": [{"_type": "Template42", "hole0": "MECH"}], "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template60"}, {"_type": "Template48"}, {"_type": "Template47"}, {"_type": "Template75"}]}}], "hole4": "player", "hole1": "MinionCard"}, "choice_history": [121, 198, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 332, 130, 168, 20, 164, 32, 324, 76, 194, "Mechanical", " ", "Dragonling", "<EOS>", 103, 95, 94, 112, 327, 118, 248, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 332, 143, 235, "2", "<EOS>", "1", "<EOS>"]}], "index": 64}
{"beams": [{"score_history": [-1.9073486328125e-05, -0.00016021728515625, -3.576278118089249e-07, -2.384185791015625e-06, -9.775161743164062e-06, -1.9073486328125e-06, -6.330013275146484e-05, -8.690357208251953e-05, -0.0045623779296875, -0.000579833984375, -2.09808349609375e-05, -9.202533692587167e-05, -0.00010502338409423828, -6.246560951694846e-05, 0.0, -0.0001480911741964519, 0.0, -0.0014249086380004883, 0.0, -0.0003528594970703125, -5.7220458984375e-06, -0.0004292726516723633, -1.9073486328125e-06, -5.876923387404531e-05, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -1.537799835205078e-05, 0.0, -0.001941680908203125, -4.38690185546875e-05, -0.03973960876464844, -0.0003719329833984375, -0.001399993896484375, -3.814697265625e-06, -0.00025177001953125, -3.814697265625e-06, -0.0006923675537109375, -1.9073486328125e-06, -0.0003370046615600586, -3.576278118089249e-07, -0.0356593132019043, -1.0728830375228426e-06, -0.006899870932102203, -3.576278118089249e-07, -0.00028618681244552135, 0.0, -0.0010833740234375, -6.29425048828125e-05, -0.0001926422119140625, -8.7738037109375e-05, -0.0007832050323486328, -2.264974000354414e-06, -0.00021456493414007127, -2.384185791015625e-06, -3.0517578125e-05], "score": -0.09836484878582041, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "model_output": {"_type": "Template1", "hole3": "use", "hole6": [{"_type": "Template19"}, {"_type": "Template44", "hole0": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}, "hole2": [{"_type": "Template37", "hole0": {"_type": "Template64"}, "hole2": 5, "hole1": "effective_spell_damage"}, {"_type": "Template68"}], "hole1": "damage"}], "hole0": "MindBlast", "hole2": [{"_type": "Template15", "hole3": "FREE", "hole0": "Mind Blast", "hole2": "PRIEST", "hole1": 2}], "hole5": [{"_type": "arg", "arg": "game"}], "hole4": "player", "hole1": "SpellCard"}, "choice_history": [121, 200, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 332, 140, 205, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 314, 1, 307, "game", "<EOS>", 333, 141, 145, 250, 17, 156, 17, 156, 25, 186, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 321, 85, 243, 50, "effective_spell_damage", "<EOS>", "5", "<EOS>", 110]}], "index": 65}
