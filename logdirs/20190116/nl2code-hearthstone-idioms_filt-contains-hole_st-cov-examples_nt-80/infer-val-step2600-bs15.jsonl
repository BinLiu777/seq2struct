{"gold_code": "class AssassinsBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Assassin's Blade\", 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "beams": [{"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score": -0.20125653744753436, "score_history": [-0.000118255615234375, -0.0010890960693359375, -3.433224628679454e-05, -0.00028511573327705264, -0.0003504323249217123, -0.008929591625928879, -0.0004646764136850834, -7.033323527139146e-06, -5.7220458984375e-06, -0.1200246810913086, -0.007801055908203125, -0.0007492038421332836, -7.832050323486328e-05, -4.1246374166803434e-05, -1.1444091796875e-05, -0.008822083473205566, 0.0, -0.033916473388671875, 0.0, -0.007784008979797363, -1.9073486328125e-06, -0.0026319720782339573, 0.0, -5.7220458984375e-06, -0.0011310577392578125, -0.00241851806640625, -0.004373389296233654, -2.1457672119140625e-06, -4.6253204345703125e-05, -3.6954811548639555e-06, -0.00012719602091237903, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template68", "hole0": "Weapon", "hole2": 4}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "<UNK> Blade", "hole2": "ROGUE"}], "hole0": "<UNK>Blade", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score": -2.8499100981325682, "score_history": [-0.000118255615234375, -0.0010890960693359375, -3.433224628679454e-05, -0.00028511573327705264, -0.0003504323249217123, -0.008929591625928879, -0.0004646764136850834, -7.033323527139146e-06, -5.7220458984375e-06, -2.230405807495117, -0.0002498626708984375, -0.000889606075361371, -0.00017368793487548828, -1.0967249181703664e-05, -9.5367431640625e-06, -0.001900792121887207, -1.9073486328125e-06, -0.5422449111938477, -7.62939453125e-06, -0.045974135398864746, -1.9073486328125e-06, -0.0010639417450875044, -2.491474151611328e-05, -0.0004534245526883751, -1.9073486328125e-06, -5.7220458984375e-06, -0.0021514892578125, -0.005246162414550781, -0.007674492429941893, -2.0265579223632812e-06, -1.2159347534179688e-05, -8.702239938429557e-06, -0.00010824172932188958, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template68", "hole0": "Weapon", "hole2": 4}], "hole2": [{"hole1": 5, "hole3": "FREE", "_type": "Template34", "hole0": "<UNK> Blade", "hole2": "ROGUE"}], "hole0": "<UNK>Blade", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score": -3.5069817363901166, "score_history": [-0.000118255615234375, -0.0010890960693359375, -3.433224628679454e-05, -0.00028511573327705264, -0.0003504323249217123, -0.008929591625928879, -0.0004646764136850834, -7.033323527139146e-06, -5.7220458984375e-06, -2.230405807495117, -0.0002498626708984375, -0.000889606075361371, -0.00017368793487548828, -1.0967249181703664e-05, -9.5367431640625e-06, -0.001900792121887207, -1.9073486328125e-06, -1.0038261413574219, -3.814697265625e-06, -0.23970818519592285, 0.0, -0.0024136074353009462, -3.445148468017578e-05, -0.0007744041504338384, -1.9073486328125e-06, -5.7220458984375e-06, -0.0023746490478515625, -0.005299568176269531, -0.0074385786429047585, -2.0265579223632812e-06, -1.2040138244628906e-05, -8.583032467868179e-06, -0.0001497266930527985, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template68", "hole0": "Weapon", "hole2": 4}], "hole2": [{"hole1": 5, "hole3": "FREE", "_type": "Template34", "hole0": "<UNK> Blade", "hole2": "PALADIN"}], "hole0": "<UNK>Blade", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score": -4.49604250667403, "score_history": [-0.000118255615234375, -0.0010890960693359375, -3.433224628679454e-05, -0.00028511573327705264, -0.0003504323249217123, -0.008929591625928879, -0.0004646764136850834, -7.033323527139146e-06, -5.7220458984375e-06, -0.1200246810913086, -0.007801055908203125, -0.0007492038421332836, -7.832050323486328e-05, -4.1246374166803434e-05, -1.1444091796875e-05, -0.008822083473205566, 0.0, -4.327648162841797, -9.775161743164062e-06, -0.0018314123153686523, -1.9073486328125e-06, -0.0014541874406859279, 0.0, -7.62939453125e-06, -0.0012264251708984375, -0.0022068023681640625, -0.01263398677110672, -2.0265579223632812e-06, -5.3882598876953125e-05, -1.7881377516459906e-06, -0.00015032253577373922, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template68", "hole0": "Weapon", "hole2": 4}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "<UNK> Blade", "hole2": "PALADIN"}], "hole0": "<UNK>Blade", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score": -4.847101011131144, "score_history": [-0.000118255615234375, -0.0010890960693359375, -3.433224628679454e-05, -0.00028511573327705264, -0.0003504323249217123, -0.008929591625928879, -0.0004646764136850834, -7.033323527139146e-06, -5.7220458984375e-06, -0.1200246810913086, -0.007801055908203125, -0.0007492038421332836, -7.832050323486328e-05, -4.1246374166803434e-05, -1.1444091796875e-05, -0.008822083473205566, 0.0, -4.67971134185791, -3.814697265625e-06, -0.0018906593322753906, -1.9073486328125e-06, -0.0020302056800574064, 0.0, -9.5367431640625e-06, -0.0012912750244140625, -0.0016841888427734375, -0.01143309473991394, -2.0265579223632812e-06, -6.54458999633789e-05, -1.6689286894688848e-06, -0.0001616474473848939, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template68", "hole0": "Weapon", "hole2": 4}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "<UNK> Blade", "hole2": "WARRIOR"}], "hole0": "<UNK>Blade", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score": -4.938661521928225, "score_history": [-0.000118255615234375, -0.0010890960693359375, -3.433224628679454e-05, -0.00028511573327705264, -0.0003504323249217123, -0.008929591625928879, -0.0004646764136850834, -7.033323527139146e-06, -5.7220458984375e-06, -0.1200246810913086, -0.007801055908203125, -0.0007492038421332836, -7.832050323486328e-05, -4.1246374166803434e-05, -1.1444091796875e-05, -4.738696098327637, 0.0, -0.043407440185546875, 0.0, -0.005651235580444336, -1.9073486328125e-06, -0.003459092229604721, 0.0, -3.814697265625e-06, -0.0008945465087890625, -0.0025730133056640625, -0.0037917629815638065, -2.1457672119140625e-06, -3.4809112548828125e-05, -3.576272320060525e-06, -0.00014996505342423916, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "<UNK>", " ", "Blade", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template68", "hole0": "Weapon", "hole2": 4}], "hole2": [{"hole1": 3, "_type": "Template31", "hole0": "<UNK> Blade", "hole2": "ROGUE"}], "hole0": "<UNK>Blade", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score": -4.985586321003439, "score_history": [-0.000118255615234375, -0.0010890960693359375, -3.433224628679454e-05, -0.00028511573327705264, -0.0003504323249217123, -0.008929591625928879, -0.0004646764136850834, -7.033323527139146e-06, -5.7220458984375e-06, -0.1200246810913086, -0.007801055908203125, -0.0007492038421332836, -7.832050323486328e-05, -4.1246374166803434e-05, -1.1444091796875e-05, -0.008822083473205566, 0.0, -4.823922157287598, -1.1444091796875e-05, -0.0026390552520751953, 0.0, -0.0026829999405890703, 0.0, -7.62939453125e-06, -0.001201629638671875, -0.002033233642578125, -0.003974759019911289, -2.0265579223632812e-06, -0.00010347366333007812, -1.1920922133867862e-06, -0.00019252239144407213, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template68", "hole0": "Weapon", "hole2": 4}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "<UNK> Blade", "hole2": "PRIEST"}], "hole0": "<UNK>Blade", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score": -5.007572290954158, "score_history": [-0.000118255615234375, -0.0010890960693359375, -3.433224628679454e-05, -0.00028511573327705264, -0.0003504323249217123, -0.008929591625928879, -0.0004646764136850834, -7.033323527139146e-06, -5.7220458984375e-06, -2.230405807495117, -0.0002498626708984375, -0.000889606075361371, -0.00017368793487548828, -1.0967249181703664e-05, -9.5367431640625e-06, -0.001900792121887207, -1.9073486328125e-06, -1.0038261413574219, -3.814697265625e-06, -1.7461798191070557, 0.0, -0.0008453130722045898, -5.7220458984375e-06, -0.00029347249073907733, 0.0, -5.7220458984375e-06, -0.0007610321044921875, -0.0022735595703125, -0.008311796933412552, -2.0265579223632812e-06, -1.5974044799804688e-05, -7.390948667307384e-06, -0.00011217559222131968, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template68", "hole0": "Weapon", "hole2": 4}], "hole2": [{"hole1": 5, "hole3": "EPIC", "_type": "Template34", "hole0": "<UNK> Blade", "hole2": "PALADIN"}], "hole0": "<UNK>Blade", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blade(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score": -5.091448711491466, "score_history": [-0.000118255615234375, -0.0010890960693359375, -3.433224628679454e-05, -0.00028511573327705264, -0.0003504323249217123, -4.724808692932129, -5.7934543292503804e-05, -2.6225699912174605e-05, -5.7220458984375e-06, -0.29125404357910156, -0.00289154052734375, -0.0008251165272668004, -6.687641143798828e-05, -5.8650832215789706e-05, -9.5367431640625e-06, -0.007807373534888029, 0.0, -0.04370403289794922, 0.0, -0.006473422050476074, -1.9073486328125e-06, -0.002503413474187255, 0.0, -5.7220458984375e-06, -0.000980377197265625, -0.0024013519287109375, -0.005512036848813295, -2.1457672119140625e-06, -4.2438507080078125e-05, -3.814689989667386e-06, -0.00012719602091237903, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Blade", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template68", "hole0": "Weapon", "hole2": 4}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "<UNK> Blade", "hole2": "ROGUE"}], "hole0": "<UNK>Blade", "_type": "Template5", "hole3": "create_weapon", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player):\n        return Weapon(3, 4)\n", "score": -5.134850274778273, "score_history": [-0.000118255615234375, -0.0010890960693359375, -3.433224628679454e-05, -0.00028511573327705264, -0.0003504323249217123, -0.008929591625928879, -0.0004646764136850834, -7.033323527139146e-06, -5.7220458984375e-06, -0.1200246810913086, -0.007801055908203125, -0.0007492038421332836, -7.832050323486328e-05, -4.1246374166803434e-05, -1.1444091796875e-05, -0.008822083473205566, 0.0, -0.033916473388671875, 0.0, -4.94113826751709, 0.0, -0.00034792214864864945, 0.0, -3.814697265625e-06, -0.001384735107421875, -0.0027675628662109375, -0.006349151488393545, -2.1457672119140625e-06, -1.5735626220703125e-05, -5.602820692729438e-06, -0.00010466531966812909, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template68", "hole0": "Weapon", "hole2": 4}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "<UNK> Blade", "hole2": "ROGUE"}], "hole0": "<UNK>Blade", "_type": "Template5", "hole3": "use", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score": -5.9855395305867205, "score_history": [-0.000118255615234375, -0.0010890960693359375, -3.433224628679454e-05, -0.00028511573327705264, -0.0003504323249217123, -0.008929591625928879, -0.0004646764136850834, -7.033323527139146e-06, -5.7220458984375e-06, -2.230405807495117, -0.0002498626708984375, -0.000889606075361371, -0.00017368793487548828, -1.0967249181703664e-05, -9.5367431640625e-06, -0.001900792121887207, -1.9073486328125e-06, -3.685678482055664, -7.82012939453125e-05, -0.037937283515930176, 0.0, -0.0012480005389079452, -1.9073486328125e-05, -0.0005363591481000185, -1.9073486328125e-06, -7.62939453125e-06, -0.004268646240234375, -0.005351066589355469, -0.00539359450340271, -2.0265579223632812e-06, -1.5974044799804688e-05, -6.318072337307967e-06, -6.663741078227758e-05, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template68", "hole0": "Weapon", "hole2": 4}], "hole2": [{"hole1": 5, "hole3": "FREE", "_type": "Template34", "hole0": "<UNK> Blade", "hole2": "PRIEST"}], "hole0": "<UNK>Blade", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score": -6.119280744695061, "score_history": [-0.000118255615234375, -0.0010890960693359375, -3.433224628679454e-05, -0.00028511573327705264, -0.0003504323249217123, -0.008929591625928879, -0.0004646764136850834, -7.033323527139146e-06, -5.7220458984375e-06, -2.230405807495117, -0.0002498626708984375, -0.000889606075361371, -0.00017368793487548828, -1.0967249181703664e-05, -9.5367431640625e-06, -0.001900792121887207, -1.9073486328125e-06, -0.5422449111938477, -7.62939453125e-06, -3.3201324939727783, 0.0, -0.0009454488754272461, -3.814697265625e-06, -0.0001771413371898234, 0.0, -7.62939453125e-06, -0.000759124755859375, -0.00292205810546875, -0.00705560389906168, -2.0265579223632812e-06, -1.621246337890625e-05, -7.271740287251305e-06, -7.104792166501284e-05, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template68", "hole0": "Weapon", "hole2": 4}], "hole2": [{"hole1": 5, "hole3": "EPIC", "_type": "Template34", "hole0": "<UNK> Blade", "hole2": "ROGUE"}], "hole0": "<UNK>Blade", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, Weapon):\n        return Weapon(3, 4)\n", "score": -6.297885166789399, "score_history": [-0.000118255615234375, -0.0010890960693359375, -3.433224628679454e-05, -0.00028511573327705264, -0.0003504323249217123, -0.008929591625928879, -0.0004646764136850834, -7.033323527139146e-06, -5.7220458984375e-06, -0.1200246810913086, -0.007801055908203125, -0.0007492038421332836, -7.832050323486328e-05, -4.1246374166803434e-05, -1.1444091796875e-05, -0.008822083473205566, 0.0, -0.033916473388671875, 0.0, -0.007784008979797363, -1.9073486328125e-06, -5.970715522766113, -0.12492942810058594, -0.0001430511474609375, -0.0040740966796875, -0.0020236968994140625, -0.0052782208658754826, -3.576278118089249e-07, -5.0187110900878906e-05, -3.3378546504536644e-06, -0.00015067998901940882, -1.9073486328125e-06], "choice_history": [97, 283, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "create_weapon", "<EOS>", "Weapon", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template68", "hole0": "Weapon", "hole2": 4}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "<UNK> Blade", "hole2": "ROGUE"}], "hole0": "<UNK>Blade", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "Weapon"}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Minion(3, 4)\n", "score": -6.320529520970467, "score_history": [-0.000118255615234375, -0.0010890960693359375, -3.433224628679454e-05, -0.00028511573327705264, -0.0003504323249217123, -0.008929591625928879, -0.0004646764136850834, -7.033323527139146e-06, -5.7220458984375e-06, -0.1200246810913086, -0.007801055908203125, -0.0007492038421332836, -7.832050323486328e-05, -4.1246374166803434e-05, -1.1444091796875e-05, -0.008822083473205566, 0.0, -0.033916473388671875, 0.0, -0.007784008979797363, -1.9073486328125e-06, -0.0026319720782339573, 0.0, -5.7220458984375e-06, -0.0011310577392578125, -0.00241851806640625, -6.123534679412842, -8.7738037109375e-05, -2.682209014892578e-05, -2.741813204920618e-06, -0.0001755892881192267, 0.0], "choice_history": [97, 283, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 358, 127, 230, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Minion", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template68", "hole0": "Minion", "hole2": 4}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "<UNK> Blade", "hole2": "ROGUE"}], "hole0": "<UNK>Blade", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Blade\", 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, True)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score": -7.909903512847222, "score_history": [-0.000118255615234375, -0.0010890960693359375, -3.433224628679454e-05, -0.00028511573327705264, -0.0003504323249217123, -0.008929591625928879, -0.0004646764136850834, -7.033323527139146e-06, -5.7220458984375e-06, -5.805517196655273, -0.007190704345703125, -8.20159912109375e-05, 0.0, -2.0265579223632812e-06, 0.0, -0.0003038644790649414, 0.0, -0.003757476806640625, -0.000186920166015625, -8.20159912109375e-05, -0.45661965012550354, -0.000118255615234375, -2.777559893729631e-05, -0.00226593017578125, -3.814697265625e-06, -1.9073486328125e-06, -0.0011866092681884766, -1.9073486328125e-05, -8.96453857421875e-05, -3.814697265625e-05, -0.000186920166015625, -1.9073486328125e-06, -0.00041961669921875, 0.0, -0.0037140846252441406, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.0018157958984375, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.8747987747192383, -1.9073486328125e-06, -0.0002040863037109375, -1.52587890625e-05, -0.00010037422180175781, -4.208087921142578e-05, -0.0023459193762391806, 0.0, -6.425379979191348e-05, 0.0, -0.0001697540283203125, -0.002593994140625, -0.0005512237548828125, -0.7337692379951477, -3.4332275390625e-05, -0.00011229178926441818, -3.099436753473128e-06, -6.878061685711145e-05, 0.0], "choice_history": [97, 283, "<UNK>", "Blade", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Gallywix's", " ", "Blade", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "3", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template68", "hole0": "Weapon", "hole2": 4}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Gallywix's Blade", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "<UNK>Blade", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}]}
{"gold_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "beams": [{"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Thaddius())))\n", "score": -1.6861453943144937, "score_history": [-3.0517578125e-05, -1.71661376953125e-05, -0.0018939182627946138, -9.810461779125035e-05, -2.264974000354414e-06, -5.2675604820251465e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.019229888916015625, -6.29425048828125e-05, -3.492827090667561e-05, -4.792213439941406e-05, -6.675719760096399e-06, -5.7220458984375e-06, -0.0002066702290903777, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.000682830810546875, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000316619873046875, 0.0, -3.814697265625e-06, -0.165557861328125, -1.71661376953125e-05, -1.549708758830093e-05, -1.6689286894688848e-06, -5.280907862470485e-05, -1.1920928244535389e-07, -0.2916748523712158, -3.933906555175781e-06, -0.027108192443847656, -0.08669853210449219, -0.03949826955795288, -1.9073486328125e-06, -0.013011932373046875, -7.271765298355604e-06, -0.0005512237548828125, -1.52587890625e-05, -9.5367431640625e-06, -0.04749573767185211, -0.0002558190899435431, -0.02754497528076172, -5.7220458984375e-06, 0.0, -0.00733494758605957, -0.005268096923828125, 0.0, -1.9073486328125e-06, -0.0024480819702148438, -1.1444091796875e-05, -0.9480732679367065, -0.0007745024631731212], "choice_history": [97, 283, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 27, 246, "Deathrattle", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Thaddius", "<EOS>", "Player", "Selector", "<EOS>", "In", "Graveyard", "<EOS>", 346, 88, 325, "Thaddius", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole7": [{"_type": "Template79", "hole0": "Thaddius"}], "hole6": "InGraveyard", "hole2": [{"_type": "Template79", "hole0": "Thaddius"}], "hole0": "Deathrattle", "_type": "Template39", "hole3": "PlayerSelector", "hole1": "Summon"}, "_type": "Template50", "hole0": 6, "hole2": "deathrattle"}], "hole2": [{"hole1": 6, "hole3": "FREE", "_type": "Template34", "hole0": "Boulderfist Ogre", "hole2": "ALL"}], "hole0": "BoulderfistOgre", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score": -1.9136880826406397, "score_history": [-3.0517578125e-05, -1.71661376953125e-05, -0.0018939182627946138, -9.810461779125035e-05, -2.264974000354414e-06, -5.2675604820251465e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.019229888916015625, -6.29425048828125e-05, -3.492827090667561e-05, -4.792213439941406e-05, -6.675719760096399e-06, -5.7220458984375e-06, -0.0002066702290903777, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.000682830810546875, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000316619873046875, 0.0, -3.814697265625e-06, -1.8902511596679688, -7.05718994140625e-05, -6.198863957251888e-06, 0.0, -0.0006552932318300009, 0.0], "choice_history": [97, 283, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 6}], "hole2": [{"hole1": 6, "hole3": "FREE", "_type": "Template34", "hole0": "Boulderfist Ogre", "hole2": "ALL"}], "hole0": "BoulderfistOgre", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Feugen())))\n", "score": -2.3582170898168755, "score_history": [-3.0517578125e-05, -1.71661376953125e-05, -0.0018939182627946138, -9.810461779125035e-05, -2.264974000354414e-06, -5.2675604820251465e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.019229888916015625, -6.29425048828125e-05, -3.492827090667561e-05, -4.792213439941406e-05, -6.675719760096399e-06, -5.7220458984375e-06, -0.0002066702290903777, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.000682830810546875, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000316619873046875, 0.0, -3.814697265625e-06, -0.165557861328125, -1.71661376953125e-05, -1.549708758830093e-05, -1.6689286894688848e-06, -5.280907862470485e-05, -1.1920928244535389e-07, -0.2916748523712158, -3.933906555175781e-06, -0.027108192443847656, -0.08669853210449219, -0.03949826955795288, -1.9073486328125e-06, -0.013011932373046875, -7.271765298355604e-06, -0.0005512237548828125, -1.52587890625e-05, -9.5367431640625e-06, -0.04749573767185211, -0.0002558190899435431, -0.02754497528076172, -5.7220458984375e-06, 0.0, -0.00733494758605957, -0.005268096923828125, 0.0, -1.9073486328125e-06, -0.0024480819702148438, -1.1444091796875e-05, -1.6190966367721558, -0.0018228291301056743], "choice_history": [97, 283, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 27, 246, "Deathrattle", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Thaddius", "<EOS>", "Player", "Selector", "<EOS>", "In", "Graveyard", "<EOS>", 346, 88, 325, "Feugen", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole7": [{"_type": "Template79", "hole0": "Feugen"}], "hole6": "InGraveyard", "hole2": [{"_type": "Template79", "hole0": "Thaddius"}], "hole0": "Deathrattle", "_type": "Template39", "hole3": "PlayerSelector", "hole1": "Summon"}, "_type": "Template50", "hole0": 6, "hole2": "deathrattle"}], "hole2": [{"hole1": 6, "hole3": "FREE", "_type": "Template34", "hole0": "Boulderfist Ogre", "hole2": "ALL"}], "hole0": "BoulderfistOgre", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Stalagg())))\n", "score": -2.6186434919379593, "score_history": [-3.0517578125e-05, -1.71661376953125e-05, -0.0018939182627946138, -9.810461779125035e-05, -2.264974000354414e-06, -5.2675604820251465e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.019229888916015625, -6.29425048828125e-05, -3.492827090667561e-05, -4.792213439941406e-05, -6.675719760096399e-06, -5.7220458984375e-06, -0.0002066702290903777, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.000682830810546875, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000316619873046875, 0.0, -3.814697265625e-06, -0.165557861328125, -1.71661376953125e-05, -1.549708758830093e-05, -1.6689286894688848e-06, -5.280907862470485e-05, -1.1920928244535389e-07, -0.2916748523712158, -3.933906555175781e-06, -0.027108192443847656, -0.08669853210449219, -0.03949826955795288, -1.9073486328125e-06, -0.013011932373046875, -7.271765298355604e-06, -0.0005512237548828125, -1.52587890625e-05, -9.5367431640625e-06, -0.04749573767185211, -0.0002558190899435431, -0.02754497528076172, -5.7220458984375e-06, 0.0, -0.00733494758605957, -0.005268096923828125, 0.0, -1.9073486328125e-06, -0.0024480819702148438, -1.1444091796875e-05, -1.8810533285140991, -0.0002925395092461258], "choice_history": [97, 283, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 27, 246, "Deathrattle", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Thaddius", "<EOS>", "Player", "Selector", "<EOS>", "In", "Graveyard", "<EOS>", 346, 88, 325, "Stalagg", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole7": [{"_type": "Template79", "hole0": "Stalagg"}], "hole6": "InGraveyard", "hole2": [{"_type": "Template79", "hole0": "Thaddius"}], "hole0": "Deathrattle", "_type": "Template39", "hole3": "PlayerSelector", "hole1": "Summon"}, "_type": "Template50", "hole0": 6, "hole2": "deathrattle"}], "hole2": [{"hole1": 6, "hole3": "FREE", "_type": "Template34", "hole0": "Boulderfist Ogre", "hole2": "ALL"}], "hole0": "BoulderfistOgre", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, charge=True)\n", "score": -2.810081619655861, "score_history": [-3.0517578125e-05, -1.71661376953125e-05, -0.0018939182627946138, -9.810461779125035e-05, -2.264974000354414e-06, -5.2675604820251465e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.019229888916015625, -6.29425048828125e-05, -3.492827090667561e-05, -4.792213439941406e-05, -6.675719760096399e-06, -5.7220458984375e-06, -0.0002066702290903777, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.000682830810546875, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000316619873046875, 0.0, -3.814697265625e-06, -0.165557861328125, -1.71661376953125e-05, -1.549708758830093e-05, -1.6689286894688848e-06, -5.280907862470485e-05, -1.1920928244535389e-07, -2.619213819503784, 0.0, -0.0012645721435546875, -9.5367431640625e-06, -0.0012418031692504883, -1.9073486328125e-06], "choice_history": [97, 283, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "7", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 6, "hole2": "charge"}], "hole2": [{"hole1": 6, "hole3": "FREE", "_type": "Template34", "hole0": "Boulderfist Ogre", "hole2": "ALL"}], "hole0": "BoulderfistOgre", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, taunt=True)\n", "score": -3.4900115913508074, "score_history": [-3.0517578125e-05, -1.71661376953125e-05, -0.0018939182627946138, -9.810461779125035e-05, -2.264974000354414e-06, -5.2675604820251465e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.019229888916015625, -6.29425048828125e-05, -3.492827090667561e-05, -4.792213439941406e-05, -6.675719760096399e-06, -5.7220458984375e-06, -0.0002066702290903777, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.000682830810546875, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000316619873046875, 0.0, -3.814697265625e-06, -0.165557861328125, -1.71661376953125e-05, -1.549708758830093e-05, -1.6689286894688848e-06, -5.280907862470485e-05, -1.1920928244535389e-07, -3.3008220195770264, 0.0, -0.0007724761962890625, -3.814697265625e-06, -6.139278411865234e-05, -1.9073486328125e-06], "choice_history": [97, 283, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 6, "hole2": "taunt"}], "hole2": [{"hole1": 6, "hole3": "FREE", "_type": "Template34", "hole0": "Boulderfist Ogre", "hole2": "ALL"}], "hole0": "BoulderfistOgre", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, spell_damage=1)\n", "score": -4.1254402286169665, "score_history": [-3.0517578125e-05, -1.71661376953125e-05, -0.0018939182627946138, -9.810461779125035e-05, -2.264974000354414e-06, -5.2675604820251465e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.019229888916015625, -6.29425048828125e-05, -3.492827090667561e-05, -4.792213439941406e-05, -6.675719760096399e-06, -5.7220458984375e-06, -0.0002066702290903777, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.000682830810546875, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000316619873046875, 0.0, -3.814697265625e-06, -0.165557861328125, -1.71661376953125e-05, -1.549708758830093e-05, -1.6689286894688848e-06, -5.280907862470485e-05, -1.1920928244535389e-07, -3.3171284198760986, 0.0, -0.32912349700927734, -0.0001239776611328125, -0.2907104194164276, -3.933906555175781e-06], "choice_history": [97, 283, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "7", "<EOS>", "spell_damage", "<EOS>", 23, 179, "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"n": 1, "_type": "Num"}, "_type": "Template50", "hole0": 6, "hole2": "spell_damage"}], "hole2": [{"hole1": 6, "hole3": "FREE", "_type": "Template34", "hole0": "Boulderfist Ogre", "hole2": "ALL"}], "hole0": "BoulderfistOgre", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(CatOgre())))\n", "score": -4.218473672431841, "score_history": [-3.0517578125e-05, -1.71661376953125e-05, -0.0018939182627946138, -9.810461779125035e-05, -2.264974000354414e-06, -5.2675604820251465e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.019229888916015625, -6.29425048828125e-05, -3.492827090667561e-05, -4.792213439941406e-05, -6.675719760096399e-06, -5.7220458984375e-06, -0.0002066702290903777, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.000682830810546875, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000316619873046875, 0.0, -3.814697265625e-06, -0.165557861328125, -1.71661376953125e-05, -1.549708758830093e-05, -1.6689286894688848e-06, -5.280907862470485e-05, -1.1920928244535389e-07, -0.2916748523712158, -3.933906555175781e-06, -0.027108192443847656, -0.08669853210449219, -0.03949826955795288, -1.9073486328125e-06, -0.013011932373046875, -7.271765298355604e-06, -0.0005512237548828125, -1.52587890625e-05, -9.5367431640625e-06, -0.04749573767185211, -0.0002558190899435431, -0.02754497528076172, -5.7220458984375e-06, 0.0, -0.00733494758605957, -0.005268096923828125, 0.0, -1.9073486328125e-06, -0.0024480819702148438, -1.1444091796875e-05, -3.389702796936035, -0.08757653832435608, -0.0038967132568359375], "choice_history": [97, 283, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 27, 246, "Deathrattle", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Thaddius", "<EOS>", "Player", "Selector", "<EOS>", "In", "Graveyard", "<EOS>", 346, 88, 325, "Cat", "Ogre", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole7": [{"_type": "Template79", "hole0": "CatOgre"}], "hole6": "InGraveyard", "hole2": [{"_type": "Template79", "hole0": "Thaddius"}], "hole0": "Deathrattle", "_type": "Template39", "hole3": "PlayerSelector", "hole1": "Summon"}, "_type": "Template50", "hole0": 6, "hole2": "deathrattle"}], "hole2": [{"hole1": 6, "hole3": "FREE", "_type": "Template34", "hole0": "Boulderfist Ogre", "hole2": "ALL"}], "hole0": "BoulderfistOgre", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, stealth=True)\n", "score": -4.228352565204872, "score_history": [-3.0517578125e-05, -1.71661376953125e-05, -0.0018939182627946138, -9.810461779125035e-05, -2.264974000354414e-06, -5.2675604820251465e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.019229888916015625, -6.29425048828125e-05, -3.492827090667561e-05, -4.792213439941406e-05, -6.675719760096399e-06, -5.7220458984375e-06, -0.0002066702290903777, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.000682830810546875, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000316619873046875, 0.0, -3.814697265625e-06, -0.165557861328125, -1.71661376953125e-05, -1.549708758830093e-05, -1.6689286894688848e-06, -5.280907862470485e-05, -1.1920928244535389e-07, -4.024480819702148, 0.0, -0.014441490173339844, -1.9073486328125e-05, -0.0010612010955810547, 0.0], "choice_history": [97, 283, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "7", "<EOS>", "stealth", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 6, "hole2": "stealth"}], "hole2": [{"hole1": 6, "hole3": "FREE", "_type": "Template34", "hole0": "Boulderfist Ogre", "hole2": "ALL"}], "hole0": "BoulderfistOgre", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, divine_shield=True)\n", "score": -4.689748901760353, "score_history": [-3.0517578125e-05, -1.71661376953125e-05, -0.0018939182627946138, -9.810461779125035e-05, -2.264974000354414e-06, -5.2675604820251465e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.019229888916015625, -6.29425048828125e-05, -3.492827090667561e-05, -4.792213439941406e-05, -6.675719760096399e-06, -5.7220458984375e-06, -0.0002066702290903777, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.000682830810546875, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000316619873046875, 0.0, -3.814697265625e-06, -0.165557861328125, -1.71661376953125e-05, -1.549708758830093e-05, -1.6689286894688848e-06, -5.280907862470485e-05, -1.1920928244535389e-07, -4.493504047393799, 0.0, -0.0077075958251953125, -1.52587890625e-05, -0.00017201900482177734, 0.0], "choice_history": [97, 283, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "7", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 6, "hole2": "divine_shield"}], "hole2": [{"hole1": 6, "hole3": "FREE", "_type": "Template34", "hole0": "Boulderfist Ogre", "hole2": "ALL"}], "hole0": "BoulderfistOgre", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score": -4.770186097988919, "score_history": [-3.0517578125e-05, -1.71661376953125e-05, -0.0018939182627946138, -9.810461779125035e-05, -2.264974000354414e-06, -5.2675604820251465e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -4.715511322021484, -0.000545501708984375, -6.079673767089844e-06, -3.24249267578125e-05, -4.0531158447265625e-06, -1.1444091796875e-05, -0.0001732016826281324, 0.0, -0.029287338256835938, -2.09808349609375e-05, -0.0002690553665161133, 0.0, -0.0008449554443359375, -3.814697265625e-06, -7.62939453125e-06, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.01973724365234375, 0.0, -5.7220458984375e-06, 0.0, -0.000476837158203125, 0.0, -7.62939453125e-06, -0.00069427490234375, -1.1444091796875e-05, -1.0371154530730564e-05, 0.0, -0.0004255599924363196, 0.0], "choice_history": [97, 283, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 6}], "hole2": [{"hole2": "FREE", "hole0": "Boulderfist Ogre", "_type": "Template26", "hole3": "minion_type", "hole1": 6, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}}], "hole0": "BoulderfistOgre", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, deathrattle=True)\n", "score": -4.969703454410805, "score_history": [-3.0517578125e-05, -1.71661376953125e-05, -0.0018939182627946138, -9.810461779125035e-05, -2.264974000354414e-06, -5.2675604820251465e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.019229888916015625, -6.29425048828125e-05, -3.492827090667561e-05, -4.792213439941406e-05, -6.675719760096399e-06, -5.7220458984375e-06, -0.0002066702290903777, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.000682830810546875, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000316619873046875, 0.0, -3.814697265625e-06, -0.165557861328125, -1.71661376953125e-05, -1.549708758830093e-05, -1.6689286894688848e-06, -5.280907862470485e-05, -1.1920928244535389e-07, -0.2916748523712158, -3.933906555175781e-06, -4.487720966339111, -0.0011854171752929688, -0.0007663965225219727, -1.9073486328125e-06], "choice_history": [97, 283, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 6, "hole2": "deathrattle"}], "hole2": [{"hole1": 6, "hole3": "FREE", "_type": "Template34", "hole0": "Boulderfist Ogre", "hole2": "ALL"}], "hole0": "BoulderfistOgre", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(MinionHasOgre())))\n", "score": -5.581023083564773, "score_history": [-3.0517578125e-05, -1.71661376953125e-05, -0.0018939182627946138, -9.810461779125035e-05, -2.264974000354414e-06, -5.2675604820251465e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.019229888916015625, -6.29425048828125e-05, -3.492827090667561e-05, -4.792213439941406e-05, -6.675719760096399e-06, -5.7220458984375e-06, -0.0002066702290903777, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.000682830810546875, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.000316619873046875, 0.0, -3.814697265625e-06, -0.165557861328125, -1.71661376953125e-05, -1.549708758830093e-05, -1.6689286894688848e-06, -5.280907862470485e-05, -1.1920928244535389e-07, -0.2916748523712158, -3.933906555175781e-06, -0.027108192443847656, -0.08669853210449219, -0.03949826955795288, -1.9073486328125e-06, -0.013011932373046875, -7.271765298355604e-06, -0.0005512237548828125, -1.52587890625e-05, -9.5367431640625e-06, -0.04749573767185211, -0.0002558190899435431, -0.02754497528076172, -5.7220458984375e-06, 0.0, -0.00733494758605957, -0.005268096923828125, 0.0, -1.9073486328125e-06, -0.0024480819702148438, -1.1444091796875e-05, -4.097428798675537, -0.7155332565307617, -0.01695825345814228, -0.013805150985717773], "choice_history": [97, 283, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "6", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 27, 246, "Deathrattle", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Thaddius", "<EOS>", "Player", "Selector", "<EOS>", "In", "Graveyard", "<EOS>", 346, 88, 325, "Minion", "Has", "Ogre", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole7": [{"_type": "Template79", "hole0": "MinionHasOgre"}], "hole6": "InGraveyard", "hole2": [{"_type": "Template79", "hole0": "Thaddius"}], "hole0": "Deathrattle", "_type": "Template39", "hole3": "PlayerSelector", "hole1": "Summon"}, "_type": "Template50", "hole0": 6, "hole2": "deathrattle"}], "hole2": [{"hole1": 6, "hole3": "FREE", "_type": "Template34", "hole0": "Boulderfist Ogre", "hole2": "ALL"}], "hole0": "BoulderfistOgre", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score": -8.661172562305403, "score_history": [-3.0517578125e-05, -1.71661376953125e-05, -0.0018939182627946138, -9.810461779125035e-05, -2.264974000354414e-06, -5.2675604820251465e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -8.595966339111328, -3.24249267578125e-05, -0.00012326239084359258, -2.5033950805664062e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0016225555445998907, 0.0, -1.9073486328125e-05, 0.0, -0.000125885009765625, 0.0, -0.00020420551300048828, 0.0, -3.814697265625e-06, -0.06026649475097656, -4.57763671875e-05, -9.298280929215252e-06, 0.0, -0.0006710263551212847, 0.0], "choice_history": [97, 283, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 6}], "hole2": [{"hole1": 6, "_type": "Template31", "hole0": "Boulderfist Ogre", "hole2": "ALL"}], "hole0": "BoulderfistOgre", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, p):\n        return Minion(6, 7)\n", "score": -8.858710069273677, "score_history": [-3.0517578125e-05, -1.71661376953125e-05, -0.0018939182627946138, -9.810461779125035e-05, -2.264974000354414e-06, -5.2675604820251465e-06, -2.2649765014648438e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -0.019229888916015625, -6.29425048828125e-05, -3.492827090667561e-05, -4.792213439941406e-05, -6.675719760096399e-06, -5.7220458984375e-06, -0.0002066702290903777, -5.7220458984375e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.000682830810546875, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -8.389985084533691, 0.0, -5.7220458984375e-06, -0.4458141326904297, -0.000148773193359375, -1.5139465176616795e-05, 0.0, -0.000356792937964201, 0.0], "choice_history": [97, 283, "Boulderfist", "Ogre", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 132, 299, "6", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 6}], "hole2": [{"hole1": 6, "hole3": "FREE", "_type": "Template34", "hole0": "Boulderfist Ogre", "hole2": "ALL"}], "hole0": "BoulderfistOgre", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}]}
{"gold_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.weapon.base_attack += 2\n        player.hero.change_temp_attack(2)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and player.weapon is not None\n", "beams": [{"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "score": -1.9007519847719578, "score_history": [-7.62939453125e-06, -0.0026798248291015625, -2.1457672119140625e-06, -3.611982901929878e-05, -1.6689286894688848e-06, -1.3351437701203395e-05, -7.641315460205078e-05, -5.722029527532868e-06, -1.71661376953125e-05, -0.0044002532958984375, -0.000148773193359375, -3.576277322281385e-06, -7.092952728271484e-05, 0.0, 0.0, -2.622600504764705e-06, 0.0, -0.10359382629394531, -1.71661376953125e-05, -0.000255584716796875, 0.0, -3.266334533691406e-05, 0.0, -2.181529998779297e-05, 0.0, -0.0001125335693359375, -7.62939453125e-05, -6.5565000113565475e-06, -7.653236389160156e-05, -0.06828117370605469, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -1.3709068298339844e-05, -6.866455078125e-05, -4.768371127283899e-06, -1.1920928244535389e-07, -2.2888001694809645e-05, -1.1920928244535389e-07, -3.290173117420636e-05, -2.3841855067985307e-07, -0.012169837951660156, -0.00011444091796875, -0.000278472900390625, -3.4332275390625e-05, -0.0008845329284667969, -2.2649765014648438e-06, -0.5575475692749023, -1.9073486328125e-06, -0.0076751708984375, 0.0, -0.007455945014953613, 0.0, -0.00925146322697401, -3.933906555175781e-06, -7.62939453125e-06, -0.8486213684082031, -9.5367431640625e-06, -0.0045604705810546875, -0.000118255615234375, -0.013979789800941944, -4.768370445162873e-07, -0.03930574655532837, 0.0, -2.09808349609375e-05, -0.021009445190429688, -0.09567928314208984, -0.10163509100675583, -5.805492401123047e-05], "choice_history": [97, 285, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "hole3": "FREE", "_type": "Template34", "hole0": "Deadly Poison", "hole2": "ROGUE"}], "hole0": "DeadlyPoison", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "add_buff", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template54", "hole0": "Frozen"}]}], "iter": {"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "score": -2.22279578642992, "score_history": [-7.62939453125e-06, -0.0026798248291015625, -2.1457672119140625e-06, -3.611982901929878e-05, -1.6689286894688848e-06, -1.3351437701203395e-05, -7.641315460205078e-05, -5.722029527532868e-06, -1.71661376953125e-05, -0.0044002532958984375, -0.000148773193359375, -3.576277322281385e-06, -7.092952728271484e-05, 0.0, 0.0, -2.622600504764705e-06, 0.0, -0.10359382629394531, -1.71661376953125e-05, -0.000255584716796875, 0.0, -3.266334533691406e-05, 0.0, -2.181529998779297e-05, 0.0, -0.0001125335693359375, -7.62939453125e-05, -6.5565000113565475e-06, -7.653236389160156e-05, -0.06828117370605469, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -1.3709068298339844e-05, -6.866455078125e-05, -4.768371127283899e-06, -1.1920928244535389e-07, -2.2888001694809645e-05, -1.1920928244535389e-07, -3.290173117420636e-05, -2.3841855067985307e-07, -0.012169837951660156, -0.00011444091796875, -0.000278472900390625, -3.4332275390625e-05, -0.0008845329284667969, -2.2649765014648438e-06, -0.5575475692749023, -1.9073486328125e-06, -0.0076751708984375, 0.0, -0.007455945014953613, 0.0, -0.00925146322697401, -3.933906555175781e-06, -7.62939453125e-06, -0.9468975067138672, -0.0017032623291015625, -0.000759124755859375, -3.814697265625e-05, -0.0004062652587890625, -1.1920928244535389e-07, -0.17360232770442963, -9.5367431640625e-06, -0.32362601161003113, 0.0], "choice_history": [97, 285, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "hole3": "FREE", "_type": "Template34", "hole0": "Deadly Poison", "hole2": "ROGUE"}], "hole0": "DeadlyPoison", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"id": "minion", "_type": "Name"}, "hole2": 3}], "iter": {"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n", "score": -2.244702189671969, "score_history": [-7.62939453125e-06, -0.0026798248291015625, -2.1457672119140625e-06, -3.611982901929878e-05, -1.6689286894688848e-06, -1.3351437701203395e-05, -7.641315460205078e-05, -5.722029527532868e-06, -1.71661376953125e-05, -0.0044002532958984375, -0.000148773193359375, -3.576277322281385e-06, -7.092952728271484e-05, 0.0, 0.0, -2.622600504764705e-06, 0.0, -0.10359382629394531, -1.71661376953125e-05, -0.000255584716796875, 0.0, -3.266334533691406e-05, 0.0, -2.181529998779297e-05, 0.0, -0.0001125335693359375, -7.62939453125e-05, -6.5565000113565475e-06, -7.653236389160156e-05, -0.06828117370605469, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -1.3709068298339844e-05, -6.866455078125e-05, -4.768371127283899e-06, -1.1920928244535389e-07, -2.2888001694809645e-05, -1.1920928244535389e-07, -3.290173117420636e-05, -2.3841855067985307e-07, -0.012169837951660156, -0.00011444091796875, -0.000278472900390625, -3.4332275390625e-05, -0.0008845329284667969, -2.2649765014648438e-06, -0.889714241027832, -0.3670673370361328, -0.009981155395507812, 0.0, -0.0001277923583984375, -1.9073486328125e-06, -0.007055521011352539, -2.2649765014648438e-06, -0.0010300874710083008, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005893707275390625, -3.4332275390625e-05, -9.72747802734375e-05, -1.9073486328125e-06, -0.000110626220703125, -1.1444091796875e-05, -0.00119781494140625, 0.0, -0.002664804458618164, 0.0, -0.001046296558342874, -9.930133819580078e-05, -1.1444091796875e-05, -0.2751293182373047, -2.09808349609375e-05, -0.0072231292724609375, -0.0001850128173828125, -0.021430250257253647, -1.0728830375228426e-06, -0.2053109109401703, 0.0, -1.71661376953125e-05, -0.014119148254394531, -0.12238216400146484, -0.1241602972149849, -4.887580871582031e-05], "choice_history": [97, 285, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "hole3": "FREE", "_type": "Template34", "hole0": "Deadly Poison", "hole2": "ROGUE"}], "hole0": "DeadlyPoison", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "add_buff", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template54", "hole0": "Frozen"}]}], "iter": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n", "score": -3.54980692463068, "score_history": [-7.62939453125e-06, -0.0026798248291015625, -2.1457672119140625e-06, -3.611982901929878e-05, -1.6689286894688848e-06, -1.3351437701203395e-05, -7.641315460205078e-05, -5.722029527532868e-06, -1.71661376953125e-05, -0.0044002532958984375, -0.000148773193359375, -3.576277322281385e-06, -7.092952728271484e-05, 0.0, 0.0, -2.622600504764705e-06, 0.0, -0.10359382629394531, -1.71661376953125e-05, -0.000255584716796875, 0.0, -3.266334533691406e-05, 0.0, -2.181529998779297e-05, 0.0, -0.0001125335693359375, -7.62939453125e-05, -6.5565000113565475e-06, -7.653236389160156e-05, -0.06828117370605469, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -1.3709068298339844e-05, -6.866455078125e-05, -4.768371127283899e-06, -1.1920928244535389e-07, -2.2888001694809645e-05, -1.1920928244535389e-07, -3.290173117420636e-05, -2.3841855067985307e-07, -0.012169837951660156, -0.00011444091796875, -0.000278472900390625, -3.4332275390625e-05, -0.0008845329284667969, -2.2649765014648438e-06, -0.5575475692749023, -1.9073486328125e-06, -0.0076751708984375, 0.0, -0.007455945014953613, 0.0, -0.00925146322697401, -3.933906555175781e-06, -7.62939453125e-06, -0.9468975067138672, -0.0017032623291015625, -0.000759124755859375, -3.814697265625e-05, -0.0004062652587890625, -1.1920928244535389e-07, -0.17360232770442963, -9.5367431640625e-06, -1.650637149810791, 0.0], "choice_history": [97, 285, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_temp_attack", "<EOS>", "2", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "hole3": "FREE", "_type": "Template34", "hole0": "Deadly Poison", "hole2": "ROGUE"}], "hole0": "DeadlyPoison", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"id": "minion", "_type": "Name"}, "hole2": 2}], "iter": {"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.weapon(minion)\n", "score": -3.959088078676878, "score_history": [-7.62939453125e-06, -0.0026798248291015625, -2.1457672119140625e-06, -3.611982901929878e-05, -1.6689286894688848e-06, -1.3351437701203395e-05, -7.641315460205078e-05, -5.722029527532868e-06, -1.71661376953125e-05, -0.0044002532958984375, -0.000148773193359375, -3.576277322281385e-06, -7.092952728271484e-05, 0.0, 0.0, -2.622600504764705e-06, 0.0, -0.10359382629394531, -1.71661376953125e-05, -0.000255584716796875, 0.0, -3.266334533691406e-05, 0.0, -2.181529998779297e-05, 0.0, -0.0001125335693359375, -7.62939453125e-05, -6.5565000113565475e-06, -7.653236389160156e-05, -0.06828117370605469, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -1.3709068298339844e-05, -6.866455078125e-05, -4.768371127283899e-06, -1.1920928244535389e-07, -2.2888001694809645e-05, -1.1920928244535389e-07, -3.290173117420636e-05, -2.3841855067985307e-07, -0.012169837951660156, -0.00011444091796875, -0.000278472900390625, -3.4332275390625e-05, -0.0008845329284667969, -2.2649765014648438e-06, -0.889714241027832, -0.3670673370361328, -0.009981155395507812, 0.0, -0.0001277923583984375, -1.9073486328125e-06, -0.007055521011352539, -2.2649765014648438e-06, -0.0010300874710083008, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005893707275390625, -3.4332275390625e-05, -9.72747802734375e-05, -1.9073486328125e-06, -0.000110626220703125, -1.1444091796875e-05, -0.00119781494140625, 0.0, -0.002664804458618164, 0.0, -0.001046296558342874, -9.930133819580078e-05, -1.1444091796875e-05, -0.2751293182373047, -2.09808349609375e-05, -0.0072231292724609375, -0.0001850128173828125, -0.021430250257253647, -1.0728830375228426e-06, -1.9231300354003906, 0.0, -0.0012187957763671875, -0.25107383728027344, 0.0, -0.005001663696020842, -1.1920928244535389e-07], "choice_history": [97, 285, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "weapon", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "hole3": "FREE", "_type": "Template34", "hole0": "Deadly Poison", "hole2": "ROGUE"}], "hole0": "DeadlyPoison", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "weapon", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}], "iter": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.change_attack(3)\n", "score": -4.053355480987378, "score_history": [-7.62939453125e-06, -0.0026798248291015625, -2.1457672119140625e-06, -3.611982901929878e-05, -1.6689286894688848e-06, -1.3351437701203395e-05, -7.641315460205078e-05, -5.722029527532868e-06, -1.71661376953125e-05, -0.0044002532958984375, -0.000148773193359375, -3.576277322281385e-06, -7.092952728271484e-05, 0.0, 0.0, -2.622600504764705e-06, 0.0, -0.10359382629394531, -1.71661376953125e-05, -0.000255584716796875, 0.0, -3.266334533691406e-05, 0.0, -2.181529998779297e-05, 0.0, -0.0001125335693359375, -7.62939453125e-05, -6.5565000113565475e-06, -7.653236389160156e-05, -0.06828117370605469, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -1.3709068298339844e-05, -6.866455078125e-05, -4.768371127283899e-06, -1.1920928244535389e-07, -2.2888001694809645e-05, -1.1920928244535389e-07, -3.290173117420636e-05, -2.3841855067985307e-07, -0.012169837951660156, -0.00011444091796875, -0.000278472900390625, -3.4332275390625e-05, -0.0008845329284667969, -2.2649765014648438e-06, -0.889714241027832, -0.3670673370361328, -0.009981155395507812, 0.0, -0.0001277923583984375, -1.9073486328125e-06, -0.007055521011352539, -2.2649765014648438e-06, -0.0010300874710083008, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005893707275390625, -3.4332275390625e-05, -9.72747802734375e-05, -1.9073486328125e-06, -0.000110626220703125, -1.1444091796875e-05, -0.00119781494140625, 0.0, -0.002664804458618164, 0.0, -0.001046296558342874, -9.930133819580078e-05, -1.1444091796875e-05, -1.7168798446655273, -0.0030574798583984375, -0.0005970001220703125, -3.814697265625e-05, -0.0006374120712280273, 0.0, -0.5778773427009583, 0.0, -0.27959439158439636, 0.0], "choice_history": [97, 285, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "hole3": "FREE", "_type": "Template34", "hole0": "Deadly Poison", "hole2": "ROGUE"}], "hole0": "DeadlyPoison", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "change_attack", "_type": "Template65", "hole0": {"id": "minion", "_type": "Name"}, "hole2": 3}], "iter": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_attack(3)\n", "score": -4.372319923807659, "score_history": [-7.62939453125e-06, -0.0026798248291015625, -2.1457672119140625e-06, -3.611982901929878e-05, -1.6689286894688848e-06, -1.3351437701203395e-05, -7.641315460205078e-05, -5.722029527532868e-06, -1.71661376953125e-05, -0.0044002532958984375, -0.000148773193359375, -3.576277322281385e-06, -7.092952728271484e-05, 0.0, 0.0, -2.622600504764705e-06, 0.0, -0.10359382629394531, -1.71661376953125e-05, -0.000255584716796875, 0.0, -3.266334533691406e-05, 0.0, -2.181529998779297e-05, 0.0, -0.0001125335693359375, -7.62939453125e-05, -6.5565000113565475e-06, -7.653236389160156e-05, -0.06828117370605469, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -1.3709068298339844e-05, -6.866455078125e-05, -4.768371127283899e-06, -1.1920928244535389e-07, -2.2888001694809645e-05, -1.1920928244535389e-07, -3.290173117420636e-05, -2.3841855067985307e-07, -0.012169837951660156, -0.00011444091796875, -0.000278472900390625, -3.4332275390625e-05, -0.0008845329284667969, -2.2649765014648438e-06, -0.5575475692749023, -1.9073486328125e-06, -0.0076751708984375, 0.0, -0.007455945014953613, 0.0, -0.00925146322697401, -3.933906555175781e-06, -7.62939453125e-06, -0.9468975067138672, -0.0017032623291015625, -0.000759124755859375, -3.814697265625e-05, -0.0004062652587890625, -1.1920928244535389e-07, -2.201975107192993, -1.9073486328125e-06, -0.4447849988937378, 0.0], "choice_history": [97, 285, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "hole3": "FREE", "_type": "Template34", "hole0": "Deadly Poison", "hole2": "ROGUE"}], "hole0": "DeadlyPoison", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "change_attack", "_type": "Template65", "hole0": {"id": "minion", "_type": "Name"}, "hole2": 3}], "iter": {"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.add_buff(Buff(ManaChange(-3)))\n", "score": -4.380817496311536, "score_history": [-7.62939453125e-06, -0.0026798248291015625, -2.1457672119140625e-06, -3.611982901929878e-05, -1.6689286894688848e-06, -1.3351437701203395e-05, -7.641315460205078e-05, -5.722029527532868e-06, -1.71661376953125e-05, -0.0044002532958984375, -0.000148773193359375, -3.576277322281385e-06, -7.092952728271484e-05, 0.0, 0.0, -2.622600504764705e-06, 0.0, -0.10359382629394531, -1.71661376953125e-05, -0.000255584716796875, 0.0, -3.266334533691406e-05, 0.0, -2.181529998779297e-05, 0.0, -0.0001125335693359375, -7.62939453125e-05, -6.5565000113565475e-06, -7.653236389160156e-05, -0.06828117370605469, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -1.3709068298339844e-05, -6.866455078125e-05, -4.768371127283899e-06, -1.1920928244535389e-07, -2.2888001694809645e-05, -1.1920928244535389e-07, -3.290173117420636e-05, -2.3841855067985307e-07, -0.012169837951660156, -0.00011444091796875, -0.000278472900390625, -3.4332275390625e-05, -0.0008845329284667969, -2.2649765014648438e-06, -0.5575475692749023, -1.9073486328125e-06, -0.0076751708984375, 0.0, -0.007455945014953613, 0.0, -0.00925146322697401, -3.933906555175781e-06, -7.62939453125e-06, -0.8486213684082031, -9.5367431640625e-06, -0.0045604705810546875, -0.000118255615234375, -0.013979789800941944, -4.768370445162873e-07, -0.03930574655532837, 0.0, -2.09808349609375e-05, -0.021009445190429688, -2.5260419845581055, -0.08719146251678467, -9.262561798095703e-05, -5.7220458984375e-06, -0.0008068084716796875, -0.049071311950683594, -0.0006580352783203125, -0.0011577606201171875, -0.003383636474609375, -0.000194549560546875, -0.008834043517708778, 0.0], "choice_history": [97, 285, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 291, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "3", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "hole3": "FREE", "_type": "Template34", "hole0": "Deadly Poison", "hole2": "ROGUE"}], "hole0": "DeadlyPoison", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "add_buff", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole1": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ManaChange"}]}], "iter": {"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(weapon()))\n", "score": -4.55346588555274, "score_history": [-7.62939453125e-06, -0.0026798248291015625, -2.1457672119140625e-06, -3.611982901929878e-05, -1.6689286894688848e-06, -1.3351437701203395e-05, -7.641315460205078e-05, -5.722029527532868e-06, -1.71661376953125e-05, -0.0044002532958984375, -0.000148773193359375, -3.576277322281385e-06, -7.092952728271484e-05, 0.0, 0.0, -2.622600504764705e-06, 0.0, -0.10359382629394531, -1.71661376953125e-05, -0.000255584716796875, 0.0, -3.266334533691406e-05, 0.0, -2.181529998779297e-05, 0.0, -0.0001125335693359375, -7.62939453125e-05, -6.5565000113565475e-06, -7.653236389160156e-05, -0.06828117370605469, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -1.3709068298339844e-05, -6.866455078125e-05, -4.768371127283899e-06, -1.1920928244535389e-07, -2.2888001694809645e-05, -1.1920928244535389e-07, -3.290173117420636e-05, -2.3841855067985307e-07, -0.012169837951660156, -0.00011444091796875, -0.000278472900390625, -3.4332275390625e-05, -0.0008845329284667969, -2.2649765014648438e-06, -0.889714241027832, -0.3670673370361328, -0.009981155395507812, 0.0, -0.0001277923583984375, -1.9073486328125e-06, -0.007055521011352539, -2.2649765014648438e-06, -0.0010300874710083008, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005893707275390625, -3.4332275390625e-05, -9.72747802734375e-05, -1.9073486328125e-06, -0.000110626220703125, -1.1444091796875e-05, -0.00119781494140625, 0.0, -0.002664804458618164, 0.0, -0.001046296558342874, -9.930133819580078e-05, -1.1444091796875e-05, -0.2751293182373047, -2.09808349609375e-05, -0.0072231292724609375, -0.0001850128173828125, -0.021430250257253647, -1.0728830375228426e-06, -0.2053109109401703, 0.0, -1.71661376953125e-05, -0.014119148254394531, -0.12238216400146484, -2.414106845855713, -0.018866023048758507], "choice_history": [97, 285, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "weapon", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "hole3": "FREE", "_type": "Template34", "hole0": "Deadly Poison", "hole2": "ROGUE"}], "hole0": "DeadlyPoison", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "add_buff", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template54", "hole0": "weapon"}]}], "iter": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.add_buff(Buff(weapon()))\n", "score": -4.761236782279482, "score_history": [-7.62939453125e-06, -0.0026798248291015625, -2.1457672119140625e-06, -3.611982901929878e-05, -1.6689286894688848e-06, -1.3351437701203395e-05, -7.641315460205078e-05, -5.722029527532868e-06, -1.71661376953125e-05, -0.0044002532958984375, -0.000148773193359375, -3.576277322281385e-06, -7.092952728271484e-05, 0.0, 0.0, -2.622600504764705e-06, 0.0, -0.10359382629394531, -1.71661376953125e-05, -0.000255584716796875, 0.0, -3.266334533691406e-05, 0.0, -2.181529998779297e-05, 0.0, -0.0001125335693359375, -7.62939453125e-05, -6.5565000113565475e-06, -7.653236389160156e-05, -0.06828117370605469, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -1.3709068298339844e-05, -6.866455078125e-05, -4.768371127283899e-06, -1.1920928244535389e-07, -2.2888001694809645e-05, -1.1920928244535389e-07, -3.290173117420636e-05, -2.3841855067985307e-07, -0.012169837951660156, -0.00011444091796875, -0.000278472900390625, -3.4332275390625e-05, -0.0008845329284667969, -2.2649765014648438e-06, -0.5575475692749023, -1.9073486328125e-06, -0.0076751708984375, 0.0, -0.007455945014953613, 0.0, -0.00925146322697401, -3.933906555175781e-06, -7.62939453125e-06, -0.8486213684082031, -9.5367431640625e-06, -0.0045604705810546875, -0.000118255615234375, -0.013979789800941944, -4.768370445162873e-07, -0.03930574655532837, 0.0, -2.09808349609375e-05, -0.021009445190429688, -0.09567928314208984, -2.945035219192505, -0.017142724245786667], "choice_history": [97, 285, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "weapon", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "hole3": "FREE", "_type": "Template34", "hole0": "Deadly Poison", "hole2": "ROGUE"}], "hole0": "DeadlyPoison", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "add_buff", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template54", "hole0": "weapon"}]}], "iter": {"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.change_temp_attack(3)\n", "score": -4.777045841771908, "score_history": [-7.62939453125e-06, -0.0026798248291015625, -2.1457672119140625e-06, -3.611982901929878e-05, -1.6689286894688848e-06, -1.3351437701203395e-05, -7.641315460205078e-05, -5.722029527532868e-06, -1.71661376953125e-05, -0.0044002532958984375, -0.000148773193359375, -3.576277322281385e-06, -7.092952728271484e-05, 0.0, 0.0, -2.622600504764705e-06, 0.0, -0.10359382629394531, -1.71661376953125e-05, -0.000255584716796875, 0.0, -3.266334533691406e-05, 0.0, -2.181529998779297e-05, 0.0, -0.0001125335693359375, -7.62939453125e-05, -6.5565000113565475e-06, -7.653236389160156e-05, -0.06828117370605469, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -1.3709068298339844e-05, -6.866455078125e-05, -4.768371127283899e-06, -1.1920928244535389e-07, -2.2888001694809645e-05, -1.1920928244535389e-07, -3.290173117420636e-05, -2.3841855067985307e-07, -0.012169837951660156, -0.00011444091796875, -0.000278472900390625, -3.4332275390625e-05, -0.0008845329284667969, -2.2649765014648438e-06, -0.889714241027832, -0.3670673370361328, -0.009981155395507812, 0.0, -0.0001277923583984375, -1.9073486328125e-06, -0.007055521011352539, -2.2649765014648438e-06, -0.0010300874710083008, -9.5367431640625e-06, -9.5367431640625e-06, -0.0005893707275390625, -3.4332275390625e-05, -9.72747802734375e-05, -1.9073486328125e-06, -0.000110626220703125, -1.1444091796875e-05, -0.00119781494140625, 0.0, -0.002664804458618164, 0.0, -0.001046296558342874, -9.930133819580078e-05, -1.1444091796875e-05, -1.7168798446655273, -0.0030574798583984375, -0.0005970001220703125, -3.814697265625e-05, -0.0006374120712280273, 0.0, -1.2200063467025757, -5.7220458984375e-06, -0.36115002632141113, 0.0], "choice_history": [97, 285, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "hole3": "FREE", "_type": "Template34", "hole0": "Deadly Poison", "hole2": "ROGUE"}], "hole0": "DeadlyPoison", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"id": "minion", "_type": "Name"}, "hole2": 3}], "iter": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "score": -4.972285106862287, "score_history": [-7.62939453125e-06, -0.0026798248291015625, -2.1457672119140625e-06, -3.611982901929878e-05, -1.6689286894688848e-06, -1.3351437701203395e-05, -7.641315460205078e-05, -5.722029527532868e-06, -1.71661376953125e-05, -0.0044002532958984375, -0.000148773193359375, -3.576277322281385e-06, -7.092952728271484e-05, 0.0, 0.0, -2.622600504764705e-06, 0.0, -2.9291839599609375, -1.9073486328125e-06, -0.0008983612060546875, 0.0, -2.7298927307128906e-05, 0.0, -1.9431114196777344e-05, 0.0, -8.58306884765625e-05, -6.866455078125e-05, -5.364412118069595e-06, -7.653236389160156e-05, -0.3010692596435547, -0.000118255615234375, -5.53131103515625e-05, -9.5367431640625e-06, -2.09808349609375e-05, -8.0108642578125e-05, 0.0, -1.5616416931152344e-05, -7.05718994140625e-05, -4.768371127283899e-06, -1.1920928244535389e-07, -2.348403722862713e-05, -1.1920928244535389e-07, -3.32593554048799e-05, -2.3841855067985307e-07, -0.00988006591796875, -0.0001087188720703125, -0.00030517578125, -3.62396240234375e-05, -0.0008109807968139648, -3.576278118089249e-07, -0.5945672988891602, -1.9073486328125e-06, -0.0076503753662109375, 0.0, -0.007301449775695801, 0.0, -0.009803880006074905, -3.933906555175781e-06, -7.62939453125e-06, -0.8277101516723633, -9.5367431640625e-06, -0.004566192626953125, -0.0001163482666015625, -0.01414704043418169, -4.768370445162873e-07, -0.0400395542383194, 0.0, -2.09808349609375e-05, -0.021340370178222656, -0.09381103515625, -0.10065217316150665, -5.805492401123047e-05], "choice_history": [97, 285, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "hole3": "FREE", "_type": "Template34", "hole0": "Deadly Poison", "hole2": "PALADIN"}], "hole0": "DeadlyPoison", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "add_buff", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template54", "hole0": "Frozen"}]}], "iter": {"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "score": -5.179429426883431, "score_history": [-7.62939453125e-06, -0.0026798248291015625, -2.1457672119140625e-06, -3.611982901929878e-05, -1.6689286894688848e-06, -1.3351437701203395e-05, -7.641315460205078e-05, -5.722029527532868e-06, -1.71661376953125e-05, -0.0044002532958984375, -0.000148773193359375, -3.576277322281385e-06, -7.092952728271484e-05, 0.0, 0.0, -2.622600504764705e-06, 0.0, -3.3188934326171875, -0.0001010894775390625, -0.0007038116455078125, 0.0, -3.0875205993652344e-05, 0.0, -1.990795135498047e-05, 0.0, -8.20159912109375e-05, -4.1961669921875e-05, -6.079665126890177e-06, -7.832050323486328e-05, -0.12010574340820312, -0.0001010894775390625, -6.67572021484375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -9.5367431640625e-05, 0.0, -1.3709068298339844e-05, -7.2479248046875e-05, -4.768371127283899e-06, -1.1920928244535389e-07, -2.2768794224248268e-05, -1.1920928244535389e-07, -3.3140146115329117e-05, -2.3841855067985307e-07, -0.009832382202148438, -0.0001087188720703125, -0.000293731689453125, -3.62396240234375e-05, -0.0008282661437988281, -3.576278118089249e-07, -0.5822572708129883, -1.9073486328125e-06, -0.0075702667236328125, 0.0, -0.007265210151672363, 0.0, -0.00936352089047432, -3.933906555175781e-06, -7.62939453125e-06, -0.8386650085449219, -9.5367431640625e-06, -0.0045413970947265625, -0.0001163482666015625, -0.013776537962257862, -4.768370445162873e-07, -0.039397306740283966, 0.0, -2.09808349609375e-05, -0.02106952667236328, -0.09484577178955078, -0.10138662904500961, -5.805492401123047e-05], "choice_history": [97, 285, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Frozen", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "hole3": "FREE", "_type": "Template34", "hole0": "Deadly Poison", "hole2": "PRIEST"}], "hole0": "DeadlyPoison", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "add_buff", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template54", "hole0": "Frozen"}]}], "iter": {"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.<UNK>()\n", "score": -5.191873760987804, "score_history": [-7.62939453125e-06, -0.0026798248291015625, -2.1457672119140625e-06, -3.611982901929878e-05, -1.6689286894688848e-06, -1.3351437701203395e-05, -7.641315460205078e-05, -5.722029527532868e-06, -1.71661376953125e-05, -0.0044002532958984375, -0.000148773193359375, -3.576277322281385e-06, -7.092952728271484e-05, 0.0, 0.0, -2.622600504764705e-06, 0.0, -0.10359382629394531, -1.71661376953125e-05, -0.000255584716796875, 0.0, -3.266334533691406e-05, 0.0, -2.181529998779297e-05, 0.0, -0.0001125335693359375, -7.62939453125e-05, -6.5565000113565475e-06, -7.653236389160156e-05, -0.06828117370605469, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -1.3709068298339844e-05, -6.866455078125e-05, -4.768371127283899e-06, -1.1920928244535389e-07, -2.2888001694809645e-05, -1.1920928244535389e-07, -3.290173117420636e-05, -2.3841855067985307e-07, -0.012169837951660156, -0.00011444091796875, -0.000278472900390625, -3.4332275390625e-05, -0.0008845329284667969, -2.2649765014648438e-06, -0.5575475692749023, -1.9073486328125e-06, -0.0076751708984375, 0.0, -0.007455945014953613, 0.0, -0.00925146322697401, -3.933906555175781e-06, -7.62939453125e-06, -3.956544876098633, -0.00075531005859375, -0.35512542724609375, -1.9073486328125e-06, -0.0032291412353515625, -1.9073486328125e-06, -0.03896737098693848, 0.0, -0.0614919513463974, -2.384185791015625e-06], "choice_history": [97, 285, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "minion", "<EOS>", "<UNK>", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "hole3": "FREE", "_type": "Template34", "hole0": "Deadly Poison", "hole2": "ROGUE"}], "hole0": "DeadlyPoison", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"value": {"hole1": "<UNK>", "_type": "Template76", "hole0": {"id": "minion", "_type": "Name"}}, "_type": "Expr"}], "iter": {"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            if minion.card.minion_type is MINION_TYPE.BEAST:\n                minion.change_attack(3)\n", "score": -5.330842819622923, "score_history": [-7.62939453125e-06, -0.0026798248291015625, -2.1457672119140625e-06, -3.611982901929878e-05, -1.6689286894688848e-06, -1.3351437701203395e-05, -7.641315460205078e-05, -5.722029527532868e-06, -1.71661376953125e-05, -0.0044002532958984375, -0.000148773193359375, -3.576277322281385e-06, -7.092952728271484e-05, 0.0, 0.0, -2.622600504764705e-06, 0.0, -0.10359382629394531, -1.71661376953125e-05, -0.000255584716796875, 0.0, -3.266334533691406e-05, 0.0, -2.181529998779297e-05, 0.0, -0.0001125335693359375, -7.62939453125e-05, -6.5565000113565475e-06, -7.653236389160156e-05, -0.06828117370605469, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -1.3709068298339844e-05, -6.866455078125e-05, -4.768371127283899e-06, -1.1920928244535389e-07, -2.2888001694809645e-05, -1.1920928244535389e-07, -3.290173117420636e-05, -2.3841855067985307e-07, -0.012169837951660156, -0.00011444091796875, -0.000278472900390625, -3.4332275390625e-05, -0.0008845329284667969, -2.2649765014648438e-06, -0.5575475692749023, -1.9073486328125e-06, -0.0076751708984375, 0.0, -0.007455945014953613, 0.0, -0.00925146322697401, -3.933906555175781e-06, -7.62939453125e-06, -2.777853488922119, -0.0001811981201171875, -0.0002079010009765625, -1.9073486328125e-06, -0.010049819946289062, -7.62939453125e-06, -0.20342636108398438, -3.62396240234375e-05, -7.82012939453125e-05, -0.0001010894775390625, -0.010203003883361816, -2.3841855067985307e-07, -0.007732268888503313, -1.1920928244535389e-07, -0.023392779752612114, -1.5497195136049413e-06, -3.814697265625e-05, -0.28974151611328125, -7.62939453125e-06, -0.0047512054443359375, -7.62939453125e-06, -0.00138092041015625, -7.82012939453125e-05, -0.0011292695999145508, 0.0, -0.01602935791015625, 0.0, -0.00029754638671875, -0.3247852325439453, -0.002597808837890625, -0.00629425048828125, -1.33514404296875e-05, -0.021963953971862793, -5.960462772236497e-07, -0.5027492642402649, 0.0, -0.3499496579170227, 0.0], "choice_history": [97, 285, "Deadly", "Poison", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 358, 109, 160, 17, 153, 13, 143, 13, 143, 21, 174, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 343, 8, 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 358, 133, 304, 21, 174, "minion", "<EOS>", "change_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "hole3": "FREE", "_type": "Template34", "hole0": "Deadly Poison", "hole2": "ROGUE"}], "hole0": "DeadlyPoison", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"hole1": "change_attack", "_type": "Template65", "hole0": {"id": "minion", "_type": "Name"}, "hole2": 3}], "test": {"left": {"value": {"value": {"id": "minion", "_type": "Name"}, "attr": "card", "_type": "Attribute"}, "attr": "minion_type", "_type": "Attribute"}, "_type": "Compare", "ops": [{"_type": "Is"}], "comparators": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}]}, "_type": "If"}], "iter": {"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}]}
{"gold_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "beams": [{"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(damage()),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -2.27602745430503, "score_history": [-0.000652313232421875, -9.5367431640625e-06, -0.0028564624954015017, -9.059880540007725e-06, -2.9325108698685654e-05, -1.1919473763555288e-07, -2.6106828954652883e-05, -2.0265579223632812e-06, -7.43865966796875e-05, -0.13504505157470703, -5.340576171875e-05, -5.960462772236497e-07, -4.0411949157714844e-05, -5.245203283266164e-06, -1.9073486328125e-05, -7.30752944946289e-05, 0.0, -0.0009212493896484375, 0.0, -0.0035268068313598633, -9.5367431640625e-06, -0.03450202941894531, -0.14243507385253906, -0.9063687324523926, -0.000759924529120326, -1.9073486328125e-06, -0.05849647521972656, -3.814697265625e-06, -0.731597900390625, -0.0013193932827562094, -0.01171026285737753, 0.0, -1.1920928244535389e-07, -0.19076251983642578, -2.09808349609375e-05, -1.9073486328125e-06, -0.0071544647216796875, 0.0, -7.43865966796875e-05, 0.0, -0.0044765472412109375, -3.981590270996094e-05, 0.0, -4.38690185546875e-05, -3.0517578125e-05, -0.0011636018753051758, 0.0, -0.03158760070800781, 0.0, -0.000102996826171875, -0.0009332895278930664, 0.0, -0.008281467482447624, 0.0, -0.00027692317962646484, 0.0, -1.1444091796875e-05, -0.000152587890625, -3.814697265625e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.00032091137836687267, -1.1920928244535389e-07], "choice_history": [97, 283, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "battlecry", "<EOS>", 29, 266, "Give", "<EOS>", 346, 88, 325, "damage", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 6}], "hole2": [{"hole2": "SHAMAN", "hole0": "Fire Elemental", "_type": "Template27", "hole3": "battlecry", "hole1": 6, "hole4": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"_type": "Template79", "hole0": "damage"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}], "hole0": "FireElemental", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -2.4771988980517534, "score_history": [-0.000652313232421875, -9.5367431640625e-06, -0.0028564624954015017, -9.059880540007725e-06, -2.9325108698685654e-05, -1.1919473763555288e-07, -2.6106828954652883e-05, -2.0265579223632812e-06, -7.43865966796875e-05, -0.13504505157470703, -5.340576171875e-05, -5.960462772236497e-07, -4.0411949157714844e-05, -5.245203283266164e-06, -1.9073486328125e-05, -7.30752944946289e-05, 0.0, -0.0009212493896484375, 0.0, -0.0035268068313598633, -9.5367431640625e-06, -0.03450202941894531, -0.14243507385253906, -1.8827509880065918, -0.005648420192301273, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.007961318828165531, -1.9073486328125e-06, -0.12520039081573486, -3.0875155061949044e-05, 0.0, -0.024030685424804688, -3.0517578125e-05, -1.9073486328125e-06, -0.001552581787109375, 0.0, -7.2479248046875e-05, 0.0, -0.004814267158508301, -3.7550926208496094e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, -0.0015031099319458008, 0.0, -0.09356403350830078, 0.0, -9.5367431640625e-05, -0.0010762214660644531, 0.0, -0.007185934577137232, 0.0, -0.00028634071350097656, 0.0, -1.1444091796875e-05, -0.0004100799560546875, -3.24249267578125e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.00045061108539812267, -1.1920928244535389e-07], "choice_history": [97, 283, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "battlecry", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "3", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 6}], "hole2": [{"hole2": "SHAMAN", "hole0": "Fire Elemental", "_type": "Template27", "hole3": "battlecry", "hole1": 6, "hole4": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"n": 3, "_type": "Num"}], "_type": "Template43", "hole0": "Damage", "hole2": "CharacterSelector"}}], "hole0": "FireElemental", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(damage()),\n            MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -2.6539657680566933, "score_history": [-0.000652313232421875, -9.5367431640625e-06, -0.0028564624954015017, -9.059880540007725e-06, -2.9325108698685654e-05, -1.1919473763555288e-07, -2.6106828954652883e-05, -2.0265579223632812e-06, -7.43865966796875e-05, -0.13504505157470703, -5.340576171875e-05, -5.960462772236497e-07, -4.0411949157714844e-05, -5.245203283266164e-06, -1.9073486328125e-05, -7.30752944946289e-05, 0.0, -0.0009212493896484375, 0.0, -0.0035268068313598633, -9.5367431640625e-06, -0.03450202941894531, -2.317387580871582, -0.041610345244407654, -7.90357225923799e-05, -1.9073486328125e-05, -0.006069183349609375, -1.1444091796875e-05, -0.10044140368700027, -0.0028890185058116913, -0.0047626495361328125, -2.0265579223632812e-06, 0.0, -0.0006720367819070816, 0.0, -0.0008648632792755961, 0.0, -2.288818359375e-05, -0.0001926422119140625, -2.288818359375e-05, -7.62939453125e-06, -1.1920928244535389e-07, -0.001055002212524414, -1.1920928244535389e-07], "choice_history": [97, 283, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 88, 325, "damage", "<EOS>", "Minion", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 6}], "hole2": [{"hole2": "SHAMAN", "hole0": "Fire Elemental", "_type": "Template27", "hole3": "battlecry", "hole1": 6, "hole4": {"hole1": [{"_type": "Template79", "hole0": "damage"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}], "hole0": "FireElemental", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -3.399203501599729, "score_history": [-0.000652313232421875, -9.5367431640625e-06, -0.0028564624954015017, -9.059880540007725e-06, -2.9325108698685654e-05, -1.1919473763555288e-07, -2.6106828954652883e-05, -2.0265579223632812e-06, -7.43865966796875e-05, -0.13504505157470703, -5.340576171875e-05, -5.960462772236497e-07, -4.0411949157714844e-05, -5.245203283266164e-06, -1.9073486328125e-05, -7.30752944946289e-05, 0.0, -0.0009212493896484375, 0.0, -0.0035268068313598633, -9.5367431640625e-06, -0.03450202941894531, -0.14243507385253906, -1.8077540397644043, -0.00010322991875000298, -0.35806846618652344, -0.11480522155761719, 0.0, -0.06382572650909424, -1.9073486328125e-06, -0.6498109102249146, -4.434578295331448e-05, 0.0, -0.005291938781738281, -3.4332275390625e-05, -5.7220458984375e-06, -0.004842996597290039, 0.0, -0.0001163482666015625, 0.0, -0.0027147531509399414, -4.553794133244082e-05, 0.0, -4.76837158203125e-05, -3.814697265625e-05, -0.0018521547317504883, 0.0, -0.05914020538330078, 0.0, -9.5367431640625e-05, -0.0010609626770019531, 0.0, -0.007900952361524105, 0.0, -0.00031495094299316406, 0.0, -1.1444091796875e-05, -0.0004825592041015625, -3.24249267578125e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.000466227502329275, -1.1920928244535389e-07], "choice_history": [97, 283, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "battlecry", "<EOS>", 29, 266, "damage", "<EOS>", 346, 52, 179, "3", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 6}], "hole2": [{"hole2": "SHAMAN", "hole0": "Fire Elemental", "_type": "Template27", "hole3": "battlecry", "hole1": 6, "hole4": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"n": 3, "_type": "Num"}], "_type": "Template43", "hole0": "damage", "hole2": "CharacterSelector"}}], "hole0": "FireElemental", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(damage(3), HeroSelector\n            (players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -3.755761585205427, "score_history": [-0.000652313232421875, -9.5367431640625e-06, -0.0028564624954015017, -9.059880540007725e-06, -2.9325108698685654e-05, -1.1919473763555288e-07, -2.6106828954652883e-05, -2.0265579223632812e-06, -7.43865966796875e-05, -0.13504505157470703, -5.340576171875e-05, -5.960462772236497e-07, -4.0411949157714844e-05, -5.245203283266164e-06, -1.9073486328125e-05, -7.30752944946289e-05, 0.0, -0.0009212493896484375, 0.0, -0.0035268068313598633, -9.5367431640625e-06, -0.03450202941894531, -0.14243507385253906, -1.8077540397644043, -0.00010322991875000298, -0.35806846618652344, -0.11480522155761719, 0.0, -0.06382572650909424, -1.9073486328125e-06, -0.8693162202835083, -6.318072337307967e-06, -1.1920928244535389e-07, -0.1353750228881836, -3.814697265625e-05, -1.9073486328125e-06, -0.0036660432815551758, 0.0, -0.0001392364501953125, 0.0, -0.003755927085876465, -5.0187099986942485e-05, 0.0, -6.4849853515625e-05, -3.4332275390625e-05, -0.0022031068801879883, 0.0, -0.06601524353027344, 0.0, -9.34600830078125e-05, -0.0010820627212524414, 0.0, -0.007985590025782585, 0.0, -0.00030159950256347656, 0.0, -1.1444091796875e-05, -0.0002899169921875, -3.4332275390625e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.00044298169086687267, -1.1920928244535389e-07], "choice_history": [97, 283, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "battlecry", "<EOS>", 29, 266, "damage", "<EOS>", 346, 52, 179, "3", "<EOS>", "Hero", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 6}], "hole2": [{"hole2": "SHAMAN", "hole0": "Fire Elemental", "_type": "Template27", "hole3": "battlecry", "hole1": 6, "hole4": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"n": 3, "_type": "Num"}], "_type": "Template43", "hole0": "damage", "hole2": "HeroSelector"}}], "hole0": "FireElemental", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(5), HeroSelector(\n            players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -3.9123898425335, "score_history": [-0.000652313232421875, -9.5367431640625e-06, -0.0028564624954015017, -9.059880540007725e-06, -2.9325108698685654e-05, -1.1919473763555288e-07, -2.6106828954652883e-05, -2.0265579223632812e-06, -7.43865966796875e-05, -0.13504505157470703, -5.340576171875e-05, -5.960462772236497e-07, -4.0411949157714844e-05, -5.245203283266164e-06, -1.9073486328125e-05, -7.30752944946289e-05, 0.0, -0.0009212493896484375, 0.0, -0.0035268068313598633, -9.5367431640625e-06, -0.03450202941894531, -0.14243507385253906, -2.715763568878174, -8.583047019783407e-06, -2.6702880859375e-05, -0.0003070831298828125, 0.0, -0.4678100347518921, 0.0, -0.16222405433654785, -4.529942543740617e-06, 0.0, -0.17629241943359375, -3.814697265625e-05, -1.9073486328125e-06, -0.0018483400344848633, 0.0, -8.392333984375e-05, 0.0, -0.0051233768463134766, -5.0783153710654005e-05, 0.0, -7.43865966796875e-05, -5.340576171875e-05, -0.002546548843383789, 0.0, -0.048140525817871094, 0.0, -9.34600830078125e-05, -0.001038193702697754, 0.0, -0.00951909925788641, 0.0, -0.00031113624572753906, 0.0, -1.1444091796875e-05, -0.0002346038818359375, -3.4332275390625e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.0004543065733741969, -1.1920928244535389e-07], "choice_history": [97, 283, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "battlecry", "<EOS>", 29, 266, "Draw", "<EOS>", 346, 52, 179, "5", "<EOS>", "Hero", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 6}], "hole2": [{"hole2": "SHAMAN", "hole0": "Fire Elemental", "_type": "Template27", "hole3": "battlecry", "hole1": 6, "hole4": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"n": 5, "_type": "Num"}], "_type": "Template43", "hole0": "Draw", "hole2": "HeroSelector"}}], "hole0": "FireElemental", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(IncreaseElemental(\n            )), MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -3.9900980494065053, "score_history": [-0.000652313232421875, -9.5367431640625e-06, -0.0028564624954015017, -9.059880540007725e-06, -2.9325108698685654e-05, -1.1919473763555288e-07, -2.6106828954652883e-05, -2.0265579223632812e-06, -7.43865966796875e-05, -0.13504505157470703, -5.340576171875e-05, -5.960462772236497e-07, -4.0411949157714844e-05, -5.245203283266164e-06, -1.9073486328125e-05, -7.30752944946289e-05, 0.0, -0.0009212493896484375, 0.0, -0.0035268068313598633, -9.5367431640625e-06, -0.03450202941894531, -0.14243507385253906, -0.9063687324523926, -0.000759924529120326, -1.9073486328125e-06, -0.05849647521972656, -3.814697265625e-06, -1.6092571020126343, -0.8707939386367798, -7.152556463552173e-06, -0.023967383429408073, 0.0, -1.1920928244535389e-07, -0.14874267578125, -2.288818359375e-05, -1.9073486328125e-06, -0.0057048797607421875, 0.0, -5.91278076171875e-05, 0.0, -0.0047454833984375, -4.172325134277344e-05, 0.0, -4.1961669921875e-05, -3.24249267578125e-05, -0.0012894868850708008, 0.0, -0.029438018798828125, 0.0, -0.0001010894775390625, -0.0009142160415649414, 0.0, -0.008235571905970573, 0.0, -0.00027883052825927734, 0.0, -1.1444091796875e-05, -0.000148773193359375, -4.9591064453125e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.0002864598936866969, -1.1920928244535389e-07], "choice_history": [97, 283, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "battlecry", "<EOS>", 29, 266, "Give", "<EOS>", 346, 88, 325, "Increase", "Elemental", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 6}], "hole2": [{"hole2": "SHAMAN", "hole0": "Fire Elemental", "_type": "Template27", "hole3": "battlecry", "hole1": 6, "hole4": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"_type": "Template79", "hole0": "IncreaseElemental"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}], "hole0": "FireElemental", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Battlecry(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -4.252060141632498, "score_history": [-0.000652313232421875, -9.5367431640625e-06, -0.0028564624954015017, -9.059880540007725e-06, -2.9325108698685654e-05, -1.1919473763555288e-07, -2.6106828954652883e-05, -2.0265579223632812e-06, -7.43865966796875e-05, -0.13504505157470703, -5.340576171875e-05, -5.960462772236497e-07, -4.0411949157714844e-05, -5.245203283266164e-06, -1.9073486328125e-05, -7.30752944946289e-05, 0.0, -0.0009212493896484375, 0.0, -0.0035268068313598633, -9.5367431640625e-06, -0.03450202941894531, -0.14243507385253906, -3.364724636077881, -9.417517503607087e-06, -0.000217437744140625, -0.1296529769897461, -1.9073486328125e-06, -0.005529641639441252, -1.9073486328125e-06, -0.2799055576324463, -1.8835060473065823e-05, 0.0, -0.02001667022705078, -4.1961669921875e-05, -1.9073486328125e-06, -0.005443692207336426, 0.0, -0.0002002716064453125, 0.0, -0.0022433996200561523, -4.184246063232422e-05, 0.0, -4.38690185546875e-05, -1.52587890625e-05, -0.0018044710159301758, 0.0, -0.1122903823852539, 0.0, -9.918212890625e-05, -0.0011162757873535156, 0.0, -0.007030246779322624, 0.0, -0.00028443336486816406, 0.0, -9.5367431640625e-06, -0.0005321502685546875, -3.24249267578125e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.0004549026198219508, -1.1920928244535389e-07], "choice_history": [97, 283, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "battlecry", "<EOS>", 29, 266, "Battlecry", "<EOS>", 346, 52, 179, "3", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 6}], "hole2": [{"hole2": "SHAMAN", "hole0": "Fire Elemental", "_type": "Template27", "hole3": "battlecry", "hole1": 6, "hole4": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"n": 3, "_type": "Num"}], "_type": "Template43", "hole0": "Battlecry", "hole2": "CharacterSelector"}}], "hole0": "FireElemental", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(5), HeroSelector(\n            players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -4.3020386218572995, "score_history": [-0.000652313232421875, -9.5367431640625e-06, -0.0028564624954015017, -9.059880540007725e-06, -2.9325108698685654e-05, -1.1919473763555288e-07, -2.6106828954652883e-05, -2.0265579223632812e-06, -7.43865966796875e-05, -0.13504505157470703, -5.340576171875e-05, -5.960462772236497e-07, -4.0411949157714844e-05, -5.245203283266164e-06, -1.9073486328125e-05, -7.30752944946289e-05, 0.0, -0.0009212493896484375, 0.0, -0.0035268068313598633, -9.5367431640625e-06, -0.03450202941894531, -0.14243507385253906, -3.031825542449951, -0.004560097120702267, -3.814697265625e-06, -0.00032806396484375, -1.9073486328125e-06, -0.5794371366500854, -1.9073486328125e-06, -0.17994427680969238, -2.503394853192731e-06, -1.1920928244535389e-07, -0.08990478515625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0023041963577270508, 0.0, -0.0001373291015625, 0.0, -0.003994345664978027, -5.924700963078067e-05, 0.0, -6.4849853515625e-05, -3.62396240234375e-05, -0.0025140047073364258, 0.0, -0.07516670227050781, 0.0, -9.5367431640625e-05, -0.0011354684829711914, 0.0, -0.009109376929700375, 0.0, -0.00028824806213378906, 0.0, -1.1444091796875e-05, -0.00029754638671875, -3.4332275390625e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.0004504918761085719, -1.1920928244535389e-07], "choice_history": [97, 283, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "battlecry", "<EOS>", 29, 266, "Heal", "<EOS>", 346, 52, 179, "5", "<EOS>", "Hero", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 6}], "hole2": [{"hole2": "SHAMAN", "hole0": "Fire Elemental", "_type": "Template27", "hole3": "battlecry", "hole1": 6, "hole4": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"n": 5, "_type": "Num"}], "_type": "Template43", "hole0": "Heal", "hole2": "HeroSelector"}}], "hole0": "FireElemental", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(Increase3()),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -4.382081076046049, "score_history": [-0.000652313232421875, -9.5367431640625e-06, -0.0028564624954015017, -9.059880540007725e-06, -2.9325108698685654e-05, -1.1919473763555288e-07, -2.6106828954652883e-05, -2.0265579223632812e-06, -7.43865966796875e-05, -0.13504505157470703, -5.340576171875e-05, -5.960462772236497e-07, -4.0411949157714844e-05, -5.245203283266164e-06, -1.9073486328125e-05, -7.30752944946289e-05, 0.0, -0.0009212493896484375, 0.0, -0.0035268068313598633, -9.5367431640625e-06, -0.03450202941894531, -0.14243507385253906, -0.9063687324523926, -0.000759924529120326, -1.9073486328125e-06, -0.05849647521972656, -3.814697265625e-06, -1.6092571020126343, -1.1398335695266724, -1.9073486328125e-05, -0.10573851317167282, 0.0, 0.0, -0.1952075958251953, -2.09808349609375e-05, -1.9073486328125e-06, -0.004589080810546875, 0.0, -4.57763671875e-05, 0.0, -0.005279541015625, -4.5418739318847656e-05, 0.0, -4.57763671875e-05, -3.24249267578125e-05, -0.0013810396194458008, 0.0, -0.024839401245117188, 0.0, -9.72747802734375e-05, -0.0008741617202758789, 0.0, -0.0080717783421278, 0.0, -0.00027883052825927734, 0.0, -1.1444091796875e-05, -0.0001506805419921875, -4.76837158203125e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.0002862214751075953, -1.1920928244535389e-07], "choice_history": [97, 283, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "battlecry", "<EOS>", 29, 266, "Give", "<EOS>", 346, 88, 325, "Increase", "3", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 6}], "hole2": [{"hole2": "SHAMAN", "hole0": "Fire Elemental", "_type": "Template27", "hole3": "battlecry", "hole1": 6, "hole4": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"_type": "Template79", "hole0": "Increase3"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}], "hole0": "FireElemental", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(damage()),\n            MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -4.394179301578113, "score_history": [-0.000652313232421875, -9.5367431640625e-06, -0.0028564624954015017, -9.059880540007725e-06, -2.9325108698685654e-05, -1.1919473763555288e-07, -2.6106828954652883e-05, -2.0265579223632812e-06, -7.43865966796875e-05, -0.13504505157470703, -5.340576171875e-05, -5.960462772236497e-07, -4.0411949157714844e-05, -5.245203283266164e-06, -1.9073486328125e-05, -7.30752944946289e-05, 0.0, -0.0009212493896484375, 0.0, -0.0035268068313598633, -9.5367431640625e-06, -0.03450202941894531, -0.14243507385253906, -0.9063687324523926, -0.000759924529120326, -1.9073486328125e-06, -0.05849647521972656, -3.814697265625e-06, -0.731597900390625, -0.0013193932827562094, -0.01171026285737753, 0.0, -1.1920928244535389e-07, -1.7676973342895508, -9.5367431640625e-05, 0.0, -0.5682370662689209, -2.3841855067985307e-07, -0.00396728515625, -1.9073486328125e-06, -0.00024819374084472656, -0.0015889406204223633, 0.0, -0.020793022587895393, 0.0, -0.00030553340911865234, 0.0, -1.33514404296875e-05, -0.0002117156982421875, -3.0517578125e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.00043535229633562267, -1.1920928244535389e-07], "choice_history": [97, 283, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "battlecry", "<EOS>", 29, 266, "Give", "<EOS>", 346, 88, 325, "damage", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 6}], "hole2": [{"hole2": "SHAMAN", "hole0": "Fire Elemental", "_type": "Template27", "hole3": "battlecry", "hole1": 6, "hole4": {"hole4": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"_type": "Template79", "hole0": "damage"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}], "hole0": "FireElemental", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(3), HeroSelector(\n            players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -4.537409035190464, "score_history": [-0.000652313232421875, -9.5367431640625e-06, -0.0028564624954015017, -9.059880540007725e-06, -2.9325108698685654e-05, -1.1919473763555288e-07, -2.6106828954652883e-05, -2.0265579223632812e-06, -7.43865966796875e-05, -0.13504505157470703, -5.340576171875e-05, -5.960462772236497e-07, -4.0411949157714844e-05, -5.245203283266164e-06, -1.9073486328125e-05, -7.30752944946289e-05, 0.0, -0.0009212493896484375, 0.0, -0.0035268068313598633, -9.5367431640625e-06, -0.03450202941894531, -0.14243507385253906, -2.715763568878174, -8.583047019783407e-06, -2.6702880859375e-05, -0.0003070831298828125, 0.0, -0.9890096187591553, 0.0, -0.1410750150680542, -1.1801670552813448e-05, 0.0, -0.2938213348388672, -3.4332275390625e-05, -1.9073486328125e-06, -0.0014516115188598633, 0.0, -8.20159912109375e-05, 0.0, -0.004202127456665039, -4.3153759179404005e-05, 0.0, -7.2479248046875e-05, -4.57763671875e-05, -0.0022641420364379883, 0.0, -0.058106422424316406, 0.0, -9.5367431640625e-05, -0.0010590553283691406, 0.0, -0.008563517592847347, 0.0, -0.00031113624572753906, 0.0, -1.1444091796875e-05, -0.0002689361572265625, -3.4332275390625e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.0004426240629982203, -1.1920928244535389e-07], "choice_history": [97, 283, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "battlecry", "<EOS>", 29, 266, "Draw", "<EOS>", 346, 52, 179, "3", "<EOS>", "Hero", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 6}], "hole2": [{"hole2": "SHAMAN", "hole0": "Fire Elemental", "_type": "Template27", "hole3": "battlecry", "hole1": 6, "hole4": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"n": 3, "_type": "Num"}], "_type": "Template43", "hole0": "Draw", "hole2": "HeroSelector"}}], "hole0": "FireElemental", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(CobraForm()),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -4.745566523635517, "score_history": [-0.000652313232421875, -9.5367431640625e-06, -0.0028564624954015017, -9.059880540007725e-06, -2.9325108698685654e-05, -1.1919473763555288e-07, -2.6106828954652883e-05, -2.0265579223632812e-06, -7.43865966796875e-05, -0.13504505157470703, -5.340576171875e-05, -5.960462772236497e-07, -4.0411949157714844e-05, -5.245203283266164e-06, -1.9073486328125e-05, -7.30752944946289e-05, 0.0, -0.0009212493896484375, 0.0, -0.0035268068313598633, -9.5367431640625e-06, -0.03450202941894531, -0.14243507385253906, -0.9063687324523926, -0.000759924529120326, -1.9073486328125e-06, -0.05849647521972656, -3.814697265625e-06, -2.6034770011901855, -0.21805773675441742, -3.075552376685664e-05, -0.4056137800216675, 0.0, -1.1920928244535389e-07, -0.18250656127929688, -1.9073486328125e-05, -1.9073486328125e-06, -0.0045013427734375, 0.0, -5.53131103515625e-05, 0.0, -0.004993438720703125, -4.1604042053222656e-05, 0.0, -4.1961669921875e-05, -3.4332275390625e-05, -0.0012514591217041016, -1.1920928244535389e-07, -0.028685569763183594, 0.0, -0.0001049041748046875, -0.0009523630142211914, 0.0, -0.00850212387740612, 0.0, -0.00027692317962646484, 0.0, -1.1444091796875e-05, -0.0001506805419921875, -5.14984130859375e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.0002787112898658961, -1.1920928244535389e-07], "choice_history": [97, 283, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "battlecry", "<EOS>", 29, 266, "Give", "<EOS>", 346, 88, 325, "Cobra", "Form", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 6}], "hole2": [{"hole2": "SHAMAN", "hole0": "Fire Elemental", "_type": "Template27", "hole3": "battlecry", "hole1": 6, "hole4": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"_type": "Template79", "hole0": "CobraForm"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}], "hole0": "FireElemental", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(3),\n            CharacterSelector(Null, picker=UserPicker())), combo=Battlecry(\n            Damage(3), CharacterSelector(players=BothPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score": -4.766194739291649, "score_history": [-0.000652313232421875, -9.5367431640625e-06, -0.0028564624954015017, -9.059880540007725e-06, -2.9325108698685654e-05, -1.1919473763555288e-07, -2.6106828954652883e-05, -2.0265579223632812e-06, -7.43865966796875e-05, -2.216677665710449, -0.0011806488037109375, -2.09808349609375e-05, 0.0, -0.00017201900482177734, -7.62939453125e-06, -5.53131103515625e-05, -3.814697265625e-06, -0.001407623291015625, -5.91278076171875e-05, -4.9591064453125e-05, -7.307276246137917e-05, -0.00022410282690543681, -0.00015151285333558917, -0.0031414031982421875, -1.52587890625e-05, -7.62939453125e-06, -6.043913890607655e-05, -9.5367431640625e-06, -4.76837158203125e-05, -1.33514404296875e-05, -4.00543212890625e-05, -1.33514404296875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0006237030029296875, 0.0, -0.004352569580078125, -1.9073486328125e-05, -5.7220458984375e-06, 0.0, -0.0002613067626953125, -3.814697265625e-06, -0.27111339569091797, 0.0, -0.0324249267578125, -0.0761260986328125, -0.08188915252685547, -0.0019840002059936523, -0.000199555724975653, -1.9073486328125e-06, -0.0001850128173828125, -5.7220458984375e-06, -0.0010139176156371832, 0.0, -0.6710406541824341, -0.00017380714416503906, 0.0, -0.010843276977539062, -0.008684158325195312, -6.67572021484375e-05, -0.0008569955825805664, -3.933906555175781e-06, -0.000125885009765625, -7.2479248046875e-05, -1.9073486328125e-06, -0.0011394023895263672, -9.5367431640625e-06, -0.000537872314453125, -1.9073486328125e-06, -0.00026702880859375, -0.0005155801773071289, -1.1920928244535389e-07, -0.001338958740234375, -1.52587890625e-05, -0.18568134307861328, -3.814697265625e-06, -0.028632164001464844, -0.7508087158203125, -0.015109998174011707, -0.000151156957144849, 0.0, -1.52587890625e-05, 0.0, -0.0017862934619188309, -1.33514404296875e-05, -0.2942734956741333, -7.581704994663596e-05, 0.0, -0.00189208984375, -4.00543212890625e-05, -1.9073486328125e-06, -0.0020371675491333008, 0.0, -8.0108642578125e-05, 0.0, -0.0063822269439697266, -5.91278076171875e-05, 0.0, -4.76837158203125e-05, -5.53131103515625e-05, -0.0016461610794067383, 0.0, -0.0732412338256836, 0.0, -0.000102996826171875, -0.0011696815490722656, -1.1920928244535389e-07, -0.008544444106519222, 0.0, -0.00032067298889160156, 0.0, -1.33514404296875e-05, -0.0005664825439453125, -6.67572021484375e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -0.00034081932972185314, -1.1920928244535389e-07], "choice_history": [97, 283, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Fire", " ", "Elemental", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 354, 91, 253, "Damage", "<EOS>", 346, 52, 179, "3", "<EOS>", "Character", "Selector", "<EOS>", 346, 51, 176, "Null", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 95, 336, "combo", "<EOS>", 29, 266, "Damage", "<EOS>", 346, 52, 179, "3", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "6", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 6}], "hole2": [{"hole1": "__init__", "hole3": [{"hole2": "CharacterSelector", "hole0": "Damage", "_type": "Template40", "hole3": [{"value": "Null", "_type": "NameConstant"}], "hole1": [{"n": 3, "_type": "Num"}], "hole4": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}]}, {"value": {"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"n": 3, "_type": "Num"}], "_type": "Template43", "hole0": "Damage", "hole2": "CharacterSelector"}, "arg": "combo", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Fire Elemental", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "FireElemental", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(3),\n            CharacterSelector(Null, picker=UserPicker())), combo=Battlecry(\n            Damage(3), CharacterSelector(Null, picker=UserPicker())))\n\n    def create_weapon(self, player):\n        return Minion(6, 5)\n", "score": -5.969828906756426, "score_history": [-0.000652313232421875, -9.5367431640625e-06, -0.0028564624954015017, -9.059880540007725e-06, -2.9325108698685654e-05, -1.1919473763555288e-07, -2.6106828954652883e-05, -2.0265579223632812e-06, -7.43865966796875e-05, -2.216677665710449, -0.0011806488037109375, -2.09808349609375e-05, 0.0, -0.00017201900482177734, -7.62939453125e-06, -5.53131103515625e-05, -3.814697265625e-06, -0.001407623291015625, -5.91278076171875e-05, -4.9591064453125e-05, -7.307276246137917e-05, -0.00022410282690543681, -0.00015151285333558917, -0.0031414031982421875, -1.52587890625e-05, -7.62939453125e-06, -6.043913890607655e-05, -9.5367431640625e-06, -4.76837158203125e-05, -1.33514404296875e-05, -4.00543212890625e-05, -1.33514404296875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0006237030029296875, 0.0, -0.004352569580078125, -1.9073486328125e-05, -5.7220458984375e-06, 0.0, -0.0002613067626953125, -3.814697265625e-06, -0.27111339569091797, 0.0, -0.0324249267578125, -0.0761260986328125, -0.08188915252685547, -0.0019840002059936523, -0.000199555724975653, -1.9073486328125e-06, -0.0001850128173828125, -5.7220458984375e-06, -0.0010139176156371832, 0.0, -0.6710406541824341, -0.00017380714416503906, 0.0, -0.010843276977539062, -0.008684158325195312, -6.67572021484375e-05, -0.0008569955825805664, -3.933906555175781e-06, -0.000125885009765625, -7.2479248046875e-05, -1.9073486328125e-06, -0.0011394023895263672, -9.5367431640625e-06, -0.000537872314453125, -1.9073486328125e-06, -0.00026702880859375, -0.0005155801773071289, -1.1920928244535389e-07, -0.001338958740234375, -1.52587890625e-05, -0.18568134307861328, -3.814697265625e-06, -0.028632164001464844, -1.0831708908081055, -0.0060100131668150425, -0.0003582221979741007, 0.0, -2.86102294921875e-05, 0.0, -0.06656774133443832, -7.748603820800781e-06, -0.38181209564208984, -0.000983595848083496, 0.0, -0.0014324188232421875, -0.025165557861328125, -1.9073486328125e-05, -0.0007345676422119141, -8.106231689453125e-06, -8.20159912109375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0007070299470797181, -2.0265579223632812e-06, -0.000152587890625, 0.0, -0.00015270709991455078, -0.0011339187622070312, -1.1920928244535389e-07, -0.4418722987174988, -1.9073486328125e-06, -0.0002673716517165303, -1.9073486328125e-06, -4.76837158203125e-05, -0.33574581146240234, -0.0048046112060546875, -2.586790287750773e-05, -3.814697265625e-06, -0.000316619873046875, 0.0, -0.010857924818992615, -1.1920928244535389e-07], "choice_history": [97, 283, "Fire", "Elemental", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Fire", " ", "Elemental", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 354, 91, 253, "Damage", "<EOS>", 346, 52, 179, "3", "<EOS>", "Character", "Selector", "<EOS>", 346, 51, 176, "Null", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 95, 336, "combo", "<EOS>", 29, 268, "Damage", "<EOS>", 346, 52, 179, "3", "<EOS>", "Character", "Selector", "<EOS>", 346, 51, 176, "Null", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 6, "_type": "Template68", "hole0": "Minion", "hole2": 5}], "hole2": [{"hole1": "__init__", "hole3": [{"hole2": "CharacterSelector", "hole0": "Damage", "_type": "Template40", "hole3": [{"value": "Null", "_type": "NameConstant"}], "hole1": [{"n": 3, "_type": "Num"}], "hole4": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}]}, {"value": {"hole2": "CharacterSelector", "hole0": "Damage", "_type": "Template43", "hole3": [{"value": "Null", "_type": "NameConstant"}], "hole1": [{"n": 3, "_type": "Num"}], "hole4": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}]}, "arg": "combo", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Fire Elemental", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "FireElemental", "_type": "Template5", "hole3": "create_weapon", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "beams": [{"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(4), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -1.1200771149130375, "score_history": [-0.000152587890625, -2.09808349609375e-05, -0.000722288154065609, -8.344639354618266e-06, -2.5748875486897305e-05, -7.748487405478954e-06, -1.1205671398784034e-05, -1.9073486328125e-06, -4.00543212890625e-05, -0.0008335113525390625, -0.1899089813232422, -5.364412118069595e-06, -1.072883515007561e-05, -4.291534423828125e-06, -4.38690185546875e-05, -6.677582859992981e-06, -1.33514404296875e-05, -0.0014400482177734375, -1.9073486328125e-06, -0.04721040651202202, -1.251697449333733e-05, -5.7220458984375e-06, -0.005077362060546875, -3.814697265625e-06, -0.3626909554004669, -1.33514404296875e-05, -0.49787628650665283, -1.8477359844837338e-05, -3.576278118089249e-07, -0.00014805792307015508, -1.9073486328125e-06, -8.559226262150332e-05, 0.0, -3.62396240234375e-05, -0.013241767883300781, -6.866455078125e-05, -1.1920928955078125e-05, -1.1920922133867862e-06, -0.00031280517578125, -1.1920928244535389e-07], "choice_history": [97, 283, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Draw", "<EOS>", 346, 52, 179, "4", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "HeroSelector", "hole2": "COMMON", "hole0": "Gnomish Inventor", "_type": "Template15", "hole3": "Draw", "hole1": 4, "hole4": [{"n": 4, "_type": "Num"}]}], "hole0": "GnomishInventor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(4), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -1.5871587809606282, "score_history": [-0.000152587890625, -2.09808349609375e-05, -0.000722288154065609, -8.344639354618266e-06, -2.5748875486897305e-05, -7.748487405478954e-06, -1.1205671398784034e-05, -1.9073486328125e-06, -4.00543212890625e-05, -0.0008335113525390625, -0.1899089813232422, -5.364412118069595e-06, -1.072883515007561e-05, -4.291534423828125e-06, -4.38690185546875e-05, -6.677582859992981e-06, -1.33514404296875e-05, -0.0014400482177734375, -1.9073486328125e-06, -0.04721040651202202, -1.251697449333733e-05, -5.7220458984375e-06, -0.005077362060546875, -3.814697265625e-06, -0.3626909554004669, -1.33514404296875e-05, -0.9668980836868286, -8.702239938429557e-06, -9.536738616588991e-07, -0.0001691579818725586, -1.9073486328125e-06, -5.936621892033145e-05, 0.0, -3.62396240234375e-05, -0.011340141296386719, -0.0001163482666015625, -9.894371032714844e-06, -1.9073468138230965e-06, -0.0002422332763671875, -1.1920928244535389e-07], "choice_history": [97, 283, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Draw", "<EOS>", 346, 52, 179, "4", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "PlayerSelector", "hole2": "COMMON", "hole0": "Gnomish Inventor", "_type": "Template15", "hole3": "Draw", "hole1": 4, "hole4": [{"n": 4, "_type": "Num"}]}], "hole0": "GnomishInventor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(0), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -2.063035916964928, "score_history": [-0.000152587890625, -2.09808349609375e-05, -0.000722288154065609, -8.344639354618266e-06, -2.5748875486897305e-05, -7.748487405478954e-06, -1.1205671398784034e-05, -1.9073486328125e-06, -4.00543212890625e-05, -0.0008335113525390625, -0.1899089813232422, -5.364412118069595e-06, -1.072883515007561e-05, -4.291534423828125e-06, -4.38690185546875e-05, -6.677582859992981e-06, -1.33514404296875e-05, -0.0014400482177734375, -1.9073486328125e-06, -0.04721040651202202, -1.251697449333733e-05, -5.7220458984375e-06, -0.005077362060546875, -3.814697265625e-06, -1.26340651512146, -1.9073486328125e-06, -0.5466108322143555, -7.867782187531702e-06, -2.3841855067985307e-07, -0.0001442432403564453, -1.9073486328125e-06, -5.853175753145479e-05, 0.0, -4.00543212890625e-05, -0.00695037841796875, -7.43865966796875e-05, -1.1801719665527344e-05, -1.311301275563892e-06, -0.000156402587890625, -1.1920928244535389e-07], "choice_history": [97, 283, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Draw", "<EOS>", 346, 52, 179, "Draw", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "PlayerSelector", "hole2": "COMMON", "hole0": "Gnomish Inventor", "_type": "Template15", "hole3": "Draw", "hole1": 4, "hole4": [{"n": 0, "_type": "Num"}]}], "hole0": "GnomishInventor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(0), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -2.405249786033991, "score_history": [-0.000152587890625, -2.09808349609375e-05, -0.000722288154065609, -8.344639354618266e-06, -2.5748875486897305e-05, -7.748487405478954e-06, -1.1205671398784034e-05, -1.9073486328125e-06, -4.00543212890625e-05, -0.0008335113525390625, -0.1899089813232422, -5.364412118069595e-06, -1.072883515007561e-05, -4.291534423828125e-06, -4.38690185546875e-05, -6.677582859992981e-06, -1.33514404296875e-05, -0.0014400482177734375, -1.9073486328125e-06, -0.04721040651202202, -1.251697449333733e-05, -5.7220458984375e-06, -0.005077362060546875, -3.814697265625e-06, -1.26340651512146, -1.9073486328125e-06, -0.8903703689575195, -1.2278503163543064e-05, -1.1920928244535389e-07, -0.00013947486877441406, -1.9073486328125e-06, -9.107588994083926e-05, 0.0, -4.1961669921875e-05, -0.0053577423095703125, -5.7220458984375e-05, -1.1920928955078125e-05, -8.344646857949556e-07, -0.000186920166015625, -1.1920928244535389e-07], "choice_history": [97, 283, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Draw", "<EOS>", 346, 52, 179, "Draw", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "HeroSelector", "hole2": "COMMON", "hole0": "Gnomish Inventor", "_type": "Template15", "hole3": "Draw", "hole1": 4, "hole4": [{"n": 0, "_type": "Num"}]}], "hole0": "GnomishInventor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(Draw()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -3.871606134327287, "score_history": [-0.000152587890625, -2.09808349609375e-05, -0.000722288154065609, -8.344639354618266e-06, -2.5748875486897305e-05, -7.748487405478954e-06, -1.1205671398784034e-05, -1.9073486328125e-06, -4.00543212890625e-05, -0.0008335113525390625, -0.1899089813232422, -5.364412118069595e-06, -1.072883515007561e-05, -4.291534423828125e-06, -4.38690185546875e-05, -6.677582859992981e-06, -1.33514404296875e-05, -0.0014400482177734375, -1.9073486328125e-06, -3.294616222381592, -0.1523302048444748, 0.0, -0.12089061737060547, -4.00543212890625e-05, -0.10900888592004776, -0.0001723766326904297, -0.0004121065139770508, -4.649158654501662e-06, -7.152555099310121e-07, -0.00012147425877628848, -5.7220458984375e-06, -0.00015282630920410156, 0.0, -5.91278076171875e-05, -0.000301361083984375, -0.0001354217529296875, -1.5497207641601562e-05, -2.861018856492592e-06, -7.62939453125e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Give", "<EOS>", 346, 88, 325, "Draw", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "PlayerSelector", "hole2": "COMMON", "hole0": "Gnomish Inventor", "_type": "Template15", "hole3": "Give", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "Draw"}]}], "hole0": "GnomishInventor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -3.913577634260143, "score_history": [-0.000152587890625, -2.09808349609375e-05, -0.000722288154065609, -8.344639354618266e-06, -2.5748875486897305e-05, -7.748487405478954e-06, -1.1205671398784034e-05, -1.9073486328125e-06, -4.00543212890625e-05, -0.0008335113525390625, -3.6791810989379883, -0.0001075214022421278, -4.0054314013104886e-05, -2.0265579223632812e-06, -3.445148468017578e-05, -1.0048679541796446e-05, 0.0, -0.08122634887695312, 0.0, -0.06378122419118881, -9.179088920063805e-06, -0.0854923352599144, -0.0009772824123501778, -4.768370445162873e-07, -4.649161928682588e-05, 0.0, -0.00015497207641601562, 0.0, -7.43865966796875e-05, -0.000431060791015625, -9.1552734375e-05, -1.7523765563964844e-05, -2.622600959512056e-06, -7.2479248046875e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 201, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "PlayerSelector", "hole2": "COMMON", "hole0": "Gnomish Inventor", "_type": "Template15", "hole3": "Draw", "hole1": 4}], "hole0": "GnomishInventor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(2), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -4.166757416384932, "score_history": [-0.000152587890625, -2.09808349609375e-05, -0.000722288154065609, -8.344639354618266e-06, -2.5748875486897305e-05, -7.748487405478954e-06, -1.1205671398784034e-05, -1.9073486328125e-06, -4.00543212890625e-05, -0.0008335113525390625, -0.1899089813232422, -5.364412118069595e-06, -1.072883515007561e-05, -4.291534423828125e-06, -4.38690185546875e-05, -6.677582859992981e-06, -1.33514404296875e-05, -0.0014400482177734375, -1.9073486328125e-06, -0.04721040651202202, -1.251697449333733e-05, -5.7220458984375e-06, -0.005077362060546875, -3.814697265625e-06, -3.840453624725342, 0.0, -0.07105112075805664, -1.2040087312925607e-05, -1.1920928244535389e-07, -0.00022518634796142578, -1.9073486328125e-06, -9.095668065128848e-05, 0.0, -3.814697265625e-05, -0.008981704711914062, -8.7738037109375e-05, -1.1920928955078125e-05, -8.344646857949556e-07, -0.000232696533203125, 0.0], "choice_history": [97, 283, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Draw", "<EOS>", 346, 52, 179, "2", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "HeroSelector", "hole2": "COMMON", "hole0": "Gnomish Inventor", "_type": "Template15", "hole3": "Draw", "hole1": 4, "hole4": [{"n": 2, "_type": "Num"}]}], "hole0": "GnomishInventor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -4.7117092089763375, "score_history": [-0.000152587890625, -2.09808349609375e-05, -0.000722288154065609, -8.344639354618266e-06, -2.5748875486897305e-05, -7.748487405478954e-06, -1.1205671398784034e-05, -1.9073486328125e-06, -4.00543212890625e-05, -0.0008335113525390625, -4.459521770477295, -1.5854784578550607e-05, -1.549720582261216e-05, -3.933906555175781e-06, -0.14372265338897705, -1.1466167052276433e-05, -1.9073486328125e-06, -0.0024261474609375, -2.384185791015625e-06, -0.032349590212106705, -4.5776359911542386e-05, -0.05679519474506378, -0.0003146642120555043, -9.536738616588991e-07, -1.1444091796875e-05, -0.0013856887817382812, -3.814697265625e-06, -0.009817159734666348, -0.00011682364856824279, -1.3470649719238281e-05, -0.0013937768526375294, 0.0, -2.6941299438476562e-05, 0.0, -4.38690185546875e-05, -0.0014190673828125, -6.866455078125e-05, -2.586841583251953e-05, -2.264974000354414e-06, -0.00032806396484375, -1.1920928244535389e-07], "choice_history": [97, 283, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 204, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "PlayerSelector", "hole2": "COMMON", "hole0": "Gnomish Inventor", "_type": "Template15", "hole3": "Draw", "hole1": 4, "hole6": [{"_type": "Template79", "hole0": "EnemyPlayer"}]}], "hole0": "GnomishInventor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Bounce(), Draw(picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -5.296891849615491, "score_history": [-0.000152587890625, -2.09808349609375e-05, -0.000722288154065609, -8.344639354618266e-06, -2.5748875486897305e-05, -7.748487405478954e-06, -1.1205671398784034e-05, -1.9073486328125e-06, -4.00543212890625e-05, -0.0008335113525390625, -4.797023773193359, -7.533879397669807e-05, -1.823902130126953e-05, -4.768370445162873e-07, -2.491474151611328e-05, -3.4873373806476593e-06, -1.9073486328125e-06, -0.0042572021484375, -2.0265579223632812e-06, -0.35397836565971375, -0.004444838967174292, -0.0022771686781197786, -6.794917680963408e-06, -0.08622169494628906, -0.0012912750244140625, -1.9073486328125e-06, -0.02636767365038395, -5.960462772236497e-07, -0.0007915496826171875, -3.814697265625e-06, -0.0007902383804321289, -5.0187110900878906e-05, -2.3841855067985307e-07, -0.0001574754569446668, 0.0, -4.029273986816406e-05, 0.0, -5.91278076171875e-05, -0.016933441162109375, -5.14984130859375e-05, -2.5033950805664062e-05, -2.861018856492592e-06, -0.000164031982421875, 0.0], "choice_history": [97, 283, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 202, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Bounce", "<EOS>", "Draw", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "Draw", "hole2": "COMMON", "hole0": "Gnomish Inventor", "_type": "Template15", "hole3": "Bounce", "hole1": 4}], "hole0": "GnomishInventor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(Draw()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -6.131823894637641, "score_history": [-0.000152587890625, -2.09808349609375e-05, -0.000722288154065609, -8.344639354618266e-06, -2.5748875486897305e-05, -7.748487405478954e-06, -1.1205671398784034e-05, -1.9073486328125e-06, -4.00543212890625e-05, -0.0008335113525390625, -0.1899089813232422, -5.364412118069595e-06, -1.072883515007561e-05, -4.291534423828125e-06, -4.38690185546875e-05, -6.677582859992981e-06, -1.33514404296875e-05, -0.0014400482177734375, -1.9073486328125e-06, -5.536930561065674, -0.0015647381078451872, -2.86102294921875e-05, -9.1552734375e-05, -3.4332275390625e-05, -0.3983088731765747, -0.0003103016351815313, -0.0004483461380004883, -7.271760750882095e-06, -5.960462772236497e-07, -0.00011730193364201114, -5.7220458984375e-06, -0.00012385845184326172, 0.0, -5.7220458984375e-05, -0.000308990478515625, -0.000133514404296875, -1.3709068298339844e-05, -2.3841830625315197e-06, -7.62939453125e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Draw", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "PlayerSelector", "hole2": "COMMON", "hole0": "Gnomish Inventor", "_type": "Template15", "hole3": "Summon", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "Draw"}]}], "hole0": "GnomishInventor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (0)), Buff(ChangeHealth(1))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -6.149509704972097, "score_history": [-0.000152587890625, -2.09808349609375e-05, -0.000722288154065609, -8.344639354618266e-06, -2.5748875486897305e-05, -7.748487405478954e-06, -1.1205671398784034e-05, -1.9073486328125e-06, -4.00543212890625e-05, -0.0008335113525390625, -4.113724708557129, -0.0001535415358375758, -2.586841583251953e-05, -1.1920928244535389e-07, -0.0001239776611328125, -2.9053539037704468e-05, -1.9073486328125e-06, -0.001514434814453125, 0.0, -0.04219936206936836, -0.0021374854259192944, 0.0, -0.5056896209716797, -0.011976242065429688, -0.013000654987990856, -0.15620172023773193, -1.3113007298670709e-05, -5.7220458984375e-06, -0.00046539306640625, -1.9073486328125e-05, -0.12362943589687347, -1.33514404296875e-05, -0.004566669464111328, -0.00022912025451660156, -3.528593879309483e-05, -0.034490011632442474, -5.960462772236497e-07, -0.1923433393239975, -4.971027374267578e-05, 0.0, -1.33514404296875e-05, -0.22666263580322266, -0.19660377502441406, -4.00543212890625e-05, -3.814697265625e-06, -0.012677740305662155, -0.0031080245971679688, -0.00010788402141770348, -5.7220458984375e-06, -0.0022764205932617188, -0.005100250244140625, -1.1444091796875e-05, -0.00019073486328125, -0.019924402236938477, -2.2649765014648438e-06, -2.288818359375e-05, -0.13164615631103516, -0.006955146789550781, -0.0030966997146606445, -0.0010864724172279239, -1.9073486328125e-06, -5.7220458984375e-06, -0.005466461181640625, -1.33514404296875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00020051002502441406, -3.933906555175781e-06, -0.19408798217773438, -1.0728830375228426e-06, -0.0011844635009765625, -0.0026073455810546875, -1.9073486328125e-06, -0.005486726760864258, -1.9669460016302764e-05, -0.0015192031860351562, -2.09808349609375e-05, -0.12002041935920715, -9.5367431640625e-06, -0.0002002716064453125, -1.9073486328125e-06, -0.00017368793487548828, 0.0, -4.57763671875e-05, -0.0040454864501953125, -6.29425048828125e-05, -1.9788742065429688e-05, -3.576272320060525e-06, -0.0002919435501098633, 0.0], "choice_history": [97, 283, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 208, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Give", "<EOS>", 346, 58, 231, "Change", "Attack", "<EOS>", 346, 52, 179, "Draw", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", "Self", "Selector", "<EOS>", 346, 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "SelfSelector", "hole2": "COMMON", "hole0": "Gnomish Inventor", "_type": "Template15", "hole3": "Give", "hole1": 4, "hole4": [{"hole1": [{"n": 0, "_type": "Num"}], "hole3": 1, "_type": "Template32", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}], "hole8": [{"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}]}], "hole0": "GnomishInventor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -6.28102051327982, "score_history": [-0.000152587890625, -2.09808349609375e-05, -0.000722288154065609, -8.344639354618266e-06, -2.5748875486897305e-05, -7.748487405478954e-06, -1.1205671398784034e-05, -1.9073486328125e-06, -4.00543212890625e-05, -0.0008335113525390625, -3.6791810989379883, -0.0001075214022421278, -4.0054314013104886e-05, -2.0265579223632812e-06, -3.445148468017578e-05, -1.0048679541796446e-05, 0.0, -2.5771093368530273, -4.768367489305092e-06, -0.0045368000864982605, -9.179109838441946e-06, -0.01588107831776142, -0.0013749731006100774, -9.536738616588991e-07, -5.424021583166905e-05, 0.0, -0.00014257431030273438, 0.0, -8.20159912109375e-05, -0.000431060791015625, -0.0001049041748046875, -1.7523765563964844e-05, -2.7418097943154862e-06, -6.866455078125e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 201, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "PlayerSelector", "hole2": "FREE", "hole0": "Gnomish Inventor", "_type": "Template15", "hole3": "Draw", "hole1": 4}], "hole0": "GnomishInventor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(4), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -6.30017624787137, "score_history": [-0.000152587890625, -2.09808349609375e-05, -0.000722288154065609, -8.344639354618266e-06, -2.5748875486897305e-05, -7.748487405478954e-06, -1.1205671398784034e-05, -1.9073486328125e-06, -4.00543212890625e-05, -0.0008335113525390625, -0.1899089813232422, -5.364412118069595e-06, -1.072883515007561e-05, -4.291534423828125e-06, -4.38690185546875e-05, -6.677582859992981e-06, -1.33514404296875e-05, -0.0014400482177734375, -1.9073486328125e-06, -5.963608264923096, -0.0001877400791272521, 0.0, -0.00311279296875, -4.9591064453125e-05, -0.005915284156799316, -7.62939453125e-06, -0.11595451831817627, -5.1855226047337055e-05, -1.1920922133867862e-06, -0.00016796581621747464, 0.0, -0.00010156630742130801, 0.0, -4.00543212890625e-05, -0.01733112335205078, -7.82012939453125e-05, -1.1801719665527344e-05, -1.311301275563892e-06, -0.0002956390380859375, -1.1920928244535389e-07], "choice_history": [97, 283, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "4", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "HeroSelector", "hole2": "COMMON", "hole0": "Gnomish Inventor", "_type": "Template15", "hole3": "Heal", "hole1": 4, "hole4": [{"n": 4, "_type": "Num"}]}], "hole0": "GnomishInventor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(4), COMMON()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -6.401474219277695, "score_history": [-0.000152587890625, -2.09808349609375e-05, -0.000722288154065609, -8.344639354618266e-06, -2.5748875486897305e-05, -7.748487405478954e-06, -1.1205671398784034e-05, -1.9073486328125e-06, -4.00543212890625e-05, -0.0008335113525390625, -0.1899089813232422, -5.364412118069595e-06, -1.072883515007561e-05, -4.291534423828125e-06, -4.38690185546875e-05, -6.677582859992981e-06, -1.33514404296875e-05, -0.0014400482177734375, -1.9073486328125e-06, -0.04721040651202202, -1.251697449333733e-05, -5.7220458984375e-06, -0.005077362060546875, -3.814697265625e-06, -0.3626909554004669, -1.33514404296875e-05, -5.310151100158691, -0.005983591079711914, -0.0008676052093505859, 0.0, -8.845329284667969e-05, 0.0, -3.4332275390625e-05, -0.47560787200927734, -6.103515625e-05, -1.1920928955078125e-05, -1.5497195136049413e-06, -0.000392913818359375, -1.1920928244535389e-07], "choice_history": [97, 283, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Draw", "<EOS>", 346, 52, 179, "4", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "COMMON", "hole2": "COMMON", "hole0": "Gnomish Inventor", "_type": "Template15", "hole3": "Draw", "hole1": 4, "hole4": [{"n": 4, "_type": "Num"}]}], "hole0": "GnomishInventor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (0)), Buff(ChangeHealth(1))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.BEAST))), value=0))\n            )\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -8.29457176415854, "score_history": [-0.000152587890625, -2.09808349609375e-05, -0.000722288154065609, -8.344639354618266e-06, -2.5748875486897305e-05, -7.748487405478954e-06, -1.1205671398784034e-05, -1.9073486328125e-06, -4.00543212890625e-05, -0.0008335113525390625, -4.113724708557129, -0.0001535415358375758, -2.586841583251953e-05, -1.1920928244535389e-07, -0.0001239776611328125, -2.9053539037704468e-05, -1.9073486328125e-06, -0.001514434814453125, 0.0, -0.04219936206936836, -0.0021374854259192944, 0.0, -0.5056896209716797, -0.011976242065429688, -0.013000654987990856, -0.15620172023773193, -1.3113007298670709e-05, -5.7220458984375e-06, -0.00046539306640625, -1.9073486328125e-05, -0.12362943589687347, -1.33514404296875e-05, -0.004566669464111328, -0.00022912025451660156, -3.528593879309483e-05, -0.034490011632442474, -5.960462772236497e-07, -0.1923433393239975, -4.971027374267578e-05, 0.0, -1.33514404296875e-05, -0.22666263580322266, -0.19660377502441406, -4.00543212890625e-05, -3.814697265625e-06, -0.012677740305662155, -0.0031080245971679688, -0.00010788402141770348, -5.7220458984375e-06, -0.0022764205932617188, -0.005100250244140625, -1.1444091796875e-05, -0.00019073486328125, -0.019924402236938477, -2.2649765014648438e-06, -2.288818359375e-05, -0.13164615631103516, -0.006955146789550781, -0.0030966997146606445, -0.0010864724172279239, -1.9073486328125e-06, -5.7220458984375e-06, -0.005466461181640625, -1.33514404296875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00020051002502441406, -3.933906555175781e-06, -2.249485969543457, 0.0, -0.0015869140625, -0.0026063919067382812, 0.0, -0.004905223846435547, -1.3947435945738107e-05, -0.0015153884887695312, -2.09808349609375e-05, -0.2105962038040161, -5.7220458984375e-06, -0.000202178955078125, -1.9073486328125e-06, -0.00014138221740722656, 0.0, -4.38690185546875e-05, -0.0033435821533203125, -6.4849853515625e-05, -2.5391578674316406e-05, -3.576272320060525e-06, -0.0003032684326171875, 0.0], "choice_history": [97, 283, "Gnomish", "Inventor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 208, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Give", "<EOS>", 346, 58, 231, "Change", "Attack", "<EOS>", 346, 52, 179, "Draw", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", "Self", "Selector", "<EOS>", 346, 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "SelfSelector", "hole2": "COMMON", "hole0": "Gnomish Inventor", "_type": "Template15", "hole3": "Give", "hole1": 4, "hole4": [{"hole1": [{"n": 0, "_type": "Num"}], "hole3": 1, "_type": "Template32", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}], "hole8": [{"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}]}], "hole0": "GnomishInventor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n", "beams": [{"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n        player.hero.change_temp_attack(4)\n", "score": -1.588215409523528, "score_history": [-1.52587890625e-05, -0.0002422332763671875, -8.344646857949556e-07, -4.851709309150465e-05, -1.3589766240329482e-05, -3.5762758443524945e-07, -1.251697449333733e-05, -9.536738616588991e-07, -4.57763671875e-05, -0.0002346038818359375, -0.00011444091796875, -3.933904736186378e-06, -4.482269287109375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.4305104514278355e-06, 0.0, -0.001766204833984375, -1.9073486328125e-06, -0.001384735107421875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00084686279296875, -0.000701904296875, -0.0009250640869140625, -0.000141143798828125, -0.00019073486328125, -1.52587890625e-05, -1.9073486328125e-06, -2.3126602172851562e-05, -7.62939453125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00014734268188476562, -1.1920928244535389e-07, -0.20355701446533203, -0.000896453857421875, -0.0001087188720703125, -1.9073486328125e-06, -6.866455078125e-05, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.019775032997131348, 0.0, -0.012496590614318848, -0.00019073486328125, -0.2531149387359619, -1.9073486328125e-06, -0.1346120834350586, -0.00907135009765625, -0.000125885009765625, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.00049591064453125, 0.0, -0.7177801132202148, -0.0001735687255859375, -0.22843223810195923, -1.9073486328125e-06], "choice_history": [97, 285, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "FREE", "_type": "Template34", "hole0": "Heroic Strike", "hole2": "WARRIOR"}], "hole0": "HeroicStrike", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 4}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 4}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n        player.hero.increase_armor(2)\n", "score": -1.724913178688567, "score_history": [-1.52587890625e-05, -0.0002422332763671875, -8.344646857949556e-07, -4.851709309150465e-05, -1.3589766240329482e-05, -3.5762758443524945e-07, -1.251697449333733e-05, -9.536738616588991e-07, -4.57763671875e-05, -0.0002346038818359375, -0.00011444091796875, -3.933904736186378e-06, -4.482269287109375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.4305104514278355e-06, 0.0, -0.001766204833984375, -1.9073486328125e-06, -0.001384735107421875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00084686279296875, -0.000701904296875, -0.0009250640869140625, -0.000141143798828125, -0.00019073486328125, -1.52587890625e-05, -1.9073486328125e-06, -2.3126602172851562e-05, -7.62939453125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00014734268188476562, -1.1920928244535389e-07, -0.20355701446533203, -0.000896453857421875, -0.0001087188720703125, -1.9073486328125e-06, -6.866455078125e-05, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.019775032997131348, 0.0, -0.012496590614318848, -0.00019073486328125, -0.2531149387359619, -1.9073486328125e-06, -0.1346120834350586, -0.00907135009765625, -0.000125885009765625, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.00049591064453125, 0.0, -0.6900701522827148, -2.0265579223632812e-06, -0.3930134177207947, 0.0], "choice_history": [97, 285, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "FREE", "_type": "Template34", "hole0": "Heroic Strike", "hole2": "WARRIOR"}], "hole0": "HeroicStrike", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 4}, {"hole1": "increase_armor", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 2}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n        player.hero.increase_armor(4)\n", "score": -2.4998068797650745, "score_history": [-1.52587890625e-05, -0.0002422332763671875, -8.344646857949556e-07, -4.851709309150465e-05, -1.3589766240329482e-05, -3.5762758443524945e-07, -1.251697449333733e-05, -9.536738616588991e-07, -4.57763671875e-05, -0.0002346038818359375, -0.00011444091796875, -3.933904736186378e-06, -4.482269287109375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.4305104514278355e-06, 0.0, -0.001766204833984375, -1.9073486328125e-06, -0.001384735107421875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00084686279296875, -0.000701904296875, -0.0009250640869140625, -0.000141143798828125, -0.00019073486328125, -1.52587890625e-05, -1.9073486328125e-06, -2.3126602172851562e-05, -7.62939453125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00014734268188476562, -1.1920928244535389e-07, -0.20355701446533203, -0.000896453857421875, -0.0001087188720703125, -1.9073486328125e-06, -6.866455078125e-05, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.019775032997131348, 0.0, -0.012496590614318848, -0.00019073486328125, -0.2531149387359619, -1.9073486328125e-06, -0.1346120834350586, -0.00907135009765625, -0.000125885009765625, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.00049591064453125, 0.0, -0.6900701522827148, -2.0265579223632812e-06, -1.1679052114486694, -1.9073486328125e-06], "choice_history": [97, 285, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "4", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "FREE", "_type": "Template34", "hole0": "Heroic Strike", "hole2": "WARRIOR"}], "hole0": "HeroicStrike", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 4}, {"hole1": "increase_armor", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 4}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(3)\n        player.hero.change_temp_attack(4)\n", "score": -2.906921162015479, "score_history": [-1.52587890625e-05, -0.0002422332763671875, -8.344646857949556e-07, -4.851709309150465e-05, -1.3589766240329482e-05, -3.5762758443524945e-07, -1.251697449333733e-05, -9.536738616588991e-07, -4.57763671875e-05, -0.0002346038818359375, -0.00011444091796875, -3.933904736186378e-06, -4.482269287109375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.4305104514278355e-06, 0.0, -0.001766204833984375, -1.9073486328125e-06, -0.001384735107421875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00084686279296875, -0.000701904296875, -0.0009250640869140625, -0.000141143798828125, -0.00019073486328125, -1.52587890625e-05, -1.9073486328125e-06, -2.3126602172851562e-05, -7.62939453125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00014734268188476562, -1.1920928244535389e-07, -0.20355701446533203, -0.000896453857421875, -0.0001087188720703125, -1.9073486328125e-06, -6.866455078125e-05, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.019775032997131348, 0.0, -0.012496590614318848, -0.00019073486328125, -1.7973196506500244, 0.0, -0.11308956146240234, -0.008727073669433594, -7.62939453125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -0.000400543212890625, 0.0, -0.5658575296401978, -0.000171661376953125, -0.1768580824136734, -1.9073486328125e-06], "choice_history": [97, 285, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "FREE", "_type": "Template34", "hole0": "Heroic Strike", "hole2": "WARRIOR"}], "hole0": "HeroicStrike", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 3}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 4}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n        player.hero.change_temp_attack(2)\n", "score": -2.911057351833861, "score_history": [-1.52587890625e-05, -0.0002422332763671875, -8.344646857949556e-07, -4.851709309150465e-05, -1.3589766240329482e-05, -3.5762758443524945e-07, -1.251697449333733e-05, -9.536738616588991e-07, -4.57763671875e-05, -0.0002346038818359375, -0.00011444091796875, -3.933904736186378e-06, -4.482269287109375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.4305104514278355e-06, 0.0, -0.001766204833984375, -1.9073486328125e-06, -0.001384735107421875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00084686279296875, -0.000701904296875, -0.0009250640869140625, -0.000141143798828125, -0.00019073486328125, -1.52587890625e-05, -1.9073486328125e-06, -2.3126602172851562e-05, -7.62939453125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00014734268188476562, -1.1920928244535389e-07, -0.20355701446533203, -0.000896453857421875, -0.0001087188720703125, -1.9073486328125e-06, -6.866455078125e-05, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.019775032997131348, 0.0, -0.012496590614318848, -0.00019073486328125, -0.2531149387359619, -1.9073486328125e-06, -2.2539749145507812, -0.0006351470947265625, -5.352497100830078e-05, 0.0, -0.004757881164550781, -3.814697265625e-06, -0.1542356014251709, -1.52587890625e-05], "choice_history": [97, 285, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "FREE", "_type": "Template34", "hole0": "Heroic Strike", "hole2": "WARRIOR"}], "hole0": "HeroicStrike", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 4}, {"hole1": "hero", "_type": "Template52", "hole0": "player", "hole2": "change_temp_attack"}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n", "score": -3.0766646850171497, "score_history": [-1.52587890625e-05, -0.0002422332763671875, -8.344646857949556e-07, -4.851709309150465e-05, -1.3589766240329482e-05, -3.5762758443524945e-07, -1.251697449333733e-05, -9.536738616588991e-07, -4.57763671875e-05, -0.0002346038818359375, -0.00011444091796875, -3.933904736186378e-06, -4.482269287109375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.4305104514278355e-06, 0.0, -0.001766204833984375, -1.9073486328125e-06, -0.001384735107421875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00084686279296875, -0.000701904296875, -0.0009250640869140625, -0.000141143798828125, -0.00019073486328125, -1.52587890625e-05, -1.9073486328125e-06, -2.3126602172851562e-05, -7.62939453125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00014734268188476562, -1.1920928244535389e-07, -2.35357666015625, -0.0023136138916015625, -0.0001614093780517578, -1.9073486328125e-06, -0.0048122406005859375, -5.7220458984375e-06, -0.005537509918212891, -1.1444091796875e-05, -0.010957717895507812, -0.001567840576171875, -6.35385513305664e-05, 0.0, -0.0012502670288085938, 0.0, -0.6893519163131714, -1.9073486328125e-06], "choice_history": [97, 285, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "FREE", "_type": "Template34", "hole0": "Heroic Strike", "hole2": "WARRIOR"}], "hole0": "HeroicStrike", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "hero", "_type": "Template52", "hole0": "player", "hole2": "change_temp_attack"}, {"hole1": "hero", "_type": "Template52", "hole0": "player", "hole2": "change_temp_attack"}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "score": -3.1131846892896107, "score_history": [-1.52587890625e-05, -0.0002422332763671875, -8.344646857949556e-07, -4.851709309150465e-05, -1.3589766240329482e-05, -3.5762758443524945e-07, -1.251697449333733e-05, -9.536738616588991e-07, -4.57763671875e-05, -0.0002346038818359375, -0.00011444091796875, -3.933904736186378e-06, -4.482269287109375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.4305104514278355e-06, 0.0, -0.001766204833984375, -1.9073486328125e-06, -0.001384735107421875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00084686279296875, -0.000701904296875, -0.0009250640869140625, -0.000141143798828125, -0.00019073486328125, -1.52587890625e-05, -1.9073486328125e-06, -2.3126602172851562e-05, -7.62939453125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00014734268188476562, -1.1920928244535389e-07, -2.35357666015625, -0.0023136138916015625, -0.0001614093780517578, -1.9073486328125e-06, -0.0048122406005859375, -5.7220458984375e-06, -0.005537509918212891, -1.1444091796875e-05, -0.010957717895507812, -0.001567840576171875, -6.35385513305664e-05, 0.0, -0.0012502670288085938, 0.0, -0.7258738279342651, 0.0], "choice_history": [97, 285, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "FREE", "_type": "Template34", "hole0": "Heroic Strike", "hole2": "WARRIOR"}], "hole0": "HeroicStrike", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "hero", "_type": "Template52", "hole0": "player", "hole2": "change_temp_attack"}, {"hole1": "hero", "_type": "Template52", "hole0": "player", "hole2": "increase_armor"}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n        player.hero.change_temp_attack(3)\n", "score": -3.5864443767133167, "score_history": [-1.52587890625e-05, -0.0002422332763671875, -8.344646857949556e-07, -4.851709309150465e-05, -1.3589766240329482e-05, -3.5762758443524945e-07, -1.251697449333733e-05, -9.536738616588991e-07, -4.57763671875e-05, -0.0002346038818359375, -0.00011444091796875, -3.933904736186378e-06, -4.482269287109375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.4305104514278355e-06, 0.0, -0.001766204833984375, -1.9073486328125e-06, -0.001384735107421875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00084686279296875, -0.000701904296875, -0.0009250640869140625, -0.000141143798828125, -0.00019073486328125, -1.52587890625e-05, -1.9073486328125e-06, -2.3126602172851562e-05, -7.62939453125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00014734268188476562, -1.1920928244535389e-07, -0.20355701446533203, -0.000896453857421875, -0.0001087188720703125, -1.9073486328125e-06, -6.866455078125e-05, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.019775032997131348, 0.0, -0.012496590614318848, -0.00019073486328125, -0.2531149387359619, -1.9073486328125e-06, -0.1346120834350586, -0.00907135009765625, -0.000125885009765625, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.00049591064453125, 0.0, -0.7177801132202148, -0.0001735687255859375, -2.226663112640381, 0.0], "choice_history": [97, 285, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "FREE", "_type": "Template34", "hole0": "Heroic Strike", "hole2": "WARRIOR"}], "hole0": "HeroicStrike", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 4}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 3}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(3)\n        player.hero.increase_armor(4)\n", "score": -3.631235121494811, "score_history": [-1.52587890625e-05, -0.0002422332763671875, -8.344646857949556e-07, -4.851709309150465e-05, -1.3589766240329482e-05, -3.5762758443524945e-07, -1.251697449333733e-05, -9.536738616588991e-07, -4.57763671875e-05, -0.0002346038818359375, -0.00011444091796875, -3.933904736186378e-06, -4.482269287109375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.4305104514278355e-06, 0.0, -0.001766204833984375, -1.9073486328125e-06, -0.001384735107421875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00084686279296875, -0.000701904296875, -0.0009250640869140625, -0.000141143798828125, -0.00019073486328125, -1.52587890625e-05, -1.9073486328125e-06, -2.3126602172851562e-05, -7.62939453125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00014734268188476562, -1.1920928244535389e-07, -0.20355701446533203, -0.000896453857421875, -0.0001087188720703125, -1.9073486328125e-06, -6.866455078125e-05, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.019775032997131348, 0.0, -0.012496590614318848, -0.00019073486328125, -1.7973196506500244, 0.0, -0.11308956146240234, -0.008727073669433594, -7.62939453125e-05, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -0.000400543212890625, 0.0, -0.869083046913147, -1.9073486328125e-06, -0.5981162786483765, -1.9073486328125e-06], "choice_history": [97, 285, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "4", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "FREE", "_type": "Template34", "hole0": "Heroic Strike", "hole2": "WARRIOR"}], "hole0": "HeroicStrike", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 3}, {"hole1": "increase_armor", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 4}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.change_temp_attack(2)\n", "score": -3.649280474266668, "score_history": [-1.52587890625e-05, -0.0002422332763671875, -8.344646857949556e-07, -4.851709309150465e-05, -1.3589766240329482e-05, -3.5762758443524945e-07, -1.251697449333733e-05, -9.536738616588991e-07, -4.57763671875e-05, -0.0002346038818359375, -0.00011444091796875, -3.933904736186378e-06, -4.482269287109375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.4305104514278355e-06, 0.0, -0.001766204833984375, -1.9073486328125e-06, -0.001384735107421875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00084686279296875, -0.000701904296875, -0.0009250640869140625, -0.000141143798828125, -0.00019073486328125, -1.52587890625e-05, -1.9073486328125e-06, -2.3126602172851562e-05, -7.62939453125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00014734268188476562, -1.1920928244535389e-07, -2.573781967163086, -5.7220458984375e-05, -0.0009918212890625, -5.53131103515625e-05, -0.0081024169921875, 0.0, -5.340576171875e-05, 0.0, -0.13635766506195068, 0.0, -0.7709234356880188, 0.0, -0.0003528594970703125, -0.012701034545898438, -0.0001850128173828125, -8.0108642578125e-05, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.022398589178919792, -0.0001983642578125, -0.0053182728588581085, -1.1920928244535389e-07, -0.0008411407470703125, -0.000324249267578125, -0.0015125274658203125, -3.445148468017578e-05, -0.0626220703125, -0.0036220550537109375, -2.288818359375e-05, 0.0, -0.005715370178222656, -3.814697265625e-06, -0.03588724136352539, -8.58306884765625e-05], "choice_history": [97, 285, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "2", "<EOS>", 50, 174, "self", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "FREE", "_type": "Template34", "hole0": "Heroic Strike", "hole2": "WARRIOR"}], "hole0": "HeroicStrike", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 2}, {"id": "self", "_type": "Name"}]}, {"hole1": "hero", "_type": "Template52", "hole0": "player", "hole2": "change_temp_attack"}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(0)\n        player.hero.change_temp_attack(2)\n", "score": -4.19540727019934, "score_history": [-1.52587890625e-05, -0.0002422332763671875, -8.344646857949556e-07, -4.851709309150465e-05, -1.3589766240329482e-05, -3.5762758443524945e-07, -1.251697449333733e-05, -9.536738616588991e-07, -4.57763671875e-05, -0.0002346038818359375, -0.00011444091796875, -3.933904736186378e-06, -4.482269287109375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.4305104514278355e-06, 0.0, -0.001766204833984375, -1.9073486328125e-06, -0.001384735107421875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00084686279296875, -0.000701904296875, -0.0009250640869140625, -0.000141143798828125, -0.00019073486328125, -1.52587890625e-05, -1.9073486328125e-06, -2.3126602172851562e-05, -7.62939453125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00014734268188476562, -1.1920928244535389e-07, -0.20355701446533203, -0.000896453857421875, -0.0001087188720703125, -1.9073486328125e-06, -6.866455078125e-05, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.019775032997131348, 0.0, -0.012496590614318848, -0.00019073486328125, -3.713130235671997, -0.10669994354248047, -0.0001392364501953125, -9.357929229736328e-05, 0.0, -0.004238128662109375, -1.9073486328125e-06, -0.12682461738586426, -1.52587890625e-05], "choice_history": [97, 285, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "FREE", "_type": "Template34", "hole0": "Heroic Strike", "hole2": "WARRIOR"}], "hole0": "HeroicStrike", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 0}, {"hole1": "hero", "_type": "Template52", "hole0": "player", "hole2": "change_temp_attack"}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(3)\n        player.hero.change_temp_attack(2)\n", "score": -4.591918824917357, "score_history": [-1.52587890625e-05, -0.0002422332763671875, -8.344646857949556e-07, -4.851709309150465e-05, -1.3589766240329482e-05, -3.5762758443524945e-07, -1.251697449333733e-05, -9.536738616588991e-07, -4.57763671875e-05, -0.0002346038818359375, -0.00011444091796875, -3.933904736186378e-06, -4.482269287109375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.4305104514278355e-06, 0.0, -0.001766204833984375, -1.9073486328125e-06, -0.001384735107421875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00084686279296875, -0.000701904296875, -0.0009250640869140625, -0.000141143798828125, -0.00019073486328125, -1.52587890625e-05, -1.9073486328125e-06, -2.3126602172851562e-05, -7.62939453125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00014734268188476562, -1.1920928244535389e-07, -0.20355701446533203, -0.000896453857421875, -0.0001087188720703125, -1.9073486328125e-06, -6.866455078125e-05, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.019775032997131348, 0.0, -0.012496590614318848, -0.00019073486328125, -1.7973196506500244, 0.0, -2.4499387741088867, -0.000270843505859375, -3.063678741455078e-05, 0.0, -0.003414154052734375, -5.7220458984375e-06, -0.09664797782897949, -2.6702880859375e-05], "choice_history": [97, 285, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "3", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "FREE", "_type": "Template34", "hole0": "Heroic Strike", "hole2": "WARRIOR"}], "hole0": "HeroicStrike", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 3}, {"hole1": "hero", "_type": "Template52", "hole0": "player", "hole2": "change_temp_attack"}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n        player.hero.increase_armor(2)\n", "score": -4.748284219509642, "score_history": [-1.52587890625e-05, -0.0002422332763671875, -8.344646857949556e-07, -4.851709309150465e-05, -1.3589766240329482e-05, -3.5762758443524945e-07, -1.251697449333733e-05, -9.536738616588991e-07, -4.57763671875e-05, -0.0002346038818359375, -0.00011444091796875, -3.933904736186378e-06, -4.482269287109375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.4305104514278355e-06, 0.0, -0.001766204833984375, -1.9073486328125e-06, -0.001384735107421875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00084686279296875, -0.000701904296875, -0.0009250640869140625, -0.000141143798828125, -0.00019073486328125, -1.52587890625e-05, -1.9073486328125e-06, -2.3126602172851562e-05, -7.62939453125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00014734268188476562, -1.1920928244535389e-07, -0.20355701446533203, -0.000896453857421875, -0.0001087188720703125, -1.9073486328125e-06, -6.866455078125e-05, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.019775032997131348, 0.0, -0.012496590614318848, -0.00019073486328125, -0.2531149387359619, -1.9073486328125e-06, -2.2539749145507812, -0.0006351470947265625, -5.352497100830078e-05, 0.0, -0.004757881164550781, -3.814697265625e-06, -1.9914758205413818, -1.9073486328125e-06], "choice_history": [97, 285, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "FREE", "_type": "Template34", "hole0": "Heroic Strike", "hole2": "WARRIOR"}], "hole0": "HeroicStrike", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 4}, {"hole1": "hero", "_type": "Template52", "hole0": "player", "hole2": "increase_armor"}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n", "score": -5.148414729839843, "score_history": [-1.52587890625e-05, -0.0002422332763671875, -8.344646857949556e-07, -4.851709309150465e-05, -1.3589766240329482e-05, -3.5762758443524945e-07, -1.251697449333733e-05, -9.536738616588991e-07, -4.57763671875e-05, -0.0002346038818359375, -0.00011444091796875, -3.933904736186378e-06, -4.482269287109375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.4305104514278355e-06, 0.0, -0.001766204833984375, -1.9073486328125e-06, -0.001384735107421875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00084686279296875, -0.000701904296875, -0.0009250640869140625, -0.000141143798828125, -0.00019073486328125, -1.52587890625e-05, -1.9073486328125e-06, -2.3126602172851562e-05, -7.62939453125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00014734268188476562, -1.1920928244535389e-07, -0.20355701446533203, -0.000896453857421875, -0.0001087188720703125, -1.9073486328125e-06, -6.866455078125e-05, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.019775032997131348, 0.0, -0.012496590614318848, -0.00019073486328125, -3.8550777435302734, 0.0, -0.8983974456787109, -0.000568389892578125, -2.872943878173828e-05, 0.0, -0.0027475357055664062, -3.814697265625e-06, -0.14730572700500488, -2.09808349609375e-05], "choice_history": [97, 285, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "2", "<EOS>", 131, 289, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "FREE", "_type": "Template34", "hole0": "Heroic Strike", "hole2": "WARRIOR"}], "hole0": "HeroicStrike", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 2}, {"hole1": "hero", "_type": "Template52", "hole0": "player", "hole2": "change_temp_attack"}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -6.004386066204589, "score_history": [-1.52587890625e-05, -0.0002422332763671875, -8.344646857949556e-07, -4.851709309150465e-05, -1.3589766240329482e-05, -3.5762758443524945e-07, -1.251697449333733e-05, -9.536738616588991e-07, -4.57763671875e-05, -0.0002346038818359375, -0.00011444091796875, -3.933904736186378e-06, -4.482269287109375e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -1.4305104514278355e-06, 0.0, -0.001766204833984375, -1.9073486328125e-06, -0.001384735107421875, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00084686279296875, -0.000701904296875, -0.0009250640869140625, -0.000141143798828125, -0.00019073486328125, -1.52587890625e-05, -1.9073486328125e-06, -2.3126602172851562e-05, -7.62939453125e-06, -3.933906555175781e-06, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00014734268188476562, -1.1920928244535389e-07, -0.20355701446533203, -0.000896453857421875, -0.0001087188720703125, -1.9073486328125e-06, -6.866455078125e-05, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.019775032997131348, 0.0, -0.012496590614318848, -0.00019073486328125, -0.2531149387359619, -1.9073486328125e-06, -4.385000228881836, -0.0008449554443359375, -0.4763479232788086, -0.17458724975585938, -0.4665100574493408, -0.003714442253112793], "choice_history": [97, 285, "Heroic", "Strike", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "4", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "FREE", "_type": "Template34", "hole0": "Heroic Strike", "hole2": "WARRIOR"}], "hole0": "HeroicStrike", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 4}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}]}}]}
{"gold_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "beams": [{"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score": -2.6029687653547455, "score_history": [-0.000102996826171875, -0.000164031982421875, -0.022550281137228012, -0.0011041047982871532, -3.0517168852384202e-05, -1.1485069990158081e-05, -1.728534698486328e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -2.4636173248291016, -1.9073486328125e-05, -2.3841855067985307e-07, -3.1352021323982626e-05, -3.576278118089249e-07, -3.814697265625e-06, -0.00019572301243897527, -5.7220458984375e-06, -0.015203714370727539, 0.0, -0.000835418701171875, 0.0, -0.012395977973937988, 0.0, -1.9073486328125e-06, -0.08140373229980469, -0.000247955322265625, -1.5503756003454328e-06, -0.00016032364510465413, -5.7406723499298096e-06, -1.0728830375228426e-06, -0.004642963409423828, -3.814697265625e-06, -3.62396240234375e-05, -3.62396240234375e-05, -0.00013363361358642578, 0.0], "choice_history": [97, 283, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 8, "hole2": "taunt"}], "hole2": [{"hole1": 8, "_type": "Template31", "hole0": "Ironbark Protector", "hole2": "DRUID"}], "hole0": "IronbarkProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(CatForm(), Transform(\n            IronbarkProtector()), PlayerSelector()), Choice(BearForm(),\n            Transform(BearProtector()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n", "score": -3.3151255106995166, "score_history": [-0.000102996826171875, -0.000164031982421875, -0.022550281137228012, -0.0011041047982871532, -3.0517168852384202e-05, -1.1485069990158081e-05, -1.728534698486328e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.09848499298095703, -0.0006008148193359375, -7.152555099310121e-07, -2.1696090698242188e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.498746526835021e-06, 0.0, -0.019838333129882812, -1.9073486328125e-06, -0.129876971244812, 0.0, -0.042586326599121094, -0.000896453857421875, -0.12934589385986328, -0.0028324127197265625, -0.006115913391113281, -0.00038945674896240234, -1.621246337890625e-05, -0.21313515305519104, -0.0028353198431432247, -0.00015901254664640874, -0.0029546022415161133, -0.00026794656878337264, -0.0011959075927734375, -2.86102294921875e-05, -7.62939453125e-06, -0.15353143215179443, -0.30618399381637573, -0.00018119563173968345, -0.6065738201141357, -2.0265579223632812e-06, -5.960462772236497e-07, -0.014162063598632812, -0.00124359130859375, -0.0005100964917801321, -1.1444084520917386e-05, -0.15341269969940186, -0.00233353185467422, -4.649158654501662e-06, -0.0006093944539315999, -0.00010835537250386551, -0.0039806365966796875, -9.72747802734375e-05, -3.814697265625e-06, -0.8802241086959839, -0.05272078514099121, -4.494190216064453e-05, -0.4333524703979492, -2.3841855067985307e-07, 0.0, -9.059905096364673e-06, -1.9073486328125e-06, -0.000632166862487793, 0.0, -3.62396240234375e-05, -0.028738021850585938, -3.4332275390625e-05, -0.00021849176846444607, -2.741813204920618e-06, -0.00057056057266891, 0.0], "choice_history": [97, 283, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Cat", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Ironbark", "Protector", "<EOS>", "Player", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Bear", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Bear", "Protector", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "8", "<EOS>", "8", "<EOS>"], "model_output": {"hole6": [{"hole1": 8, "_type": "Template62", "hole0": 8}], "hole2": [{"hole2": "DRUID", "hole0": "Ironbark Protector", "_type": "Template27", "hole3": "choices", "hole1": 8, "hole4": {"elts": [{"hole6": "PlayerSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "CatForm", "hole4": [{"_type": "Template79", "hole0": "IronbarkProtector"}]}, {"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "BearForm", "hole4": [{"_type": "Template79", "hole0": "BearProtector"}]}], "_type": "List"}}], "hole0": "IronbarkProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(CatForm(), Transform(\n            IronbarkProtector()), PlayerSelector()), Choice(BearForm(),\n            Transform(IronbarkProtector()), PlayerSelector())])\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n", "score": -3.7296586564788115, "score_history": [-0.000102996826171875, -0.000164031982421875, -0.022550281137228012, -0.0011041047982871532, -3.0517168852384202e-05, -1.1485069990158081e-05, -1.728534698486328e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.09848499298095703, -0.0006008148193359375, -7.152555099310121e-07, -2.1696090698242188e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.498746526835021e-06, 0.0, -0.019838333129882812, -1.9073486328125e-06, -0.129876971244812, 0.0, -0.042586326599121094, -0.000896453857421875, -0.12934589385986328, -0.0028324127197265625, -0.006115913391113281, -0.00038945674896240234, -1.621246337890625e-05, -0.21313515305519104, -0.0028353198431432247, -0.00015901254664640874, -0.0029546022415161133, -0.00026794656878337264, -0.0011959075927734375, -2.86102294921875e-05, -7.62939453125e-06, -0.15353143215179443, -0.30618399381637573, -0.00018119563173968345, -0.6065738201141357, -2.0265579223632812e-06, -5.960462772236497e-07, -0.014162063598632812, -0.00124359130859375, -0.0005100964917801321, -1.1444084520917386e-05, -0.15341269969940186, -0.00233353185467422, -4.649158654501662e-06, -0.0006093944539315999, -0.00010835537250386551, -0.0039806365966796875, -9.72747802734375e-05, -3.814697265625e-06, -0.56452876329422, -0.4005926549434662, -0.0003299699747003615, -0.8138603568077087, -1.1920928244535389e-07, -4.768370445162873e-07, -1.788135887181852e-05, -1.9073486328125e-06, -0.0025022029876708984, 0.0, -3.814697265625e-05, -0.028524398803710938, -3.814697265625e-05, -0.00015699121286161244, -2.741813204920618e-06, -0.0005244538187980652, 0.0], "choice_history": [97, 283, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Cat", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Ironbark", "Protector", "<EOS>", "Player", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Bear", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Ironbark", "Protector", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "8", "<EOS>", "8", "<EOS>"], "model_output": {"hole6": [{"hole1": 8, "_type": "Template62", "hole0": 8}], "hole2": [{"hole2": "DRUID", "hole0": "Ironbark Protector", "_type": "Template27", "hole3": "choices", "hole1": 8, "hole4": {"elts": [{"hole6": "PlayerSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "CatForm", "hole4": [{"_type": "Template79", "hole0": "IronbarkProtector"}]}, {"hole6": "PlayerSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "BearForm", "hole4": [{"_type": "Template79", "hole0": "IronbarkProtector"}]}], "_type": "List"}}], "hole0": "IronbarkProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(CatForm(), Transform(\n            IronbarkProtector()), PlayerSelector()), Choice(BearForm(),\n            Transform(IronbarkProtector()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n", "score": -3.9458728280298416, "score_history": [-0.000102996826171875, -0.000164031982421875, -0.022550281137228012, -0.0011041047982871532, -3.0517168852384202e-05, -1.1485069990158081e-05, -1.728534698486328e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.09848499298095703, -0.0006008148193359375, -7.152555099310121e-07, -2.1696090698242188e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.498746526835021e-06, 0.0, -0.019838333129882812, -1.9073486328125e-06, -0.129876971244812, 0.0, -0.042586326599121094, -0.000896453857421875, -0.12934589385986328, -0.0028324127197265625, -0.006115913391113281, -0.00038945674896240234, -1.621246337890625e-05, -0.21313515305519104, -0.0028353198431432247, -0.00015901254664640874, -0.0029546022415161133, -0.00026794656878337264, -0.0011959075927734375, -2.86102294921875e-05, -7.62939453125e-06, -0.15353143215179443, -0.30618399381637573, -0.00018119563173968345, -0.6065738201141357, -2.0265579223632812e-06, -5.960462772236497e-07, -0.014162063598632812, -0.00124359130859375, -0.0005100964917801321, -1.1444084520917386e-05, -0.15341269969940186, -0.00233353185467422, -4.649158654501662e-06, -0.0006093944539315999, -0.00010835537250386551, -0.0039806365966796875, -9.72747802734375e-05, -3.814697265625e-06, -0.56452876329422, -0.4005926549434662, -0.0003299699747003615, -1.034538745880127, -3.576278118089249e-07, -1.1920928244535389e-07, -1.1324875231366605e-05, 0.0, -0.0005369186401367188, 0.0, -3.814697265625e-05, -0.025930404663085938, -4.00543212890625e-05, -0.00020883785327896476, -2.622604142743512e-06, -0.0005744630470871925, 0.0], "choice_history": [97, 283, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Cat", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Ironbark", "Protector", "<EOS>", "Player", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Bear", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Ironbark", "Protector", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "8", "<EOS>", "8", "<EOS>"], "model_output": {"hole6": [{"hole1": 8, "_type": "Template62", "hole0": 8}], "hole2": [{"hole2": "DRUID", "hole0": "Ironbark Protector", "_type": "Template27", "hole3": "choices", "hole1": 8, "hole4": {"elts": [{"hole6": "PlayerSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "CatForm", "hole4": [{"_type": "Template79", "hole0": "IronbarkProtector"}]}, {"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "BearForm", "hole4": [{"_type": "Template79", "hole0": "IronbarkProtector"}]}], "_type": "List"}}], "hole0": "IronbarkProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score": -3.974866361043098, "score_history": [-0.000102996826171875, -0.000164031982421875, -0.022550281137228012, -0.0011041047982871532, -3.0517168852384202e-05, -1.1485069990158081e-05, -1.728534698486328e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.09848499298095703, -0.0006008148193359375, -7.152555099310121e-07, -2.1696090698242188e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.498746526835021e-06, 0.0, -0.019838333129882812, -1.9073486328125e-06, -3.0321319103240967, 0.0, -0.16378021240234375, -3.24249267578125e-05, -0.000995635986328125, 0.0, -0.002288818359375, 0.0, -0.40850830078125, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.20462608337402344, 0.0, -1.33514404296875e-05, -0.011301040649414062, -1.9073486328125e-05, -2.9803222787450068e-06, -7.271502545336261e-05, -6.3373008742928505e-06, -1.4305104514278355e-06, -0.00793302059173584, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-05, -0.00010693073272705078, 0.0], "choice_history": [97, 283, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 8, "hole2": "taunt"}], "hole2": [{"hole2": "DRUID", "hole0": "Ironbark Protector", "_type": "Template27", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}}], "hole0": "IronbarkProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Buff(ManaChange(Count(\n            MinionSelector(players=BothPlayer())), -1))])\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score": -4.0520116367539885, "score_history": [-0.000102996826171875, -0.000164031982421875, -0.022550281137228012, -0.0011041047982871532, -3.0517168852384202e-05, -1.1485069990158081e-05, -1.728534698486328e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.09848499298095703, -0.0006008148193359375, -7.152555099310121e-07, -2.1696090698242188e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.498746526835021e-06, 0.0, -0.019838333129882812, -1.9073486328125e-06, -0.129876971244812, 0.0, -0.042586326599121094, -0.000896453857421875, -2.146120071411133, -0.0028934478759765625, -0.11524105072021484, -0.011465907096862793, -0.0017328262329101562, -9.72747802734375e-05, -7.62939453125e-06, -0.005562782287597656, -0.3400554656982422, -0.0018601417541503906, -0.0006782139535062015, -0.0076904296875, 0.0, -0.4536692202091217, -0.006264328956604004, -1.1920928244535389e-07, -0.015877723693847656, -1.9073486328125e-05, -2.288818359375e-05, -0.3489934206008911, 0.0, -2.09808349609375e-05, 0.0, -0.004507184028625488, -0.00011289119720458984, 0.0, -0.182891845703125, -0.00072479248046875, -0.00669097900390625, -0.0017719268798828125, -1.52587890625e-05, -0.007610814645886421, 0.0, -3.635883331298828e-05, 0.0, -0.0013217926025390625, 0.0, -3.814697265625e-06, -0.06700515747070312, -0.0006885528564453125, -4.7686462494311854e-06, -2.7894584491150454e-05, -6.4320629462599754e-06, -1.1920928244535389e-07, -0.0038607120513916016, 0.0, -5.53131103515625e-05, -1.33514404296875e-05, -8.392333984375e-05, 0.0], "choice_history": [97, 283, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 346, 69, 291, "Mana", "Change", "<EOS>", 347, 77, 301, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 8, "hole2": "taunt"}], "hole2": [{"hole2": "DRUID", "hole0": "Ironbark Protector", "_type": "Template27", "hole3": "choices", "hole1": 8, "hole4": {"elts": [{"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "hole3": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}], "_type": "Template64", "hole0": "Count"}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ManaChange"}], "_type": "List"}}], "hole0": "IronbarkProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(CatForm(), Transform(\n            IronbarkProtector()), SelfSelector()), Choice(BearForm(),\n            Transform(BearProtector()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n", "score": -4.065294147830279, "score_history": [-0.000102996826171875, -0.000164031982421875, -0.022550281137228012, -0.0011041047982871532, -3.0517168852384202e-05, -1.1485069990158081e-05, -1.728534698486328e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.09848499298095703, -0.0006008148193359375, -7.152555099310121e-07, -2.1696090698242188e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.498746526835021e-06, 0.0, -0.019838333129882812, -1.9073486328125e-06, -0.129876971244812, 0.0, -0.042586326599121094, -0.000896453857421875, -0.12934589385986328, -0.0028324127197265625, -0.006115913391113281, -0.00038945674896240234, -1.621246337890625e-05, -0.21313515305519104, -0.0028353198431432247, -0.00015901254664640874, -0.0029546022415161133, -0.00026794656878337264, -0.0011959075927734375, -2.86102294921875e-05, -7.62939453125e-06, -0.15353143215179443, -0.30618399381637573, -0.00018119563173968345, -1.4415967464447021, -5.9604644775390625e-06, -1.1920928244535389e-07, -0.0064487457275390625, -0.0011138916015625, -0.0003238916106056422, -1.3470642443280667e-05, -0.1694229543209076, -0.0024111499078571796, -5.125993993715383e-06, -0.0005147432675585151, -0.0001821352052502334, -0.00445556640625, -9.34600830078125e-05, -3.814697265625e-06, -0.8505498170852661, -0.05405604839324951, -3.707408905029297e-05, -0.3661237955093384, -3.576278118089249e-07, 0.0, -9.059905096364673e-06, 0.0, -0.000616908073425293, 0.0, -3.814697265625e-05, -0.030935287475585938, -3.4332275390625e-05, -0.00022933693253435194, -2.741813204920618e-06, -0.0005840167868882418, 0.0], "choice_history": [97, 283, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Cat", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Ironbark", "Protector", "<EOS>", "Self", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Bear", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Bear", "Protector", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "8", "<EOS>", "8", "<EOS>"], "model_output": {"hole6": [{"hole1": 8, "_type": "Template62", "hole0": 8}], "hole2": [{"hole2": "DRUID", "hole0": "Ironbark Protector", "_type": "Template27", "hole3": "choices", "hole1": 8, "hole4": {"elts": [{"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "CatForm", "hole4": [{"_type": "Template79", "hole0": "IronbarkProtector"}]}, {"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "BearForm", "hole4": [{"_type": "Template79", "hole0": "BearProtector"}]}], "_type": "List"}}], "hole0": "IronbarkProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(CatForm(), Transform(\n            IronbarkProtector()), PlayerSelector()), Choice(BearForm(),\n            Transform(IronbarkPlayer()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n", "score": -4.175848121027968, "score_history": [-0.000102996826171875, -0.000164031982421875, -0.022550281137228012, -0.0011041047982871532, -3.0517168852384202e-05, -1.1485069990158081e-05, -1.728534698486328e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.09848499298095703, -0.0006008148193359375, -7.152555099310121e-07, -2.1696090698242188e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.498746526835021e-06, 0.0, -0.019838333129882812, -1.9073486328125e-06, -0.129876971244812, 0.0, -0.042586326599121094, -0.000896453857421875, -0.12934589385986328, -0.0028324127197265625, -0.006115913391113281, -0.00038945674896240234, -1.621246337890625e-05, -0.21313515305519104, -0.0028353198431432247, -0.00015901254664640874, -0.0029546022415161133, -0.00026794656878337264, -0.0011959075927734375, -2.86102294921875e-05, -7.62939453125e-06, -0.15353143215179443, -0.30618399381637573, -0.00018119563173968345, -0.6065738201141357, -2.0265579223632812e-06, -5.960462772236497e-07, -0.014162063598632812, -0.00124359130859375, -0.0005100964917801321, -1.1444084520917386e-05, -0.15341269969940186, -0.00233353185467422, -4.649158654501662e-06, -0.0006093944539315999, -0.00010835537250386551, -0.0039806365966796875, -9.72747802734375e-05, -3.814697265625e-06, -0.56452876329422, -1.6608620882034302, -0.00021600713080260903, -0.003376958193257451, -5.960462772236497e-07, 0.0, -1.1205666851310525e-05, 0.0, -0.0003401041030883789, 0.0, -3.62396240234375e-05, -0.0271759033203125, -3.4332275390625e-05, -0.0001597328227944672, -2.861022494471399e-06, -0.0005638852017000318, 0.0], "choice_history": [97, 283, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Cat", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Ironbark", "Protector", "<EOS>", "Player", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Bear", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Ironbark", "Player", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "8", "<EOS>", "8", "<EOS>"], "model_output": {"hole6": [{"hole1": 8, "_type": "Template62", "hole0": 8}], "hole2": [{"hole2": "DRUID", "hole0": "Ironbark Protector", "_type": "Template27", "hole3": "choices", "hole1": 8, "hole4": {"elts": [{"hole6": "PlayerSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "CatForm", "hole4": [{"_type": "Template79", "hole0": "IronbarkProtector"}]}, {"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "BearForm", "hole4": [{"_type": "Template79", "hole0": "IronbarkPlayer"}]}], "_type": "List"}}], "hole0": "IronbarkProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(CatForm(), Transform(\n            IronbarkProtector()), PlayerSelector()), Choice(BearForm(),\n            Transform(BearProtector()), PlayerSelector())])\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n", "score": -4.2193094340491015, "score_history": [-0.000102996826171875, -0.000164031982421875, -0.022550281137228012, -0.0011041047982871532, -3.0517168852384202e-05, -1.1485069990158081e-05, -1.728534698486328e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.09848499298095703, -0.0006008148193359375, -7.152555099310121e-07, -2.1696090698242188e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.498746526835021e-06, 0.0, -0.019838333129882812, -1.9073486328125e-06, -0.129876971244812, 0.0, -0.042586326599121094, -0.000896453857421875, -0.12934589385986328, -0.0028324127197265625, -0.006115913391113281, -0.00038945674896240234, -1.621246337890625e-05, -0.21313515305519104, -0.0028353198431432247, -0.00015901254664640874, -0.0029546022415161133, -0.00026794656878337264, -0.0011959075927734375, -2.86102294921875e-05, -7.62939453125e-06, -0.15353143215179443, -0.30618399381637573, -0.00018119563173968345, -0.6065738201141357, -2.0265579223632812e-06, -5.960462772236497e-07, -0.014162063598632812, -0.00124359130859375, -0.0005100964917801321, -1.1444084520917386e-05, -0.15341269969940186, -0.00233353185467422, -4.649158654501662e-06, -0.0006093944539315999, -0.00010835537250386551, -0.0039806365966796875, -9.72747802734375e-05, -3.814697265625e-06, -0.8802241086959839, -0.05272078514099121, -4.494190216064453e-05, -1.3336906433105469, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.4662737157777883e-05, -1.9073486328125e-06, -0.0021871328353881836, 0.0, -3.62396240234375e-05, -0.031122207641601562, -3.0517578125e-05, -0.00016163938562385738, -2.861022494471399e-06, -0.0005319850752130151, 0.0], "choice_history": [97, 283, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Cat", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Ironbark", "Protector", "<EOS>", "Player", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Bear", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Bear", "Protector", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "8", "<EOS>", "8", "<EOS>"], "model_output": {"hole6": [{"hole1": 8, "_type": "Template62", "hole0": 8}], "hole2": [{"hole2": "DRUID", "hole0": "Ironbark Protector", "_type": "Template27", "hole3": "choices", "hole1": 8, "hole4": {"elts": [{"hole6": "PlayerSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "CatForm", "hole4": [{"_type": "Template79", "hole0": "IronbarkProtector"}]}, {"hole6": "PlayerSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "BearForm", "hole4": [{"_type": "Template79", "hole0": "BearProtector"}]}], "_type": "List"}}], "hole0": "IronbarkProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Buff(ManaChange(Count(\n            MinionSelector(Null, BothPlayer())), -1))])\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score": -4.331885511269, "score_history": [-0.000102996826171875, -0.000164031982421875, -0.022550281137228012, -0.0011041047982871532, -3.0517168852384202e-05, -1.1485069990158081e-05, -1.728534698486328e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.09848499298095703, -0.0006008148193359375, -7.152555099310121e-07, -2.1696090698242188e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.498746526835021e-06, 0.0, -0.019838333129882812, -1.9073486328125e-06, -0.129876971244812, 0.0, -0.042586326599121094, -0.000896453857421875, -2.146120071411133, -0.0028934478759765625, -0.11524105072021484, -0.011465907096862793, -0.0017328262329101562, -9.72747802734375e-05, -7.62939453125e-06, -0.005562782287597656, -1.2559623718261719, -0.022460341453552246, -0.012181787751615047, -0.0005588531494140625, 0.0, -0.006333114113658667, -0.0010672807693481445, -1.1920928244535389e-07, -8.20159912109375e-05, -0.18654155731201172, -0.00319671630859375, -0.003976262174546719, -1.9073486328125e-06, -0.0002307891845703125, -1.9073486328125e-06, -0.010293599218130112, -0.0027886629104614258, -1.9073486328125e-06, -0.0726308822631836, -0.00012969970703125, -0.0019702911376953125, -0.0006961822509765625, -1.71661376953125e-05, -0.007873550988733768, 0.0, -7.665157318115234e-05, 0.0, -0.0023404359817504883, 0.0, -3.814697265625e-06, -0.1356220245361328, -0.0007572174072265625, -3.5765315260505304e-06, -3.6000557884108275e-05, -6.816699169576168e-06, -2.3841855067985307e-07, -0.004453897476196289, -1.9073486328125e-06, -5.7220458984375e-05, -1.33514404296875e-05, -8.96453857421875e-05, 0.0], "choice_history": [97, 283, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 346, 69, 291, "Mana", "Change", "<EOS>", 347, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 51, 176, "Null", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 8, "hole2": "taunt"}], "hole2": [{"hole2": "DRUID", "hole0": "Ironbark Protector", "_type": "Template27", "hole3": "choices", "hole1": 8, "hole4": {"elts": [{"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "BothPlayer"}]}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ManaChange"}], "_type": "List"}}], "hole0": "IronbarkProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, overload=8)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score": -4.39492898067374, "score_history": [-0.000102996826171875, -0.000164031982421875, -0.022550281137228012, -0.0011041047982871532, -3.0517168852384202e-05, -1.1485069990158081e-05, -1.728534698486328e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.09848499298095703, -0.0006008148193359375, -7.152555099310121e-07, -2.1696090698242188e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.498746526835021e-06, 0.0, -0.019838333129882812, -1.9073486328125e-06, -4.21553897857666, -0.0008281469345092773, -0.0049152374267578125, -0.0003299713134765625, -0.020145883783698082, -4.00543212890625e-05, -0.00302886962890625, 0.0, -0.0006715059280395508, 0.0, -5.7220458984375e-06, -0.001804351806640625, -0.000133514404296875, -3.3380420063622296e-06, -3.516612196108326e-05, -1.059449277818203e-05, -5.960462772236497e-07, -0.004312753677368164, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, -0.0001163482666015625, 0.0], "choice_history": [97, 283, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "overload", "<EOS>", 23, 179, "8", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 8, "hole2": "taunt"}], "hole2": [{"hole2": "DRUID", "hole0": "Ironbark Protector", "_type": "Template27", "hole3": "overload", "hole1": 8, "hole4": {"n": 8, "_type": "Num"}}], "hole0": "IronbarkProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(CatForm(), Transform(\n            IronbarkProtector()), HeroSelector()), Choice(BearForm(),\n            Transform(BearProtector()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n", "score": -4.519232636708345, "score_history": [-0.000102996826171875, -0.000164031982421875, -0.022550281137228012, -0.0011041047982871532, -3.0517168852384202e-05, -1.1485069990158081e-05, -1.728534698486328e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.09848499298095703, -0.0006008148193359375, -7.152555099310121e-07, -2.1696090698242188e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.498746526835021e-06, 0.0, -0.019838333129882812, -1.9073486328125e-06, -0.129876971244812, 0.0, -0.042586326599121094, -0.000896453857421875, -0.12934589385986328, -0.0028324127197265625, -0.006115913391113281, -0.00038945674896240234, -1.621246337890625e-05, -0.21313515305519104, -0.0028353198431432247, -0.00015901254664640874, -0.0029546022415161133, -0.00026794656878337264, -0.0011959075927734375, -2.86102294921875e-05, -7.62939453125e-06, -0.15353143215179443, -0.30618399381637573, -0.00018119563173968345, -1.9284045696258545, -2.6702880859375e-05, -1.1920928244535389e-07, -0.019359588623046875, -0.0010652542114257812, -0.0005354880704544485, -1.3113007298670709e-05, -0.181333988904953, -0.0023203648161143064, -4.768367489305092e-06, -0.0005540823331102729, -0.00011765264935093, -0.004569053649902344, -0.0001125335693359375, -5.7220458984375e-06, -0.8452200293540955, -0.055550575256347656, -3.921985626220703e-05, -0.315990686416626, -3.576278118089249e-07, 0.0, -9.298322765971534e-06, 0.0, -0.0005921125411987305, 0.0, -3.62396240234375e-05, -0.027027130126953125, -3.814697265625e-05, -0.00023815673193894327, -2.741813204920618e-06, -0.0005794907920062542, 0.0], "choice_history": [97, 283, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Cat", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Ironbark", "Protector", "<EOS>", "Hero", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Bear", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Bear", "Protector", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "8", "<EOS>", "8", "<EOS>"], "model_output": {"hole6": [{"hole1": 8, "_type": "Template62", "hole0": 8}], "hole2": [{"hole2": "DRUID", "hole0": "Ironbark Protector", "_type": "Template27", "hole3": "choices", "hole1": 8, "hole4": {"elts": [{"hole6": "HeroSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "CatForm", "hole4": [{"_type": "Template79", "hole0": "IronbarkProtector"}]}, {"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "BearForm", "hole4": [{"_type": "Template79", "hole0": "BearProtector"}]}], "_type": "List"}}], "hole0": "IronbarkProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(CatForm(), Transform(\n            IronbarkProtector()), PlayerSelector()), Choice(BearForm(),\n            Transform(IronbarkProtector()), HeroSelector())])\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n", "score": -4.59388236086329, "score_history": [-0.000102996826171875, -0.000164031982421875, -0.022550281137228012, -0.0011041047982871532, -3.0517168852384202e-05, -1.1485069990158081e-05, -1.728534698486328e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.09848499298095703, -0.0006008148193359375, -7.152555099310121e-07, -2.1696090698242188e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.498746526835021e-06, 0.0, -0.019838333129882812, -1.9073486328125e-06, -0.129876971244812, 0.0, -0.042586326599121094, -0.000896453857421875, -0.12934589385986328, -0.0028324127197265625, -0.006115913391113281, -0.00038945674896240234, -1.621246337890625e-05, -0.21313515305519104, -0.0028353198431432247, -0.00015901254664640874, -0.0029546022415161133, -0.00026794656878337264, -0.0011959075927734375, -2.86102294921875e-05, -7.62939453125e-06, -0.15353143215179443, -0.30618399381637573, -0.00018119563173968345, -0.6065738201141357, -2.0265579223632812e-06, -5.960462772236497e-07, -0.014162063598632812, -0.00124359130859375, -0.0005100964917801321, -1.1444084520917386e-05, -0.15341269969940186, -0.00233353185467422, -4.649158654501662e-06, -0.0006093944539315999, -0.00010835537250386551, -0.0039806365966796875, -9.72747802734375e-05, -3.814697265625e-06, -0.56452876329422, -0.4005926549434662, -0.0003299699747003615, -1.6842398643493652, -1.9073486328125e-06, 0.0, -2.8848629881395027e-05, -1.9073486328125e-06, -0.0018763542175292969, 0.0, -2.6702880859375e-05, -0.022932052612304688, -3.0517578125e-05, -0.0001765378547133878, -2.622604142743512e-06, -0.0005742131033912301, 0.0], "choice_history": [97, 283, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Cat", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Ironbark", "Protector", "<EOS>", "Player", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Bear", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Ironbark", "Protector", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "8", "<EOS>", "8", "<EOS>"], "model_output": {"hole6": [{"hole1": 8, "_type": "Template62", "hole0": 8}], "hole2": [{"hole2": "DRUID", "hole0": "Ironbark Protector", "_type": "Template27", "hole3": "choices", "hole1": 8, "hole4": {"elts": [{"hole6": "PlayerSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "CatForm", "hole4": [{"_type": "Template79", "hole0": "IronbarkProtector"}]}, {"hole6": "HeroSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "BearForm", "hole4": [{"_type": "Template79", "hole0": "IronbarkProtector"}]}], "_type": "List"}}], "hole0": "IronbarkProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(CatForm(), Transform(\n            Ironbark()), SelfSelector()), Choice(BearForm(), Transform(\n            BearProtector()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n", "score": -4.601919855719785, "score_history": [-0.000102996826171875, -0.000164031982421875, -0.022550281137228012, -0.0011041047982871532, -3.0517168852384202e-05, -1.1485069990158081e-05, -1.728534698486328e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.09848499298095703, -0.0006008148193359375, -7.152555099310121e-07, -2.1696090698242188e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.498746526835021e-06, 0.0, -0.019838333129882812, -1.9073486328125e-06, -0.129876971244812, 0.0, -0.042586326599121094, -0.000896453857421875, -0.12934589385986328, -0.0028324127197265625, -0.006115913391113281, -0.00038945674896240234, -1.621246337890625e-05, -0.21313515305519104, -0.0028353198431432247, -0.00015901254664640874, -0.0029546022415161133, -0.00026794656878337264, -0.0011959075927734375, -2.86102294921875e-05, -7.62939453125e-06, -0.15353143215179443, -1.9028816223144531, -0.3155292272567749, -4.291534423828125e-06, 0.0, -0.0070018768310546875, -0.0010738372802734375, -0.0002725124068092555, -9.059900548891164e-06, -0.16147685050964355, -0.002068598521873355, -4.29153169534402e-06, -0.0004761206218972802, -0.0001793938863556832, -0.0040988922119140625, -7.05718994140625e-05, -3.814697265625e-06, -0.8321980834007263, -0.035642147064208984, -2.3484230041503906e-05, -0.4767496585845947, -2.3841855067985307e-07, 0.0, -9.417532055522315e-06, 0.0, -0.000544428825378418, 0.0, -3.814697265625e-05, -0.031566619873046875, -3.4332275390625e-05, -0.00024197009042836726, -2.741813204920618e-06, -0.0005973653751425445, 0.0], "choice_history": [97, 283, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Cat", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Ironbark", "<EOS>", "Self", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Bear", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Bear", "Protector", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "8", "<EOS>", "8", "<EOS>"], "model_output": {"hole6": [{"hole1": 8, "_type": "Template62", "hole0": 8}], "hole2": [{"hole2": "DRUID", "hole0": "Ironbark Protector", "_type": "Template27", "hole3": "choices", "hole1": 8, "hole4": {"elts": [{"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "CatForm", "hole4": [{"_type": "Template79", "hole0": "Ironbark"}]}, {"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "BearForm", "hole4": [{"_type": "Template79", "hole0": "BearProtector"}]}], "_type": "List"}}], "hole0": "IronbarkProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(CatForm(), Transform(\n            IronbarkProtector()), SelfSelector()), Choice(BearForm(),\n            Transform(IronbarkProtector()), PlayerSelector())])\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n", "score": -4.694318309770139, "score_history": [-0.000102996826171875, -0.000164031982421875, -0.022550281137228012, -0.0011041047982871532, -3.0517168852384202e-05, -1.1485069990158081e-05, -1.728534698486328e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.09848499298095703, -0.0006008148193359375, -7.152555099310121e-07, -2.1696090698242188e-05, -3.576278118089249e-07, -3.814697265625e-06, -7.498746526835021e-06, 0.0, -0.019838333129882812, -1.9073486328125e-06, -0.129876971244812, 0.0, -0.042586326599121094, -0.000896453857421875, -0.12934589385986328, -0.0028324127197265625, -0.006115913391113281, -0.00038945674896240234, -1.621246337890625e-05, -0.21313515305519104, -0.0028353198431432247, -0.00015901254664640874, -0.0029546022415161133, -0.00026794656878337264, -0.0011959075927734375, -2.86102294921875e-05, -7.62939453125e-06, -0.15353143215179443, -0.30618399381637573, -0.00018119563173968345, -1.4415967464447021, -5.9604644775390625e-06, -1.1920928244535389e-07, -0.0064487457275390625, -0.0011138916015625, -0.0003238916106056422, -1.3470642443280667e-05, -0.1694229543209076, -0.0024111499078571796, -5.125993993715383e-06, -0.0005147432675585151, -0.0001821352052502334, -0.00445556640625, -9.34600830078125e-05, -3.814697265625e-06, -0.5877001285552979, -0.44367578625679016, -0.0003111353435087949, -0.8687077164649963, -1.1920928244535389e-07, -4.768370445162873e-07, -1.764294211170636e-05, -1.9073486328125e-06, -0.0017256736755371094, 0.0, -3.814697265625e-05, -0.02931976318359375, -3.62396240234375e-05, -0.00016354625404346734, -2.741813204920618e-06, -0.0005400603986345232, 0.0], "choice_history": [97, 283, "Ironbark", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Cat", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Ironbark", "Protector", "<EOS>", "Self", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Bear", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Ironbark", "Protector", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "8", "<EOS>", "8", "<EOS>"], "model_output": {"hole6": [{"hole1": 8, "_type": "Template62", "hole0": 8}], "hole2": [{"hole2": "DRUID", "hole0": "Ironbark Protector", "_type": "Template27", "hole3": "choices", "hole1": 8, "hole4": {"elts": [{"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "CatForm", "hole4": [{"_type": "Template79", "hole0": "IronbarkProtector"}]}, {"hole6": "PlayerSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "BearForm", "hole4": [{"_type": "Template79", "hole0": "IronbarkProtector"}]}], "_type": "List"}}], "hole0": "IronbarkProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n        self.target.taunt = True\n", "beams": [{"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        target.taunt = True\n", "score": -5.030841815127431, "score_history": [-0.0002803802490234375, -0.01907062530517578, -0.001647425931878388, -0.00048135535325855017, -0.006757132709026337, -0.0001922836381709203, -0.16765502095222473, -0.0003355173394083977, -0.00015866756439208984, -5.841255187988281e-06, -2.09808349609375e-05, -2.86102294921875e-05, -0.20826339721679688, -0.00092315673828125, -0.00023651123046875, -3.278255098848604e-05, -1.9073486328125e-06, -3.814697265625e-05, -4.38690185546875e-05, -0.000423431396484375, -4.76837158203125e-05, -4.76837158203125e-05, -7.247792382258922e-05, -0.00016045570373535156, -0.00015448994236066937, -6.67572021484375e-05, -0.0007971520535647869, -0.00066375732421875, -0.06879612803459167, -0.13840770721435547, -3.0517578125e-05, -1.71661376953125e-05, -4.3152795115020126e-05, 0.0, -3.4332275390625e-05, -0.0001544952392578125, -1.9073486328125e-06, -3.814697265625e-06, -0.0001697540283203125, -0.0001506805419921875, -0.0096282958984375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002269744873046875, -1.9073486328125e-05, 0.0, -0.0032806396484375, -9.5367431640625e-06, -0.0030364990234375, -3.814697265625e-06, -0.0001697540283203125, -2.86102294921875e-05, -1.9073486328125e-06, -0.052459716796875, -1.9073486328125e-06, -0.0009164810180664062, -4.76837158203125e-05, -5.91278076171875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002194643020629883, 0.0, -0.01532745361328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -2.861022494471399e-06, -0.47942352294921875, -0.000644683837890625, -2.86102294921875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.033347174001392e-06, -4.1961669921875e-05, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841855067985307e-07, -2.4674692153930664, -6.103515625e-05, -8.392333984375e-05, 0.0, -0.0003566741943359375, 0.0, -0.0006256103515625, -5.7220458984375e-06, -0.000202178955078125, 0.0, -0.23600280284881592, -1.9073486328125e-06, -0.004909515380859375, -0.3420591354370117, -0.009308815002441406, -0.003330230712890625, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, -0.04688739776611328, -0.00012969970703125, -7.05718994140625e-05, -1.9073486328125e-06, -0.09095954895019531, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0008680820465087891, -2.1457672119140625e-06, -0.0004392862319946289, 0.0, -0.33223211765289307, -3.814697265625e-06, -0.002536773681640625, -3.62396240234375e-05, -0.0010814666748046875, -3.576278118089249e-07, -0.045563697814941406, -7.62939453125e-06, -3.62396240234375e-05, -0.00035858154296875, -5.7220458984375e-06, -0.13593101501464844, 0.0, -0.043201446533203125, -3.576278118089249e-07, -0.07537078857421875, 0.0, -0.0061511993408203125, -6.67572021484375e-05, -6.306171417236328e-05, -1.1920928244535389e-07], "choice_history": [97, 285, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "target", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "MarkOfTheWild", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template57", "hole0": {"id": "player", "_type": "Name"}, "hole2": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "calculate_max_health", "_type": "Attribute"}}, {"id": "self", "_type": "Name"}]}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "Assign", "targets": [{"value": {"id": "target", "_type": "Name"}, "attr": "taunt", "_type": "Attribute"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.targeting.find_minion_spell_target(game, lambda\n            m: True)\n        super().use(player, game)\n", "score": -5.349731774696771, "score_history": [-0.0002803802490234375, -0.01907062530517578, -0.001647425931878388, -0.00048135535325855017, -0.006757132709026337, -0.0001922836381709203, -0.16765502095222473, -0.0003355173394083977, -0.00015866756439208984, -5.841255187988281e-06, -2.09808349609375e-05, -2.86102294921875e-05, -0.20826339721679688, -0.00092315673828125, -0.00023651123046875, -3.278255098848604e-05, -1.9073486328125e-06, -3.814697265625e-05, -4.38690185546875e-05, -0.000423431396484375, -4.76837158203125e-05, -4.76837158203125e-05, -7.247792382258922e-05, -0.00016045570373535156, -0.00015448994236066937, -6.67572021484375e-05, -0.0007971520535647869, -0.00066375732421875, -0.06879612803459167, -0.13840770721435547, -3.0517578125e-05, -1.71661376953125e-05, -4.3152795115020126e-05, 0.0, -3.4332275390625e-05, -0.0001544952392578125, -1.9073486328125e-06, -3.814697265625e-06, -0.0001697540283203125, -0.0001506805419921875, -0.0096282958984375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002269744873046875, -1.9073486328125e-05, 0.0, -0.0032806396484375, -9.5367431640625e-06, -0.0030364990234375, -3.814697265625e-06, -0.0001697540283203125, -2.86102294921875e-05, -1.9073486328125e-06, -0.052459716796875, -1.9073486328125e-06, -0.0009164810180664062, -4.76837158203125e-05, -5.91278076171875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002194643020629883, 0.0, -0.01532745361328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -2.861022494471399e-06, -0.47942352294921875, -0.000644683837890625, -2.86102294921875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.033347174001392e-06, -4.1961669921875e-05, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841855067985307e-07, -0.2663755416870117, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.5615448951721191, -0.0003604888916015625, -1.2769079208374023, -0.0008068084716796875, -9.5367431640625e-06, -5.7220458984375e-06, -0.010225296020507812, 0.0, -0.0089569091796875, -3.814697265625e-06, -0.8700265884399414, -0.0002827644348144531, -0.001537322998046875, -1.9073486328125e-06, -0.18256962299346924, -1.1920928244535389e-07, -0.0003814697265625, -0.0426483154296875, -0.0001049041748046875, -0.002176642417907715, 0.0, -0.0001277923583984375, -0.000133514404296875, -0.00012969970703125, -0.0002460479736328125, -0.14626191556453705, -2.002716064453125e-05, -0.6759538650512695, -5.53131103515625e-05, -0.0004911422729492188, -4.768371127283899e-06, -0.09709358215332031, -5.7220458984375e-06, -0.0085601806640625, -5.7220458984375e-06, -0.01030731201171875, 0.0, -0.00037276637158356607, -0.0003720521926879883, -0.0002346038818359375, 0.0, -1.9073486328125e-06, 0.0, -3.2782554626464844e-05, -4.768370445162873e-07], "choice_history": [97, 285, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 347, 50, 174, "game", "<EOS>", 47, 167, 0, 282, "m", "<EOS>", 22, 175, "True", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "MarkOfTheWild", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "args": [{"id": "game", "_type": "Name"}, {"body": {"value": true, "_type": "NameConstant"}, "args": {"_type": "Template49", "hole0": "m"}, "_type": "Lambda"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = player.agent.choose_option([MarkOfWildSpellCast(),\n            MarkOfWildHealth()], player)\n        option.use(player, game)\n", "score": -6.0503024538795955, "score_history": [-0.0002803802490234375, -0.01907062530517578, -0.001647425931878388, -0.00048135535325855017, -0.006757132709026337, -0.0001922836381709203, -0.16765502095222473, -0.0003355173394083977, -0.00015866756439208984, -5.841255187988281e-06, -2.09808349609375e-05, -2.86102294921875e-05, -0.20826339721679688, -0.00092315673828125, -0.00023651123046875, -3.278255098848604e-05, -1.9073486328125e-06, -3.814697265625e-05, -4.38690185546875e-05, -0.000423431396484375, -4.76837158203125e-05, -4.76837158203125e-05, -7.247792382258922e-05, -0.00016045570373535156, -0.00015448994236066937, -6.67572021484375e-05, -0.0007971520535647869, -0.00066375732421875, -0.06879612803459167, -0.13840770721435547, -3.0517578125e-05, -1.71661376953125e-05, -4.3152795115020126e-05, 0.0, -3.4332275390625e-05, -0.0001544952392578125, -1.9073486328125e-06, -3.814697265625e-06, -0.0001697540283203125, -0.0001506805419921875, -0.0096282958984375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002269744873046875, -1.9073486328125e-05, 0.0, -0.0032806396484375, -9.5367431640625e-06, -0.0030364990234375, -3.814697265625e-06, -0.0001697540283203125, -2.86102294921875e-05, -1.9073486328125e-06, -0.052459716796875, -1.9073486328125e-06, -0.0009164810180664062, -4.76837158203125e-05, -5.91278076171875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002194643020629883, 0.0, -0.01532745361328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -2.861022494471399e-06, -0.47942352294921875, -0.000644683837890625, -2.86102294921875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.033347174001392e-06, -4.1961669921875e-05, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841855067985307e-07, -0.2663755416870117, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.5615448951721191, -0.0003604888916015625, -1.2769079208374023, -0.0008068084716796875, -9.5367431640625e-06, -5.7220458984375e-06, -0.010225296020507812, 0.0, -0.0089569091796875, -3.814697265625e-06, -1.0272789001464844, -1.9073486328125e-06, -0.002584695816040039, -0.0002613067626953125, -0.031242728233337402, 0.0, -0.00031280517578125, -0.005176544189453125, -0.009776115417480469, -0.10239522904157639, -0.00502932071685791, -0.03212861716747284, -0.8432128429412842, -0.3397284150123596, -0.011660933494567871, -3.62396240234375e-05, -0.02696704864501953, -0.0005407333374023438, -0.007880479097366333, -0.016400251537561417, -0.003634192980825901, -0.04376004636287689, -0.0008345998357981443, -0.0041351318359375, -0.00054168701171875, -0.0007648468017578125, 0.0, -0.17517757415771484, -0.0001430511474609375, -0.03470611572265625, -0.000156402587890625, -0.002506256103515625, -3.814697265625e-06, -0.01151418685913086, -3.933906555175781e-06, -8.404254913330078e-05, -1.33514404296875e-05, -6.67572021484375e-05, 0.0, -4.982948303222656e-05, -5.960462772236497e-07], "choice_history": [97, 285, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 347, 86, 320, "Mark", "Of", "Wild", "Spell", "Cast", "<EOS>", 346, 83, 314, "Mark", "Of", "Wild", "Health", "<EOS>", 50, 174, "player", "<EOS>", 106, 155, 32, 300, 21, 174, "option", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "MarkOfTheWild", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "attr": "choose_option", "_type": "Attribute"}, "args": [{"hole2": [{"_type": "Template73_expr_seq", "hole0": "MarkOfWildHealth"}], "_type": "Template78", "hole0": "MarkOfWildSpellCast"}, {"id": "player", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"id": "option", "_type": "Name"}, "hole2": "player"}, "_type": "Expr"}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.taunt()), self\n            )\n        target.taunt = True\n", "score": -6.2546478387252264, "score_history": [-0.0002803802490234375, -0.01907062530517578, -0.001647425931878388, -0.00048135535325855017, -0.006757132709026337, -0.0001922836381709203, -0.16765502095222473, -0.0003355173394083977, -0.00015866756439208984, -5.841255187988281e-06, -2.09808349609375e-05, -2.86102294921875e-05, -0.20826339721679688, -0.00092315673828125, -0.00023651123046875, -3.278255098848604e-05, -1.9073486328125e-06, -3.814697265625e-05, -4.38690185546875e-05, -0.000423431396484375, -4.76837158203125e-05, -4.76837158203125e-05, -7.247792382258922e-05, -0.00016045570373535156, -0.00015448994236066937, -6.67572021484375e-05, -0.0007971520535647869, -0.00066375732421875, -0.06879612803459167, -0.13840770721435547, -3.0517578125e-05, -1.71661376953125e-05, -4.3152795115020126e-05, 0.0, -3.4332275390625e-05, -0.0001544952392578125, -1.9073486328125e-06, -3.814697265625e-06, -0.0001697540283203125, -0.0001506805419921875, -0.0096282958984375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002269744873046875, -1.9073486328125e-05, 0.0, -0.0032806396484375, -9.5367431640625e-06, -0.0030364990234375, -3.814697265625e-06, -0.0001697540283203125, -2.86102294921875e-05, -1.9073486328125e-06, -0.052459716796875, -1.9073486328125e-06, -0.0009164810180664062, -4.76837158203125e-05, -5.91278076171875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002194643020629883, 0.0, -0.01532745361328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -2.861022494471399e-06, -0.47942352294921875, -0.000644683837890625, -2.86102294921875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.033347174001392e-06, -4.1961669921875e-05, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841855067985307e-07, -2.4674692153930664, -6.103515625e-05, -8.392333984375e-05, 0.0, -0.0003566741943359375, 0.0, -0.0006256103515625, -5.7220458984375e-06, -0.000202178955078125, 0.0, -0.23600280284881592, -1.9073486328125e-06, -0.004909515380859375, -0.3420591354370117, -0.009308815002441406, -0.003330230712890625, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, -0.04688739776611328, -0.00012969970703125, -7.05718994140625e-05, -1.9073486328125e-06, -0.09095954895019531, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0008680820465087891, -2.1457672119140625e-06, -0.0004392862319946289, 0.0, -1.5979057550430298, 0.0, -0.014035224914550781, -5.7220458984375e-06, -0.0016155242919921875, -1.1920928244535389e-07, -0.03538227081298828, -5.7220458984375e-06, -2.6702880859375e-05, -0.00022125244140625, -3.814697265625e-06, -0.10369396209716797, 0.0, -0.028726577758789062, -2.3841855067985307e-07, -0.07739734649658203, 0.0, -0.007297515869140625, -6.67572021484375e-05, -6.878376007080078e-05, -1.1920928244535389e-07], "choice_history": [97, 285, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "target", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "MarkOfTheWild", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template57", "hole0": {"id": "player", "_type": "Name"}, "hole2": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "taunt", "_type": "Attribute"}}, {"id": "self", "_type": "Name"}]}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "Assign", "targets": [{"value": {"id": "target", "_type": "Name"}, "attr": "taunt", "_type": "Attribute"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.hunter.Leokk()\n        target = player.agent.<UNK>(targets)\n", "score": -6.851590025042668, "score_history": [-0.0002803802490234375, -0.01907062530517578, -0.001647425931878388, -0.00048135535325855017, -0.006757132709026337, -0.0001922836381709203, -0.16765502095222473, -0.0003355173394083977, -0.00015866756439208984, -5.841255187988281e-06, -2.09808349609375e-05, -2.86102294921875e-05, -0.20826339721679688, -0.00092315673828125, -0.00023651123046875, -3.278255098848604e-05, -1.9073486328125e-06, -3.814697265625e-05, -4.38690185546875e-05, -0.000423431396484375, -4.76837158203125e-05, -4.76837158203125e-05, -7.247792382258922e-05, -0.00016045570373535156, -0.00015448994236066937, -6.67572021484375e-05, -0.0007971520535647869, -0.00066375732421875, -0.06879612803459167, -0.13840770721435547, -3.0517578125e-05, -1.71661376953125e-05, -4.3152795115020126e-05, 0.0, -3.4332275390625e-05, -0.0001544952392578125, -1.9073486328125e-06, -3.814697265625e-06, -0.0001697540283203125, -0.0001506805419921875, -0.0096282958984375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002269744873046875, -1.9073486328125e-05, 0.0, -0.0032806396484375, -9.5367431640625e-06, -0.0030364990234375, -3.814697265625e-06, -0.0001697540283203125, -2.86102294921875e-05, -1.9073486328125e-06, -0.052459716796875, -1.9073486328125e-06, -0.0009164810180664062, -4.76837158203125e-05, -5.91278076171875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002194643020629883, 0.0, -0.01532745361328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -2.861022494471399e-06, -0.47942352294921875, -0.000644683837890625, -2.86102294921875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.033347174001392e-06, -4.1961669921875e-05, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841855067985307e-07, -0.2663755416870117, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.5615448951721191, -0.0003604888916015625, -0.34237098693847656, -4.9591064453125e-05, -3.0517578125e-05, -5.7220458984375e-06, -0.001926422119140625, 0.0, -0.3599119186401367, 0.0, -0.0002899169921875, -5.53131103515625e-05, -0.002289891242980957, -0.0010693073272705078, -0.006299018859863281, -3.814697265625e-06, -0.11194276809692383, -1.7404556274414062e-05, -0.5482375621795654, -0.0001697540283203125, -1.766167402267456, -0.035030364990234375, -0.039478302001953125, -4.00543212890625e-05, -7.62939453125e-06, -7.82012939453125e-05, 0.0, -0.551763653755188, -8.702239938429557e-06, -0.1504383087158203, -0.0002841949462890625, -5.7220458984375e-06, -9.5367431640625e-05, -0.06495094299316406, 0.0, -0.0015468597412109375, 0.0, -0.0897665023803711, -1.9073486328125e-06, -0.07420754432678223, -8.20159912109375e-05, -0.36186766624450684, -1.9073486328125e-06, -0.0020999908447265625, -0.001575469970703125, -1.9073486328125e-06, -0.32474052906036377, -4.0531158447265625e-06], "choice_history": [97, 285, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "targets", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "MarkOfTheWild", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "Leokk", "_type": "Template76", "hole0": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "cards", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}, "attr": "hunter", "_type": "Attribute"}}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"func": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "attr": "<UNK>", "_type": "Attribute"}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.WorthlessWolf()\n        target = player.agent.<UNK>(targets)\n", "score": -7.466272694357912, "score_history": [-0.0002803802490234375, -0.01907062530517578, -0.001647425931878388, -0.00048135535325855017, -0.006757132709026337, -0.0001922836381709203, -0.16765502095222473, -0.0003355173394083977, -0.00015866756439208984, -5.841255187988281e-06, -2.09808349609375e-05, -2.86102294921875e-05, -0.20826339721679688, -0.00092315673828125, -0.00023651123046875, -3.278255098848604e-05, -1.9073486328125e-06, -3.814697265625e-05, -4.38690185546875e-05, -0.000423431396484375, -4.76837158203125e-05, -4.76837158203125e-05, -7.247792382258922e-05, -0.00016045570373535156, -0.00015448994236066937, -6.67572021484375e-05, -0.0007971520535647869, -0.00066375732421875, -0.06879612803459167, -0.13840770721435547, -3.0517578125e-05, -1.71661376953125e-05, -4.3152795115020126e-05, 0.0, -3.4332275390625e-05, -0.0001544952392578125, -1.9073486328125e-06, -3.814697265625e-06, -0.0001697540283203125, -0.0001506805419921875, -0.0096282958984375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002269744873046875, -1.9073486328125e-05, 0.0, -0.0032806396484375, -9.5367431640625e-06, -0.0030364990234375, -3.814697265625e-06, -0.0001697540283203125, -2.86102294921875e-05, -1.9073486328125e-06, -0.052459716796875, -1.9073486328125e-06, -0.0009164810180664062, -4.76837158203125e-05, -5.91278076171875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002194643020629883, 0.0, -0.01532745361328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -2.861022494471399e-06, -0.47942352294921875, -0.000644683837890625, -2.86102294921875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.033347174001392e-06, -4.1961669921875e-05, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841855067985307e-07, -0.2663755416870117, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.5615448951721191, -0.0003604888916015625, -0.34237098693847656, -4.9591064453125e-05, -3.0517578125e-05, -5.7220458984375e-06, -0.001926422119140625, 0.0, -0.3599119186401367, 0.0, -0.0002899169921875, -5.53131103515625e-05, -0.002289891242980957, -0.0010693073272705078, -0.006299018859863281, -3.814697265625e-06, -0.11194276809692383, -1.7404556274414062e-05, -1.2096941471099854, -1.9073486328125e-06, -0.9741137027740479, -0.9135375022888184, -0.004385823849588633, -0.17149066925048828, -0.0001049041748046875, -1.33514404296875e-05, -0.000377655029296875, 0.0, -0.2450627088546753, -4.172316494077677e-06, -0.043548583984375, -0.0002193450927734375, -1.52587890625e-05, -0.0001850128173828125, -0.09897232055664062, 0.0, -0.001194000244140625, 0.0, -0.13216495513916016, -1.9073486328125e-06, -0.06539499759674072, -5.7220458984375e-05, -0.4025534391403198, -1.9073486328125e-06, -0.0021343231201171875, -0.0011844635009765625, -1.9073486328125e-06, -0.360914945602417, -4.0531158447265625e-06], "choice_history": [97, 285, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Worthless", "Wolf", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "targets", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "MarkOfTheWild", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "WorthlessWolf", "_type": "Template76", "hole0": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "cards", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}, "attr": "<UNK>", "_type": "Attribute"}}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"func": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "attr": "<UNK>", "_type": "Attribute"}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        player.hand[-1].player = player\n", "score": -7.490147536928241, "score_history": [-0.0002803802490234375, -0.01907062530517578, -0.001647425931878388, -0.00048135535325855017, -0.006757132709026337, -0.0001922836381709203, -0.16765502095222473, -0.0003355173394083977, -0.00015866756439208984, -5.841255187988281e-06, -2.09808349609375e-05, -2.86102294921875e-05, -0.20826339721679688, -0.00092315673828125, -0.00023651123046875, -3.278255098848604e-05, -1.9073486328125e-06, -3.814697265625e-05, -4.38690185546875e-05, -0.000423431396484375, -4.76837158203125e-05, -4.76837158203125e-05, -7.247792382258922e-05, -0.00016045570373535156, -0.00015448994236066937, -6.67572021484375e-05, -0.0007971520535647869, -0.00066375732421875, -0.06879612803459167, -0.13840770721435547, -3.0517578125e-05, -1.71661376953125e-05, -4.3152795115020126e-05, 0.0, -3.4332275390625e-05, -0.0001544952392578125, -1.9073486328125e-06, -3.814697265625e-06, -0.0001697540283203125, -0.0001506805419921875, -0.0096282958984375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002269744873046875, -1.9073486328125e-05, 0.0, -0.0032806396484375, -9.5367431640625e-06, -0.0030364990234375, -3.814697265625e-06, -0.0001697540283203125, -2.86102294921875e-05, -1.9073486328125e-06, -0.052459716796875, -1.9073486328125e-06, -0.0009164810180664062, -4.76837158203125e-05, -5.91278076171875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002194643020629883, 0.0, -0.01532745361328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -2.861022494471399e-06, -0.47942352294921875, -0.000644683837890625, -2.86102294921875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.033347174001392e-06, -4.1961669921875e-05, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841855067985307e-07, -2.4674692153930664, -6.103515625e-05, -8.392333984375e-05, 0.0, -0.0003566741943359375, 0.0, -0.0006256103515625, -5.7220458984375e-06, -0.000202178955078125, 0.0, -0.23600280284881592, -1.9073486328125e-06, -0.004909515380859375, -0.3420591354370117, -0.009308815002441406, -0.003330230712890625, 0.0, -3.933906555175781e-06, -1.1920928244535389e-07, -0.04688739776611328, -0.00012969970703125, -7.05718994140625e-05, -1.9073486328125e-06, -0.09095954895019531, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0008680820465087891, -2.1457672119140625e-06, -0.0004392862319946289, 0.0, -0.33223211765289307, -3.814697265625e-06, -0.002536773681640625, -3.62396240234375e-05, -0.0010814666748046875, -3.576278118089249e-07, -0.045563697814941406, -7.62939453125e-06, -3.62396240234375e-05, -0.00035858154296875, -5.7220458984375e-06, -2.2699193954467773, -0.0017957687377929688, -2.09808349609375e-05, 0.0, -0.014629364013671875, -1.9073486328125e-06, -0.0041408538818359375, 0.0, -0.04481625556945801, 0.0, -0.09335041046142578, -0.000965118408203125, -0.10947990417480469, -0.000682830810546875, -0.0002346038818359375, -0.0001697540283203125, -5.7220458984375e-06, -0.003457027953118086, -1.33514404296875e-05, -0.00357818603515625, 0.0, -0.16767215728759766, 0.0, -0.0051566362380981445, -2.3841855067985307e-07], "choice_history": [97, 285, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 72, 294, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 24, 185, 13, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 100, 164, 41, 331, 139, 23, 179, "1", "<EOS>", "player", "<EOS>", 21, 174, "player", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "MarkOfTheWild", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template57", "hole0": {"id": "player", "_type": "Name"}, "hole2": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "calculate_max_health", "_type": "Attribute"}}, {"id": "self", "_type": "Name"}]}, {"value": {"id": "player", "_type": "Name"}, "_type": "Assign", "targets": [{"value": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}, "slice": {"value": {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}, "_type": "Index"}, "_type": "Subscript"}, "attr": "player", "_type": "Attribute"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Taunt()\n        target = player.agent.<UNK>(targets)\n", "score": -7.681675541028625, "score_history": [-0.0002803802490234375, -0.01907062530517578, -0.001647425931878388, -0.00048135535325855017, -0.006757132709026337, -0.0001922836381709203, -0.16765502095222473, -0.0003355173394083977, -0.00015866756439208984, -5.841255187988281e-06, -2.09808349609375e-05, -2.86102294921875e-05, -0.20826339721679688, -0.00092315673828125, -0.00023651123046875, -3.278255098848604e-05, -1.9073486328125e-06, -3.814697265625e-05, -4.38690185546875e-05, -0.000423431396484375, -4.76837158203125e-05, -4.76837158203125e-05, -7.247792382258922e-05, -0.00016045570373535156, -0.00015448994236066937, -6.67572021484375e-05, -0.0007971520535647869, -0.00066375732421875, -0.06879612803459167, -0.13840770721435547, -3.0517578125e-05, -1.71661376953125e-05, -4.3152795115020126e-05, 0.0, -3.4332275390625e-05, -0.0001544952392578125, -1.9073486328125e-06, -3.814697265625e-06, -0.0001697540283203125, -0.0001506805419921875, -0.0096282958984375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002269744873046875, -1.9073486328125e-05, 0.0, -0.0032806396484375, -9.5367431640625e-06, -0.0030364990234375, -3.814697265625e-06, -0.0001697540283203125, -2.86102294921875e-05, -1.9073486328125e-06, -0.052459716796875, -1.9073486328125e-06, -0.0009164810180664062, -4.76837158203125e-05, -5.91278076171875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002194643020629883, 0.0, -0.01532745361328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -2.861022494471399e-06, -0.47942352294921875, -0.000644683837890625, -2.86102294921875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.033347174001392e-06, -4.1961669921875e-05, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841855067985307e-07, -0.2663755416870117, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.5615448951721191, -0.0003604888916015625, -0.34237098693847656, -4.9591064453125e-05, -3.0517578125e-05, -5.7220458984375e-06, -0.001926422119140625, 0.0, -0.3599119186401367, 0.0, -0.0002899169921875, -5.53131103515625e-05, -0.002289891242980957, -0.0010693073272705078, -0.006299018859863281, -3.814697265625e-06, -0.11194276809692383, -1.7404556274414062e-05, -1.2096941471099854, -1.9073486328125e-06, -1.440261721611023, -0.012862205505371094, -0.6908664703369141, -0.00014495849609375, -2.47955322265625e-05, -8.0108642578125e-05, -1.9073486328125e-06, -0.20410728454589844, -7.510157047363464e-06, -0.11156845092773438, -0.000209808349609375, -1.1444091796875e-05, -0.0001506805419921875, -0.2030620574951172, 0.0, -0.001102447509765625, 0.0, -0.1429157257080078, -1.9073486328125e-06, -0.08157908916473389, -8.58306884765625e-05, -0.3818385601043701, -1.9073486328125e-06, -0.00180816650390625, -0.0013561248779296875, -1.9073486328125e-06, -0.35898685455322266, -4.0531158447265625e-06], "choice_history": [97, 285, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Taunt", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "targets", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "MarkOfTheWild", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "Taunt", "_type": "Template76", "hole0": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "cards", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}, "attr": "<UNK>", "_type": "Attribute"}}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"func": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "attr": "<UNK>", "_type": "Attribute"}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        option = player.agent.choose_option([MarkOfWildSpellCast(),\n            MarkOfWildHealth()], player)\n        option.use(player, game)\n        target = self.target\n", "score": -7.883624669704275, "score_history": [-0.0002803802490234375, -0.01907062530517578, -0.001647425931878388, -0.00048135535325855017, -0.006757132709026337, -0.0001922836381709203, -0.16765502095222473, -0.0003355173394083977, -0.00015866756439208984, -5.841255187988281e-06, -2.09808349609375e-05, -2.86102294921875e-05, -0.20826339721679688, -0.00092315673828125, -0.00023651123046875, -3.278255098848604e-05, -1.9073486328125e-06, -3.814697265625e-05, -4.38690185546875e-05, -0.000423431396484375, -4.76837158203125e-05, -4.76837158203125e-05, -7.247792382258922e-05, -0.00016045570373535156, -0.00015448994236066937, -6.67572021484375e-05, -0.0007971520535647869, -0.00066375732421875, -0.06879612803459167, -0.13840770721435547, -3.0517578125e-05, -1.71661376953125e-05, -4.3152795115020126e-05, 0.0, -3.4332275390625e-05, -0.0001544952392578125, -1.9073486328125e-06, -3.814697265625e-06, -0.0001697540283203125, -0.0001506805419921875, -0.0096282958984375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002269744873046875, -1.9073486328125e-05, 0.0, -0.0032806396484375, -9.5367431640625e-06, -0.0030364990234375, -3.814697265625e-06, -0.0001697540283203125, -2.86102294921875e-05, -1.9073486328125e-06, -0.052459716796875, -1.9073486328125e-06, -0.0009164810180664062, -4.76837158203125e-05, -5.91278076171875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002194643020629883, 0.0, -0.01532745361328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -2.861022494471399e-06, -1.8505582809448242, -0.000102996826171875, -3.24249267578125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -5.364416665543104e-06, -4.1961669921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841855067985307e-07, -0.031064987182617188, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.212440848350525, -4.279613494873047e-05, -0.005139350891113281, -0.0006151199340820312, -3.62396240234375e-05, -5.7220458984375e-06, -0.0060443878173828125, 0.0, -0.097991943359375, -1.9073486328125e-06, -0.7792930603027344, -1.9073486328125e-06, -0.0028029680252075195, -7.43865966796875e-05, -0.03158152103424072, 0.0, -0.00061798095703125, -0.00635528564453125, -0.009634971618652344, -0.11314753443002701, -0.004961490165442228, -0.03235451504588127, -0.8047620058059692, -0.35483986139297485, -0.01202690601348877, -2.6702880859375e-05, -0.028158187866210938, -0.0005168914794921875, -0.010595752857625484, -0.015088889747858047, -0.0036045771557837725, -0.043449148535728455, -0.0008149463683366776, -0.0033426284790039062, -0.00048828125, -0.0007849931716918945, 0.0, -0.17110252380371094, -9.918212890625e-05, -0.0035381317138671875, -0.0003261566162109375, -0.0013141632080078125, -5.7220458984375e-06, -0.005364656448364258, -9.5367431640625e-06, -0.000133514404296875, -1.33514404296875e-05, -6.866455078125e-05, 0.0, -4.982948303222656e-05, -4.768370445162873e-07, -0.0935201644897461, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.006964087486267, -7.152555099310121e-07, -0.4111776351928711, -3.814697265625e-06, -0.009004592895507812, -1.9073486328125e-06, -0.008576512336730957, -1.1920928244535389e-07, -0.004693150520324707, -1.1920928244535389e-07], "choice_history": [97, 285, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "option", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 347, 86, 320, "Mark", "Of", "Wild", "Spell", "Cast", "<EOS>", 346, 83, 314, "Mark", "Of", "Wild", "Health", "<EOS>", 50, 174, "player", "<EOS>", 106, 155, 32, 300, 21, 174, "option", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "MarkOfTheWild", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "attr": "choose_option", "_type": "Attribute"}, "args": [{"hole2": [{"_type": "Template73_expr_seq", "hole0": "MarkOfWildHealth"}], "_type": "Template78", "hole0": "MarkOfWildSpellCast"}, {"id": "player", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "option", "_type": "Name"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"id": "option", "_type": "Name"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.hunter.Huffer()\n        target = player.agent.<UNK>(targets)\n", "score": -7.958365308886613, "score_history": [-0.0002803802490234375, -0.01907062530517578, -0.001647425931878388, -0.00048135535325855017, -0.006757132709026337, -0.0001922836381709203, -0.16765502095222473, -0.0003355173394083977, -0.00015866756439208984, -5.841255187988281e-06, -2.09808349609375e-05, -2.86102294921875e-05, -0.20826339721679688, -0.00092315673828125, -0.00023651123046875, -3.278255098848604e-05, -1.9073486328125e-06, -3.814697265625e-05, -4.38690185546875e-05, -0.000423431396484375, -4.76837158203125e-05, -4.76837158203125e-05, -7.247792382258922e-05, -0.00016045570373535156, -0.00015448994236066937, -6.67572021484375e-05, -0.0007971520535647869, -0.00066375732421875, -0.06879612803459167, -0.13840770721435547, -3.0517578125e-05, -1.71661376953125e-05, -4.3152795115020126e-05, 0.0, -3.4332275390625e-05, -0.0001544952392578125, -1.9073486328125e-06, -3.814697265625e-06, -0.0001697540283203125, -0.0001506805419921875, -0.0096282958984375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002269744873046875, -1.9073486328125e-05, 0.0, -0.0032806396484375, -9.5367431640625e-06, -0.0030364990234375, -3.814697265625e-06, -0.0001697540283203125, -2.86102294921875e-05, -1.9073486328125e-06, -0.052459716796875, -1.9073486328125e-06, -0.0009164810180664062, -4.76837158203125e-05, -5.91278076171875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002194643020629883, 0.0, -0.01532745361328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -2.861022494471399e-06, -0.47942352294921875, -0.000644683837890625, -2.86102294921875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.033347174001392e-06, -4.1961669921875e-05, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841855067985307e-07, -0.2663755416870117, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.5615448951721191, -0.0003604888916015625, -0.34237098693847656, -4.9591064453125e-05, -3.0517578125e-05, -5.7220458984375e-06, -0.001926422119140625, 0.0, -0.3599119186401367, 0.0, -0.0002899169921875, -5.53131103515625e-05, -0.002289891242980957, -0.0010693073272705078, -0.006299018859863281, -3.814697265625e-06, -0.11194276809692383, -1.7404556274414062e-05, -0.5482375621795654, -0.0001697540283203125, -1.9341137409210205, -0.3779432773590088, -0.17881202697753906, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-05, 0.0, -0.9608076810836792, -3.933898824470816e-06, -0.10923957824707031, -0.0002307891845703125, -9.5367431640625e-06, -9.72747802734375e-05, -0.05712699890136719, 0.0, -0.0017795562744140625, 0.0, -0.09666633605957031, -2.0265579223632812e-06, -0.06401443481445312, -7.62939453125e-05, -0.3941974639892578, -1.9073486328125e-06, -0.00250244140625, -0.0014400482177734375, -1.9073486328125e-06, -0.391848087310791, -4.0531158447265625e-06], "choice_history": [97, 285, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "targets", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "MarkOfTheWild", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "Huffer", "_type": "Template76", "hole0": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "cards", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}, "attr": "hunter", "_type": "Attribute"}}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"func": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "attr": "<UNK>", "_type": "Attribute"}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.hunter.Misha()\n        target = player.agent.<UNK>(targets)\n", "score": -7.996102320776089, "score_history": [-0.0002803802490234375, -0.01907062530517578, -0.001647425931878388, -0.00048135535325855017, -0.006757132709026337, -0.0001922836381709203, -0.16765502095222473, -0.0003355173394083977, -0.00015866756439208984, -5.841255187988281e-06, -2.09808349609375e-05, -2.86102294921875e-05, -0.20826339721679688, -0.00092315673828125, -0.00023651123046875, -3.278255098848604e-05, -1.9073486328125e-06, -3.814697265625e-05, -4.38690185546875e-05, -0.000423431396484375, -4.76837158203125e-05, -4.76837158203125e-05, -7.247792382258922e-05, -0.00016045570373535156, -0.00015448994236066937, -6.67572021484375e-05, -0.0007971520535647869, -0.00066375732421875, -0.06879612803459167, -0.13840770721435547, -3.0517578125e-05, -1.71661376953125e-05, -4.3152795115020126e-05, 0.0, -3.4332275390625e-05, -0.0001544952392578125, -1.9073486328125e-06, -3.814697265625e-06, -0.0001697540283203125, -0.0001506805419921875, -0.0096282958984375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002269744873046875, -1.9073486328125e-05, 0.0, -0.0032806396484375, -9.5367431640625e-06, -0.0030364990234375, -3.814697265625e-06, -0.0001697540283203125, -2.86102294921875e-05, -1.9073486328125e-06, -0.052459716796875, -1.9073486328125e-06, -0.0009164810180664062, -4.76837158203125e-05, -5.91278076171875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002194643020629883, 0.0, -0.01532745361328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -2.861022494471399e-06, -0.47942352294921875, -0.000644683837890625, -2.86102294921875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.033347174001392e-06, -4.1961669921875e-05, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841855067985307e-07, -0.2663755416870117, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.5615448951721191, -0.0003604888916015625, -0.34237098693847656, -4.9591064453125e-05, -3.0517578125e-05, -5.7220458984375e-06, -0.001926422119140625, 0.0, -0.3599119186401367, 0.0, -0.0002899169921875, -5.53131103515625e-05, -0.002289891242980957, -0.0010693073272705078, -0.006299018859863281, -3.814697265625e-06, -0.11194276809692383, -1.7404556274414062e-05, -0.5482375621795654, -0.0001697540283203125, -2.5173561573028564, -0.0001555681083118543, -0.03758525848388672, -0.0003070831298828125, -7.62939453125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.8487290143966675, -5.125986263010418e-06, -0.1429882049560547, -0.00038909912109375, -5.7220458984375e-06, -0.00012969970703125, -0.19985198974609375, 0.0, -0.00133514404296875, 0.0, -0.12453746795654297, -1.9073486328125e-06, -0.07026398181915283, -6.29425048828125e-05, -0.361549973487854, -1.9073486328125e-06, -0.0018520355224609375, -0.0014934539794921875, -1.9073486328125e-06, -0.2999838590621948, -4.0531158447265625e-06], "choice_history": [97, 285, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "targets", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "MarkOfTheWild", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "Misha", "_type": "Template76", "hole0": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "cards", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}, "attr": "hunter", "_type": "Attribute"}}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"func": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "attr": "<UNK>", "_type": "Attribute"}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = player.agent.choose_option([MarkOfWildSpellCast(),\n            MarkOfWildHealth()], player)\n        option.use(player, game)\n        target = self.target\n", "score": -8.091603828784699, "score_history": [-0.0002803802490234375, -0.01907062530517578, -0.001647425931878388, -0.00048135535325855017, -0.006757132709026337, -0.0001922836381709203, -0.16765502095222473, -0.0003355173394083977, -0.00015866756439208984, -5.841255187988281e-06, -2.09808349609375e-05, -2.86102294921875e-05, -0.20826339721679688, -0.00092315673828125, -0.00023651123046875, -3.278255098848604e-05, -1.9073486328125e-06, -3.814697265625e-05, -4.38690185546875e-05, -0.000423431396484375, -4.76837158203125e-05, -4.76837158203125e-05, -7.247792382258922e-05, -0.00016045570373535156, -0.00015448994236066937, -6.67572021484375e-05, -0.0007971520535647869, -0.00066375732421875, -0.06879612803459167, -0.13840770721435547, -3.0517578125e-05, -1.71661376953125e-05, -4.3152795115020126e-05, 0.0, -3.4332275390625e-05, -0.0001544952392578125, -1.9073486328125e-06, -3.814697265625e-06, -0.0001697540283203125, -0.0001506805419921875, -0.0096282958984375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002269744873046875, -1.9073486328125e-05, 0.0, -0.0032806396484375, -9.5367431640625e-06, -0.0030364990234375, -3.814697265625e-06, -0.0001697540283203125, -2.86102294921875e-05, -1.9073486328125e-06, -0.052459716796875, -1.9073486328125e-06, -0.0009164810180664062, -4.76837158203125e-05, -5.91278076171875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002194643020629883, 0.0, -0.01532745361328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -2.861022494471399e-06, -1.8505582809448242, -0.000102996826171875, -3.24249267578125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -5.364416665543104e-06, -4.1961669921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841855067985307e-07, -0.031064987182617188, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.0549558401107788, -0.0012929439544677734, -0.6139249801635742, -0.0005159378051757812, -1.1444091796875e-05, -1.33514404296875e-05, -0.00312042236328125, 0.0, -0.0049419403076171875, -1.9073486328125e-06, -0.6176376342773438, 0.0, -0.0022077560424804688, -0.0002193450927734375, -0.03201615810394287, 0.0, -0.00032806396484375, -0.006119728088378906, -0.009961128234863281, -0.1013483852148056, -0.005231142044067383, -0.03414091095328331, -0.8337554931640625, -0.3473960757255554, -0.011409163475036621, -3.814697265625e-05, -0.026250839233398438, -0.0005521774291992188, -0.0071951719000935555, -0.016524024307727814, -0.003634033724665642, -0.04350493848323822, -0.0008213784312829375, -0.004244804382324219, -0.0005321502685546875, -0.0007638931274414062, 0.0, -0.170867919921875, -9.72747802734375e-05, -0.003574371337890625, -0.0003223419189453125, -0.00128173828125, -5.7220458984375e-06, -0.00541234016418457, -9.5367431640625e-06, -0.0001316070556640625, -1.33514404296875e-05, -7.05718994140625e-05, 0.0, -4.982948303222656e-05, -4.768370445162873e-07, -0.09354591369628906, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.0124515295028687, -7.152555099310121e-07, -0.41084861755371094, -3.814697265625e-06, -0.008994102478027344, -1.9073486328125e-06, -0.008561253547668457, -1.1920928244535389e-07, -0.004735112190246582, -1.1920928244535389e-07], "choice_history": [97, 285, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 347, 86, 320, "Mark", "Of", "Wild", "Spell", "Cast", "<EOS>", 346, 83, 314, "Mark", "Of", "Wild", "Health", "<EOS>", 50, 174, "player", "<EOS>", 106, 155, 32, 300, 21, 174, "option", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "MarkOfTheWild", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "attr": "choose_option", "_type": "Attribute"}, "args": [{"hole2": [{"_type": "Template73_expr_seq", "hole0": "MarkOfWildHealth"}], "_type": "Template78", "hole0": "MarkOfWildSpellCast"}, {"id": "player", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"id": "option", "_type": "Name"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.hunter.MarkWolf()\n        target = player.agent.<UNK>(targets)\n", "score": -8.154868470788614, "score_history": [-0.0002803802490234375, -0.01907062530517578, -0.001647425931878388, -0.00048135535325855017, -0.006757132709026337, -0.0001922836381709203, -0.16765502095222473, -0.0003355173394083977, -0.00015866756439208984, -5.841255187988281e-06, -2.09808349609375e-05, -2.86102294921875e-05, -0.20826339721679688, -0.00092315673828125, -0.00023651123046875, -3.278255098848604e-05, -1.9073486328125e-06, -3.814697265625e-05, -4.38690185546875e-05, -0.000423431396484375, -4.76837158203125e-05, -4.76837158203125e-05, -7.247792382258922e-05, -0.00016045570373535156, -0.00015448994236066937, -6.67572021484375e-05, -0.0007971520535647869, -0.00066375732421875, -0.06879612803459167, -0.13840770721435547, -3.0517578125e-05, -1.71661376953125e-05, -4.3152795115020126e-05, 0.0, -3.4332275390625e-05, -0.0001544952392578125, -1.9073486328125e-06, -3.814697265625e-06, -0.0001697540283203125, -0.0001506805419921875, -0.0096282958984375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002269744873046875, -1.9073486328125e-05, 0.0, -0.0032806396484375, -9.5367431640625e-06, -0.0030364990234375, -3.814697265625e-06, -0.0001697540283203125, -2.86102294921875e-05, -1.9073486328125e-06, -0.052459716796875, -1.9073486328125e-06, -0.0009164810180664062, -4.76837158203125e-05, -5.91278076171875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002194643020629883, 0.0, -0.01532745361328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -2.861022494471399e-06, -0.47942352294921875, -0.000644683837890625, -2.86102294921875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.033347174001392e-06, -4.1961669921875e-05, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841855067985307e-07, -0.2663755416870117, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.5615448951721191, -0.0003604888916015625, -0.34237098693847656, -4.9591064453125e-05, -3.0517578125e-05, -5.7220458984375e-06, -0.001926422119140625, 0.0, -0.3599119186401367, 0.0, -0.0002899169921875, -5.53131103515625e-05, -0.002289891242980957, -0.0010693073272705078, -0.006299018859863281, -3.814697265625e-06, -0.11194276809692383, -1.7404556274414062e-05, -0.5482375621795654, -0.0001697540283203125, -1.7577193975448608, -0.46688270568847656, -0.006534814368933439, -0.07371139526367188, -0.0002002716064453125, -9.5367431640625e-06, -8.392333984375e-05, 0.0, -1.2050445079803467, -6.9141146923357155e-06, -0.15281200408935547, -0.00030517578125, -7.62939453125e-06, -0.0001316070556640625, -0.06677818298339844, 0.0, -0.0021915435791015625, 0.0, -0.12835025787353516, -2.0265579223632812e-06, -0.060030460357666016, -4.9591064453125e-05, -0.4259603023529053, -1.9073486328125e-06, -0.0026950836181640625, -0.0014438629150390625, -1.9073486328125e-06, -0.41656458377838135, -4.0531158447265625e-06], "choice_history": [97, 285, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "frog", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Mark", "Wolf", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "targets", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "MarkOfTheWild", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "MarkWolf", "_type": "Template76", "hole0": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "cards", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}, "attr": "hunter", "_type": "Attribute"}}, "_type": "Assign", "targets": [{"id": "frog", "_type": "Name"}]}, {"value": {"func": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "attr": "<UNK>", "_type": "Attribute"}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        option = player.agent.choose_option([MarkOfWildSpellCast(),\n            MarkOfWildHealth()], player)\n        option.use(player, game)\n        option = player.agent.choose_option([MarkOfWildSpellCast(),\n            MarkOfWildHealth()], player)\n", "score": -9.310524765069061, "score_history": [-0.0002803802490234375, -0.01907062530517578, -0.001647425931878388, -0.00048135535325855017, -0.006757132709026337, -0.0001922836381709203, -0.16765502095222473, -0.0003355173394083977, -0.00015866756439208984, -5.841255187988281e-06, -2.09808349609375e-05, -2.86102294921875e-05, -0.20826339721679688, -0.00092315673828125, -0.00023651123046875, -3.278255098848604e-05, -1.9073486328125e-06, -3.814697265625e-05, -4.38690185546875e-05, -0.000423431396484375, -4.76837158203125e-05, -4.76837158203125e-05, -7.247792382258922e-05, -0.00016045570373535156, -0.00015448994236066937, -6.67572021484375e-05, -0.0007971520535647869, -0.00066375732421875, -0.06879612803459167, -0.13840770721435547, -3.0517578125e-05, -1.71661376953125e-05, -4.3152795115020126e-05, 0.0, -3.4332275390625e-05, -0.0001544952392578125, -1.9073486328125e-06, -3.814697265625e-06, -0.0001697540283203125, -0.0001506805419921875, -0.0096282958984375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002269744873046875, -1.9073486328125e-05, 0.0, -0.0032806396484375, -9.5367431640625e-06, -0.0030364990234375, -3.814697265625e-06, -0.0001697540283203125, -2.86102294921875e-05, -1.9073486328125e-06, -0.052459716796875, -1.9073486328125e-06, -0.0009164810180664062, -4.76837158203125e-05, -5.91278076171875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002194643020629883, 0.0, -0.01532745361328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -2.861022494471399e-06, -1.8505582809448242, -0.000102996826171875, -3.24249267578125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -5.364416665543104e-06, -4.1961669921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841855067985307e-07, -0.031064987182617188, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.212440848350525, -4.279613494873047e-05, -0.005139350891113281, -0.0006151199340820312, -3.62396240234375e-05, -5.7220458984375e-06, -0.0060443878173828125, 0.0, -0.097991943359375, -1.9073486328125e-06, -0.7792930603027344, -1.9073486328125e-06, -0.0028029680252075195, -7.43865966796875e-05, -0.03158152103424072, 0.0, -0.00061798095703125, -0.00635528564453125, -0.009634971618652344, -0.11314753443002701, -0.004961490165442228, -0.03235451504588127, -0.8047620058059692, -0.35483986139297485, -0.01202690601348877, -2.6702880859375e-05, -0.028158187866210938, -0.0005168914794921875, -0.010595752857625484, -0.015088889747858047, -0.0036045771557837725, -0.043449148535728455, -0.0008149463683366776, -0.0033426284790039062, -0.00048828125, -0.0007849931716918945, 0.0, -0.17110252380371094, -9.918212890625e-05, -0.0035381317138671875, -0.0003261566162109375, -0.0013141632080078125, -5.7220458984375e-06, -0.005364656448364258, -9.5367431640625e-06, -0.000133514404296875, -1.33514404296875e-05, -6.866455078125e-05, 0.0, -4.982948303222656e-05, -4.768370445162873e-07, -0.0935201644897461, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.5705446004867554, -0.0002824068069458008, -0.0049381256103515625, -0.000171661376953125, -2.288818359375e-05, -5.7220458984375e-06, -0.027683258056640625, 0.0, -0.12244987487792969, -1.9073486328125e-06, -0.6990691423416138, -1.9073486328125e-06, -0.004561901092529297, -3.0517578125e-05, -0.04942607879638672, 0.0, -0.00148773193359375, -0.006604194641113281, -0.010331153869628906, -0.0937093123793602, -0.005758047103881836, -0.03692220151424408, -0.7498477697372437, -0.35262760519981384, -0.009941816329956055, -1.71661376953125e-05, -0.03658771514892578, -0.0005035400390625, -0.020323574542999268, -0.01363800186663866, -0.003671308746561408, -0.04093514382839203, -0.0007260854472406209, -0.0032548904418945312, -0.000484466552734375, -0.0007610321044921875, 0.0], "choice_history": [97, 285, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "option", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 347, 86, 320, "Mark", "Of", "Wild", "Spell", "Cast", "<EOS>", 346, 83, 314, "Mark", "Of", "Wild", "Health", "<EOS>", 50, 174, "player", "<EOS>", 106, 155, 32, 300, 21, 174, "option", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "option", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 347, 86, 320, "Mark", "Of", "Wild", "Spell", "Cast", "<EOS>", 346, 83, 314, "Mark", "Of", "Wild", "Health", "<EOS>", 50, 174, "player", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "MarkOfTheWild", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "attr": "choose_option", "_type": "Attribute"}, "args": [{"hole2": [{"_type": "Template73_expr_seq", "hole0": "MarkOfWildHealth"}], "_type": "Template78", "hole0": "MarkOfWildSpellCast"}, {"id": "player", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "option", "_type": "Name"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"id": "option", "_type": "Name"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "attr": "choose_option", "_type": "Attribute"}, "args": [{"hole2": [{"_type": "Template73_expr_seq", "hole0": "MarkOfWildHealth"}], "_type": "Template78", "hole0": "MarkOfWildSpellCast"}, {"id": "player", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "option", "_type": "Name"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        option = player.agent.choose_option([MarkOfWildSpellCast(),\n            MarkOfWildHealth()], player)\n        option.use(player, game)\n        option = game.random_choice.choose_option([MarkOfWildSpellCast(),\n            MarkOfWildHealth()], player)\n", "score": -10.380383245954164, "score_history": [-0.0002803802490234375, -0.01907062530517578, -0.001647425931878388, -0.00048135535325855017, -0.006757132709026337, -0.0001922836381709203, -0.16765502095222473, -0.0003355173394083977, -0.00015866756439208984, -5.841255187988281e-06, -2.09808349609375e-05, -2.86102294921875e-05, -0.20826339721679688, -0.00092315673828125, -0.00023651123046875, -3.278255098848604e-05, -1.9073486328125e-06, -3.814697265625e-05, -4.38690185546875e-05, -0.000423431396484375, -4.76837158203125e-05, -4.76837158203125e-05, -7.247792382258922e-05, -0.00016045570373535156, -0.00015448994236066937, -6.67572021484375e-05, -0.0007971520535647869, -0.00066375732421875, -0.06879612803459167, -0.13840770721435547, -3.0517578125e-05, -1.71661376953125e-05, -4.3152795115020126e-05, 0.0, -3.4332275390625e-05, -0.0001544952392578125, -1.9073486328125e-06, -3.814697265625e-06, -0.0001697540283203125, -0.0001506805419921875, -0.0096282958984375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002269744873046875, -1.9073486328125e-05, 0.0, -0.0032806396484375, -9.5367431640625e-06, -0.0030364990234375, -3.814697265625e-06, -0.0001697540283203125, -2.86102294921875e-05, -1.9073486328125e-06, -0.052459716796875, -1.9073486328125e-06, -0.0009164810180664062, -4.76837158203125e-05, -5.91278076171875e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002194643020629883, 0.0, -0.01532745361328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -2.861022494471399e-06, -1.8505582809448242, -0.000102996826171875, -3.24249267578125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -5.364416665543104e-06, -4.1961669921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -2.3841855067985307e-07, -0.031064987182617188, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.212440848350525, -4.279613494873047e-05, -0.005139350891113281, -0.0006151199340820312, -3.62396240234375e-05, -5.7220458984375e-06, -0.0060443878173828125, 0.0, -0.097991943359375, -1.9073486328125e-06, -0.7792930603027344, -1.9073486328125e-06, -0.0028029680252075195, -7.43865966796875e-05, -0.03158152103424072, 0.0, -0.00061798095703125, -0.00635528564453125, -0.009634971618652344, -0.11314753443002701, -0.004961490165442228, -0.03235451504588127, -0.8047620058059692, -0.35483986139297485, -0.01202690601348877, -2.6702880859375e-05, -0.028158187866210938, -0.0005168914794921875, -0.010595752857625484, -0.015088889747858047, -0.0036045771557837725, -0.043449148535728455, -0.0008149463683366776, -0.0033426284790039062, -0.00048828125, -0.0007849931716918945, 0.0, -0.17110252380371094, -9.918212890625e-05, -0.0035381317138671875, -0.0003261566162109375, -0.0013141632080078125, -5.7220458984375e-06, -0.005364656448364258, -9.5367431640625e-06, -0.000133514404296875, -1.33514404296875e-05, -6.866455078125e-05, 0.0, -4.982948303222656e-05, -4.768370445162873e-07, -0.0935201644897461, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.5705446004867554, -0.0002824068069458008, -0.0049381256103515625, -0.000171661376953125, -2.288818359375e-05, -5.7220458984375e-06, -0.027683258056640625, 0.0, -0.12244987487792969, -1.9073486328125e-06, -0.693212628364563, 0.0, -0.19674336910247803, -1.1444091796875e-05, -0.7750086784362793, -3.576278118089249e-07, -0.0009613037109375, -0.005640983581542969, -0.013040542602539062, -0.09911210089921951, -0.0041970014572143555, -0.04486728832125664, -0.8865078687667847, -0.3740790784358978, -0.011220693588256836, -1.33514404296875e-05, -0.029453277587890625, -0.00045013427734375, -0.011961251497268677, -0.011386362835764885, -0.0031666820868849754, -0.04554830864071846, -0.0005821723025292158, -0.0027685165405273438, -0.0003719329833984375, -0.000775456428527832, 0.0], "choice_history": [97, 285, "Mark", "Of", "The", "Wild", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 52, 179, "2", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "option", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 347, 86, 320, "Mark", "Of", "Wild", "Spell", "Cast", "<EOS>", 346, 83, 314, "Mark", "Of", "Wild", "Health", "<EOS>", 50, 174, "player", "<EOS>", 106, 155, 32, 300, 21, 174, "option", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "option", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", "choose_option", "<EOS>", 347, 86, 320, "Mark", "Of", "Wild", "Spell", "Cast", "<EOS>", 346, 83, 314, "Mark", "Of", "Wild", "Health", "<EOS>", 50, 174, "player", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DRUID", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "MarkOfTheWild", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "attr": "choose_option", "_type": "Attribute"}, "args": [{"hole2": [{"_type": "Template73_expr_seq", "hole0": "MarkOfWildHealth"}], "_type": "Template78", "hole0": "MarkOfWildSpellCast"}, {"id": "player", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "option", "_type": "Name"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"id": "option", "_type": "Name"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "attr": "choose_option", "_type": "Attribute"}, "args": [{"hole2": [{"_type": "Template73_expr_seq", "hole0": "MarkOfWildHealth"}], "_type": "Template78", "hole0": "MarkOfWildSpellCast"}, {"id": "player", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "option", "_type": "Name"}]}]}}]}
{"gold_code": "class MultiShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            target = game.random_choice(targets)\n            targets.remove(target)\n            target.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "beams": [{"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 3):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -2.079926620440169, "score_history": [-9.5367431640625e-06, -0.05708599090576172, -4.076874756719917e-05, -0.0027239301707595587, -2.610682713566348e-05, -0.00013244152069091797, -1.3708998267247807e-05, -9.5367431640625e-06, -0.39600372314453125, -0.000335693359375, -7.152555099310121e-07, -2.0265579223632812e-06, -2.264974000354414e-06, 0.0, -0.002735137939453125, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -9.56058211158961e-05, 0.0, -0.0001239776611328125, -0.0001220703125, -6.794917680963408e-06, -4.291534423828125e-06, -0.1529102325439453, -9.5367431640625e-06, -0.000141143798828125, -1.52587890625e-05, -0.000110626220703125, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, -2.86102294921875e-05, -3.0636721930932254e-05, -1.1920928244535389e-07, -3.528593879309483e-05, -1.1920928244535389e-07, -2.5749075575731695e-05, -5.960462772236497e-07, -0.01919269561767578, -3.814697265625e-06, -0.000408172607421875, -5.7220458984375e-06, -8.392333984375e-05, -0.0023781817872077227, -0.00019716366659849882, -0.004784584045410156, -3.814697265625e-05, -5.91278076171875e-05, -3.24249267578125e-05, -0.001117706298828125, 0.0, -0.0017837285995483398, -3.814697265625e-06, -0.00020241737365722656, -3.814697265625e-06, -3.814697265625e-06, -0.008306503295898438, -8.0108642578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000213623046875, -2.09808349609375e-05, -6.246565317269415e-05, -1.9073486328125e-06, -0.009437203407287598, 0.0, -0.0004518032947089523, -1.9073486328125e-06, -0.028367996215820312, -0.0004119873046875, -2.47955322265625e-05, -0.0005950927734375, -0.0017834879690781236, -3.814697265625e-06, -0.00035381317138671875, -5.7220458984375e-06, -5.7220458984375e-05, -3.0517578125e-05, -0.002733838278800249, -2.3841855067985307e-07, -7.2479248046875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005990862264297903, -5.7220458984375e-05, -0.00484466552734375, 0.0, -0.24123670160770416, -9.5367431640625e-06, -0.2509431838989258, -0.0033512115478515625, -3.4332275390625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000118255615234375, -0.05883467197418213, -2.1457672119140625e-06, -0.0011005401611328125, -5.7220458984375e-06, -8.20159912109375e-05, -1.9073486328125e-06, -0.0004367828369140625, 0.0, -0.009915351867675781, -1.1920928244535389e-07, -0.0007525681867264211, -3.814697265625e-06, -0.0003509521484375, -0.0003643035888671875, -3.814697265625e-06, -0.00033704936504364014, -0.0002558217092882842, -0.0024366378784179688, -0.000682830810546875, -0.0009746551513671875, -7.05718994140625e-05, -0.0025758720003068447, -0.0006740527460351586, -0.025162527337670326, -5.960462772236497e-07, -0.0002307891845703125, -0.0008907318115234375, -7.62939453125e-06, -0.007225700654089451, 0.0, -0.0004100799560546875, -0.000827789306640625, -0.0008792877197265625, -1.9073486328125e-06, -0.06459172815084457, -3.2186455882765586e-06, -0.001239156466908753, 0.0, -2.09808349609375e-05, -0.00104522705078125, -7.2479248046875e-05, -0.5865682363510132, 0.0, -0.000156402587890625, -4.38690185546875e-05, -0.0005948542384430766, -2.1457672119140625e-05, -3.0517578125e-05, -0.0006275177001953125, -9.34600830078125e-05, -0.002426492515951395, 0.0, -0.0001010894775390625, -0.000110626220703125, -0.00011444091796875, -0.001312255859375, -7.379053568001837e-05, -1.9073304429184645e-05, -3.814697265625e-06, -0.00014007030404172838, -1.1920928244535389e-07, -1.9073486328125e-06, -2.253044476674404e-05, -1.9073468138230965e-06, -2.288818359375e-05, -0.0006618499755859375, -0.0001125335693359375, -0.0012302398681640625, -0.0006809234619140625, -9.5367431640625e-05, -0.0015850067138671875, -0.0006961822509765625, -5.340576171875e-05, -0.0001926422119140625, 0.0, -0.000346734537743032, -3.314018249511719e-05, -0.001970532815903425, -1.1920928244535389e-07, -0.00045446533476933837, 0.0, -0.0019890842959284782, -1.2516897186287679e-05, -0.011407852172851562, -4.38690185546875e-05, -0.0012226104736328125, -3.62396240234375e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.001914902706630528, -1.5139572496991605e-05, -2.6702880859375e-05, -0.001819610595703125, -0.000133514404296875, -0.000492095947265625, -9.5367431640625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.771087646484375e-05, -9.5367431640625e-06, -0.008164286613464355, 0.0, -0.00018107896903529763, -1.9073486328125e-06, -0.011866569519042969, -0.0017423629760742188, -4.38690185546875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.05783672630786896, 0.0], "choice_history": [97, 286, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "GtE"}], "comparators": [{"n": 2, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Multi-Shot", "hole2": "HUNTER"}], "hole0": "Multi-Shot", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "_type": "Template77", "hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template61", "hole0": 2}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 3):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -2.536582000364916, "score_history": [-9.5367431640625e-06, -0.05708599090576172, -4.076874756719917e-05, -0.0027239301707595587, -2.610682713566348e-05, -0.00013244152069091797, -1.3708998267247807e-05, -9.5367431640625e-06, -0.39600372314453125, -0.000335693359375, -7.152555099310121e-07, -2.0265579223632812e-06, -2.264974000354414e-06, 0.0, -0.002735137939453125, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -9.56058211158961e-05, 0.0, -0.0001239776611328125, -0.0001220703125, -6.794917680963408e-06, -4.291534423828125e-06, -0.1529102325439453, -9.5367431640625e-06, -0.000141143798828125, -1.52587890625e-05, -0.000110626220703125, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, -2.86102294921875e-05, -3.0636721930932254e-05, -1.1920928244535389e-07, -3.528593879309483e-05, -1.1920928244535389e-07, -2.5749075575731695e-05, -5.960462772236497e-07, -0.01919269561767578, -3.814697265625e-06, -0.000408172607421875, -5.7220458984375e-06, -8.392333984375e-05, -0.0023781817872077227, -0.00019716366659849882, -0.004784584045410156, -3.814697265625e-05, -5.91278076171875e-05, -3.24249267578125e-05, -0.001117706298828125, 0.0, -0.0017837285995483398, -3.814697265625e-06, -0.00020241737365722656, -3.814697265625e-06, -3.814697265625e-06, -0.008306503295898438, -8.0108642578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000213623046875, -2.09808349609375e-05, -6.246565317269415e-05, -1.9073486328125e-06, -0.009437203407287598, 0.0, -0.0004518032947089523, -1.9073486328125e-06, -0.028367996215820312, -0.0004119873046875, -2.47955322265625e-05, -0.0005950927734375, -0.0017834879690781236, -3.814697265625e-06, -0.00035381317138671875, -5.7220458984375e-06, -5.7220458984375e-05, -3.0517578125e-05, -0.002733838278800249, -2.3841855067985307e-07, -7.2479248046875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005990862264297903, -5.7220458984375e-05, -0.00484466552734375, 0.0, -0.24123670160770416, -9.5367431640625e-06, -0.2509431838989258, -0.0033512115478515625, -3.4332275390625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000118255615234375, -0.05883467197418213, -2.1457672119140625e-06, -0.0011005401611328125, -5.7220458984375e-06, -8.20159912109375e-05, -1.9073486328125e-06, -0.0004367828369140625, 0.0, -0.009915351867675781, -1.1920928244535389e-07, -0.0007525681867264211, -3.814697265625e-06, -0.0003509521484375, -0.0003643035888671875, -3.814697265625e-06, -0.00033704936504364014, -0.0002558217092882842, -0.0024366378784179688, -0.000682830810546875, -0.0009746551513671875, -7.05718994140625e-05, -0.0025758720003068447, -0.0006740527460351586, -0.025162527337670326, -5.960462772236497e-07, -0.0002307891845703125, -0.0008907318115234375, -7.62939453125e-06, -0.007225700654089451, 0.0, -0.0004100799560546875, -0.000827789306640625, -0.0008792877197265625, -1.9073486328125e-06, -0.06459172815084457, -3.2186455882765586e-06, -0.001239156466908753, 0.0, -2.09808349609375e-05, -0.00104522705078125, -7.2479248046875e-05, -1.0440378189086914, -1.1920928955078125e-05, -2.288818359375e-05, -3.24249267578125e-05, -0.0007066726684570312, -1.728534698486328e-05, -2.288818359375e-05, -0.0007076263427734375, -7.82012939453125e-05, -0.0022644547279924154, 0.0, -9.34600830078125e-05, -0.0001239776611328125, -0.0001220703125, -0.00138092041015625, -9.024142491398379e-05, -2.7656173188006505e-05, -3.814697265625e-06, -0.00012707666610367596, -2.3841855067985307e-07, -1.9073486328125e-06, -2.4199349354603328e-05, -2.0265558760002023e-06, -2.6702880859375e-05, -0.0006923675537109375, -0.000110626220703125, -0.001148223876953125, -0.0006008148193359375, -9.34600830078125e-05, -0.00165557861328125, -0.00063323974609375, -5.14984130859375e-05, -0.0001850128173828125, 0.0, -0.0003857047704514116, -3.516674041748047e-05, -0.001936007640324533, -1.1920928244535389e-07, -0.00042741457582451403, 0.0, -0.001994200050830841, -1.2397689715726301e-05, -0.010704994201660156, -4.38690185546875e-05, -0.001232147216796875, -3.62396240234375e-05, -0.000274658203125, -1.9073486328125e-06, -0.0019051415147259831, -1.5139572496991605e-05, -2.6702880859375e-05, -0.0018215179443359375, -0.000133514404296875, -0.00048828125, -9.5367431640625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.771087646484375e-05, -9.5367431640625e-06, -0.00816810131072998, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -0.011944770812988281, -0.001743316650390625, -4.38690185546875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.057825859636068344, 0.0], "choice_history": [97, 286, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "GtE"}], "comparators": [{"n": 2, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Multi-Shot", "hole2": "HUNTER"}], "hole0": "Multi-Shot", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "_type": "Template77", "hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 3):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -2.845730536450475, "score_history": [-9.5367431640625e-06, -0.05708599090576172, -4.076874756719917e-05, -0.0027239301707595587, -2.610682713566348e-05, -0.00013244152069091797, -1.3708998267247807e-05, -9.5367431640625e-06, -1.1977195739746094, -0.001346588134765625, -3.576278118089249e-07, -1.7881295207189396e-05, -1.1920928244535389e-07, 0.0, -0.002346038818359375, -7.62939453125e-06, -0.0002574920654296875, 0.0, -0.0017316341400146484, 0.0, -3.4213022445328534e-05, 0.0, -0.00022125244140625, -0.000110626220703125, -2.002699693548493e-05, -6.318092346191406e-06, -0.10726737976074219, -1.1444091796875e-05, -0.000263214111328125, -4.57763671875e-05, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -2.574920654296875e-05, -5.733966827392578e-05, -3.14711760438513e-05, 0.0, -2.586840491858311e-05, -2.3841855067985307e-07, -2.4318585928995162e-05, -8.344646857949556e-07, -0.03404045104980469, -3.814697265625e-06, -0.00029754638671875, -5.7220458984375e-06, -7.62939453125e-05, -0.0024851595517247915, -0.00019239637185819447, -0.004666328430175781, -3.62396240234375e-05, -6.866455078125e-05, -3.0517578125e-05, -0.001010894775390625, 0.0, -0.0018428564071655273, -3.814697265625e-06, -0.00019669532775878906, -3.814697265625e-06, -3.814697265625e-06, -0.008134841918945312, -8.20159912109375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000217437744140625, -2.09808349609375e-05, -6.234644388314337e-05, -1.9073486328125e-06, -0.00950014591217041, 0.0, -0.0004442930512595922, -1.9073486328125e-06, -0.0256195068359375, -0.000453948974609375, -2.6702880859375e-05, -0.000644683837890625, -0.0018219929188489914, -3.814697265625e-06, -0.000354766845703125, -5.7220458984375e-06, -5.7220458984375e-05, -3.0517578125e-05, -0.002732155378907919, -2.3841855067985307e-07, -7.2479248046875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005939626134932041, -5.7220458984375e-05, -0.004680633544921875, 0.0, -0.24534623324871063, -9.5367431640625e-06, -0.2427663803100586, -0.0034942626953125, -3.4332275390625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000118255615234375, -0.05786171555519104, -2.1457672119140625e-06, -0.0011014938354492188, -5.7220458984375e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.0004367828369140625, 0.0, -0.0099409818649292, -1.1920928244535389e-07, -0.0007525681867264211, -3.814697265625e-06, -0.0003509521484375, -0.0003643035888671875, -3.814697265625e-06, -0.0003376603126525879, -0.0002558217092882842, -0.0024290084838867188, -0.0006809234619140625, -0.000972747802734375, -7.05718994140625e-05, -0.002610947238281369, -0.0006728613516315818, -0.02513866126537323, -5.960462772236497e-07, -0.0002307891845703125, -0.0008907318115234375, -7.62939453125e-06, -0.0072215283289551735, 0.0, -0.0004138946533203125, -0.000827789306640625, -0.000881195068359375, -1.9073486328125e-06, -0.06465167552232742, -3.2186455882765586e-06, -0.0012384417932480574, 0.0, -2.09808349609375e-05, -0.00104522705078125, -7.2479248046875e-05, -0.5866080522537231, 0.0, -0.000156402587890625, -4.38690185546875e-05, -0.0005948542384430766, -2.1457672119140625e-05, -3.0517578125e-05, -0.0006275177001953125, -9.34600830078125e-05, -0.002426492515951395, 0.0, -0.0001010894775390625, -0.000110626220703125, -0.00011444091796875, -0.0013103485107421875, -7.379053568001837e-05, -1.9192511899746023e-05, -3.814697265625e-06, -0.00014007030404172838, -1.1920928244535389e-07, -1.9073486328125e-06, -2.253044476674404e-05, -1.9073468138230965e-06, -2.288818359375e-05, -0.0006618499755859375, -0.0001125335693359375, -0.0012302398681640625, -0.00067901611328125, -9.5367431640625e-05, -0.001583099365234375, -0.0006961822509765625, -5.340576171875e-05, -0.0001926422119140625, 0.0, -0.0003468537179287523, -3.314018249511719e-05, -0.0019694610964506865, -1.1920928244535389e-07, -0.00045446533476933837, 0.0, -0.0019890842959284782, -1.2516897186287679e-05, -0.011407852172851562, -4.38690185546875e-05, -0.0012226104736328125, -3.62396240234375e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.001914902706630528, -1.5139572496991605e-05, -2.6702880859375e-05, -0.001819610595703125, -0.000133514404296875, -0.000492095947265625, -9.5367431640625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.771087646484375e-05, -9.5367431640625e-06, -0.008164286613464355, 0.0, -0.00018107896903529763, -1.9073486328125e-06, -0.011867523193359375, -0.0017423629760742188, -4.38690185546875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.05783291161060333, 0.0], "choice_history": [97, 286, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "GtE"}], "comparators": [{"n": 2, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Multi-Shot", "hole2": "HUNTER"}], "hole0": "Multi-Shot", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "_type": "Template77", "hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template61", "hole0": 2}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 3):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -3.3023252386703987, "score_history": [-9.5367431640625e-06, -0.05708599090576172, -4.076874756719917e-05, -0.0027239301707595587, -2.610682713566348e-05, -0.00013244152069091797, -1.3708998267247807e-05, -9.5367431640625e-06, -1.1977195739746094, -0.001346588134765625, -3.576278118089249e-07, -1.7881295207189396e-05, -1.1920928244535389e-07, 0.0, -0.002346038818359375, -7.62939453125e-06, -0.0002574920654296875, 0.0, -0.0017316341400146484, 0.0, -3.4213022445328534e-05, 0.0, -0.00022125244140625, -0.000110626220703125, -2.002699693548493e-05, -6.318092346191406e-06, -0.10726737976074219, -1.1444091796875e-05, -0.000263214111328125, -4.57763671875e-05, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -2.574920654296875e-05, -5.733966827392578e-05, -3.14711760438513e-05, 0.0, -2.586840491858311e-05, -2.3841855067985307e-07, -2.4318585928995162e-05, -8.344646857949556e-07, -0.03404045104980469, -3.814697265625e-06, -0.00029754638671875, -5.7220458984375e-06, -7.62939453125e-05, -0.0024851595517247915, -0.00019239637185819447, -0.004666328430175781, -3.62396240234375e-05, -6.866455078125e-05, -3.0517578125e-05, -0.001010894775390625, 0.0, -0.0018428564071655273, -3.814697265625e-06, -0.00019669532775878906, -3.814697265625e-06, -3.814697265625e-06, -0.008134841918945312, -8.20159912109375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000217437744140625, -2.09808349609375e-05, -6.234644388314337e-05, -1.9073486328125e-06, -0.00950014591217041, 0.0, -0.0004442930512595922, -1.9073486328125e-06, -0.0256195068359375, -0.000453948974609375, -2.6702880859375e-05, -0.000644683837890625, -0.0018219929188489914, -3.814697265625e-06, -0.000354766845703125, -5.7220458984375e-06, -5.7220458984375e-05, -3.0517578125e-05, -0.002732155378907919, -2.3841855067985307e-07, -7.2479248046875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005939626134932041, -5.7220458984375e-05, -0.004680633544921875, 0.0, -0.24534623324871063, -9.5367431640625e-06, -0.2427663803100586, -0.0034942626953125, -3.4332275390625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000118255615234375, -0.05786171555519104, -2.1457672119140625e-06, -0.0011014938354492188, -5.7220458984375e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.0004367828369140625, 0.0, -0.0099409818649292, -1.1920928244535389e-07, -0.0007525681867264211, -3.814697265625e-06, -0.0003509521484375, -0.0003643035888671875, -3.814697265625e-06, -0.0003376603126525879, -0.0002558217092882842, -0.0024290084838867188, -0.0006809234619140625, -0.000972747802734375, -7.05718994140625e-05, -0.002610947238281369, -0.0006728613516315818, -0.02513866126537323, -5.960462772236497e-07, -0.0002307891845703125, -0.0008907318115234375, -7.62939453125e-06, -0.0072215283289551735, 0.0, -0.0004138946533203125, -0.000827789306640625, -0.000881195068359375, -1.9073486328125e-06, -0.06465167552232742, -3.2186455882765586e-06, -0.0012384417932480574, 0.0, -2.09808349609375e-05, -0.00104522705078125, -7.2479248046875e-05, -1.0440101623535156, -1.1920928955078125e-05, -2.288818359375e-05, -3.24249267578125e-05, -0.0007066726684570312, -1.728534698486328e-05, -2.288818359375e-05, -0.0007076263427734375, -7.82012939453125e-05, -0.0022644547279924154, 0.0, -9.34600830078125e-05, -0.0001239776611328125, -0.0001220703125, -0.00138092041015625, -9.024142491398379e-05, -2.777537883957848e-05, -3.814697265625e-06, -0.00012707666610367596, -2.3841855067985307e-07, -1.9073486328125e-06, -2.4199349354603328e-05, -2.0265558760002023e-06, -2.6702880859375e-05, -0.0006923675537109375, -0.000110626220703125, -0.001148223876953125, -0.0006008148193359375, -9.34600830078125e-05, -0.0016536712646484375, -0.00063323974609375, -5.14984130859375e-05, -0.0001850128173828125, 0.0, -0.00038582395063713193, -3.516674041748047e-05, -0.0019349358044564724, -1.1920928244535389e-07, -0.0004275337269064039, 0.0, -0.001994200050830841, -1.2397689715726301e-05, -0.010704994201660156, -4.38690185546875e-05, -0.001232147216796875, -3.62396240234375e-05, -0.000274658203125, -1.9073486328125e-06, -0.0019051415147259831, -1.5139572496991605e-05, -2.6702880859375e-05, -0.0018215179443359375, -0.000133514404296875, -0.00048828125, -9.5367431640625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.771087646484375e-05, -9.5367431640625e-06, -0.008170008659362793, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -0.011944770812988281, -0.001743316650390625, -4.38690185546875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.05782395228743553, 0.0], "choice_history": [97, 286, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "GtE"}], "comparators": [{"n": 2, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Multi-Shot", "hole2": "HUNTER"}], "hole0": "Multi-Shot", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "_type": "Template77", "hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 3):\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -3.3358989842610924, "score_history": [-9.5367431640625e-06, -0.05708599090576172, -4.076874756719917e-05, -0.0027239301707595587, -2.610682713566348e-05, -0.00013244152069091797, -1.3708998267247807e-05, -9.5367431640625e-06, -0.39600372314453125, -0.000335693359375, -7.152555099310121e-07, -2.0265579223632812e-06, -2.264974000354414e-06, 0.0, -0.002735137939453125, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -9.56058211158961e-05, 0.0, -0.0001239776611328125, -0.0001220703125, -6.794917680963408e-06, -4.291534423828125e-06, -0.1529102325439453, -9.5367431640625e-06, -0.000141143798828125, -1.52587890625e-05, -0.000110626220703125, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, -2.86102294921875e-05, -3.0636721930932254e-05, -1.1920928244535389e-07, -3.528593879309483e-05, -1.1920928244535389e-07, -2.5749075575731695e-05, -5.960462772236497e-07, -0.01919269561767578, -3.814697265625e-06, -0.000408172607421875, -5.7220458984375e-06, -8.392333984375e-05, -0.0023781817872077227, -0.00019716366659849882, -0.004784584045410156, -3.814697265625e-05, -5.91278076171875e-05, -3.24249267578125e-05, -0.001117706298828125, 0.0, -0.0017837285995483398, -3.814697265625e-06, -0.00020241737365722656, -3.814697265625e-06, -3.814697265625e-06, -0.008306503295898438, -8.0108642578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000213623046875, -2.09808349609375e-05, -6.246565317269415e-05, -1.9073486328125e-06, -0.009437203407287598, 0.0, -0.0004518032947089523, -1.9073486328125e-06, -0.028367996215820312, -0.0004119873046875, -2.47955322265625e-05, -0.0005950927734375, -0.0017834879690781236, -3.814697265625e-06, -0.00035381317138671875, -5.7220458984375e-06, -5.7220458984375e-05, -3.0517578125e-05, -0.002733838278800249, -2.3841855067985307e-07, -7.2479248046875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005990862264297903, -5.7220458984375e-05, -0.00484466552734375, 0.0, -0.24123670160770416, -9.5367431640625e-06, -1.7193317413330078, -0.04749011993408203, -0.0005950927734375, -0.4624481201171875, -1.52587890625e-05, -0.03220267966389656, -7.867782187531702e-06, -0.00980350561439991, -1.1920928244535389e-07, -0.00038909912109375, -0.0006008148193359375, -6.67572021484375e-05, -0.00285872514359653, -0.0003845143364742398, -1.33514404296875e-05, -4.38690185546875e-05, -0.00042974617099389434, -2.956390380859375e-05, -6.67572021484375e-05, -0.0009288787841796875, -8.58306884765625e-05, -0.003838234581053257, 0.0, -8.20159912109375e-05, -0.00011444091796875, -0.000110626220703125, -0.0034961700439453125, -9.703634714242071e-05, -2.038458114839159e-05, -1.9073486328125e-06, -0.0001385195937473327, -2.3841855067985307e-07, -1.9073486328125e-06, -2.0384681192808785e-05, -1.6689286894688848e-06, -2.86102294921875e-05, -0.0006732940673828125, -0.0001811981201171875, -0.0012054443359375, -0.000629425048828125, -0.000110626220703125, -0.0019130706787109375, -0.0006256103515625, -5.7220458984375e-05, -0.00019073486328125, 0.0, -0.00041192234493792057, -3.528594970703125e-05, -0.002098433207720518, -1.1920928244535389e-07, -0.0004115627671126276, 0.0, -0.002137676114216447, -1.2636104656849056e-05, -0.009939193725585938, -4.38690185546875e-05, -0.00122833251953125, -3.62396240234375e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0019393190741539001, -1.5139572496991605e-05, -2.86102294921875e-05, -0.0018596649169921875, -0.0001354217529296875, -0.0004673004150390625, -9.5367431640625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.771087646484375e-05, -9.5367431640625e-06, -0.008085966110229492, 0.0, -0.00018310546875, -1.9073486328125e-06, -0.012085914611816406, -0.0017423629760742188, -4.38690185546875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.05817919224500656, 0.0], "choice_history": [97, 286, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "GtE"}], "comparators": [{"n": 2, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Multi-Shot", "hole2": "HUNTER"}], "hole0": "Multi-Shot", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"body": [{"hole1": "damage", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 3):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(4), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -3.9458269946724442, "score_history": [-9.5367431640625e-06, -0.05708599090576172, -4.076874756719917e-05, -0.0027239301707595587, -2.610682713566348e-05, -0.00013244152069091797, -1.3708998267247807e-05, -9.5367431640625e-06, -0.39600372314453125, -0.000335693359375, -7.152555099310121e-07, -2.0265579223632812e-06, -2.264974000354414e-06, 0.0, -0.002735137939453125, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -9.56058211158961e-05, 0.0, -0.0001239776611328125, -0.0001220703125, -6.794917680963408e-06, -4.291534423828125e-06, -0.1529102325439453, -9.5367431640625e-06, -0.000141143798828125, -1.52587890625e-05, -0.000110626220703125, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, -2.86102294921875e-05, -3.0636721930932254e-05, -1.1920928244535389e-07, -3.528593879309483e-05, -1.1920928244535389e-07, -2.5749075575731695e-05, -5.960462772236497e-07, -0.01919269561767578, -3.814697265625e-06, -0.000408172607421875, -5.7220458984375e-06, -8.392333984375e-05, -0.0023781817872077227, -0.00019716366659849882, -0.004784584045410156, -3.814697265625e-05, -5.91278076171875e-05, -3.24249267578125e-05, -0.001117706298828125, 0.0, -0.0017837285995483398, -3.814697265625e-06, -0.00020241737365722656, -3.814697265625e-06, -3.814697265625e-06, -0.008306503295898438, -8.0108642578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000213623046875, -2.09808349609375e-05, -6.246565317269415e-05, -1.9073486328125e-06, -0.009437203407287598, 0.0, -0.0004518032947089523, -1.9073486328125e-06, -0.028367996215820312, -0.0004119873046875, -2.47955322265625e-05, -0.0005950927734375, -0.0017834879690781236, -3.814697265625e-06, -0.00035381317138671875, -5.7220458984375e-06, -5.7220458984375e-05, -3.0517578125e-05, -0.002733838278800249, -2.3841855067985307e-07, -7.2479248046875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005990862264297903, -5.7220458984375e-05, -0.00484466552734375, 0.0, -0.24123670160770416, -9.5367431640625e-06, -0.2509431838989258, -0.0033512115478515625, -3.4332275390625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000118255615234375, -0.05883467197418213, -2.1457672119140625e-06, -0.0011005401611328125, -5.7220458984375e-06, -8.20159912109375e-05, -1.9073486328125e-06, -0.0004367828369140625, 0.0, -0.009915351867675781, -1.1920928244535389e-07, -0.0007525681867264211, -3.814697265625e-06, -0.0003509521484375, -0.0003643035888671875, -3.814697265625e-06, -0.00033704936504364014, -0.0002558217092882842, -0.0024366378784179688, -0.000682830810546875, -0.0009746551513671875, -7.05718994140625e-05, -0.0025758720003068447, -0.0006740527460351586, -0.025162527337670326, -5.960462772236497e-07, -0.0002307891845703125, -0.0008907318115234375, -7.62939453125e-06, -0.007225700654089451, 0.0, -0.0004100799560546875, -0.000827789306640625, -0.0008792877197265625, -1.9073486328125e-06, -0.06459172815084457, -3.2186455882765586e-06, -0.001239156466908753, 0.0, -2.09808349609375e-05, -0.00104522705078125, -7.2479248046875e-05, -2.4526009559631348, -3.4332275390625e-05, -0.000133514404296875, -1.71661376953125e-05, -0.0010436773300170898, -2.5153160095214844e-05, -2.47955322265625e-05, -0.0006160736083984375, -7.82012939453125e-05, -0.0021233484148979187, 0.0, -0.000110626220703125, -0.0001163482666015625, -0.0001201629638671875, -0.0014972686767578125, -9.047983621712774e-05, -2.1934269170742482e-05, -3.814697265625e-06, -0.000146149963256903, -2.3841855067985307e-07, -1.9073486328125e-06, -2.2888067178428173e-05, -1.9073468138230965e-06, -2.6702880859375e-05, -0.0006809234619140625, -0.00011444091796875, -0.0011653900146484375, -0.000652313232421875, -9.918212890625e-05, -0.001705169677734375, -0.0006504058837890625, -5.340576171875e-05, -0.000186920166015625, 0.0, -0.00039309257408604026, -3.516674041748047e-05, -0.0019911620765924454, -1.1920928244535389e-07, -0.0004419525503180921, 0.0, -0.0020529713947325945, -1.2397689715726301e-05, -0.010738372802734375, -4.38690185546875e-05, -0.0012302398681640625, -3.62396240234375e-05, -0.000274658203125, -1.9073486328125e-06, -0.0019071651622653008, -1.5139572496991605e-05, -2.6702880859375e-05, -0.0018215179443359375, -0.0001354217529296875, -0.000484466552734375, -9.5367431640625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.771087646484375e-05, -9.5367431640625e-06, -0.008166193962097168, 0.0, -0.00018107896903529763, -1.9073486328125e-06, -0.011996269226074219, -0.0017442703247070312, -4.38690185546875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.057784486562013626, 0.0], "choice_history": [97, 286, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "GtE"}], "comparators": [{"n": 2, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Multi-Shot", "hole2": "HUNTER"}], "hole0": "Multi-Shot", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "_type": "Template77", "hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template61", "hole0": 4}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 4):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -3.989707625746206, "score_history": [-9.5367431640625e-06, -0.05708599090576172, -4.076874756719917e-05, -0.0027239301707595587, -2.610682713566348e-05, -0.00013244152069091797, -1.3708998267247807e-05, -9.5367431640625e-06, -0.39600372314453125, -0.000335693359375, -7.152555099310121e-07, -2.0265579223632812e-06, -2.264974000354414e-06, 0.0, -0.002735137939453125, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -9.56058211158961e-05, 0.0, -0.0001239776611328125, -0.0001220703125, -6.794917680963408e-06, -4.291534423828125e-06, -0.1529102325439453, -9.5367431640625e-06, -0.000141143798828125, -1.52587890625e-05, -0.000110626220703125, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, -2.86102294921875e-05, -3.0636721930932254e-05, -1.1920928244535389e-07, -3.528593879309483e-05, -1.1920928244535389e-07, -2.5749075575731695e-05, -5.960462772236497e-07, -0.01919269561767578, -3.814697265625e-06, -0.000408172607421875, -5.7220458984375e-06, -8.392333984375e-05, -0.0023781817872077227, -0.00019716366659849882, -0.004784584045410156, -3.814697265625e-05, -5.91278076171875e-05, -3.24249267578125e-05, -0.001117706298828125, 0.0, -0.0017837285995483398, -3.814697265625e-06, -0.00020241737365722656, -3.814697265625e-06, -3.814697265625e-06, -0.008306503295898438, -8.0108642578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000213623046875, -2.09808349609375e-05, -6.246565317269415e-05, -1.9073486328125e-06, -0.009437203407287598, 0.0, -0.0004518032947089523, -1.9073486328125e-06, -0.028367996215820312, -0.0004119873046875, -2.47955322265625e-05, -0.0005950927734375, -0.0017834879690781236, -3.814697265625e-06, -0.00035381317138671875, -5.7220458984375e-06, -5.7220458984375e-05, -3.0517578125e-05, -0.002733838278800249, -2.3841855067985307e-07, -7.2479248046875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005990862264297903, -5.7220458984375e-05, -0.00484466552734375, 0.0, -2.027954578399658, -4.38690185546875e-05, -0.372833251953125, -0.002216339111328125, -3.4332275390625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001316070556640625, -0.056373000144958496, -2.2649765014648438e-06, -0.0009584426879882812, -5.7220458984375e-06, -9.1552734375e-05, -1.9073486328125e-06, -0.00057220458984375, 0.0, -0.011875510215759277, -2.3841855067985307e-07, -0.0007578133954666555, -1.9073486328125e-06, -0.0003528594970703125, -0.000347137451171875, -3.814697265625e-06, -0.00037778913974761963, -0.0002621398598421365, -0.00234222412109375, -0.0007171630859375, -0.0009670257568359375, -7.43865966796875e-05, -0.0025832445826381445, -0.0006733391201123595, -0.024810371920466423, -5.960462772236497e-07, -0.0002422332763671875, -0.0009365081787109375, -7.62939453125e-06, -0.006815746426582336, 0.0, -0.00046539306640625, -0.000835418701171875, -0.0009021759033203125, -1.9073486328125e-06, -0.06291236728429794, -3.3378546504536644e-06, -0.0012073516845703125, 0.0, -2.09808349609375e-05, -0.0010471343994140625, -7.05718994140625e-05, -0.5916905403137207, 0.0, -0.0001544952392578125, -4.38690185546875e-05, -0.0005836485652253032, -2.1457672119140625e-05, -3.0517578125e-05, -0.0006256103515625, -9.34600830078125e-05, -0.0024247050751000643, 0.0, -0.000102996826171875, -0.000110626220703125, -0.0001163482666015625, -0.001316070556640625, -7.390974496956915e-05, -1.9192511899746023e-05, -3.814697265625e-06, -0.0001403087080689147, -1.1920928244535389e-07, -1.9073486328125e-06, -2.2411237296182662e-05, -1.9073468138230965e-06, -2.288818359375e-05, -0.00066375732421875, -0.0001125335693359375, -0.0012302398681640625, -0.0006809234619140625, -9.5367431640625e-05, -0.0015850067138671875, -0.0006961822509765625, -5.340576171875e-05, -0.0001926422119140625, 0.0, -0.00034899881575256586, -3.314018249511719e-05, -0.001971963793039322, -1.1920928244535389e-07, -0.00045601444435305893, 0.0, -0.0019884894136339426, -1.2516897186287679e-05, -0.011395454406738281, -4.38690185546875e-05, -0.0012226104736328125, -3.62396240234375e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.001914783613756299, -1.5139572496991605e-05, -2.6702880859375e-05, -0.001819610595703125, -0.000133514404296875, -0.000492095947265625, -9.5367431640625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.771087646484375e-05, -9.5367431640625e-06, -0.008164286613464355, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -0.011868476867675781, -0.0017423629760742188, -4.38690185546875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.05783423036336899, 0.0], "choice_history": [97, 286, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "4", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "GtE"}], "comparators": [{"n": 2, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Multi-Shot", "hole2": "HUNTER"}], "hole0": "Multi-Shot", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "_type": "Template77", "hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template61", "hole0": 2}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 4, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -4.127782337161584, "score_history": [-9.5367431640625e-06, -0.05708599090576172, -4.076874756719917e-05, -0.0027239301707595587, -2.610682713566348e-05, -0.00013244152069091797, -1.3708998267247807e-05, -9.5367431640625e-06, -0.39600372314453125, -0.000335693359375, -7.152555099310121e-07, -2.0265579223632812e-06, -2.264974000354414e-06, 0.0, -0.002735137939453125, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -9.56058211158961e-05, 0.0, -0.0001239776611328125, -0.0001220703125, -6.794917680963408e-06, -4.291534423828125e-06, -0.1529102325439453, -9.5367431640625e-06, -0.000141143798828125, -1.52587890625e-05, -0.000110626220703125, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, -2.86102294921875e-05, -3.0636721930932254e-05, -1.1920928244535389e-07, -3.528593879309483e-05, -1.1920928244535389e-07, -2.5749075575731695e-05, -5.960462772236497e-07, -0.01919269561767578, -3.814697265625e-06, -0.000408172607421875, -5.7220458984375e-06, -8.392333984375e-05, -0.0023781817872077227, -0.00019716366659849882, -0.004784584045410156, -3.814697265625e-05, -5.91278076171875e-05, -3.24249267578125e-05, -0.001117706298828125, 0.0, -0.0017837285995483398, -3.814697265625e-06, -0.00020241737365722656, -3.814697265625e-06, -3.814697265625e-06, -0.008306503295898438, -8.0108642578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000213623046875, -2.09808349609375e-05, -6.246565317269415e-05, -1.9073486328125e-06, -0.009437203407287598, 0.0, -0.0004518032947089523, -1.9073486328125e-06, -0.028367996215820312, -0.0004119873046875, -2.47955322265625e-05, -0.0005950927734375, -0.0017834879690781236, -3.814697265625e-06, -0.00035381317138671875, -5.7220458984375e-06, -5.7220458984375e-05, -3.0517578125e-05, -0.002733838278800249, -2.3841855067985307e-07, -7.2479248046875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005990862264297903, -5.7220458984375e-05, -0.00484466552734375, 0.0, -2.530287265777588, 0.0, -0.03512382507324219, -0.000926971435546875, -1.9073486328125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-05, -0.039753373712301254, -2.2649765014648438e-06, -0.0007724761962890625, -5.7220458984375e-06, -0.0001316070556640625, -3.814697265625e-06, -0.0005245208740234375, 0.0, -0.006465792655944824, -1.1920928244535389e-07, -0.0007089375867508352, -1.9073486328125e-06, -0.0003337860107421875, -0.0003376007080078125, -3.814697265625e-06, -0.00032979249954223633, -0.0002529606281314045, -0.0019731521606445312, -0.000675201416015625, -0.000823974609375, -7.2479248046875e-05, -0.003135274164378643, -0.000611026247497648, -0.02368263155221939, -5.960462772236497e-07, -0.000240325927734375, -0.000885009765625, -7.62939453125e-06, -0.006480295676738024, 0.0, -0.0003452301025390625, -0.0008449554443359375, -0.0008392333984375, -1.9073486328125e-06, -0.056936658918857574, -2.9802276912960224e-06, -0.0012870319187641144, 0.0, -2.09808349609375e-05, -0.00102996826171875, -7.2479248046875e-05, -0.5965903997421265, 0.0, -0.000152587890625, -4.38690185546875e-05, -0.0005894898204132915, -2.1457672119140625e-05, -3.0517578125e-05, -0.0006256103515625, -9.34600830078125e-05, -0.0024348439183086157, 0.0, -0.000102996826171875, -0.000110626220703125, -0.0001163482666015625, -0.0013065338134765625, -7.379053568001837e-05, -1.9192511899746023e-05, -3.814697265625e-06, -0.00013792453682981431, -1.1920928244535389e-07, -1.9073486328125e-06, -2.253044476674404e-05, -1.9073468138230965e-06, -2.288818359375e-05, -0.00066375732421875, -0.0001125335693359375, -0.0012302398681640625, -0.00067901611328125, -9.5367431640625e-05, -0.0015811920166015625, -0.0006961822509765625, -5.340576171875e-05, -0.0001926422119140625, 0.0, -0.000347807101206854, -3.314018249511719e-05, -0.001968031981959939, -1.1920928244535389e-07, -0.0004554186307359487, 0.0, -0.0019836113788187504, -1.2516897186287679e-05, -0.0113983154296875, -4.38690185546875e-05, -0.0012226104736328125, -3.62396240234375e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0019140694057568908, -1.5139572496991605e-05, -2.6702880859375e-05, -0.001819610595703125, -0.000133514404296875, -0.000492095947265625, -9.5367431640625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.771087646484375e-05, -9.5367431640625e-06, -0.008164286613464355, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -0.011865615844726562, -0.0017423629760742188, -4.38690185546875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.057824596762657166, 0.0], "choice_history": [97, 286, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "GtE"}], "comparators": [{"n": 2, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Multi-Shot", "hole2": "HUNTER"}], "hole0": "Multi-Shot", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "_type": "Template77", "hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template61", "hole0": 2}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 3):\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -4.1338097057059215, "score_history": [-9.5367431640625e-06, -0.05708599090576172, -4.076874756719917e-05, -0.0027239301707595587, -2.610682713566348e-05, -0.00013244152069091797, -1.3708998267247807e-05, -9.5367431640625e-06, -1.1977195739746094, -0.001346588134765625, -3.576278118089249e-07, -1.7881295207189396e-05, -1.1920928244535389e-07, 0.0, -0.002346038818359375, -7.62939453125e-06, -0.0002574920654296875, 0.0, -0.0017316341400146484, 0.0, -3.4213022445328534e-05, 0.0, -0.00022125244140625, -0.000110626220703125, -2.002699693548493e-05, -6.318092346191406e-06, -0.10726737976074219, -1.1444091796875e-05, -0.000263214111328125, -4.57763671875e-05, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -2.574920654296875e-05, -5.733966827392578e-05, -3.14711760438513e-05, 0.0, -2.586840491858311e-05, -2.3841855067985307e-07, -2.4318585928995162e-05, -8.344646857949556e-07, -0.03404045104980469, -3.814697265625e-06, -0.00029754638671875, -5.7220458984375e-06, -7.62939453125e-05, -0.0024851595517247915, -0.00019239637185819447, -0.004666328430175781, -3.62396240234375e-05, -6.866455078125e-05, -3.0517578125e-05, -0.001010894775390625, 0.0, -0.0018428564071655273, -3.814697265625e-06, -0.00019669532775878906, -3.814697265625e-06, -3.814697265625e-06, -0.008134841918945312, -8.20159912109375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000217437744140625, -2.09808349609375e-05, -6.234644388314337e-05, -1.9073486328125e-06, -0.00950014591217041, 0.0, -0.0004442930512595922, -1.9073486328125e-06, -0.0256195068359375, -0.000453948974609375, -2.6702880859375e-05, -0.000644683837890625, -0.0018219929188489914, -3.814697265625e-06, -0.000354766845703125, -5.7220458984375e-06, -5.7220458984375e-05, -3.0517578125e-05, -0.002732155378907919, -2.3841855067985307e-07, -7.2479248046875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005939626134932041, -5.7220458984375e-05, -0.004680633544921875, 0.0, -0.24534623324871063, -9.5367431640625e-06, -1.7480535507202148, -0.04699897766113281, -0.0005931854248046875, -0.45759105682373047, -1.52587890625e-05, -0.03197363018989563, -7.867782187531702e-06, -0.009881356731057167, -1.1920928244535389e-07, -0.0003871917724609375, -0.000598907470703125, -6.67572021484375e-05, -0.0028630190063267946, -0.0003845143364742398, -1.33514404296875e-05, -4.38690185546875e-05, -0.0004287924966774881, -2.956390380859375e-05, -6.67572021484375e-05, -0.0009288787841796875, -8.58306884765625e-05, -0.003839306067675352, 0.0, -8.392333984375e-05, -0.00011444091796875, -0.000110626220703125, -0.0034942626953125, -9.703634714242071e-05, -2.038458114839159e-05, -1.9073486328125e-06, -0.00013840039900969714, -2.3841855067985307e-07, -1.9073486328125e-06, -2.0384681192808785e-05, -1.6689286894688848e-06, -2.86102294921875e-05, -0.0006732940673828125, -0.0001811981201171875, -0.0012054443359375, -0.000629425048828125, -0.0001087188720703125, -0.0019130706787109375, -0.0006256103515625, -5.7220458984375e-05, -0.00019073486328125, 0.0, -0.00041204149601981044, -3.528594970703125e-05, -0.0020974804647266865, -1.1920928244535389e-07, -0.00041168194729834795, 0.0, -0.0021375571377575397, -1.2636104656849056e-05, -0.009938240051269531, -4.38690185546875e-05, -0.00122833251953125, -3.62396240234375e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.001939438167028129, -1.5139572496991605e-05, -2.86102294921875e-05, -0.0018596649169921875, -0.0001354217529296875, -0.0004673004150390625, -9.5367431640625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.771087646484375e-05, -9.5367431640625e-06, -0.008085966110229492, 0.0, -0.00018298637587577105, -1.9073486328125e-06, -0.012085914611816406, -0.0017423629760742188, -4.38690185546875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.058177050203084946, 0.0], "choice_history": [97, 286, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "GtE"}], "comparators": [{"n": 2, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Multi-Shot", "hole2": "HUNTER"}], "hole0": "Multi-Shot", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"body": [{"hole1": "damage", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -4.157349224099335, "score_history": [-9.5367431640625e-06, -0.05708599090576172, -4.076874756719917e-05, -0.0027239301707595587, -2.610682713566348e-05, -0.00013244152069091797, -1.3708998267247807e-05, -9.5367431640625e-06, -0.39600372314453125, -0.000335693359375, -7.152555099310121e-07, -2.0265579223632812e-06, -2.264974000354414e-06, 0.0, -0.002735137939453125, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -9.56058211158961e-05, 0.0, -0.0001239776611328125, -0.0001220703125, -6.794917680963408e-06, -4.291534423828125e-06, -2.381777763366699, -0.000217437744140625, -0.0001220703125, -1.71661376953125e-05, -8.58306884765625e-05, -1.33514404296875e-05, 0.0, -5.507469177246094e-05, -3.0517578125e-05, -7.20012976671569e-05, -1.1920928244535389e-07, -2.8967848265892826e-05, -1.1920928244535389e-07, -2.7775560738518834e-05, -5.960462772236497e-07, -0.0003795623779296875, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.015148618258535862, -3.9338363421848044e-05, -0.005023956298828125, -2.86102294921875e-05, -0.000274658203125, -5.340576171875e-05, -0.00179290771484375, 0.0, -0.0027920007705688477, -3.814697265625e-06, -0.00020265579223632812, -1.9073486328125e-06, -3.814697265625e-06, -0.0071926116943359375, -8.392333984375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002422332763671875, -2.47955322265625e-05, -7.069109415169805e-05, -1.9073486328125e-06, -0.009216904640197754, 0.0, -0.0004937649937346578, -1.9073486328125e-06, -6.866455078125e-05, -8.96453857421875e-05, -0.000957489013671875, -5.91278076171875e-05, -0.007878685370087624, -7.152555099310121e-07, -0.08296654373407364, -1.96695291379001e-05, -0.000141143798828125, -0.000492095947265625, 0.0, -0.000400543212890625, 0.0, -0.0001087188720703125, -1.9073486328125e-06, -2.6464460461284034e-05, -3.099440846199286e-06, -0.011261939071118832, -1.9073486328125e-06, -0.2664135694503784, -3.933906555175781e-06, -0.21991634368896484, -0.000331878662109375, -1.71661376953125e-05, -0.0004711151123046875, -0.38453757762908936, -1.1920928244535389e-07, -0.02841949462890625, -7.62939453125e-06, -0.003674745326861739, -1.6808426153147593e-05, -0.0002307891845703125, -0.0060520172119140625, -4.1961669921875e-05, -0.0059814453125, -0.0001621246337890625, -0.08825910836458206, -4.887569048150908e-06, -0.007801772095263004, 0.0, -1.52587890625e-05, -0.0016222000122070312, -0.0004520416259765625, -0.040110547095537186, -0.0001237372780451551, -3.62396240234375e-05, -8.7738037109375e-05, -0.0003787278546951711, -3.838539123535156e-05, -4.1961669921875e-05, -0.0007114410400390625, -7.62939453125e-05, -0.001604139106348157, 0.0, -9.34600830078125e-05, -0.000110626220703125, -0.0001220703125, -0.00228118896484375, -9.107588266488165e-05, -2.276871418871451e-05, -1.9073486328125e-06, -0.00013005651999264956, -2.3841855067985307e-07, -1.9073486328125e-06, -2.157675589842256e-05, -1.9073468138230965e-06, -2.86102294921875e-05, -0.000659942626953125, -0.000118255615234375, -0.0011425018310546875, -0.000667572021484375, -0.0001068115234375, -0.0018939971923828125, -0.000621795654296875, -5.53131103515625e-05, -0.0001811981201171875, 0.0, -0.00042336154729127884, -3.528594970703125e-05, -0.001983869355171919, -1.1920928244535389e-07, -0.00042514901724644005, 0.0, -0.0020247797947376966, -1.2397689715726301e-05, -0.010362625122070312, -4.38690185546875e-05, -0.00122833251953125, -3.62396240234375e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.0019158631330356002, -1.5139572496991605e-05, -2.6702880859375e-05, -0.0018310546875, -0.0001316070556640625, -0.000476837158203125, -9.5367431640625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.771087646484375e-05, -9.5367431640625e-06, -0.008116602897644043, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -0.012103080749511719, -0.001739501953125, -4.38690185546875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.05804213881492615, 0.0], "choice_history": [97, 286, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "extend", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 21, 174, "targets", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "GtE"}], "comparators": [{"n": 2, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Multi-Shot", "hole2": "HUNTER"}], "hole0": "Multi-Shot", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"hole1": "extend", "_type": "Template77", "hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "current_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}]}, {"body": [{"hole1": "damage", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}]}], "iter": {"id": "targets", "_type": "Name"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 4):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -4.436061295182533, "score_history": [-9.5367431640625e-06, -0.05708599090576172, -4.076874756719917e-05, -0.0027239301707595587, -2.610682713566348e-05, -0.00013244152069091797, -1.3708998267247807e-05, -9.5367431640625e-06, -0.39600372314453125, -0.000335693359375, -7.152555099310121e-07, -2.0265579223632812e-06, -2.264974000354414e-06, 0.0, -0.002735137939453125, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -9.56058211158961e-05, 0.0, -0.0001239776611328125, -0.0001220703125, -6.794917680963408e-06, -4.291534423828125e-06, -0.1529102325439453, -9.5367431640625e-06, -0.000141143798828125, -1.52587890625e-05, -0.000110626220703125, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, -2.86102294921875e-05, -3.0636721930932254e-05, -1.1920928244535389e-07, -3.528593879309483e-05, -1.1920928244535389e-07, -2.5749075575731695e-05, -5.960462772236497e-07, -0.01919269561767578, -3.814697265625e-06, -0.000408172607421875, -5.7220458984375e-06, -8.392333984375e-05, -0.0023781817872077227, -0.00019716366659849882, -0.004784584045410156, -3.814697265625e-05, -5.91278076171875e-05, -3.24249267578125e-05, -0.001117706298828125, 0.0, -0.0017837285995483398, -3.814697265625e-06, -0.00020241737365722656, -3.814697265625e-06, -3.814697265625e-06, -0.008306503295898438, -8.0108642578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000213623046875, -2.09808349609375e-05, -6.246565317269415e-05, -1.9073486328125e-06, -0.009437203407287598, 0.0, -0.0004518032947089523, -1.9073486328125e-06, -0.028367996215820312, -0.0004119873046875, -2.47955322265625e-05, -0.0005950927734375, -0.0017834879690781236, -3.814697265625e-06, -0.00035381317138671875, -5.7220458984375e-06, -5.7220458984375e-05, -3.0517578125e-05, -0.002733838278800249, -2.3841855067985307e-07, -7.2479248046875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005990862264297903, -5.7220458984375e-05, -0.00484466552734375, 0.0, -2.027954578399658, -4.38690185546875e-05, -0.372833251953125, -0.002216339111328125, -3.4332275390625e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001316070556640625, -0.056373000144958496, -2.2649765014648438e-06, -0.0009584426879882812, -5.7220458984375e-06, -9.1552734375e-05, -1.9073486328125e-06, -0.00057220458984375, 0.0, -0.011875510215759277, -2.3841855067985307e-07, -0.0007578133954666555, -1.9073486328125e-06, -0.0003528594970703125, -0.000347137451171875, -3.814697265625e-06, -0.00037778913974761963, -0.0002621398598421365, -0.00234222412109375, -0.0007171630859375, -0.0009670257568359375, -7.43865966796875e-05, -0.0025832445826381445, -0.0006733391201123595, -0.024810371920466423, -5.960462772236497e-07, -0.0002422332763671875, -0.0009365081787109375, -7.62939453125e-06, -0.006815746426582336, 0.0, -0.00046539306640625, -0.000835418701171875, -0.0009021759033203125, -1.9073486328125e-06, -0.06291236728429794, -3.3378546504536644e-06, -0.0012073516845703125, 0.0, -2.09808349609375e-05, -0.0010471343994140625, -7.05718994140625e-05, -1.0388633012771606, -1.1920928955078125e-05, -2.288818359375e-05, -3.24249267578125e-05, -0.0006896257400512695, -1.728534698486328e-05, -2.288818359375e-05, -0.000705718994140625, -7.82012939453125e-05, -0.0022590900771319866, 0.0, -9.5367431640625e-05, -0.0001239776611328125, -0.0001239776611328125, -0.0013828277587890625, -9.036063420353457e-05, -2.777537883957848e-05, -3.814697265625e-06, -0.00012719586084131151, -2.3841855067985307e-07, -1.9073486328125e-06, -2.4199349354603328e-05, -2.0265558760002023e-06, -2.6702880859375e-05, -0.0006923675537109375, -0.000110626220703125, -0.001148223876953125, -0.00060272216796875, -9.34600830078125e-05, -0.0016574859619140625, -0.00063323974609375, -5.14984130859375e-05, -0.0001850128173828125, 0.0, -0.00038844565278850496, -3.516674041748047e-05, -0.0019356503617018461, -1.1920928244535389e-07, -0.0004290828655939549, 0.0, -0.001993605401366949, -1.2397689715726301e-05, -0.010694503784179688, -4.38690185546875e-05, -0.001232147216796875, -3.62396240234375e-05, -0.000274658203125, -1.9073486328125e-06, -0.0019052604911848903, -1.5139572496991605e-05, -2.6702880859375e-05, -0.0018215179443359375, -0.000133514404296875, -0.00048828125, -9.5367431640625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.771087646484375e-05, -9.5367431640625e-06, -0.008170008659362793, 0.0, -0.00018107896903529763, -1.9073486328125e-06, -0.011946678161621094, -0.001743316650390625, -4.38690185546875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.057823363691568375, 0.0], "choice_history": [97, 286, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "4", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "GtE"}], "comparators": [{"n": 2, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Multi-Shot", "hole2": "HUNTER"}], "hole0": "Multi-Shot", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "_type": "Template77", "hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 4, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -4.561790688815819, "score_history": [-9.5367431640625e-06, -0.05708599090576172, -4.076874756719917e-05, -0.0027239301707595587, -2.610682713566348e-05, -0.00013244152069091797, -1.3708998267247807e-05, -9.5367431640625e-06, -0.39600372314453125, -0.000335693359375, -7.152555099310121e-07, -2.0265579223632812e-06, -2.264974000354414e-06, 0.0, -0.002735137939453125, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -9.56058211158961e-05, 0.0, -0.0001239776611328125, -0.0001220703125, -6.794917680963408e-06, -4.291534423828125e-06, -0.1529102325439453, -9.5367431640625e-06, -0.000141143798828125, -1.52587890625e-05, -0.000110626220703125, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, -2.86102294921875e-05, -3.0636721930932254e-05, -1.1920928244535389e-07, -3.528593879309483e-05, -1.1920928244535389e-07, -2.5749075575731695e-05, -5.960462772236497e-07, -0.01919269561767578, -3.814697265625e-06, -0.000408172607421875, -5.7220458984375e-06, -8.392333984375e-05, -0.0023781817872077227, -0.00019716366659849882, -0.004784584045410156, -3.814697265625e-05, -5.91278076171875e-05, -3.24249267578125e-05, -0.001117706298828125, 0.0, -0.0017837285995483398, -3.814697265625e-06, -0.00020241737365722656, -3.814697265625e-06, -3.814697265625e-06, -0.008306503295898438, -8.0108642578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000213623046875, -2.09808349609375e-05, -6.246565317269415e-05, -1.9073486328125e-06, -0.009437203407287598, 0.0, -0.0004518032947089523, -1.9073486328125e-06, -0.028367996215820312, -0.0004119873046875, -2.47955322265625e-05, -0.0005950927734375, -0.0017834879690781236, -3.814697265625e-06, -0.00035381317138671875, -5.7220458984375e-06, -5.7220458984375e-05, -3.0517578125e-05, -0.002733838278800249, -2.3841855067985307e-07, -7.2479248046875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005990862264297903, -5.7220458984375e-05, -0.00484466552734375, 0.0, -2.530287265777588, 0.0, -0.03512382507324219, -0.000926971435546875, -1.9073486328125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-05, -0.039753373712301254, -2.2649765014648438e-06, -0.0007724761962890625, -5.7220458984375e-06, -0.0001316070556640625, -3.814697265625e-06, -0.0005245208740234375, 0.0, -0.006465792655944824, -1.1920928244535389e-07, -0.0007089375867508352, -1.9073486328125e-06, -0.0003337860107421875, -0.0003376007080078125, -3.814697265625e-06, -0.00032979249954223633, -0.0002529606281314045, -0.0019731521606445312, -0.000675201416015625, -0.000823974609375, -7.2479248046875e-05, -0.003135274164378643, -0.000611026247497648, -0.02368263155221939, -5.960462772236497e-07, -0.000240325927734375, -0.000885009765625, -7.62939453125e-06, -0.006480295676738024, 0.0, -0.0003452301025390625, -0.0008449554443359375, -0.0008392333984375, -1.9073486328125e-06, -0.056936658918857574, -2.9802276912960224e-06, -0.0012870319187641144, 0.0, -2.09808349609375e-05, -0.00102996826171875, -7.2479248046875e-05, -1.0314066410064697, -1.1920928955078125e-05, -2.288818359375e-05, -3.24249267578125e-05, -0.0006972551345825195, -1.728534698486328e-05, -2.288818359375e-05, -0.0007076263427734375, -7.82012939453125e-05, -0.0022663625422865152, 0.0, -9.5367431640625e-05, -0.0001239776611328125, -0.0001239776611328125, -0.0013828277587890625, -9.024142491398379e-05, -2.7894584491150454e-05, -3.814697265625e-06, -0.00012505010818131268, -2.3841855067985307e-07, -1.9073486328125e-06, -2.4199349354603328e-05, -2.0265558760002023e-06, -2.6702880859375e-05, -0.0006923675537109375, -0.000110626220703125, -0.0011501312255859375, -0.0006008148193359375, -9.34600830078125e-05, -0.001651763916015625, -0.0006313323974609375, -5.14984130859375e-05, -0.0001850128173828125, 0.0, -0.0003871347871609032, -3.516674041748047e-05, -0.0019317183177918196, -1.1920928244535389e-07, -0.00042836787179112434, 0.0, -0.001987894531339407, -1.2397689715726301e-05, -0.010699272155761719, -4.38690185546875e-05, -0.001232147216796875, -3.62396240234375e-05, -0.000274658203125, -1.9073486328125e-06, -0.001904427190311253, -1.5139572496991605e-05, -2.6702880859375e-05, -0.0018215179443359375, -0.000133514404296875, -0.00048828125, -9.5367431640625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.771087646484375e-05, -9.5367431640625e-06, -0.008170008659362793, 0.0, -0.00018107896903529763, -1.9073486328125e-06, -0.011941909790039062, -0.001743316650390625, -4.38690185546875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.057815518230199814, 0.0], "choice_history": [97, 286, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "GtE"}], "comparators": [{"n": 2, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Multi-Shot", "hole2": "HUNTER"}], "hole0": "Multi-Shot", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "_type": "Template77", "hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 4):\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -4.638811044535004, "score_history": [-9.5367431640625e-06, -0.05708599090576172, -4.076874756719917e-05, -0.0027239301707595587, -2.610682713566348e-05, -0.00013244152069091797, -1.3708998267247807e-05, -9.5367431640625e-06, -0.39600372314453125, -0.000335693359375, -7.152555099310121e-07, -2.0265579223632812e-06, -2.264974000354414e-06, 0.0, -0.002735137939453125, -1.9073486328125e-06, -0.0001163482666015625, 0.0, -9.56058211158961e-05, 0.0, -0.0001239776611328125, -0.0001220703125, -6.794917680963408e-06, -4.291534423828125e-06, -0.1529102325439453, -9.5367431640625e-06, -0.000141143798828125, -1.52587890625e-05, -0.000110626220703125, -9.5367431640625e-06, 0.0, -1.5854835510253906e-05, -2.86102294921875e-05, -3.0636721930932254e-05, -1.1920928244535389e-07, -3.528593879309483e-05, -1.1920928244535389e-07, -2.5749075575731695e-05, -5.960462772236497e-07, -0.01919269561767578, -3.814697265625e-06, -0.000408172607421875, -5.7220458984375e-06, -8.392333984375e-05, -0.0023781817872077227, -0.00019716366659849882, -0.004784584045410156, -3.814697265625e-05, -5.91278076171875e-05, -3.24249267578125e-05, -0.001117706298828125, 0.0, -0.0017837285995483398, -3.814697265625e-06, -0.00020241737365722656, -3.814697265625e-06, -3.814697265625e-06, -0.008306503295898438, -8.0108642578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000213623046875, -2.09808349609375e-05, -6.246565317269415e-05, -1.9073486328125e-06, -0.009437203407287598, 0.0, -0.0004518032947089523, -1.9073486328125e-06, -0.028367996215820312, -0.0004119873046875, -2.47955322265625e-05, -0.0005950927734375, -0.0017834879690781236, -3.814697265625e-06, -0.00035381317138671875, -5.7220458984375e-06, -5.7220458984375e-05, -3.0517578125e-05, -0.002733838278800249, -2.3841855067985307e-07, -7.2479248046875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005990862264297903, -5.7220458984375e-05, -0.00484466552734375, 0.0, -2.027954578399658, -4.38690185546875e-05, -1.2766284942626953, -0.18535137176513672, -0.000591278076171875, -0.2665128707885742, -1.33514404296875e-05, -0.05022750049829483, -1.0371154530730564e-05, -0.008221535012125969, -1.1920928244535389e-07, -0.000370025634765625, -0.000614166259765625, -6.103515625e-05, -0.003204317530617118, -0.0003646109835244715, -1.33514404296875e-05, -4.76837158203125e-05, -0.0004233088402543217, -2.765655517578125e-05, -6.866455078125e-05, -0.0009365081787109375, -8.58306884765625e-05, -0.0038716825656592846, 0.0, -8.392333984375e-05, -0.000118255615234375, -0.000110626220703125, -0.00356292724609375, -0.00010311602090951055, -2.038458114839159e-05, -1.9073486328125e-06, -0.00014018853835295886, -2.3841855067985307e-07, -1.9073486328125e-06, -2.0742303604492918e-05, -1.7881377516459906e-06, -2.86102294921875e-05, -0.000675201416015625, -0.0001811981201171875, -0.0012054443359375, -0.0006351470947265625, -0.000110626220703125, -0.001926422119140625, -0.0006275177001953125, -5.7220458984375e-05, -0.00019073486328125, 0.0, -0.00041788065573200583, -3.528594970703125e-05, -0.002106891945004463, -1.1920928244535389e-07, -0.0004162109107710421, 0.0, -0.00214766850695014, -1.2636104656849056e-05, -0.009918212890625, -4.38690185546875e-05, -0.00122833251953125, -3.62396240234375e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.001935269101522863, -1.5139572496991605e-05, -2.86102294921875e-05, -0.001857757568359375, -0.0001354217529296875, -0.0004673004150390625, -9.5367431640625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.771087646484375e-05, -9.5367431640625e-06, -0.008085966110229492, 0.0, -0.00018310546875, -1.9073486328125e-06, -0.012087821960449219, -0.0017423629760742188, -4.38690185546875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.058216337114572525, 0.0], "choice_history": [97, 286, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 127, 230, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "4", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "GtE"}], "comparators": [{"n": 2, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Multi-Shot", "hole2": "HUNTER"}], "hole0": "Multi-Shot", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"body": [{"hole1": "damage", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 4, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 3):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(4), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -4.711439822558994, "score_history": [-9.5367431640625e-06, -0.05708599090576172, -4.076874756719917e-05, -0.0027239301707595587, -2.610682713566348e-05, -0.00013244152069091797, -1.3708998267247807e-05, -9.5367431640625e-06, -1.1977195739746094, -0.001346588134765625, -3.576278118089249e-07, -1.7881295207189396e-05, -1.1920928244535389e-07, 0.0, -0.002346038818359375, -7.62939453125e-06, -0.0002574920654296875, 0.0, -0.0017316341400146484, 0.0, -3.4213022445328534e-05, 0.0, -0.00022125244140625, -0.000110626220703125, -2.002699693548493e-05, -6.318092346191406e-06, -0.10726737976074219, -1.1444091796875e-05, -0.000263214111328125, -4.57763671875e-05, -0.0001163482666015625, -1.1444091796875e-05, 0.0, -2.574920654296875e-05, -5.733966827392578e-05, -3.14711760438513e-05, 0.0, -2.586840491858311e-05, -2.3841855067985307e-07, -2.4318585928995162e-05, -8.344646857949556e-07, -0.03404045104980469, -3.814697265625e-06, -0.00029754638671875, -5.7220458984375e-06, -7.62939453125e-05, -0.0024851595517247915, -0.00019239637185819447, -0.004666328430175781, -3.62396240234375e-05, -6.866455078125e-05, -3.0517578125e-05, -0.001010894775390625, 0.0, -0.0018428564071655273, -3.814697265625e-06, -0.00019669532775878906, -3.814697265625e-06, -3.814697265625e-06, -0.008134841918945312, -8.20159912109375e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000217437744140625, -2.09808349609375e-05, -6.234644388314337e-05, -1.9073486328125e-06, -0.00950014591217041, 0.0, -0.0004442930512595922, -1.9073486328125e-06, -0.0256195068359375, -0.000453948974609375, -2.6702880859375e-05, -0.000644683837890625, -0.0018219929188489914, -3.814697265625e-06, -0.000354766845703125, -5.7220458984375e-06, -5.7220458984375e-05, -3.0517578125e-05, -0.002732155378907919, -2.3841855067985307e-07, -7.2479248046875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005939626134932041, -5.7220458984375e-05, -0.004680633544921875, 0.0, -0.24534623324871063, -9.5367431640625e-06, -0.2427663803100586, -0.0034942626953125, -3.4332275390625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000118255615234375, -0.05786171555519104, -2.1457672119140625e-06, -0.0011014938354492188, -5.7220458984375e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.0004367828369140625, 0.0, -0.0099409818649292, -1.1920928244535389e-07, -0.0007525681867264211, -3.814697265625e-06, -0.0003509521484375, -0.0003643035888671875, -3.814697265625e-06, -0.0003376603126525879, -0.0002558217092882842, -0.0024290084838867188, -0.0006809234619140625, -0.000972747802734375, -7.05718994140625e-05, -0.002610947238281369, -0.0006728613516315818, -0.02513866126537323, -5.960462772236497e-07, -0.0002307891845703125, -0.0008907318115234375, -7.62939453125e-06, -0.0072215283289551735, 0.0, -0.0004138946533203125, -0.000827789306640625, -0.000881195068359375, -1.9073486328125e-06, -0.06465167552232742, -3.2186455882765586e-06, -0.0012384417932480574, 0.0, -2.09808349609375e-05, -0.00104522705078125, -7.2479248046875e-05, -2.452448606491089, -3.4332275390625e-05, -0.000133514404296875, -1.71661376953125e-05, -0.001044631004333496, -2.5153160095214844e-05, -2.47955322265625e-05, -0.0006160736083984375, -7.82012939453125e-05, -0.0021200114861130714, 0.0, -0.000110626220703125, -0.0001163482666015625, -0.0001201629638671875, -0.0014934539794921875, -9.047983621712774e-05, -2.1934269170742482e-05, -3.814697265625e-06, -0.0001460307539673522, -2.3841855067985307e-07, -1.9073486328125e-06, -2.2888067178428173e-05, -1.9073468138230965e-06, -2.6702880859375e-05, -0.0006809234619140625, -0.00011444091796875, -0.0011653900146484375, -0.000652313232421875, -9.918212890625e-05, -0.0017032623291015625, -0.0006504058837890625, -5.340576171875e-05, -0.000186920166015625, 0.0, -0.0003932117542717606, -3.516674041748047e-05, -0.001989970915019512, -1.1920928244535389e-07, -0.000442071701399982, 0.0, -0.0020529713947325945, -1.2397689715726301e-05, -0.010738372802734375, -4.38690185546875e-05, -0.0012302398681640625, -3.62396240234375e-05, -0.000274658203125, -1.9073486328125e-06, -0.0019071651622653008, -1.5139572496991605e-05, -2.6702880859375e-05, -0.0018215179443359375, -0.0001354217529296875, -0.000484466552734375, -9.5367431640625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.771087646484375e-05, -9.5367431640625e-06, -0.00816810131072998, 0.0, -0.00018107896903529763, -1.9073486328125e-06, -0.011997222900390625, -0.0017442703247070312, -4.38690185546875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.05778246372938156, 0.0], "choice_history": [97, 286, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "minions", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 360, 102, 142, 346, 50, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 136, 318, 21, 174, "minions", "<EOS>", "remove", "<EOS>", 346, 50, 174, "minion", "<EOS>", 136, 318, 21, 174, "minion", "<EOS>", "damage", "<EOS>", 347, 75, 298, "4", "<EOS>", 50, 174, "self", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 343, 6, 346, 52, 179, "2", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "GtE"}], "comparators": [{"n": 2, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Multi-Shot", "hole2": "HUNTER"}], "hole0": "Multi-Shot", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minions", "_type": "Name"}]}, {"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion", "_type": "Name"}]}, {"hole1": "remove", "_type": "Template77", "hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template61", "hole0": 4}, {"id": "self", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(4, 4, auras=[Aura(ChangeAttack(1), minionsSelector())])\n", "score": -5.464039715629909, "score_history": [-9.5367431640625e-06, -2.9547557830810547, -3.576272320060525e-06, -0.0008487567538395524, -0.0009082552860490978, -0.0002523596631363034, -1.764281842042692e-05, -3.814697265625e-06, -0.148193359375, -0.000392913818359375, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, 0.0, -0.005542874336242676, -1.71661376953125e-05, -0.0003070831298828125, -1.9073486328125e-06, -0.09573948383331299, 0.0, -4.196165536995977e-05, 0.0, -1.9073486328125e-06, -0.2262563705444336, -0.0001049041748046875, -0.4293861389160156, -5.4238757002167404e-05, -1.52587890625e-05, 0.0, -0.023544544354081154, -1.1920928244535389e-07, -0.0006275177001953125, -0.19302749633789062, -0.04965782165527344, -1.9073486328125e-06, -2.09808349609375e-05, -0.9462099075317383, -6.67572021484375e-05, -0.12600061297416687, -1.5616416931152344e-05, -0.04205036163330078, -9.5367431640625e-06, -0.16925033926963806, -0.05070054531097412, 0.0], "choice_history": [97, 283, "Multi-Shot", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "minions", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "minionsSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 4, "hole2": "auras"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Multi-Shot", "hole2": "HUNTER"}], "hole0": "Multi-Shot", "_type": "Template5", "hole3": "create_minion", "hole1": "SpellCard", "hole4": "player"}}]}
{"gold_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word: Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(2)\n        player.draw()\n", "beams": [{"inferred_code": "class Power<UNK>Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(1), self)\n        player.draw()\n", "score": -3.365671639552083, "score_history": [-0.0002574920654296875, -0.001811981201171875, -0.000125281119835563, -0.4503607749938965, -0.14857584238052368, -0.00011515259393490851, -9.452846279600635e-05, -4.589557647705078e-05, -1.1920922133867862e-06, -0.000194549560546875, -0.10523223876953125, -0.000652313232421875, -8.392333984375e-05, -2.6702880859375e-05, -1.764288026606664e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002994537353515625, -1.9073486328125e-05, -0.001476287841796875, -2.1457672119140625e-06, -0.0001595004287082702, -0.019854413345456123, -0.0001125335693359375, -0.01968097686767578, -0.13886070251464844, -6.866455078125e-05, -3.814697265625e-06, -9.536731795378728e-07, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.2625551223754883, 0.0, -9.5367431640625e-06, -0.0001678466796875, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-05, -0.0043468475341796875, -1.9073486328125e-06, -0.0007152557373046875, -6.29425048828125e-05, -7.62939453125e-06, -0.0005974769592285156, 0.0, -0.0017518997192382812, -0.00063323974609375, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001506805419921875, 0.0, -3.445148468017578e-05, 0.0, -0.37605106830596924, 0.0, -0.00013363361358642578, 0.0, -2.622604142743512e-06, 0.0, -0.000362396240234375, -5.7220458984375e-06, -5.9604644775390625e-06, -3.3378546504536644e-06, -0.15083026885986328, -4.38690185546875e-05, -0.00012969970703125, -9.5367431640625e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -3.814697265625e-06, -3.933906555175781e-06, -3.814697265625e-06, -6.890296936035156e-05, 0.0, -0.000102996826171875, -1.1920928244535389e-07, -0.01842975616455078, -4.38690185546875e-05, -0.0004177093505859375, 0.0, -0.0002346038818359375, 0.0, -0.0003230571746826172, -5.841255187988281e-06, -0.0009009838104248047, -9.536738616588991e-07, -1.2282987833023071, 0.0, -0.0001125335693359375, -0.13723373413085938, -0.000736236572265625, -2.288818359375e-05, 0.0, -7.259634730871767e-05, -2.622600959512056e-06, -0.06939757615327835, -2.0265579223632812e-06, -0.0002694126160349697, -0.00024089295766316354, -0.0001678466796875, -8.392333984375e-05, -0.0011010169982910156, -2.7060508728027344e-05, -0.12072944641113281, -7.82012939453125e-05, -0.09216880798339844, -5.7220458984375e-06, -0.006244659423828125, -1.9073486328125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -0.0007870197296142578, -1.9073486328125e-05], "choice_history": [97, 285, "Power", "<UNK>", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Power", " ", "Word", " ", "Shield", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "Power<UNK>Shield", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(1), self)\n        player.draw()\n", "score": -3.9408626605176593, "score_history": [-0.0002574920654296875, -0.001811981201171875, -0.000125281119835563, -1.0255517959594727, -0.14857584238052368, -0.00011515259393490851, -9.452846279600635e-05, -4.589557647705078e-05, -1.1920922133867862e-06, -0.000194549560546875, -0.10523223876953125, -0.000652313232421875, -8.392333984375e-05, -2.6702880859375e-05, -1.764288026606664e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002994537353515625, -1.9073486328125e-05, -0.001476287841796875, -2.1457672119140625e-06, -0.0001595004287082702, -0.019854413345456123, -0.0001125335693359375, -0.01968097686767578, -0.13886070251464844, -6.866455078125e-05, -3.814697265625e-06, -9.536731795378728e-07, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.2625551223754883, 0.0, -9.5367431640625e-06, -0.0001678466796875, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-05, -0.0043468475341796875, -1.9073486328125e-06, -0.0007152557373046875, -6.29425048828125e-05, -7.62939453125e-06, -0.0005974769592285156, 0.0, -0.0017518997192382812, -0.00063323974609375, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001506805419921875, 0.0, -3.445148468017578e-05, 0.0, -0.37605106830596924, 0.0, -0.00013363361358642578, 0.0, -2.622604142743512e-06, 0.0, -0.000362396240234375, -5.7220458984375e-06, -5.9604644775390625e-06, -3.3378546504536644e-06, -0.15083026885986328, -4.38690185546875e-05, -0.00012969970703125, -9.5367431640625e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -3.814697265625e-06, -3.933906555175781e-06, -3.814697265625e-06, -6.890296936035156e-05, 0.0, -0.000102996826171875, -1.1920928244535389e-07, -0.01842975616455078, -4.38690185546875e-05, -0.0004177093505859375, 0.0, -0.0002346038818359375, 0.0, -0.0003230571746826172, -5.841255187988281e-06, -0.0009009838104248047, -9.536738616588991e-07, -1.2282987833023071, 0.0, -0.0001125335693359375, -0.13723373413085938, -0.000736236572265625, -2.288818359375e-05, 0.0, -7.259634730871767e-05, -2.622600959512056e-06, -0.06939757615327835, -2.0265579223632812e-06, -0.0002694126160349697, -0.00024089295766316354, -0.0001678466796875, -8.392333984375e-05, -0.0011010169982910156, -2.7060508728027344e-05, -0.12072944641113281, -7.82012939453125e-05, -0.09216880798339844, -5.7220458984375e-06, -0.006244659423828125, -1.9073486328125e-06, -1.71661376953125e-05, -2.3841855067985307e-07, -0.0007870197296142578, -1.9073486328125e-05], "choice_history": [97, 285, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Power", " ", "Word", " ", "Shield", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "PowerWordShield", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class Power<UNK>Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Buff(ManaChange(-1)))\n        super().use(player, game)\n", "score": -4.320110643055543, "score_history": [-0.0002574920654296875, -0.001811981201171875, -0.000125281119835563, -0.4503607749938965, -0.14857584238052368, -0.00011515259393490851, -9.452846279600635e-05, -4.589557647705078e-05, -1.1920922133867862e-06, -0.000194549560546875, -0.10523223876953125, -0.000652313232421875, -8.392333984375e-05, -2.6702880859375e-05, -1.764288026606664e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002994537353515625, -1.9073486328125e-05, -0.001476287841796875, -2.1457672119140625e-06, -0.0001595004287082702, -0.019854413345456123, -0.0001125335693359375, -0.01968097686767578, -0.13886070251464844, -6.866455078125e-05, -3.814697265625e-06, -9.536731795378728e-07, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.2625551223754883, 0.0, -9.5367431640625e-06, -0.0001678466796875, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-05, -0.0043468475341796875, -1.9073486328125e-06, -0.0007152557373046875, -6.29425048828125e-05, -7.62939453125e-06, -0.0005974769592285156, 0.0, -0.0017518997192382812, -0.00063323974609375, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001506805419921875, 0.0, -3.445148468017578e-05, 0.0, -0.37605106830596924, 0.0, -0.00013363361358642578, 0.0, -2.622604142743512e-06, 0.0, -0.000362396240234375, -5.7220458984375e-06, -5.9604644775390625e-06, -3.3378546504536644e-06, -0.15083026885986328, -4.38690185546875e-05, -0.00012969970703125, -9.5367431640625e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -3.814697265625e-06, -3.933906555175781e-06, -3.814697265625e-06, -6.890296936035156e-05, 0.0, -0.000102996826171875, -1.1920928244535389e-07, -0.01842975616455078, -4.38690185546875e-05, -0.0004177093505859375, 0.0, -0.0002346038818359375, 0.0, -0.0003230571746826172, -5.841255187988281e-06, -0.0009009838104248047, -9.536738616588991e-07, -0.766736626625061, -1.9073486328125e-06, -5.91278076171875e-05, -1.4835309982299805, -0.10544395446777344, -0.0013614891795441508, -0.0005177223356440663, -5.841255187988281e-06, -0.008977890014648438, -0.012984275817871094, -0.0002880096435546875, -0.0004482269287109375, -0.000179290771484375, -3.814697265625e-06, -0.22848516702651978, -1.1920928244535389e-07, -0.00127410888671875, -0.000202178955078125, -0.001354217529296875, -0.000156402587890625, -5.7220458984375e-06, 0.0, -6.329915777314454e-05, -3.063678741455078e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.6450881958007812e-05, -2.3841855067985307e-07, -0.0001235005765920505, -1.1920922133867862e-06], "choice_history": [97, 285, "Power", "<UNK>", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Power", " ", "Word", " ", "Shield", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 69, 291, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "1", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "Power<UNK>Shield", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "add_effect", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": [{"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ManaChange"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}]}}, {"inferred_code": "class Power<UNK>Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(1), self)\n        player.draw()\n", "score": -4.426517133545232, "score_history": [-0.0002574920654296875, -0.001811981201171875, -0.000125281119835563, -0.4503607749938965, -0.14857584238052368, -0.00011515259393490851, -9.452846279600635e-05, -4.589557647705078e-05, -1.1920922133867862e-06, -0.000194549560546875, -0.10523223876953125, -0.000652313232421875, -8.392333984375e-05, -2.6702880859375e-05, -1.764288026606664e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002994537353515625, -1.9073486328125e-05, -0.001476287841796875, -2.1457672119140625e-06, -0.0001595004287082702, -0.019854413345456123, -0.0001125335693359375, -0.01968097686767578, -0.13886070251464844, -6.866455078125e-05, -3.814697265625e-06, -9.536731795378728e-07, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.2625551223754883, 0.0, -9.5367431640625e-06, -0.0001678466796875, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-05, -0.0043468475341796875, -1.9073486328125e-06, -0.0007152557373046875, -6.29425048828125e-05, -7.62939453125e-06, -0.0005974769592285156, 0.0, -0.0017518997192382812, -0.00063323974609375, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001506805419921875, 0.0, -3.445148468017578e-05, 0.0, -1.4741326570510864, 0.0, -0.0005729198455810547, 0.0, -6.198883056640625e-06, 0.0, -0.0004520416259765625, -3.814697265625e-06, -6.079673767089844e-06, -3.576272320060525e-06, -0.1173105239868164, -5.53131103515625e-05, -0.0001316070556640625, -8.0108642578125e-05, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -3.814697265625e-06, -3.933906555175781e-06, -3.814697265625e-06, -7.462501525878906e-05, 0.0, -0.0001010894775390625, -1.1920928244535389e-07, -0.017461776733398438, -4.38690185546875e-05, -0.0004138946533203125, 0.0, -0.000232696533203125, 0.0, -0.0003192424774169922, -5.841255187988281e-06, -0.0009028911590576172, -9.536738616588991e-07, -1.2229421138763428, 0.0, -0.000110626220703125, -0.13692188262939453, -0.0007343292236328125, -2.288818359375e-05, 0.0, -7.2834751335904e-05, -2.622600959512056e-06, -0.06910098344087601, -2.0265579223632812e-06, -0.0002692934067454189, -0.00024196557933464646, -0.0001659393310546875, -8.392333984375e-05, -0.0011029243469238281, -2.7060508728027344e-05, -0.12375640869140625, -8.20159912109375e-05, -0.0917959213256836, -5.7220458984375e-06, -0.006275177001953125, -1.9073486328125e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -0.0007908344268798828, -1.9073486328125e-05], "choice_history": [97, 285, "Power", "<UNK>", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Power", " ", "Word", " ", "Shield", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "Power<UNK>Shield", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Buff(ManaChange(-1)))\n        super().use(player, game)\n", "score": -4.895301664021119, "score_history": [-0.0002574920654296875, -0.001811981201171875, -0.000125281119835563, -1.0255517959594727, -0.14857584238052368, -0.00011515259393490851, -9.452846279600635e-05, -4.589557647705078e-05, -1.1920922133867862e-06, -0.000194549560546875, -0.10523223876953125, -0.000652313232421875, -8.392333984375e-05, -2.6702880859375e-05, -1.764288026606664e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002994537353515625, -1.9073486328125e-05, -0.001476287841796875, -2.1457672119140625e-06, -0.0001595004287082702, -0.019854413345456123, -0.0001125335693359375, -0.01968097686767578, -0.13886070251464844, -6.866455078125e-05, -3.814697265625e-06, -9.536731795378728e-07, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.2625551223754883, 0.0, -9.5367431640625e-06, -0.0001678466796875, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-05, -0.0043468475341796875, -1.9073486328125e-06, -0.0007152557373046875, -6.29425048828125e-05, -7.62939453125e-06, -0.0005974769592285156, 0.0, -0.0017518997192382812, -0.00063323974609375, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001506805419921875, 0.0, -3.445148468017578e-05, 0.0, -0.37605106830596924, 0.0, -0.00013363361358642578, 0.0, -2.622604142743512e-06, 0.0, -0.000362396240234375, -5.7220458984375e-06, -5.9604644775390625e-06, -3.3378546504536644e-06, -0.15083026885986328, -4.38690185546875e-05, -0.00012969970703125, -9.5367431640625e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -3.814697265625e-06, -3.933906555175781e-06, -3.814697265625e-06, -6.890296936035156e-05, 0.0, -0.000102996826171875, -1.1920928244535389e-07, -0.01842975616455078, -4.38690185546875e-05, -0.0004177093505859375, 0.0, -0.0002346038818359375, 0.0, -0.0003230571746826172, -5.841255187988281e-06, -0.0009009838104248047, -9.536738616588991e-07, -0.766736626625061, -1.9073486328125e-06, -5.91278076171875e-05, -1.4835309982299805, -0.10544395446777344, -0.0013614891795441508, -0.0005177223356440663, -5.841255187988281e-06, -0.008977890014648438, -0.012984275817871094, -0.0002880096435546875, -0.0004482269287109375, -0.000179290771484375, -3.814697265625e-06, -0.22848516702651978, -1.1920928244535389e-07, -0.00127410888671875, -0.000202178955078125, -0.001354217529296875, -0.000156402587890625, -5.7220458984375e-06, 0.0, -6.329915777314454e-05, -3.063678741455078e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.6450881958007812e-05, -2.3841855067985307e-07, -0.0001235005765920505, -1.1920922133867862e-06], "choice_history": [97, 285, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Power", " ", "Word", " ", "Shield", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 69, 291, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "1", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "PowerWordShield", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "add_effect", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": [{"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ManaChange"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}]}}, {"inferred_code": "class Power<UNK>Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ManaChange(-1)))\n        super().use(player, game)\n", "score": -4.9001019565020485, "score_history": [-0.0002574920654296875, -0.001811981201171875, -0.000125281119835563, -0.4503607749938965, -0.14857584238052368, -0.00011515259393490851, -9.452846279600635e-05, -4.589557647705078e-05, -1.1920922133867862e-06, -0.000194549560546875, -0.10523223876953125, -0.000652313232421875, -8.392333984375e-05, -2.6702880859375e-05, -1.764288026606664e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002994537353515625, -1.9073486328125e-05, -0.001476287841796875, -2.1457672119140625e-06, -0.0001595004287082702, -0.019854413345456123, -0.0001125335693359375, -0.01968097686767578, -0.13886070251464844, -6.866455078125e-05, -3.814697265625e-06, -9.536731795378728e-07, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.2625551223754883, 0.0, -9.5367431640625e-06, -0.0001678466796875, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-05, -0.0043468475341796875, -1.9073486328125e-06, -0.0007152557373046875, -6.29425048828125e-05, -7.62939453125e-06, -0.0005974769592285156, 0.0, -0.0017518997192382812, -0.00063323974609375, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001506805419921875, 0.0, -3.445148468017578e-05, 0.0, -0.37605106830596924, 0.0, -0.00013363361358642578, 0.0, -2.622604142743512e-06, 0.0, -0.000362396240234375, -5.7220458984375e-06, -5.9604644775390625e-06, -3.3378546504536644e-06, -0.15083026885986328, -4.38690185546875e-05, -0.00012969970703125, -9.5367431640625e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -3.814697265625e-06, -3.933906555175781e-06, -3.814697265625e-06, -6.890296936035156e-05, 0.0, -0.000102996826171875, -1.1920928244535389e-07, -0.01842975616455078, -4.38690185546875e-05, -0.0004177093505859375, 0.0, -0.0002346038818359375, 0.0, -0.0003230571746826172, -5.841255187988281e-06, -0.0009009838104248047, -9.536738616588991e-07, -2.1807446479797363, -4.649161837733118e-06, -3.24249267578125e-05, -0.09872245788574219, -0.6151866912841797, -0.0019356012344360352, -0.0002422321413177997, -2.0265579223632812e-06, -0.01154327392578125, -0.023743629455566406, -0.0002536773681640625, -0.0002918243408203125, -0.00030517578125, -5.7220458984375e-06, -0.2559819519519806, -2.0265579223632812e-06, -0.0012798309326171875, -0.0002269744873046875, -0.001377105712890625, -0.0001239776611328125, -5.7220458984375e-06, 0.0, -6.341835978673771e-05, -2.872943878173828e-05, -4.172325134277344e-06, -3.814697265625e-06, -1.6450881958007812e-05, -2.3841855067985307e-07, -0.00012207009422127157, -1.1920922133867862e-06], "choice_history": [97, 285, "Power", "<UNK>", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Power", " ", "Word", " ", "Shield", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 69, 291, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "1", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "Power<UNK>Shield", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "add_buff", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": [{"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ManaChange"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}]}}, {"inferred_code": "class Power<UNK>Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(Attack(), ActionTag(Draw(),\n            PlayerSelector(draw_player))))\n        super().use(player, game)\n", "score": -5.323726604252599, "score_history": [-0.0002574920654296875, -0.001811981201171875, -0.000125281119835563, -0.4503607749938965, -0.14857584238052368, -0.00011515259393490851, -9.452846279600635e-05, -4.589557647705078e-05, -1.1920922133867862e-06, -0.000194549560546875, -0.10523223876953125, -0.000652313232421875, -8.392333984375e-05, -2.6702880859375e-05, -1.764288026606664e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002994537353515625, -1.9073486328125e-05, -0.001476287841796875, -2.1457672119140625e-06, -0.0001595004287082702, -0.019854413345456123, -0.0001125335693359375, -0.01968097686767578, -0.13886070251464844, -6.866455078125e-05, -3.814697265625e-06, -9.536731795378728e-07, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.2625551223754883, 0.0, -9.5367431640625e-06, -0.0001678466796875, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-05, -0.0043468475341796875, -1.9073486328125e-06, -0.0007152557373046875, -6.29425048828125e-05, -7.62939453125e-06, -0.0005974769592285156, 0.0, -0.0017518997192382812, -0.00063323974609375, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001506805419921875, 0.0, -3.445148468017578e-05, 0.0, -0.37605106830596924, 0.0, -0.00013363361358642578, 0.0, -2.622604142743512e-06, 0.0, -0.000362396240234375, -5.7220458984375e-06, -5.9604644775390625e-06, -3.3378546504536644e-06, -0.15083026885986328, -4.38690185546875e-05, -0.00012969970703125, -9.5367431640625e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -3.814697265625e-06, -3.933906555175781e-06, -3.814697265625e-06, -6.890296936035156e-05, 0.0, -0.000102996826171875, -1.1920928244535389e-07, -0.01842975616455078, -4.38690185546875e-05, -0.0004177093505859375, 0.0, -0.0002346038818359375, 0.0, -0.0003230571746826172, -5.841255187988281e-06, -0.0009009838104248047, -9.536738616588991e-07, -0.766736626625061, -1.9073486328125e-06, -5.91278076171875e-05, -0.3339052200317383, -2.0252718925476074, -0.015255884267389774, -0.001825928338803351, -0.01898394152522087, -2.09808349609375e-05, -0.01604628562927246, -5.960462203802308e-06, -1.1920928244535389e-07, 0.0, -0.00098419189453125, -1.9073486328125e-06, -0.12870214879512787, -2.0265579223632812e-06, -0.059683799743652344, -0.001926422119140625, -0.16822052001953125, -0.000171661376953125, -0.07600021362304688, 0.0, -0.0019443024648353457, -1.3828277587890625e-05, -1.3589859008789062e-05, -1.9073486328125e-06, -1.5616416931152344e-05, -2.3841855067985307e-07, -7.915493188193068e-05, -9.536738616588991e-07], "choice_history": [97, 285, "Power", "<UNK>", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Power", " ", "Word", " ", "Shield", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 57, 227, "Attack", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>", 346, 50, 174, "draw_player", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "Power<UNK>Shield", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "add_effect", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "Draw", "hole5": [{"id": "draw_player", "_type": "Name"}], "_type": "Template30", "hole0": "Attack", "hole4": "PlayerSelector"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}]}}, {"inferred_code": "class Power<UNK>Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Draw()))\n        player.draw()\n", "score": -5.5501286080659185, "score_history": [-0.0002574920654296875, -0.001811981201171875, -0.000125281119835563, -0.4503607749938965, -0.14857584238052368, -0.00011515259393490851, -9.452846279600635e-05, -4.589557647705078e-05, -1.1920922133867862e-06, -0.000194549560546875, -0.10523223876953125, -0.000652313232421875, -8.392333984375e-05, -2.6702880859375e-05, -1.764288026606664e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002994537353515625, -1.9073486328125e-05, -0.001476287841796875, -2.1457672119140625e-06, -0.0001595004287082702, -0.019854413345456123, -0.0001125335693359375, -0.01968097686767578, -0.13886070251464844, -6.866455078125e-05, -3.814697265625e-06, -9.536731795378728e-07, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.2625551223754883, 0.0, -9.5367431640625e-06, -0.0001678466796875, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-05, -0.0043468475341796875, -1.9073486328125e-06, -0.0007152557373046875, -6.29425048828125e-05, -7.62939453125e-06, -0.0005974769592285156, 0.0, -0.0017518997192382812, -0.00063323974609375, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001506805419921875, 0.0, -3.445148468017578e-05, 0.0, -0.37605106830596924, 0.0, -0.00013363361358642578, 0.0, -2.622604142743512e-06, 0.0, -0.000362396240234375, -5.7220458984375e-06, -5.9604644775390625e-06, -3.3378546504536644e-06, -0.15083026885986328, -4.38690185546875e-05, -0.00012969970703125, -9.5367431640625e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -3.814697265625e-06, -3.933906555175781e-06, -3.814697265625e-06, -6.890296936035156e-05, 0.0, -0.000102996826171875, -1.1920928244535389e-07, -0.01842975616455078, -4.38690185546875e-05, -0.0004177093505859375, 0.0, -0.0002346038818359375, 0.0, -0.0003230571746826172, -5.841255187988281e-06, -0.0009009838104248047, -9.536738616588991e-07, -2.1807446479797363, -4.649161837733118e-06, -3.24249267578125e-05, -0.09872245788574219, -0.8101921081542969, -0.5944563150405884, -2.157687231374439e-05, -0.0214080810546875, -8.392333984375e-05, -0.1348123550415039, 0.0, -0.0006389617919921875, -7.62939453125e-06, -0.00014901161193847656, -1.1920928244535389e-07, -0.0009964704513549805, -7.62939453125e-06], "choice_history": [97, 285, "Power", "<UNK>", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Power", " ", "Word", " ", "Shield", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "Draw", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "Power<UNK>Shield", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "add_buff", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template54", "hole0": "Draw"}]}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class Power<UNK>Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(1), self)\n        super().use(player, game)\n", "score": -5.7849138859441425, "score_history": [-0.0002574920654296875, -0.001811981201171875, -0.000125281119835563, -0.4503607749938965, -0.14857584238052368, -0.00011515259393490851, -9.452846279600635e-05, -4.589557647705078e-05, -1.1920922133867862e-06, -0.000194549560546875, -0.10523223876953125, -0.000652313232421875, -8.392333984375e-05, -2.6702880859375e-05, -1.764288026606664e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002994537353515625, -1.9073486328125e-05, -0.001476287841796875, -2.1457672119140625e-06, -0.0001595004287082702, -0.019854413345456123, -0.0001125335693359375, -0.01968097686767578, -0.13886070251464844, -6.866455078125e-05, -3.814697265625e-06, -9.536731795378728e-07, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.2625551223754883, 0.0, -9.5367431640625e-06, -0.0001678466796875, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-05, -0.0043468475341796875, -1.9073486328125e-06, -0.0007152557373046875, -6.29425048828125e-05, -7.62939453125e-06, -0.0005974769592285156, 0.0, -0.0017518997192382812, -0.00063323974609375, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001506805419921875, 0.0, -3.445148468017578e-05, 0.0, -0.37605106830596924, 0.0, -0.00013363361358642578, 0.0, -2.622604142743512e-06, 0.0, -0.000362396240234375, -5.7220458984375e-06, -5.9604644775390625e-06, -3.3378546504536644e-06, -0.15083026885986328, -4.38690185546875e-05, -0.00012969970703125, -9.5367431640625e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -3.814697265625e-06, -3.933906555175781e-06, -3.814697265625e-06, -6.890296936035156e-05, 0.0, -0.000102996826171875, -1.1920928244535389e-07, -0.01842975616455078, -4.38690185546875e-05, -0.0004177093505859375, 0.0, -0.0002346038818359375, 0.0, -0.0003230571746826172, -5.841255187988281e-06, -0.0009009838104248047, -9.536738616588991e-07, -1.2282987833023071, 0.0, -0.0001125335693359375, -0.13723373413085938, -0.000736236572265625, -2.288818359375e-05, 0.0, -7.259634730871767e-05, -2.622600959512056e-06, -0.06939757615327835, -2.0265579223632812e-06, -0.0002694126160349697, -0.00024089295766316354, -0.0001678466796875, -8.392333984375e-05, -0.0011010169982910156, -2.7060508728027344e-05, -0.12072944641113281, -7.82012939453125e-05, -2.4806928634643555, -0.000453948974609375, -0.03411102294921875, 0.0, -0.0030541270971298218, -4.6014782128622755e-05, -1.1920928955078125e-05, -1.9073486328125e-06, -1.2159347534179688e-05, -2.3841855067985307e-07, -0.00010132635361514986, -1.311301275563892e-06], "choice_history": [97, 285, "Power", "<UNK>", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Power", " ", "Word", " ", "Shield", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "Power<UNK>Shield", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}]}}, {"inferred_code": "class Power<UNK>Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Buff(ManaChange(-0)))\n        super().use(player, game)\n", "score": -6.062849068248923, "score_history": [-0.0002574920654296875, -0.001811981201171875, -0.000125281119835563, -0.4503607749938965, -0.14857584238052368, -0.00011515259393490851, -9.452846279600635e-05, -4.589557647705078e-05, -1.1920922133867862e-06, -0.000194549560546875, -0.10523223876953125, -0.000652313232421875, -8.392333984375e-05, -2.6702880859375e-05, -1.764288026606664e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002994537353515625, -1.9073486328125e-05, -0.001476287841796875, -2.1457672119140625e-06, -0.0001595004287082702, -0.019854413345456123, -0.0001125335693359375, -0.01968097686767578, -0.13886070251464844, -6.866455078125e-05, -3.814697265625e-06, -9.536731795378728e-07, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.2625551223754883, 0.0, -9.5367431640625e-06, -0.0001678466796875, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-05, -0.0043468475341796875, -1.9073486328125e-06, -0.0007152557373046875, -6.29425048828125e-05, -7.62939453125e-06, -0.0005974769592285156, 0.0, -0.0017518997192382812, -0.00063323974609375, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001506805419921875, 0.0, -3.445148468017578e-05, 0.0, -0.37605106830596924, 0.0, -0.00013363361358642578, 0.0, -2.622604142743512e-06, 0.0, -0.000362396240234375, -5.7220458984375e-06, -5.9604644775390625e-06, -3.3378546504536644e-06, -0.15083026885986328, -4.38690185546875e-05, -0.00012969970703125, -9.5367431640625e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -3.814697265625e-06, -3.933906555175781e-06, -3.814697265625e-06, -6.890296936035156e-05, 0.0, -0.000102996826171875, -1.1920928244535389e-07, -0.01842975616455078, -4.38690185546875e-05, -0.0004177093505859375, 0.0, -0.0002346038818359375, 0.0, -0.0003230571746826172, -5.841255187988281e-06, -0.0009009838104248047, -9.536738616588991e-07, -0.766736626625061, -1.9073486328125e-06, -5.91278076171875e-05, -1.4835309982299805, -0.10544395446777344, -0.0013614891795441508, -0.0005177223356440663, -5.841255187988281e-06, -0.008977890014648438, -0.012984275817871094, -0.0002880096435546875, -0.0004482269287109375, -0.000179290771484375, -3.814697265625e-06, -1.9719773530960083, -1.9073486328125e-06, -0.0012722015380859375, -0.00035858154296875, -0.0004711151123046875, -0.0001277923583984375, -3.814697265625e-06, 0.0, -6.973605195526034e-05, -2.8848648071289062e-05, -4.172325134277344e-06, -3.814697265625e-06, -2.002716064453125e-05, -1.1920928244535389e-07, -0.00011908970191143453, -1.0728830375228426e-06], "choice_history": [97, 285, "Power", "<UNK>", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Power", " ", "Word", " ", "Shield", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 69, 291, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "Draw", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "Power<UNK>Shield", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "add_effect", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": [{"operand": {"n": 0, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ManaChange"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}]}}, {"inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(1), self)\n        super().use(player, game)\n", "score": -6.360104906909719, "score_history": [-0.0002574920654296875, -0.001811981201171875, -0.000125281119835563, -1.0255517959594727, -0.14857584238052368, -0.00011515259393490851, -9.452846279600635e-05, -4.589557647705078e-05, -1.1920922133867862e-06, -0.000194549560546875, -0.10523223876953125, -0.000652313232421875, -8.392333984375e-05, -2.6702880859375e-05, -1.764288026606664e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002994537353515625, -1.9073486328125e-05, -0.001476287841796875, -2.1457672119140625e-06, -0.0001595004287082702, -0.019854413345456123, -0.0001125335693359375, -0.01968097686767578, -0.13886070251464844, -6.866455078125e-05, -3.814697265625e-06, -9.536731795378728e-07, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.2625551223754883, 0.0, -9.5367431640625e-06, -0.0001678466796875, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-05, -0.0043468475341796875, -1.9073486328125e-06, -0.0007152557373046875, -6.29425048828125e-05, -7.62939453125e-06, -0.0005974769592285156, 0.0, -0.0017518997192382812, -0.00063323974609375, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001506805419921875, 0.0, -3.445148468017578e-05, 0.0, -0.37605106830596924, 0.0, -0.00013363361358642578, 0.0, -2.622604142743512e-06, 0.0, -0.000362396240234375, -5.7220458984375e-06, -5.9604644775390625e-06, -3.3378546504536644e-06, -0.15083026885986328, -4.38690185546875e-05, -0.00012969970703125, -9.5367431640625e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -3.814697265625e-06, -3.933906555175781e-06, -3.814697265625e-06, -6.890296936035156e-05, 0.0, -0.000102996826171875, -1.1920928244535389e-07, -0.01842975616455078, -4.38690185546875e-05, -0.0004177093505859375, 0.0, -0.0002346038818359375, 0.0, -0.0003230571746826172, -5.841255187988281e-06, -0.0009009838104248047, -9.536738616588991e-07, -1.2282987833023071, 0.0, -0.0001125335693359375, -0.13723373413085938, -0.000736236572265625, -2.288818359375e-05, 0.0, -7.259634730871767e-05, -2.622600959512056e-06, -0.06939757615327835, -2.0265579223632812e-06, -0.0002694126160349697, -0.00024089295766316354, -0.0001678466796875, -8.392333984375e-05, -0.0011010169982910156, -2.7060508728027344e-05, -0.12072944641113281, -7.82012939453125e-05, -2.4806928634643555, -0.000453948974609375, -0.03411102294921875, 0.0, -0.0030541270971298218, -4.6014782128622755e-05, -1.1920928955078125e-05, -1.9073486328125e-06, -1.2159347534179688e-05, -2.3841855067985307e-07, -0.00010132635361514986, -1.311301275563892e-06], "choice_history": [97, 285, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Power", " ", "Word", " ", "Shield", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "PowerWordShield", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}]}}, {"inferred_code": "class Power<UNK>Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(1), self)\n        wrath = self\n", "score": -6.845928429323486, "score_history": [-0.0002574920654296875, -0.001811981201171875, -0.000125281119835563, -0.4503607749938965, -0.14857584238052368, -0.00011515259393490851, -9.452846279600635e-05, -4.589557647705078e-05, -1.1920922133867862e-06, -0.000194549560546875, -0.10523223876953125, -0.000652313232421875, -8.392333984375e-05, -2.6702880859375e-05, -1.764288026606664e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002994537353515625, -1.9073486328125e-05, -0.001476287841796875, -2.1457672119140625e-06, -0.0001595004287082702, -0.019854413345456123, -0.0001125335693359375, -0.01968097686767578, -0.13886070251464844, -6.866455078125e-05, -3.814697265625e-06, -9.536731795378728e-07, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.2625551223754883, 0.0, -9.5367431640625e-06, -0.0001678466796875, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-05, -0.0043468475341796875, -1.9073486328125e-06, -0.0007152557373046875, -6.29425048828125e-05, -7.62939453125e-06, -0.0005974769592285156, 0.0, -0.0017518997192382812, -0.00063323974609375, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001506805419921875, 0.0, -3.445148468017578e-05, 0.0, -0.37605106830596924, 0.0, -0.00013363361358642578, 0.0, -2.622604142743512e-06, 0.0, -0.000362396240234375, -5.7220458984375e-06, -5.9604644775390625e-06, -3.3378546504536644e-06, -0.15083026885986328, -4.38690185546875e-05, -0.00012969970703125, -9.5367431640625e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -3.814697265625e-06, -3.933906555175781e-06, -3.814697265625e-06, -6.890296936035156e-05, 0.0, -0.000102996826171875, -1.1920928244535389e-07, -0.01842975616455078, -4.38690185546875e-05, -0.0004177093505859375, 0.0, -0.0002346038818359375, 0.0, -0.0003230571746826172, -5.841255187988281e-06, -0.0009009838104248047, -9.536738616588991e-07, -1.2282987833023071, 0.0, -0.0001125335693359375, -0.13723373413085938, -0.000736236572265625, -2.288818359375e-05, 0.0, -7.259634730871767e-05, -2.622600959512056e-06, -0.06939757615327835, -2.0265579223632812e-06, -0.0002694126160349697, -0.00024089295766316354, -0.0001678466796875, -8.392333984375e-05, -0.0011010169982910156, -2.7060508728027344e-05, -2.191605567932129, -5.14984130859375e-05, -2.09808349609375e-05, -0.025604248046875, -7.43865966796875e-05, -1.055323839187622, -1.537799835205078e-05, -0.3601341247558594, -1.9073486328125e-06, -0.0671682357788086, -0.0003088651574216783], "choice_history": [97, 285, "Power", "<UNK>", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Power", " ", "Word", " ", "Shield", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "1", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 50, 174, "wrath", "<EOS>", 21, 174, "self", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "Power<UNK>Shield", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"value": {"id": "self", "_type": "Name"}, "_type": "Assign", "targets": [{"id": "wrath", "_type": "Name"}]}]}}, {"inferred_code": "class Power<UNK>Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(1), self)\n        super().use(player, game)\n", "score": -6.8504410861111396, "score_history": [-0.0002574920654296875, -0.001811981201171875, -0.000125281119835563, -0.4503607749938965, -0.14857584238052368, -0.00011515259393490851, -9.452846279600635e-05, -4.589557647705078e-05, -1.1920922133867862e-06, -0.000194549560546875, -0.10523223876953125, -0.000652313232421875, -8.392333984375e-05, -2.6702880859375e-05, -1.764288026606664e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002994537353515625, -1.9073486328125e-05, -0.001476287841796875, -2.1457672119140625e-06, -0.0001595004287082702, -0.019854413345456123, -0.0001125335693359375, -0.01968097686767578, -0.13886070251464844, -6.866455078125e-05, -3.814697265625e-06, -9.536731795378728e-07, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.2625551223754883, 0.0, -9.5367431640625e-06, -0.0001678466796875, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-05, -0.0043468475341796875, -1.9073486328125e-06, -0.0007152557373046875, -6.29425048828125e-05, -7.62939453125e-06, -0.0005974769592285156, 0.0, -0.0017518997192382812, -0.00063323974609375, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001506805419921875, 0.0, -3.445148468017578e-05, 0.0, -1.4741326570510864, 0.0, -0.0005729198455810547, 0.0, -6.198883056640625e-06, 0.0, -0.0004520416259765625, -3.814697265625e-06, -6.079673767089844e-06, -3.576272320060525e-06, -0.1173105239868164, -5.53131103515625e-05, -0.0001316070556640625, -8.0108642578125e-05, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -3.576278118089249e-07, -3.814697265625e-06, -3.933906555175781e-06, -3.814697265625e-06, -7.462501525878906e-05, 0.0, -0.0001010894775390625, -1.1920928244535389e-07, -0.017461776733398438, -4.38690185546875e-05, -0.0004138946533203125, 0.0, -0.000232696533203125, 0.0, -0.0003192424774169922, -5.841255187988281e-06, -0.0009028911590576172, -9.536738616588991e-07, -1.2229421138763428, 0.0, -0.000110626220703125, -0.13692188262939453, -0.0007343292236328125, -2.288818359375e-05, 0.0, -7.2834751335904e-05, -2.622600959512056e-06, -0.06910098344087601, -2.0265579223632812e-06, -0.0002692934067454189, -0.00024196557933464646, -0.0001659393310546875, -8.392333984375e-05, -0.0011029243469238281, -2.7060508728027344e-05, -0.12375640869140625, -8.20159912109375e-05, -2.4848852157592773, -0.0004367828369140625, -0.03429985046386719, 0.0, -0.0030327884014695883, -4.6014782128622755e-05, -1.1920928955078125e-05, -1.9073486328125e-06, -1.2159347534179688e-05, -2.3841855067985307e-07, -0.00010168395965592936, -1.311301275563892e-06], "choice_history": [97, 285, "Power", "<UNK>", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Power", " ", "Word", " ", "Shield", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "Power<UNK>Shield", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}]}}, {"inferred_code": "class Power<UNK>Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnEnded(), ActionTag(Draw(),\n            PlayerSelector())))\n        draw_player = self.target\n", "score": -7.303968364254807, "score_history": [-0.0002574920654296875, -0.001811981201171875, -0.000125281119835563, -0.4503607749938965, -0.14857584238052368, -0.00011515259393490851, -9.452846279600635e-05, -4.589557647705078e-05, -1.1920922133867862e-06, -0.000194549560546875, -0.10523223876953125, -0.000652313232421875, -8.392333984375e-05, -2.6702880859375e-05, -1.764288026606664e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002994537353515625, -1.9073486328125e-05, -0.001476287841796875, -2.1457672119140625e-06, -0.0001595004287082702, -0.019854413345456123, -0.0001125335693359375, -0.01968097686767578, -0.13886070251464844, -6.866455078125e-05, -3.814697265625e-06, -9.536731795378728e-07, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.2625551223754883, 0.0, -9.5367431640625e-06, -0.0001678466796875, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-05, -0.0043468475341796875, -1.9073486328125e-06, -0.0007152557373046875, -6.29425048828125e-05, -7.62939453125e-06, -0.0005974769592285156, 0.0, -0.0017518997192382812, -0.00063323974609375, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001506805419921875, 0.0, -3.445148468017578e-05, 0.0, -0.37605106830596924, 0.0, -0.00013363361358642578, 0.0, -2.622604142743512e-06, 0.0, -0.000362396240234375, -5.7220458984375e-06, -5.9604644775390625e-06, -3.3378546504536644e-06, -0.15083026885986328, -4.38690185546875e-05, -0.00012969970703125, -9.5367431640625e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -3.814697265625e-06, -3.933906555175781e-06, -3.814697265625e-06, -6.890296936035156e-05, 0.0, -0.000102996826171875, -1.1920928244535389e-07, -0.01842975616455078, -4.38690185546875e-05, -0.0004177093505859375, 0.0, -0.0002346038818359375, 0.0, -0.0003230571746826172, -5.841255187988281e-06, -0.0009009838104248047, -9.536738616588991e-07, -0.766736626625061, -1.9073486328125e-06, -5.91278076171875e-05, -0.3339052200317383, -0.36053466796875, -1.2139075994491577, -0.004418013617396355, -0.00010501786891836673, -0.8341428637504578, -0.0003217458724975586, -0.07638847827911377, -0.0002010862372117117, -0.0001102625101339072, -0.26478099822998047, -8.20159912109375e-05, -9.5367431640625e-06, -0.000152587890625, -1.9073486328125e-06, -1.0947996377944946, 0.0, -0.2285604476928711, -9.1552734375e-05, -0.4018106460571289, -1.9073486328125e-06, -0.012693523429334164, -1.311301275563892e-06, -0.002280354266986251, -1.9073304429184645e-05], "choice_history": [97, 285, "Power", "<UNK>", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Power", " ", "Word", " ", "Shield", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 57, 226, "Turn", "Ended", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>", 102, 142, 346, 50, 174, "draw_player", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "Power<UNK>Shield", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "add_effect", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "Draw", "_type": "Template30", "hole0": "TurnEnded", "hole4": "PlayerSelector"}]}, {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "draw_player", "_type": "Name"}]}]}}, {"inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(1), self)\n        wrath = self\n", "score": -7.421119450289062, "score_history": [-0.0002574920654296875, -0.001811981201171875, -0.000125281119835563, -1.0255517959594727, -0.14857584238052368, -0.00011515259393490851, -9.452846279600635e-05, -4.589557647705078e-05, -1.1920922133867862e-06, -0.000194549560546875, -0.10523223876953125, -0.000652313232421875, -8.392333984375e-05, -2.6702880859375e-05, -1.764288026606664e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002994537353515625, -1.9073486328125e-05, -0.001476287841796875, -2.1457672119140625e-06, -0.0001595004287082702, -0.019854413345456123, -0.0001125335693359375, -0.01968097686767578, -0.13886070251464844, -6.866455078125e-05, -3.814697265625e-06, -9.536731795378728e-07, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.2625551223754883, 0.0, -9.5367431640625e-06, -0.0001678466796875, -9.5367431640625e-06, 0.0, -0.0001010894775390625, -1.9073486328125e-05, -0.0043468475341796875, -1.9073486328125e-06, -0.0007152557373046875, -6.29425048828125e-05, -7.62939453125e-06, -0.0005974769592285156, 0.0, -0.0017518997192382812, -0.00063323974609375, -2.09808349609375e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001506805419921875, 0.0, -3.445148468017578e-05, 0.0, -0.37605106830596924, 0.0, -0.00013363361358642578, 0.0, -2.622604142743512e-06, 0.0, -0.000362396240234375, -5.7220458984375e-06, -5.9604644775390625e-06, -3.3378546504536644e-06, -0.15083026885986328, -4.38690185546875e-05, -0.00012969970703125, -9.5367431640625e-05, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -3.814697265625e-06, -3.933906555175781e-06, -3.814697265625e-06, -6.890296936035156e-05, 0.0, -0.000102996826171875, -1.1920928244535389e-07, -0.01842975616455078, -4.38690185546875e-05, -0.0004177093505859375, 0.0, -0.0002346038818359375, 0.0, -0.0003230571746826172, -5.841255187988281e-06, -0.0009009838104248047, -9.536738616588991e-07, -1.2282987833023071, 0.0, -0.0001125335693359375, -0.13723373413085938, -0.000736236572265625, -2.288818359375e-05, 0.0, -7.259634730871767e-05, -2.622600959512056e-06, -0.06939757615327835, -2.0265579223632812e-06, -0.0002694126160349697, -0.00024089295766316354, -0.0001678466796875, -8.392333984375e-05, -0.0011010169982910156, -2.7060508728027344e-05, -2.191605567932129, -5.14984130859375e-05, -2.09808349609375e-05, -0.025604248046875, -7.43865966796875e-05, -1.055323839187622, -1.537799835205078e-05, -0.3601341247558594, -1.9073486328125e-06, -0.0671682357788086, -0.0003088651574216783], "choice_history": [97, 285, "Power", "Word", "Shield", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Power", " ", "Word", " ", "Shield", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "1", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 50, 174, "wrath", "<EOS>", 21, 174, "self", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "PowerWordShield", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 1}, {"id": "self", "_type": "Name"}]}, {"value": {"id": "self", "_type": "Name"}, "_type": "Assign", "targets": [{"id": "wrath", "_type": "Name"}]}]}}]}
{"gold_code": "class SenjinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "beams": [{"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score": -0.04052022730883209, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -0.0005733569269068539, -3.290128370281309e-05, -5.960462772236497e-07, -5.679205060005188e-06, -5.841255187988281e-06, -3.576278118089249e-07, -1.9073486328125e-06, -0.002132415771484375, -0.0002346038818359375, -9.536738616588991e-07, -2.5153160095214844e-05, -7.152555099310121e-07, 0.0, -4.8875799620873295e-06, 0.0, -0.00099945068359375, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0019779205322265625, 0.0, 0.0, -0.0001621246337890625, -3.24249267578125e-05, -2.9802240533172153e-06, -3.3378546504536644e-06, -5.960462772236497e-07, -1.0728830375228426e-06, -0.033847808837890625, 0.0, -4.57763671875e-05, -3.814697265625e-05, -0.00019085407257080078, 0.0], "choice_history": [97, 283, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 3, "hole2": "taunt"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Sen'jin Shieldmasta", "hole2": "ALL"}], "hole0": "Sen'jinShieldmasta", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, spell_targetable=True)\n", "score": -4.317975676413141, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -0.0005733569269068539, -3.290128370281309e-05, -5.960462772236497e-07, -5.679205060005188e-06, -5.841255187988281e-06, -3.576278118089249e-07, -1.9073486328125e-06, -0.002132415771484375, -0.0002346038818359375, -9.536738616588991e-07, -2.5153160095214844e-05, -7.152555099310121e-07, 0.0, -4.8875799620873295e-06, 0.0, -0.00099945068359375, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0019779205322265625, 0.0, 0.0, -0.0001621246337890625, -3.24249267578125e-05, -2.9802240533172153e-06, -3.3378546504536644e-06, -5.960462772236497e-07, -1.0728830375228426e-06, -3.9907236099243164, 0.0, -0.0004711151123046875, -4.57763671875e-05, -0.32033371925354004, -3.814697265625e-06], "choice_history": [97, 283, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "5", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 3, "hole2": "spell_targetable"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Sen'jin Shieldmasta", "hole2": "ALL"}], "hole0": "Sen'jinShieldmasta", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, divine_shield=True)\n", "score": -4.43890253340777, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -0.0005733569269068539, -3.290128370281309e-05, -5.960462772236497e-07, -5.679205060005188e-06, -5.841255187988281e-06, -3.576278118089249e-07, -1.9073486328125e-06, -0.002132415771484375, -0.0002346038818359375, -9.536738616588991e-07, -2.5153160095214844e-05, -7.152555099310121e-07, 0.0, -4.8875799620873295e-06, 0.0, -0.00099945068359375, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0019779205322265625, 0.0, 0.0, -0.0001621246337890625, -3.24249267578125e-05, -2.9802240533172153e-06, -3.3378546504536644e-06, -5.960462772236497e-07, -1.0728830375228426e-06, -4.431255340576172, 0.0, -0.000843048095703125, -4.00543212890625e-05, -0.00036644935607910156, 0.0], "choice_history": [97, 283, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "5", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 3, "hole2": "divine_shield"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Sen'jin Shieldmasta", "hole2": "ALL"}], "hole0": "Sen'jinShieldmasta", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, spell_targetable=True)\n", "score": -5.301898634787165, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -0.0005733569269068539, -3.290128370281309e-05, -5.960462772236497e-07, -5.679205060005188e-06, -5.841255187988281e-06, -3.576278118089249e-07, -1.9073486328125e-06, -0.002132415771484375, -0.0002346038818359375, -9.536738616588991e-07, -2.5153160095214844e-05, -7.152555099310121e-07, 0.0, -4.8875799620873295e-06, 0.0, -0.00099945068359375, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0019779205322265625, 0.0, 0.0, -0.0001621246337890625, -3.24249267578125e-05, -2.9802240533172153e-06, -3.3378546504536644e-06, -5.960462772236497e-07, -1.0728830375228426e-06, -3.9907236099243164, 0.0, -0.0004711151123046875, -4.57763671875e-05, -1.3042585849761963, -1.9073486328125e-06], "choice_history": [97, 283, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "5", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 3, "hole2": "spell_targetable"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Sen'jin Shieldmasta", "hole2": "ALL"}], "hole0": "Sen'jinShieldmasta", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, p):\n        return Minion(3, 5, taunt=True)\n", "score": -6.91576842101685, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -0.0005733569269068539, -3.290128370281309e-05, -5.960462772236497e-07, -5.679205060005188e-06, -5.841255187988281e-06, -3.576278118089249e-07, -1.9073486328125e-06, -0.002132415771484375, -0.0002346038818359375, -9.536738616588991e-07, -2.5153160095214844e-05, -7.152555099310121e-07, 0.0, -4.8875799620873295e-06, 0.0, -0.00099945068359375, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -6.897271156311035, -1.9073486328125e-06, -1.9073486328125e-06, -0.000339508056640625, -5.91278076171875e-05, -8.106186214718036e-06, -1.5497195136049413e-06, -9.536738616588991e-07, -2.3841855067985307e-07, -0.013628244400024414, 0.0, -3.0517578125e-05, -3.62396240234375e-05, -0.00017178058624267578, 0.0], "choice_history": [97, 283, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 3, "hole2": "taunt"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Sen'jin Shieldmasta", "hole2": "ALL"}], "hole0": "Sen'jinShieldmasta", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score": -6.993354356566947, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -0.0005733569269068539, -3.290128370281309e-05, -5.960462772236497e-07, -5.679205060005188e-06, -5.841255187988281e-06, -3.576278118089249e-07, -1.9073486328125e-06, -6.838970184326172, -0.00026702880859375, -1.1920928244535389e-07, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -2.9802276912960224e-06, 0.0, -0.0033245086669921875, -1.9073486328125e-06, -0.00029158586403355, -4.768370445162873e-07, -0.0016422271728515625, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0001010894775390625, 0.0, -0.11375713348388672, 0.0, -1.1444091796875e-05, 0.0, -0.002197265625, 0.0, -1.9073486328125e-06, -0.000392913818359375, -4.00543212890625e-05, -5.841232450620737e-06, -2.145764938177308e-06, -2.622600959512056e-06, -3.576278118089249e-07, -0.03133833408355713, 0.0, -3.24249267578125e-05, -3.4332275390625e-05, -0.0002537965774536133, 0.0], "choice_history": [97, 283, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 3, "hole2": "taunt"}], "hole2": [{"hole2": "FREE", "hole0": "Sen'jin Shieldmasta", "_type": "Template26", "hole3": "minion_type", "hole1": 4, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}}], "hole0": "Sen'jinShieldmasta", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, windfury=True)\n", "score": -7.170833146925531, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -0.0005733569269068539, -3.290128370281309e-05, -5.960462772236497e-07, -5.679205060005188e-06, -5.841255187988281e-06, -3.576278118089249e-07, -1.9073486328125e-06, -0.002132415771484375, -0.0002346038818359375, -9.536738616588991e-07, -2.5153160095214844e-05, -7.152555099310121e-07, 0.0, -4.8875799620873295e-06, 0.0, -0.00099945068359375, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0019779205322265625, 0.0, 0.0, -0.0001621246337890625, -3.24249267578125e-05, -2.9802240533172153e-06, -3.3378546504536644e-06, -5.960462772236497e-07, -1.0728830375228426e-06, -7.1632585525512695, 0.0, -0.000213623046875, -4.00543212890625e-05, -0.0009232759475708008, 0.0], "choice_history": [97, 283, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "5", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 3, "hole2": "windfury"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Sen'jin Shieldmasta", "hole2": "ALL"}], "hole0": "Sen'jinShieldmasta", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, _):\n        return Minion(3, 5, taunt=True)\n", "score": -7.472564256517757, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -0.0005733569269068539, -3.290128370281309e-05, -5.960462772236497e-07, -5.679205060005188e-06, -5.841255187988281e-06, -3.576278118089249e-07, -1.9073486328125e-06, -0.002132415771484375, -0.0002346038818359375, -9.536738616588991e-07, -2.5153160095214844e-05, -7.152555099310121e-07, 0.0, -4.8875799620873295e-06, 0.0, -0.00099945068359375, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.457287788391113, -5.7220458984375e-06, -3.814697265625e-06, -0.000308990478515625, -5.340576171875e-05, -7.51014476918499e-06, -8.344646857949556e-07, -9.536738616588991e-07, -2.3841855067985307e-07, -0.010437369346618652, 0.0, -3.0517578125e-05, -4.00543212890625e-05, -0.00016987323760986328, 0.0], "choice_history": [97, 283, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "_", "<EOS>", 358, 130, 287, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 3, "hole2": "taunt"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Sen'jin Shieldmasta", "hole2": "ALL"}], "hole0": "Sen'jinShieldmasta", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "_"}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score": -7.897977388256265, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -0.0005733569269068539, -3.290128370281309e-05, -5.960462772236497e-07, -5.679205060005188e-06, -5.841255187988281e-06, -3.576278118089249e-07, -1.9073486328125e-06, -0.002132415771484375, -0.0002346038818359375, -9.536738616588991e-07, -2.5153160095214844e-05, -7.152555099310121e-07, 0.0, -4.8875799620873295e-06, 0.0, -7.85386848449707, -7.62939453125e-06, -0.00031280517578125, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.001117706298828125, 0.0, 0.0, -0.000118255615234375, -4.38690185546875e-05, -3.695475697895745e-06, -2.7418097943154862e-06, -5.960462772236497e-07, -8.344646857949556e-07, -0.03917992115020752, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -0.00019848346710205078, 0.0], "choice_history": [97, 283, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 3, "hole2": "taunt"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Sen'jin Shieldmasta", "hole2": "WARRIOR"}], "hole0": "Sen'jinShieldmasta", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.FREE,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score": -8.171426093925902, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -0.0005733569269068539, -3.290128370281309e-05, -5.960462772236497e-07, -5.679205060005188e-06, -5.841255187988281e-06, -3.576278118089249e-07, -1.9073486328125e-06, -0.002132415771484375, -0.0002346038818359375, -9.536738616588991e-07, -2.5153160095214844e-05, -7.152555099310121e-07, 0.0, -4.8875799620873295e-06, 0.0, -8.137017250061035, -1.33514404296875e-05, -0.0007897615432739258, 0.0, -5.7220458984375e-06, 0.0, -0.00075531005859375, 0.0, 0.0, -0.0001068115234375, -3.4332275390625e-05, -4.172308308625361e-06, -2.264974000354414e-06, -7.152555099310121e-07, -1.1920922133867862e-06, -0.02938389778137207, 0.0, -5.340576171875e-05, -4.00543212890625e-05, -0.00017940998077392578, 0.0], "choice_history": [97, 283, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 3, "hole2": "taunt"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Sen'jin Shieldmasta", "hole2": "FREE"}], "hole0": "Sen'jinShieldmasta", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Shieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score": -8.174852685506437, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -8.134905815124512, -3.290128370281309e-05, -5.960462772236497e-07, -5.679205060005188e-06, -5.841255187988281e-06, -3.576278118089249e-07, -1.9073486328125e-06, -0.002132415771484375, -0.0002346038818359375, -9.536738616588991e-07, -2.5153160095214844e-05, -7.152555099310121e-07, 0.0, -4.8875799620873295e-06, 0.0, -0.00099945068359375, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0019779205322265625, 0.0, 0.0, -0.0001621246337890625, -3.24249267578125e-05, -2.9802240533172153e-06, -3.3378546504536644e-06, -5.960462772236497e-07, -1.0728830375228426e-06, -0.033847808837890625, 0.0, -4.57763671875e-05, -3.814697265625e-05, -0.00019085407257080078, 0.0], "choice_history": [97, 283, "<UNK>", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 3, "hole2": "taunt"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Sen'jin Shieldmasta", "hole2": "ALL"}], "hole0": "<UNK>Shieldmasta", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ForceShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score": -8.470159704765962, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -8.352716445922852, -0.07256486266851425, -1.9073468138230965e-06, -5.516223609447479e-06, -3.933906555175781e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -0.003925323486328125, -0.0001773834228515625, -5.245195097813848e-06, -3.266334533691406e-05, -1.311301275563892e-06, 0.0, -4.768371127283899e-06, 0.0, -0.001220703125, 0.0, -0.0001964569091796875, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0021114349365234375, 0.0, 0.0, -0.0001811981201171875, -3.24249267578125e-05, -2.8610154458874604e-06, -3.4570634852570947e-06, -5.960462772236497e-07, -1.0728830375228426e-06, -0.03665125370025635, 0.0, -4.76837158203125e-05, -3.814697265625e-05, -0.00020229816436767578, 0.0], "choice_history": [97, 283, "Force", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 3, "hole2": "taunt"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Sen'jin Shieldmasta", "hole2": "ALL"}], "hole0": "ForceShieldmasta", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, Turn=True)\n", "score": -8.515694177504145, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -0.0005733569269068539, -3.290128370281309e-05, -5.960462772236497e-07, -5.679205060005188e-06, -5.841255187988281e-06, -3.576278118089249e-07, -1.9073486328125e-06, -0.002132415771484375, -0.0002346038818359375, -9.536738616588991e-07, -2.5153160095214844e-05, -7.152555099310121e-07, 0.0, -4.8875799620873295e-06, 0.0, -0.00099945068359375, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0019779205322265625, 0.0, 0.0, -0.0001621246337890625, -3.24249267578125e-05, -2.9802240533172153e-06, -3.3378546504536644e-06, -5.960462772236497e-07, -1.0728830375228426e-06, -8.280957221984863, -0.21812820434570312, -0.006514549255371094, -0.0001201629638671875, -0.0035763978958129883, 0.0], "choice_history": [97, 283, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "5", "<EOS>", "Turn", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 3, "hole2": "Turn"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Sen'jin Shieldmasta", "hole2": "ALL"}], "hole0": "Sen'jinShieldmasta", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, c=True)\n", "score": -8.57346109187182, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -0.0005733569269068539, -3.290128370281309e-05, -5.960462772236497e-07, -5.679205060005188e-06, -5.841255187988281e-06, -3.576278118089249e-07, -1.9073486328125e-06, -0.002132415771484375, -0.0002346038818359375, -9.536738616588991e-07, -2.5153160095214844e-05, -7.152555099310121e-07, 0.0, -4.8875799620873295e-06, 0.0, -0.00099945068359375, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0019779205322265625, 0.0, 0.0, -0.0001621246337890625, -3.24249267578125e-05, -2.9802240533172153e-06, -3.3378546504536644e-06, -5.960462772236497e-07, -1.0728830375228426e-06, -8.561318397521973, -5.7220458984375e-06, -0.0020313262939453125, -6.4849853515625e-05, -0.0036431550979614258, 0.0], "choice_history": [97, 283, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "3", "<EOS>", "5", "<EOS>", "c", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 3, "hole2": "c"}], "hole2": [{"hole1": 4, "hole3": "FREE", "_type": "Template34", "hole0": "Sen'jin Shieldmasta", "hole2": "ALL"}], "hole0": "Sen'jinShieldmasta", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.FREE,\n            CARD_RARITY.FREE, True)\n\n    def create_minion(self, p):\n        return Minion(3, 5, taunt=True)\n", "score": -8.787710224431734, "score_history": [-5.7220458984375e-06, -1.33514404296875e-05, -0.0005733569269068539, -3.290128370281309e-05, -5.960462772236497e-07, -5.679205060005188e-06, -5.841255187988281e-06, -3.576278118089249e-07, -1.9073486328125e-06, -7.117095947265625, -0.7723169326782227, -6.103515625e-05, -1.9073486328125e-05, -1.8835040464182384e-05, -3.814697265625e-06, -0.0005195140838623047, 0.0, -0.0025653839111328125, -8.0108642578125e-05, -4.38690185546875e-05, -5.245195097813848e-06, -3.063678741455078e-05, -2.5629758965806104e-05, -9.655952453613281e-06, -3.814697265625e-06, -7.62939453125e-06, -4.625244764611125e-05, -2.86102294921875e-05, -0.000110626220703125, -2.09808349609375e-05, -7.62939453125e-06, -5.91278076171875e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.8069009780883789, -1.9073486328125e-06, -0.0004482269287109375, -5.340576171875e-05, -2.6702880859375e-05, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.021486282348632812, -1.1444091796875e-05, -0.010059356689453125, -1.9073486328125e-05, -0.000118255615234375, -1.52587890625e-05, -4.971027374267578e-05, 0.0, -0.04749107360839844, -1.9073486328125e-06, -1.9073486328125e-06, -0.0009307861328125, -0.0003185272216796875, -2.6702447939896956e-05, -1.1920928244535389e-07, -1.0132738680113107e-05, -1.1920928244535389e-07, -0.005476474761962891, 0.0, -7.62939453125e-05, -6.103515625e-05, -0.00016033649444580078, 0.0], "choice_history": [97, 283, "Sen'jin", "Shieldmasta", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Sen'jin", " ", "Shieldmasta", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "FREE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 3, "hole2": "taunt"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Sen'jin Shieldmasta", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Sen'jinShieldmasta", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}]}
{"gold_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "beams": [{"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score": -2.1375680750009565, "score_history": [-0.001369476318359375, -9.72747802734375e-05, -5.7220458984375e-06, -7.62939453125e-05, -9.918212890625e-05, -1.3589766240329482e-05, -3.933898824470816e-06, -1.311301275563892e-06, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -1.4064658898860216e-05, -6.532669067382812e-05, -3.862379162455909e-05, -9.34600830078125e-05, -1.2516727447509766, -0.037095069885253906, -2.7418097943154862e-06, -0.000118255615234375, -7.152555099310121e-07, 0.0, -5.006789251638111e-06, 0.0, -0.020948410034179688, 0.0, -0.7749309539794922, -0.0002613067626953125, -0.0007305145263671875, -9.5367431640625e-06, -0.03544044494628906, -3.0517578125e-05, -2.288818359375e-05, -1.52587890625e-05, -0.0016100406646728516, 0.0, -0.002288341522216797, 0.0, -0.005727143958210945, -5.960462772236497e-07, -8.773605804890394e-05, -2.861018856492592e-06, -7.62939453125e-05, -0.0005855560302734375, -8.0108642578125e-05, -0.0024527311325073242, -5.94836674281396e-05, -1.71661376953125e-05, -1.33514404296875e-05, -0.0011378511553630233, -0.00023567094467580318], "choice_history": [96, 173, 358, 105, 152, "Sinister", "Strike", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 116, 196, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template12", "hole0": "Sinister Strike", "hole2": "ROGUE"}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "hero", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}]}], "name": "SinisterStrike", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score": -2.7903892644263877, "score_history": [-0.001369476318359375, -9.72747802734375e-05, -5.7220458984375e-06, -7.62939453125e-05, -9.918212890625e-05, -1.3589766240329482e-05, -3.933898824470816e-06, -1.311301275563892e-06, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -1.4064658898860216e-05, -6.532669067382812e-05, -3.862379162455909e-05, -9.34600830078125e-05, -0.8089237213134766, -0.00113677978515625, -1.0728830375228426e-06, -2.9802322387695312e-05, -2.3841855067985307e-07, 0.0, -1.1920928244535389e-07, 0.0, -0.017110586166381836, 0.0, -1.7582063674926758, -0.0009822845458984375, -0.0010318756103515625, -1.9073486328125e-06, -0.005457988008856773, -3.457069396972656e-05, -0.0015752953477203846, -8.225420970120467e-06, -0.0006160736083984375, -0.023293495178222656, -0.0014171600341796875, -0.0019055727170780301, -3.6954811548639555e-06, -6.4849853515625e-05, -1.33514404296875e-05, -0.003204941749572754, -5.960462772236497e-07, -0.052657127380371094, -2.47955322265625e-05, -0.008646011352539062, 0.0, -0.043002963066101074, -1.1920928244535389e-07, -6.628030678257346e-05, -3.576272320060525e-06, -0.0009726306307129562, 0.0, -0.0001068115234375, -0.0009021759033203125, -0.0001049041748046875, -0.007357954978942871, -9.775113539944869e-06, -9.5367431640625e-06, -3.4332275390625e-05, -0.00164520600810647, -0.0001288640487473458, -0.004123687744140625, -0.0005779266357421875, -0.0072422027587890625, -0.0017299652099609375, -0.0004367828369140625, 0.0, -8.7738037109375e-05, 0.0, -0.023985981941223145, 0.0, -0.003551133442670107, -1.1920928244535389e-07, -0.0006015505641698837, 0.0, -9.72747802734375e-05, -0.000667572021484375, -1.52587890625e-05, -0.0029969215393066406, -2.0861407392658293e-05, -3.4332275390625e-05, -9.34600830078125e-05, -0.001105781993828714, -0.000418300973251462], "choice_history": [96, 173, 358, 105, 152, "Sinister", "Strike", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Sinister Strike", "hole2": "ROGUE"}, {"hole7": "damage", "hole5": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}], "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole3": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole1": "use", "hole4": "damage", "hole6": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "hero", "_type": "Attribute"}, "hole8": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}]}], "name": "SinisterStrike", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score": -2.823843774489511, "score_history": [-0.001369476318359375, -9.72747802734375e-05, -5.7220458984375e-06, -7.62939453125e-05, -9.918212890625e-05, -1.3589766240329482e-05, -3.933898824470816e-06, -1.311301275563892e-06, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -1.4064658898860216e-05, -6.532669067382812e-05, -3.862379162455909e-05, -9.34600830078125e-05, -1.2516727447509766, -0.037095069885253906, -2.7418097943154862e-06, -0.000118255615234375, -7.152555099310121e-07, 0.0, -5.006789251638111e-06, 0.0, -0.020948410034179688, 0.0, -1.2765817642211914, -0.002262115478515625, -0.000629425048828125, 0.0, -0.002567334333434701, -3.24249267578125e-05, -0.0007974394829943776, -3.8146954466355965e-06, -0.0002803802490234375, -0.05444145202636719, -0.0012645721435546875, -0.0011308857938274741, -2.50339189733495e-06, -2.09808349609375e-05, -1.52587890625e-05, -0.0011261701583862305, -4.768370445162873e-07, -0.07270526885986328, -7.62939453125e-06, -0.0068645477294921875, 0.0, -0.0323411226272583, -1.1920928244535389e-07, -6.0081427363911644e-05, -2.7418097943154862e-06, -0.0011241055326536298, 0.0, -9.72747802734375e-05, -0.0007610321044921875, -0.000125885009765625, -0.006659030914306641, -1.2874520507466514e-05, -1.33514404296875e-05, -6.103515625e-05, -0.0013506383402273059, -0.00012683750537689775, -0.00492095947265625, -0.0007534027099609375, -0.004787445068359375, -0.0017681121826171875, -0.0004901885986328125, 0.0, -8.58306884765625e-05, 0.0, -0.025846242904663086, 0.0, -0.003741685999557376, -2.3841855067985307e-07, -0.0007919136551208794, 0.0, -0.000179290771484375, -0.0005035400390625, -1.71661376953125e-05, -0.0032804012298583984, -2.2411095415009186e-05, -3.814697265625e-05, -0.000110626220703125, -0.0009169544791802764, -0.000366921944078058], "choice_history": [96, 173, 358, 105, 152, "Sinister", "Strike", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 116, 196, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template12", "hole0": "Sinister Strike", "hole2": "ROGUE"}, {"hole7": "damage", "hole5": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}], "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole3": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole1": "use", "hole4": "damage", "hole6": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "hero", "_type": "Attribute"}, "hole8": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}]}], "name": "SinisterStrike", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score": -3.05558361661749, "score_history": [-0.001369476318359375, -9.72747802734375e-05, -5.7220458984375e-06, -7.62939453125e-05, -9.918212890625e-05, -1.3589766240329482e-05, -3.933898824470816e-06, -1.311301275563892e-06, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -1.4064658898860216e-05, -6.532669067382812e-05, -3.862379162455909e-05, -9.34600830078125e-05, -0.8089237213134766, -0.00113677978515625, -1.0728830375228426e-06, -2.9802322387695312e-05, -2.3841855067985307e-07, 0.0, -1.1920928244535389e-07, 0.0, -0.017110586166381836, 0.0, -2.1861724853515625, -0.0009593963623046875, -0.0002155303955078125, -1.33514404296875e-05, -0.025241851806640625, -4.57763671875e-05, -3.62396240234375e-05, -4.1961669921875e-05, -0.0030672550201416016, 0.0, -0.002173781394958496, 0.0, -0.0033148834481835365, -3.576278118089249e-07, -0.00012063520989613608, -2.3841830625315197e-06, -7.43865966796875e-05, -0.000858306884765625, -6.866455078125e-05, -0.002640247344970703, -3.45700973412022e-05, -1.52587890625e-05, -1.1444091796875e-05, -0.0011730191763490438, -0.0001907320984173566], "choice_history": [96, 173, 358, 105, 152, "Sinister", "Strike", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Sinister Strike", "hole2": "ROGUE"}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "hero", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}]}], "name": "SinisterStrike", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n    targets = copy.copy(game.other_player.minions)\n", "score": -3.239388225305298, "score_history": [-0.001369476318359375, -9.72747802734375e-05, -5.7220458984375e-06, -7.62939453125e-05, -9.918212890625e-05, -1.3589766240329482e-05, -3.933898824470816e-06, -1.311301275563892e-06, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -1.4064658898860216e-05, -6.532669067382812e-05, -3.862379162455909e-05, -9.34600830078125e-05, -0.8089237213134766, -0.00113677978515625, -1.0728830375228426e-06, -2.9802322387695312e-05, -2.3841855067985307e-07, 0.0, -1.1920928244535389e-07, 0.0, -0.017110586166381836, 0.0, -0.7630252838134766, -5.91278076171875e-05, -4.9591064453125e-05, -0.02048492431640625, -1.9073486328125e-05, -1.3536806106567383, -1.9073486328125e-06, -0.07187175750732422, -3.814697265625e-05, -8.58306884765625e-05, -1.9073486328125e-06, -0.033451080322265625, -3.814697265625e-06, -0.0010732412338256836, -2.0265579223632812e-06, -0.0002574920654296875, 0.0, -7.62939453125e-06, -0.0020275115966796875, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.03173828125, -9.5367431640625e-06, -5.936622619628906e-05, 0.0, -0.002725839614868164, 0.0, -0.12955355644226074, 0.0], "choice_history": [96, 173, 358, 105, 152, "Sinister", "Strike", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Sinister Strike", "hole2": "ROGUE"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}], "name": "SinisterStrike", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, FREE=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score": -3.3750473460235497, "score_history": [-0.001369476318359375, -9.72747802734375e-05, -5.7220458984375e-06, -7.62939453125e-05, -9.918212890625e-05, -1.3589766240329482e-05, -3.933898824470816e-06, -1.311301275563892e-06, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -1.4064658898860216e-05, -6.532669067382812e-05, -3.862379162455909e-05, -9.34600830078125e-05, -3.273148536682129, -0.005657196044921875, -1.1920928244535389e-07, -0.00011456012725830078, -1.1920928244535389e-07, -1.9073486328125e-06, -6.675696113234153e-06, 0.0, -0.008481979370117188, -1.9073486328125e-06, -0.028658032417297363, -1.9073486328125e-06, -0.00360107421875, -3.814697265625e-06, -0.000499725341796875, -4.38690185546875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0031911134719848633, -1.9073486328125e-06, -0.0004329681396484375, -9.5367431640625e-06, -0.011714216321706772, -9.536738616588991e-07, -0.0001163482666015625, -8.0108642578125e-05, -7.62939453125e-05, -5.7220458984375e-06, -0.014514923095703125, -7.62939453125e-06, -9.72747802734375e-05, -9.5367431640625e-06, -0.005551815032958984, 0.0, -0.011020183563232422, 0.0, -0.0008023339323699474, -3.576278118089249e-07, -0.00021670368732884526, -5.006777428206988e-06, -5.53131103515625e-05, -0.0013818740844726562, -8.96453857421875e-05, -0.002640247344970703, -5.793403761344962e-05, -1.71661376953125e-05, -2.47955322265625e-05, -0.0005340538336895406, -0.0002230352838523686], "choice_history": [96, 173, 358, 105, 152, "Sinister", "Strike", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole2": "ROGUE", "hole0": "Sinister Strike", "_type": "Template8", "hole3": "FREE", "hole1": 1, "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "hero", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}]}], "name": "SinisterStrike", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.append(game.other_player.hero)\n", "score": -3.9719072213735274, "score_history": [-0.001369476318359375, -9.72747802734375e-05, -5.7220458984375e-06, -7.62939453125e-05, -9.918212890625e-05, -1.3589766240329482e-05, -3.933898824470816e-06, -1.311301275563892e-06, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -1.4064658898860216e-05, -6.532669067382812e-05, -3.862379162455909e-05, -9.34600830078125e-05, -0.8089237213134766, -0.00113677978515625, -1.0728830375228426e-06, -2.9802322387695312e-05, -2.3841855067985307e-07, 0.0, -1.1920928244535389e-07, 0.0, -0.017110586166381836, 0.0, -1.634500503540039, -0.000125885009765625, -0.0012252049054950476, 0.0, -0.0008411407470703125, -0.00055694580078125, -0.0023975372314453125, -0.002685546875, -0.0009903907775878906, -1.1920928244535389e-07, -4.57763671875e-05, -6.258478970266879e-05, -4.768370445162873e-07, -0.00031280517578125, -1.7046912034857087e-05, -1.2397729733493179e-05, -0.03746986389160156, -1.9073486328125e-06, -0.0011425018310546875, -0.0001659393310546875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -1.3709068298339844e-05, -5.7220458984375e-06, -4.1246399632655084e-05, 0.0, -3.8266152841970325e-05, 0.0, -0.00019108079141005874, -2.3841855067985307e-07, -0.9874734878540039, -2.47955322265625e-05, -0.000850677490234375, -0.0001068115234375, -1.71661376953125e-05, -0.022484416142106056, -2.0265579223632812e-06, -0.0018939971923828125, -2.86102294921875e-05, -8.0108642578125e-05, -7.62939453125e-06, -0.06076622009277344, 0.0, -0.0013533830642700195, -1.1920928244535389e-07, -0.00019466876983642578, 0.0, -5.7220458984375e-06, -0.00179290771484375, -6.4849853515625e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.04006004333496094, -3.0517578125e-05, -0.00022149085998535156, 0.0, -0.0016769170761108398, 0.0, -0.0973663330078125, 0.0, -0.007549285888671875, -8.392333984375e-05, -0.13054275512695312, -6.103515625e-05, -0.0009373423526994884, 0.0, -0.03626503795385361, -1.549711487314198e-05, -0.000308990478515625, -0.016668319702148438, -0.0011005401611328125, -2.288818359375e-05, -7.62939453125e-06, -0.04142189025878906, 0.0, -9.167194366455078e-05, 0.0, -0.00752103328704834, 0.0, -0.0007970224833115935, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Sinister", "Strike", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "append", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Sinister Strike", "hole2": "ROGUE"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "append", "_type": "Template77", "hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "hero", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "SinisterStrike", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score": -4.302426005720001, "score_history": [-0.001369476318359375, -9.72747802734375e-05, -5.7220458984375e-06, -7.62939453125e-05, -9.918212890625e-05, -1.3589766240329482e-05, -3.933898824470816e-06, -1.311301275563892e-06, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -1.4064658898860216e-05, -6.532669067382812e-05, -3.862379162455909e-05, -9.34600830078125e-05, -3.9804368019104004, -0.0003032684326171875, -3.576278118089249e-07, -0.00012993812561035156, -1.1920928244535389e-07, -3.814697265625e-06, -9.775161743164062e-06, 0.0, -0.2730799913406372, 0.0, -4.708766573457979e-05, 0.0, -0.000133514404296875, -0.000179290771484375, -2.6702880859375e-05, -0.00021398067474365234, -1.9073486328125e-06, -0.0004405975341796875, -0.00057220458984375, -1.71661376953125e-05, -5.7220458984375e-06, -0.0005397796630859375, -5.7220458984375e-06, -0.0005475282669067383, -3.933906555175781e-06, -2.872943878173828e-05, -1.9073486328125e-06, -0.004659273196011782, -8.344646857949556e-07, -0.000102996826171875, -2.288818359375e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.025205612182617188, -5.7220458984375e-06, -6.4849853515625e-05, -9.5367431640625e-06, -0.0022363662719726562, 0.0, -0.005495190620422363, 0.0, -0.0009028523345477879, -3.576278118089249e-07, -0.00023207897902466357, -4.0531076592742465e-06, -8.96453857421875e-05, -0.00127410888671875, -0.0002002716064453125, -0.002468109130859375, -4.053033626405522e-05, -2.09808349609375e-05, -2.86102294921875e-05, -0.0004447674727998674, -0.0002472336054779589], "choice_history": [96, 173, 358, 105, 152, "Sinister", "Strike", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ROGUE", "hole0": "Sinister Strike", "_type": "Template14", "hole3": "FREE", "hole1": 1}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "hero", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}]}], "name": "SinisterStrike", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n        game.other_player.damage()\n", "score": -4.336898119905207, "score_history": [-0.001369476318359375, -9.72747802734375e-05, -5.7220458984375e-06, -7.62939453125e-05, -9.918212890625e-05, -1.3589766240329482e-05, -3.933898824470816e-06, -1.311301275563892e-06, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -1.4064658898860216e-05, -6.532669067382812e-05, -3.862379162455909e-05, -9.34600830078125e-05, -0.8089237213134766, -0.00113677978515625, -1.0728830375228426e-06, -2.9802322387695312e-05, -2.3841855067985307e-07, 0.0, -1.1920928244535389e-07, 0.0, -0.017110586166381836, 0.0, -1.634500503540039, -0.000125885009765625, -0.0012252049054950476, 0.0, -0.0008411407470703125, -0.00055694580078125, -0.0023975372314453125, -0.002685546875, -0.0009903907775878906, -1.1920928244535389e-07, -4.57763671875e-05, -6.258478970266879e-05, -4.768370445162873e-07, -0.00031280517578125, -1.7046912034857087e-05, -1.2397729733493179e-05, -0.03746986389160156, -1.9073486328125e-06, -0.0011425018310546875, -0.0001659393310546875, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -1.3709068298339844e-05, -5.7220458984375e-06, -4.1246399632655084e-05, 0.0, -3.8266152841970325e-05, 0.0, -0.00019108079141005874, -2.3841855067985307e-07, -0.6300325393676758, -8.7738037109375e-05, -0.0022411346435546875, -0.0003299713134765625, -0.004795074462890625, -5.7220458984375e-06, -8.392333984375e-05, 0.0, -0.0006337165832519531, -1.9073486328125e-06, -0.00563967227935791, 0.0, -0.0007338032010011375, -1.1920928244535389e-07, -0.00012599650654010475, -1.1920928244535389e-07, -5.340576171875e-05, -0.0017261505126953125, -0.000110626220703125, -0.0031372278463095427, -2.4080030925688334e-05, -3.814697265625e-06, -4.38690185546875e-05, -0.0019801855087280273, -0.00015890570648480207, -0.2982444763183594, -0.0003204345703125, -0.0060367584228515625, -3.0517578125e-05, -0.46946144104003906, -1.52587890625e-05, -0.08194351196289062, -5.7220458984375e-06, -0.025298237800598145, -1.1920928244535389e-07, -0.008094802498817444, 0.0, -0.2835221290588379, 0.0], "choice_history": [96, 173, 358, 105, 152, "Sinister", "Strike", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 347, 75, 298, "3", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "damage", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Sinister Strike", "hole2": "ROGUE"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "hero", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 3}, {"id": "self", "_type": "Name"}]}, {"value": {"hole1": "damage", "_type": "Template76", "hole0": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "SinisterStrike", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n    find_spell_target = copy.copy(game.other_player.minions)\n", "score": -5.08124458574072, "score_history": [-0.001369476318359375, -9.72747802734375e-05, -5.7220458984375e-06, -7.62939453125e-05, -9.918212890625e-05, -1.3589766240329482e-05, -3.933898824470816e-06, -1.311301275563892e-06, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -1.4064658898860216e-05, -6.532669067382812e-05, -3.862379162455909e-05, -9.34600830078125e-05, -0.8089237213134766, -0.00113677978515625, -1.0728830375228426e-06, -2.9802322387695312e-05, -2.3841855067985307e-07, 0.0, -1.1920928244535389e-07, 0.0, -0.017110586166381836, 0.0, -0.7630252838134766, -5.91278076171875e-05, -4.9591064453125e-05, -0.02048492431640625, -1.9073486328125e-05, -1.1757678985595703, -3.576278118089249e-07, -1.0986032485961914, -3.0517578125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -0.5927257537841797, -1.9073486328125e-06, -0.0036513805389404297, -1.1920928244535389e-07, -0.0002689361572265625, 0.0, -7.62939453125e-06, -0.0067768096923828125, -4.1961669921875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.07759857177734375, -9.5367431640625e-06, -5.352497100830078e-05, 0.0, -0.0020411014556884766, 0.0, -0.5108609199523926, 0.0], "choice_history": [96, 173, 358, 105, 152, "Sinister", "Strike", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 102, 142, 346, 50, 174, "find_spell_target", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Sinister Strike", "hole2": "ROGUE"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "find_spell_target", "_type": "Name"}]}], "name": "SinisterStrike", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n    targets = copy.copy(game.other_player.hero)\n", "score": -5.279947040307739, "score_history": [-0.001369476318359375, -9.72747802734375e-05, -5.7220458984375e-06, -7.62939453125e-05, -9.918212890625e-05, -1.3589766240329482e-05, -3.933898824470816e-06, -1.311301275563892e-06, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -1.4064658898860216e-05, -6.532669067382812e-05, -3.862379162455909e-05, -9.34600830078125e-05, -0.8089237213134766, -0.00113677978515625, -1.0728830375228426e-06, -2.9802322387695312e-05, -2.3841855067985307e-07, 0.0, -1.1920928244535389e-07, 0.0, -0.017110586166381836, 0.0, -0.7630252838134766, -5.91278076171875e-05, -4.9591064453125e-05, -0.02048492431640625, -1.9073486328125e-05, -1.3536806106567383, -1.9073486328125e-06, -0.07187175750732422, -3.814697265625e-05, -8.58306884765625e-05, -1.9073486328125e-06, -0.033451080322265625, -3.814697265625e-06, -0.0010732412338256836, -2.0265579223632812e-06, -0.0002574920654296875, 0.0, -7.62939453125e-06, -0.0020275115966796875, -3.62396240234375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.03173828125, -9.5367431640625e-06, -5.936622619628906e-05, 0.0, -0.002725839614868164, 0.0, -2.170112371444702, 0.0], "choice_history": [96, 173, 358, 105, 152, "Sinister", "Strike", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Sinister Strike", "hole2": "ROGUE"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "hero", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}], "name": "SinisterStrike", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n    find_spell_target = hearthbreaker.targeting.<UNK>(player.game, lambda x:\n        True)\n", "score": -5.6171209647543705, "score_history": [-0.001369476318359375, -9.72747802734375e-05, -5.7220458984375e-06, -7.62939453125e-05, -9.918212890625e-05, -1.3589766240329482e-05, -3.933898824470816e-06, -1.311301275563892e-06, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -1.4064658898860216e-05, -6.532669067382812e-05, -3.862379162455909e-05, -9.34600830078125e-05, -0.8089237213134766, -0.00113677978515625, -1.0728830375228426e-06, -2.9802322387695312e-05, -2.3841855067985307e-07, 0.0, -1.1920928244535389e-07, 0.0, -0.017110586166381836, 0.0, -0.7630252838134766, -5.91278076171875e-05, -4.9591064453125e-05, -0.02048492431640625, -1.9073486328125e-05, -1.1757678985595703, -3.576278118089249e-07, -1.0986032485961914, -3.0517578125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -0.8059253692626953, -1.9073486328125e-06, -6.103515625e-05, -1.71661376953125e-05, -0.0015999078750610352, 0.0, -0.00057220458984375, 0.0, -0.2843726873397827, 0.0, -0.01094818115234375, -0.0024871826171875, -5.7220458984375e-06, -0.000125885009765625, -1.9073486328125e-06, -5.161762237548828e-05, 0.0, -0.008122801780700684, 0.0, -5.14984130859375e-05, -0.000400543212890625, -0.0008144378662109375, -0.000736236572265625, -0.012088586576282978, -0.0008149401983246207, -0.5965499877929688, -0.0005664825439453125, -0.0034356575924903154, -0.0001778444420779124], "choice_history": [96, 173, 358, 105, 152, "Sinister", "Strike", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 102, 142, 346, 50, 174, "find_spell_target", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 347, 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Sinister Strike", "hole2": "ROGUE"}, {"value": {"func": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "<UNK>", "_type": "Attribute"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, {"body": {"value": true, "_type": "NameConstant"}, "args": {"_type": "Template49", "hole0": "x"}, "_type": "Lambda"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "find_spell_target", "_type": "Name"}]}], "name": "SinisterStrike", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n    find_spell_target = game.other_player.hero[:]\n", "score": -6.017988940406006, "score_history": [-0.001369476318359375, -9.72747802734375e-05, -5.7220458984375e-06, -7.62939453125e-05, -9.918212890625e-05, -1.3589766240329482e-05, -3.933898824470816e-06, -1.311301275563892e-06, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -1.4064658898860216e-05, -6.532669067382812e-05, -3.862379162455909e-05, -9.34600830078125e-05, -0.8089237213134766, -0.00113677978515625, -1.0728830375228426e-06, -2.9802322387695312e-05, -2.3841855067985307e-07, 0.0, -1.1920928244535389e-07, 0.0, -0.017110586166381836, 0.0, -0.7630252838134766, -5.91278076171875e-05, -4.9591064453125e-05, -0.02048492431640625, -1.9073486328125e-05, -1.1757678985595703, -3.576278118089249e-07, -1.4387121200561523, -0.011353492736816406, -4.1961669921875e-05, -8.0108642578125e-05, -0.000942230224609375, -1.9073486328125e-06, -0.00266265869140625, -4.1961669921875e-05, -0.017740488052368164, 0.0, -0.0023450851440429688, 0.0, -0.07527890056371689, 0.0, -1.4269747734069824, -0.2532958984375], "choice_history": [96, 173, 358, 105, 152, "Sinister", "Strike", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 102, 142, 346, 50, 174, "find_spell_target", "<EOS>", 24, 185, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 101, 182], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Sinister Strike", "hole2": "ROGUE"}, {"value": {"value": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "hero", "_type": "Attribute"}, "slice": {"_type": "Slice"}, "_type": "Subscript"}, "_type": "Assign", "targets": [{"id": "find_spell_target", "_type": "Name"}]}], "name": "SinisterStrike", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "super().__init__('SinisterStrike', 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON\n    )\n", "score": -13.152358495309613, "score_history": [-0.001369476318359375, -9.72747802734375e-05, -5.7220458984375e-06, -10.608488082885742, -2.5079307556152344, -0.0017645227489992976, -0.020581839606165886, -0.00020454221521504223, -0.00220811297185719, -1.0728830375228426e-06, -0.009707093238830566, 0.0], "choice_history": [96, 173, 358, 127, 230, "Sinister", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>"], "model_output": {"body": [{"hole1": 1, "_type": "Template31", "hole0": "SinisterStrike", "hole2": "ROGUE"}], "_type": "Module"}}, {"inferred_code": "break\n", "score": -16.202537536621094, "score_history": [-0.001369476318359375, -9.72747802734375e-05, -5.7220458984375e-06, -16.201065063476562], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}}]}
{"gold_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "beams": [{"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Discard(0), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -2.933559597964738, "score_history": [-0.011826515197753906, -3.62396240234375e-05, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-05, -0.04894335940480232, -0.001682866713963449, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -4.0525628719478846e-06, -2.491451959940605e-05, -1.1086463018727954e-05, -1.1444091796875e-05, -0.004271507263183594, -5.14984130859375e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.233287447481416e-05, 0.0, -0.9090255498886108, -1.9073486328125e-06, -0.04817485809326172, 0.0, -0.00013625620340462774, -1.1920928244535389e-07, -3.24249267578125e-05, 0.0, -3.063678741455078e-05, -2.0265579223632812e-06, -0.2471609115600586, -1.9073486328125e-06, -9.167194366455078e-05, -3.24249267578125e-05, -0.730158805847168, -0.2911262512207031, -0.001402363646775484, -0.23983854055404663, -0.00368499755859375, -0.028489112854003906, -2.47955322265625e-05, -0.01904578134417534, -9.655734174884856e-05, -0.3466472625732422, -0.0011348724365234375, -2.9802263270539697e-06, -8.344646857949556e-07, -0.0001758335711201653, 0.0], "choice_history": [96, 173, 358, 105, 152, "Succubus", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Succubus", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 28, 261, "Discard", "<EOS>", 346, 52, 179, "Discard", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Succubus", "_type": "Template4", "hole3": "RARE", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"n": 0, "_type": "Num"}], "_type": "Template42", "hole0": "Discard"}}, {"hole1": 3, "_type": "Template19", "hole0": 4}], "name": "Succubus", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.MECH, battlecry=Battlecry(\n            Discard(0), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -3.469660844410214, "score_history": [-0.011826515197753906, -3.62396240234375e-05, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-05, -0.04894335940480232, -0.001682866713963449, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -4.0525628719478846e-06, -2.491451959940605e-05, -1.1086463018727954e-05, -1.1444091796875e-05, -0.004271507263183594, -5.14984130859375e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.233287447481416e-05, 0.0, -1.2630943059921265, -1.9073486328125e-06, -0.4692802429199219, 0.0, -5.984305971651338e-05, -2.0265579223632812e-06, -2.86102294921875e-05, 0.0, -2.491474151611328e-05, -2.0265579223632812e-06, -0.18242263793945312, -1.9073486328125e-06, -9.918212890625e-05, -3.62396240234375e-05, -0.5382881164550781, -0.3032264709472656, -0.00140247936360538, -0.24567319452762604, -0.003925323486328125, -0.028031349182128906, -2.47955322265625e-05, -0.018812203779816628, -9.739175584400073e-05, -0.3467731475830078, -0.001132965087890625, -2.9802263270539697e-06, -8.344646857949556e-07, -0.0001758335711201653, 0.0], "choice_history": [96, 173, 358, 105, 152, "Succubus", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Succubus", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 28, 261, "Discard", "<EOS>", 346, 52, 179, "Discard", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "HUNTER", "hole0": "Succubus", "_type": "Template4", "hole3": "RARE", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"n": 0, "_type": "Num"}], "_type": "Template42", "hole0": "Discard"}}, {"hole1": 3, "_type": "Template19", "hole0": 4}], "name": "Succubus", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(4)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -3.6931955014765308, "score_history": [-0.011826515197753906, -3.62396240234375e-05, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-05, -0.04894335940480232, -0.001682866713963449, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -4.0525628719478846e-06, -2.491451959940605e-05, -1.1086463018727954e-05, -1.1444091796875e-05, -0.004271507263183594, -5.14984130859375e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.233287447481416e-05, 0.0, -0.9090255498886108, -1.9073486328125e-06, -0.04817485809326172, 0.0, -0.00013625620340462774, -1.1920928244535389e-07, -3.24249267578125e-05, 0.0, -3.063678741455078e-05, -2.0265579223632812e-06, -0.2471609115600586, -1.9073486328125e-06, -9.167194366455078e-05, -3.24249267578125e-05, -1.5459213256835938, -0.00141143798828125, -0.0008792877197265625, 0.0, -0.0034848384093493223, -1.1920909855689388e-05, -0.008296966552734375, -0.379364013671875, -0.0033245086669921875, -0.15373265743255615, -7.152555099310121e-07, -0.00020432472229003906, -0.0038022994995117188, -0.000554288737475872, -0.07604552805423737, -2.0265579223632812e-06, -0.1952362060546875, -0.04433917999267578, -0.0038872957229614258, -0.0003495216369628906, -2.3841855067985307e-07, -0.0005092620849609375, -3.814697265625e-05, -3.2186455882765586e-06, -2.741813204920618e-06, -6.29414789727889e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Succubus", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Succubus", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 68, 288, "Give", "<EOS>", "Change", "Health", "<EOS>", "4", "<EOS>", 59, 232, "User", "Picker", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Succubus", "_type": "Template4", "hole3": "RARE", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": "ChangeHealth", "_type": "Template51", "hole0": "Give", "hole2": 4}, {"_type": "Template33", "hole0": "UserPicker"}], "_type": "Call"}}, {"hole1": 3, "_type": "Template19", "hole0": 4}], "name": "Succubus", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Count(CardSelector())))),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -3.698089835697367, "score_history": [-0.011826515197753906, -3.62396240234375e-05, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-05, -0.04894335940480232, -0.001682866713963449, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -4.0525628719478846e-06, -2.491451959940605e-05, -1.1086463018727954e-05, -1.1444091796875e-05, -0.004271507263183594, -5.14984130859375e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.233287447481416e-05, 0.0, -0.9090255498886108, -1.9073486328125e-06, -0.04817485809326172, 0.0, -0.00013625620340462774, -1.1920928244535389e-07, -3.24249267578125e-05, 0.0, -3.063678741455078e-05, -2.0265579223632812e-06, -0.2471609115600586, -1.9073486328125e-06, -9.167194366455078e-05, -3.24249267578125e-05, -1.2574939727783203, -0.1688680648803711, -0.01808619499206543, -2.312633478140924e-05, -0.000133514404296875, -0.10724067687988281, -6.67572021484375e-05, -0.00018990039825439453, -0.00880897045135498, -7.772143726469949e-05, -0.0001392364501953125, -0.8582038879394531, -5.91278076171875e-05, -0.0008553210645914078, -0.00022337734117172658, -0.000798555847723037, -0.0002156465343432501, -9.536738616588991e-07, -0.004534474574029446, -2.3841830625315197e-06, -3.814697265625e-06, -4.57763671875e-05, -0.0001277923583984375, -1.9073468138230965e-06, -3.3378546504536644e-06, -0.00015473310486413538, 0.0], "choice_history": [96, 173, 358, 105, 152, "Succubus", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Succubus", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 70, 292, "Count", "<EOS>", "Card", "Selector", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Succubus", "_type": "Template4", "hole3": "RARE", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"hole1": [{"hole1": "CardSelector", "_type": "Template55", "hole0": "Count"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 3, "_type": "Template19", "hole0": 4}], "name": "Succubus", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Discard(0), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -3.8546306121432963, "score_history": [-0.011826515197753906, -3.62396240234375e-05, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-05, -0.04894335940480232, -0.001682866713963449, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -4.0525628719478846e-06, -2.491451959940605e-05, -1.1086463018727954e-05, -1.1444091796875e-05, -0.004271507263183594, -5.14984130859375e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.233287447481416e-05, 0.0, -1.818703055381775, -1.9073486328125e-06, -0.3876609802246094, 0.0, -0.002241849899291992, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.300739288330078e-05, -2.0265579223632812e-06, -0.1662302017211914, -1.9073486328125e-06, -0.0001087188720703125, -4.1961669921875e-05, -0.44573307037353516, -0.3125419616699219, -0.0013610137393698096, -0.25083136558532715, -0.004177093505859375, -0.02613067626953125, -2.288818359375e-05, -0.018694715574383736, -9.786855662241578e-05, -0.3516397476196289, -0.001117706298828125, -2.861017719624215e-06, -8.344646857949556e-07, -0.00017750250117387623, 0.0], "choice_history": [96, 173, 358, 105, 152, "Succubus", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Succubus", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 28, 261, "Discard", "<EOS>", 346, 52, 179, "Discard", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARLOCK", "hole0": "Succubus", "_type": "Template4", "hole3": "FREE", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"n": 0, "_type": "Num"}], "_type": "Template42", "hole0": "Discard"}}, {"hole1": 3, "_type": "Template19", "hole0": 4}], "name": "Succubus", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .FREE, minion_type=MINION_TYPE.MECH, battlecry=Battlecry(\n            Discard(0), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.101816815382904, "score_history": [-0.011826515197753906, -3.62396240234375e-05, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-05, -0.04894335940480232, -0.001682866713963449, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -4.0525628719478846e-06, -2.491451959940605e-05, -1.1086463018727954e-05, -1.1444091796875e-05, -0.004271507263183594, -5.14984130859375e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.233287447481416e-05, 0.0, -1.2630943059921265, -1.9073486328125e-06, -1.0425691604614258, 0.0, -0.003519892692565918, -2.0265579223632812e-06, -4.76837158203125e-05, 0.0, -2.6941299438476562e-05, -2.0265579223632812e-06, -0.19759273529052734, 0.0, -9.5367431640625e-05, -3.4332275390625e-05, -0.5764379501342773, -0.30734920501708984, -0.0013632848858833313, -0.24157275259494781, -0.0039958953857421875, -0.0284881591796875, -2.47955322265625e-05, -0.018838360905647278, -9.631893772166222e-05, -0.3483152389526367, -0.0011272430419921875, -2.8610174922505394e-06, -8.344646857949556e-07, -0.000177621710463427, 0.0], "choice_history": [96, 173, 358, 105, 152, "Succubus", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Succubus", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 28, 261, "Discard", "<EOS>", 346, 52, 179, "Discard", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "HUNTER", "hole0": "Succubus", "_type": "Template4", "hole3": "FREE", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"n": 0, "_type": "Num"}], "_type": "Template42", "hole0": "Discard"}}, {"hole1": 3, "_type": "Template19", "hole0": 4}], "name": "Succubus", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(DiscardDiscard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3, taunt=True)\n", "score": -4.2265102377431205, "score_history": [-0.011826515197753906, -3.62396240234375e-05, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-05, -0.04894335940480232, -0.001682866713963449, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -4.0525628719478846e-06, -2.491451959940605e-05, -1.1086463018727954e-05, -1.1444091796875e-05, -0.004271507263183594, -5.14984130859375e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.233287447481416e-05, 0.0, -0.9090255498886108, -1.9073486328125e-06, -0.04817485809326172, 0.0, -0.00013625620340462774, -1.1920928244535389e-07, -3.24249267578125e-05, 0.0, -3.063678741455078e-05, -2.0265579223632812e-06, -0.2471609115600586, -1.9073486328125e-06, -9.167194366455078e-05, -3.24249267578125e-05, -0.730158805847168, -1.5560359954833984, -0.009530299343168736, -0.5058677196502686, -0.1175706535577774, -0.019182205200195312, -0.000385284423828125, -7.152553962441743e-07, -0.00020527408923953772, -0.0008105039014481008, -1.7881377516459906e-06, -0.014209270477294922, -5.1617618737509474e-05, -0.0006761550903320312, -4.9591064453125e-05, -4.374980926513672e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Succubus", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Succubus", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 28, 260, "Discard", "Discard", "<EOS>", 121, 212, "4", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Succubus", "_type": "Template4", "hole3": "RARE", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"_type": "Template42", "hole0": "DiscardDiscard"}}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template17", "hole0": 4, "hole2": "taunt"}], "name": "Succubus", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(DiscardDiscard(0), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.33057856075424, "score_history": [-0.011826515197753906, -3.62396240234375e-05, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-05, -0.04894335940480232, -0.001682866713963449, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -4.0525628719478846e-06, -2.491451959940605e-05, -1.1086463018727954e-05, -1.1444091796875e-05, -0.004271507263183594, -5.14984130859375e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.233287447481416e-05, 0.0, -0.9090255498886108, -1.9073486328125e-06, -0.04817485809326172, 0.0, -0.00013625620340462774, -1.1920928244535389e-07, -3.24249267578125e-05, 0.0, -3.063678741455078e-05, -2.0265579223632812e-06, -0.2471609115600586, -1.9073486328125e-06, -9.167194366455078e-05, -3.24249267578125e-05, -0.730158805847168, -0.2911262512207031, -0.001402363646775484, -1.6025843620300293, -0.03204865753650665, -0.0475006103515625, -0.018011093139648438, -4.00543212890625e-05, -0.04069744423031807, -6.782907439628616e-05, -0.2934894561767578, -0.001583099365234375, -3.93389564123936e-06, -7.152555099310121e-07, -0.0001332758693024516, 0.0], "choice_history": [96, 173, 358, 105, 152, "Succubus", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Succubus", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 28, 261, "Discard", "Discard", "<EOS>", 346, 52, 179, "Discard", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Succubus", "_type": "Template4", "hole3": "RARE", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"n": 0, "_type": "Num"}], "_type": "Template42", "hole0": "DiscardDiscard"}}, {"hole1": 3, "_type": "Template19", "hole0": 4}], "name": "Succubus", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.MECH, battlecry=Battlecry(Give(\n            ChangeHealth(4)), MinionSelector(IsType(MINION_TYPE.MECH),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.619564790831959, "score_history": [-0.011826515197753906, -3.62396240234375e-05, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-05, -0.04894335940480232, -0.001682866713963449, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -4.0525628719478846e-06, -2.491451959940605e-05, -1.1086463018727954e-05, -1.1444091796875e-05, -0.004271507263183594, -5.14984130859375e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.233287447481416e-05, 0.0, -1.2630943059921265, -1.9073486328125e-06, -0.4692802429199219, 0.0, -5.984305971651338e-05, -2.0265579223632812e-06, -2.86102294921875e-05, 0.0, -2.491474151611328e-05, -2.0265579223632812e-06, -0.18242263793945312, -1.9073486328125e-06, -9.918212890625e-05, -3.62396240234375e-05, -1.7894477844238281, -0.0015163421630859375, -0.0009517669677734375, 0.0, -0.0036512550432235003, -1.1682492186082527e-05, -0.008134841918945312, -0.3628120422363281, -0.0033349990844726562, -0.14282739162445068, -8.344646857949556e-07, -0.00020635128021240234, -0.0037374496459960938, -0.0005644158809445798, -0.07502400875091553, -2.0265579223632812e-06, -0.19594287872314453, -0.04446697235107422, -0.0038663148880004883, -0.0003495216369628906, -2.3841855067985307e-07, -0.000514984130859375, -3.814697265625e-05, -3.2186455882765586e-06, -2.741813204920618e-06, -6.282226968323812e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Succubus", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Succubus", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 68, 288, "Give", "<EOS>", "Change", "Health", "<EOS>", "4", "<EOS>", 59, 232, "User", "Picker", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "HUNTER", "hole0": "Succubus", "_type": "Template4", "hole3": "RARE", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": "ChangeHealth", "_type": "Template51", "hole0": "Give", "hole2": 4}, {"_type": "Template33", "hole0": "UserPicker"}], "_type": "Call"}}, {"hole1": 3, "_type": "Template19", "hole0": 4}], "name": "Succubus", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.MECH, battlecry=Battlecry(Give(\n            Buff(ChangeHealth(Count(CardSelector())))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.681975116663125, "score_history": [-0.011826515197753906, -3.62396240234375e-05, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-05, -0.04894335940480232, -0.001682866713963449, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -4.0525628719478846e-06, -2.491451959940605e-05, -1.1086463018727954e-05, -1.1444091796875e-05, -0.004271507263183594, -5.14984130859375e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.233287447481416e-05, 0.0, -1.2630943059921265, -1.9073486328125e-06, -0.4692802429199219, 0.0, -5.984305971651338e-05, -2.0265579223632812e-06, -2.86102294921875e-05, 0.0, -2.491474151611328e-05, -2.0265579223632812e-06, -0.18242263793945312, -1.9073486328125e-06, -9.918212890625e-05, -3.62396240234375e-05, -1.509429931640625, -0.19011402130126953, -0.013542890548706055, -2.276871418871451e-05, -0.000133514404296875, -0.10808086395263672, -6.866455078125e-05, -0.00018036365509033203, -0.009074091911315918, -7.450303382938728e-05, -0.0001430511474609375, -0.862095832824707, -5.7220458984375e-05, -0.0008486452279612422, -0.00022421123867388815, -0.0008096341043710709, -0.0002163617464248091, -9.536738616588991e-07, -0.004420154262334108, -2.3841830625315197e-06, -3.814697265625e-06, -4.57763671875e-05, -0.0001316070556640625, -1.9073468138230965e-06, -3.4570634852570947e-06, -0.00015473310486413538, 0.0], "choice_history": [96, 173, 358, 105, 152, "Succubus", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Succubus", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 70, 292, "Count", "<EOS>", "Card", "Selector", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "HUNTER", "hole0": "Succubus", "_type": "Template4", "hole3": "RARE", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"hole1": [{"hole1": "CardSelector", "_type": "Template55", "hole0": "Count"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 3, "_type": "Template19", "hole0": 4}], "name": "Succubus", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Count(MinionSelector(IsType(\n            MINION_TYPE.BEAST)))))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.9775901468178105, "score_history": [-0.011826515197753906, -3.62396240234375e-05, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-05, -0.04894335940480232, -0.001682866713963449, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -4.0525628719478846e-06, -2.491451959940605e-05, -1.1086463018727954e-05, -1.1444091796875e-05, -0.004271507263183594, -5.14984130859375e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.233287447481416e-05, 0.0, -0.9090255498886108, -1.9073486328125e-06, -0.04817485809326172, 0.0, -0.00013625620340462774, -1.1920928244535389e-07, -3.24249267578125e-05, 0.0, -3.063678741455078e-05, -2.0265579223632812e-06, -0.2471609115600586, -1.9073486328125e-06, -9.167194366455078e-05, -3.24249267578125e-05, -1.2574939727783203, -0.1688680648803711, -0.01808619499206543, -2.312633478140924e-05, -0.000133514404296875, -0.10724067687988281, -6.67572021484375e-05, -0.00018990039825439453, -0.00880897045135498, -7.772143726469949e-05, -0.0001392364501953125, -0.5849409103393555, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -1.3500686883926392, -6.31808916295995e-06, -2.47955322265625e-05, -0.07615375518798828, -0.0010051727294921875, -0.00035774707794189453, -0.0003597736358642578, 0.0, -2.6702880859375e-05, -0.0022602081298828125, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000125885009765625, -9.5367431640625e-06, -0.019195556640625, 0.0, -0.08129513263702393, -1.9073486328125e-06, 0.0, -0.028405189514160156, -0.0003814697265625, -4.6491513785440475e-06, -3.576278118089249e-07, -6.186905375216156e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Succubus", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Succubus", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Succubus", "_type": "Template4", "hole3": "RARE", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 3, "_type": "Template19", "hole0": 4}], "name": "Succubus", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry([IncreaseWeaponAttack(1), IncreaseDurability()],\n            WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -5.370664507330233, "score_history": [-0.011826515197753906, -3.62396240234375e-05, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-05, -0.04894335940480232, -0.001682866713963449, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -4.0525628719478846e-06, -2.491451959940605e-05, -1.1086463018727954e-05, -1.1444091796875e-05, -0.004271507263183594, -5.14984130859375e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.233287447481416e-05, 0.0, -0.9090255498886108, -1.9073486328125e-06, -0.04817485809326172, 0.0, -0.00013625620340462774, -1.1920928244535389e-07, -3.24249267578125e-05, 0.0, -3.063678741455078e-05, -2.0265579223632812e-06, -0.2471609115600586, -1.9073486328125e-06, -9.167194366455078e-05, -3.24249267578125e-05, -1.5459213256835938, -0.00141143798828125, -0.0008792877197265625, 0.0, -0.0034848384093493223, -1.1920909855689388e-05, -0.008296966552734375, -1.5447473526000977, -0.0002498626708984375, -0.04147911071777344, -0.23114585876464844, -0.0017375946044921875, -0.09787151962518692, -0.16163882613182068, -0.00048828125, -1.33514404296875e-05, -0.0051610469818115234, -2.3841855067985307e-07, -0.09637069702148438, -0.0003414154052734375, -0.07597392797470093, -0.08434494584798813, -5.7220458984375e-06, -0.1383047103881836, -2.288818359375e-05, -0.058756232261657715, -5.841255187988281e-06, 0.0, -0.0001544952392578125, -5.53131103515625e-05, -6.079655122448457e-06, -1.1920928244535389e-07, -5.269046960165724e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Succubus", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Succubus", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 48, 169, 347, 84, 315, "Increase", "Weapon", "Attack", "<EOS>", "1", "<EOS>", 83, 314, "Increase", "Durability", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Succubus", "_type": "Template4", "hole3": "RARE", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"elts": [{"hole1": 1, "_type": "Template74", "hole0": "IncreaseWeaponAttack"}, {"_type": "Template73_expr_seq", "hole0": "IncreaseDurability"}], "_type": "List"}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Call"}}, {"hole1": 3, "_type": "Template19", "hole0": 4}], "name": "Succubus", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Attribute('attack',\n            WeaponSelector(EnemyPlayer()))))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -6.157343540147586, "score_history": [-0.011826515197753906, -3.62396240234375e-05, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-05, -0.04894335940480232, -0.001682866713963449, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -4.0525628719478846e-06, -2.491451959940605e-05, -1.1086463018727954e-05, -1.1444091796875e-05, -0.004271507263183594, -5.14984130859375e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.233287447481416e-05, 0.0, -0.9090255498886108, -1.9073486328125e-06, -0.04817485809326172, 0.0, -0.00013625620340462774, -1.1920928244535389e-07, -3.24249267578125e-05, 0.0, -3.063678741455078e-05, -2.0265579223632812e-06, -0.2471609115600586, -1.9073486328125e-06, -9.167194366455078e-05, -3.24249267578125e-05, -1.2574939727783203, -0.1688680648803711, -0.01808619499206543, -2.312633478140924e-05, -0.000133514404296875, -0.10724067687988281, -6.67572021484375e-05, -0.00018990039825439453, -0.00880897045135498, -7.772143726469949e-05, -0.0001392364501953125, -0.5849409103393555, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -0.3945575952529907, -4.017353057861328e-05, -0.00061798095703125, -0.008922576904296875, -9.72747802734375e-05, -0.17425310611724854, 0.0, -0.1445751190185547, -0.018373489379882812, -1.0836421251296997, -2.872943878173828e-05, -2.3841855067985307e-07, -0.7982866764068604, -0.0046596527099609375, -1.728534698486328e-05, -0.11113545298576355, -7.867794920457527e-06, 0.0, -9.1552734375e-05, -0.0001220703125, -2.264974000354414e-06, -3.4570634852570947e-06, -8.249266829807311e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Succubus", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Succubus", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 70, 292, "Weapon", "Selector", "<EOS>", "Enemy", "Player", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Succubus", "_type": "Template4", "hole3": "RARE", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"hole1": "EnemyPlayer", "_type": "Template55", "hole0": "WeaponSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 3, "_type": "Template19", "hole0": 4}], "name": "Succubus", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Attribute('attack',\n            MinionSelector(card()))))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -6.180072936993604, "score_history": [-0.011826515197753906, -3.62396240234375e-05, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-05, -0.04894335940480232, -0.001682866713963449, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -4.0525628719478846e-06, -2.491451959940605e-05, -1.1086463018727954e-05, -1.1444091796875e-05, -0.004271507263183594, -5.14984130859375e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.233287447481416e-05, 0.0, -0.9090255498886108, -1.9073486328125e-06, -0.04817485809326172, 0.0, -0.00013625620340462774, -1.1920928244535389e-07, -3.24249267578125e-05, 0.0, -3.063678741455078e-05, -2.0265579223632812e-06, -0.2471609115600586, -1.9073486328125e-06, -9.167194366455078e-05, -3.24249267578125e-05, -1.2574939727783203, -0.1688680648803711, -0.01808619499206543, -2.312633478140924e-05, -0.000133514404296875, -0.10724067687988281, -6.67572021484375e-05, -0.00018990039825439453, -0.00880897045135498, -7.772143726469949e-05, -0.0001392364501953125, -0.5849409103393555, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -0.3945575952529907, -4.017353057861328e-05, -0.00061798095703125, -0.008922576904296875, -9.72747802734375e-05, -0.17425310611724854, 0.0, -0.1445751190185547, -0.018373489379882812, -0.5000309944152832, -4.768371127283899e-06, -2.0265558760002023e-06, -1.344256043434143, -5.2213657909305766e-05, -0.17608711123466492, -5.960446742392378e-06, 0.0, -9.918212890625e-05, -0.000194549560546875, -1.6689286894688848e-06, -2.9802276912960224e-06, -7.176386861829087e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Succubus", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Succubus", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "card", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Succubus", "_type": "Template4", "hole3": "RARE", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"hole1": "card", "_type": "Template55", "hole0": "MinionSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 3, "_type": "Template19", "hole0": 4}], "name": "Succubus", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Attribute('attack',\n            MinionSelector(Discard()))))), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -6.770575390725291, "score_history": [-0.011826515197753906, -3.62396240234375e-05, -1.33514404296875e-05, -4.00543212890625e-05, -3.814697265625e-05, -0.04894335940480232, -0.001682866713963449, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -4.0525628719478846e-06, -2.491451959940605e-05, -1.1086463018727954e-05, -1.1444091796875e-05, -0.004271507263183594, -5.14984130859375e-05, -1.9073486328125e-06, -5.841255187988281e-06, -5.233287447481416e-05, 0.0, -0.9090255498886108, -1.9073486328125e-06, -0.04817485809326172, 0.0, -0.00013625620340462774, -1.1920928244535389e-07, -3.24249267578125e-05, 0.0, -3.063678741455078e-05, -2.0265579223632812e-06, -0.2471609115600586, -1.9073486328125e-06, -9.167194366455078e-05, -3.24249267578125e-05, -1.2574939727783203, -0.1688680648803711, -0.01808619499206543, -2.312633478140924e-05, -0.000133514404296875, -0.10724067687988281, -6.67572021484375e-05, -0.00018990039825439453, -0.00880897045135498, -7.772143726469949e-05, -0.0001392364501953125, -0.5849409103393555, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -0.3945575952529907, -4.017353057861328e-05, -0.00061798095703125, -0.008922576904296875, -9.72747802734375e-05, -0.17425310611724854, 0.0, -0.1445751190185547, -0.018373489379882812, -0.5000309944152832, -4.768371127283899e-06, -2.0265558760002023e-06, -1.140789270401001, -0.0003990361001342535, -0.9697756767272949, -8.7738037109375e-05, 0.0, -7.05718994140625e-05, -8.7738037109375e-05, -1.5497195136049413e-06, -8.344646857949556e-07, -6.151183333713561e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Succubus", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Succubus", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Discard", "<EOS>", "Hero", "Selector", "<EOS>", 122, 213, "4", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Succubus", "_type": "Template4", "hole3": "RARE", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"hole1": "Discard", "_type": "Template55", "hole0": "MinionSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "HeroSelector"}}, {"hole1": 3, "_type": "Template19", "hole0": 4}], "name": "Succubus", "_type": "ClassDef"}], "_type": "Module"}}]}
{"gold_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "beams": [{"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score": -0.04717597490838443, "score_history": [-6.29425048828125e-05, -2.86102294921875e-05, -0.028378188610076904, -0.0008207766804844141, -1.07287787614041e-05, -8.52346420288086e-06, -3.445148468017578e-05, -3.576277322281385e-06, -1.9073486328125e-06, -0.00421142578125, -8.96453857421875e-05, -4.565628114505671e-05, -3.2782554626464844e-05, -2.3841855067985307e-07, 0.0, -0.0013173504266887903, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000118255615234375, 0.0, -8.20159912109375e-05, 0.0, -2.09808349609375e-05, -0.011606216430664062, -1.52587890625e-05, -5.3404430218506604e-05, -2.3841855067985307e-07, -0.00021944873151369393, 0.0], "choice_history": [97, 283, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "7", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 7}], "hole2": [{"hole1": 7, "_type": "Template31", "hole0": "War Golem", "hole2": "ALL"}], "hole0": "WarGolem", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Golem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score": -4.382219226422819, "score_history": [-6.29425048828125e-05, -2.86102294921875e-05, -4.363421440124512, -0.0008207766804844141, -1.07287787614041e-05, -8.52346420288086e-06, -3.445148468017578e-05, -3.576277322281385e-06, -1.9073486328125e-06, -0.00421142578125, -8.96453857421875e-05, -4.565628114505671e-05, -3.2782554626464844e-05, -2.3841855067985307e-07, 0.0, -0.0013173504266887903, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000118255615234375, 0.0, -8.20159912109375e-05, 0.0, -2.09808349609375e-05, -0.011606216430664062, -1.52587890625e-05, -5.3404430218506604e-05, -2.3841855067985307e-07, -0.00021944873151369393, 0.0], "choice_history": [97, 283, "<UNK>", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "7", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 7}], "hole2": [{"hole1": 7, "_type": "Template31", "hole0": "War Golem", "hole2": "ALL"}], "hole0": "<UNK>Golem", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ForceTankGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score": -4.978772009305828, "score_history": [-6.29425048828125e-05, -2.86102294921875e-05, -4.327888488769531, -0.425054669380188, -0.02093457244336605, -2.145764938177308e-06, -5.9545040130615234e-05, -4.00543212890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -0.19301700592041016, -0.0001354217529296875, -7.498011109419167e-05, -3.0875205993652344e-05, -2.3841855067985307e-07, 0.0, -0.0012380583211779594, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00011444091796875, 0.0, -9.5367431640625e-05, 0.0, -2.6702880859375e-05, -0.009555816650390625, -1.71661376953125e-05, -8.36815670481883e-05, -2.3841855067985307e-07, -0.00029143679421395063, 0.0], "choice_history": [97, 283, "Force", "Tank", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "7", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 7}], "hole2": [{"hole1": 7, "_type": "Template31", "hole0": "War Golem", "hole2": "ALL"}], "hole0": "ForceTankGolem", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, taunt=True)\n", "score": -5.287481773312692, "score_history": [-6.29425048828125e-05, -2.86102294921875e-05, -0.028378188610076904, -0.0008207766804844141, -1.07287787614041e-05, -8.52346420288086e-06, -3.445148468017578e-05, -3.576277322281385e-06, -1.9073486328125e-06, -0.00421142578125, -8.96453857421875e-05, -4.565628114505671e-05, -3.2782554626464844e-05, -2.3841855067985307e-07, 0.0, -0.0013173504266887903, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000118255615234375, 0.0, -8.20159912109375e-05, 0.0, -2.09808349609375e-05, -4.4790191650390625, -4.00543212890625e-05, -4.768371127283899e-06, -3.814689989667386e-06, -7.61748815421015e-05, 0.0, -0.7728197574615479, 0.0, -0.0001888275146484375, -9.5367431640625e-06, -3.826618194580078e-05, 0.0], "choice_history": [97, 283, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "7", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 7, "hole2": "taunt"}], "hole2": [{"hole1": 7, "_type": "Template31", "hole0": "War Golem", "hole2": "ALL"}], "hole0": "WarGolem", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            RARE, True)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score": -6.028529703929507, "score_history": [-6.29425048828125e-05, -2.86102294921875e-05, -0.028378188610076904, -0.0008207766804844141, -1.07287787614041e-05, -8.52346420288086e-06, -3.445148468017578e-05, -3.576277322281385e-06, -1.9073486328125e-06, -5.839154243469238, -0.014089584350585938, -2.288818359375e-05, -0.000118255615234375, -2.2649765014648438e-06, -3.814697265625e-06, -0.0001201629638671875, -1.9073486328125e-05, -0.002223968505859375, -0.000152587890625, -2.6702880859375e-05, -5.972286453470588e-05, -2.3126602172851562e-05, -0.00017975145601667464, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -8.094053919194266e-05, -2.288818359375e-05, -2.6702880859375e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.000286102294921875, -3.814697265625e-06, -0.000247955322265625, 0.0, -0.000164031982421875, 0.0, -0.0001068115234375, -6.67572021484375e-05, -0.11837387084960938, -2.86102294921875e-05, -1.33514404296875e-05, -8.0108642578125e-05, -0.0001163482666015625, -2.6702880859375e-05, -0.00013017654418945312, 0.0, -0.0209275484085083, 0.0, -8.7738037109375e-05, -0.0003948211669921875, -7.05718994140625e-05, -0.00076848961180076, -2.1457672119140625e-06, -0.0009001417784020305, 0.0], "choice_history": [97, 283, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "War", " ", "Golem", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "7", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 7}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "War Golem", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "WarGolem", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ForceGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score": -6.2439278572127535, "score_history": [-6.29425048828125e-05, -2.86102294921875e-05, -4.327888488769531, -1.4365835189819336, -0.00027474568923935294, -3.518536686897278e-06, -5.161762237548828e-05, -4.410743713378906e-06, -3.814697265625e-06, -0.4600210189819336, -0.0001125335693359375, -7.295369141502306e-05, -3.0875205993652344e-05, -2.3841855067985307e-07, 0.0, -0.0014444905100390315, 0.0, -7.62939453125e-06, -7.62939453125e-06, -0.0001201629638671875, 0.0, -0.000118255615234375, 0.0, -2.6702880859375e-05, -0.01663970947265625, -1.9073486328125e-05, -9.619743650546297e-05, -3.576278118089249e-07, -0.0003083607880398631, 0.0], "choice_history": [97, 283, "Force", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "7", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 7}], "hole2": [{"hole1": 7, "_type": "Template31", "hole0": "War Golem", "hole2": "ALL"}], "hole0": "ForceGolem", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ForceTankGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            RARE, True)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score": -6.727965762857821, "score_history": [-6.29425048828125e-05, -2.86102294921875e-05, -4.327888488769531, -0.425054669380188, -0.02093457244336605, -2.145764938177308e-06, -5.9545040130615234e-05, -4.00543212890625e-05, -4.291534423828125e-06, -1.9073486328125e-06, -1.8263521194458008, -0.000728607177734375, -5.7220458984375e-05, -0.00025177001953125, -2.861022494471399e-06, -5.7220458984375e-06, -5.340576171875e-05, -3.24249267578125e-05, -0.0016002655029296875, -0.000133514404296875, -2.288818359375e-05, -9.154996951110661e-05, -2.7060508728027344e-05, -0.0001760566228767857, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.186823156895116e-05, -1.71661376953125e-05, -2.86102294921875e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.00017547607421875, -3.814697265625e-06, -0.0002040863037109375, 0.0, -0.00016021728515625, 0.0, -0.0001125335693359375, -6.67572021484375e-05, -0.09765625, -2.86102294921875e-05, -1.33514404296875e-05, -6.103515625e-05, -0.0001220703125, -2.86102294921875e-05, -0.00012636184692382812, 0.0, -0.023159146308898926, 0.0, -8.58306884765625e-05, -0.0003910064697265625, -7.05718994140625e-05, -0.0007951717707328498, -2.1457672119140625e-06, -0.0009232498123310506, 0.0], "choice_history": [97, 283, "Force", "Tank", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "War", " ", "Golem", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "7", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 7}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "War Golem", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "ForceTankGolem", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, charge=True)\n", "score": -6.8781055096942225, "score_history": [-6.29425048828125e-05, -2.86102294921875e-05, -0.028378188610076904, -0.0008207766804844141, -1.07287787614041e-05, -8.52346420288086e-06, -3.445148468017578e-05, -3.576277322281385e-06, -1.9073486328125e-06, -0.00421142578125, -8.96453857421875e-05, -4.565628114505671e-05, -3.2782554626464844e-05, -2.3841855067985307e-07, 0.0, -0.0013173504266887903, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000118255615234375, 0.0, -8.20159912109375e-05, 0.0, -2.09808349609375e-05, -4.4790191650390625, -4.00543212890625e-05, -4.768371127283899e-06, -3.814689989667386e-06, -7.61748815421015e-05, 0.0, -2.3631632328033447, 0.0, -0.0003871917724609375, -1.71661376953125e-05, -0.0001125335693359375, 0.0], "choice_history": [97, 283, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "7", "<EOS>", "7", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 7, "hole2": "charge"}], "hole2": [{"hole1": 7, "_type": "Template31", "hole0": "War Golem", "hole2": "ALL"}], "hole0": "WarGolem", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score": -6.8966964498353605, "score_history": [-6.29425048828125e-05, -2.86102294921875e-05, -0.028378188610076904, -0.0008207766804844141, -1.07287787614041e-05, -8.52346420288086e-06, -3.445148468017578e-05, -3.576277322281385e-06, -1.9073486328125e-06, -0.00421142578125, -8.96453857421875e-05, -4.565628114505671e-05, -3.2782554626464844e-05, -2.3841855067985307e-07, 0.0, -6.8489885330200195, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.000186920166015625, 0.0, -0.000110626220703125, 0.0, -1.33514404296875e-05, -0.013341903686523438, -1.52587890625e-05, -6.782790296711028e-05, -2.3841855067985307e-07, -0.0002232629049103707, 0.0], "choice_history": [97, 283, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "War", " ", "Golem", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "7", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 7}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "War Golem", "hole2": "ALL"}], "hole0": "WarGolem", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ForceGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            RARE, True)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score": -6.916035143723548, "score_history": [-6.29425048828125e-05, -2.86102294921875e-05, -4.327888488769531, -1.4365835189819336, -0.00027474568923935294, -3.518536686897278e-06, -5.161762237548828e-05, -4.410743713378906e-06, -3.814697265625e-06, -1.011296272277832, -0.0004482269287109375, -5.7220458984375e-05, -0.0001468658447265625, -2.861022494471399e-06, -5.7220458984375e-06, -5.7220458984375e-05, -2.86102294921875e-05, -0.00147247314453125, -0.0001373291015625, -2.47955322265625e-05, -0.00010561568342382088, -2.7060508728027344e-05, -0.00018034738604910672, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.532511906698346e-05, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -0.000270843505859375, -3.814697265625e-06, -0.0002307891845703125, 0.0, -0.00016021728515625, 0.0, -0.0001087188720703125, -6.67572021484375e-05, -0.11074066162109375, -2.86102294921875e-05, -1.52587890625e-05, -6.103515625e-05, -0.000118255615234375, -2.6702880859375e-05, -0.00012636184692382812, 0.0, -0.022806286811828613, 0.0, -8.7738037109375e-05, -0.0004024505615234375, -6.866455078125e-05, -0.0007319196010939777, -2.1457672119140625e-06, -0.000909671769477427, 0.0], "choice_history": [97, 283, "Force", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "War", " ", "Golem", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "7", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 7}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "War Golem", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "ForceGolem", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class War<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score": -7.151831616115452, "score_history": [-6.29425048828125e-05, -2.86102294921875e-05, -0.028378188610076904, -7.10697603225708, -0.0001544835977256298, -1.1447817087173462e-05, -6.306171417236328e-05, -3.218649908376392e-06, -1.9073486328125e-06, -0.0011539459228515625, -8.392333984375e-05, -4.172253102296963e-05, -3.0875205993652344e-05, -1.1920928244535389e-07, 0.0, -0.001414373517036438, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0001163482666015625, 0.0, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -0.012899398803710938, -1.33514404296875e-05, -5.352363223209977e-05, -2.3841855067985307e-07, -0.0002218327863374725, 0.0], "choice_history": [97, 283, "War", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "7", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 7}], "hole2": [{"hole1": 7, "_type": "Template31", "hole0": "War Golem", "hole2": "ALL"}], "hole0": "War<UNK>", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Force<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score": -7.428815800808877, "score_history": [-6.29425048828125e-05, -2.86102294921875e-05, -4.327888488769531, -3.0826101303100586, -0.00023100594989955425, -2.481415867805481e-05, -5.340576171875e-05, -2.741813204920618e-06, -1.9073486328125e-06, -0.0031147003173828125, -7.2479248046875e-05, -7.676811947021633e-05, -3.2901763916015625e-05, -2.3841855067985307e-07, 0.0, -0.0013938982738181949, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000110626220703125, 0.0, -9.1552734375e-05, 0.0, -2.09808349609375e-05, -0.012676239013671875, -1.52587890625e-05, -6.0675793065456674e-05, -2.3841855067985307e-07, -0.00023184457677416503, 0.0], "choice_history": [97, 283, "Force", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "7", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 7}], "hole2": [{"hole1": 7, "_type": "Template31", "hole0": "War Golem", "hole2": "ALL"}], "hole0": "Force<UNK>", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 4)\n", "score": -8.669938551323355, "score_history": [-6.29425048828125e-05, -2.86102294921875e-05, -0.028378188610076904, -0.0008207766804844141, -1.07287787614041e-05, -8.52346420288086e-06, -3.445148468017578e-05, -3.576277322281385e-06, -1.9073486328125e-06, -0.00421142578125, -8.96453857421875e-05, -4.565628114505671e-05, -3.2782554626464844e-05, -2.3841855067985307e-07, 0.0, -0.0013173504266887903, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000118255615234375, 0.0, -8.20159912109375e-05, 0.0, -2.09808349609375e-05, -0.011606216430664062, -1.52587890625e-05, -5.3404430218506604e-05, -2.3841855067985307e-07, -8.622982025146484, 0.0], "choice_history": [97, 283, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "7", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 7}], "hole2": [{"hole1": 7, "_type": "Template31", "hole0": "War Golem", "hole2": "ALL"}], "hole0": "WarGolem", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ForceTank(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score": -8.772264062164965, "score_history": [-6.29425048828125e-05, -2.86102294921875e-05, -4.327888488769531, -0.425054669380188, -3.8819432258605957, -0.00014463067054748535, -0.0011292695999145508, -4.291534423828125e-06, -3.814697265625e-06, -0.11883163452148438, -0.000164031982421875, -6.997353921178728e-05, -3.075599670410156e-05, -2.3841855067985307e-07, 0.0, -0.0012407967587932944, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000102996826171875, 0.0, -0.000118255615234375, 0.0, -2.47955322265625e-05, -0.014997482299804688, -1.71661376953125e-05, -9.32174880290404e-05, -3.576278118089249e-07, -0.0002990647335536778, 0.0], "choice_history": [97, 283, "Force", "Tank", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "7", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 7}], "hole2": [{"hole1": 7, "_type": "Template31", "hole0": "War Golem", "hole2": "ALL"}], "hole0": "ForceTank", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Thaddius())))\n", "score": -8.902091122366045, "score_history": [-6.29425048828125e-05, -2.86102294921875e-05, -0.028378188610076904, -0.0008207766804844141, -1.07287787614041e-05, -8.52346420288086e-06, -3.445148468017578e-05, -3.576277322281385e-06, -1.9073486328125e-06, -0.00421142578125, -8.96453857421875e-05, -4.565628114505671e-05, -3.2782554626464844e-05, -2.3841855067985307e-07, 0.0, -0.0013173504266887903, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.000118255615234375, 0.0, -8.20159912109375e-05, 0.0, -2.09808349609375e-05, -4.4790191650390625, -4.00543212890625e-05, -4.768371127283899e-06, -3.814689989667386e-06, -7.61748815421015e-05, 0.0, -1.5925838947296143, -0.0007915496826171875, -0.12840747833251953, -0.11719226837158203, -0.05721259117126465, -1.9073486328125e-06, -0.030167579650878906, -7.62939453125e-06, -0.0004253387451171875, -0.02550029754638672, -3.814697265625e-06, -0.23563432693481445, -0.0023132446222007275, -0.2124176025390625, -2.288818359375e-05, -1.1444091796875e-05, -0.02077198028564453, -0.006893157958984375, 0.0, -1.9073486328125e-06, -0.51739501953125, -1.1444091796875e-05, -1.4342288970947266, -0.0056694746017456055], "choice_history": [97, 283, "War", "Golem", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "7", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 27, 246, "Deathrattle", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Thaddius", "<EOS>", "Player", "Selector", "<EOS>", "In", "Graveyard", "<EOS>", 346, 88, 325, "Thaddius", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole7": [{"_type": "Template79", "hole0": "Thaddius"}], "hole6": "InGraveyard", "hole2": [{"_type": "Template79", "hole0": "Thaddius"}], "hole0": "Deathrattle", "_type": "Template39", "hole3": "PlayerSelector", "hole1": "Summon"}, "_type": "Template50", "hole0": 7, "hole2": "deathrattle"}], "hole2": [{"hole1": 7, "_type": "Template31", "hole0": "War Golem", "hole2": "ALL"}], "hole0": "WarGolem", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(\n            MinionIsNotTarget(), BothPlayer()), [ActionTag(Kill(),\n            TargetSelector())])])\n", "beams": [{"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, effects=[Effect(MinionDied(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score": -3.4061625286450905, "score_history": [-0.0001850128173828125, -8.392333984375e-05, -0.02517535723745823, -2.3841855067985307e-07, -2.5540590286254883e-05, -2.5153160095214844e-05, -2.3841855067985307e-07, -0.0001354217529296875, -0.14002704620361328, -0.002620697021484375, -1.9073486328125e-05, 0.0, -8.821482879284304e-06, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.0014400482177734375, -0.0001621246337890625, -0.001194000244140625, -1.2993770724278875e-05, -2.0265579223632812e-06, -4.38690185546875e-05, -3.814697265625e-06, -7.569558511022478e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.003724217414855957, -0.0001087188720703125, -0.0002040863037109375, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0017681121826171875, 0.0, -0.0005626678466796875, -2.3608856201171875, -0.059243202209472656, -0.003680308349430561, -0.010897517204284668, -0.005171060562133789, -0.09576833248138428, -0.00034498010063543916, -9.5367431640625e-06, -0.6081705093383789, -0.000156402587890625, -0.06395414471626282, -9.5367431640625e-06, -0.0030106306076049805, -3.099440846199286e-06, -1.9073486328125e-06, -7.164477574406192e-05, 0.0, -0.0007780790328979492, 0.0, -1.9073486328125e-06, -0.015740394592285156, -0.0002040863037109375, -3.814697265625e-06, 0.0, -5.769573908764869e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Acidmaw", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 90, 219, "Minion", "Died", "<EOS>", "Give", "<EOS>", 346, 80, 310, "1", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": "__init__", "hole3": [{"hole1": "Give", "hole3": "SelfSelector", "_type": "Template25", "hole0": "MinionDied", "hole2": [{"_type": "Template70", "hole0": 1}]}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Acidmaw", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(condition=\n            EnemyPlayer()), ActionTag(Kill(), SelfSelector()))])\n", "score": -3.565312867903131, "score_history": [-0.0001850128173828125, -8.392333984375e-05, -0.02517535723745823, -2.3841855067985307e-07, -2.5540590286254883e-05, -2.5153160095214844e-05, -2.3841855067985307e-07, -0.0001354217529296875, -0.14002704620361328, -0.002620697021484375, -1.9073486328125e-05, 0.0, -8.821482879284304e-06, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.0014400482177734375, -0.0001621246337890625, -0.001194000244140625, -1.2993770724278875e-05, -2.0265579223632812e-06, -4.38690185546875e-05, -3.814697265625e-06, -7.569558511022478e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.003724217414855957, -0.0001087188720703125, -0.0002040863037109375, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0017681121826171875, 0.0, -0.0005626678466796875, -0.10107994079589844, -0.000347137451171875, -1.0714541673660278, -3.814697265625e-06, -6.4849853515625e-05, 0.0, -8.0108642578125e-05, 0.0, -9.5367431640625e-06, -0.5682535171508789, -3.0517578125e-05, -5.006631909054704e-06, -2.3841855067985307e-07, -0.0005813296884298325, -1.1920928244535389e-07, -0.011855244636535645, -1.9073486328125e-06, -0.0002460479736328125, -0.0004711151123046875, -0.002885086927562952, -7.748603820800781e-06, -0.0003337860107421875, -0.0002956390380859375, -0.010213851928710938, -1.1444091796875e-05, -1.1444091796875e-05, -0.0032768116798251867, -0.05933189392089844, 0.0, -0.00020599365234375, -2.6702880859375e-05, -1.9073486328125e-06, -0.005767226219177246, -5.1020462706219405e-05, -0.06957244873046875, -0.0001354217529296875, -0.977472722530365, -0.0016727447509765625, -1.9073486328125e-06, -0.04730987548828125, -0.38537025451660156, -0.04478178545832634, -0.00013339478755369782, -0.02395903877913952, -1.1920928244535389e-07, 0.0], "choice_history": [97, 283, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Acidmaw", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "arg": "condition", "_type": "keyword"}], "_type": "Call"}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}], "_type": "Template78", "hole0": "Effect"}, "_type": "Template50", "hole0": 4, "hole2": "effects"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "MECH"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Acidmaw", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(condition=\n            EnemyPlayer()), ActionTag(Kill(), SelfSelector()))])\n", "score": -3.635699812563182, "score_history": [-0.0001850128173828125, -8.392333984375e-05, -0.02517535723745823, -2.3841855067985307e-07, -2.5540590286254883e-05, -2.5153160095214844e-05, -2.3841855067985307e-07, -0.0001354217529296875, -2.106294631958008, -4.38690185546875e-05, -1.1920922133867862e-06, 0.0, -4.172325134277344e-06, 0.0, -0.0047866106033325195, -1.71661376953125e-05, -0.00156402587890625, 0.0, -0.00011444091796875, 0.0, -3.5524364648154005e-05, 0.0, -5.7220458984375e-06, -0.018346786499023438, -1.9073486328125e-05, -5.602756573352963e-06, -2.264974000354414e-06, -0.0001813005656003952, -5.960462772236497e-07, -0.05488991737365723, -3.814697265625e-06, -0.0004711151123046875, -0.00046539306640625, -0.0028118803165853024, -7.748603820800781e-06, -0.000339508056640625, -0.000255584716796875, -0.0076885223388671875, -1.9073486328125e-05, -1.1444091796875e-05, -0.005780411418527365, -0.07238709926605225, 0.0, -0.000148773193359375, -2.47955322265625e-05, -1.9073486328125e-06, -0.007796049118041992, -3.075568383792415e-05, -0.08597469329833984, -0.0001468658447265625, -0.7427815198898315, -0.0013523101806640625, -1.9073486328125e-06, -0.031360626220703125, -0.3956184387207031, -0.04494987428188324, -0.00015377969248220325, -0.02317201904952526, -1.1920928244535389e-07, 0.0], "choice_history": [97, 283, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Acidmaw", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "arg": "condition", "_type": "keyword"}], "_type": "Call"}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}], "_type": "Template78", "hole0": "Effect"}, "_type": "Template50", "hole0": 4, "hole2": "effects"}], "hole2": [{"hole1": 7, "hole3": "LEGENDARY", "_type": "Template34", "hole0": "Acidmaw", "hole2": "HUNTER"}], "hole0": "Acidmaw", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), [ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.LIST, source_list=spare_part_list)\n            ), PlayerSelector())])])\n", "score": -3.685717264578159, "score_history": [-0.0001850128173828125, -8.392333984375e-05, -0.02517535723745823, -2.3841855067985307e-07, -2.5540590286254883e-05, -2.5153160095214844e-05, -2.3841855067985307e-07, -0.0001354217529296875, -0.14002704620361328, -0.002620697021484375, -1.9073486328125e-05, 0.0, -8.821482879284304e-06, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.0014400482177734375, -0.0001621246337890625, -0.001194000244140625, -1.2993770724278875e-05, -2.0265579223632812e-06, -4.38690185546875e-05, -3.814697265625e-06, -7.569558511022478e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.003724217414855957, -0.0001087188720703125, -0.0002040863037109375, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0017681121826171875, 0.0, -0.0005626678466796875, -0.10107994079589844, -0.000347137451171875, -1.1244174242019653, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -7.069110870361328e-05, 0.0, -5.7220458984375e-06, -0.13855361938476562, -7.82012939453125e-05, -0.0001697540283203125, -0.1794729232788086, -5.960459930065554e-07, -3.1947638490237296e-05, -0.0002979820710606873, -1.919257738336455e-05, -0.2969377338886261, -2.8490801923908293e-05, -3.4332275390625e-05, -0.004723548889160156, -6.29425048828125e-05, -0.1331157684326172, -0.7705135345458984, -0.13639354705810547, -0.06241786479949951, -0.00022637842630501837, -1.800060272216797e-05, -0.013192176818847656, -0.04297065734863281, -0.0002613067626953125, -0.005845546722412109, -0.0003300905227661133, -3.814697265625e-05, -0.000690460205078125, -3.814697265625e-06, -0.0003185272216796875, -3.814697265625e-06, -0.000980377197265625, 0.0, -0.025544285774230957, -3.24249267578125e-05, -0.0030527114868164062, -3.24249267578125e-05, -0.0088653564453125, -2.6702880859375e-05, -0.0004825592041015625, 0.0, -0.45531725883483887, -7.62939453125e-06, -0.000598907470703125, -3.814697265625e-06, 0.0], "choice_history": [97, 283, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Acidmaw", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 234, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", 346, 48, 169, 346, 64, 270, "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "spare_part_list", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole4": [{"elts": [{"hole1": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "spare_part_list", "_type": "Name"}}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard"}], "_type": "List"}], "hole1": 2, "_type": "Template36", "hole0": 4, "hole2": "Damaged"}, "_type": "Return"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "PIRATE"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Acidmaw", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(condition=\n            IsMinion()), ActionTag(Kill(), SelfSelector()))])\n", "score": -3.7149571882099437, "score_history": [-0.0001850128173828125, -8.392333984375e-05, -0.02517535723745823, -2.3841855067985307e-07, -2.5540590286254883e-05, -2.5153160095214844e-05, -2.3841855067985307e-07, -0.0001354217529296875, -0.14002704620361328, -0.002620697021484375, -1.9073486328125e-05, 0.0, -8.821482879284304e-06, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.0014400482177734375, -0.0001621246337890625, -0.001194000244140625, -1.2993770724278875e-05, -2.0265579223632812e-06, -4.38690185546875e-05, -3.814697265625e-06, -7.569558511022478e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.003724217414855957, -0.0001087188720703125, -0.0002040863037109375, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0017681121826171875, 0.0, -0.0005626678466796875, -0.10107994079589844, -0.000347137451171875, -1.0714541673660278, -3.814697265625e-06, -6.4849853515625e-05, 0.0, -8.0108642578125e-05, 0.0, -9.5367431640625e-06, -0.5682535171508789, -3.0517578125e-05, -5.006631909054704e-06, -2.3841855067985307e-07, -0.0005813296884298325, -1.1920928244535389e-07, -0.011855244636535645, -1.9073486328125e-06, -0.0002460479736328125, -0.0004711151123046875, -0.002885086927562952, -7.748603820800781e-06, -0.0003337860107421875, -0.0002956390380859375, -0.010213851928710938, -1.1444091796875e-05, -1.1444091796875e-05, -0.0032768116798251867, -0.05933189392089844, 0.0, -0.00020599365234375, -2.6702880859375e-05, -1.9073486328125e-06, -0.005767226219177246, -5.1020462706219405e-05, -0.06957244873046875, -0.0001354217529296875, -0.62673419713974, -0.003656730055809021, -0.027713775634765625, -0.15716838836669922, -0.14710617065429688, -0.6305544972419739, -0.0002833595499396324, -0.03712880611419678, -2.3841855067985307e-07, 0.0], "choice_history": [97, 283, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Acidmaw", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"_type": "Template79", "hole0": "IsMinion"}, "arg": "condition", "_type": "keyword"}], "_type": "Call"}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}], "_type": "Template78", "hole0": "Effect"}, "_type": "Template50", "hole0": 4, "hole2": "effects"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "MECH"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Acidmaw", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(condition=\n            IsMinion()), ActionTag(Kill(), SelfSelector()))])\n", "score": -4.206073974819645, "score_history": [-0.0001850128173828125, -8.392333984375e-05, -0.02517535723745823, -2.3841855067985307e-07, -2.5540590286254883e-05, -2.5153160095214844e-05, -2.3841855067985307e-07, -0.0001354217529296875, -2.106294631958008, -4.38690185546875e-05, -1.1920922133867862e-06, 0.0, -4.172325134277344e-06, 0.0, -0.0047866106033325195, -1.71661376953125e-05, -0.00156402587890625, 0.0, -0.00011444091796875, 0.0, -3.5524364648154005e-05, 0.0, -5.7220458984375e-06, -0.018346786499023438, -1.9073486328125e-05, -5.602756573352963e-06, -2.264974000354414e-06, -0.0001813005656003952, -5.960462772236497e-07, -0.05488991737365723, -3.814697265625e-06, -0.0004711151123046875, -0.00046539306640625, -0.0028118803165853024, -7.748603820800781e-06, -0.000339508056640625, -0.000255584716796875, -0.0076885223388671875, -1.9073486328125e-05, -1.1444091796875e-05, -0.005780411418527365, -0.07238709926605225, 0.0, -0.000148773193359375, -2.47955322265625e-05, -1.9073486328125e-06, -0.007796049118041992, -3.075568383792415e-05, -0.08597469329833984, -0.0001468658447265625, -0.8056915998458862, -0.0038462430238723755, -0.029618263244628906, -0.12458610534667969, -0.16295814514160156, -0.6454766392707825, -0.00029253869433887303, -0.037294983863830566, -2.3841855067985307e-07, 0.0], "choice_history": [97, 283, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Acidmaw", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"_type": "Template79", "hole0": "IsMinion"}, "arg": "condition", "_type": "keyword"}], "_type": "Call"}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}], "_type": "Template78", "hole0": "Effect"}, "_type": "Template50", "hole0": 4, "hole2": "effects"}], "hole2": [{"hole1": 7, "hole3": "LEGENDARY", "_type": "Template34", "hole0": "Acidmaw", "hole2": "HUNTER"}], "hole0": "Acidmaw", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), [ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.LIST, source_list=spare_part_list)\n            ), PlayerSelector())])])\n", "score": -4.239006190402563, "score_history": [-0.0001850128173828125, -8.392333984375e-05, -0.02517535723745823, -2.3841855067985307e-07, -2.5540590286254883e-05, -2.5153160095214844e-05, -2.3841855067985307e-07, -0.0001354217529296875, -0.14002704620361328, -0.002620697021484375, -1.9073486328125e-05, 0.0, -8.821482879284304e-06, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.0014400482177734375, -0.0001621246337890625, -0.001194000244140625, -1.2993770724278875e-05, -2.0265579223632812e-06, -4.38690185546875e-05, -3.814697265625e-06, -7.569558511022478e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.003724217414855957, -0.0001087188720703125, -0.0002040863037109375, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0017681121826171875, 0.0, -0.0005626678466796875, -0.10107994079589844, -0.000347137451171875, -1.0714541673660278, -3.814697265625e-06, -6.4849853515625e-05, 0.0, -8.0108642578125e-05, 0.0, -9.5367431640625e-06, -0.8512945175170898, -8.7738037109375e-05, -9.5367431640625e-05, -0.13756752014160156, -7.152549414968234e-07, -2.1457441107486375e-05, -0.0004175082722213119, -2.145751568605192e-05, -0.2590218186378479, -3.230545553378761e-05, -3.62396240234375e-05, -0.005282402038574219, -5.91278076171875e-05, -0.12405204772949219, -0.7560672760009766, -0.13953399658203125, -0.06465315818786621, -0.00025176999042741954, -1.990795135498047e-05, -0.0125274658203125, -0.037059783935546875, -0.0002613067626953125, -0.005855083465576172, -0.0003339052200317383, -3.814697265625e-05, -0.000682830810546875, -3.814697265625e-06, -0.0003223419189453125, -3.814697265625e-06, -0.000995635986328125, 0.0, -0.02528202533721924, -3.24249267578125e-05, -0.0030345916748046875, -3.24249267578125e-05, -0.00884246826171875, -2.6702880859375e-05, -0.0004863739013671875, 0.0, -0.45302462577819824, -7.62939453125e-06, -0.0005950927734375, -3.814697265625e-06, 0.0], "choice_history": [97, 283, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Acidmaw", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 234, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", 346, 48, 169, 346, 64, 270, "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "spare_part_list", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole4": [{"elts": [{"hole1": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "spare_part_list", "_type": "Name"}}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard"}], "_type": "List"}], "hole1": 2, "_type": "Template36", "hole0": 4, "hole2": "Damaged"}, "_type": "Return"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "MECH"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Acidmaw", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), [ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.LIST, source_list=<UNK>)),\n            PlayerSelector())])])\n", "score": -4.27292386639823, "score_history": [-0.0001850128173828125, -8.392333984375e-05, -0.02517535723745823, -2.3841855067985307e-07, -2.5540590286254883e-05, -2.5153160095214844e-05, -2.3841855067985307e-07, -0.0001354217529296875, -0.14002704620361328, -0.002620697021484375, -1.9073486328125e-05, 0.0, -8.821482879284304e-06, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.0014400482177734375, -0.0001621246337890625, -0.001194000244140625, -1.2993770724278875e-05, -2.0265579223632812e-06, -4.38690185546875e-05, -3.814697265625e-06, -7.569558511022478e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.003724217414855957, -0.0001087188720703125, -0.0002040863037109375, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0017681121826171875, 0.0, -0.0005626678466796875, -0.10107994079589844, -0.000347137451171875, -1.1244174242019653, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -7.069110870361328e-05, 0.0, -5.7220458984375e-06, -0.13855361938476562, -7.82012939453125e-05, -0.0001697540283203125, -0.1794729232788086, -5.960459930065554e-07, -3.1947638490237296e-05, -0.0002979820710606873, -1.919257738336455e-05, -0.2969377338886261, -2.8490801923908293e-05, -3.4332275390625e-05, -0.004723548889160156, -6.29425048828125e-05, -0.1331157684326172, -0.7705135345458984, -0.13639354705810547, -0.06241786479949951, -0.00022637842630501837, -1.800060272216797e-05, -0.013192176818847656, -0.04297065734863281, -0.0002613067626953125, -0.005845546722412109, -0.0003300905227661133, -3.814697265625e-05, -0.000690460205078125, -3.814697265625e-06, -0.0003185272216796875, -3.814697265625e-06, -0.000980377197265625, 0.0, -0.025544285774230957, -3.24249267578125e-05, -0.0030527114868164062, -3.24249267578125e-05, -0.0088653564453125, -2.6702880859375e-05, -0.0004825592041015625, 0.0, -1.041762113571167, -3.886195190716535e-05, -0.0013141632080078125, -1.9073486328125e-05, 0.0], "choice_history": [97, 283, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Acidmaw", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 234, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", 346, 48, 169, 346, 64, 270, "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "<UNK>", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole4": [{"elts": [{"hole1": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "<UNK>", "_type": "Name"}}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard"}], "_type": "List"}], "hole1": 2, "_type": "Template36", "hole0": 4, "hole2": "Damaged"}, "_type": "Return"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "PIRATE"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Acidmaw", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.MECH)), ActionTag(Give([Buff(ChangeAttack(1)), Buff\n            (ChangeHealth(1))]), SelfSelector()))])\n", "score": -4.361567306223748, "score_history": [-0.0001850128173828125, -8.392333984375e-05, -0.02517535723745823, -2.3841855067985307e-07, -2.5540590286254883e-05, -2.5153160095214844e-05, -2.3841855067985307e-07, -0.0001354217529296875, -0.14002704620361328, -0.002620697021484375, -1.9073486328125e-05, 0.0, -8.821482879284304e-06, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.0014400482177734375, -0.0001621246337890625, -0.001194000244140625, -1.2993770724278875e-05, -2.0265579223632812e-06, -4.38690185546875e-05, -3.814697265625e-06, -7.569558511022478e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.003724217414855957, -0.0001087188720703125, -0.0002040863037109375, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0017681121826171875, 0.0, -0.0005626678466796875, -0.10107994079589844, -0.000347137451171875, -1.1244174242019653, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -7.069110870361328e-05, 0.0, -5.7220458984375e-06, -0.13855361938476562, -7.82012939453125e-05, -0.0001697540283203125, -1.9460124969482422, -3.576277265437966e-07, -1.4662683497590479e-05, -0.00010132564057130367, -6.19888032815652e-06, -0.16098558902740479, -0.030950307846069336, -0.00014841361553408206, -1.33514404296875e-05, -0.140533447265625, -0.0006866455078125, -0.10576248168945312, -1.33514404296875e-05, -3.0517578125e-05, -0.014509201049804688, -0.030440330505371094, -4.00543212890625e-05, -2.47955322265625e-05, -0.0305178165435791, -0.0015120506286621094, 0.0, -5.7220458984375e-06, -0.0076045989990234375, -0.0024080276489257812, -6.520748138427734e-05, -0.025271058082580566, -5.91278076171875e-05, -0.18818628787994385, -5.7220458984375e-06, -0.0001316070556640625, -0.030388593673706055, -4.768370445162873e-07, -0.09099924564361572, -5.7220458984375e-06, -3.814697265625e-05, -0.0001087188720703125, -0.011160016059875488, -2.1457672119140625e-06, 0.0], "choice_history": [97, 283, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Acidmaw", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "4", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 74, 297, "MECH", "<EOS>", 346, 45, 150, 21, 174, "Action", "Tag", "<EOS>", 347, 55, 215, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 4, "_type": "Template36", "hole3": [{"_type": "Template60", "hole0": "MECH"}], "hole1": 2, "hole4": [{"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 1, "hole3": 1, "_type": "Template21", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Call"}]}, "_type": "Return"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "PIRATE"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Acidmaw", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(condition=\n            EnemyPlayer()), ActionTag(Kill(), SelfSelector()))])\n", "score": -4.907627360113892, "score_history": [-0.0001850128173828125, -8.392333984375e-05, -0.02517535723745823, -2.3841855067985307e-07, -2.5540590286254883e-05, -2.5153160095214844e-05, -2.3841855067985307e-07, -0.0001354217529296875, -0.14002704620361328, -0.002620697021484375, -1.9073486328125e-05, 0.0, -8.821482879284304e-06, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.0014400482177734375, -0.0001621246337890625, -0.001194000244140625, -1.2993770724278875e-05, -2.0265579223632812e-06, -4.38690185546875e-05, -3.814697265625e-06, -7.569558511022478e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.003724217414855957, -0.0001087188720703125, -0.0002040863037109375, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0017681121826171875, 0.0, -0.0005626678466796875, -0.10107994079589844, -0.000347137451171875, -2.3395090103149414, -0.00015282630920410156, -0.000476837158203125, 0.0, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -0.6344528198242188, -2.47955322265625e-05, -4.053003067383543e-06, -3.576278118089249e-07, -0.000461828603874892, -1.1920928244535389e-07, -0.012683391571044922, 0.0, -0.0002193450927734375, -0.000423431396484375, -0.0027713654562830925, -7.748603820800781e-06, -0.000331878662109375, -0.0002803802490234375, -0.009977340698242188, -1.1444091796875e-05, -1.1444091796875e-05, -0.003249393543228507, -0.0598301887512207, 0.0, -0.00020599365234375, -2.6702880859375e-05, -1.9073486328125e-06, -0.005721449851989746, -5.0782055041054264e-05, -0.06971454620361328, -0.000133514404296875, -0.9914019107818604, -0.001678466796875, -1.9073486328125e-06, -0.047654151916503906, -0.3779458999633789, -0.04469476267695427, -0.00013339478755369782, -0.02391481213271618, -1.1920928244535389e-07, 0.0], "choice_history": [97, 283, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Acidmaw", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "arg": "condition", "_type": "keyword"}], "_type": "Call"}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}], "_type": "Template78", "hole0": "Effect"}, "_type": "Template50", "hole0": 4, "hole2": "effects"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DRAGON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Acidmaw", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(condition=\n            EnemyPlayer()), ActionTag(Kill(), SelfSelector()))])\n", "score": -4.98794364665163, "score_history": [-0.0001850128173828125, -8.392333984375e-05, -0.02517535723745823, -2.3841855067985307e-07, -2.5540590286254883e-05, -2.5153160095214844e-05, -2.3841855067985307e-07, -0.0001354217529296875, -0.14002704620361328, -0.002620697021484375, -1.9073486328125e-05, 0.0, -8.821482879284304e-06, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.0014400482177734375, -0.0001621246337890625, -0.001194000244140625, -1.2993770724278875e-05, -2.0265579223632812e-06, -4.38690185546875e-05, -3.814697265625e-06, -7.569558511022478e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.003724217414855957, -0.0001087188720703125, -0.0002040863037109375, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0017681121826171875, 0.0, -0.0005626678466796875, -0.10107994079589844, -0.000347137451171875, -2.214832305908203, -9.5367431640625e-06, -0.000530242919921875, 0.0, -5.340576171875e-05, 0.0, -9.5367431640625e-06, -0.841282844543457, -3.0517578125e-05, -4.8874317144509405e-06, -2.3841855067985307e-07, -0.0004953094758093357, -1.1920928244535389e-07, -0.012033700942993164, -1.9073486328125e-06, -0.0002040863037109375, -0.000431060791015625, -0.002809390891343355, -7.748603820800781e-06, -0.0003376007080078125, -0.0002994537353515625, -0.0103302001953125, -1.1444091796875e-05, -1.1444091796875e-05, -0.003145205322653055, -0.05803811550140381, 0.0, -0.00020599365234375, -2.6702880859375e-05, -1.9073486328125e-06, -0.005759596824645996, -5.113966471981257e-05, -0.06924724578857422, -0.000133514404296875, -0.9874389171600342, -0.00167083740234375, -1.9073486328125e-06, -0.04786872863769531, -0.3823823928833008, -0.04483352228999138, -0.00013327557826414704, -0.02385246567428112, -1.1920928244535389e-07, 0.0], "choice_history": [97, 283, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Acidmaw", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "arg": "condition", "_type": "keyword"}], "_type": "Call"}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}], "_type": "Template78", "hole0": "Effect"}, "_type": "Template50", "hole0": 4, "hole2": "effects"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Acidmaw", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(condition=\n            IsMinion()), ActionTag(Kill(), SelfSelector()))])\n", "score": -5.035306504553624, "score_history": [-0.0001850128173828125, -8.392333984375e-05, -0.02517535723745823, -2.3841855067985307e-07, -2.5540590286254883e-05, -2.5153160095214844e-05, -2.3841855067985307e-07, -0.0001354217529296875, -0.14002704620361328, -0.002620697021484375, -1.9073486328125e-05, 0.0, -8.821482879284304e-06, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.0014400482177734375, -0.0001621246337890625, -0.001194000244140625, -1.2993770724278875e-05, -2.0265579223632812e-06, -4.38690185546875e-05, -3.814697265625e-06, -7.569558511022478e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.003724217414855957, -0.0001087188720703125, -0.0002040863037109375, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0017681121826171875, 0.0, -0.0005626678466796875, -0.10107994079589844, -0.000347137451171875, -2.3395090103149414, -0.00015282630920410156, -0.000476837158203125, 0.0, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -0.6344528198242188, -2.47955322265625e-05, -4.053003067383543e-06, -3.576278118089249e-07, -0.000461828603874892, -1.1920928244535389e-07, -0.012683391571044922, 0.0, -0.0002193450927734375, -0.000423431396484375, -0.0027713654562830925, -7.748603820800781e-06, -0.000331878662109375, -0.0002803802490234375, -0.009977340698242188, -1.1444091796875e-05, -1.1444091796875e-05, -0.003249393543228507, -0.0598301887512207, 0.0, -0.00020599365234375, -2.6702880859375e-05, -1.9073486328125e-06, -0.005721449851989746, -5.0782055041054264e-05, -0.06971454620361328, -0.000133514404296875, -0.6167862415313721, -0.003628090023994446, -0.026508331298828125, -0.15671920776367188, -0.14474201202392578, -0.6293863654136658, -0.00028324034065008163, -0.037050843238830566, -2.3841855067985307e-07, 0.0], "choice_history": [97, 283, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Acidmaw", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"_type": "Template79", "hole0": "IsMinion"}, "arg": "condition", "_type": "keyword"}], "_type": "Call"}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}], "_type": "Template78", "hole0": "Effect"}, "_type": "Template50", "hole0": 4, "hole2": "effects"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DRAGON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Acidmaw", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(condition=\n            IsMinion()), ActionTag(IncreaseAcidmaw(), HeroSelector()))])\n", "score": -5.05075244053193, "score_history": [-0.0001850128173828125, -8.392333984375e-05, -0.02517535723745823, -2.3841855067985307e-07, -2.5540590286254883e-05, -2.5153160095214844e-05, -2.3841855067985307e-07, -0.0001354217529296875, -0.14002704620361328, -0.002620697021484375, -1.9073486328125e-05, 0.0, -8.821482879284304e-06, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.0014400482177734375, -0.0001621246337890625, -0.001194000244140625, -1.2993770724278875e-05, -2.0265579223632812e-06, -4.38690185546875e-05, -3.814697265625e-06, -7.569558511022478e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.003724217414855957, -0.0001087188720703125, -0.0002040863037109375, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0017681121826171875, 0.0, -0.0005626678466796875, -0.10107994079589844, -0.000347137451171875, -1.0714541673660278, -3.814697265625e-06, -6.4849853515625e-05, 0.0, -8.0108642578125e-05, 0.0, -9.5367431640625e-06, -0.5682535171508789, -3.0517578125e-05, -5.006631909054704e-06, -2.3841855067985307e-07, -0.0005813296884298325, -1.1920928244535389e-07, -0.011855244636535645, -1.9073486328125e-06, -0.0002460479736328125, -0.0004711151123046875, -0.002885086927562952, -7.748603820800781e-06, -0.0003337860107421875, -0.0002956390380859375, -0.010213851928710938, -1.1444091796875e-05, -1.1444091796875e-05, -0.0032768116798251867, -0.05933189392089844, 0.0, -0.00020599365234375, -2.6702880859375e-05, -1.9073486328125e-06, -0.005767226219177246, -5.1020462706219405e-05, -0.06957244873046875, -0.0001354217529296875, -0.62673419713974, -0.003656730055809021, -0.027713775634765625, -0.15716838836669922, -0.14710617065429688, -1.077871561050415, -0.8933619260787964, -0.00028716560336761177, -0.03224126249551773, -2.3841855067985307e-07, 0.0], "choice_history": [97, 283, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Acidmaw", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", 64, 269, "Increase", "Acidmaw", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"_type": "Template79", "hole0": "IsMinion"}, "arg": "condition", "_type": "keyword"}], "_type": "Call"}, {"hole3": "HeroSelector", "_type": "Template44", "hole0": "IncreaseAcidmaw"}], "_type": "Template78", "hole0": "Effect"}, "_type": "Template50", "hole0": 4, "hole2": "effects"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "MECH"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Acidmaw", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(condition=\n            IsMinion()), ActionTag(IncreaseMinionSelector(), SelfSelector()))])\n", "score": -5.515427898941105, "score_history": [-0.0001850128173828125, -8.392333984375e-05, -0.02517535723745823, -2.3841855067985307e-07, -2.5540590286254883e-05, -2.5153160095214844e-05, -2.3841855067985307e-07, -0.0001354217529296875, -0.14002704620361328, -0.002620697021484375, -1.9073486328125e-05, 0.0, -8.821482879284304e-06, -1.33514404296875e-05, -8.58306884765625e-05, 0.0, -0.0014400482177734375, -0.0001621246337890625, -0.001194000244140625, -1.2993770724278875e-05, -2.0265579223632812e-06, -4.38690185546875e-05, -3.814697265625e-06, -7.569558511022478e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -9.5367431640625e-06, -5.14984130859375e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.003724217414855957, -0.0001087188720703125, -0.0002040863037109375, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.0017681121826171875, 0.0, -0.0005626678466796875, -0.10107994079589844, -0.000347137451171875, -1.0714541673660278, -3.814697265625e-06, -6.4849853515625e-05, 0.0, -8.0108642578125e-05, 0.0, -9.5367431640625e-06, -0.5682535171508789, -3.0517578125e-05, -5.006631909054704e-06, -2.3841855067985307e-07, -0.0005813296884298325, -1.1920928244535389e-07, -0.011855244636535645, -1.9073486328125e-06, -0.0002460479736328125, -0.0004711151123046875, -0.002885086927562952, -7.748603820800781e-06, -0.0003337860107421875, -0.0002956390380859375, -0.010213851928710938, -1.1444091796875e-05, -1.1444091796875e-05, -0.0032768116798251867, -0.05933189392089844, 0.0, -0.00020599365234375, -2.6702880859375e-05, -1.9073486328125e-06, -0.005767226219177246, -5.1020462706219405e-05, -0.06957244873046875, -0.0001354217529296875, -0.62673419713974, -0.003656730055809021, -0.027713775634765625, -0.15716838836669922, -0.14710617065429688, -1.077871561050415, -0.8060421943664551, -0.0011036396026611328, 0.0, -0.5834169983863831, -3.218649908376392e-06, 0.0], "choice_history": [97, 283, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Acidmaw", "<EOS>", 52, 179, "7", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Character", "Damaged", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", 64, 269, "Increase", "Minion", "Selector", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"value": {"_type": "Template79", "hole0": "IsMinion"}, "arg": "condition", "_type": "keyword"}], "_type": "Call"}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "IncreaseMinionSelector"}], "_type": "Template78", "hole0": "Effect"}, "_type": "Template50", "hole0": 4, "hole2": "effects"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "MECH"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Acidmaw", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score": -8.629419499871055, "score_history": [-0.0001850128173828125, -8.392333984375e-05, -0.02517535723745823, -2.3841855067985307e-07, -2.5540590286254883e-05, -2.5153160095214844e-05, -2.3841855067985307e-07, -0.0001354217529296875, -2.106294631958008, -4.38690185546875e-05, -1.1920922133867862e-06, 0.0, -4.172325134277344e-06, 0.0, -0.0047866106033325195, -1.71661376953125e-05, -0.00156402587890625, 0.0, -0.00011444091796875, 0.0, -3.5524364648154005e-05, 0.0, -5.7220458984375e-06, -6.488080024719238, -0.0028228759765625, -1.9073486328125e-06, 0.0, -1.6331539882230572e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Acidmaw", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Acidmaw", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": 7, "hole3": "LEGENDARY", "_type": "Template34", "hole0": "Acidmaw", "hole2": "HUNTER"}], "hole0": "Acidmaw", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "beams": [{"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, True\n            )\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n", "score": -0.572265082990512, "score_history": [-6.29425048828125e-05, -1.71661376953125e-05, -0.0010640918044373393, -3.290128370281309e-05, -3.4809112548828125e-05, -5.9604644775390625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.4716529846191406, -0.025350570678710938, -7.05718994140625e-05, -3.814697265625e-06, -9.536738616588991e-07, -3.814697265625e-06, -0.00012850759958382696, -1.1920928244535389e-07, -0.022748947143554688, -4.38690185546875e-05, -0.0004940032958984375, -1.7046782886609435e-05, -5.960462772236497e-07, -5.14984130859375e-05, -7.62939453125e-06, -8.362415246665478e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -7.62939453125e-06, -7.62939453125e-06, -5.91278076171875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.000453948974609375, -2.562999725341797e-05, -0.027353286743164062, -5.7220458984375e-06, -0.0015773773193359375, -6.67572021484375e-05, -0.00012409687042236328, -3.62396240234375e-05, -0.00018322467803955078, 0.0, -0.008940815925598145, 0.0, -1.9073486328125e-05, -0.008170127868652344, -5.91278076171875e-05, -4.172316948825028e-06, -1.1920928244535389e-07, -0.0005478524835780263, 0.0, -0.0010012388229370117, -2.3841855067985307e-07, -0.0012531280517578125, -1.33514404296875e-05, -0.0002437829680275172, -1.1563301086425781e-05], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Boar", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Boar", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -2.0171205073978555, "score_history": [-6.29425048828125e-05, -1.71661376953125e-05, -0.0010640918044373393, -3.290128370281309e-05, -3.4809112548828125e-05, -5.9604644775390625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.9795036315917969, -0.0001583099365234375, -4.768370445162873e-07, -5.5788495956221595e-05, -4.661003913497552e-05, 0.0, -1.0191221237182617, 0.0, -0.0011148452758789062, -4.172316494077677e-06, -0.0013256072998046875, 0.0, -0.0001010894775390625, 0.0, -0.00017547607421875, 0.0, -0.005680084228515625, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.000213623046875, 0.0, -2.09808349609375e-05, -0.006114959716796875, -2.09808349609375e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -7.164472481235862e-05, 0.0, -0.0011529922485351562, -1.1920928244535389e-07, -0.0006504058837890625, -7.62939453125e-06, -0.0002871751494240016, -7.748603820800781e-06], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Boar", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "charge"}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Boar", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}}], "hole0": "Boar", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -3.128333714637499, "score_history": [-6.29425048828125e-05, -1.71661376953125e-05, -0.0010640918044373393, -3.290128370281309e-05, -3.4809112548828125e-05, -5.9604644775390625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.9795036315917969, -0.0001583099365234375, -4.768370445162873e-07, -5.5788495956221595e-05, -4.661003913497552e-05, 0.0, -2.128140449523926, 0.0, -0.0007402896881103516, -3.814689989667386e-06, -0.0016498565673828125, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.0001697540283203125, 0.0, -0.007816314697265625, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.000202178955078125, 0.0, -1.9073486328125e-05, -0.0062465667724609375, -2.288818359375e-05, -1.9073486328125e-06, -2.7418097943154862e-06, -7.426732190651819e-05, 0.0, -0.0011396408081054688, -1.1920928244535389e-07, -0.0006732940673828125, -7.62939453125e-06, -0.00028729435871355236, -7.748603820800781e-06], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Boar", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "charge"}], "hole2": [{"hole2": "COMMON", "hole0": "Boar", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}}], "hole0": "Boar", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.ALL,\n            COMMON=[Buff(ManaChange(Attribute('attack', WeaponSelector()), \n            -1))])\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -3.661787536829358, "score_history": [-6.29425048828125e-05, -1.71661376953125e-05, -0.0010640918044373393, -3.290128370281309e-05, -3.4809112548828125e-05, -5.9604644775390625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.9795036315917969, -0.0001583099365234375, -4.768370445162873e-07, -5.5788495956221595e-05, -4.661003913497552e-05, 0.0, -0.9141712188720703, 0.0, -0.20995521545410156, -1.9073486328125e-06, -0.10517311096191406, -0.002803802490234375, -0.0001964569091796875, -0.001506805419921875, -0.042397499084472656, -0.002147674560546875, -0.000232696533203125, -0.0001201629638671875, -0.0016021728515625, -0.05962181091308594, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.011860966682434082, -0.0006580352783203125, -0.000324249267578125, -0.00016021728515625, -0.000118255615234375, -0.6074775457382202, 0.0, -0.07984161376953125, -7.62939453125e-05, -0.11436343193054199, -1.0013580322265625e-05, 0.0, -0.0033702850341796875, -0.00018310546875, -0.0008106231689453125, -0.00011444091796875, -3.814697265625e-06, -0.052478909492492676, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0012096166610717773, 0.0, -1.9073486328125e-06, -0.46587371826171875, -0.0004711151123046875, -5.7220458984375e-06, -2.264974000354414e-06, -5.888934538234025e-05, 0.0, -0.0009765625, -1.1920928244535389e-07, -0.0002613067626953125, -9.5367431640625e-06, -4.279613131075166e-05, -1.52587890625e-05], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 19, 169, 346, 69, 291, "Mana", "Change", "<EOS>", 347, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "charge"}], "hole2": [{"hole2": "ALL", "hole0": "Boar", "_type": "Template26", "hole3": "COMMON", "hole1": 3, "hole4": {"elts": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Call"}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ManaChange"}], "_type": "List"}}], "hole0": "Boar", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -3.966948655229423, "score_history": [-6.29425048828125e-05, -1.71661376953125e-05, -0.0010640918044373393, -3.290128370281309e-05, -3.4809112548828125e-05, -5.9604644775390625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.9795036315917969, -0.0001583099365234375, -4.768370445162873e-07, -5.5788495956221595e-05, -4.661003913497552e-05, 0.0, -2.9672622680664062, -1.9073486328125e-06, -0.0008537768735550344, -3.933898824470816e-06, -0.0010089874267578125, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -0.0001621246337890625, 0.0, -0.0076503753662109375, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0001926422119140625, 0.0, -2.09808349609375e-05, -0.006435394287109375, -2.288818359375e-05, -1.9073486328125e-06, -2.7418097943154862e-06, -7.188314339146018e-05, 0.0, -0.0011453628540039062, -1.1920928244535389e-07, -0.000667572021484375, -7.62939453125e-06, -0.0002928971953224391, -7.748603820800781e-06], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Boar", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "charge"}], "hole2": [{"hole2": "FREE", "hole0": "Boar", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}}], "hole0": "Boar", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.ALL,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -3.9850721627943173, "score_history": [-6.29425048828125e-05, -1.71661376953125e-05, -0.0010640918044373393, -3.290128370281309e-05, -3.4809112548828125e-05, -5.9604644775390625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.9795036315917969, -0.0001583099365234375, -4.768370445162873e-07, -5.5788495956221595e-05, -4.661003913497552e-05, 0.0, -0.9141712188720703, 0.0, -2.071230888366699, -3.576278118089249e-07, -0.0023040771484375, -3.814697265625e-06, -7.2479248046875e-05, 0.0, -0.000186920166015625, 0.0, -0.0075283050537109375, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0002155303955078125, 0.0, -2.09808349609375e-05, -0.00608062744140625, -2.47955322265625e-05, -1.9073486328125e-06, -2.9802276912960224e-06, -7.140630623325706e-05, 0.0, -0.0011377334594726562, -1.1920928244535389e-07, -0.00067138671875, -7.62939453125e-06, -0.00028920170734636486, -7.748603820800781e-06], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "charge"}], "hole2": [{"hole2": "ALL", "hole0": "Boar", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}}], "hole0": "Boar", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.ALL,\n            COMMON=[Buff(ManaChange(Attribute('attack', WeaponSelector()), \n            -1))])\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score": -4.185560372494251, "score_history": [-6.29425048828125e-05, -1.71661376953125e-05, -0.0010640918044373393, -3.290128370281309e-05, -3.4809112548828125e-05, -5.9604644775390625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.9795036315917969, -0.0001583099365234375, -4.768370445162873e-07, -5.5788495956221595e-05, -4.661003913497552e-05, 0.0, -0.9141712188720703, 0.0, -0.20995521545410156, -1.9073486328125e-06, -0.10517311096191406, -0.002803802490234375, -0.0001964569091796875, -0.001506805419921875, -0.042397499084472656, -0.002147674560546875, -0.000232696533203125, -0.0001201629638671875, -0.0016021728515625, -0.05962181091308594, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.011860966682434082, -0.0006580352783203125, -0.000324249267578125, -0.00016021728515625, -0.000118255615234375, -0.6074775457382202, 0.0, -0.07984161376953125, -7.62939453125e-05, -0.11436343193054199, -1.0013580322265625e-05, 0.0, -0.0033702850341796875, -0.00018310546875, -0.0008106231689453125, -0.00011444091796875, -3.814697265625e-06, -0.052478909492492676, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0012096166610717773, 0.0, -1.9073486328125e-06, -0.990509033203125, -0.0001087188720703125, -1.537799835205078e-05, 0.0, -0.0008569954661652446, 0.0], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 19, 169, 346, 69, 291, "Mana", "Change", "<EOS>", 347, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 4}], "hole2": [{"hole2": "ALL", "hole0": "Boar", "_type": "Template26", "hole3": "COMMON", "hole1": 3, "hole4": {"elts": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Call"}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ManaChange"}], "_type": "List"}}], "hole0": "Boar", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, True)\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n", "score": -4.2652236810509905, "score_history": [-6.29425048828125e-05, -1.71661376953125e-05, -0.0010640918044373393, -3.290128370281309e-05, -3.4809112548828125e-05, -5.9604644775390625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.4716529846191406, -0.025350570678710938, -7.05718994140625e-05, -3.814697265625e-06, -9.536738616588991e-07, -3.814697265625e-06, -0.00012850759958382696, -1.1920928244535389e-07, -0.022748947143554688, -4.38690185546875e-05, -0.0004940032958984375, -1.7046782886609435e-05, -5.960462772236497e-07, -5.14984130859375e-05, -7.62939453125e-06, -8.362415246665478e-05, -1.9073486328125e-06, -7.05718994140625e-05, -5.7220458984375e-06, -7.62939453125e-06, -7.62939453125e-06, -5.91278076171875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.000453948974609375, -2.562999725341797e-05, -3.6824588775634766, 0.0, -0.0198211669921875, -7.2479248046875e-05, -0.00015854835510253906, -3.24249267578125e-05, -0.00033402442932128906, 0.0, -0.03270363807678223, 0.0, -1.1444091796875e-05, -0.004296302795410156, -5.53131103515625e-05, -1.1920909628315712e-06, -2.3841855067985307e-07, -0.00025710571208037436, 0.0, -0.0009762048721313477, -2.3841855067985307e-07, -0.001117706298828125, -1.1444091796875e-05, -0.0002480745024513453, -1.3470649719238281e-05], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Boar", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Boar", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -4.40968268947514, "score_history": [-6.29425048828125e-05, -1.71661376953125e-05, -0.0010640918044373393, -3.290128370281309e-05, -3.4809112548828125e-05, -5.9604644775390625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.4716529846191406, -3.7070369720458984, -3.24249267578125e-05, 0.0, -2.3841855067985307e-07, -1.52587890625e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.0014896392822265625, -0.00064849853515625, -0.00055694580078125, -3.6954811548639555e-06, -5.6028297876764555e-06, -0.0001010894775390625, -9.5367431640625e-06, -0.00047901179641485214, -1.9073486328125e-06, -0.000141143798828125, -1.9073486328125e-06, -1.33514404296875e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.1444091796875e-05, -4.76837158203125e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.000423431396484375, -3.314018249511719e-05, -0.024532318115234375, -5.7220458984375e-06, -0.000812530517578125, -3.24249267578125e-05, -9.739398956298828e-05, -3.24249267578125e-05, -0.0001049041748046875, -0.0006103515625, -0.000484466552734375, -0.19438648223876953, -3.62396240234375e-05, -0.000171661376953125, 0.0, -0.0015773773193359375, 0.0, -7.62939453125e-06, -0.0006313323974609375, -1.52587890625e-05, -1.9073486328125e-06, -3.933898824470816e-06, -6.604190275538713e-05, 0.0, -0.000967860221862793, -1.1920928244535389e-07, -0.000675201416015625, -7.62939453125e-06, -0.0003027915663551539, -9.655952453613281e-06], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Boar", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DRAGON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Boar", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Boar", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -4.51450028722973, "score_history": [-6.29425048828125e-05, -1.71661376953125e-05, -0.0010640918044373393, -3.290128370281309e-05, -3.4809112548828125e-05, -5.9604644775390625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.9795036315917969, -0.0001583099365234375, -4.768370445162873e-07, -5.5788495956221595e-05, -4.661003913497552e-05, 0.0, -3.5053796768188477, -1.9073486328125e-06, -0.0075609683990478516, -5.960462772236497e-07, -0.002254486083984375, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.0001373291015625, 0.0, -0.008731842041015625, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.00020599365234375, 0.0, -2.09808349609375e-05, -0.0068569183349609375, -2.6702880859375e-05, -1.9073486328125e-06, -2.861018856492592e-06, -7.116789493011311e-05, 0.0, -0.0011410713195800781, -1.1920928244535389e-07, -0.0006999969482421875, -7.62939453125e-06, -0.00030255314777605236, -7.748603820800781e-06], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Boar", "<EOS>", "3", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "charge"}], "hole2": [{"hole2": "EPIC", "hole0": "Boar", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}}], "hole0": "Boar", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.ALL,\n            COMMON=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -4.764574554603648, "score_history": [-6.29425048828125e-05, -1.71661376953125e-05, -0.0010640918044373393, -3.290128370281309e-05, -3.4809112548828125e-05, -5.9604644775390625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.9795036315917969, -0.0001583099365234375, -4.768370445162873e-07, -5.5788495956221595e-05, -4.661003913497552e-05, 0.0, -0.9141712188720703, 0.0, -0.20995521545410156, -1.9073486328125e-06, -2.641512870788574, -9.5367431640625e-06, -0.00048065185546875, 0.0, -0.0001811981201171875, 0.0, -0.009586334228515625, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.0001544952392578125, 0.0, -2.09808349609375e-05, -0.00518035888671875, -1.71661376953125e-05, -1.9073486328125e-06, -2.50339189733495e-06, -7.605546124977991e-05, 0.0, -0.0011374950408935547, -1.1920928244535389e-07, -0.0007038116455078125, -7.62939453125e-06, -0.0003232955641578883, -7.748603820800781e-06], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "charge"}], "hole2": [{"hole2": "ALL", "hole0": "Boar", "_type": "Template26", "hole3": "COMMON", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}}], "hole0": "Boar", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.ALL,\n            COMMON=[Buff(ManaChange(Attribute('health', WeaponSelector()), \n            -1))])\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -4.778772023409481, "score_history": [-6.29425048828125e-05, -1.71661376953125e-05, -0.0010640918044373393, -3.290128370281309e-05, -3.4809112548828125e-05, -5.9604644775390625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.9795036315917969, -0.0001583099365234375, -4.768370445162873e-07, -5.5788495956221595e-05, -4.661003913497552e-05, 0.0, -0.9141712188720703, 0.0, -0.20995521545410156, -1.9073486328125e-06, -0.10517311096191406, -0.002803802490234375, -0.0001964569091796875, -0.001506805419921875, -0.042397499084472656, -0.002147674560546875, -0.000232696533203125, -0.0001201629638671875, -0.0016021728515625, -0.05962181091308594, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.011860966682434082, -0.0006580352783203125, -0.000324249267578125, -0.00016021728515625, -0.000118255615234375, -1.1552728414535522, 0.0, -0.046341896057128906, -1.9073486328125e-05, -0.754452109336853, -7.867813110351562e-06, 0.0, -0.00359344482421875, -0.0001678466796875, -0.0006504058837890625, -0.000110626220703125, -3.814697265625e-06, -0.0458143949508667, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0012916326522827148, 0.0, -1.9073486328125e-06, -0.4350395202636719, -0.0005016326904296875, -5.7220458984375e-06, -2.145764938177308e-06, -5.888934538234025e-05, 0.0, -0.0009785890579223633, -1.1920928244535389e-07, -0.0002613067626953125, -9.5367431640625e-06, -4.279613131075166e-05, -1.52587890625e-05], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 19, 169, 346, 69, 291, "Mana", "Change", "<EOS>", 347, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "health", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "charge"}], "hole2": [{"hole2": "ALL", "hole0": "Boar", "_type": "Template26", "hole3": "COMMON", "hole1": 3, "hole4": {"elts": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "health", "_type": "Str"}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Call"}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ManaChange"}], "_type": "List"}}], "hole0": "Boar", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -5.308408782228284, "score_history": [-6.29425048828125e-05, -1.71661376953125e-05, -0.0010640918044373393, -3.290128370281309e-05, -3.4809112548828125e-05, -5.9604644775390625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.4716529846191406, -0.025350570678710938, -7.05718994140625e-05, -3.814697265625e-06, -9.536738616588991e-07, -3.814697265625e-06, -0.00012850759958382696, -1.1920928244535389e-07, -3.9449920654296875, -4.38690185546875e-05, -7.62939453125e-05, -6.437280717364047e-06, -2.2649765014648438e-06, -0.0003147125244140625, -7.62939453125e-06, -0.003841899335384369, -1.9073486328125e-06, -0.0001678466796875, -0.000225067138671875, -1.1444091796875e-05, -2.47955322265625e-05, -3.0517578125e-05, -1.1444091796875e-05, -4.398822784423828e-05, -5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.4332275390625e-05, 0.0, -0.000164031982421875, -2.8967857360839844e-05, -0.34430885314941406, -5.7220458984375e-06, -0.0009517669677734375, -2.47955322265625e-05, -0.0003587007522583008, -2.47955322265625e-05, -0.02945423126220703, 0.0, -7.62939453125e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -0.4749288558959961, -2.47955322265625e-05, -7.05718994140625e-05, 0.0, -0.004985809326171875, 0.0, -2.86102294921875e-05, -0.0018939971923828125, -1.71661376953125e-05, -2.0265579223632812e-06, -7.152555099310121e-07, -0.00018798658857122064, 0.0, -0.0013556480407714844, -1.1920928244535389e-07, -0.0008792877197265625, -5.7220458984375e-06, -0.00021636484598275274, -9.655952453613281e-06], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Boar", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Boar", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}]}], "hole0": "Boar", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.ALL,\n            COMMON=[Buff(ManaChange(Attribute('health', HeroSelector()), -1))])\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -5.316884306155195, "score_history": [-6.29425048828125e-05, -1.71661376953125e-05, -0.0010640918044373393, -3.290128370281309e-05, -3.4809112548828125e-05, -5.9604644775390625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.9795036315917969, -0.0001583099365234375, -4.768370445162873e-07, -5.5788495956221595e-05, -4.661003913497552e-05, 0.0, -0.9141712188720703, 0.0, -0.20995521545410156, -1.9073486328125e-06, -0.10517311096191406, -0.002803802490234375, -0.0001964569091796875, -0.001506805419921875, -0.042397499084472656, -0.002147674560546875, -0.000232696533203125, -0.0001201629638671875, -0.0016021728515625, -0.05962181091308594, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.011860966682434082, -0.0006580352783203125, -0.000324249267578125, -0.00016021728515625, -0.000118255615234375, -1.1552728414535522, 0.0, -0.046341896057128906, -1.9073486328125e-05, -1.3025392293930054, -6.4373016357421875e-06, 0.0, -0.002147674560546875, -0.0001735687255859375, -0.0006313323974609375, -0.0001087188720703125, -3.814697265625e-06, -0.049338579177856445, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0012897253036499023, 0.0, -1.9073486328125e-06, -0.4229545593261719, -0.000560760498046875, -5.7220458984375e-06, -2.145764938177308e-06, -5.733961734222248e-05, 0.0, -0.0009713172912597656, -1.1920928244535389e-07, -0.0002593994140625, -9.5367431640625e-06, -4.279613131075166e-05, -1.52587890625e-05], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 19, 169, 346, 69, 291, "Mana", "Change", "<EOS>", 347, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "health", "<EOS>", 88, 325, "Hero", "Selector", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "charge"}], "hole2": [{"hole2": "ALL", "hole0": "Boar", "_type": "Template26", "hole3": "COMMON", "hole1": 3, "hole4": {"elts": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "health", "_type": "Str"}, {"_type": "Template79", "hole0": "HeroSelector"}], "_type": "Call"}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ManaChange"}], "_type": "List"}}], "hole0": "Boar", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.ALL,\n            COMMON=[Buff(ManaChange(Attribute('health', WeaponSelector()), \n            -1))])\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score": -5.387666371487171, "score_history": [-6.29425048828125e-05, -1.71661376953125e-05, -0.0010640918044373393, -3.290128370281309e-05, -3.4809112548828125e-05, -5.9604644775390625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.9795036315917969, -0.0001583099365234375, -4.768370445162873e-07, -5.5788495956221595e-05, -4.661003913497552e-05, 0.0, -0.9141712188720703, 0.0, -0.20995521545410156, -1.9073486328125e-06, -0.10517311096191406, -0.002803802490234375, -0.0001964569091796875, -0.001506805419921875, -0.042397499084472656, -0.002147674560546875, -0.000232696533203125, -0.0001201629638671875, -0.0016021728515625, -0.05962181091308594, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.011860966682434082, -0.0006580352783203125, -0.000324249267578125, -0.00016021728515625, -0.000118255615234375, -1.1552728414535522, 0.0, -0.046341896057128906, -1.9073486328125e-05, -0.754452109336853, -7.867813110351562e-06, 0.0, -0.00359344482421875, -0.0001678466796875, -0.0006504058837890625, -0.000110626220703125, -3.814697265625e-06, -0.0458143949508667, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0012916326522827148, 0.0, -1.9073486328125e-06, -1.0448274612426758, -0.0001068115234375, -1.52587890625e-05, 0.0, -0.0008603333262726665, 0.0], "choice_history": [97, 283, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 19, 169, 346, 69, 291, "Mana", "Change", "<EOS>", 347, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "health", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 4}], "hole2": [{"hole2": "ALL", "hole0": "Boar", "_type": "Template26", "hole3": "COMMON", "hole1": 3, "hole4": {"elts": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "health", "_type": "Str"}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Call"}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ManaChange"}], "_type": "List"}}], "hole0": "Boar", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, choices=[\n            Choice(AttackMode(), Give([Buff(ChangeAttack(1))]),\n            SelfSelector()), Choice(TankMode(), Give([Buff(ChangeHealth(1))\n            ]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "beams": [{"inferred_code": "class Anodized<UNK>Cub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, divine_shield=True)\n", "score": -2.8476829069435254, "score_history": [-0.0002117156982421875, -8.7738037109375e-05, -0.008461382240056992, -0.2978017330169678, -0.004293988458812237, -0.00024577934527769685, -2.013053745031357e-06, -2.300739288330078e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.0064220428466796875, -0.0002651214599609375, -2.503394853192731e-06, -1.621246337890625e-05, -0.00020051002502441406, -8.225440979003906e-05, -0.002468705177307129, -0.5307275056838989, -3.5762791412707884e-06, 0.0, -0.013979077339172363, -1.52587890625e-05, -1.3599460124969482, 0.0, -0.0915517807006836, -5.91278076171875e-05, -8.20159912109375e-05, -1.9073486328125e-06, -0.0002689361572265625, -1.9073486328125e-06, -0.0016536712646484375, 0.0, -1.71661376953125e-05, 0.0, -0.0006943941116333008, 0.0, -1.71661376953125e-05, -0.07438945770263672, -4.76837158203125e-05, 1.1920926823449918e-07, -4.768360213347478e-06, -1.2061209417879581e-05, -2.3841855067985307e-07, -0.4511152505874634, 0.0, -0.0001735687255859375, -5.7220458984375e-06, -0.0023273229598999023, 0.0], "choice_history": [97, 283, "Anodized", "<UNK>", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "divine_shield"}], "hole2": [{"hole2": "DRUID", "hole0": "Anodized Robo Cub", "_type": "Template27", "hole3": "minion_type", "hole1": 2, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "Anodized<UNK>Cub", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Anodized<UNK>Cub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(Health(), Give([Buff(\n            ChangeHealth(2)), Buff(Health())]), SelfSelector()), Choice(\n            Health(), Give([Buff(ChangeAttack(2))]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -3.3051460837575846, "score_history": [-0.0002117156982421875, -8.7738037109375e-05, -0.008461382240056992, -0.2978017330169678, -0.004293988458812237, -0.00024577934527769685, -2.013053745031357e-06, -2.300739288330078e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.0064220428466796875, -0.0002651214599609375, -2.503394853192731e-06, -1.621246337890625e-05, -0.00020051002502441406, -8.225440979003906e-05, -0.002468705177307129, -0.5307275056838989, -3.5762791412707884e-06, 0.0, -0.013979077339172363, -1.52587890625e-05, -0.34055018424987793, -5.7220458984375e-06, -0.017450332641601562, -0.0001163482666015625, -0.0003070831298828125, -0.0029153823852539062, -0.004956245422363281, -0.00023174284433480352, -2.1457672119140625e-06, -0.440054714679718, -0.002030589384958148, -0.004886030685156584, -0.0037106561940163374, -0.003826141357421875, -0.0022869110107421875, -6.67572021484375e-05, -0.011491775512695312, -0.2969484329223633, -0.037601470947265625, -0.0002842304529622197, -0.00013327413762453943, -0.03816413879394531, -5.53131103515625e-05, -0.3357199430465698, -0.04933823272585869, -0.06255209445953369, -2.300734558957629e-05, -4.768370445162873e-07, -0.0035581588745117188, -0.007590293884277344, -0.00929343607276678, -4.1723224057932384e-06, -0.5320543646812439, -0.0009491938399150968, -0.0049970014952123165, -0.04017182067036629, -7.05718994140625e-05, -0.004085540771484375, -0.000396728515625, -0.09186744689941406, -0.031986236572265625, -0.0044994354248046875, -0.0034356878604739904, -6.318082796497038e-06, -0.04645990952849388, -0.00034981872886419296, -2.3841855067985307e-07, -0.00019810876983683556, 0.0, -0.0018326041754335165, 0.0, -0.0001010894775390625, -0.0001010894775390625, -0.0001068115234375, -5.960460498499742e-07, -1.1920928244535389e-07, -7.046051905490458e-06, 0.0], "choice_history": [97, 283, "Anodized", "<UNK>", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Health", "<EOS>", "Give", "<EOS>", 346, 48, 169, 347, 65, 278, "2", "<EOS>", 69, 290, "Health", "<EOS>", "Self", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Health", "<EOS>", "Give", "<EOS>", 346, 48, 169, 346, 66, 279, "2", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "DRUID", "hole0": "Anodized Robo Cub", "_type": "Template27", "hole3": "choices", "hole1": 2, "hole4": {"elts": [{"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Health", "hole4": [{"elts": [{"_type": "Template46", "hole0": 2}, {"_type": "Template54", "hole0": "Health"}], "_type": "List"}]}, {"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Health", "hole4": [{"elts": [{"_type": "Template47", "hole0": 2}], "_type": "List"}]}], "_type": "List"}}], "hole0": "Anodized<UNK>Cub", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Anodized<UNK>Cub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, divine_shield=True)\n", "score": -3.305896122984784, "score_history": [-0.0002117156982421875, -8.7738037109375e-05, -0.008461382240056992, -0.2978017330169678, -0.004293988458812237, -0.00024577934527769685, -2.013053745031357e-06, -2.300739288330078e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.0064220428466796875, -0.0002651214599609375, -2.503394853192731e-06, -1.621246337890625e-05, -0.00020051002502441406, -8.225440979003906e-05, -0.002468705177307129, -0.8876057863235474, -0.0003553628921508789, -0.0012302398681640625, -4.291533059586072e-06, 0.0, -0.015720486640930176, -1.9073486328125e-05, -1.350593090057373, 0.0, -0.20653724670410156, -6.67572021484375e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.000255584716796875, -1.9073486328125e-06, -0.00289154052734375, 0.0, -1.52587890625e-05, 0.0, -0.0007610321044921875, 0.0, -1.52587890625e-05, -0.0819711685180664, -4.57763671875e-05, 1.1920926823449918e-07, -4.768360213347478e-06, -1.0517425835132599e-05, -2.3841855067985307e-07, -0.4345918893814087, 0.0, -0.000171661376953125, -5.7220458984375e-06, -0.0023730993270874023, 0.0], "choice_history": [97, 283, "Anodized", "<UNK>", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Anodized", " ", "Robo", " ", "Cub", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "divine_shield"}], "hole2": [{"hole2": "DRUID", "hole0": "Anodized Robo Cub Cub", "_type": "Template27", "hole3": "minion_type", "hole1": 2, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "Anodized<UNK>Cub", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Anodized<UNK>Cub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(Health(), Give([Buff(\n            ChangeHealth(2)), Buff(Health())]), SelfSelector()), Choice(\n            Health(), Give([Buff(ChangeAttack(2))]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -3.641303963955828, "score_history": [-0.0002117156982421875, -8.7738037109375e-05, -0.008461382240056992, -0.2978017330169678, -0.004293988458812237, -0.00024577934527769685, -2.013053745031357e-06, -2.300739288330078e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.0064220428466796875, -0.0002651214599609375, -2.503394853192731e-06, -1.621246337890625e-05, -0.00020051002502441406, -8.225440979003906e-05, -0.002468705177307129, -0.8876057863235474, -0.0003553628921508789, -0.0012302398681640625, -4.291533059586072e-06, 0.0, -0.015720486640930176, -1.9073486328125e-05, -0.34804296493530273, -5.7220458984375e-06, -0.019768714904785156, -0.0001773834228515625, -0.00031280517578125, -0.0031900405883789062, -0.0050373077392578125, -0.00022542475198861212, -2.1457672119140625e-06, -0.4300823509693146, -0.0020688732620328665, -0.00573682738468051, -0.0034040422178804874, -0.0038204193115234375, -0.0019989013671875, -6.103515625e-05, -0.007854461669921875, -0.3094758987426758, -0.04098320007324219, -0.00020737342128995806, -0.00012588314712047577, -0.038346290588378906, -5.53131103515625e-05, -0.3499727249145508, -0.046626169234514236, -0.06064474582672119, -2.145763937733136e-05, -4.768370445162873e-07, -0.0027360916137695312, -0.008113861083984375, -0.008422254584729671, -4.1723224057932384e-06, -0.4797027111053467, -0.0010145752457901835, -0.004838688764721155, -0.04196527972817421, -6.4849853515625e-05, -0.0040645599365234375, -0.0003986358642578125, -0.09467029571533203, -0.032217979431152344, -0.004506111145019531, -0.003526940941810608, -6.198873961693607e-06, -0.04856538400053978, -0.0003607821126934141, -2.3841855067985307e-07, -0.00020120762928854674, 0.0, -0.001835107570514083, 0.0, -0.0001010894775390625, -0.0001010894775390625, -0.0001068115234375, -5.960460498499742e-07, -1.1920928244535389e-07, -6.688496796414256e-06, 0.0], "choice_history": [97, 283, "Anodized", "<UNK>", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Anodized", " ", "Robo", " ", "Cub", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Health", "<EOS>", "Give", "<EOS>", 346, 48, 169, 347, 65, 278, "2", "<EOS>", 69, 290, "Health", "<EOS>", "Self", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Health", "<EOS>", "Give", "<EOS>", 346, 48, 169, 346, 66, 279, "2", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "DRUID", "hole0": "Anodized Robo Cub Cub", "_type": "Template27", "hole3": "choices", "hole1": 2, "hole4": {"elts": [{"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Health", "hole4": [{"elts": [{"_type": "Template46", "hole0": 2}, {"_type": "Template54", "hole0": "Health"}], "_type": "List"}]}, {"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Health", "hole4": [{"elts": [{"_type": "Template47", "hole0": 2}], "_type": "List"}]}], "_type": "List"}}], "hole0": "Anodized<UNK>Cub", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, divine_shield=True)\n", "score": -3.9073783891975538, "score_history": [-0.0002117156982421875, -8.7738037109375e-05, -0.008461382240056992, -1.357497215270996, -0.004293988458812237, -0.00024577934527769685, -2.013053745031357e-06, -2.300739288330078e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.0064220428466796875, -0.0002651214599609375, -2.503394853192731e-06, -1.621246337890625e-05, -0.00020051002502441406, -8.225440979003906e-05, -0.002468705177307129, -0.5307275056838989, -3.5762791412707884e-06, 0.0, -0.013979077339172363, -1.52587890625e-05, -1.3599460124969482, 0.0, -0.0915517807006836, -5.91278076171875e-05, -8.20159912109375e-05, -1.9073486328125e-06, -0.0002689361572265625, -1.9073486328125e-06, -0.0016536712646484375, 0.0, -1.71661376953125e-05, 0.0, -0.0006943941116333008, 0.0, -1.71661376953125e-05, -0.07438945770263672, -4.76837158203125e-05, 1.1920926823449918e-07, -4.768360213347478e-06, -1.2061209417879581e-05, -2.3841855067985307e-07, -0.4511152505874634, 0.0, -0.0001735687255859375, -5.7220458984375e-06, -0.0023273229598999023, 0.0], "choice_history": [97, 283, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "divine_shield"}], "hole2": [{"hole2": "DRUID", "hole0": "Anodized Robo Cub", "_type": "Template27", "hole3": "minion_type", "hole1": 2, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "AnodizedRoboCub", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Anodized<UNK>Cub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score": -3.921913935500349, "score_history": [-0.0002117156982421875, -8.7738037109375e-05, -0.008461382240056992, -0.2978017330169678, -0.004293988458812237, -0.00024577934527769685, -2.013053745031357e-06, -2.300739288330078e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.0064220428466796875, -0.0002651214599609375, -2.503394853192731e-06, -1.621246337890625e-05, -0.00020051002502441406, -8.225440979003906e-05, -0.002468705177307129, -0.5307275056838989, -3.5762791412707884e-06, 0.0, -0.013979077339172363, -1.52587890625e-05, -1.3599460124969482, 0.0, -0.0915517807006836, -5.91278076171875e-05, -8.20159912109375e-05, -1.9073486328125e-06, -0.0002689361572265625, -1.9073486328125e-06, -0.0016536712646484375, 0.0, -1.71661376953125e-05, 0.0, -0.0006943941116333008, 0.0, -1.71661376953125e-05, -0.07438945770263672, -4.76837158203125e-05, 1.1920926823449918e-07, -4.768360213347478e-06, -1.2061209417879581e-05, -2.3841855067985307e-07, -1.5246464014053345, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -0.0031282901763916016, 0.0], "choice_history": [97, 283, "Anodized", "<UNK>", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "taunt"}], "hole2": [{"hole2": "DRUID", "hole0": "Anodized Robo Cub", "_type": "Template27", "hole3": "minion_type", "hole1": 2, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "Anodized<UNK>Cub", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Anodized<UNK>Cub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(Health(), Give([Buff(\n            ChangeHealth(2)), Buff(2())]), SelfSelector()), Choice(Health(),\n            Give([Buff(ChangeAttack(2))]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -4.183399700261383, "score_history": [-0.0002117156982421875, -8.7738037109375e-05, -0.008461382240056992, -0.2978017330169678, -0.004293988458812237, -0.00024577934527769685, -2.013053745031357e-06, -2.300739288330078e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.0064220428466796875, -0.0002651214599609375, -2.503394853192731e-06, -1.621246337890625e-05, -0.00020051002502441406, -8.225440979003906e-05, -0.002468705177307129, -0.5307275056838989, -3.5762791412707884e-06, 0.0, -0.013979077339172363, -1.52587890625e-05, -0.34055018424987793, -5.7220458984375e-06, -0.017450332641601562, -0.0001163482666015625, -0.0003070831298828125, -0.0029153823852539062, -0.004956245422363281, -0.00023174284433480352, -2.1457672119140625e-06, -0.440054714679718, -0.002030589384958148, -0.004886030685156584, -0.0037106561940163374, -0.003826141357421875, -0.0022869110107421875, -6.67572021484375e-05, -0.011491775512695312, -0.2969484329223633, -0.037601470947265625, -0.0002842304529622197, -0.00013327413762453943, -0.03816413879394531, -5.53131103515625e-05, -1.3473185300827026, -0.007388301659375429, -0.029647231101989746, -1.835809598560445e-05, -7.152555099310121e-07, -0.0020656585693359375, -0.004650115966796875, -0.009000656194984913, -5.125993993715383e-06, -0.46906909346580505, -0.0007207248127087951, -0.005952336359769106, -0.03795928135514259, -6.103515625e-05, -0.002552032470703125, -0.000217437744140625, -0.08730316162109375, -0.039764404296875, -0.004731178283691406, -0.004132243804633617, -6.794917680963408e-06, -0.054875366389751434, -0.0002700922777876258, -2.3841855067985307e-07, -0.00017760803166311234, 0.0, -0.001815318944863975, 0.0, -0.0001010894775390625, -0.0001010894775390625, -9.72747802734375e-05, -7.152552257139178e-07, -1.1920928244535389e-07, -7.880720659159124e-06, 0.0], "choice_history": [97, 283, "Anodized", "<UNK>", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Health", "<EOS>", "Give", "<EOS>", 346, 48, 169, 347, 65, 278, "2", "<EOS>", 69, 290, "2", "<EOS>", "Self", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Health", "<EOS>", "Give", "<EOS>", 346, 48, 169, 346, 66, 279, "2", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "DRUID", "hole0": "Anodized Robo Cub", "_type": "Template27", "hole3": "choices", "hole1": 2, "hole4": {"elts": [{"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Health", "hole4": [{"elts": [{"_type": "Template46", "hole0": 2}, {"_type": "Template54", "hole0": "2"}], "_type": "List"}]}, {"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Health", "hole4": [{"elts": [{"_type": "Template47", "hole0": 2}], "_type": "List"}]}], "_type": "List"}}], "hole0": "Anodized<UNK>Cub", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(Health(), Give([Buff(\n            ChangeHealth(2)), Buff(Health())]), SelfSelector()), Choice(\n            Health(), Give([Buff(ChangeAttack(2))]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -4.364841566011613, "score_history": [-0.0002117156982421875, -8.7738037109375e-05, -0.008461382240056992, -1.357497215270996, -0.004293988458812237, -0.00024577934527769685, -2.013053745031357e-06, -2.300739288330078e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.0064220428466796875, -0.0002651214599609375, -2.503394853192731e-06, -1.621246337890625e-05, -0.00020051002502441406, -8.225440979003906e-05, -0.002468705177307129, -0.5307275056838989, -3.5762791412707884e-06, 0.0, -0.013979077339172363, -1.52587890625e-05, -0.34055018424987793, -5.7220458984375e-06, -0.017450332641601562, -0.0001163482666015625, -0.0003070831298828125, -0.0029153823852539062, -0.004956245422363281, -0.00023174284433480352, -2.1457672119140625e-06, -0.440054714679718, -0.002030589384958148, -0.004886030685156584, -0.0037106561940163374, -0.003826141357421875, -0.0022869110107421875, -6.67572021484375e-05, -0.011491775512695312, -0.2969484329223633, -0.037601470947265625, -0.0002842304529622197, -0.00013327413762453943, -0.03816413879394531, -5.53131103515625e-05, -0.3357199430465698, -0.04933823272585869, -0.06255209445953369, -2.300734558957629e-05, -4.768370445162873e-07, -0.0035581588745117188, -0.007590293884277344, -0.00929343607276678, -4.1723224057932384e-06, -0.5320543646812439, -0.0009491938399150968, -0.0049970014952123165, -0.04017182067036629, -7.05718994140625e-05, -0.004085540771484375, -0.000396728515625, -0.09186744689941406, -0.031986236572265625, -0.0044994354248046875, -0.0034356878604739904, -6.318082796497038e-06, -0.04645990952849388, -0.00034981872886419296, -2.3841855067985307e-07, -0.00019810876983683556, 0.0, -0.0018326041754335165, 0.0, -0.0001010894775390625, -0.0001010894775390625, -0.0001068115234375, -5.960460498499742e-07, -1.1920928244535389e-07, -7.046051905490458e-06, 0.0], "choice_history": [97, 283, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Health", "<EOS>", "Give", "<EOS>", 346, 48, 169, 347, 65, 278, "2", "<EOS>", 69, 290, "Health", "<EOS>", "Self", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Health", "<EOS>", "Give", "<EOS>", 346, 48, 169, 346, 66, 279, "2", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "DRUID", "hole0": "Anodized Robo Cub", "_type": "Template27", "hole3": "choices", "hole1": 2, "hole4": {"elts": [{"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Health", "hole4": [{"elts": [{"_type": "Template46", "hole0": 2}, {"_type": "Template54", "hole0": "Health"}], "_type": "List"}]}, {"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Health", "hole4": [{"elts": [{"_type": "Template47", "hole0": 2}], "_type": "List"}]}], "_type": "List"}}], "hole0": "AnodizedRoboCub", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, divine_shield=True)\n", "score": -4.365591605238812, "score_history": [-0.0002117156982421875, -8.7738037109375e-05, -0.008461382240056992, -1.357497215270996, -0.004293988458812237, -0.00024577934527769685, -2.013053745031357e-06, -2.300739288330078e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.0064220428466796875, -0.0002651214599609375, -2.503394853192731e-06, -1.621246337890625e-05, -0.00020051002502441406, -8.225440979003906e-05, -0.002468705177307129, -0.8876057863235474, -0.0003553628921508789, -0.0012302398681640625, -4.291533059586072e-06, 0.0, -0.015720486640930176, -1.9073486328125e-05, -1.350593090057373, 0.0, -0.20653724670410156, -6.67572021484375e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.000255584716796875, -1.9073486328125e-06, -0.00289154052734375, 0.0, -1.52587890625e-05, 0.0, -0.0007610321044921875, 0.0, -1.52587890625e-05, -0.0819711685180664, -4.57763671875e-05, 1.1920926823449918e-07, -4.768360213347478e-06, -1.0517425835132599e-05, -2.3841855067985307e-07, -0.4345918893814087, 0.0, -0.000171661376953125, -5.7220458984375e-06, -0.0023730993270874023, 0.0], "choice_history": [97, 283, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Anodized", " ", "Robo", " ", "Cub", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "divine_shield"}], "hole2": [{"hole2": "DRUID", "hole0": "Anodized Robo Cub Cub", "_type": "Template27", "hole3": "minion_type", "hole1": 2, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "AnodizedRoboCub", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Anodized<UNK>Cub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(Attack(), Give([Buff(\n            ChangeHealth(2)), Buff(Health())]), SelfSelector()), Choice(\n            Health(), Give([Buff(ChangeAttack(2))]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -4.377304129581567, "score_history": [-0.0002117156982421875, -8.7738037109375e-05, -0.008461382240056992, -0.2978017330169678, -0.004293988458812237, -0.00024577934527769685, -2.013053745031357e-06, -2.300739288330078e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.0064220428466796875, -0.0002651214599609375, -2.503394853192731e-06, -1.621246337890625e-05, -0.00020051002502441406, -8.225440979003906e-05, -0.002468705177307129, -0.5307275056838989, -3.5762791412707884e-06, 0.0, -0.013979077339172363, -1.52587890625e-05, -0.34055018424987793, -5.7220458984375e-06, -0.017450332641601562, -0.0001163482666015625, -0.0003070831298828125, -0.0029153823852539062, -0.004956245422363281, -0.00023174284433480352, -2.1457672119140625e-06, -1.3564101457595825, -0.00020945050346199423, -0.0026654901448637247, -0.0030145940836519003, -0.00045013427734375, -0.0031938552856445312, -6.29425048828125e-05, -0.11374282836914062, -0.3680143356323242, -0.03813934326171875, -0.00033209071261808276, -0.00012230718857608736, -0.03800010681152344, -5.7220458984375e-05, -0.34292352199554443, -0.04693475365638733, -0.057205796241760254, -2.2768930648453534e-05, -3.576278118089249e-07, -0.003490447998046875, -0.007365226745605469, -0.00882029440253973, -4.29153169534402e-06, -0.5209977626800537, -0.001037444337271154, -0.005045995581895113, -0.04128542169928551, -7.05718994140625e-05, -0.0039997100830078125, -0.000392913818359375, -0.09217453002929688, -0.0317230224609375, -0.0044727325439453125, -0.0035805453080683947, -6.079665126890177e-06, -0.046778079122304916, -0.0003603054501581937, -2.3841855067985307e-07, -0.00019715527014341205, 0.0, -0.0018342732219025493, 0.0, -0.0001010894775390625, -0.0001010894775390625, -0.0001068115234375, -5.960460498499742e-07, -1.1920928244535389e-07, -7.284455932676792e-06, 0.0], "choice_history": [97, 283, "Anodized", "<UNK>", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Attack", "<EOS>", "Give", "<EOS>", 346, 48, 169, 347, 65, 278, "2", "<EOS>", 69, 290, "Health", "<EOS>", "Self", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Health", "<EOS>", "Give", "<EOS>", 346, 48, 169, 346, 66, 279, "2", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "DRUID", "hole0": "Anodized Robo Cub", "_type": "Template27", "hole3": "choices", "hole1": 2, "hole4": {"elts": [{"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Attack", "hole4": [{"elts": [{"_type": "Template46", "hole0": 2}, {"_type": "Template54", "hole0": "Health"}], "_type": "List"}]}, {"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Health", "hole4": [{"elts": [{"_type": "Template47", "hole0": 2}], "_type": "List"}]}], "_type": "List"}}], "hole0": "Anodized<UNK>Cub", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Anodized<UNK>Cub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score": -4.390661438040631, "score_history": [-0.0002117156982421875, -8.7738037109375e-05, -0.008461382240056992, -0.2978017330169678, -0.004293988458812237, -0.00024577934527769685, -2.013053745031357e-06, -2.300739288330078e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.0064220428466796875, -0.0002651214599609375, -2.503394853192731e-06, -1.621246337890625e-05, -0.00020051002502441406, -8.225440979003906e-05, -0.002468705177307129, -0.8876057863235474, -0.0003553628921508789, -0.0012302398681640625, -4.291533059586072e-06, 0.0, -0.015720486640930176, -1.9073486328125e-05, -1.350593090057373, 0.0, -0.20653724670410156, -6.67572021484375e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.000255584716796875, -1.9073486328125e-06, -0.00289154052734375, 0.0, -1.52587890625e-05, 0.0, -0.0007610321044921875, 0.0, -1.52587890625e-05, -0.0819711685180664, -4.57763671875e-05, 1.1920926823449918e-07, -4.768360213347478e-06, -1.0517425835132599e-05, -2.3841855067985307e-07, -1.518527626991272, 0.0, -6.67572021484375e-05, -9.5367431640625e-06, -0.0033037662506103516, 0.0], "choice_history": [97, 283, "Anodized", "<UNK>", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Anodized", " ", "Robo", " ", "Cub", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "taunt"}], "hole2": [{"hole2": "DRUID", "hole0": "Anodized Robo Cub Cub", "_type": "Template27", "hole3": "minion_type", "hole1": 2, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "Anodized<UNK>Cub", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Anodized<UNK>Cub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(Health(), Give([Buff(\n            ChangeHealth(2)), Buff(2())]), SelfSelector()), Choice(Health(),\n            Give([Buff(ChangeAttack(2))]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -4.496701279595605, "score_history": [-0.0002117156982421875, -8.7738037109375e-05, -0.008461382240056992, -0.2978017330169678, -0.004293988458812237, -0.00024577934527769685, -2.013053745031357e-06, -2.300739288330078e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.0064220428466796875, -0.0002651214599609375, -2.503394853192731e-06, -1.621246337890625e-05, -0.00020051002502441406, -8.225440979003906e-05, -0.002468705177307129, -0.8876057863235474, -0.0003553628921508789, -0.0012302398681640625, -4.291533059586072e-06, 0.0, -0.015720486640930176, -1.9073486328125e-05, -0.34804296493530273, -5.7220458984375e-06, -0.019768714904785156, -0.0001773834228515625, -0.00031280517578125, -0.0031900405883789062, -0.0050373077392578125, -0.00022542475198861212, -2.1457672119140625e-06, -0.4300823509693146, -0.0020688732620328665, -0.00573682738468051, -0.0034040422178804874, -0.0038204193115234375, -0.0019989013671875, -6.103515625e-05, -0.007854461669921875, -0.3094758987426758, -0.04098320007324219, -0.00020737342128995806, -0.00012588314712047577, -0.038346290588378906, -5.53131103515625e-05, -1.3090516328811646, -0.007170775439590216, -0.03105318546295166, -1.5854737284826115e-05, -5.960462772236497e-07, -0.0018014907836914062, -0.004878044128417969, -0.008428332395851612, -5.125993993715383e-06, -0.4415757656097412, -0.0007709941128268838, -0.00563142029568553, -0.039491210132837296, -5.7220458984375e-05, -0.0025701522827148438, -0.00022125244140625, -0.08886051177978516, -0.03970623016357422, -0.004748344421386719, -0.004248371347784996, -6.675708846159978e-06, -0.057318322360515594, -0.00028081817436031997, -2.3841855067985307e-07, -0.00018273317255079746, 0.0, -0.0018119809683412313, 0.0, -0.0001010894775390625, -0.0001010894775390625, -9.72747802734375e-05, -7.152552257139178e-07, -1.1920928244535389e-07, -7.642345735803246e-06, 0.0], "choice_history": [97, 283, "Anodized", "<UNK>", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Anodized", " ", "Robo", " ", "Cub", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Health", "<EOS>", "Give", "<EOS>", 346, 48, 169, 347, 65, 278, "2", "<EOS>", 69, 290, "2", "<EOS>", "Self", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Health", "<EOS>", "Give", "<EOS>", 346, 48, 169, 346, 66, 279, "2", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "DRUID", "hole0": "Anodized Robo Cub Cub", "_type": "Template27", "hole3": "choices", "hole1": 2, "hole4": {"elts": [{"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Health", "hole4": [{"elts": [{"_type": "Template46", "hole0": 2}, {"_type": "Template54", "hole0": "2"}], "_type": "List"}]}, {"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Health", "hole4": [{"elts": [{"_type": "Template47", "hole0": 2}], "_type": "List"}]}], "_type": "List"}}], "hole0": "Anodized<UNK>Cub", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Anodized<UNK>Cub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(Health(), Give([Buff(\n            ChangeHealth(2)), Buff(Health())]), SelfSelector()), Choice(\n            BearForm(), Transform(BearRobo()), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -4.653630349864095, "score_history": [-0.0002117156982421875, -8.7738037109375e-05, -0.008461382240056992, -0.2978017330169678, -0.004293988458812237, -0.00024577934527769685, -2.013053745031357e-06, -2.300739288330078e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.0064220428466796875, -0.0002651214599609375, -2.503394853192731e-06, -1.621246337890625e-05, -0.00020051002502441406, -8.225440979003906e-05, -0.002468705177307129, -0.5307275056838989, -3.5762791412707884e-06, 0.0, -0.013979077339172363, -1.52587890625e-05, -0.34055018424987793, -5.7220458984375e-06, -0.017450332641601562, -0.0001163482666015625, -0.0003070831298828125, -0.0029153823852539062, -0.004956245422363281, -0.00023174284433480352, -2.1457672119140625e-06, -0.440054714679718, -0.002030589384958148, -0.004886030685156584, -0.0037106561940163374, -0.003826141357421875, -0.0022869110107421875, -6.67572021484375e-05, -0.011491775512695312, -0.2969484329223633, -0.037601470947265625, -0.0002842304529622197, -0.00013327413762453943, -0.03816413879394531, -5.53131103515625e-05, -0.3357199430465698, -0.04933823272585869, -0.06255209445953369, -2.300734558957629e-05, -4.768370445162873e-07, -0.0035581588745117188, -0.007590293884277344, -0.00929343607276678, -4.1723224057932384e-06, -1.7531061172485352, -0.03785945847630501, -7.748573807475623e-06, -0.004674671683460474, -0.0009283302933908999, -0.00022125244140625, -0.007075309753417969, -1.9073486328125e-05, -0.21236275136470795, -0.08164321631193161, -9.59634780883789e-05, -0.013409136794507504, -9.536738616588991e-07, 0.0, -8.53520177770406e-05, -3.814697265625e-06, -0.0003230571746826172, 0.0, -5.91278076171875e-05, -0.0001964569091796875, -8.392333984375e-05, -5.960461066933931e-07, -1.1920928244535389e-07, -5.613444955088198e-06, 0.0], "choice_history": [97, 283, "Anodized", "<UNK>", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Health", "<EOS>", "Give", "<EOS>", 346, 48, 169, 347, 65, 278, "2", "<EOS>", 69, 290, "Health", "<EOS>", "Self", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Bear", "Form", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "Bear", "Robo", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "DRUID", "hole0": "Anodized Robo Cub", "_type": "Template27", "hole3": "choices", "hole1": 2, "hole4": {"elts": [{"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Health", "hole4": [{"elts": [{"_type": "Template46", "hole0": 2}, {"_type": "Template54", "hole0": "Health"}], "_type": "List"}]}, {"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Transform", "hole1": "BearForm", "hole4": [{"_type": "Template79", "hole0": "BearRobo"}]}], "_type": "List"}}], "hole0": "Anodized<UNK>Cub", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(Health(), Give([Buff(\n            ChangeHealth(2)), Buff(Health())]), SelfSelector()), Choice(\n            Health(), Give([Buff(ChangeAttack(2))]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -4.700999446209856, "score_history": [-0.0002117156982421875, -8.7738037109375e-05, -0.008461382240056992, -1.357497215270996, -0.004293988458812237, -0.00024577934527769685, -2.013053745031357e-06, -2.300739288330078e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.0064220428466796875, -0.0002651214599609375, -2.503394853192731e-06, -1.621246337890625e-05, -0.00020051002502441406, -8.225440979003906e-05, -0.002468705177307129, -0.8876057863235474, -0.0003553628921508789, -0.0012302398681640625, -4.291533059586072e-06, 0.0, -0.015720486640930176, -1.9073486328125e-05, -0.34804296493530273, -5.7220458984375e-06, -0.019768714904785156, -0.0001773834228515625, -0.00031280517578125, -0.0031900405883789062, -0.0050373077392578125, -0.00022542475198861212, -2.1457672119140625e-06, -0.4300823509693146, -0.0020688732620328665, -0.00573682738468051, -0.0034040422178804874, -0.0038204193115234375, -0.0019989013671875, -6.103515625e-05, -0.007854461669921875, -0.3094758987426758, -0.04098320007324219, -0.00020737342128995806, -0.00012588314712047577, -0.038346290588378906, -5.53131103515625e-05, -0.3499727249145508, -0.046626169234514236, -0.06064474582672119, -2.145763937733136e-05, -4.768370445162873e-07, -0.0027360916137695312, -0.008113861083984375, -0.008422254584729671, -4.1723224057932384e-06, -0.4797027111053467, -0.0010145752457901835, -0.004838688764721155, -0.04196527972817421, -6.4849853515625e-05, -0.0040645599365234375, -0.0003986358642578125, -0.09467029571533203, -0.032217979431152344, -0.004506111145019531, -0.003526940941810608, -6.198873961693607e-06, -0.04856538400053978, -0.0003607821126934141, -2.3841855067985307e-07, -0.00020120762928854674, 0.0, -0.001835107570514083, 0.0, -0.0001010894775390625, -0.0001010894775390625, -0.0001068115234375, -5.960460498499742e-07, -1.1920928244535389e-07, -6.688496796414256e-06, 0.0], "choice_history": [97, 283, "Anodized", "Robo", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Anodized", " ", "Robo", " ", "Cub", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Health", "<EOS>", "Give", "<EOS>", 346, 48, 169, 347, 65, 278, "2", "<EOS>", 69, 290, "Health", "<EOS>", "Self", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Health", "<EOS>", "Give", "<EOS>", 346, 48, 169, 346, 66, 279, "2", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "DRUID", "hole0": "Anodized Robo Cub Cub", "_type": "Template27", "hole3": "choices", "hole1": 2, "hole4": {"elts": [{"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Health", "hole4": [{"elts": [{"_type": "Template46", "hole0": 2}, {"_type": "Template54", "hole0": "Health"}], "_type": "List"}]}, {"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Health", "hole4": [{"elts": [{"_type": "Template47", "hole0": 2}], "_type": "List"}]}], "_type": "List"}}], "hole0": "AnodizedRoboCub", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Anodized<UNK>Cub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=[Choice(Attack(), Give([Buff(\n            ChangeHealth(2)), Buff(Health())]), SelfSelector()), Choice(\n            Health(), Give([Buff(ChangeAttack(2))]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -4.71046785424263, "score_history": [-0.0002117156982421875, -8.7738037109375e-05, -0.008461382240056992, -0.2978017330169678, -0.004293988458812237, -0.00024577934527769685, -2.013053745031357e-06, -2.300739288330078e-05, -8.344646857949556e-07, -1.9073486328125e-06, -0.0064220428466796875, -0.0002651214599609375, -2.503394853192731e-06, -1.621246337890625e-05, -0.00020051002502441406, -8.225440979003906e-05, -0.002468705177307129, -0.8876057863235474, -0.0003553628921508789, -0.0012302398681640625, -4.291533059586072e-06, 0.0, -0.015720486640930176, -1.9073486328125e-05, -0.34804296493530273, -5.7220458984375e-06, -0.019768714904785156, -0.0001773834228515625, -0.00031280517578125, -0.0031900405883789062, -0.0050373077392578125, -0.00022542475198861212, -2.1457672119140625e-06, -1.3668010234832764, -0.00018036345136351883, -0.002852289704605937, -0.0028041277546435595, -0.0004558563232421875, -0.0029973983764648438, -6.29425048828125e-05, -0.09644031524658203, -0.369659423828125, -0.04120635986328125, -0.00022129382705315948, -0.00011873078619828448, -0.03795909881591797, -5.7220458984375e-05, -0.35807645320892334, -0.04413162171840668, -0.055460572242736816, -2.133843008778058e-05, -3.576278118089249e-07, -0.0027112960815429688, -0.007943153381347656, -0.00806355383247137, -4.29153169534402e-06, -0.46986252069473267, -0.0011055587092414498, -0.004884106572717428, -0.04310353100299835, -6.67572021484375e-05, -0.003991127014160156, -0.0003948211669921875, -0.09501075744628906, -0.031970977783203125, -0.004481315612792969, -0.003663514507934451, -6.079665126890177e-06, -0.048685308545827866, -0.0003711495373863727, -2.3841855067985307e-07, -0.00020061169925611466, 0.0, -0.0018385646399110556, 0.0, -0.0001010894775390625, -0.0001010894775390625, -0.0001068115234375, -5.960460498499742e-07, -1.1920928244535389e-07, -6.92690082360059e-06, 0.0], "choice_history": [97, 283, "Anodized", "<UNK>", "Cub", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Anodized", " ", "Robo", " ", "Cub", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 19, 169, 347, 61, 242, "Choice", "<EOS>", "Attack", "<EOS>", "Give", "<EOS>", 346, 48, 169, 347, 65, 278, "2", "<EOS>", 69, 290, "Health", "<EOS>", "Self", "Selector", "<EOS>", 61, 242, "Choice", "<EOS>", "Health", "<EOS>", "Give", "<EOS>", 346, 48, 169, 346, 66, 279, "2", "<EOS>", "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "DRUID", "hole0": "Anodized Robo Cub Cub", "_type": "Template27", "hole3": "choices", "hole1": 2, "hole4": {"elts": [{"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Attack", "hole4": [{"elts": [{"_type": "Template46", "hole0": 2}, {"_type": "Template54", "hole0": "Health"}], "_type": "List"}]}, {"hole6": "SelfSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Give", "hole1": "Health", "hole4": [{"elts": [{"_type": "Template47", "hole0": 2}], "_type": "List"}]}], "_type": "List"}}], "hole0": "Anodized<UNK>Cub", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, False, effects=[Effect(Drawn(), ActionTag(\n            Damage(10), HeroSelector())), Effect(Drawn(), ActionTag(Discard\n            (query=CardQuery(source=CARD_SOURCE.LAST_DRAWN)),\n            PlayerSelector())), Effect(Drawn(), ActionTag(Draw(),\n            PlayerSelector()))])\n\n    def use(self, player, game):\n        super().use(player, game)\n", "beams": [{"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.LEGENDARY, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        player.<UNK> = True\n", "score": -5.9050274240039045, "score_history": [-0.0002574920654296875, -0.00079345703125, -0.0002431573811918497, -0.0003685271949507296, -0.0023340368643403053, -5.9604444686556235e-06, -0.00010251977801090106, -8.106222594506107e-06, -3.814697265625e-05, -0.6340188980102539, -0.09019851684570312, -2.86102294921875e-05, 0.0, -4.41074053014745e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001850128173828125, -0.00014495849609375, -0.0001220703125, -8.344391244463623e-05, -4.9591064453125e-05, -0.000769089674577117, -0.0014747381210327148, -2.09808349609375e-05, -5.7220458984375e-06, -2.384185791015625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004423260688781738, -1.9073486328125e-06, -4.1961669921875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.012401580810546875, 0.0, -0.022130966186523438, -0.08267402648925781, -1.9073486328125e-06, -0.2768239974975586, -0.0001125335693359375, -0.019439697265625, -5.340576171875e-05, -0.0002765655517578125, 0.0, -2.09808349609375e-05, 0.0, -0.0003205537796020508, -8.821487426757812e-05, -6.67572021484375e-05, -5.7220458984375e-06, -0.7027465105056763, -2.288818359375e-05, -0.000110626220703125, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0002899169921875, -3.4332275390625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.36051464080810547, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001659393310546875, -0.0003070831298828125, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -8.83340835571289e-05, -1.1920928244535389e-07, -0.010296821594238281, -2.86102294921875e-05, -0.0030040740966796875, 0.0, -0.0034694671630859375, 0.0, -0.0028400421142578125, -4.0531158447265625e-06, -0.004570960998535156, -1.1920928244535389e-07, -0.2786470651626587, 0.0, -0.00075531005859375, -0.10083770751953125, -0.0014801025390625, -0.0016765594482421875, 0.0, -0.0009473562240600586, 0.0, -0.03764009475708008, -0.40930473804473877, -0.22026191651821136, -0.008709114044904709, -4.9591064453125e-05, -0.000499725341796875, -0.004463315010070801, -3.159046173095703e-05, -0.060797691345214844, -7.62939453125e-06, -3.814697265625e-06, -0.11948490142822266, -1.9073486328125e-06, -0.05826282501220703, 0.0, -0.38935232162475586, -2.3841855067985307e-07, -1.2718454599380493, 0.0, -0.6992979049682617, -0.00128936767578125, -8.022785186767578e-05, -1.9073486328125e-06], "choice_history": [97, 285, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Burrowing", " ", "Mine", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "explodes", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "player", "<EOS>", "<UNK>", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "BurrowingMine", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "Assign", "targets": [{"value": {"id": "player", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.LEGENDARY, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        player.<UNK> = 0\n", "score": -6.421042476799315, "score_history": [-0.0002574920654296875, -0.00079345703125, -0.0002431573811918497, -0.0003685271949507296, -0.0023340368643403053, -5.9604444686556235e-06, -0.00010251977801090106, -8.106222594506107e-06, -3.814697265625e-05, -0.6340188980102539, -0.09019851684570312, -2.86102294921875e-05, 0.0, -4.41074053014745e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001850128173828125, -0.00014495849609375, -0.0001220703125, -8.344391244463623e-05, -4.9591064453125e-05, -0.000769089674577117, -0.0014747381210327148, -2.09808349609375e-05, -5.7220458984375e-06, -2.384185791015625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004423260688781738, -1.9073486328125e-06, -4.1961669921875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.012401580810546875, 0.0, -0.022130966186523438, -0.08267402648925781, -1.9073486328125e-06, -0.2768239974975586, -0.0001125335693359375, -0.019439697265625, -5.340576171875e-05, -0.0002765655517578125, 0.0, -2.09808349609375e-05, 0.0, -0.0003205537796020508, -8.821487426757812e-05, -6.67572021484375e-05, -5.7220458984375e-06, -0.7027465105056763, -2.288818359375e-05, -0.000110626220703125, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0002899169921875, -3.4332275390625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.36051464080810547, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001659393310546875, -0.0003070831298828125, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -8.83340835571289e-05, -1.1920928244535389e-07, -0.010296821594238281, -2.86102294921875e-05, -0.0030040740966796875, 0.0, -0.0034694671630859375, 0.0, -0.0028400421142578125, -4.0531158447265625e-06, -0.004570960998535156, -1.1920928244535389e-07, -0.2786470651626587, 0.0, -0.00075531005859375, -0.10083770751953125, -0.0014801025390625, -0.0016765594482421875, 0.0, -0.0009473562240600586, 0.0, -0.03764009475708008, -0.40930473804473877, -0.22026191651821136, -0.008709114044904709, -4.9591064453125e-05, -0.000499725341796875, -0.004463315010070801, -3.159046173095703e-05, -0.060797691345214844, -7.62939453125e-06, -3.814697265625e-06, -0.11948490142822266, -1.9073486328125e-06, -0.05826282501220703, 0.0, -0.38935232162475586, -2.3841855067985307e-07, -1.2718454599380493, 0.0, -1.214461326599121, -0.0010395050048828125, -0.0011550188064575195, -2.86102294921875e-05], "choice_history": [97, 285, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Burrowing", " ", "Mine", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "explodes", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "player", "<EOS>", "<UNK>", "<EOS>", 23, 179, "0", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "BurrowingMine", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"value": {"n": 0, "_type": "Num"}, "_type": "Assign", "targets": [{"value": {"id": "player", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.LEGENDARY, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        player.hand = True\n", "score": -6.494471107628172, "score_history": [-0.0002574920654296875, -0.00079345703125, -0.0002431573811918497, -0.0003685271949507296, -0.0023340368643403053, -5.9604444686556235e-06, -0.00010251977801090106, -8.106222594506107e-06, -3.814697265625e-05, -0.6340188980102539, -0.09019851684570312, -2.86102294921875e-05, 0.0, -4.41074053014745e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001850128173828125, -0.00014495849609375, -0.0001220703125, -8.344391244463623e-05, -4.9591064453125e-05, -0.000769089674577117, -0.0014747381210327148, -2.09808349609375e-05, -5.7220458984375e-06, -2.384185791015625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004423260688781738, -1.9073486328125e-06, -4.1961669921875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.012401580810546875, 0.0, -0.022130966186523438, -0.08267402648925781, -1.9073486328125e-06, -0.2768239974975586, -0.0001125335693359375, -0.019439697265625, -5.340576171875e-05, -0.0002765655517578125, 0.0, -2.09808349609375e-05, 0.0, -0.0003205537796020508, -8.821487426757812e-05, -6.67572021484375e-05, -5.7220458984375e-06, -0.7027465105056763, -2.288818359375e-05, -0.000110626220703125, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0002899169921875, -3.4332275390625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.36051464080810547, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001659393310546875, -0.0003070831298828125, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -8.83340835571289e-05, -1.1920928244535389e-07, -0.010296821594238281, -2.86102294921875e-05, -0.0030040740966796875, 0.0, -0.0034694671630859375, 0.0, -0.0028400421142578125, -4.0531158447265625e-06, -0.004570960998535156, -1.1920928244535389e-07, -0.2786470651626587, 0.0, -0.00075531005859375, -0.10083770751953125, -0.0014801025390625, -0.0016765594482421875, 0.0, -0.0009473562240600586, 0.0, -0.03764009475708008, -0.40930473804473877, -0.22026191651821136, -0.008709114044904709, -4.9591064453125e-05, -0.000499725341796875, -0.004463315010070801, -3.159046173095703e-05, -0.060797691345214844, -7.62939453125e-06, -3.814697265625e-06, -0.11948490142822266, -1.9073486328125e-06, -0.05826282501220703, 0.0, -0.38935232162475586, -2.3841855067985307e-07, -0.4980813264846802, -1.9073486328125e-06, -1.928269386291504, -0.13542652130126953, -0.00017559528350830078, -3.814697265625e-06], "choice_history": [97, 285, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Burrowing", " ", "Mine", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "explodes", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "BurrowingMine", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "Assign", "targets": [{"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.LEGENDARY, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        player.hand = type\n", "score": -6.504736338607884, "score_history": [-0.0002574920654296875, -0.00079345703125, -0.0002431573811918497, -0.0003685271949507296, -0.0023340368643403053, -5.9604444686556235e-06, -0.00010251977801090106, -8.106222594506107e-06, -3.814697265625e-05, -0.6340188980102539, -0.09019851684570312, -2.86102294921875e-05, 0.0, -4.41074053014745e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001850128173828125, -0.00014495849609375, -0.0001220703125, -8.344391244463623e-05, -4.9591064453125e-05, -0.000769089674577117, -0.0014747381210327148, -2.09808349609375e-05, -5.7220458984375e-06, -2.384185791015625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004423260688781738, -1.9073486328125e-06, -4.1961669921875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.012401580810546875, 0.0, -0.022130966186523438, -0.08267402648925781, -1.9073486328125e-06, -0.2768239974975586, -0.0001125335693359375, -0.019439697265625, -5.340576171875e-05, -0.0002765655517578125, 0.0, -2.09808349609375e-05, 0.0, -0.0003205537796020508, -8.821487426757812e-05, -6.67572021484375e-05, -5.7220458984375e-06, -0.7027465105056763, -2.288818359375e-05, -0.000110626220703125, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0002899169921875, -3.4332275390625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.36051464080810547, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001659393310546875, -0.0003070831298828125, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -8.83340835571289e-05, -1.1920928244535389e-07, -0.010296821594238281, -2.86102294921875e-05, -0.0030040740966796875, 0.0, -0.0034694671630859375, 0.0, -0.0028400421142578125, -4.0531158447265625e-06, -0.004570960998535156, -1.1920928244535389e-07, -0.2786470651626587, 0.0, -0.00075531005859375, -0.10083770751953125, -0.0014801025390625, -0.0016765594482421875, 0.0, -0.0009473562240600586, 0.0, -0.03764009475708008, -0.40930473804473877, -0.22026191651821136, -0.008709114044904709, -4.9591064453125e-05, -0.000499725341796875, -0.004463315010070801, -3.159046173095703e-05, -0.060797691345214844, -7.62939453125e-06, -3.814697265625e-06, -0.11948490142822266, -1.9073486328125e-06, -0.05826282501220703, 0.0, -0.38935232162475586, -2.3841855067985307e-07, -0.4980813264846802, -1.9073486328125e-06, -0.2493448257446289, -3.814697265625e-06, -1.824761152267456, -3.0755843908991665e-05], "choice_history": [97, 285, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Burrowing", " ", "Mine", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "explodes", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 21, 174, "type", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "BurrowingMine", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"value": {"id": "type", "_type": "Name"}, "_type": "Assign", "targets": [{"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.LEGENDARY, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        player.<UNK> = True\n", "score": -6.526852957922941, "score_history": [-0.0002574920654296875, -0.00079345703125, -0.0002431573811918497, -0.0003685271949507296, -0.0023340368643403053, -5.9604444686556235e-06, -0.00010251977801090106, -8.106222594506107e-06, -3.814697265625e-05, -0.6340188980102539, -0.09019851684570312, -2.86102294921875e-05, 0.0, -4.41074053014745e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001850128173828125, -0.00014495849609375, -0.0001220703125, -8.344391244463623e-05, -4.9591064453125e-05, -0.000769089674577117, -0.0014747381210327148, -2.09808349609375e-05, -5.7220458984375e-06, -2.384185791015625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004423260688781738, -1.9073486328125e-06, -4.1961669921875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.012401580810546875, 0.0, -0.022130966186523438, -0.08267402648925781, -1.9073486328125e-06, -0.2768239974975586, -0.0001125335693359375, -0.019439697265625, -5.340576171875e-05, -0.0002765655517578125, 0.0, -2.09808349609375e-05, 0.0, -0.0003205537796020508, -8.821487426757812e-05, -6.67572021484375e-05, -5.7220458984375e-06, -1.2966548204421997, -0.0003757476806640625, -0.0001125335693359375, 0.0, -1.5497207641601562e-05, 0.0, -0.000347137451171875, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.37322330474853516, -3.814697265625e-05, -2.47955322265625e-05, -0.0001506805419921875, -0.0002899169921875, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -9.02414321899414e-05, -1.1920928244535389e-07, -0.010171890258789062, -2.86102294921875e-05, -0.0031070709228515625, 0.0, -0.0034465789794921875, 0.0, -0.0028085708618164062, -4.0531158447265625e-06, -0.004550933837890625, -1.1920928244535389e-07, -0.27950751781463623, 0.0, -0.0007877349853515625, -0.10140132904052734, -0.0014591217041015625, -0.0016803741455078125, 0.0, -0.0009682178497314453, 0.0, -0.03731393814086914, -0.40678322315216064, -0.2201375812292099, -0.008696197532117367, -4.9591064453125e-05, -0.000499725341796875, -0.004528164863586426, -3.159046173095703e-05, -0.061112403869628906, -7.62939453125e-06, -3.814697265625e-06, -0.11824512481689453, -1.9073486328125e-06, -0.058020591735839844, 0.0, -0.38625049591064453, -2.3841855067985307e-07, -1.2930327653884888, 0.0, -0.6987152099609375, -0.0013141632080078125, -8.213520050048828e-05, -1.9073486328125e-06], "choice_history": [97, 285, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Burrowing", " ", "Mine", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "explodes", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "player", "<EOS>", "<UNK>", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_friendly_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "BurrowingMine", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "Assign", "targets": [{"value": {"id": "player", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.LEGENDARY, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        player.hand = player\n", "score": -6.755258356236439, "score_history": [-0.0002574920654296875, -0.00079345703125, -0.0002431573811918497, -0.0003685271949507296, -0.0023340368643403053, -5.9604444686556235e-06, -0.00010251977801090106, -8.106222594506107e-06, -3.814697265625e-05, -0.6340188980102539, -0.09019851684570312, -2.86102294921875e-05, 0.0, -4.41074053014745e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001850128173828125, -0.00014495849609375, -0.0001220703125, -8.344391244463623e-05, -4.9591064453125e-05, -0.000769089674577117, -0.0014747381210327148, -2.09808349609375e-05, -5.7220458984375e-06, -2.384185791015625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004423260688781738, -1.9073486328125e-06, -4.1961669921875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.012401580810546875, 0.0, -0.022130966186523438, -0.08267402648925781, -1.9073486328125e-06, -0.2768239974975586, -0.0001125335693359375, -0.019439697265625, -5.340576171875e-05, -0.0002765655517578125, 0.0, -2.09808349609375e-05, 0.0, -0.0003205537796020508, -8.821487426757812e-05, -6.67572021484375e-05, -5.7220458984375e-06, -0.7027465105056763, -2.288818359375e-05, -0.000110626220703125, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0002899169921875, -3.4332275390625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.36051464080810547, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001659393310546875, -0.0003070831298828125, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -8.83340835571289e-05, -1.1920928244535389e-07, -0.010296821594238281, -2.86102294921875e-05, -0.0030040740966796875, 0.0, -0.0034694671630859375, 0.0, -0.0028400421142578125, -4.0531158447265625e-06, -0.004570960998535156, -1.1920928244535389e-07, -0.2786470651626587, 0.0, -0.00075531005859375, -0.10083770751953125, -0.0014801025390625, -0.0016765594482421875, 0.0, -0.0009473562240600586, 0.0, -0.03764009475708008, -0.40930473804473877, -0.22026191651821136, -0.008709114044904709, -4.9591064453125e-05, -0.000499725341796875, -0.004463315010070801, -3.159046173095703e-05, -0.060797691345214844, -7.62939453125e-06, -3.814697265625e-06, -0.11948490142822266, -1.9073486328125e-06, -0.05826282501220703, 0.0, -0.38935232162475586, -2.3841855067985307e-07, -0.4980813264846802, -1.9073486328125e-06, -0.2493448257446289, -3.814697265625e-06, -2.0753114223480225, -2.50339189733495e-06], "choice_history": [97, 285, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Burrowing", " ", "Mine", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "explodes", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 21, 174, "player", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "BurrowingMine", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"value": {"id": "player", "_type": "Name"}, "_type": "Assign", "targets": [{"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.LEGENDARY, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        player.hand[-1].player = player\n", "score": -6.84380674759835, "score_history": [-0.0002574920654296875, -0.00079345703125, -0.0002431573811918497, -0.0003685271949507296, -0.0023340368643403053, -5.9604444686556235e-06, -0.00010251977801090106, -8.106222594506107e-06, -3.814697265625e-05, -0.6340188980102539, -0.09019851684570312, -2.86102294921875e-05, 0.0, -4.41074053014745e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001850128173828125, -0.00014495849609375, -0.0001220703125, -8.344391244463623e-05, -4.9591064453125e-05, -0.000769089674577117, -0.0014747381210327148, -2.09808349609375e-05, -5.7220458984375e-06, -2.384185791015625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004423260688781738, -1.9073486328125e-06, -4.1961669921875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.012401580810546875, 0.0, -0.022130966186523438, -0.08267402648925781, -1.9073486328125e-06, -0.2768239974975586, -0.0001125335693359375, -0.019439697265625, -5.340576171875e-05, -0.0002765655517578125, 0.0, -2.09808349609375e-05, 0.0, -0.0003205537796020508, -8.821487426757812e-05, -6.67572021484375e-05, -5.7220458984375e-06, -0.7027465105056763, -2.288818359375e-05, -0.000110626220703125, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0002899169921875, -3.4332275390625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.36051464080810547, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001659393310546875, -0.0003070831298828125, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -8.83340835571289e-05, -1.1920928244535389e-07, -0.010296821594238281, -2.86102294921875e-05, -0.0030040740966796875, 0.0, -0.0034694671630859375, 0.0, -0.0028400421142578125, -4.0531158447265625e-06, -0.004570960998535156, -1.1920928244535389e-07, -0.2786470651626587, 0.0, -0.00075531005859375, -0.10083770751953125, -0.0014801025390625, -0.0016765594482421875, 0.0, -0.0009473562240600586, 0.0, -0.03764009475708008, -0.40930473804473877, -0.22026191651821136, -0.008709114044904709, -4.9591064453125e-05, -0.000499725341796875, -0.004463315010070801, -3.159046173095703e-05, -0.060797691345214844, -7.62939453125e-06, -3.814697265625e-06, -0.11948490142822266, -1.9073486328125e-06, -2.960002899169922, -0.0005512237548828125, -0.0007801055908203125, -1.9073486328125e-06, -0.0028228759765625, 0.0, -0.0014716386795043945, 0.0, -0.022295117378234863, 0.0, -0.0023517608642578125, -0.0008792877197265625, -0.2651815414428711, -0.0015239715576171875, -0.0004291534423828125, -0.0003261566162109375, -9.5367431640625e-06, -0.002043693559244275, -3.814697265625e-06, -0.022515296936035156, 0.0, -0.07433319091796875, 0.0, -0.0013856887817382812, -7.152555099310121e-07], "choice_history": [97, 285, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Burrowing", " ", "Mine", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "explodes", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 24, 185, 13, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 100, 164, 41, 331, 139, 23, 179, "1", "<EOS>", "player", "<EOS>", 21, 174, "player", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "BurrowingMine", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"value": {"id": "player", "_type": "Name"}, "_type": "Assign", "targets": [{"value": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}, "slice": {"value": {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}, "_type": "Index"}, "_type": "Subscript"}, "attr": "player", "_type": "Attribute"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.LEGENDARY, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        card.<UNK> = True\n", "score": -6.9598242389224225, "score_history": [-0.0002574920654296875, -0.00079345703125, -0.0002431573811918497, -0.0003685271949507296, -0.0023340368643403053, -5.9604444686556235e-06, -0.00010251977801090106, -8.106222594506107e-06, -3.814697265625e-05, -0.6340188980102539, -0.09019851684570312, -2.86102294921875e-05, 0.0, -4.41074053014745e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001850128173828125, -0.00014495849609375, -0.0001220703125, -8.344391244463623e-05, -4.9591064453125e-05, -0.000769089674577117, -0.0014747381210327148, -2.09808349609375e-05, -5.7220458984375e-06, -2.384185791015625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004423260688781738, -1.9073486328125e-06, -4.1961669921875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.012401580810546875, 0.0, -0.022130966186523438, -0.08267402648925781, -1.9073486328125e-06, -0.2768239974975586, -0.0001125335693359375, -0.019439697265625, -5.340576171875e-05, -0.0002765655517578125, 0.0, -2.09808349609375e-05, 0.0, -0.0003205537796020508, -8.821487426757812e-05, -6.67572021484375e-05, -5.7220458984375e-06, -0.7027465105056763, -2.288818359375e-05, -0.000110626220703125, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0002899169921875, -3.4332275390625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.36051464080810547, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001659393310546875, -0.0003070831298828125, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -8.83340835571289e-05, -1.1920928244535389e-07, -0.010296821594238281, -2.86102294921875e-05, -0.0030040740966796875, 0.0, -0.0034694671630859375, 0.0, -0.0028400421142578125, -4.0531158447265625e-06, -0.004570960998535156, -1.1920928244535389e-07, -0.2786470651626587, 0.0, -0.00075531005859375, -0.10083770751953125, -0.0014801025390625, -0.0016765594482421875, 0.0, -0.0009473562240600586, 0.0, -0.03764009475708008, -0.40930473804473877, -0.22026191651821136, -0.008709114044904709, -4.9591064453125e-05, -0.000499725341796875, -0.004463315010070801, -3.159046173095703e-05, -0.060797691345214844, -7.62939453125e-06, -3.814697265625e-06, -0.11948490142822266, -1.9073486328125e-06, -0.05826282501220703, 0.0, -3.291076421737671, -2.3841855067985307e-07, -0.00540924072265625, 0.0, -0.11994361877441406, -0.000148773193359375, -8.594989776611328e-05, 0.0], "choice_history": [97, 285, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Burrowing", " ", "Mine", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "explodes", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "card", "<EOS>", "<UNK>", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "BurrowingMine", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "Assign", "targets": [{"value": {"id": "card", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.LEGENDARY, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_powerHealth(0), self)\n        player.<UNK> = True\n", "score": -7.046908030710668, "score_history": [-0.0002574920654296875, -0.00079345703125, -0.0002431573811918497, -0.0003685271949507296, -0.0023340368643403053, -5.9604444686556235e-06, -0.00010251977801090106, -8.106222594506107e-06, -3.814697265625e-05, -0.6340188980102539, -0.09019851684570312, -2.86102294921875e-05, 0.0, -4.41074053014745e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001850128173828125, -0.00014495849609375, -0.0001220703125, -8.344391244463623e-05, -4.9591064453125e-05, -0.000769089674577117, -0.0014747381210327148, -2.09808349609375e-05, -5.7220458984375e-06, -2.384185791015625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004423260688781738, -1.9073486328125e-06, -4.1961669921875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.012401580810546875, 0.0, -0.022130966186523438, -0.08267402648925781, -1.9073486328125e-06, -0.2768239974975586, -0.0001125335693359375, -0.019439697265625, -5.340576171875e-05, -0.0002765655517578125, 0.0, -2.09808349609375e-05, 0.0, -0.0003205537796020508, -8.821487426757812e-05, -6.67572021484375e-05, -5.7220458984375e-06, -0.7027465105056763, -2.288818359375e-05, -0.000110626220703125, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0002899169921875, -3.4332275390625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.36051464080810547, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001659393310546875, -0.0003070831298828125, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -8.83340835571289e-05, -1.1920928244535389e-07, -0.010296821594238281, -2.86102294921875e-05, -0.0030040740966796875, 0.0, -0.0034694671630859375, 0.0, -0.0028400421142578125, -4.0531158447265625e-06, -0.004570960998535156, -1.1920928244535389e-07, -0.2786470651626587, 0.0, -0.00075531005859375, -0.10083770751953125, -0.0014801025390625, -0.0016765594482421875, 0.0, -0.0009473562240600586, 0.0, -0.03764009475708008, -1.272400975227356, -0.0009472981910221279, -0.4068240821361542, -0.0025841889437288046, -0.0006189346313476562, -0.000823974609375, -0.004000663757324219, -3.004073914780747e-05, -0.11999034881591797, -7.62939453125e-06, -3.814697265625e-06, -0.14509010314941406, -1.9073486328125e-06, -0.04090690612792969, 0.0, -0.45745325088500977, -2.3841855067985307e-07, -1.2512049674987793, 0.0, -0.6813163757324219, -0.00133514404296875, -8.404254913330078e-05, -1.9073486328125e-06], "choice_history": [97, 285, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Burrowing", " ", "Mine", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "Health", "<EOS>", "explodes", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "player", "<EOS>", "<UNK>", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "BurrowingMine", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_powerHealth", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "Assign", "targets": [{"value": {"id": "player", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.LEGENDARY, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        player.hand = type\n", "score": -7.094576589628971, "score_history": [-0.0002574920654296875, -0.00079345703125, -0.0002431573811918497, -0.0003685271949507296, -0.0023340368643403053, -5.9604444686556235e-06, -0.00010251977801090106, -8.106222594506107e-06, -3.814697265625e-05, -0.6340188980102539, -0.09019851684570312, -2.86102294921875e-05, 0.0, -4.41074053014745e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001850128173828125, -0.00014495849609375, -0.0001220703125, -8.344391244463623e-05, -4.9591064453125e-05, -0.000769089674577117, -0.0014747381210327148, -2.09808349609375e-05, -5.7220458984375e-06, -2.384185791015625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004423260688781738, -1.9073486328125e-06, -4.1961669921875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.012401580810546875, 0.0, -0.022130966186523438, -0.08267402648925781, -1.9073486328125e-06, -0.2768239974975586, -0.0001125335693359375, -0.019439697265625, -5.340576171875e-05, -0.0002765655517578125, 0.0, -2.09808349609375e-05, 0.0, -0.0003205537796020508, -8.821487426757812e-05, -6.67572021484375e-05, -5.7220458984375e-06, -1.2966548204421997, -0.0003757476806640625, -0.0001125335693359375, 0.0, -1.5497207641601562e-05, 0.0, -0.000347137451171875, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.37322330474853516, -3.814697265625e-05, -2.47955322265625e-05, -0.0001506805419921875, -0.0002899169921875, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -9.02414321899414e-05, -1.1920928244535389e-07, -0.010171890258789062, -2.86102294921875e-05, -0.0031070709228515625, 0.0, -0.0034465789794921875, 0.0, -0.0028085708618164062, -4.0531158447265625e-06, -0.004550933837890625, -1.1920928244535389e-07, -0.27950751781463623, 0.0, -0.0007877349853515625, -0.10140132904052734, -0.0014591217041015625, -0.0016803741455078125, 0.0, -0.0009682178497314453, 0.0, -0.03731393814086914, -0.40678322315216064, -0.2201375812292099, -0.008696197532117367, -4.9591064453125e-05, -0.000499725341796875, -0.004528164863586426, -3.159046173095703e-05, -0.061112403869628906, -7.62939453125e-06, -3.814697265625e-06, -0.11824512481689453, -1.9073486328125e-06, -0.058020591735839844, 0.0, -0.38625049591064453, -2.3841855067985307e-07, -0.48513805866241455, -1.9073486328125e-06, -0.2474050521850586, -3.814697265625e-06, -1.8282902240753174, -3.0755843908991665e-05], "choice_history": [97, 285, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Burrowing", " ", "Mine", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "explodes", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 21, 174, "type", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_friendly_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "BurrowingMine", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"value": {"id": "type", "_type": "Name"}, "_type": "Assign", "targets": [{"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.LEGENDARY, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        player.hand = True\n", "score": -7.098085753638273, "score_history": [-0.0002574920654296875, -0.00079345703125, -0.0002431573811918497, -0.0003685271949507296, -0.0023340368643403053, -5.9604444686556235e-06, -0.00010251977801090106, -8.106222594506107e-06, -3.814697265625e-05, -0.6340188980102539, -0.09019851684570312, -2.86102294921875e-05, 0.0, -4.41074053014745e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001850128173828125, -0.00014495849609375, -0.0001220703125, -8.344391244463623e-05, -4.9591064453125e-05, -0.000769089674577117, -0.0014747381210327148, -2.09808349609375e-05, -5.7220458984375e-06, -2.384185791015625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004423260688781738, -1.9073486328125e-06, -4.1961669921875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.012401580810546875, 0.0, -0.022130966186523438, -0.08267402648925781, -1.9073486328125e-06, -0.2768239974975586, -0.0001125335693359375, -0.019439697265625, -5.340576171875e-05, -0.0002765655517578125, 0.0, -2.09808349609375e-05, 0.0, -0.0003205537796020508, -8.821487426757812e-05, -6.67572021484375e-05, -5.7220458984375e-06, -1.2966548204421997, -0.0003757476806640625, -0.0001125335693359375, 0.0, -1.5497207641601562e-05, 0.0, -0.000347137451171875, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.37322330474853516, -3.814697265625e-05, -2.47955322265625e-05, -0.0001506805419921875, -0.0002899169921875, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -9.02414321899414e-05, -1.1920928244535389e-07, -0.010171890258789062, -2.86102294921875e-05, -0.0031070709228515625, 0.0, -0.0034465789794921875, 0.0, -0.0028085708618164062, -4.0531158447265625e-06, -0.004550933837890625, -1.1920928244535389e-07, -0.27950751781463623, 0.0, -0.0007877349853515625, -0.10140132904052734, -0.0014591217041015625, -0.0016803741455078125, 0.0, -0.0009682178497314453, 0.0, -0.03731393814086914, -0.40678322315216064, -0.2201375812292099, -0.008696197532117367, -4.9591064453125e-05, -0.000499725341796875, -0.004528164863586426, -3.159046173095703e-05, -0.061112403869628906, -7.62939453125e-06, -3.814697265625e-06, -0.11824512481689453, -1.9073486328125e-06, -0.058020591735839844, 0.0, -0.38625049591064453, -2.3841855067985307e-07, -0.48513805866241455, -1.9073486328125e-06, -1.9423637390136719, -0.13669586181640625, -0.00017559528350830078, -3.814697265625e-06], "choice_history": [97, 285, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Burrowing", " ", "Mine", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "explodes", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_friendly_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "BurrowingMine", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "Assign", "targets": [{"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.LEGENDARY, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        player.hand = Attribute\n", "score": -7.116510783340729, "score_history": [-0.0002574920654296875, -0.00079345703125, -0.0002431573811918497, -0.0003685271949507296, -0.0023340368643403053, -5.9604444686556235e-06, -0.00010251977801090106, -8.106222594506107e-06, -3.814697265625e-05, -0.6340188980102539, -0.09019851684570312, -2.86102294921875e-05, 0.0, -4.41074053014745e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001850128173828125, -0.00014495849609375, -0.0001220703125, -8.344391244463623e-05, -4.9591064453125e-05, -0.000769089674577117, -0.0014747381210327148, -2.09808349609375e-05, -5.7220458984375e-06, -2.384185791015625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004423260688781738, -1.9073486328125e-06, -4.1961669921875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.012401580810546875, 0.0, -0.022130966186523438, -0.08267402648925781, -1.9073486328125e-06, -0.2768239974975586, -0.0001125335693359375, -0.019439697265625, -5.340576171875e-05, -0.0002765655517578125, 0.0, -2.09808349609375e-05, 0.0, -0.0003205537796020508, -8.821487426757812e-05, -6.67572021484375e-05, -5.7220458984375e-06, -0.7027465105056763, -2.288818359375e-05, -0.000110626220703125, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0002899169921875, -3.4332275390625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.36051464080810547, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001659393310546875, -0.0003070831298828125, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -8.83340835571289e-05, -1.1920928244535389e-07, -0.010296821594238281, -2.86102294921875e-05, -0.0030040740966796875, 0.0, -0.0034694671630859375, 0.0, -0.0028400421142578125, -4.0531158447265625e-06, -0.004570960998535156, -1.1920928244535389e-07, -0.2786470651626587, 0.0, -0.00075531005859375, -0.10083770751953125, -0.0014801025390625, -0.0016765594482421875, 0.0, -0.0009473562240600586, 0.0, -0.03764009475708008, -0.40930473804473877, -0.22026191651821136, -0.008709114044904709, -4.9591064453125e-05, -0.000499725341796875, -0.004463315010070801, -3.159046173095703e-05, -0.060797691345214844, -7.62939453125e-06, -3.814697265625e-06, -0.11948490142822266, -1.9073486328125e-06, -0.05826282501220703, 0.0, -0.38935232162475586, -2.3841855067985307e-07, -0.4980813264846802, -1.9073486328125e-06, -0.2493448257446289, -3.814697265625e-06, -2.436566114425659, -2.3841855067985307e-07], "choice_history": [97, 285, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Burrowing", " ", "Mine", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "explodes", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 21, 174, "Attribute", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "BurrowingMine", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"value": {"id": "Attribute", "_type": "Name"}, "_type": "Assign", "targets": [{"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.LEGENDARY, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        player.hand = amount\n", "score": -7.132696305402035, "score_history": [-0.0002574920654296875, -0.00079345703125, -0.0002431573811918497, -0.0003685271949507296, -0.0023340368643403053, -5.9604444686556235e-06, -0.00010251977801090106, -8.106222594506107e-06, -3.814697265625e-05, -0.6340188980102539, -0.09019851684570312, -2.86102294921875e-05, 0.0, -4.41074053014745e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001850128173828125, -0.00014495849609375, -0.0001220703125, -8.344391244463623e-05, -4.9591064453125e-05, -0.000769089674577117, -0.0014747381210327148, -2.09808349609375e-05, -5.7220458984375e-06, -2.384185791015625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004423260688781738, -1.9073486328125e-06, -4.1961669921875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.012401580810546875, 0.0, -0.022130966186523438, -0.08267402648925781, -1.9073486328125e-06, -0.2768239974975586, -0.0001125335693359375, -0.019439697265625, -5.340576171875e-05, -0.0002765655517578125, 0.0, -2.09808349609375e-05, 0.0, -0.0003205537796020508, -8.821487426757812e-05, -6.67572021484375e-05, -5.7220458984375e-06, -0.7027465105056763, -2.288818359375e-05, -0.000110626220703125, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0002899169921875, -3.4332275390625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.36051464080810547, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001659393310546875, -0.0003070831298828125, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -8.83340835571289e-05, -1.1920928244535389e-07, -0.010296821594238281, -2.86102294921875e-05, -0.0030040740966796875, 0.0, -0.0034694671630859375, 0.0, -0.0028400421142578125, -4.0531158447265625e-06, -0.004570960998535156, -1.1920928244535389e-07, -0.2786470651626587, 0.0, -0.00075531005859375, -0.10083770751953125, -0.0014801025390625, -0.0016765594482421875, 0.0, -0.0009473562240600586, 0.0, -0.03764009475708008, -0.40930473804473877, -0.22026191651821136, -0.008709114044904709, -4.9591064453125e-05, -0.000499725341796875, -0.004463315010070801, -3.159046173095703e-05, -0.060797691345214844, -7.62939453125e-06, -3.814697265625e-06, -0.11948490142822266, -1.9073486328125e-06, -0.05826282501220703, 0.0, -0.38935232162475586, -2.3841855067985307e-07, -0.4980813264846802, -1.9073486328125e-06, -0.2493448257446289, -3.814697265625e-06, -2.4527440071105957, -7.867794920457527e-06], "choice_history": [97, 285, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Burrowing", " ", "Mine", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "<EOS>", "explodes", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 21, 174, "amount", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "BurrowingMine", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_power", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"value": {"id": "amount", "_type": "Name"}, "_type": "Assign", "targets": [{"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.LEGENDARY, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_powerHealth(0), self)\n        player.hand = type\n", "score": -7.6852084494280035, "score_history": [-0.0002574920654296875, -0.00079345703125, -0.0002431573811918497, -0.0003685271949507296, -0.0023340368643403053, -5.9604444686556235e-06, -0.00010251977801090106, -8.106222594506107e-06, -3.814697265625e-05, -0.6340188980102539, -0.09019851684570312, -2.86102294921875e-05, 0.0, -4.41074053014745e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001850128173828125, -0.00014495849609375, -0.0001220703125, -8.344391244463623e-05, -4.9591064453125e-05, -0.000769089674577117, -0.0014747381210327148, -2.09808349609375e-05, -5.7220458984375e-06, -2.384185791015625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004423260688781738, -1.9073486328125e-06, -4.1961669921875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.012401580810546875, 0.0, -0.022130966186523438, -0.08267402648925781, -1.9073486328125e-06, -0.2768239974975586, -0.0001125335693359375, -0.019439697265625, -5.340576171875e-05, -0.0002765655517578125, 0.0, -2.09808349609375e-05, 0.0, -0.0003205537796020508, -8.821487426757812e-05, -6.67572021484375e-05, -5.7220458984375e-06, -0.7027465105056763, -2.288818359375e-05, -0.000110626220703125, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0002899169921875, -3.4332275390625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.36051464080810547, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001659393310546875, -0.0003070831298828125, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -8.83340835571289e-05, -1.1920928244535389e-07, -0.010296821594238281, -2.86102294921875e-05, -0.0030040740966796875, 0.0, -0.0034694671630859375, 0.0, -0.0028400421142578125, -4.0531158447265625e-06, -0.004570960998535156, -1.1920928244535389e-07, -0.2786470651626587, 0.0, -0.00075531005859375, -0.10083770751953125, -0.0014801025390625, -0.0016765594482421875, 0.0, -0.0009473562240600586, 0.0, -0.03764009475708008, -1.272400975227356, -0.0009472981910221279, -0.4068240821361542, -0.0025841889437288046, -0.0006189346313476562, -0.000823974609375, -0.004000663757324219, -3.004073914780747e-05, -0.11999034881591797, -7.62939453125e-06, -3.814697265625e-06, -0.14509010314941406, -1.9073486328125e-06, -0.04090690612792969, 0.0, -0.45745325088500977, -2.3841855067985307e-07, -0.5046796798706055, -1.9073486328125e-06, -0.2782754898071289, -3.814697265625e-06, -1.7892520427703857, -2.9921395253040828e-05], "choice_history": [97, 285, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Burrowing", " ", "Mine", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "Health", "<EOS>", "explodes", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 21, 174, "type", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "BurrowingMine", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_powerHealth", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"value": {"id": "type", "_type": "Name"}, "_type": "Assign", "targets": [{"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.LEGENDARY, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_powerHealth(0), self)\n        player.hand = player\n", "score": -8.071616063315517, "score_history": [-0.0002574920654296875, -0.00079345703125, -0.0002431573811918497, -0.0003685271949507296, -0.0023340368643403053, -5.9604444686556235e-06, -0.00010251977801090106, -8.106222594506107e-06, -3.814697265625e-05, -0.6340188980102539, -0.09019851684570312, -2.86102294921875e-05, 0.0, -4.41074053014745e-06, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0001850128173828125, -0.00014495849609375, -0.0001220703125, -8.344391244463623e-05, -4.9591064453125e-05, -0.000769089674577117, -0.0014747381210327148, -2.09808349609375e-05, -5.7220458984375e-06, -2.384185791015625e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.000102996826171875, -5.7220458984375e-06, -0.004423260688781738, -1.9073486328125e-06, -4.1961669921875e-05, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -0.012401580810546875, 0.0, -0.022130966186523438, -0.08267402648925781, -1.9073486328125e-06, -0.2768239974975586, -0.0001125335693359375, -0.019439697265625, -5.340576171875e-05, -0.0002765655517578125, 0.0, -2.09808349609375e-05, 0.0, -0.0003205537796020508, -8.821487426757812e-05, -6.67572021484375e-05, -5.7220458984375e-06, -0.7027465105056763, -2.288818359375e-05, -0.000110626220703125, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -0.0002899169921875, -3.4332275390625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.36051464080810547, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001659393310546875, -0.0003070831298828125, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -8.83340835571289e-05, -1.1920928244535389e-07, -0.010296821594238281, -2.86102294921875e-05, -0.0030040740966796875, 0.0, -0.0034694671630859375, 0.0, -0.0028400421142578125, -4.0531158447265625e-06, -0.004570960998535156, -1.1920928244535389e-07, -0.2786470651626587, 0.0, -0.00075531005859375, -0.10083770751953125, -0.0014801025390625, -0.0016765594482421875, 0.0, -0.0009473562240600586, 0.0, -0.03764009475708008, -1.272400975227356, -0.0009472981910221279, -0.4068240821361542, -0.0025841889437288046, -0.0006189346313476562, -0.000823974609375, -0.004000663757324219, -3.004073914780747e-05, -0.11999034881591797, -7.62939453125e-06, -3.814697265625e-06, -0.14509010314941406, -1.9073486328125e-06, -0.04090690612792969, 0.0, -0.45745325088500977, -2.3841855067985307e-07, -0.5046796798706055, -1.9073486328125e-06, -0.2782754898071289, -3.814697265625e-06, -2.175687074661255, -2.50339189733495e-06], "choice_history": [97, 285, "Burrowing", "Mine", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Burrowing", " ", "Mine", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 347, 79, 308, 21, 174, "player", "<EOS>", "effective_heal_power", "Health", "<EOS>", "explodes", "<EOS>", 50, 174, "self", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 21, 174, "player", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "BurrowingMine", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "heal", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"hole1": "effective_heal_powerHealth", "_type": "Template69", "hole0": {"id": "player", "_type": "Name"}, "hole2": 0}, {"id": "self", "_type": "Name"}]}, {"value": {"id": "player", "_type": "Name"}, "_type": "Assign", "targets": [{"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}]}]}}]}
{"gold_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(game.random_amount\n            (3, 6)), self)\n", "beams": [{"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -0.32751112389941994, "score_history": [-0.002445220947265625, -4.38690185546875e-05, -3.814697265625e-06, -8.96453857421875e-05, -4.76837158203125e-05, -3.4570662137412e-06, -0.0015379308024421334, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0015815767692402005, -7.414809078909457e-05, -2.896785554185044e-05, -0.000286102294921875, -0.0029926300048828125, -8.96453857421875e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.7642816601437517e-05, 0.0, -0.00280606746673584, 0.0, -0.1182546615600586, 0.0, -0.0011615753173828125, -3.814697265625e-05, -0.0068645477294921875, -1.33514404296875e-05, -0.0001926422119140625, 0.0, -0.0007688999176025391, -3.814697265625e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.001267552375793457, 0.0, -0.017251014709472656, -0.000164031982421875, -0.009246826171875, -7.62939453125e-05, -0.13069428503513336, 0.0, -0.0030536651611328125, -0.0002803802490234375, -0.00030517578125, 0.0, -0.0002002716064453125, 0.0, -0.0033189058303833008, -9.5367431640625e-06, -1.1563301086425781e-05, -3.576278118089249e-07, -4.637155871023424e-05, -2.3841855067985307e-07, -0.0006275177001953125, -0.001495361328125, -3.24249267578125e-05, -0.018341779708862305, -1.1920928244535389e-07, -4.38690185546875e-05, -6.4849853515625e-05, -0.0004967441782355309, -0.0010274648666381836], "choice_history": [96, 173, 358, 105, 152, "Crackle", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "2", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "overload", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "SHAMAN", "hole0": "Crackle", "_type": "Template4", "hole3": "COMMON", "hole1": 2, "hole4": "target_func", "hole6": "find_spell_target", "hole8": {"n": 2, "_type": "Num"}}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 6}, {"id": "self", "_type": "Name"}]}], "name": "Crackle", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -2.309235722268049, "score_history": [-0.002445220947265625, -4.38690185546875e-05, -3.814697265625e-06, -8.96453857421875e-05, -4.76837158203125e-05, -3.4570662137412e-06, -0.0015379308024421334, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0015815767692402005, -7.414809078909457e-05, -2.896785554185044e-05, -0.000286102294921875, -0.0029926300048828125, -8.96453857421875e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.7642816601437517e-05, 0.0, -0.00280606746673584, 0.0, -0.1182546615600586, 0.0, -0.0011615753173828125, -3.814697265625e-05, -0.0068645477294921875, -1.33514404296875e-05, -0.0001926422119140625, 0.0, -0.0007688999176025391, -3.814697265625e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.001267552375793457, 0.0, -0.017251014709472656, -0.000164031982421875, -0.009246826171875, -7.62939453125e-05, -2.111414909362793, -1.9073486328125e-06, -0.004736900329589844, -0.000278472900390625, -0.0005645751953125, 0.0, -5.7220458984375e-05, 0.0, -0.0003814697265625, -7.62939453125e-06, -1.52587890625e-05, -2.3841855067985307e-07, -0.00012909583165310323, -2.3841855067985307e-07, -0.0008258819580078125, -0.0014495849609375, -2.47955322265625e-05, -0.02083563804626465, -1.1920928244535389e-07, -3.62396240234375e-05, -6.29425048828125e-05, -0.0005093807703815401, -0.00044298169086687267], "choice_history": [96, 173, 358, 105, 152, "Crackle", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "1", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "overload", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "SHAMAN", "hole0": "Crackle", "_type": "Template4", "hole3": "COMMON", "hole1": 2, "hole4": "target_func", "hole6": "find_spell_target", "hole8": {"n": 1, "_type": "Num"}}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 6}, {"id": "self", "_type": "Name"}]}], "name": "Crackle", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -2.8329964201269817, "score_history": [-0.002445220947265625, -4.38690185546875e-05, -3.814697265625e-06, -8.96453857421875e-05, -4.76837158203125e-05, -3.4570662137412e-06, -0.0015379308024421334, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0015815767692402005, -7.414809078909457e-05, -2.896785554185044e-05, -0.000286102294921875, -0.0029926300048828125, -8.96453857421875e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.7642816601437517e-05, 0.0, -0.00280606746673584, 0.0, -2.6346921920776367, -3.814697265625e-06, -0.00043129920959472656, -8.7738037109375e-05, -0.0020427703857421875, -5.7220458984375e-06, -0.00012969970703125, 0.0, -0.0006620883941650391, -3.814697265625e-06, -7.2479248046875e-05, -3.814697265625e-06, -0.0015494823455810547, 0.0, -0.02091217041015625, -0.00014495849609375, -0.009467124938964844, -7.62939453125e-05, -0.12111510336399078, 0.0, -0.0029544830322265625, -0.000274658203125, -0.0003223419189453125, 0.0, -0.0002117156982421875, 0.0, -0.0034810304641723633, -9.5367431640625e-06, -1.1563301086425781e-05, -3.576278118089249e-07, -4.684837404056452e-05, -2.3841855067985307e-07, -0.000637054443359375, -0.0014972686767578125, -3.24249267578125e-05, -0.01840662956237793, -1.1920928244535389e-07, -4.38690185546875e-05, -6.67572021484375e-05, -0.0004966249689459801, -0.0010274648666381836], "choice_history": [96, 173, 358, 105, 152, "Crackle", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "2", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "overload", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "SHAMAN", "hole0": "Crackle", "_type": "Template4", "hole3": "FREE", "hole1": 2, "hole4": "target_func", "hole6": "find_spell_target", "hole8": {"n": 2, "_type": "Num"}}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 6}, {"id": "self", "_type": "Name"}]}], "name": "Crackle", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            EPIC, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -4.201429299687696, "score_history": [-0.002445220947265625, -4.38690185546875e-05, -3.814697265625e-06, -8.96453857421875e-05, -4.76837158203125e-05, -3.4570662137412e-06, -0.0015379308024421334, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0015815767692402005, -7.414809078909457e-05, -2.896785554185044e-05, -0.000286102294921875, -0.0029926300048828125, -8.96453857421875e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.7642816601437517e-05, 0.0, -0.00280606746673584, 0.0, -3.897799491882324, 0.0, -0.0044345855712890625, -6.103515625e-05, -0.00215911865234375, -1.1444091796875e-05, -0.0001087188720703125, 0.0, -0.0007040500640869141, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.001128077507019043, 0.0, -0.014814376831054688, -0.0001926422119140625, -0.0090484619140625, -6.67572021484375e-05, -0.22905375063419342, 0.0, -0.0029392242431640625, -0.0002880096435546875, -0.000316619873046875, 0.0, -0.0002079010009765625, 0.0, -0.0034352540969848633, -9.5367431640625e-06, -1.1563301086425781e-05, -3.576278118089249e-07, -4.5537126425188035e-05, -2.3841855067985307e-07, -0.000606536865234375, -0.0014801025390625, -3.24249267578125e-05, -0.018646955490112305, -1.1920928244535389e-07, -4.38690185546875e-05, -6.4849853515625e-05, -0.0005010357708670199, -0.0010559558868408203], "choice_history": [96, 173, 358, 105, 152, "Crackle", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "EPIC", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "2", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "overload", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "SHAMAN", "hole0": "Crackle", "_type": "Template4", "hole3": "EPIC", "hole1": 2, "hole4": "target_func", "hole6": "find_spell_target", "hole8": {"n": 2, "_type": "Num"}}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 6}, {"id": "self", "_type": "Name"}]}], "name": "Crackle", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            target_func, target_func=hearthbreaker.targeting.\n            find_spell_target, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -4.5319152396235935, "score_history": [-0.002445220947265625, -4.38690185546875e-05, -3.814697265625e-06, -8.96453857421875e-05, -4.76837158203125e-05, -3.4570662137412e-06, -0.0015379308024421334, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0015815767692402005, -7.414809078909457e-05, -2.896785554185044e-05, -0.000286102294921875, -0.0029926300048828125, -8.96453857421875e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.7642816601437517e-05, 0.0, -0.00280606746673584, 0.0, -4.253716468811035, -3.814697265625e-06, -0.08574104309082031, -0.000152587890625, -0.0025844573974609375, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -0.0004426240921020508, -1.52587890625e-05, -7.82012939453125e-05, -3.814697265625e-06, -0.0015729665756225586, 0.0, -0.020346641540527344, -0.000152587890625, -0.009305000305175781, -7.62939453125e-05, -0.11599303781986237, 0.0, -0.0029382705688476562, -0.00028228759765625, -0.0003108978271484375, 0.0, -0.0002117156982421875, 0.0, -0.0036412477493286133, -9.5367431640625e-06, -1.1563301086425781e-05, -3.576278118089249e-07, -4.660996637539938e-05, -2.3841855067985307e-07, -0.0006275177001953125, -0.0014896392822265625, -3.24249267578125e-05, -0.01829981803894043, -1.1920928244535389e-07, -4.38690185546875e-05, -6.67572021484375e-05, -0.0004972210736013949, -0.001038670539855957], "choice_history": [96, 173, 358, 105, 152, "Crackle", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "target_func", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "2", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "overload", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "SHAMAN", "hole0": "Crackle", "_type": "Template4", "hole3": "target_func", "hole1": 2, "hole4": "target_func", "hole6": "find_spell_target", "hole8": {"n": 2, "_type": "Num"}}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 6}, {"id": "self", "_type": "Name"}]}], "name": "Crackle", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -4.685226957095352, "score_history": [-0.002445220947265625, -4.38690185546875e-05, -3.814697265625e-06, -8.96453857421875e-05, -4.76837158203125e-05, -3.4570662137412e-06, -0.0015379308024421334, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0015815767692402005, -7.414809078909457e-05, -2.896785554185044e-05, -0.000286102294921875, -0.0029926300048828125, -8.96453857421875e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.7642816601437517e-05, 0.0, -0.00280606746673584, 0.0, -0.1182546615600586, 0.0, -0.0011615753173828125, -3.814697265625e-05, -0.0068645477294921875, -1.33514404296875e-05, -0.0001926422119140625, 0.0, -0.0007688999176025391, -3.814697265625e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.001267552375793457, 0.0, -0.017251014709472656, -0.000164031982421875, -0.009246826171875, -7.62939453125e-05, -0.13069428503513336, 0.0, -0.0030536651611328125, -0.0002803802490234375, -0.00030517578125, 0.0, -0.0002002716064453125, 0.0, -0.0033189058303833008, -9.5367431640625e-06, -1.1563301086425781e-05, -3.576278118089249e-07, -4.637155871023424e-05, -2.3841855067985307e-07, -0.0006275177001953125, -0.001495361328125, -3.24249267578125e-05, -4.3766045570373535, -4.172316494077677e-06, -4.1961669921875e-05, -4.57763671875e-05, -0.0007316939299926162, -0.00026249871007166803], "choice_history": [96, 173, 358, 105, 152, "Crackle", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "2", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "overload", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "SHAMAN", "hole0": "Crackle", "_type": "Template4", "hole3": "COMMON", "hole1": 2, "hole4": "target_func", "hole6": "find_spell_target", "hole8": {"n": 2, "_type": "Num"}}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 2}, {"id": "self", "_type": "Name"}]}], "name": "Crackle", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -4.895704895597582, "score_history": [-0.002445220947265625, -4.38690185546875e-05, -3.814697265625e-06, -8.96453857421875e-05, -4.76837158203125e-05, -3.4570662137412e-06, -0.0015379308024421334, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0015815767692402005, -7.414809078909457e-05, -2.896785554185044e-05, -0.000286102294921875, -0.0029926300048828125, -8.96453857421875e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.7642816601437517e-05, 0.0, -0.00280606746673584, 0.0, -2.6346921920776367, -3.814697265625e-06, -0.00043129920959472656, -8.7738037109375e-05, -0.0020427703857421875, -5.7220458984375e-06, -0.00012969970703125, 0.0, -0.0006620883941650391, -3.814697265625e-06, -7.2479248046875e-05, -3.814697265625e-06, -0.0015494823455810547, 0.0, -0.02091217041015625, -0.00014495849609375, -0.009467124938964844, -7.62939453125e-05, -2.1828980445861816, -1.9073486328125e-06, -0.00467681884765625, -0.0002689361572265625, -0.000598907470703125, 0.0, -6.103515625e-05, 0.0, -0.0004215240478515625, -7.62939453125e-06, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001299301948165521, -2.3841855067985307e-07, -0.0008563995361328125, -0.0014495849609375, -2.47955322265625e-05, -0.020866036415100098, -1.1920928244535389e-07, -3.62396240234375e-05, -6.4849853515625e-05, -0.0005097383982501924, -0.00045633313129656017], "choice_history": [96, 173, 358, 105, 152, "Crackle", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "FREE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "1", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "overload", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "SHAMAN", "hole0": "Crackle", "_type": "Template4", "hole3": "FREE", "hole1": 2, "hole4": "target_func", "hole6": "find_spell_target", "hole8": {"n": 1, "_type": "Num"}}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 6}, {"id": "self", "_type": "Name"}]}], "name": "Crackle", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            EPIC, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -5.570780665327611, "score_history": [-0.002445220947265625, -4.38690185546875e-05, -3.814697265625e-06, -8.96453857421875e-05, -4.76837158203125e-05, -3.4570662137412e-06, -0.0015379308024421334, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0015815767692402005, -7.414809078909457e-05, -2.896785554185044e-05, -0.000286102294921875, -0.0029926300048828125, -8.96453857421875e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.7642816601437517e-05, 0.0, -0.00280606746673584, 0.0, -3.897799491882324, 0.0, -0.0044345855712890625, -6.103515625e-05, -0.00215911865234375, -1.1444091796875e-05, -0.0001087188720703125, 0.0, -0.0007040500640869141, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.001128077507019043, 0.0, -0.014814376831054688, -0.0001926422119140625, -0.0090484619140625, -6.67572021484375e-05, -1.59745192527771, -1.9073486328125e-06, -0.004597663879394531, -0.000278472900390625, -0.0005970001220703125, 0.0, -5.91278076171875e-05, 0.0, -0.0003986358642578125, -7.62939453125e-06, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001274271053262055, -2.3841855067985307e-07, -0.000774383544921875, -0.001453399658203125, -2.47955322265625e-05, -0.021239876747131348, -1.1920928244535389e-07, -3.62396240234375e-05, -6.29425048828125e-05, -0.0005171293742023408, -0.00044679638813249767], "choice_history": [96, 173, 358, 105, 152, "Crackle", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "EPIC", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "1", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "overload", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "SHAMAN", "hole0": "Crackle", "_type": "Template4", "hole3": "EPIC", "hole1": 2, "hole4": "target_func", "hole6": "find_spell_target", "hole8": {"n": 1, "_type": "Num"}}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 6}, {"id": "self", "_type": "Name"}]}], "name": "Crackle", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n", "score": -5.827015668962105, "score_history": [-0.002445220947265625, -4.38690185546875e-05, -3.814697265625e-06, -8.96453857421875e-05, -4.76837158203125e-05, -3.4570662137412e-06, -0.0015379308024421334, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0015815767692402005, -7.414809078909457e-05, -2.896785554185044e-05, -0.000286102294921875, -0.0029926300048828125, -8.96453857421875e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.7642816601437517e-05, 0.0, -0.00280606746673584, 0.0, -0.1182546615600586, 0.0, -0.0011615753173828125, -3.814697265625e-05, -0.0068645477294921875, -1.33514404296875e-05, -0.0001926422119140625, 0.0, -0.0007688999176025391, -3.814697265625e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.001267552375793457, 0.0, -0.017251014709472656, -0.000164031982421875, -0.009246826171875, -7.62939453125e-05, -0.13069428503513336, 0.0, -0.0030536651611328125, -0.0002803802490234375, -0.00030517578125, 0.0, -0.0002002716064453125, 0.0, -0.0033189058303833008, -9.5367431640625e-06, -1.1563301086425781e-05, -3.576278118089249e-07, -4.637155871023424e-05, -2.3841855067985307e-07, -0.0006275177001953125, -0.001495361328125, -3.24249267578125e-05, -5.5182671546936035, -1.0728830375228426e-06, -5.91278076171875e-05, -9.5367431640625e-05, -0.0005854148184880614, -0.00047123426338657737], "choice_history": [96, 173, 358, 105, 152, "Crackle", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "2", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "damage", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "overload", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "SHAMAN", "hole0": "Crackle", "_type": "Template4", "hole3": "COMMON", "hole1": 2, "hole4": "target_func", "hole6": "find_spell_target", "hole8": {"n": 2, "_type": "Num"}}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 0}, {"id": "self", "_type": "Name"}]}], "name": "Crackle", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -6.283862627600136, "score_history": [-0.002445220947265625, -4.38690185546875e-05, -3.814697265625e-06, -8.96453857421875e-05, -4.76837158203125e-05, -3.4570662137412e-06, -0.0015379308024421334, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0015815767692402005, -7.414809078909457e-05, -2.896785554185044e-05, -0.000286102294921875, -0.0029926300048828125, -8.96453857421875e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.7642816601437517e-05, 0.0, -0.00280606746673584, 0.0, -6.057494163513184, 0.0, -0.0023009777069091797, -5.53131103515625e-05, -0.0013427734375, -9.5367431640625e-06, -0.0001201629638671875, 0.0, -0.0008528232574462891, -3.814697265625e-06, -5.340576171875e-05, -3.814697265625e-06, -0.0014117956161499023, 0.0, -0.020715713500976562, -0.00012969970703125, -0.009550094604492188, -6.866455078125e-05, -0.148246169090271, 0.0, -0.0029392242431640625, -0.000278472900390625, -0.000316619873046875, 0.0, -0.0002117156982421875, 0.0, -0.0034085512161254883, -9.5367431640625e-06, -1.1563301086425781e-05, -3.576278118089249e-07, -4.708678534370847e-05, -2.3841855067985307e-07, -0.0006103515625, -0.0014972686767578125, -3.24249267578125e-05, -0.01843714714050293, -1.1920928244535389e-07, -4.38690185546875e-05, -6.67572021484375e-05, -0.0004975786432623863, -0.0010199546813964844], "choice_history": [96, 173, 358, 105, 152, "Crackle", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "RARE", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "2", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "overload", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "SHAMAN", "hole0": "Crackle", "_type": "Template4", "hole3": "RARE", "hole1": 2, "hole4": "target_func", "hole6": "find_spell_target", "hole8": {"n": 2, "_type": "Num"}}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 6}, {"id": "self", "_type": "Name"}]}], "name": "Crackle", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            find_spell_target=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -6.368125490121564, "score_history": [-0.002445220947265625, -4.38690185546875e-05, -3.814697265625e-06, -8.96453857421875e-05, -4.76837158203125e-05, -3.4570662137412e-06, -0.0015379308024421334, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0015815767692402005, -7.414809078909457e-05, -2.896785554185044e-05, -0.000286102294921875, -0.0029926300048828125, -8.96453857421875e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.7642816601437517e-05, 0.0, -0.00280606746673584, 0.0, -0.1182546615600586, 0.0, -0.0011615753173828125, -3.814697265625e-05, -0.0068645477294921875, -1.33514404296875e-05, -0.0001926422119140625, 0.0, -0.0007688999176025391, -3.814697265625e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.001267552375793457, 0.0, -5.393685340881348, 0.0, -0.5937671661376953, -0.000354766845703125, -0.21370483934879303, 0.0, -0.0028696060180664062, -0.0002307891845703125, -0.000263214111328125, 0.0, -0.0002613067626953125, 0.0, -0.0021115541458129883, -9.5367431640625e-06, -1.3470649719238281e-05, -3.576278118089249e-07, -5.578872514888644e-05, -2.3841855067985307e-07, -0.0012035369873046875, -0.00164794921875, -3.0517578125e-05, -0.015720248222351074, -1.1920928244535389e-07, -5.14984130859375e-05, -7.2479248046875e-05, -0.0004826775402761996, -0.0008664131164550781], "choice_history": [96, 173, 358, 105, 152, "Crackle", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "find_spell_target", "<EOS>", 23, 179, "2", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "find_spell_target", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "SHAMAN", "hole0": "Crackle", "_type": "Template4", "hole3": "COMMON", "hole1": 2, "hole4": "target_func", "hole6": "find_spell_target", "hole8": {"n": 2, "_type": "Num"}}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 6}, {"id": "self", "_type": "Name"}]}], "name": "Crackle", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.damage(player.effective_spell_damage(6), self)\n", "score": -6.476025443295242, "score_history": [-0.002445220947265625, -4.38690185546875e-05, -3.814697265625e-06, -8.96453857421875e-05, -4.76837158203125e-05, -3.4570662137412e-06, -0.0015379308024421334, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0015815767692402005, -7.414809078909457e-05, -2.896785554185044e-05, -0.000286102294921875, -0.0029926300048828125, -8.96453857421875e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.7642816601437517e-05, 0.0, -0.00280606746673584, 0.0, -0.1182546615600586, 0.0, -0.0011615753173828125, -3.814697265625e-05, -0.0068645477294921875, -1.33514404296875e-05, -0.0001926422119140625, 0.0, -0.0007688999176025391, -3.814697265625e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.001267552375793457, 0.0, -0.017251014709472656, -0.000164031982421875, -0.009246826171875, -7.62939453125e-05, -0.13069428503513336, 0.0, -0.0030536651611328125, -0.0002803802490234375, -0.00030517578125, 0.0, -0.0002002716064453125, 0.0, -6.002094268798828, 0.0, -0.16047513484954834, 0.0, -0.0003762742562685162, -1.4305104514278355e-06, -0.000186920166015625, -0.0018749237060546875, -4.1961669921875e-05, -0.0064547061920166016, -2.3841855067985307e-07, -0.000339508056640625, -5.91278076171875e-05, -0.000704166479408741, -0.0014227627543732524], "choice_history": [96, 173, 358, 105, 152, "Crackle", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "2", "<EOS>", 126, 225, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "overload", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "SHAMAN", "hole0": "Crackle", "_type": "Template4", "hole3": "COMMON", "hole1": 2, "hole4": "target_func", "hole6": "find_spell_target", "hole8": {"n": 2, "_type": "Num"}}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 6}, {"id": "self", "_type": "Name"}]}], "name": "Crackle", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), selfSelector)\n", "score": -7.465295247320135, "score_history": [-0.002445220947265625, -4.38690185546875e-05, -3.814697265625e-06, -8.96453857421875e-05, -4.76837158203125e-05, -3.4570662137412e-06, -0.0015379308024421334, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0015815767692402005, -7.414809078909457e-05, -2.896785554185044e-05, -0.000286102294921875, -0.0029926300048828125, -8.96453857421875e-05, -3.576272320060525e-06, -3.814697265625e-06, -1.7642816601437517e-05, 0.0, -0.00280606746673584, 0.0, -0.1182546615600586, 0.0, -0.0011615753173828125, -3.814697265625e-05, -0.0068645477294921875, -1.33514404296875e-05, -0.0001926422119140625, 0.0, -0.0007688999176025391, -3.814697265625e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.001267552375793457, 0.0, -0.017251014709472656, -0.000164031982421875, -0.009246826171875, -7.62939453125e-05, -0.13069428503513336, 0.0, -0.0030536651611328125, -0.0002803802490234375, -0.00030517578125, 0.0, -0.0002002716064453125, 0.0, -0.0033189058303833008, -9.5367431640625e-06, -1.1563301086425781e-05, -3.576278118089249e-07, -4.637155871023424e-05, -2.3841855067985307e-07, -0.0006275177001953125, -0.001495361328125, -3.24249267578125e-05, -0.018341779708862305, -1.1920928244535389e-07, -4.38690185546875e-05, -6.4849853515625e-05, -0.0004967441782355309, -7.1388115882873535, 0.0], "choice_history": [96, 173, 358, 105, 152, "Crackle", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 23, 179, "2", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "6", "<EOS>", 50, 174, "self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "overload", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "SHAMAN", "hole0": "Crackle", "_type": "Template4", "hole3": "COMMON", "hole1": 2, "hole4": "target_func", "hole6": "find_spell_target", "hole8": {"n": 2, "_type": "Num"}}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 6}, {"id": "selfSelector", "_type": "Name"}]}], "name": "Crackle", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "super().__init__('Crackle', 2, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON)\n", "score": -12.520405952216151, "score_history": [-0.002445220947265625, -4.38690185546875e-05, -3.814697265625e-06, -11.204109191894531, -1.2129278182983398, -0.006657308433204889, -3.4570634852570947e-06, -6.675520853605121e-05, 0.0, -0.09414851665496826, 0.0], "choice_history": [96, 173, 358, 127, 230, "Crackle", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>"], "model_output": {"body": [{"hole1": 2, "_type": "Template31", "hole0": "Crackle", "hole2": "DRUID"}], "_type": "Module"}}, {"inferred_code": "break\n", "score": -15.232769012451172, "score_history": [-0.002445220947265625, -4.38690185546875e-05, -3.814697265625e-06, -15.230276107788086], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}}]}
{"gold_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n", "beams": [{"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -0.19539735334825536, "score_history": [-0.000453948974609375, -3.814697265625e-05, -7.62939453125e-06, -3.24249267578125e-05, -0.000125885009765625, -2.777537883957848e-05, -4.291525328881107e-06, -4.768370445162873e-07, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.516166179906577e-05, -5.745887756347656e-05, -3.4570680327306036e-06, -0.000431060791015625, -0.0012388229370117188, -0.0039691925048828125, -3.2186455882765586e-06, -4.589557647705078e-05, -3.576278118089249e-07, -5.7220458984375e-06, -1.6808329746709205e-05, 0.0, -9.34600830078125e-05, 0.0, -0.002368927001953125, 0.0, -0.0003662109375, -0.00011444091796875, -0.0001430511474609375, -9.345745638711378e-05, -7.033342626527883e-06, -7.62939453125e-05, -0.0005035400390625, -2.09808349609375e-05, -0.0008550882339477539, -5.7220458984375e-06, -0.000255584716796875, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.00012230873107910156, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.004252195358276367, 0.0, -0.0003376007080078125, -0.0021419525146484375, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -6.878376007080078e-05, 0.0, -6.29425048828125e-05, 0.0, -0.13865064084529877, 0.0, -1.9073486328125e-06, -0.033659934997558594, 0.0, -0.004508852493017912, -3.6954811548639555e-06], "choice_history": [96, 173, 358, 105, 152, "Emergency", "Coolant", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Emergency", " ", "Coolant", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Emergency Coolant", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "die", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}]}], "name": "EmergencyCoolant", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1)\n", "score": -2.8813494123483565, "score_history": [-0.000453948974609375, -3.814697265625e-05, -7.62939453125e-06, -3.24249267578125e-05, -0.000125885009765625, -2.777537883957848e-05, -4.291525328881107e-06, -4.768370445162873e-07, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.516166179906577e-05, -5.745887756347656e-05, -3.4570680327306036e-06, -0.000431060791015625, -0.0012388229370117188, -0.0039691925048828125, -3.2186455882765586e-06, -4.589557647705078e-05, -3.576278118089249e-07, -5.7220458984375e-06, -1.6808329746709205e-05, 0.0, -9.34600830078125e-05, 0.0, -0.002368927001953125, 0.0, -0.0003662109375, -0.00011444091796875, -0.0001430511474609375, -9.345745638711378e-05, -7.033342626527883e-06, -7.62939453125e-05, -0.0005035400390625, -2.09808349609375e-05, -0.0008550882339477539, -5.7220458984375e-06, -0.000255584716796875, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.00012230873107910156, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.004252195358276367, 0.0, -0.0003376007080078125, -0.0021419525146484375, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -6.878376007080078e-05, 0.0, -6.29425048828125e-05, 0.0, -2.8521029949188232, 0.0, 0.0, -0.009546279907226562, -9.5367431640625e-06, -0.0011163712479174137, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Emergency", "Coolant", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Emergency", " ", "Coolant", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Emergency Coolant", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "increase_health", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 1, "_type": "Num"}]}], "name": "EmergencyCoolant", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(1)\n", "score": -3.8461048670019977, "score_history": [-0.000453948974609375, -3.814697265625e-05, -7.62939453125e-06, -3.24249267578125e-05, -0.000125885009765625, -2.777537883957848e-05, -4.291525328881107e-06, -4.768370445162873e-07, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.516166179906577e-05, -5.745887756347656e-05, -3.4570680327306036e-06, -0.000431060791015625, -0.0012388229370117188, -0.0039691925048828125, -3.2186455882765586e-06, -4.589557647705078e-05, -3.576278118089249e-07, -5.7220458984375e-06, -1.6808329746709205e-05, 0.0, -9.34600830078125e-05, 0.0, -0.002368927001953125, 0.0, -0.0003662109375, -0.00011444091796875, -0.0001430511474609375, -9.345745638711378e-05, -7.033342626527883e-06, -7.62939453125e-05, -0.0005035400390625, -2.09808349609375e-05, -0.0008550882339477539, -5.7220458984375e-06, -0.000255584716796875, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.00012230873107910156, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.004252195358276367, 0.0, -0.0003376007080078125, -0.0021419525146484375, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -6.878376007080078e-05, 0.0, -6.29425048828125e-05, 0.0, -0.13865064084529877, 0.0, -1.9073486328125e-06, -3.688333511352539, -0.0001163482666015625, -0.0004301370063330978, 0.0], "choice_history": [96, 173, 358, 105, 152, "Emergency", "Coolant", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Emergency", " ", "Coolant", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Emergency Coolant", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "die", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 1, "_type": "Num"}]}], "name": "EmergencyCoolant", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -4.110903549912621, "score_history": [-0.000453948974609375, -3.814697265625e-05, -7.62939453125e-06, -3.24249267578125e-05, -0.000125885009765625, -2.777537883957848e-05, -4.291525328881107e-06, -4.768370445162873e-07, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.516166179906577e-05, -5.745887756347656e-05, -3.4570680327306036e-06, -0.000431060791015625, -0.0012388229370117188, -0.0039691925048828125, -3.2186455882765586e-06, -4.589557647705078e-05, -3.576278118089249e-07, -5.7220458984375e-06, -1.6808329746709205e-05, 0.0, -9.34600830078125e-05, 0.0, -0.002368927001953125, 0.0, -0.0003662109375, -0.00011444091796875, -0.0001430511474609375, -9.345745638711378e-05, -7.033342626527883e-06, -7.62939453125e-05, -0.0005035400390625, -2.09808349609375e-05, -0.0008550882339477539, -5.7220458984375e-06, -0.000255584716796875, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.00012230873107910156, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.004252195358276367, 0.0, -0.0003376007080078125, -0.0021419525146484375, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -6.878376007080078e-05, 0.0, -6.29425048828125e-05, 0.0, -3.904156446456909, 0.0, -7.62939453125e-06, -0.01384735107421875, -0.00554656982421875, -0.1677435040473938, -0.0010297269327566028], "choice_history": [96, 173, 358, 105, 152, "Emergency", "Coolant", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Emergency", " ", "Coolant", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Emergency Coolant", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "add_buff", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template54", "hole0": "<UNK>"}]}], "name": "EmergencyCoolant", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score": -4.592870168710363, "score_history": [-0.000453948974609375, -3.814697265625e-05, -7.62939453125e-06, -3.24249267578125e-05, -0.000125885009765625, -2.777537883957848e-05, -4.291525328881107e-06, -4.768370445162873e-07, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.516166179906577e-05, -5.745887756347656e-05, -3.4570680327306036e-06, -0.000431060791015625, -0.0012388229370117188, -0.0039691925048828125, -3.2186455882765586e-06, -4.589557647705078e-05, -3.576278118089249e-07, -5.7220458984375e-06, -1.6808329746709205e-05, 0.0, -9.34600830078125e-05, 0.0, -0.002368927001953125, 0.0, -0.0003662109375, -0.00011444091796875, -0.0001430511474609375, -9.345745638711378e-05, -7.033342626527883e-06, -7.62939453125e-05, -0.0005035400390625, -2.09808349609375e-05, -0.0008550882339477539, -5.7220458984375e-06, -0.000255584716796875, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.00012230873107910156, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.004252195358276367, 0.0, -0.0003376007080078125, -0.0021419525146484375, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -6.878376007080078e-05, 0.0, -6.29425048828125e-05, 0.0, -4.569833278656006, -1.9073486328125e-06, -2.86102294921875e-05, -0.0012989044189453125, -6.866455078125e-05, -0.0030664813239127398, 0.0], "choice_history": [96, 173, 358, 105, 152, "Emergency", "Coolant", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Emergency", " ", "Coolant", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Emergency Coolant", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "set_health_to", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 1, "_type": "Num"}]}], "name": "EmergencyCoolant", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score": -4.8919639492291935, "score_history": [-0.000453948974609375, -3.814697265625e-05, -7.62939453125e-06, -3.24249267578125e-05, -0.000125885009765625, -2.777537883957848e-05, -4.291525328881107e-06, -4.768370445162873e-07, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.516166179906577e-05, -5.745887756347656e-05, -3.4570680327306036e-06, -0.000431060791015625, -0.0012388229370117188, -0.0039691925048828125, -3.2186455882765586e-06, -4.589557647705078e-05, -3.576278118089249e-07, -5.7220458984375e-06, -1.6808329746709205e-05, 0.0, -9.34600830078125e-05, 0.0, -0.002368927001953125, 0.0, -0.0003662109375, -0.00011444091796875, -0.0001430511474609375, -9.345745638711378e-05, -7.033342626527883e-06, -7.62939453125e-05, -0.0005035400390625, -2.09808349609375e-05, -0.0008550882339477539, -5.7220458984375e-06, -0.000255584716796875, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.00012230873107910156, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.004252195358276367, 0.0, -0.0003376007080078125, -0.0021419525146484375, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -6.878376007080078e-05, 0.0, -6.29425048828125e-05, 0.0, -4.355041027069092, 0.0, -0.01088714599609375, -0.5067996978759766, -0.000164031982421875, -5.698082168237306e-05, -3.576278118089249e-07, -2.09808349609375e-05, -0.0001068115234375, -0.00013339519500732422, -0.0001811981201171875], "choice_history": [96, 173, 358, 105, 152, "Emergency", "Coolant", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Emergency", " ", "Coolant", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Emergency Coolant", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 1}, {"id": "self", "_type": "Name"}]}], "name": "EmergencyCoolant", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score": -5.029912700034913, "score_history": [-0.000453948974609375, -3.814697265625e-05, -7.62939453125e-06, -3.24249267578125e-05, -0.000125885009765625, -2.777537883957848e-05, -4.291525328881107e-06, -4.768370445162873e-07, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.516166179906577e-05, -5.745887756347656e-05, -3.4570680327306036e-06, -0.000431060791015625, -0.0012388229370117188, -0.0039691925048828125, -3.2186455882765586e-06, -4.589557647705078e-05, -3.576278118089249e-07, -5.7220458984375e-06, -1.6808329746709205e-05, 0.0, -9.34600830078125e-05, 0.0, -0.002368927001953125, 0.0, -0.0003662109375, -0.00011444091796875, -0.0001430511474609375, -9.345745638711378e-05, -7.033342626527883e-06, -7.62939453125e-05, -0.0005035400390625, -2.09808349609375e-05, -0.0008550882339477539, -5.7220458984375e-06, -0.000255584716796875, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.00012230873107910156, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.004252195358276367, 0.0, -0.0003376007080078125, -0.0021419525146484375, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -6.878376007080078e-05, 0.0, -6.29425048828125e-05, 0.0, -4.988924503326416, 0.0, -1.71661376953125e-05, -0.0044879913330078125, -0.00011444091796875, -0.017794368788599968, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Emergency", "Coolant", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Emergency", " ", "Coolant", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Emergency Coolant", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "change_attack", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 1, "_type": "Num"}]}], "name": "EmergencyCoolant", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(1)\n", "score": -5.308158247821268, "score_history": [-0.000453948974609375, -3.814697265625e-05, -7.62939453125e-06, -3.24249267578125e-05, -0.000125885009765625, -2.777537883957848e-05, -4.291525328881107e-06, -4.768370445162873e-07, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.516166179906577e-05, -5.745887756347656e-05, -3.4570680327306036e-06, -0.000431060791015625, -0.0012388229370117188, -0.0039691925048828125, -3.2186455882765586e-06, -4.589557647705078e-05, -3.576278118089249e-07, -5.7220458984375e-06, -1.6808329746709205e-05, 0.0, -9.34600830078125e-05, 0.0, -0.002368927001953125, 0.0, -0.0003662109375, -0.00011444091796875, -0.0001430511474609375, -9.345745638711378e-05, -7.033342626527883e-06, -7.62939453125e-05, -0.0005035400390625, -2.09808349609375e-05, -0.0008550882339477539, -5.7220458984375e-06, -0.000255584716796875, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.00012230873107910156, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.004252195358276367, 0.0, -0.0003376007080078125, -0.0021419525146484375, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -6.878376007080078e-05, 0.0, -6.29425048828125e-05, 0.0, -5.176630020141602, 0.0, -1.9073486328125e-06, -0.07411861419677734, -9.5367431640625e-06, -0.038823939859867096, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Emergency", "Coolant", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Emergency", " ", "Coolant", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Emergency Coolant", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "add_effect", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 1, "_type": "Num"}]}], "name": "EmergencyCoolant", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -5.962311005771028, "score_history": [-0.000453948974609375, -3.814697265625e-05, -7.62939453125e-06, -3.24249267578125e-05, -0.000125885009765625, -2.777537883957848e-05, -4.291525328881107e-06, -4.768370445162873e-07, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.516166179906577e-05, -5.745887756347656e-05, -3.4570680327306036e-06, -0.000431060791015625, -0.0012388229370117188, -0.0039691925048828125, -3.2186455882765586e-06, -4.589557647705078e-05, -3.576278118089249e-07, -5.7220458984375e-06, -1.6808329746709205e-05, 0.0, -9.34600830078125e-05, 0.0, -0.002368927001953125, 0.0, -0.0003662109375, -0.00011444091796875, -0.0001430511474609375, -9.345745638711378e-05, -7.033342626527883e-06, -7.62939453125e-05, -0.0005035400390625, -2.09808349609375e-05, -0.0008550882339477539, -5.7220458984375e-06, -0.000255584716796875, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.00012230873107910156, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -5.723186016082764, 0.0, -0.000316619873046875, -0.010419845581054688, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -4.780292510986328e-05, 0.0, -6.67572021484375e-05, 0.0, -0.18095813691616058, 0.0, -1.9073486328125e-06, -0.03130626678466797, 0.0, -0.004303574096411467, -2.861018856492592e-06], "choice_history": [96, 173, 358, 105, 152, "Emergency", "Coolant", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Emergency", " ", "Coolant", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_friendly_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Emergency Coolant", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "die", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}]}], "name": "EmergencyCoolant", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self.target.divine_shield)\n", "score": -7.002271867446822, "score_history": [-0.000453948974609375, -3.814697265625e-05, -7.62939453125e-06, -3.24249267578125e-05, -0.000125885009765625, -2.777537883957848e-05, -4.291525328881107e-06, -4.768370445162873e-07, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.516166179906577e-05, -5.745887756347656e-05, -3.4570680327306036e-06, -0.000431060791015625, -0.0012388229370117188, -0.0039691925048828125, -3.2186455882765586e-06, -4.589557647705078e-05, -3.576278118089249e-07, -5.7220458984375e-06, -1.6808329746709205e-05, 0.0, -9.34600830078125e-05, 0.0, -0.002368927001953125, 0.0, -0.0003662109375, -0.00011444091796875, -0.0001430511474609375, -9.345745638711378e-05, -7.033342626527883e-06, -7.62939453125e-05, -0.0005035400390625, -2.09808349609375e-05, -0.0008550882339477539, -5.7220458984375e-06, -0.000255584716796875, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.00012230873107910156, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.004252195358276367, 0.0, -0.0003376007080078125, -0.0021419525146484375, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -6.878376007080078e-05, 0.0, -6.29425048828125e-05, 0.0, -0.13865064084529877, 0.0, -1.9073486328125e-06, -5.783470153808594, -4.1961669921875e-05, -7.05718994140625e-05, 0.0, -3.62396240234375e-05, 0.0, -0.21428680419921875, -1.1920928244535389e-07, -5.7220458984375e-05, -1.1920928244535389e-07, -0.8470838069915771, 0.0], "choice_history": [96, 173, 358, 105, 152, "Emergency", "Coolant", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Emergency", " ", "Coolant", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Emergency Coolant", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "die", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "divine_shield", "_type": "Attribute"}]}], "name": "EmergencyCoolant", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(Buff), self)\n", "score": -7.03126548891467, "score_history": [-0.000453948974609375, -3.814697265625e-05, -7.62939453125e-06, -3.24249267578125e-05, -0.000125885009765625, -2.777537883957848e-05, -4.291525328881107e-06, -4.768370445162873e-07, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.516166179906577e-05, -5.745887756347656e-05, -3.4570680327306036e-06, -0.000431060791015625, -0.0012388229370117188, -0.0039691925048828125, -3.2186455882765586e-06, -4.589557647705078e-05, -3.576278118089249e-07, -5.7220458984375e-06, -1.6808329746709205e-05, 0.0, -9.34600830078125e-05, 0.0, -0.002368927001953125, 0.0, -0.0003662109375, -0.00011444091796875, -0.0001430511474609375, -9.345745638711378e-05, -7.033342626527883e-06, -7.62939453125e-05, -0.0005035400390625, -2.09808349609375e-05, -0.0008550882339477539, -5.7220458984375e-06, -0.000255584716796875, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.00012230873107910156, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.004252195358276367, 0.0, -0.0003376007080078125, -0.0021419525146484375, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -6.878376007080078e-05, 0.0, -6.29425048828125e-05, 0.0, -4.355041027069092, 0.0, -0.01088714599609375, -1.019357681274414, -7.43865966796875e-05, -9.5367431640625e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -0.004144549369812012, -2.3841855067985307e-07, -0.00877225399017334, 0.0, -1.9073486328125e-06, -0.21667957305908203, 0.0, -1.0898354053497314, -0.20406949520111084, -0.016350746154785156, 0.0, -0.0873345136642456, -1.1920922133867862e-06], "choice_history": [96, 173, 358, 105, 152, "Emergency", "Coolant", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Emergency", " ", "Coolant", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 45, 150, 13, 143, 21, 174, "player", "<EOS>", "effective_spell_damage", "<EOS>", 346, 50, 174, "Buff", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Emergency Coolant", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "damage", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"func": {"value": {"id": "player", "_type": "Name"}, "attr": "effective_spell_damage", "_type": "Attribute"}, "args": [{"id": "Buff", "_type": "Name"}], "_type": "Call"}, {"id": "self", "_type": "Name"}]}], "name": "EmergencyCoolant", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health()\n", "score": -7.1683164752053585, "score_history": [-0.000453948974609375, -3.814697265625e-05, -7.62939453125e-06, -3.24249267578125e-05, -0.000125885009765625, -2.777537883957848e-05, -4.291525328881107e-06, -4.768370445162873e-07, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.516166179906577e-05, -5.745887756347656e-05, -3.4570680327306036e-06, -0.000431060791015625, -0.0012388229370117188, -0.0039691925048828125, -3.2186455882765586e-06, -4.589557647705078e-05, -3.576278118089249e-07, -5.7220458984375e-06, -1.6808329746709205e-05, 0.0, -9.34600830078125e-05, 0.0, -0.002368927001953125, 0.0, -0.0003662109375, -0.00011444091796875, -0.0001430511474609375, -9.345745638711378e-05, -7.033342626527883e-06, -7.62939453125e-05, -0.0005035400390625, -2.09808349609375e-05, -0.0008550882339477539, -5.7220458984375e-06, -0.000255584716796875, -1.1444091796875e-05, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, 0.0, -0.00012230873107910156, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.004252195358276367, 0.0, -0.0003376007080078125, -6.307050704956055, -2.09808349609375e-05, 0.0, -2.288818359375e-05, 0.0, -0.0002040863037109375, 0.0, -5.53131103515625e-05, 0.0, -0.8447020053863525, 0.0], "choice_history": [96, 173, 358, 105, 152, "Emergency", "Coolant", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Emergency", " ", "Coolant", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 224, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Emergency Coolant", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "increase_health", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}], "name": "EmergencyCoolant", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "super().__init__('EmergencyCoolant', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON\n    )\n", "score": -14.318079752061749, "score_history": [-0.000453948974609375, -3.814697265625e-05, -7.62939453125e-06, -12.018139839172363, -2.2734737396240234, -0.0032784673385322094, -0.016017336398363113, -0.0001461399078834802, -0.00017100677359849215, 0.0, -0.006353497505187988, 0.0], "choice_history": [96, 173, 358, 127, 230, "Emergency", "Coolant", "<EOS>", "1", "<EOS>", "ALL", "<EOS>"], "model_output": {"body": [{"hole1": 1, "_type": "Template31", "hole0": "EmergencyCoolant", "hole2": "ALL"}], "_type": "Module"}}, {"inferred_code": "break\n", "score": -17.29863739013672, "score_history": [-0.000453948974609375, -3.814697265625e-05, -7.62939453125e-06, -17.298137664794922], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}}, {"inferred_code": "", "score": -22.147830963134766, "score_history": [-0.000453948974609375, -3.814697265625e-05, -22.1473388671875], "choice_history": [96, 173, 357], "model_output": {"body": [], "_type": "Module"}}]}
{"gold_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "beams": [{"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "score": -0.07553948717940528, "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -0.05310533568263054, -0.0002694964059628546, -9.536738616588991e-07, -4.489719867706299e-05, -6.29425048828125e-05, -5.841247457283316e-06, -5.7220458984375e-06, -0.0012378692626953125, -0.00197601318359375, -1.1920928244535389e-07, -2.6702880859375e-05, -8.106231689453125e-06, -0.0002574920654296875, -2.276895975228399e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -8.046627044677734e-05, -9.65590606938349e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -3.075599670410156e-05, -1.33514404296875e-05, -0.0004978179931640625, 0.0, -9.5367431640625e-06, 0.0, -0.004589080810546875, 0.0, -2.09808349609375e-05, -0.0015087127685546875, -0.000949859619140625, -3.6596775316866115e-05, -2.3603161025675945e-05, -2.4436107196379453e-05, 0.0, -0.008802652359008789, -3.0517578125e-05, -0.000926971435546875, -1.9073486328125e-05, -0.000758051872253418, 0.0], "choice_history": [97, 283, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "windfury"}], "hole2": [{"hole2": "COMMON", "hole0": "Flying Machine", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "FlyingMachine", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ForceTankMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "score": -3.5593089883446893, "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -3.051715850830078, -0.26784127950668335, -0.20358847081661224, -8.344646857949556e-07, -2.092123031616211e-05, -3.4332275390625e-05, -7.748602001811378e-06, -4.38690185546875e-05, -0.00174713134765625, -0.00165557861328125, -1.1920928244535389e-07, -3.0517578125e-05, -1.7762184143066406e-05, -0.014087677001953125, -1.8715842088568024e-05, -1.9073486328125e-06, -9.72747802734375e-05, -7.62939453125e-06, -9.381771087646484e-05, -9.417489309271332e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -3.075599670410156e-05, -1.33514404296875e-05, -0.0005130767822265625, 0.0, -9.5367431640625e-06, 0.0, -0.0045452117919921875, 0.0, -2.09808349609375e-05, -0.0015163421630859375, -0.0009555816650390625, -3.623915836215019e-05, -2.4199192921514623e-05, -2.3601769498782232e-05, 0.0, -0.008803606033325195, -3.24249267578125e-05, -0.0009250640869140625, -1.9073486328125e-05, -0.0007447004318237305, 0.0], "choice_history": [97, 283, "Force", "Tank", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "windfury"}], "hole2": [{"hole2": "COMMON", "hole0": "Flying Machine", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "ForceTankMachine", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ForceMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "score": -4.67543273871069, "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -3.051715850830078, -1.601491928100586, -2.6940935640595853e-05, -4.464387893676758e-05, -6.866455078125e-05, -7.867811291362159e-06, -2.47955322265625e-05, -0.0023136138916015625, -0.0011119842529296875, -1.1920928244535389e-07, -2.86102294921875e-05, -4.291534423828125e-06, -4.57763671875e-05, -2.6464445909368806e-05, -1.9073486328125e-06, -0.000102996826171875, -7.62939453125e-06, -9.000301361083984e-05, -7.986990567587782e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, -1.33514404296875e-05, -0.0004787445068359375, 0.0, -9.5367431640625e-06, 0.0, -0.004543304443359375, 0.0, -2.09808349609375e-05, -0.0015239715576171875, -0.0009613037109375, -3.611995271057822e-05, -2.3364747903542593e-05, -2.43169124587439e-05, 0.0, -0.008797883987426758, -3.0517578125e-05, -0.0009288787841796875, -1.9073486328125e-05, -0.000796198844909668, 0.0], "choice_history": [97, 283, "Force", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "windfury"}], "hole2": [{"hole2": "COMMON", "hole0": "Flying Machine", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "ForceMachine", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ForceTank(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "score": -5.074652192482688, "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -3.051715850830078, -0.26784127950668335, -1.6919587850570679, -2.1755695343017578e-05, -7.832050323486328e-05, -7.152556463552173e-06, -0.0001678466796875, -0.04331779479980469, -0.0008831024169921875, -3.576278118089249e-07, -3.62396240234375e-05, -7.152555099310121e-07, -2.6702880859375e-05, -2.6583655198919587e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -0.00011861324310302734, -7.748573807475623e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -3.457069396972656e-05, -1.33514404296875e-05, -0.0005016326904296875, 0.0, -9.5367431640625e-06, 0.0, -0.0044403076171875, 0.0, -2.09808349609375e-05, -0.00153350830078125, -0.0009784698486328125, -3.564313010429032e-05, -2.312633478140924e-05, -2.3959335521794856e-05, 0.0, -0.008805513381958008, -3.24249267578125e-05, -0.000926971435546875, -1.9073486328125e-05, -0.0008611679077148438, 0.0], "choice_history": [97, 283, "Force", "Tank", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "windfury"}], "hole2": [{"hole2": "COMMON", "hole0": "Flying Machine", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "ForceTank", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True)\n", "score": -5.512965933883599, "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -0.05310533568263054, -0.0002694964059628546, -9.536738616588991e-07, -4.489719867706299e-05, -6.29425048828125e-05, -5.841247457283316e-06, -5.7220458984375e-06, -0.0012378692626953125, -0.00197601318359375, -1.1920928244535389e-07, -2.6702880859375e-05, -8.106231689453125e-06, -0.0002574920654296875, -2.276895975228399e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -8.046627044677734e-05, -9.65590606938349e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -3.075599670410156e-05, -1.33514404296875e-05, -0.0004978179931640625, 0.0, -9.5367431640625e-06, 0.0, -5.442211151123047, 0.0, -4.00543212890625e-05, -0.0029449462890625, -0.0006313323974609375, -2.5152970920316875e-05, -1.823885577323381e-05, -3.182551881764084e-05, -1.9073486328125e-06, -0.007697343826293945, -2.288818359375e-05, -0.001026153564453125, -1.71661376953125e-05, -0.0004488229751586914, 0.0], "choice_history": [97, 283, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "windfury"}], "hole2": [{"hole2": "COMMON", "hole0": "Flying Machine", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "FlyingMachine", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, divine_shield=True)\n", "score": -6.239904897984154, "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -0.05310533568263054, -0.0002694964059628546, -9.536738616588991e-07, -4.489719867706299e-05, -6.29425048828125e-05, -5.841247457283316e-06, -5.7220458984375e-06, -0.0012378692626953125, -0.00197601318359375, -1.1920928244535389e-07, -2.6702880859375e-05, -8.106231689453125e-06, -0.0002574920654296875, -2.276895975228399e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -8.046627044677734e-05, -9.65590606938349e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -3.075599670410156e-05, -1.33514404296875e-05, -0.0004978179931640625, 0.0, -9.5367431640625e-06, 0.0, -0.004589080810546875, 0.0, -2.09808349609375e-05, -0.0015087127685546875, -0.000949859619140625, -3.6596775316866115e-05, -2.3603161025675945e-05, -2.4436107196379453e-05, 0.0, -6.172761917114258, 0.0, -0.001983642578125, -5.7220458984375e-06, -0.0001494884490966797, -1.9073486328125e-06], "choice_history": [97, 283, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "divine_shield"}], "hole2": [{"hole2": "COMMON", "hole0": "Flying Machine", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "FlyingMachine", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Machine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "score": -6.48505011829365, "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -6.462615966796875, -0.0002694964059628546, -9.536738616588991e-07, -4.489719867706299e-05, -6.29425048828125e-05, -5.841247457283316e-06, -5.7220458984375e-06, -0.0012378692626953125, -0.00197601318359375, -1.1920928244535389e-07, -2.6702880859375e-05, -8.106231689453125e-06, -0.0002574920654296875, -2.276895975228399e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -8.046627044677734e-05, -9.65590606938349e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -3.075599670410156e-05, -1.33514404296875e-05, -0.0004978179931640625, 0.0, -9.5367431640625e-06, 0.0, -0.004589080810546875, 0.0, -2.09808349609375e-05, -0.0015087127685546875, -0.000949859619140625, -3.6596775316866115e-05, -2.3603161025675945e-05, -2.4436107196379453e-05, 0.0, -0.008802652359008789, -3.0517578125e-05, -0.000926971435546875, -1.9073486328125e-05, -0.000758051872253418, 0.0], "choice_history": [97, 283, "<UNK>", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "windfury"}], "hole2": [{"hole2": "COMMON", "hole0": "Flying Machine", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK>Machine", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True)\n", "score": -6.5659890349470444, "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -0.05310533568263054, -0.0002694964059628546, -9.536738616588991e-07, -4.489719867706299e-05, -6.29425048828125e-05, -5.841247457283316e-06, -5.7220458984375e-06, -0.0012378692626953125, -0.00197601318359375, -1.1920928244535389e-07, -2.6702880859375e-05, -8.106231689453125e-06, -0.0002574920654296875, -2.276895975228399e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -8.046627044677734e-05, -9.65590606938349e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -3.075599670410156e-05, -1.33514404296875e-05, -0.0004978179931640625, 0.0, -9.5367431640625e-06, 0.0, -0.004589080810546875, 0.0, -2.09808349609375e-05, -0.0015087127685546875, -0.000949859619140625, -3.6596775316866115e-05, -2.3603161025675945e-05, -2.4436107196379453e-05, 0.0, -6.499826431274414, -3.933906555175781e-06, -0.0001811981201171875, -2.09808349609375e-05, -0.0009542703628540039, 0.0], "choice_history": [97, 283, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole2": "COMMON", "hole0": "Flying Machine", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "FlyingMachine", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, stealth=True)\n", "score": -6.9320627625547715, "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -0.05310533568263054, -0.0002694964059628546, -9.536738616588991e-07, -4.489719867706299e-05, -6.29425048828125e-05, -5.841247457283316e-06, -5.7220458984375e-06, -0.0012378692626953125, -0.00197601318359375, -1.1920928244535389e-07, -2.6702880859375e-05, -8.106231689453125e-06, -0.0002574920654296875, -2.276895975228399e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -8.046627044677734e-05, -9.65590606938349e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -3.075599670410156e-05, -1.33514404296875e-05, -0.0004978179931640625, 0.0, -9.5367431640625e-06, 0.0, -0.004589080810546875, 0.0, -2.09808349609375e-05, -0.0015087127685546875, -0.000949859619140625, -3.6596775316866115e-05, -2.3603161025675945e-05, -2.4436107196379453e-05, 0.0, -6.865384101867676, -3.814697265625e-06, -0.0012454986572265625, -1.33514404296875e-05, -0.0004137754440307617, 0.0], "choice_history": [97, 283, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "stealth", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "stealth"}], "hole2": [{"hole2": "COMMON", "hole0": "Flying Machine", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "FlyingMachine", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, taunt=True)\n", "score": -7.254372852619774, "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -0.05310533568263054, -0.0002694964059628546, -9.536738616588991e-07, -4.489719867706299e-05, -6.29425048828125e-05, -5.841247457283316e-06, -5.7220458984375e-06, -0.0012378692626953125, -0.00197601318359375, -1.1920928244535389e-07, -2.6702880859375e-05, -8.106231689453125e-06, -0.0002574920654296875, -2.276895975228399e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -8.046627044677734e-05, -9.65590606938349e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -3.075599670410156e-05, -1.33514404296875e-05, -0.0004978179931640625, 0.0, -9.5367431640625e-06, 0.0, -0.004589080810546875, 0.0, -2.09808349609375e-05, -0.0015087127685546875, -0.000949859619140625, -3.6596775316866115e-05, -2.3603161025675945e-05, -2.4436107196379453e-05, 0.0, -7.1890058517456055, -1.9073486328125e-06, -0.0001468658447265625, -1.33514404296875e-05, -0.00020265579223632812, 0.0], "choice_history": [97, 283, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "taunt"}], "hole2": [{"hole2": "COMMON", "hole0": "Flying Machine", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "FlyingMachine", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Force<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "score": -7.352388915468502, "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -3.051715850830078, -4.278448104858398, -2.6940935640595853e-05, -4.464387893676758e-05, -6.866455078125e-05, -7.867811291362159e-06, -2.47955322265625e-05, -0.0023136138916015625, -0.0011119842529296875, -1.1920928244535389e-07, -2.86102294921875e-05, -4.291534423828125e-06, -4.57763671875e-05, -2.6464445909368806e-05, -1.9073486328125e-06, -0.000102996826171875, -7.62939453125e-06, -9.000301361083984e-05, -7.986990567587782e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -3.063678741455078e-05, -1.33514404296875e-05, -0.0004787445068359375, 0.0, -9.5367431640625e-06, 0.0, -0.004543304443359375, 0.0, -2.09808349609375e-05, -0.0015239715576171875, -0.0009613037109375, -3.611995271057822e-05, -2.3364747903542593e-05, -2.43169124587439e-05, 0.0, -0.008797883987426758, -3.0517578125e-05, -0.0009288787841796875, -1.9073486328125e-05, -0.000796198844909668, 0.0], "choice_history": [97, 283, "Force", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "windfury"}], "hole2": [{"hole2": "COMMON", "hole0": "Flying Machine", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "Force<UNK>", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "score": -7.369103563508816, "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -0.05310533568263054, -0.0002694964059628546, -9.536738616588991e-07, -4.489719867706299e-05, -6.29425048828125e-05, -5.841247457283316e-06, -5.7220458984375e-06, -7.241360664367676, -0.003949165344238281, -3.24249267578125e-05, -0.00029754638671875, -5.841255187988281e-06, -1.9073486328125e-06, -0.0001373291015625, 0.0, -0.0025081634521484375, -0.0007762908935546875, -0.0001010894775390625, -3.4570680327306036e-06, -3.600120544433594e-05, -7.974813343025744e-05, -5.7220458984375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001533031463623047, 0.0, -7.2479248046875e-05, 0.0, -3.4332275390625e-05, -9.5367431640625e-06, -7.748603820800781e-06, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.000133514404296875, 0.0, -1.71661376953125e-05, 0.0, -1.52587890625e-05, -4.57763671875e-05, -0.02368927001953125, 0.0, -0.0001888275146484375, -5.7220458984375e-06, -4.982948303222656e-05, -2.288818359375e-05, -0.0001220703125, -0.0099334716796875, -0.002384185791015625, -0.004657745361328125, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.010906219482421875, 0.0, -1.71661376953125e-05, -0.00055694580078125, -0.000423431396484375, -1.1086422091466375e-05, -1.3470558769768104e-05, -3.635437315097079e-05, 0.0, -0.010170221328735352, -5.7220458984375e-06, -0.00113677978515625, -2.09808349609375e-05, -0.0013227462768554688, 0.0], "choice_history": [97, 283, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Flying", " ", "Machine", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "windfury"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "MECH"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Flying Machine", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "FlyingMachine", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "score": -7.4577827628218, "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -0.05310533568263054, -0.0002694964059628546, -9.536738616588991e-07, -4.489719867706299e-05, -6.29425048828125e-05, -5.841247457283316e-06, -5.7220458984375e-06, -0.0012378692626953125, -0.00197601318359375, -1.1920928244535389e-07, -2.6702880859375e-05, -8.106231689453125e-06, -0.0002574920654296875, -2.276895975228399e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -8.046627044677734e-05, -9.65590606938349e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -3.075599670410156e-05, -1.33514404296875e-05, -0.0004978179931640625, 0.0, -9.5367431640625e-06, 0.0, -0.004589080810546875, 0.0, -2.09808349609375e-05, -0.0015087127685546875, -0.000949859619140625, -3.6596775316866115e-05, -2.3603161025675945e-05, -2.4436107196379453e-05, 0.0, -0.008802652359008789, -3.0517578125e-05, -0.000926971435546875, -1.9073486328125e-05, -7.382909774780273, -9.1552734375e-05], "choice_history": [97, 283, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "windfury"}], "hole2": [{"hole2": "COMMON", "hole0": "Flying Machine", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "FlyingMachine", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=[Aura(ChangeAttack(2), WeaponSelector())])\n", "score": -8.351014840181954, "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -0.05310533568263054, -0.0002694964059628546, -9.536738616588991e-07, -4.489719867706299e-05, -6.29425048828125e-05, -5.841247457283316e-06, -5.7220458984375e-06, -0.0012378692626953125, -0.00197601318359375, -1.1920928244535389e-07, -2.6702880859375e-05, -8.106231689453125e-06, -0.0002574920654296875, -2.276895975228399e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -8.046627044677734e-05, -9.65590606938349e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -3.075599670410156e-05, -1.33514404296875e-05, -0.0004978179931640625, 0.0, -9.5367431640625e-06, 0.0, -0.004589080810546875, 0.0, -2.09808349609375e-05, -0.0015087127685546875, -0.000949859619140625, -3.6596775316866115e-05, -2.3603161025675945e-05, -2.4436107196379453e-05, 0.0, -0.008802652359008789, -3.0517578125e-05, -7.3434343338012695, -0.2651081085205078, -0.01081860065460205, -5.7220458984375e-06, -3.814697265625e-06, -0.11769676208496094, -0.000324249267578125, -0.2690385580062866, -0.0002841949462890625, -0.021018028259277344, -5.7220458984375e-06, -0.24939557909965515, -4.57763671875e-05, 0.0], "choice_history": [97, 283, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 1, "hole2": "windfury"}], "hole2": [{"hole2": "COMMON", "hole0": "Flying Machine", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "FlyingMachine", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, auras=[Aura(Windfury(), BothPlayer())]\n            )\n", "score": -9.269211446324213, "score_history": [-1.71661376953125e-05, -3.24249267578125e-05, -0.05310533568263054, -0.0002694964059628546, -9.536738616588991e-07, -4.489719867706299e-05, -6.29425048828125e-05, -5.841247457283316e-06, -5.7220458984375e-06, -0.0012378692626953125, -0.00197601318359375, -1.1920928244535389e-07, -2.6702880859375e-05, -8.106231689453125e-06, -0.0002574920654296875, -2.276895975228399e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -8.046627044677734e-05, -9.65590606938349e-06, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -3.075599670410156e-05, -1.33514404296875e-05, -0.0004978179931640625, 0.0, -9.5367431640625e-06, 0.0, -0.004589080810546875, 0.0, -2.09808349609375e-05, -6.774727821350098, -0.000164031982421875, -2.5853514671325684e-06, -5.5670738220214844e-05, -8.106198947643861e-06, -4.768370445162873e-07, -4.768338840221986e-06, -2.0265579223632812e-06, -0.0003490447998046875, -0.00106048583984375, -0.0004711151123046875, -0.07825219631195068, -9.5367431640625e-06, -0.0002651214599609375, -2.09808349609375e-05, -0.0020036697387695312, 0.0, -0.5723171234130859, -0.000141143798828125, -0.28221893310546875, -1.9073486328125e-06, -0.15035724639892578, -0.1219778060913086, -0.0005437135696411133, -1.9073486328125e-06, -1.1444091796875e-05, -0.6796817779541016, -9.5367431640625e-05, -0.4149588942527771, -0.03625690937042236, -0.013303756713867188, -3.814697265625e-06, -0.07643913477659225, -0.0010362863540649414, -7.62939453125e-06], "choice_history": [97, 283, "Flying", "Machine", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 354, 95, 336, "charge", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 88, 325, "Windfury", "<EOS>", 88, 325, "Both", "Player", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "charge", "_type": "keyword"}, {"value": {"hole1": [{"_type": "Template79", "hole0": "Windfury"}, {"_type": "Template79", "hole0": "BothPlayer"}], "_type": "Template78", "hole0": "Aura"}, "arg": "auras", "_type": "keyword"}], "_type": "Template68", "hole0": "Minion", "hole2": 4}], "hole2": [{"hole2": "COMMON", "hole0": "Flying Machine", "_type": "Template26", "hole3": "minion_type", "hole1": 3, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "FlyingMachine", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class GoblinAutoBarber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(IncreaseWeaponAttack(1), WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "beams": [{"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, battlecry=Battlecry([Damage(1), Give(\n            ChangeAttack(2))], SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -3.4455865281385414, "score_history": [-0.2495889663696289, -2.6702880859375e-05, -0.029023224487900734, -2.002705878112465e-05, -2.861018856492592e-06, -1.1897645890712738e-07, -4.6372391807381064e-05, -2.0265558760002023e-06, -9.5367431640625e-06, -0.016553878784179688, -0.00023651123046875, -5.960462772236497e-07, -4.732604429591447e-05, -1.0728830375228426e-06, -3.814697265625e-06, -8.82988388184458e-06, 0.0, -0.6171180009841919, 0.0, -0.1115487813949585, -1.9073486328125e-06, -0.722346305847168, -0.0019969940185546875, -0.001132965087890625, -0.00078582763671875, -0.009675005450844765, -6.22272418695502e-05, -0.0008716583251953125, -0.010251998901367188, -0.0009613037109375, -0.0002288818359375, -0.8056106567382812, -0.07419586181640625, -0.014975427649915218, -0.0016727447509765625, -0.041426658630371094, -0.0018491744995117188, -0.010041356086730957, -0.00015805992006789893, -7.87973403930664e-05, -0.06474673748016357, -1.7881377516459906e-06, -0.03587311506271362, -1.1920928244535389e-07, -0.5632619857788086, -9.34600830078125e-05, -0.05857372283935547, -8.583047019783407e-06, 0.0, -0.00011050365719711408, -5.7220458984375e-06, -0.00011718271707650274, 0.0, -4.57763671875e-05, -6.103515625e-05, -0.000118255615234375, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.841253368998878e-06, 0.0], "choice_history": [97, 283, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 48, 169, 347, 82, 312, "1", "<EOS>", 68, 288, "Give", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 3}], "hole2": [{"hole2": "ROGUE", "hole0": "Goblin Auto-Barber", "_type": "Template27", "hole3": "battlecry", "hole1": 2, "hole4": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"elts": [{"_type": "Template72", "hole0": 1}, {"hole1": "ChangeAttack", "_type": "Template51", "hole0": "Give", "hole2": 2}], "_type": "List"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Call"}}], "hole0": "GoblinAuto-Barber", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(Buff(ChangeAttack(Attribute('<UNK>',\n            WeaponSelector())))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -3.5750350300581744, "score_history": [-1.549210548400879, -9.5367431640625e-06, -9.5367431640625e-06, -0.0001087188720703125, -3.0517578125e-05, -0.0003711488388944417, -1.1920928244535389e-07, -0.0019884591456502676, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, -8.845127013046294e-05, -1.7881295207189396e-05, -9.1552734375e-05, -0.0007104873657226562, -9.918212890625e-05, -7.152555099310121e-07, -0.000784873787779361, -7.390948667307384e-06, -1.9073486328125e-06, -3.0171431717462838e-05, 0.0, -0.6190941333770752, -1.9073486328125e-06, -0.4241647720336914, 0.0, -0.00018393993377685547, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -1.1563301086425781e-05, -3.814697265625e-06, -0.0008563995361328125, -1.9073486328125e-06, -0.0012189149856567383, -5.841255187988281e-06, -0.16822147369384766, -0.1679086685180664, -0.005463229492306709, -0.00025281141279265285, -0.050220489501953125, -0.0011148452758789062, -0.0002994537353515625, -0.00010621533874655142, -0.03904557228088379, 0.0, -2.47955322265625e-05, -0.0067653656005859375, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -0.13024163246154785, -2.300739288330078e-05, -0.0001697540283203125, -0.0010385513305664062, -6.29425048828125e-05, -0.2137995958328247, -9.5367431640625e-06, -0.08938980102539062, -2.6702880859375e-05, -0.0654458999633789, -7.62939453125e-06, 0.0, -0.0013729247730225325, -3.933906555175781e-06, -1.1920928244535389e-07, -0.03471851348876953, -8.0108642578125e-05, -2.026557694989606e-06, 0.0, -1.2039798093610443e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Goblin", "Auto-Barber", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Attack", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "<UNK>", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "HUNTER", "hole0": "Goblin Auto-Barber", "_type": "Template4", "hole3": "COMMON", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "<UNK>", "_type": "Str"}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeAttack"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 2, "_type": "Template19", "hole0": 3}], "name": "GoblinAuto-Barber", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2, taunt=True, enrage=[Aura(ChangeAttack(2),\n            SelfSelector())])\n", "score": -4.0971387949361855, "score_history": [-0.2495889663696289, -2.6702880859375e-05, -0.029023224487900734, -2.002705878112465e-05, -2.861018856492592e-06, -1.1897645890712738e-07, -4.6372391807381064e-05, -2.0265558760002023e-06, -9.5367431640625e-06, -0.016553878784179688, -0.00023651123046875, -5.960462772236497e-07, -4.732604429591447e-05, -1.0728830375228426e-06, -3.814697265625e-06, -8.82988388184458e-06, 0.0, -1.4431487321853638, -1.9073486328125e-06, -0.1415727138519287, -1.1920928244535389e-07, -0.123291015625, -1.9073486328125e-06, -0.006946563720703125, 0.0, -0.00040280818939208984, -2.0265579223632812e-06, -0.5399398803710938, 0.0, -0.00014889240264892578, 0.0, -0.00013566017150878906, 0.0, -0.0002384185791015625, -0.08452796936035156, -0.0955667495727539, -9.494833648204803e-07, -1.0251946150674485e-05, 0.0, -3.2186455882765586e-06, -1.7762151401257142e-05, -1.1920928244535389e-07, -0.0005950927734375, -0.001216888427734375, -2.47955322265625e-05, -0.45000016689300537, -1.9073486328125e-06, -5.53131103515625e-05, -3.62396240234375e-05, -0.00029385031666606665, 0.0, -0.21602249145507812, -8.58306884765625e-05, -0.11199414730072021, 0.0, -0.0021944046020507812, -0.00128936767578125, -0.002157208975404501, 0.0, -0.000141143798828125, -0.001068115234375, -9.918212890625e-05, -0.4614903926849365, -0.0001220703125, -0.00243377685546875, -7.62939453125e-06, -0.1142786517739296, -5.960462772236497e-07, 0.0], "choice_history": [97, 283, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 354, 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "taunt", "_type": "keyword"}, {"value": {"hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "arg": "enrage", "_type": "keyword"}], "_type": "Template68", "hole0": "Minion", "hole2": 2}], "hole2": [{"hole2": "HUNTER", "hole0": "Goblin Auto-Barber", "_type": "Template27", "hole3": "minion_type", "hole1": 2, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "GoblinAuto-Barber", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.minion_type, minion_type=MINION_TYPE.MECH,\n            battlecry=Battlecry(Give(Buff(ChangeAttack(Attribute('<UNK>',\n            WeaponSelector())))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -4.126188263355267, "score_history": [-1.549210548400879, -9.5367431640625e-06, -9.5367431640625e-06, -0.0001087188720703125, -3.0517578125e-05, -0.0003711488388944417, -1.1920928244535389e-07, -0.0019884591456502676, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, -8.845127013046294e-05, -1.7881295207189396e-05, -9.1552734375e-05, -0.0007104873657226562, -9.918212890625e-05, -7.152555099310121e-07, -0.000784873787779361, -7.390948667307384e-06, -1.9073486328125e-06, -3.0171431717462838e-05, 0.0, -1.2100775241851807, -3.814697265625e-06, -0.37037670612335205, 0.0, -0.0022674796637147665, 0.0, -1.52587890625e-05, 0.0, -2.110004425048828e-05, -5.7220458984375e-06, -0.0007839202880859375, -1.9073486328125e-06, -0.0009937286376953125, -5.841255187988281e-06, -0.16492462158203125, -0.16907310485839844, -0.006467138882726431, -0.00024470718926750124, -0.043514251708984375, -0.001132965087890625, -0.00025177001953125, -0.00011408314458094537, -0.04937863349914551, -1.1920928244535389e-07, -2.6702880859375e-05, -0.0059146881103515625, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -0.1300438642501831, -2.300739288330078e-05, -0.0001697540283203125, -0.0010480880737304688, -6.4849853515625e-05, -0.22778308391571045, -9.5367431640625e-06, -0.08797740936279297, -2.6702880859375e-05, -0.06615090370178223, -7.62939453125e-06, 0.0, -0.001314989640377462, -3.933906555175781e-06, -1.1920928244535389e-07, -0.03223896026611328, -8.0108642578125e-05, -1.9073488601861754e-06, 0.0, -1.2039798093610443e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Goblin", "Auto-Barber", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "minion_type", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Attack", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "<UNK>", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Goblin Auto-Barber", "_type": "Template4", "hole3": "minion_type", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "<UNK>", "_type": "Str"}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeAttack"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 2, "_type": "Template19", "hole0": 3}], "name": "GoblinAuto-Barber", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, battlecry=Battlecry([Damage(1), Give(\n            ChangeAttack(2))], MinionSelector(players=BothPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -4.191619575872643, "score_history": [-0.2495889663696289, -2.6702880859375e-05, -0.029023224487900734, -2.002705878112465e-05, -2.861018856492592e-06, -1.1897645890712738e-07, -4.6372391807381064e-05, -2.0265558760002023e-06, -9.5367431640625e-06, -0.016553878784179688, -0.00023651123046875, -5.960462772236497e-07, -4.732604429591447e-05, -1.0728830375228426e-06, -3.814697265625e-06, -8.82988388184458e-06, 0.0, -0.6171180009841919, 0.0, -0.1115487813949585, -1.9073486328125e-06, -0.722346305847168, -0.0019969940185546875, -0.001132965087890625, -0.00078582763671875, -0.009675005450844765, -6.22272418695502e-05, -0.0008716583251953125, -0.010251998901367188, -0.0009613037109375, -0.0002288818359375, -0.8056106567382812, -0.07419586181640625, -0.014975427649915218, -0.0016727447509765625, -0.041426658630371094, -0.0018491744995117188, -0.010041356086730957, -0.00015805992006789893, -7.87973403930664e-05, -0.06474673748016357, -1.7881377516459906e-06, -0.03587311506271362, -1.1920928244535389e-07, -1.079411506652832, -0.00171661376953125, -0.015590228140354156, -0.0010166168212890625, -7.62939453125e-06, -0.2316150665283203, -2.0265579223632812e-06, -0.0013790130615234375, 0.0, -0.007426261901855469, -1.573560803080909e-05, 0.0, -0.010806018486618996, -6.318072337307967e-06, -0.00604248046875, 0.0, -0.0126878023147583, -0.00034630284062586725, -5.960462772236497e-07, -7.295608520507812e-05, 0.0, -6.902217864990234e-05, 0.0, -5.7220458984375e-05, -6.103515625e-05, -9.72747802734375e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -7.390969585685525e-06, 0.0], "choice_history": [97, 283, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 48, 169, 347, 82, 312, "1", "<EOS>", 68, 288, "Give", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 71, 293, "Minion", "Selector", "<EOS>", "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 3}], "hole2": [{"hole2": "ROGUE", "hole0": "Goblin Auto-Barber", "_type": "Template27", "hole3": "battlecry", "hole1": 2, "hole4": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"elts": [{"_type": "Template72", "hole0": 1}, {"hole1": "ChangeAttack", "_type": "Template51", "hole0": "Give", "hole2": 2}], "_type": "List"}, {"hole2": {"_type": "Template79", "hole0": "BothPlayer"}, "hole0": "MinionSelector", "_type": "Template56", "hole3": "picker", "hole1": "players", "hole4": {"_type": "Template79", "hole0": "UserPicker"}}], "_type": "Call"}}], "hole0": "GoblinAuto-Barber", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2, taunt=True, enrage=[Aura(ChangeAttack(1),\n            SelfSelector())])\n", "score": -4.563989859870091, "score_history": [-0.2495889663696289, -2.6702880859375e-05, -0.029023224487900734, -2.002705878112465e-05, -2.861018856492592e-06, -1.1897645890712738e-07, -4.6372391807381064e-05, -2.0265558760002023e-06, -9.5367431640625e-06, -0.016553878784179688, -0.00023651123046875, -5.960462772236497e-07, -4.732604429591447e-05, -1.0728830375228426e-06, -3.814697265625e-06, -8.82988388184458e-06, 0.0, -1.4431487321853638, -1.9073486328125e-06, -0.1415727138519287, -1.1920928244535389e-07, -0.123291015625, -1.9073486328125e-06, -0.006946563720703125, 0.0, -0.00040280818939208984, -2.0265579223632812e-06, -0.5399398803710938, 0.0, -0.00014889240264892578, 0.0, -0.00013566017150878906, 0.0, -0.0002384185791015625, -0.08452796936035156, -0.0955667495727539, -9.494833648204803e-07, -1.0251946150674485e-05, 0.0, -3.2186455882765586e-06, -1.7762151401257142e-05, -1.1920928244535389e-07, -0.0005950927734375, -0.001216888427734375, -2.47955322265625e-05, -0.45000016689300537, -1.9073486328125e-06, -5.53131103515625e-05, -3.62396240234375e-05, -0.00029385031666606665, 0.0, -0.21602249145507812, -8.58306884765625e-05, -0.11199414730072021, 0.0, -0.0021944046020507812, -0.00128936767578125, -0.002157208975404501, 0.0, -0.000141143798828125, -0.001068115234375, -9.918212890625e-05, -1.0294384956359863, -0.0002918243408203125, -0.0015516281127929688, -5.7220458984375e-06, -0.013894723728299141, -1.7881377516459906e-06, 0.0], "choice_history": [97, 283, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 354, 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "taunt", "_type": "keyword"}, {"value": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "arg": "enrage", "_type": "keyword"}], "_type": "Template68", "hole0": "Minion", "hole2": 2}], "hole2": [{"hole2": "HUNTER", "hole0": "Goblin Auto-Barber", "_type": "Template27", "hole3": "minion_type", "hole1": 2, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "GoblinAuto-Barber", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(BattleAxe()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -4.6459288974851205, "score_history": [-0.2495889663696289, -2.6702880859375e-05, -0.029023224487900734, -2.002705878112465e-05, -2.861018856492592e-06, -1.1897645890712738e-07, -4.6372391807381064e-05, -2.0265558760002023e-06, -9.5367431640625e-06, -0.016553878784179688, -0.00023651123046875, -5.960462772236497e-07, -4.732604429591447e-05, -1.0728830375228426e-06, -3.814697265625e-06, -8.82988388184458e-06, 0.0, -0.6171180009841919, 0.0, -0.1115487813949585, -1.9073486328125e-06, -2.146714210510254, -0.032199859619140625, -0.07031312584877014, -0.009823119267821312, -3.814697265625e-06, -0.30234813690185547, -3.0517578125e-05, -0.8033894300460815, -0.2530626356601715, -4.410743713378906e-06, -0.0033037662506103516, 0.0, -0.00023746490478515625, 0.0, -5.340576171875e-05, -4.9591064453125e-05, -0.00014495849609375, -1.1920928244535389e-07, -1.1920928244535389e-07, -9.655935173213948e-06, 0.0], "choice_history": [97, 283, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "battlecry", "<EOS>", 28, 261, "Give", "<EOS>", 346, 88, 325, "Battle", "Axe", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 3}], "hole2": [{"hole2": "ROGUE", "hole0": "Goblin Auto-Barber", "_type": "Template27", "hole3": "battlecry", "hole1": 2, "hole4": {"hole1": [{"_type": "Template79", "hole0": "BattleAxe"}], "_type": "Template42", "hole0": "Give"}}], "hole0": "GoblinAuto-Barber", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2, taunt=True, enrage=[Aura(ChangeAttack(2),\n            SelfSelector())])\n", "score": -4.717621603449679, "score_history": [-0.2495889663696289, -2.6702880859375e-05, -0.029023224487900734, -2.002705878112465e-05, -2.861018856492592e-06, -1.1897645890712738e-07, -4.6372391807381064e-05, -2.0265558760002023e-06, -9.5367431640625e-06, -0.016553878784179688, -0.00023651123046875, -5.960462772236497e-07, -4.732604429591447e-05, -1.0728830375228426e-06, -3.814697265625e-06, -8.82988388184458e-06, 0.0, -1.4431487321853638, -1.9073486328125e-06, -0.1415727138519287, -1.1920928244535389e-07, -0.123291015625, -1.9073486328125e-06, -0.006946563720703125, 0.0, -0.00040280818939208984, -2.0265579223632812e-06, -1.0657100677490234, 0.0, -0.0010863542556762695, 0.0, -6.258486973820254e-05, 0.0, -3.62396240234375e-05, -0.1026611328125, -0.1050558090209961, -1.0672956705093384e-06, -8.702239938429557e-06, 0.0, -5.006777428206988e-06, -1.6093232261482626e-05, -3.576278118089249e-07, -0.0009860992431640625, -0.001255035400390625, -2.6702880859375e-05, -0.5040552616119385, -1.9073486328125e-06, -5.7220458984375e-05, -3.4332275390625e-05, -0.00026464409893378615, 0.0, -0.25608348846435547, -8.96453857421875e-05, -0.10487961769104004, -1.9073486328125e-06, -0.00226593017578125, -0.0013427734375, -0.002225277479737997, 0.0, -0.0001373291015625, -0.0010805130004882812, -9.5367431640625e-05, -0.44212186336517334, -0.00012969970703125, -0.0024518966674804688, -7.62939453125e-06, -0.11244378983974457, -5.960462772236497e-07, 0.0], "choice_history": [97, 283, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 354, 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "taunt", "_type": "keyword"}, {"value": {"hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "arg": "enrage", "_type": "keyword"}], "_type": "Template68", "hole0": "Minion", "hole2": 2}], "hole2": [{"hole2": "HUNTER", "hole0": "Goblin Auto-Barber", "_type": "Template27", "hole3": "minion_type", "hole1": 2, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}}], "hole0": "GoblinAuto-Barber", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry([Damage(1), Give(\n            ChangeAttack(2))], SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -4.741696372341416, "score_history": [-0.2495889663696289, -2.6702880859375e-05, -0.029023224487900734, -2.002705878112465e-05, -2.861018856492592e-06, -1.1897645890712738e-07, -4.6372391807381064e-05, -2.0265558760002023e-06, -9.5367431640625e-06, -0.016553878784179688, -0.00023651123046875, -5.960462772236497e-07, -4.732604429591447e-05, -1.0728830375228426e-06, -3.814697265625e-06, -8.82988388184458e-06, 0.0, -1.75770103931427, -1.71661376953125e-05, -0.13302195072174072, -5.7220458984375e-06, -0.7934389114379883, -0.0017766952514648438, -0.000850677490234375, -0.000957489013671875, -0.008410423062741756, -5.7339664635946974e-05, -0.001434326171875, -0.009287834167480469, -0.0010280609130859375, -0.0002536773681640625, -0.8757829666137695, -0.07815837860107422, -0.01961636357009411, -0.0015716552734375, -0.04294872283935547, -0.00191497802734375, -0.009258508682250977, -0.0001491205330239609, -7.712840306339785e-05, -0.05410754680633545, -1.7881377516459906e-06, -0.033417344093322754, -1.1920928244535389e-07, -0.5632505416870117, -8.58306884765625e-05, -0.05705535411834717, -7.152531907195225e-06, 0.0, -0.00012301953393034637, -3.814697265625e-06, -0.00012171267007943243, 0.0, -4.76837158203125e-05, -5.91278076171875e-05, -0.000118255615234375, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.841253368998878e-06, 0.0], "choice_history": [97, 283, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 48, 169, 347, 82, 312, "1", "<EOS>", 68, 288, "Give", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 3}], "hole2": [{"hole2": "PALADIN", "hole0": "Goblin Auto-Barber", "_type": "Template27", "hole3": "battlecry", "hole1": 2, "hole4": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"elts": [{"_type": "Template72", "hole0": 1}, {"hole1": "ChangeAttack", "_type": "Template51", "hole0": "Give", "hole2": 2}], "_type": "List"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Call"}}], "hole0": "GoblinAuto-Barber", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.minion_type, minion_type=MINION_TYPE.MECH,\n            battlecry=Battlecry(Give(Buff(ChangeAttack(Attribute('<UNK>',\n            WeaponSelector())))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -4.7984675738989395, "score_history": [-1.549210548400879, -9.5367431640625e-06, -9.5367431640625e-06, -0.0001087188720703125, -3.0517578125e-05, -0.0003711488388944417, -1.1920928244535389e-07, -0.0019884591456502676, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, -8.845127013046294e-05, -1.7881295207189396e-05, -9.1552734375e-05, -0.0007104873657226562, -9.918212890625e-05, -7.152555099310121e-07, -0.000784873787779361, -7.390948667307384e-06, -1.9073486328125e-06, -3.0171431717462838e-05, 0.0, -0.6190941333770752, -1.9073486328125e-06, -1.6482048034667969, 0.0, -0.0008356570615433156, 0.0, -1.71661376953125e-05, 0.0, -2.491474151611328e-05, -3.814697265625e-06, -0.0007038116455078125, -1.9073486328125e-06, -0.000911712646484375, -5.841255187988281e-06, -0.163177490234375, -0.16764259338378906, -0.006759872660040855, -0.00025793613167479634, -0.046356201171875, -0.0011167526245117188, -0.000255584716796875, -0.00011718257155735046, -0.044654130935668945, -1.1920928244535389e-07, -2.6702880859375e-05, -0.005771636962890625, -4.76837158203125e-05, -5.7220458984375e-06, 0.0, -0.1284348964691162, -2.491474151611328e-05, -0.000171661376953125, -0.0010614395141601562, -6.4849853515625e-05, -0.22240281105041504, -9.5367431640625e-06, -0.08673667907714844, -2.6702880859375e-05, -0.06627857685089111, -7.62939453125e-06, 0.0, -0.0013190427562221885, -3.933906555175781e-06, -1.1920928244535389e-07, -0.03225517272949219, -8.0108642578125e-05, -1.9073488601861754e-06, 0.0, -1.2039798093610443e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Goblin", "Auto-Barber", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Attack", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "<UNK>", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "HUNTER", "hole0": "Goblin Auto-Barber", "_type": "Template4", "hole3": "minion_type", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "<UNK>", "_type": "Str"}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeAttack"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 2, "_type": "Template19", "hole0": 3}], "name": "GoblinAuto-Barber", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(weapon()),\n            MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -4.880859490680827, "score_history": [-0.2495889663696289, -2.6702880859375e-05, -0.029023224487900734, -2.002705878112465e-05, -2.861018856492592e-06, -1.1897645890712738e-07, -4.6372391807381064e-05, -2.0265558760002023e-06, -9.5367431640625e-06, -0.016553878784179688, -0.00023651123046875, -5.960462772236497e-07, -4.732604429591447e-05, -1.0728830375228426e-06, -3.814697265625e-06, -8.82988388184458e-06, 0.0, -0.6171180009841919, 0.0, -0.1115487813949585, -1.9073486328125e-06, -1.0614862442016602, -1.1372661590576172, -0.0019764848984777927, -1.2755381249007769e-05, -0.000152587890625, -0.01889801025390625, -1.33514404296875e-05, -0.5871049165725708, -0.5295608639717102, -0.5194281339645386, -2.0265579223632812e-06, -1.1920928244535389e-07, -0.00032424868550151587, -7.62939453125e-06, -0.00012135485303588212, 0.0, -6.67572021484375e-05, -3.62396240234375e-05, -0.000152587890625, -1.1920928244535389e-07, -1.1920928244535389e-07, -8.225431884056889e-06, 0.0], "choice_history": [97, 283, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 88, 325, "weapon", "<EOS>", "Minion", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 3}], "hole2": [{"hole2": "ROGUE", "hole0": "Goblin Auto-Barber", "_type": "Template27", "hole3": "battlecry", "hole1": 2, "hole4": {"hole1": [{"_type": "Template79", "hole0": "weapon"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}], "hole0": "GoblinAuto-Barber", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, Give=2)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -4.888842644454527, "score_history": [-0.2495889663696289, -2.6702880859375e-05, -0.029023224487900734, -2.002705878112465e-05, -2.861018856492592e-06, -1.1897645890712738e-07, -4.6372391807381064e-05, -2.0265558760002023e-06, -9.5367431640625e-06, -0.016553878784179688, -0.00023651123046875, -5.960462772236497e-07, -4.732604429591447e-05, -1.0728830375228426e-06, -3.814697265625e-06, -8.82988388184458e-06, 0.0, -0.6171180009841919, 0.0, -2.7086751461029053, -2.4199236577260308e-05, -0.25457191467285156, -0.003452301025390625, -0.5507560968399048, 0.0, -2.300739288330078e-05, 0.0, -3.290176027803682e-05, 0.0, -2.288818359375e-05, -0.4585561752319336, -3.24249267578125e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.483625955093885e-06, 0.0], "choice_history": [97, 283, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "Give", "<EOS>", 23, 179, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 3}], "hole2": [{"hole2": "ROGUE", "hole0": "Goblin Auto-Barber", "_type": "Template27", "hole3": "Give", "hole1": 2, "hole4": {"n": 2, "_type": "Num"}}], "hole0": "GoblinAuto-Barber", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.minion_type, minion_type=MINION_TYPE.MECH,\n            battlecry=Battlecry(Give(Buff(ChangeAttack(Attribute('<UNK>',\n            WeaponSelector())))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.133493628876728, "score_history": [-1.549210548400879, -9.5367431640625e-06, -9.5367431640625e-06, -0.0001087188720703125, -3.0517578125e-05, -0.0003711488388944417, -1.1920928244535389e-07, -0.0019884591456502676, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, -8.845127013046294e-05, -1.7881295207189396e-05, -9.1552734375e-05, -0.0007104873657226562, -9.918212890625e-05, -7.152555099310121e-07, -0.000784873787779361, -7.390948667307384e-06, -1.9073486328125e-06, -3.0171431717462838e-05, 0.0, -2.253368616104126, -5.7220458984375e-06, -0.3448362350463867, 0.0, -0.0008060931577347219, 0.0, -1.52587890625e-05, 0.0, -1.1563301086425781e-05, -3.814697265625e-06, -0.0008087158203125, -1.9073486328125e-06, -0.001087188720703125, -5.841255187988281e-06, -0.16767215728759766, -0.16251659393310547, -0.006341118365526199, -0.00025245387223549187, -0.04502296447753906, -0.0011243820190429688, -0.0002574920654296875, -0.0001145599817391485, -0.046854257583618164, -1.1920928244535389e-07, -2.6702880859375e-05, -0.006302833557128906, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -0.128698468208313, -2.300739288330078e-05, -0.0001697540283203125, -0.0010499954223632812, -6.4849853515625e-05, -0.22398293018341064, -9.5367431640625e-06, -0.0887746810913086, -2.6702880859375e-05, -0.06560945510864258, -7.62939453125e-06, 0.0, -0.0013326324988156557, -3.933906555175781e-06, -1.1920928244535389e-07, -0.032573699951171875, -8.0108642578125e-05, -1.9073488601861754e-06, 0.0, -1.2039798093610443e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Goblin", "Auto-Barber", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Attack", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "<UNK>", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "3", "<EOS>", "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "PALADIN", "hole0": "Goblin Auto-Barber", "_type": "Template4", "hole3": "minion_type", "hole1": 2, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "<UNK>", "_type": "Str"}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeAttack"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 2, "_type": "Template19", "hole0": 3}], "name": "GoblinAuto-Barber", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, battlecry=Battlecry([IncreaseWeaponAttack(1\n            ), IncreaseDurability()], SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -5.135811234232641, "score_history": [-0.2495889663696289, -2.6702880859375e-05, -0.029023224487900734, -2.002705878112465e-05, -2.861018856492592e-06, -1.1897645890712738e-07, -4.6372391807381064e-05, -2.0265558760002023e-06, -9.5367431640625e-06, -0.016553878784179688, -0.00023651123046875, -5.960462772236497e-07, -4.732604429591447e-05, -1.0728830375228426e-06, -3.814697265625e-06, -8.82988388184458e-06, 0.0, -0.6171180009841919, 0.0, -0.1115487813949585, -1.9073486328125e-06, -0.722346305847168, -0.0019969940185546875, -0.001132965087890625, -0.00078582763671875, -0.009675005450844765, -6.22272418695502e-05, -0.0008716583251953125, -0.010251998901367188, -0.0009613037109375, -0.0002288818359375, -0.9042673110961914, -0.007928848266601562, -0.11370742321014404, -0.31993335485458374, -0.007325172424316406, -1.9073486328125e-05, -0.008992195129394531, 0.0, -0.04738044738769531, -0.0004444122314453125, -0.31379106640815735, -0.13961376249790192, -0.0008697509765625, -0.7455120086669922, -0.000484466552734375, -0.7525234222412109, -9.536714060232043e-06, 0.0, -0.00011515415098983794, -5.7220458984375e-06, -5.900859832763672e-05, 0.0, -6.29425048828125e-05, -5.340576171875e-05, -0.000152587890625, -1.1920928244535389e-07, -2.3841855067985307e-07, -6.0796710386057384e-06, 0.0], "choice_history": [97, 283, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 48, 169, 347, 84, 315, "Increase", "Weapon", "Attack", "<EOS>", "1", "<EOS>", 83, 314, "Increase", "Durability", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template62", "hole0": 3}], "hole2": [{"hole2": "ROGUE", "hole0": "Goblin Auto-Barber", "_type": "Template27", "hole3": "battlecry", "hole1": 2, "hole4": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"elts": [{"hole1": 1, "_type": "Template74", "hole0": "IncreaseWeaponAttack"}, {"_type": "Template73_expr_seq", "hole0": "IncreaseDurability"}], "_type": "List"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Call"}}], "hole0": "GoblinAuto-Barber", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2, taunt=True, enrage=[Aura(ChangeAttack(1),\n            SelfSelector())])\n", "score": -5.2435234770442705, "score_history": [-0.2495889663696289, -2.6702880859375e-05, -0.029023224487900734, -2.002705878112465e-05, -2.861018856492592e-06, -1.1897645890712738e-07, -4.6372391807381064e-05, -2.0265558760002023e-06, -9.5367431640625e-06, -0.016553878784179688, -0.00023651123046875, -5.960462772236497e-07, -4.732604429591447e-05, -1.0728830375228426e-06, -3.814697265625e-06, -8.82988388184458e-06, 0.0, -1.4431487321853638, -1.9073486328125e-06, -0.1415727138519287, -1.1920928244535389e-07, -0.123291015625, -1.9073486328125e-06, -0.006946563720703125, 0.0, -0.00040280818939208984, -2.0265579223632812e-06, -1.0657100677490234, 0.0, -0.0010863542556762695, 0.0, -6.258486973820254e-05, 0.0, -3.62396240234375e-05, -0.1026611328125, -0.1050558090209961, -1.0672956705093384e-06, -8.702239938429557e-06, 0.0, -5.006777428206988e-06, -1.6093232261482626e-05, -3.576278118089249e-07, -0.0009860992431640625, -0.001255035400390625, -2.6702880859375e-05, -0.5040552616119385, -1.9073486328125e-06, -5.7220458984375e-05, -3.4332275390625e-05, -0.00026464409893378615, 0.0, -0.25608348846435547, -8.96453857421875e-05, -0.10487961769104004, -1.9073486328125e-06, -0.00226593017578125, -0.0013427734375, -0.002225277479737997, 0.0, -0.0001373291015625, -0.0010805130004882812, -9.5367431640625e-05, -1.067627191543579, -0.0003147125244140625, -0.00152587890625, -5.7220458984375e-06, -0.01358205545693636, -1.7881377516459906e-06, 0.0], "choice_history": [97, 283, "Goblin", "Auto-Barber", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "3", "<EOS>", "2", "<EOS>", 354, 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "taunt", "_type": "keyword"}, {"value": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "arg": "enrage", "_type": "keyword"}], "_type": "Template68", "hole0": "Minion", "hole2": 2}], "hole2": [{"hole2": "HUNTER", "hole0": "Goblin Auto-Barber", "_type": "Template27", "hole3": "minion_type", "hole1": 2, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}}], "hole0": "GoblinAuto-Barber", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give([\n            Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]), MinionSelector(\n            IsType(MINION_TYPE.MECH), picker=RandomPicker())))])\n", "beams": [{"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(Kill(),\n            Draw()))])\n", "score": -2.7939555743141398, "score_history": [-0.012058258056640625, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517112463712692e-05, 0.0, -8.630396769149229e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0003290049498900771, -5.07823824591469e-05, -8.07046890258789e-05, -5.7220458984375e-06, -0.007042884826660156, -0.0002994537353515625, -2.3841855067985307e-07, -0.14768509566783905, -2.1338273654691875e-05, -1.1444091796875e-05, -1.1563301086425781e-05, -7.62939453125e-06, -0.65201735496521, -7.62939453125e-06, -0.0008682012557983398, 0.0, -0.0002498626708984375, -0.000125885009765625, -6.103515625e-05, -0.001689910888671875, -0.0004062652587890625, -0.0044727325439453125, -0.8440303802490234, -0.000349698617355898, -3.552412090357393e-05, -0.00031610566657036543, -4.363048719824292e-05, -0.059236012399196625, -0.12376618385314941, -0.00063323974609375, -0.2817121744155884, -0.1396803855895996, -0.509101390838623, -0.0072612762451171875], "choice_history": [96, 173, 358, 105, 152, "Iron", "Sensei", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 186, "2", "<EOS>", "2", "<EOS>", "Turn", "Started", "<EOS>", "Kill", "<EOS>", "Draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "ROGUE", "hole0": "Iron Sensei", "_type": "Template14", "hole3": "RARE", "hole1": 3}, {"hole5": "Draw", "hole2": "TurnStarted", "hole0": 2, "_type": "Template0", "hole3": "Kill", "hole1": 2}], "name": "IronSensei", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(\n            <UNK>WithHand(), PlayerSelector()))])\n", "score": -3.646599399427913, "score_history": [-0.012058258056640625, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517112463712692e-05, 0.0, -8.630396769149229e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0003290049498900771, -5.07823824591469e-05, -8.07046890258789e-05, -5.7220458984375e-06, -0.007042884826660156, -0.0002994537353515625, -2.3841855067985307e-07, -0.14768509566783905, -2.1338273654691875e-05, -1.1444091796875e-05, -1.1563301086425781e-05, -7.62939453125e-06, -0.65201735496521, -7.62939453125e-06, -0.0008682012557983398, 0.0, -0.0002498626708984375, -0.000125885009765625, -6.103515625e-05, -0.001689910888671875, -0.0004062652587890625, -0.0044727325439453125, -0.8440303802490234, -0.000349698617355898, -3.552412090357393e-05, -0.00031610566657036543, -4.363048719824292e-05, -0.059236012399196625, -0.12376618385314941, -0.00063323974609375, -1.6971765756607056, -0.02437303215265274, -0.06585347652435303, -0.0008859634399414062, -0.0021042823791503906, -1.9073486328125e-06, -3.814697265625e-06], "choice_history": [96, 173, 358, 105, 152, "Iron", "Sensei", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 186, "2", "<EOS>", "2", "<EOS>", "Turn", "Started", "<EOS>", "<UNK>", "With", "Hand", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "ROGUE", "hole0": "Iron Sensei", "_type": "Template14", "hole3": "RARE", "hole1": 3}, {"hole5": "PlayerSelector", "hole2": "TurnStarted", "hole0": 2, "_type": "Template0", "hole3": "<UNK>WithHand", "hole1": 2}], "name": "IronSensei", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(Kill(),\n            MinionSelector()))])\n", "score": -3.9919695952339396, "score_history": [-0.012058258056640625, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517112463712692e-05, 0.0, -8.630396769149229e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0003290049498900771, -5.07823824591469e-05, -8.07046890258789e-05, -5.7220458984375e-06, -0.007042884826660156, -0.0002994537353515625, -2.3841855067985307e-07, -0.14768509566783905, -2.1338273654691875e-05, -1.1444091796875e-05, -1.1563301086425781e-05, -7.62939453125e-06, -0.65201735496521, -7.62939453125e-06, -0.0008682012557983398, 0.0, -0.0002498626708984375, -0.000125885009765625, -6.103515625e-05, -0.001689910888671875, -0.0004062652587890625, -0.0044727325439453125, -0.8440303802490234, -0.000349698617355898, -3.552412090357393e-05, -0.00031610566657036543, -4.363048719824292e-05, -0.059236012399196625, -0.12376618385314941, -0.00063323974609375, -0.2817121744155884, -0.1396803855895996, -1.4246761798858643, -0.2897005081176758, 0.0], "choice_history": [96, 173, 358, 105, 152, "Iron", "Sensei", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 186, "2", "<EOS>", "2", "<EOS>", "Turn", "Started", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "ROGUE", "hole0": "Iron Sensei", "_type": "Template14", "hole3": "RARE", "hole1": 3}, {"hole5": "MinionSelector", "hole2": "TurnStarted", "hole0": 2, "_type": "Template0", "hole3": "Kill", "hole1": 2}], "name": "IronSensei", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(Kill(),\n            Draw()))])\n", "score": -4.050252374310702, "score_history": [-0.012058258056640625, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517112463712692e-05, 0.0, -8.630396769149229e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0003290049498900771, -5.07823824591469e-05, -8.07046890258789e-05, -5.7220458984375e-06, -0.007042884826660156, -0.0002994537353515625, -2.3841855067985307e-07, -0.14768509566783905, -2.1338273654691875e-05, -1.1444091796875e-05, -1.1563301086425781e-05, -7.62939453125e-06, -2.060148000717163, -4.38690185546875e-05, -0.004278421401977539, 0.0, -0.0001201629638671875, -0.00017547607421875, -5.53131103515625e-05, -0.0007572174072265625, -0.0001163482666015625, -0.00524139404296875, -0.798698902130127, -0.000302983884466812, -1.7523716451250948e-05, -0.00040136341704055667, -3.2544070563744754e-05, -0.0815173089504242, -0.07111859321594238, -0.000331878662109375, -0.2741212844848633, -0.13326144218444824, -0.446384072303772, -0.005237579345703125], "choice_history": [96, 173, 358, 105, 152, "Iron", "Sensei", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 186, "2", "<EOS>", "2", "<EOS>", "Turn", "Started", "<EOS>", "Kill", "<EOS>", "Draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "HUNTER", "hole0": "Iron Sensei", "_type": "Template14", "hole3": "RARE", "hole1": 3}, {"hole5": "Draw", "hole2": "TurnStarted", "hole0": 2, "_type": "Template0", "hole3": "Kill", "hole1": 2}], "name": "IronSensei", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(Kill(),\n            Draw()))])\n", "score": -4.1421130753878685, "score_history": [-0.012058258056640625, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517112463712692e-05, 0.0, -8.630396769149229e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0003290049498900771, -5.07823824591469e-05, -8.07046890258789e-05, -5.7220458984375e-06, -0.007042884826660156, -0.0002994537353515625, -2.3841855067985307e-07, -0.14768509566783905, -2.1338273654691875e-05, -1.1444091796875e-05, -1.1563301086425781e-05, -7.62939453125e-06, -1.8555219173431396, -0.0003185272216796875, -0.00023293495178222656, 0.0, -0.000110626220703125, -9.34600830078125e-05, -5.7220458984375e-05, -0.0030269622802734375, -0.0004787445068359375, -0.0049381256103515625, -0.8673734664916992, -0.00035148608731105924, -4.398781311465427e-05, -0.00028999062487855554, -4.816039654542692e-05, -0.07385999709367752, -0.1386120319366455, -0.0006160736083984375, -0.3030056953430176, -0.1343371868133545, -0.5841728448867798, -0.006732940673828125], "choice_history": [96, 173, 358, 105, 152, "Iron", "Sensei", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 186, "2", "<EOS>", "2", "<EOS>", "Turn", "Started", "<EOS>", "Kill", "<EOS>", "Draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "PRIEST", "hole0": "Iron Sensei", "_type": "Template14", "hole3": "RARE", "hole1": 3}, {"hole5": "Draw", "hole2": "TurnStarted", "hole0": 2, "_type": "Template0", "hole3": "Kill", "hole1": 2}], "name": "IronSensei", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Draw(),\n            PlayerSelector()))])\n", "score": -4.25409699467852, "score_history": [-0.012058258056640625, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517112463712692e-05, 0.0, -8.630396769149229e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0003290049498900771, -5.07823824591469e-05, -8.07046890258789e-05, -5.7220458984375e-06, -0.007042884826660156, -0.0002994537353515625, -2.3841855067985307e-07, -0.14768509566783905, -2.1338273654691875e-05, -1.1444091796875e-05, -1.1563301086425781e-05, -7.62939453125e-06, -0.65201735496521, -7.62939453125e-06, -0.0008682012557983398, 0.0, -0.0002498626708984375, -0.000125885009765625, -6.103515625e-05, -0.001689910888671875, -0.0004062652587890625, -0.0044727325439453125, -0.8440303802490234, -0.000349698617355898, -3.552412090357393e-05, -0.00031610566657036543, -4.363048719824292e-05, -0.059236012399196625, -2.383774995803833, -0.00014710426330566406, -0.13752317428588867, -0.0005588531494140625, -0.0002652406692504883, -2.288818359375e-05, -3.814697265625e-06], "choice_history": [96, 173, 358, 105, 152, "Iron", "Sensei", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 186, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "ROGUE", "hole0": "Iron Sensei", "_type": "Template14", "hole3": "RARE", "hole1": 3}, {"hole5": "PlayerSelector", "hole2": "TurnEnded", "hole0": 2, "_type": "Template0", "hole3": "Draw", "hole1": 2}], "name": "IronSensei", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(Kill(),\n            Draw()))])\n", "score": -4.319890072709285, "score_history": [-0.012058258056640625, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517112463712692e-05, 0.0, -8.630396769149229e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0003290049498900771, -5.07823824591469e-05, -8.07046890258789e-05, -5.7220458984375e-06, -0.007042884826660156, -0.0002994537353515625, -2.3841855067985307e-07, -0.14768509566783905, -2.1338273654691875e-05, -1.1444091796875e-05, -1.1563301086425781e-05, -7.62939453125e-06, -2.3287065029144287, -0.000286102294921875, -0.0002789497375488281, 0.0, -0.0003032684326171875, -0.000186920166015625, -5.14984130859375e-05, -0.0008678436279296875, -0.0001926422119140625, -0.00482940673828125, -0.8023505210876465, -0.00031537775066681206, -2.109997694788035e-05, -0.0003731018223334104, -3.910054510924965e-05, -0.0650005117058754, -0.07443928718566895, -0.00041961669921875, -0.27911627292633057, -0.1436920166015625, -0.44500279426574707, -0.005526542663574219], "choice_history": [96, 173, 358, 105, 152, "Iron", "Sensei", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "PALADIN", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 186, "2", "<EOS>", "2", "<EOS>", "Turn", "Started", "<EOS>", "Kill", "<EOS>", "Draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "PALADIN", "hole0": "Iron Sensei", "_type": "Template14", "hole3": "RARE", "hole1": 3}, {"hole5": "Draw", "hole2": "TurnStarted", "hole0": 2, "_type": "Template0", "hole3": "Kill", "hole1": 2}], "name": "IronSensei", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(Kill(),\n            MinionSelector(condition=Null, players=BothPlayer())))])\n", "score": -4.56163576488413, "score_history": [-0.012058258056640625, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517112463712692e-05, 0.0, -8.630396769149229e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0003290049498900771, -5.07823824591469e-05, -8.07046890258789e-05, -5.7220458984375e-06, -0.007042884826660156, -0.0002994537353515625, -2.3841855067985307e-07, -0.14768509566783905, -2.1338273654691875e-05, -1.1444091796875e-05, -1.1563301086425781e-05, -7.62939453125e-06, -0.65201735496521, -7.62939453125e-06, -0.0008682012557983398, 0.0, -0.0002498626708984375, -0.000125885009765625, -6.103515625e-05, -0.001689910888671875, -0.0004062652587890625, -0.0044727325439453125, -2.797543525695801, -0.0014531725319102407, -1.5139535207708832e-05, -0.0002522410068195313, -1.5139563402044587e-05, -0.0011764763621613383, -0.14276695251464844, -0.00026702880859375, -0.0009588002576492727, -0.004611492156982422, -0.01652991771697998, -0.0008487701416015625, 0.0, -0.033245086669921875, -0.0001087188720703125, -2.09808349609375e-05, -0.024059295654296875, -0.00012409687042236328, -0.0012340545654296875, -0.0001049041748046875, -0.0001888275146484375, 0.0, -0.1374368667602539, -0.00058746337890625, -0.0590972900390625, -3.62396240234375e-05, -0.000179290771484375, -7.62939453125e-06, -0.5107479095458984, -0.0002269744873046875, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Iron", "Sensei", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 187, "2", "<EOS>", "2", "<EOS>", "Turn", "Started", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>", 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "ROGUE", "hole0": "Iron Sensei", "_type": "Template14", "hole3": "RARE", "hole1": 3}, {"hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "TurnStarted", "hole0": 2, "_type": "Template0", "hole3": "Kill", "hole1": 2}], "name": "IronSensei", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(\n            <UNK>WithHand(), PlayerSelector()))])\n", "score": -4.818660099786911, "score_history": [-0.012058258056640625, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517112463712692e-05, 0.0, -8.630396769149229e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0003290049498900771, -5.07823824591469e-05, -8.07046890258789e-05, -5.7220458984375e-06, -0.007042884826660156, -0.0002994537353515625, -2.3841855067985307e-07, -0.14768509566783905, -2.1338273654691875e-05, -1.1444091796875e-05, -1.1563301086425781e-05, -7.62939453125e-06, -1.8555219173431396, -0.0003185272216796875, -0.00023293495178222656, 0.0, -0.000110626220703125, -9.34600830078125e-05, -5.7220458984375e-05, -0.0030269622802734375, -0.0004787445068359375, -0.0049381256103515625, -0.8673734664916992, -0.00035148608731105924, -4.398781311465427e-05, -0.00028999062487855554, -4.816039654542692e-05, -0.07385999709367752, -0.1386120319366455, -0.0006160736083984375, -1.6091208457946777, -0.024907086044549942, -0.06801319122314453, -0.0007848739624023438, -0.001963973045349121, -1.9073486328125e-06, -3.814697265625e-06], "choice_history": [96, 173, 358, 105, 152, "Iron", "Sensei", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 186, "2", "<EOS>", "2", "<EOS>", "Turn", "Started", "<EOS>", "<UNK>", "With", "Hand", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "PRIEST", "hole0": "Iron Sensei", "_type": "Template14", "hole3": "RARE", "hole1": 3}, {"hole5": "PlayerSelector", "hole2": "TurnStarted", "hole0": 2, "_type": "Template0", "hole3": "<UNK>WithHand", "hole1": 2}], "name": "IronSensei", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('IronIron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(Kill(),\n            Draw()))])\n", "score": -4.951441166201192, "score_history": [-0.012058258056640625, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517112463712692e-05, 0.0, -8.630396769149229e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0003290049498900771, -5.07823824591469e-05, -8.07046890258789e-05, -5.7220458984375e-06, -0.007042884826660156, -0.0002994537353515625, -2.3841855067985307e-07, -1.9893163442611694, -0.01854863576591015, -1.1205610462639015e-05, -7.62939453125e-06, -1.1563301086425781e-05, -5.7220458984375e-06, -0.9752157926559448, -3.814697265625e-06, -0.001051187515258789, 0.0, -0.000194549560546875, -0.0001220703125, -5.91278076171875e-05, -0.0013580322265625, -0.0003376007080078125, -0.0043392181396484375, -0.8130593299865723, -0.00033647098462097347, -3.51665003108792e-05, -0.00031288291211239994, -4.088868445251137e-05, -0.05910738930106163, -0.11607575416564941, -0.0005626678466796875, -0.2882431745529175, -0.14501583576202393, -0.5104901790618896, -0.0074253082275390625], "choice_history": [96, 173, 358, 105, 152, "Iron", "Sensei", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Iron", "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 186, "2", "<EOS>", "2", "<EOS>", "Turn", "Started", "<EOS>", "Kill", "<EOS>", "Draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "ROGUE", "hole0": "IronIron Sensei", "_type": "Template14", "hole3": "RARE", "hole1": 3}, {"hole5": "Draw", "hole2": "TurnStarted", "hole0": 2, "_type": "Template0", "hole3": "Kill", "hole1": 2}], "name": "IronSensei", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnStarted(), ActionTag(Kill(),\n            MinionSelector(condition=Null, players=RandomPicker())))])\n", "score": -5.6156014526359, "score_history": [-0.012058258056640625, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517112463712692e-05, 0.0, -8.630396769149229e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0003290049498900771, -5.07823824591469e-05, -8.07046890258789e-05, -5.7220458984375e-06, -0.007042884826660156, -0.0002994537353515625, -2.3841855067985307e-07, -0.14768509566783905, -2.1338273654691875e-05, -1.1444091796875e-05, -1.1563301086425781e-05, -7.62939453125e-06, -0.65201735496521, -7.62939453125e-06, -0.0008682012557983398, 0.0, -0.0002498626708984375, -0.000125885009765625, -6.103515625e-05, -0.001689910888671875, -0.0004062652587890625, -0.0044727325439453125, -2.797543525695801, -0.0014531725319102407, -1.5139535207708832e-05, -0.0002522410068195313, -1.5139563402044587e-05, -0.0011764763621613383, -0.14276695251464844, -0.00026702880859375, -0.0009588002576492727, -0.004611492156982422, -0.01652991771697998, -0.0008487701416015625, 0.0, -0.033245086669921875, -0.0001087188720703125, -2.09808349609375e-05, -0.024059295654296875, -0.00012409687042236328, -0.0012340545654296875, -0.0001049041748046875, -0.0001888275146484375, 0.0, -0.1374368667602539, -0.00058746337890625, -0.0590972900390625, -3.62396240234375e-05, -0.000179290771484375, -7.62939453125e-06, -1.564864158630371, -7.832050323486328e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Iron", "Sensei", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 187, "2", "<EOS>", "2", "<EOS>", "Turn", "Started", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>", 95, 336, "players", "<EOS>", 38, 325, "Random", "Picker", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "ROGUE", "hole0": "Iron Sensei", "_type": "Template14", "hole3": "RARE", "hole1": 3}, {"hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "players", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "TurnStarted", "hole0": 2, "_type": "Template0", "hole3": "Kill", "hole1": 2}], "name": "IronSensei", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.LIST, source_list=<UNK>)),\n            PlayerSelector(ActionTag(Give([Buff(ChangeAttack(2)), Buff(\n            ChangeHealth(2))]), TargetSelector()))))])\n", "score": -5.740648694806708, "score_history": [-0.012058258056640625, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517112463712692e-05, 0.0, -8.630396769149229e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0003290049498900771, -5.07823824591469e-05, -8.07046890258789e-05, -5.7220458984375e-06, -0.007042884826660156, -0.0002994537353515625, -2.3841855067985307e-07, -0.14768509566783905, -2.1338273654691875e-05, -1.1444091796875e-05, -1.1563301086425781e-05, -7.62939453125e-06, -0.65201735496521, -7.62939453125e-06, -0.0008682012557983398, 0.0, -0.0002498626708984375, -0.000125885009765625, -6.103515625e-05, -0.001689910888671875, -0.0004062652587890625, -0.0044727325439453125, -1.7360968589782715, -0.0033936169929802418, -3.504720370983705e-05, -0.0012635731836780906, -1.8239017663290724e-05, -0.01789391040802002, -0.014269828796386719, -2.503394853192731e-06, -0.3645632266998291, -0.019031882286071777, -0.0003600120544433594, -0.0002269744873046875, -0.10559940338134766, -0.0002956390380859375, -0.0002300739288330078, -0.00023651123046875, -1.9073486328125e-05, -0.001331329345703125, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -0.010693550109863281, -0.00014495849609375, -0.009313583374023438, -1.1444091796875e-05, -0.0036373138427734375, -6.67572021484375e-05, -0.0022373199462890625, 0.0, -0.01399838924407959, -2.3722626792732626e-05, -0.17870712280273438, -4.1961669921875e-05, 0.0, -0.01590728759765625, -1.0799436569213867, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.1328955888748169, -0.0010271072387695312, -2.861022494471399e-06, -0.0001277923583984375, -0.01203155517578125, -0.0004730224609375, -2.110004425048828e-05, -0.08212459087371826, -7.62939453125e-06, -0.5843563079833984, -1.9073486328125e-06, -0.000759124755859375, -0.004421353340148926, -4.768370445162873e-07, -0.36873936653137207, -1.1563301086425781e-05, -0.00016021728515625, -0.000102996826171875, -0.14591145515441895, -2.157687231374439e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Iron", "Sensei", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 191, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "<UNK>", "<EOS>", "Player", "Selector", "<EOS>", 346, 45, 150, 21, 174, "Action", "Tag", "<EOS>", 347, 55, 215, "Change", "Attack", "<EOS>", "2", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 88, 325, "Target", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "ROGUE", "hole0": "Iron Sensei", "_type": "Template14", "hole3": "RARE", "hole1": 3}, {"hole5": "PlayerSelector", "hole2": "TurnEnded", "hole0": 2, "_type": "Template0", "hole3": "AddCard", "hole1": 2, "hole4": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "<UNK>", "_type": "Name"}}], "hole6": [{"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 2, "hole3": 2, "_type": "Template21", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}, {"_type": "Template79", "hole0": "TargetSelector"}], "_type": "Call"}]}], "name": "IronSensei", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.LIST, source_list=<UNK>)),\n            PlayerSelector(ActionTag(Give([Buff(ChangeAttack(1)), Buff(\n            ChangeHealth(1))]), TargetSelector()))))])\n", "score": -6.254275866332222, "score_history": [-0.012058258056640625, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517112463712692e-05, 0.0, -8.630396769149229e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0003290049498900771, -5.07823824591469e-05, -8.07046890258789e-05, -5.7220458984375e-06, -0.007042884826660156, -0.0002994537353515625, -2.3841855067985307e-07, -0.14768509566783905, -2.1338273654691875e-05, -1.1444091796875e-05, -1.1563301086425781e-05, -7.62939453125e-06, -0.65201735496521, -7.62939453125e-06, -0.0008682012557983398, 0.0, -0.0002498626708984375, -0.000125885009765625, -6.103515625e-05, -0.001689910888671875, -0.0004062652587890625, -0.0044727325439453125, -1.7360968589782715, -0.0033936169929802418, -3.504720370983705e-05, -0.0012635731836780906, -1.8239017663290724e-05, -0.01789391040802002, -0.014269828796386719, -2.503394853192731e-06, -0.3645632266998291, -0.019031882286071777, -0.0003600120544433594, -0.0002269744873046875, -0.10559940338134766, -0.0002956390380859375, -0.0002300739288330078, -0.00023651123046875, -1.9073486328125e-05, -0.001331329345703125, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -0.010693550109863281, -0.00014495849609375, -0.009313583374023438, -1.1444091796875e-05, -0.0036373138427734375, -6.67572021484375e-05, -0.0022373199462890625, 0.0, -0.01399838924407959, -2.3722626792732626e-05, -0.17870712280273438, -4.1961669921875e-05, 0.0, -0.01590728759765625, -1.0799436569213867, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.1328955888748169, -0.0010271072387695312, -2.861022494471399e-06, -0.0001277923583984375, -0.01203155517578125, -0.0004730224609375, -2.110004425048828e-05, -0.08212459087371826, -7.62939453125e-06, -0.8205429315567017, -9.655952453613281e-06, -0.0006923675537109375, -0.0013828277587890625, -4.768370445162873e-07, -0.13952672481536865, -3.075599670410156e-05, -0.0022182464599609375, -4.57763671875e-05, -0.6536579132080078, -5.841255187988281e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Iron", "Sensei", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 191, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "<UNK>", "<EOS>", "Player", "Selector", "<EOS>", 346, 45, 150, 21, 174, "Action", "Tag", "<EOS>", 347, 55, 215, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 88, 325, "Target", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "ROGUE", "hole0": "Iron Sensei", "_type": "Template14", "hole3": "RARE", "hole1": 3}, {"hole5": "PlayerSelector", "hole2": "TurnEnded", "hole0": 2, "_type": "Template0", "hole3": "AddCard", "hole1": 2, "hole4": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "<UNK>", "_type": "Name"}}], "hole6": [{"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 1, "hole3": 1, "_type": "Template21", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}, {"_type": "Template79", "hole0": "TargetSelector"}], "_type": "Call"}]}], "name": "IronSensei", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.LIST, source_list=<UNK>)),\n            PlayerSelector(ActionTag(Give([Buff(ChangeAttack(1)), Buff(\n            ChangeHealth(1))]), SelfSelector()))))])\n", "score": -6.340240069213081, "score_history": [-0.012058258056640625, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517112463712692e-05, 0.0, -8.630396769149229e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0003290049498900771, -5.07823824591469e-05, -8.07046890258789e-05, -5.7220458984375e-06, -0.007042884826660156, -0.0002994537353515625, -2.3841855067985307e-07, -0.14768509566783905, -2.1338273654691875e-05, -1.1444091796875e-05, -1.1563301086425781e-05, -7.62939453125e-06, -0.65201735496521, -7.62939453125e-06, -0.0008682012557983398, 0.0, -0.0002498626708984375, -0.000125885009765625, -6.103515625e-05, -0.001689910888671875, -0.0004062652587890625, -0.0044727325439453125, -1.7360968589782715, -0.0033936169929802418, -3.504720370983705e-05, -0.0012635731836780906, -1.8239017663290724e-05, -0.01789391040802002, -0.014269828796386719, -2.503394853192731e-06, -0.3645632266998291, -0.019031882286071777, -0.0003600120544433594, -0.0002269744873046875, -0.10559940338134766, -0.0002956390380859375, -0.0002300739288330078, -0.00023651123046875, -1.9073486328125e-05, -0.001331329345703125, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -0.010693550109863281, -0.00014495849609375, -0.009313583374023438, -1.1444091796875e-05, -0.0036373138427734375, -6.67572021484375e-05, -0.0022373199462890625, 0.0, -0.01399838924407959, -2.3722626792732626e-05, -0.17870712280273438, -4.1961669921875e-05, 0.0, -0.01590728759765625, -1.0799436569213867, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.1328955888748169, -0.0010271072387695312, -2.861022494471399e-06, -0.0001277923583984375, -0.01203155517578125, -0.0004730224609375, -2.110004425048828e-05, -0.08212459087371826, -7.62939453125e-06, -0.8205429315567017, -9.655952453613281e-06, -0.0006923675537109375, -0.0013828277587890625, -4.768370445162873e-07, -0.13952672481536865, -3.075599670410156e-05, -0.0022182464599609375, -4.57763671875e-05, -0.7396259307861328, -2.0265579223632812e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Iron", "Sensei", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 191, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "<UNK>", "<EOS>", "Player", "Selector", "<EOS>", 346, 45, 150, 21, 174, "Action", "Tag", "<EOS>", 347, 55, 215, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "ROGUE", "hole0": "Iron Sensei", "_type": "Template14", "hole3": "RARE", "hole1": 3}, {"hole5": "PlayerSelector", "hole2": "TurnEnded", "hole0": 2, "_type": "Template0", "hole3": "AddCard", "hole1": 2, "hole4": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "<UNK>", "_type": "Name"}}], "hole6": [{"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 1, "hole3": 1, "_type": "Template21", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Call"}]}], "name": "IronSensei", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.LIST, source_list=<UNK>)),\n            PlayerSelector(ActionTag(Give([Buff(ChangeAttack(2)), Buff(\n            ChangeHealth(1))]), TargetSelector()))))])\n", "score": -7.034288831534553, "score_history": [-0.012058258056640625, -1.1444091796875e-05, -9.5367431640625e-06, -7.05718994140625e-05, -3.62396240234375e-05, -3.0517112463712692e-05, 0.0, -8.630396769149229e-05, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0003290049498900771, -5.07823824591469e-05, -8.07046890258789e-05, -5.7220458984375e-06, -0.007042884826660156, -0.0002994537353515625, -2.3841855067985307e-07, -0.14768509566783905, -2.1338273654691875e-05, -1.1444091796875e-05, -1.1563301086425781e-05, -7.62939453125e-06, -0.65201735496521, -7.62939453125e-06, -0.0008682012557983398, 0.0, -0.0002498626708984375, -0.000125885009765625, -6.103515625e-05, -0.001689910888671875, -0.0004062652587890625, -0.0044727325439453125, -1.7360968589782715, -0.0033936169929802418, -3.504720370983705e-05, -0.0012635731836780906, -1.8239017663290724e-05, -0.01789391040802002, -0.014269828796386719, -2.503394853192731e-06, -0.3645632266998291, -0.019031882286071777, -0.0003600120544433594, -0.0002269744873046875, -0.10559940338134766, -0.0002956390380859375, -0.0002300739288330078, -0.00023651123046875, -1.9073486328125e-05, -0.001331329345703125, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -0.010693550109863281, -0.00014495849609375, -0.009313583374023438, -1.1444091796875e-05, -0.0036373138427734375, -6.67572021484375e-05, -0.0022373199462890625, 0.0, -0.01399838924407959, -2.3722626792732626e-05, -0.17870712280273438, -4.1961669921875e-05, 0.0, -0.01590728759765625, -1.0799436569213867, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.1328955888748169, -0.0010271072387695312, -2.861022494471399e-06, -0.0001277923583984375, -0.01203155517578125, -0.0004730224609375, -2.110004425048828e-05, -0.08212459087371826, -7.62939453125e-06, -0.5843563079833984, -1.9073486328125e-06, -0.000759124755859375, -0.004421353340148926, -4.768370445162873e-07, -1.194930911064148, -1.9311904907226562e-05, -0.000579833984375, -3.4332275390625e-05, -0.6130170822143555, -5.841255187988281e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Iron", "Sensei", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 191, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "<UNK>", "<EOS>", "Player", "Selector", "<EOS>", 346, 45, 150, 21, 174, "Action", "Tag", "<EOS>", 347, 55, 215, "Change", "Attack", "<EOS>", "2", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 88, 325, "Target", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "ROGUE", "hole0": "Iron Sensei", "_type": "Template14", "hole3": "RARE", "hole1": 3}, {"hole5": "PlayerSelector", "hole2": "TurnEnded", "hole0": 2, "_type": "Template0", "hole3": "AddCard", "hole1": 2, "hole4": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "<UNK>", "_type": "Name"}}], "hole6": [{"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 2, "hole3": 1, "_type": "Template21", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}, {"_type": "Template79", "hole0": "TargetSelector"}], "_type": "Call"}]}], "name": "IronSensei", "_type": "ClassDef"}], "_type": "Module"}}]}
{"gold_code": "class MalGanis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeHealth(2), MinionSelector(\n            IsType(MINION_TYPE.DEMON))), Aura(ChangeAttack(2),\n            MinionSelector(IsType(MINION_TYPE.DEMON))), Aura(Immune(),\n            HeroSelector())])\n", "beams": [{"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.BEAST))), Aura(ChangeHealth(1),\n            MinionSelector(IsType(MINION_TYPE.DEMON)))])\n", "score": -2.4377755809840593, "score_history": [-3.4332275390625e-05, -0.0002689361572265625, -0.00026186901959590614, -1.1920928244535389e-07, -5.792826414108276e-07, -2.300739288330078e-05, -7.152555099310121e-07, -0.000759124755859375, -0.021684646606445312, -0.0033168792724609375, -2.288818359375e-05, 0.0, -4.768370445162873e-07, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000576019287109375, -6.103515625e-05, -0.00040435791015625, -7.87973403930664e-05, -9.894371032714844e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0018208492547273636, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.16061115264892578, -4.00543212890625e-05, -0.0001087188720703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, -7.43865966796875e-05, -0.022802352905273438, 0.0, -0.014795303344726562, -0.006625175476074219, -7.05718994140625e-05, -0.08012008666992188, 0.0, -0.000537872314453125, 0.0, -5.173683166503906e-05, 0.0, -3.4332275390625e-05, -0.00351715087890625, -2.6702880859375e-05, -7.152555099310121e-07, -2.3841830625315197e-06, -1.5497138520004228e-05, -1.9073486328125e-06, -0.009038329124450684, 0.0, -0.000255584716796875, -0.11174201965332031, -0.0014927006559446454, -1.9073486328125e-06, -3.4332275390625e-05, -0.005031585693359375, -4.1961669921875e-05, -0.0893910676240921, -0.00014495849609375, -0.3949747085571289, -0.0001888275146484375, -0.00024199479958042502, -0.00257718563079834, -3.814697265625e-05, -2.47955322265625e-05, -0.002086639404296875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -3.457069396972656e-05, -1.1444091796875e-05, -0.8011083602905273, 0.0, -7.2479248046875e-05, -0.17934131622314453, -0.04814910888671875, -0.0012423997977748513, -0.0025634765625, -4.57763671875e-05, -0.08986186981201172, -0.0054492950439453125, -0.06090491637587547, -2.0265579223632812e-06, -0.2058696746826172, -0.000347137451171875, -0.0002579684369266033, -0.0012378692626953125, -3.814697265625e-06, -2.09808349609375e-05, -6.67572021484375e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -3.063678741455078e-05, -7.62939453125e-06, -0.10449886322021484, -1.9073486328125e-06], "choice_history": [97, 283, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mal'Ganis", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 81, 311, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"_type": "Template71", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 9, "hole2": "auras"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Mal'Ganis", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.DEMON))), Aura(ChangeHealth(1),\n            MinionSelector(IsType(MINION_TYPE.DEMON)))])\n", "score": -2.542970806986311, "score_history": [-3.4332275390625e-05, -0.0002689361572265625, -0.00026186901959590614, -1.1920928244535389e-07, -5.792826414108276e-07, -2.300739288330078e-05, -7.152555099310121e-07, -0.000759124755859375, -0.021684646606445312, -0.0033168792724609375, -2.288818359375e-05, 0.0, -4.768370445162873e-07, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000576019287109375, -6.103515625e-05, -0.00040435791015625, -7.87973403930664e-05, -9.894371032714844e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0018208492547273636, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.16061115264892578, -4.00543212890625e-05, -0.0001087188720703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, -7.43865966796875e-05, -0.022802352905273438, 0.0, -0.014795303344726562, -0.006625175476074219, -7.05718994140625e-05, -0.08012008666992188, 0.0, -0.000537872314453125, 0.0, -5.173683166503906e-05, 0.0, -3.4332275390625e-05, -0.00351715087890625, -2.6702880859375e-05, -7.152555099310121e-07, -2.3841830625315197e-06, -1.5497138520004228e-05, -1.9073486328125e-06, -0.009038329124450684, 0.0, -0.000255584716796875, -0.11174201965332031, -0.0014927006559446454, -1.9073486328125e-06, -3.4332275390625e-05, -0.005031585693359375, -4.1961669921875e-05, -0.0893910676240921, -0.00014495849609375, -0.3949747085571289, -0.0001888275146484375, -0.00024199479958042502, -0.00257718563079834, -3.814697265625e-05, -2.47955322265625e-05, -0.002086639404296875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -3.457069396972656e-05, -1.1444091796875e-05, -0.9756288528442383, -1.9073486328125e-06, -7.62939453125e-06, -0.032769203186035156, -0.048961639404296875, -0.0009236546466127038, -0.0022335052490234375, -4.38690185546875e-05, -0.06359481811523438, -0.0064334869384765625, -0.04810831695795059, -2.0265579223632812e-06, -0.3183422088623047, -0.0004291534423828125, -0.0003097051230724901, -0.001077890396118164, -3.814697265625e-06, -2.09808349609375e-05, -6.29425048828125e-05, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.457069396972656e-05, -7.62939453125e-06, -0.10727787017822266, -1.9073486328125e-06], "choice_history": [97, 283, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mal'Ganis", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 81, 311, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"_type": "Template71", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 9, "hole2": "auras"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Mal'Ganis", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(ChangeHealth(1), MinionSelector(IsType(MINION_TYPE.DEMON)))])\n", "score": -3.2608163790977116, "score_history": [-3.4332275390625e-05, -0.0002689361572265625, -0.00026186901959590614, -1.1920928244535389e-07, -5.792826414108276e-07, -2.300739288330078e-05, -7.152555099310121e-07, -0.000759124755859375, -0.021684646606445312, -0.0033168792724609375, -2.288818359375e-05, 0.0, -4.768370445162873e-07, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000576019287109375, -6.103515625e-05, -0.00040435791015625, -7.87973403930664e-05, -9.894371032714844e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0018208492547273636, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.16061115264892578, -4.00543212890625e-05, -0.0001087188720703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, -7.43865966796875e-05, -0.022802352905273438, 0.0, -0.014795303344726562, -0.006625175476074219, -7.05718994140625e-05, -0.08012008666992188, 0.0, -0.000537872314453125, 0.0, -5.173683166503906e-05, 0.0, -3.4332275390625e-05, -0.00351715087890625, -2.6702880859375e-05, -7.152555099310121e-07, -2.3841830625315197e-06, -1.5497138520004228e-05, -1.9073486328125e-06, -0.009038329124450684, 0.0, -0.000255584716796875, -0.11174201965332031, -0.0014927006559446454, -1.9073486328125e-06, -3.4332275390625e-05, -0.005031585693359375, -4.1961669921875e-05, -0.0893910676240921, -0.00014495849609375, -1.151402473449707, -4.00543212890625e-05, -0.43429476022720337, -1.4305038348538801e-05, 0.0, -3.814697265625e-06, -0.0018835067749023438, -0.000530242919921875, -0.09734611958265305, -6.115436553955078e-05, -3.4332275390625e-05, -0.5556268692016602, -0.005377769470214844, -0.05620278790593147, -3.933906555175781e-06, -0.2743844985961914, -0.0002765655517578125, -0.000294327677693218, -0.0030301809310913086, -3.4332275390625e-05, -3.4332275390625e-05, -0.0001392364501953125, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -4.398822784423828e-05, -1.1444091796875e-05, -0.1432476043701172, -1.9073486328125e-06], "choice_history": [97, 283, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mal'Ganis", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 81, 311, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"_type": "Template71", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 9, "hole2": "auras"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Mal'Ganis", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.DEMON))), Aura(ChangeHealth(1), HeroSelector())]\n            )\n", "score": -3.9307555866686172, "score_history": [-3.4332275390625e-05, -0.0002689361572265625, -0.00026186901959590614, -1.1920928244535389e-07, -5.792826414108276e-07, -2.300739288330078e-05, -7.152555099310121e-07, -0.000759124755859375, -0.021684646606445312, -0.0033168792724609375, -2.288818359375e-05, 0.0, -4.768370445162873e-07, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000576019287109375, -6.103515625e-05, -0.00040435791015625, -7.87973403930664e-05, -9.894371032714844e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0018208492547273636, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.16061115264892578, -4.00543212890625e-05, -0.0001087188720703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, -7.43865966796875e-05, -0.022802352905273438, 0.0, -0.014795303344726562, -0.006625175476074219, -7.05718994140625e-05, -0.08012008666992188, 0.0, -0.000537872314453125, 0.0, -5.173683166503906e-05, 0.0, -3.4332275390625e-05, -0.00351715087890625, -2.6702880859375e-05, -7.152555099310121e-07, -2.3841830625315197e-06, -1.5497138520004228e-05, -1.9073486328125e-06, -0.009038329124450684, 0.0, -0.000255584716796875, -0.11174201965332031, -0.0014927006559446454, -1.9073486328125e-06, -3.4332275390625e-05, -0.005031585693359375, -4.1961669921875e-05, -0.0893910676240921, -0.00014495849609375, -0.3949747085571289, -0.0001888275146484375, -0.00024199479958042502, -0.00257718563079834, -3.814697265625e-05, -2.47955322265625e-05, -0.002086639404296875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -3.457069396972656e-05, -1.1444091796875e-05, -0.9756288528442383, -1.9073486328125e-06, -7.62939453125e-06, -0.032769203186035156, -0.048961639404296875, -0.0009236546466127038, -0.0022335052490234375, -4.38690185546875e-05, -0.06359481811523438, -0.0064334869384765625, -0.04810831695795059, -2.0265579223632812e-06, -1.3586950302124023, -0.0009593963623046875, -0.4557226300239563, -3.099440846199286e-06, 0.0], "choice_history": [97, 283, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mal'Ganis", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 81, 311, "1", "<EOS>", 88, 325, "Hero", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"_type": "Template71", "hole0": 1}, {"_type": "Template79", "hole0": "HeroSelector"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 9, "hole2": "auras"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Mal'Ganis", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.DRAGON))), Aura(ChangeHealth(1),\n            MinionSelector(IsType(MINION_TYPE.DEMON)))])\n", "score": -4.012348775184698, "score_history": [-3.4332275390625e-05, -0.0002689361572265625, -0.00026186901959590614, -1.1920928244535389e-07, -5.792826414108276e-07, -2.300739288330078e-05, -7.152555099310121e-07, -0.000759124755859375, -0.021684646606445312, -0.0033168792724609375, -2.288818359375e-05, 0.0, -4.768370445162873e-07, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000576019287109375, -6.103515625e-05, -0.00040435791015625, -7.87973403930664e-05, -9.894371032714844e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0018208492547273636, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.16061115264892578, -4.00543212890625e-05, -0.0001087188720703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, -7.43865966796875e-05, -0.022802352905273438, 0.0, -0.014795303344726562, -0.006625175476074219, -7.05718994140625e-05, -0.08012008666992188, 0.0, -0.000537872314453125, 0.0, -5.173683166503906e-05, 0.0, -3.4332275390625e-05, -0.00351715087890625, -2.6702880859375e-05, -7.152555099310121e-07, -2.3841830625315197e-06, -1.5497138520004228e-05, -1.9073486328125e-06, -0.009038329124450684, 0.0, -0.000255584716796875, -0.11174201965332031, -0.0014927006559446454, -1.9073486328125e-06, -3.4332275390625e-05, -0.005031585693359375, -4.1961669921875e-05, -0.0893910676240921, -0.00014495849609375, -0.3949747085571289, -0.0001888275146484375, -0.00024199479958042502, -0.00257718563079834, -3.814697265625e-05, -2.47955322265625e-05, -0.002086639404296875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -3.457069396972656e-05, -1.1444091796875e-05, -2.305461883544922, -1.9073486328125e-06, -0.000400543212890625, -0.2969980239868164, -0.0064792633056640625, -0.0007922221557237208, -0.00089263916015625, -3.814697265625e-05, -0.0783233642578125, -0.006047248840332031, -0.03354479372501373, -2.0265579223632812e-06, -0.2379913330078125, -0.0003566741943359375, -0.0003340240800753236, -0.001079559326171875, -3.814697265625e-06, -1.9073486328125e-05, -6.866455078125e-05, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -3.075599670410156e-05, -7.62939453125e-06, -0.10677814483642578, -1.9073486328125e-06], "choice_history": [97, 283, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mal'Ganis", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 81, 311, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"_type": "Template71", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 9, "hole2": "auras"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Mal'Ganis", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.BEAST))), Aura(ChangeHealth(1), HeroSelector())]\n            )\n", "score": -4.239606767266984, "score_history": [-3.4332275390625e-05, -0.0002689361572265625, -0.00026186901959590614, -1.1920928244535389e-07, -5.792826414108276e-07, -2.300739288330078e-05, -7.152555099310121e-07, -0.000759124755859375, -0.021684646606445312, -0.0033168792724609375, -2.288818359375e-05, 0.0, -4.768370445162873e-07, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000576019287109375, -6.103515625e-05, -0.00040435791015625, -7.87973403930664e-05, -9.894371032714844e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0018208492547273636, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.16061115264892578, -4.00543212890625e-05, -0.0001087188720703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, -7.43865966796875e-05, -0.022802352905273438, 0.0, -0.014795303344726562, -0.006625175476074219, -7.05718994140625e-05, -0.08012008666992188, 0.0, -0.000537872314453125, 0.0, -5.173683166503906e-05, 0.0, -3.4332275390625e-05, -0.00351715087890625, -2.6702880859375e-05, -7.152555099310121e-07, -2.3841830625315197e-06, -1.5497138520004228e-05, -1.9073486328125e-06, -0.009038329124450684, 0.0, -0.000255584716796875, -0.11174201965332031, -0.0014927006559446454, -1.9073486328125e-06, -3.4332275390625e-05, -0.005031585693359375, -4.1961669921875e-05, -0.0893910676240921, -0.00014495849609375, -0.3949747085571289, -0.0001888275146484375, -0.00024199479958042502, -0.00257718563079834, -3.814697265625e-05, -2.47955322265625e-05, -0.002086639404296875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -3.457069396972656e-05, -1.1444091796875e-05, -0.8011083602905273, 0.0, -7.2479248046875e-05, -0.17934131622314453, -0.04814910888671875, -0.0012423997977748513, -0.0025634765625, -4.57763671875e-05, -0.08986186981201172, -0.0054492950439453125, -0.06090491637587547, -2.0265579223632812e-06, -1.7568387985229492, -0.000972747802734375, -0.3563827872276306, -4.88758041683468e-06, 0.0], "choice_history": [97, 283, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mal'Ganis", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 81, 311, "1", "<EOS>", 88, 325, "Hero", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"_type": "Template71", "hole0": 1}, {"_type": "Template79", "hole0": "HeroSelector"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 9, "hole2": "auras"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Mal'Ganis", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.PIRATE))), Aura(ChangeHealth(1),\n            MinionSelector(IsType(MINION_TYPE.DEMON)))])\n", "score": -4.241455349882351, "score_history": [-3.4332275390625e-05, -0.0002689361572265625, -0.00026186901959590614, -1.1920928244535389e-07, -5.792826414108276e-07, -2.300739288330078e-05, -7.152555099310121e-07, -0.000759124755859375, -0.021684646606445312, -0.0033168792724609375, -2.288818359375e-05, 0.0, -4.768370445162873e-07, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000576019287109375, -6.103515625e-05, -0.00040435791015625, -7.87973403930664e-05, -9.894371032714844e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0018208492547273636, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.16061115264892578, -4.00543212890625e-05, -0.0001087188720703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, -7.43865966796875e-05, -0.022802352905273438, 0.0, -0.014795303344726562, -0.006625175476074219, -7.05718994140625e-05, -0.08012008666992188, 0.0, -0.000537872314453125, 0.0, -5.173683166503906e-05, 0.0, -3.4332275390625e-05, -0.00351715087890625, -2.6702880859375e-05, -7.152555099310121e-07, -2.3841830625315197e-06, -1.5497138520004228e-05, -1.9073486328125e-06, -0.009038329124450684, 0.0, -0.000255584716796875, -0.11174201965332031, -0.0014927006559446454, -1.9073486328125e-06, -3.4332275390625e-05, -0.005031585693359375, -4.1961669921875e-05, -0.0893910676240921, -0.00014495849609375, -0.3949747085571289, -0.0001888275146484375, -0.00024199479958042502, -0.00257718563079834, -3.814697265625e-05, -2.47955322265625e-05, -0.002086639404296875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -3.457069396972656e-05, -1.1444091796875e-05, -2.944939613342285, -1.9073486328125e-06, -3.814697265625e-06, -0.012746810913085938, -0.008502006530761719, -0.00128646707162261, -0.001247406005859375, -5.14984130859375e-05, -0.07535934448242188, -0.005164146423339844, -0.04701070114970207, -2.0265579223632812e-06, -0.10624504089355469, -0.0003261566162109375, -0.00029826126410625875, -0.0011557340621948242, -3.814697265625e-06, -2.09808349609375e-05, -6.4849853515625e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -3.266334533691406e-05, -9.5367431640625e-06, -0.10028934478759766, -1.9073486328125e-06], "choice_history": [97, 283, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mal'Ganis", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 81, 311, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "PIRATE", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"_type": "Template71", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 9, "hole2": "auras"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Mal'Ganis", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.BEAST)))])\n", "score": -4.344450630786348, "score_history": [-3.4332275390625e-05, -0.0002689361572265625, -0.00026186901959590614, -1.1920928244535389e-07, -5.792826414108276e-07, -2.300739288330078e-05, -7.152555099310121e-07, -0.000759124755859375, -0.021684646606445312, -0.0033168792724609375, -2.288818359375e-05, 0.0, -4.768370445162873e-07, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000576019287109375, -6.103515625e-05, -0.00040435791015625, -7.87973403930664e-05, -9.894371032714844e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0018208492547273636, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.16061115264892578, -4.00543212890625e-05, -0.0001087188720703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, -7.43865966796875e-05, -0.022802352905273438, 0.0, -0.014795303344726562, -0.006625175476074219, -7.05718994140625e-05, -0.08012008666992188, 0.0, -0.000537872314453125, 0.0, -5.173683166503906e-05, 0.0, -3.4332275390625e-05, -0.00351715087890625, -2.6702880859375e-05, -7.152555099310121e-07, -2.3841830625315197e-06, -1.5497138520004228e-05, -1.9073486328125e-06, -0.009038329124450684, 0.0, -0.000255584716796875, -2.271638870239258, -0.020609719678759575, 0.0, -1.1444091796875e-05, -0.14239978790283203, -2.288818359375e-05, -0.5960941910743713, -0.00032806396484375, -0.22462940216064453, -0.0002307891845703125, -0.0003747930168174207, -0.003289461135864258, -3.814697265625e-05, -1.52587890625e-05, -0.000885009765625, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -2.1338462829589844e-05, -7.62939453125e-06, -0.7552461624145508, 0.0], "choice_history": [97, 283, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mal'Ganis", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 9, "hole2": "auras"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Mal'Ganis", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.DEMON)))])\n", "score": -4.540019669177461, "score_history": [-3.4332275390625e-05, -0.0002689361572265625, -0.00026186901959590614, -1.1920928244535389e-07, -5.792826414108276e-07, -2.300739288330078e-05, -7.152555099310121e-07, -0.000759124755859375, -0.021684646606445312, -0.0033168792724609375, -2.288818359375e-05, 0.0, -4.768370445162873e-07, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000576019287109375, -6.103515625e-05, -0.00040435791015625, -7.87973403930664e-05, -9.894371032714844e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0018208492547273636, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.16061115264892578, -4.00543212890625e-05, -0.0001087188720703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, -7.43865966796875e-05, -0.022802352905273438, 0.0, -0.014795303344726562, -0.006625175476074219, -7.05718994140625e-05, -0.08012008666992188, 0.0, -0.000537872314453125, 0.0, -5.173683166503906e-05, 0.0, -3.4332275390625e-05, -0.00351715087890625, -2.6702880859375e-05, -7.152555099310121e-07, -2.3841830625315197e-06, -1.5497138520004228e-05, -1.9073486328125e-06, -0.009038329124450684, 0.0, -0.000255584716796875, -2.271638870239258, -0.020609719678759575, 0.0, -1.1444091796875e-05, -0.14239978790283203, -2.288818359375e-05, -0.5960941910743713, -0.00032806396484375, -0.22462940216064453, -0.0002307891845703125, -0.0003747930168174207, -0.003289461135864258, -3.814697265625e-05, -1.52587890625e-05, -0.000885009765625, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -2.1338462829589844e-05, -7.62939453125e-06, -0.9508132934570312, -1.9073486328125e-06], "choice_history": [97, 283, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mal'Ganis", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 9, "hole2": "auras"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Mal'Ganis", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.BEAST))), Aura(ChangeHealth(1),\n            MinionSelector(IsType(MINION_TYPE.DEMON)))])\n", "score": -4.625647364606827, "score_history": [-3.4332275390625e-05, -0.0002689361572265625, -0.00026186901959590614, -1.1920928244535389e-07, -5.792826414108276e-07, -2.300739288330078e-05, -7.152555099310121e-07, -0.000759124755859375, -0.021684646606445312, -0.0033168792724609375, -2.288818359375e-05, 0.0, -4.768370445162873e-07, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000576019287109375, -6.103515625e-05, -0.00040435791015625, -7.87973403930664e-05, -9.894371032714844e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0018208492547273636, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0002727508544921875, -1.9073486328125e-06, -2.3155155181884766, 0.0, -0.0002040863037109375, -7.62939453125e-06, -2.288818359375e-05, 0.0, -1.52587890625e-05, -6.67572021484375e-05, -0.028522491455078125, 0.0, -0.014842987060546875, -0.008565902709960938, -8.0108642578125e-05, -0.1065378189086914, 0.0, -0.0005931854248046875, 0.0, -5.173683166503906e-05, 0.0, -3.4332275390625e-05, -0.00362396240234375, -2.6702880859375e-05, -7.152555099310121e-07, -2.264974000354414e-06, -1.943104507518001e-05, -1.9073486328125e-06, -0.00890195369720459, 0.0, -0.0002574920654296875, -0.11034488677978516, -0.0015042639570310712, -1.9073486328125e-06, -3.4332275390625e-05, -0.005084991455078125, -4.1961669921875e-05, -0.08914192020893097, -0.0001468658447265625, -0.3950176239013672, -0.0001888275146484375, -0.00024187559029087424, -0.002581000328063965, -3.814697265625e-05, -2.47955322265625e-05, -0.00206756591796875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -3.457069396972656e-05, -9.5367431640625e-06, -0.8025569915771484, 0.0, -7.43865966796875e-05, -0.1785879135131836, -0.04826545715332031, -0.0012431147042661905, -0.002567291259765625, -4.57763671875e-05, -0.08971405029296875, -0.005451202392578125, -0.06097104772925377, -2.0265579223632812e-06, -0.20552730560302734, -0.000347137451171875, -0.0002579684369266033, -0.0012378692626953125, -3.814697265625e-06, -2.09808349609375e-05, -6.67572021484375e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -3.063678741455078e-05, -7.62939453125e-06, -0.10441303253173828, -1.9073486328125e-06], "choice_history": [97, 283, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mal'Ganis", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 81, 311, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"_type": "Template71", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 9, "hole2": "auras"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Mal'Ganis", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(Summon(Immune()), PlayerSelector())])\n", "score": -4.698815399079066, "score_history": [-3.4332275390625e-05, -0.0002689361572265625, -0.00026186901959590614, -1.1920928244535389e-07, -5.792826414108276e-07, -2.300739288330078e-05, -7.152555099310121e-07, -0.000759124755859375, -0.021684646606445312, -0.0033168792724609375, -2.288818359375e-05, 0.0, -4.768370445162873e-07, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000576019287109375, -6.103515625e-05, -0.00040435791015625, -7.87973403930664e-05, -9.894371032714844e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0018208492547273636, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.16061115264892578, -4.00543212890625e-05, -0.0001087188720703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, -7.43865966796875e-05, -0.022802352905273438, 0.0, -0.014795303344726562, -0.006625175476074219, -7.05718994140625e-05, -0.08012008666992188, 0.0, -0.000537872314453125, 0.0, -5.173683166503906e-05, 0.0, -3.4332275390625e-05, -0.00351715087890625, -2.6702880859375e-05, -7.152555099310121e-07, -2.3841830625315197e-06, -1.5497138520004228e-05, -1.9073486328125e-06, -0.009038329124450684, 0.0, -0.000255584716796875, -0.11174201965332031, -0.0014927006559446454, -1.9073486328125e-06, -3.4332275390625e-05, -0.005031585693359375, -4.1961669921875e-05, -0.0893910676240921, -0.00014495849609375, -1.151402473449707, -4.00543212890625e-05, -0.43429476022720337, -1.4305038348538801e-05, 0.0, -3.814697265625e-06, -0.0018835067749023438, -0.000530242919921875, -0.09734611958265305, -6.115436553955078e-05, -3.4332275390625e-05, -1.0361003875732422, -5.7220458984375e-05, -1.2946897745132446, -2.8848335205111653e-05, -0.010917335748672485, -0.00017808315169531852, -0.0006780624389648438, -3.814697265625e-06, -0.13401736319065094, -6.639917410211638e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mal'Ganis", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 70, 292, "Summon", "<EOS>", "Immune", "<EOS>", 88, 325, "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"hole1": "Immune", "_type": "Template55", "hole0": "Summon"}, {"_type": "Template79", "hole0": "PlayerSelector"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 9, "hole2": "auras"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Mal'Ganis", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.DEMON))), Aura(ChangeHealth(1),\n            MinionSelector(IsType(MINION_TYPE.DEMON)))])\n", "score": -4.727517534673659, "score_history": [-3.4332275390625e-05, -0.0002689361572265625, -0.00026186901959590614, -1.1920928244535389e-07, -5.792826414108276e-07, -2.300739288330078e-05, -7.152555099310121e-07, -0.000759124755859375, -0.021684646606445312, -0.0033168792724609375, -2.288818359375e-05, 0.0, -4.768370445162873e-07, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000576019287109375, -6.103515625e-05, -0.00040435791015625, -7.87973403930664e-05, -9.894371032714844e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0018208492547273636, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0002727508544921875, -1.9073486328125e-06, -2.3155155181884766, 0.0, -0.0002040863037109375, -7.62939453125e-06, -2.288818359375e-05, 0.0, -1.52587890625e-05, -6.67572021484375e-05, -0.028522491455078125, 0.0, -0.014842987060546875, -0.008565902709960938, -8.0108642578125e-05, -0.1065378189086914, 0.0, -0.0005931854248046875, 0.0, -5.173683166503906e-05, 0.0, -3.4332275390625e-05, -0.00362396240234375, -2.6702880859375e-05, -7.152555099310121e-07, -2.264974000354414e-06, -1.943104507518001e-05, -1.9073486328125e-06, -0.00890195369720459, 0.0, -0.0002574920654296875, -0.11034488677978516, -0.0015042639570310712, -1.9073486328125e-06, -3.4332275390625e-05, -0.005084991455078125, -4.1961669921875e-05, -0.08914192020893097, -0.0001468658447265625, -0.3950176239013672, -0.0001888275146484375, -0.00024187559029087424, -0.002581000328063965, -3.814697265625e-05, -2.47955322265625e-05, -0.00206756591796875, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -3.457069396972656e-05, -9.5367431640625e-06, -0.9727773666381836, -1.9073486328125e-06, -7.62939453125e-06, -0.03291797637939453, -0.04912853240966797, -0.0009255619952455163, -0.002231597900390625, -4.38690185546875e-05, -0.0634145736694336, -0.006436347961425781, -0.048117395490407944, -2.0265579223632812e-06, -0.3180370330810547, -0.0004291534423828125, -0.0003097051230724901, -0.001077890396118164, -3.814697265625e-06, -2.09808349609375e-05, -6.29425048828125e-05, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.457069396972656e-05, -7.62939453125e-06, -0.10727214813232422, -1.9073486328125e-06], "choice_history": [97, 283, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mal'Ganis", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 81, 311, "1", "<EOS>", 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"_type": "Template71", "hole0": 1}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 9, "hole2": "auras"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Mal'Ganis", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(ChangeHealth(1), HeroSelector())])\n", "score": -4.742837234105416, "score_history": [-3.4332275390625e-05, -0.0002689361572265625, -0.00026186901959590614, -1.1920928244535389e-07, -5.792826414108276e-07, -2.300739288330078e-05, -7.152555099310121e-07, -0.000759124755859375, -0.021684646606445312, -0.0033168792724609375, -2.288818359375e-05, 0.0, -4.768370445162873e-07, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000576019287109375, -6.103515625e-05, -0.00040435791015625, -7.87973403930664e-05, -9.894371032714844e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0018208492547273636, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.16061115264892578, -4.00543212890625e-05, -0.0001087188720703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, -7.43865966796875e-05, -0.022802352905273438, 0.0, -0.014795303344726562, -0.006625175476074219, -7.05718994140625e-05, -0.08012008666992188, 0.0, -0.000537872314453125, 0.0, -5.173683166503906e-05, 0.0, -3.4332275390625e-05, -0.00351715087890625, -2.6702880859375e-05, -7.152555099310121e-07, -2.3841830625315197e-06, -1.5497138520004228e-05, -1.9073486328125e-06, -0.009038329124450684, 0.0, -0.000255584716796875, -0.11174201965332031, -0.0014927006559446454, -1.9073486328125e-06, -3.4332275390625e-05, -0.005031585693359375, -4.1961669921875e-05, -0.0893910676240921, -0.00014495849609375, -1.151402473449707, -4.00543212890625e-05, -0.43429476022720337, -1.4305038348538801e-05, 0.0, -3.814697265625e-06, -0.0018835067749023438, -0.000530242919921875, -0.09734611958265305, -6.115436553955078e-05, -3.4332275390625e-05, -0.5556268692016602, -0.005377769470214844, -0.05620278790593147, -3.933906555175781e-06, -1.489222526550293, -0.000720977783203125, -0.41359972953796387, -4.649161837733118e-06, 0.0], "choice_history": [97, 283, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mal'Ganis", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 81, 311, "1", "<EOS>", 88, 325, "Hero", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"_type": "Template71", "hole0": 1}, {"_type": "Template79", "hole0": "HeroSelector"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 9, "hole2": "auras"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Mal'Ganis", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(2), HeroSelector())])\n", "score": -4.852580884137176, "score_history": [-3.4332275390625e-05, -0.0002689361572265625, -0.00026186901959590614, -1.1920928244535389e-07, -5.792826414108276e-07, -2.300739288330078e-05, -7.152555099310121e-07, -0.000759124755859375, -0.021684646606445312, -0.0033168792724609375, -2.288818359375e-05, 0.0, -4.768370445162873e-07, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000576019287109375, -6.103515625e-05, -0.00040435791015625, -7.87973403930664e-05, -9.894371032714844e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0018208492547273636, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.16061115264892578, -4.00543212890625e-05, -0.0001087188720703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, -7.43865966796875e-05, -0.022802352905273438, 0.0, -0.014795303344726562, -0.006625175476074219, -7.05718994140625e-05, -0.08012008666992188, 0.0, -0.000537872314453125, 0.0, -5.173683166503906e-05, 0.0, -3.4332275390625e-05, -0.00351715087890625, -2.6702880859375e-05, -7.152555099310121e-07, -2.3841830625315197e-06, -1.5497138520004228e-05, -1.9073486328125e-06, -0.009038329124450684, 0.0, -0.000255584716796875, -2.271638870239258, -0.020609719678759575, 0.0, -1.1444091796875e-05, -0.14239978790283203, -2.288818359375e-05, -0.9109593033790588, -1.919269561767578e-05, -0.5496978759765625, -5.91278076171875e-05, -0.6285738348960876, -2.1457672119140625e-06, 0.0], "choice_history": [97, 283, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mal'Ganis", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 88, 325, "Hero", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template79", "hole0": "HeroSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 9, "hole2": "auras"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Mal'Ganis", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(ChangeHealth(1), MinionSelector())])\n", "score": -6.07307176160645, "score_history": [-3.4332275390625e-05, -0.0002689361572265625, -0.00026186901959590614, -1.1920928244535389e-07, -5.792826414108276e-07, -2.300739288330078e-05, -7.152555099310121e-07, -0.000759124755859375, -0.021684646606445312, -0.0033168792724609375, -2.288818359375e-05, 0.0, -4.768370445162873e-07, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000576019287109375, -6.103515625e-05, -0.00040435791015625, -7.87973403930664e-05, -9.894371032714844e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0018208492547273636, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.0002727508544921875, -1.9073486328125e-06, -0.16061115264892578, -4.00543212890625e-05, -0.0001087188720703125, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -1.33514404296875e-05, -7.43865966796875e-05, -0.022802352905273438, 0.0, -0.014795303344726562, -0.006625175476074219, -7.05718994140625e-05, -0.08012008666992188, 0.0, -0.000537872314453125, 0.0, -5.173683166503906e-05, 0.0, -3.4332275390625e-05, -0.00351715087890625, -2.6702880859375e-05, -7.152555099310121e-07, -2.3841830625315197e-06, -1.5497138520004228e-05, -1.9073486328125e-06, -0.009038329124450684, 0.0, -0.000255584716796875, -0.11174201965332031, -0.0014927006559446454, -1.9073486328125e-06, -3.4332275390625e-05, -0.005031585693359375, -4.1961669921875e-05, -0.0893910676240921, -0.00014495849609375, -1.151402473449707, -4.00543212890625e-05, -0.43429476022720337, -1.4305038348538801e-05, 0.0, -3.814697265625e-06, -0.0018835067749023438, -0.000530242919921875, -0.09734611958265305, -6.115436553955078e-05, -3.4332275390625e-05, -0.5556268692016602, -0.005377769470214844, -0.05620278790593147, -3.933906555175781e-06, -1.489222526550293, -0.000720977783203125, -1.7437070608139038, -0.0001318453869316727, 0.0], "choice_history": [97, 283, "Mal'Ganis", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Mal'Ganis", "<EOS>", 52, 179, "9", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 81, 311, "1", "<EOS>", 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"_type": "Template71", "hole0": 1}, {"_type": "Template79", "hole0": "MinionSelector"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 9, "hole2": "auras"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}]}], "hole0": "Mal'Ganis", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(DidDamage(), ActionTag(Heal(\n            EventValue()), HeroSelector()))])\n", "beams": [{"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(3),\n            HeroSelector()))])\n", "score": -0.6831562594969611, "score_history": [-0.0027093887329101562, -1.1444091796875e-05, -2.288818359375e-05, -4.38690185546875e-05, -0.0001087188720703125, -0.0007771911914460361, -0.0017087422311306, -9.202832006849349e-05, -8.380372310057282e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.0004174190107733011, -4.541869566310197e-05, -2.1457672119140625e-05, -9.5367431640625e-06, -0.010364532470703125, -0.0002117156982421875, -1.1920928244535389e-07, -0.00017547607421875, -7.128715515136719e-05, -9.5367431640625e-05, -0.0012291667517274618, -0.00035858154296875, -1.0728830375228426e-06, 0.0, -0.0029926300048828125, -0.0001049041748046875, -8.0108642578125e-05, 0.0, -5.340576171875e-05, -0.0021152496337890625, -7.2479248046875e-05, -0.081390380859375, -0.0002899169921875, -0.0005588531494140625, -0.018756866455078125, -9.775159924174659e-06, -2.861018856492592e-06, -8.22478614281863e-06, -7.62939453125e-05, -0.10556888580322266, -0.0002919435501098633, -0.1407184600830078, -0.0001354217529296875, 0.0, -0.0008335113525390625, -1.33514404296875e-05, -0.28987836837768555, 0.0, -0.020587921142578125, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Mistress", "Of", "Pain", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 189, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "WARLOCK", "hole0": "Mistress of Pain", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "HeroSelector", "hole2": "Damaged", "hole0": 1, "_type": "Template0", "hole3": "Heal", "hole1": 4, "hole4": [{"n": 3, "_type": "Num"}]}], "name": "MistressOfPain", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(2),\n            HeroSelector()))])\n", "score": -2.2022898273070197, "score_history": [-0.0027093887329101562, -1.1444091796875e-05, -2.288818359375e-05, -4.38690185546875e-05, -0.0001087188720703125, -0.0007771911914460361, -0.0017087422311306, -9.202832006849349e-05, -8.380372310057282e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.0004174190107733011, -4.541869566310197e-05, -2.1457672119140625e-05, -9.5367431640625e-06, -0.010364532470703125, -0.0002117156982421875, -1.1920928244535389e-07, -0.00017547607421875, -7.128715515136719e-05, -9.5367431640625e-05, -0.0012291667517274618, -0.00035858154296875, -1.0728830375228426e-06, 0.0, -0.0029926300048828125, -0.0001049041748046875, -8.0108642578125e-05, 0.0, -5.340576171875e-05, -0.0021152496337890625, -7.2479248046875e-05, -0.081390380859375, -0.0002899169921875, -0.0005588531494140625, -0.018756866455078125, -9.775159924174659e-06, -2.861018856492592e-06, -8.22478614281863e-06, -7.62939453125e-05, -0.10556888580322266, -0.0002919435501098633, -0.1407184600830078, -0.0001354217529296875, 0.0, -0.0008335113525390625, -1.33514404296875e-05, -1.8237385749816895, 0.0, -0.0058612823486328125, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Mistress", "Of", "Pain", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 189, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "2", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "WARLOCK", "hole0": "Mistress of Pain", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "HeroSelector", "hole2": "Damaged", "hole0": 1, "_type": "Template0", "hole3": "Heal", "hole1": 4, "hole4": [{"n": 2, "_type": "Num"}]}], "name": "MistressOfPain", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.LIST, source_list=<UNK>)),\n            PlayerSelector()))])\n", "score": -2.6407244269729446, "score_history": [-0.0027093887329101562, -1.1444091796875e-05, -2.288818359375e-05, -4.38690185546875e-05, -0.0001087188720703125, -0.0007771911914460361, -0.0017087422311306, -9.202832006849349e-05, -8.380372310057282e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.0004174190107733011, -4.541869566310197e-05, -2.1457672119140625e-05, -9.5367431640625e-06, -0.010364532470703125, -0.0002117156982421875, -1.1920928244535389e-07, -0.00017547607421875, -7.128715515136719e-05, -9.5367431640625e-05, -0.0012291667517274618, -0.00035858154296875, -1.0728830375228426e-06, 0.0, -0.0029926300048828125, -0.0001049041748046875, -8.0108642578125e-05, 0.0, -5.340576171875e-05, -0.0021152496337890625, -7.2479248046875e-05, -0.081390380859375, -0.0002899169921875, -0.0005588531494140625, -0.018756866455078125, -9.775159924174659e-06, -2.861018856492592e-06, -8.22478614281863e-06, -7.62939453125e-05, -0.10556888580322266, -0.0002919435501098633, -2.2074947357177734, -0.00333404541015625, -8.034706115722656e-05, -3.814697265625e-06, -0.09228706359863281, -0.011379241943359375, -0.0028382539749145508, -0.0003110170364379883, -2.47955322265625e-05, -0.00287628173828125, -5.7220458984375e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.0001888275146484375, 0.0, -0.0142059326171875, -0.00020599365234375, -0.014116287231445312, -5.7220458984375e-06, -0.008502006530761719, -0.00103759765625, -0.0009746551513671875, 0.0, -0.02042973041534424, -0.0010241258423775434, -0.02835369110107422, -1.52587890625e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Mistress", "Of", "Pain", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 189, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "<UNK>", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "WARLOCK", "hole0": "Mistress of Pain", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "PlayerSelector", "hole2": "Damaged", "hole0": 1, "_type": "Template0", "hole3": "AddCard", "hole1": 4, "hole4": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "<UNK>", "_type": "Name"}}]}], "name": "MistressOfPain", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(0),\n            HeroSelector()))])\n", "score": -3.090823419531141, "score_history": [-0.0027093887329101562, -1.1444091796875e-05, -2.288818359375e-05, -4.38690185546875e-05, -0.0001087188720703125, -0.0007771911914460361, -0.0017087422311306, -9.202832006849349e-05, -8.380372310057282e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.0004174190107733011, -4.541869566310197e-05, -2.1457672119140625e-05, -9.5367431640625e-06, -0.010364532470703125, -0.0002117156982421875, -1.1920928244535389e-07, -0.00017547607421875, -7.128715515136719e-05, -9.5367431640625e-05, -0.0012291667517274618, -0.00035858154296875, -1.0728830375228426e-06, 0.0, -0.0029926300048828125, -0.0001049041748046875, -8.0108642578125e-05, 0.0, -5.340576171875e-05, -0.0021152496337890625, -7.2479248046875e-05, -0.081390380859375, -0.0002899169921875, -0.0005588531494140625, -0.018756866455078125, -9.775159924174659e-06, -2.861018856492592e-06, -8.22478614281863e-06, -7.62939453125e-05, -0.10556888580322266, -0.0002919435501098633, -0.1407184600830078, -0.0001354217529296875, 0.0, -0.0008335113525390625, -1.33514404296875e-05, -2.630993366241455, -3.62396240234375e-05, -0.08710384368896484, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Mistress", "Of", "Pain", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 189, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "<UNK>", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "WARLOCK", "hole0": "Mistress of Pain", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "HeroSelector", "hole2": "Damaged", "hole0": 1, "_type": "Template0", "hole3": "Heal", "hole1": 4, "hole4": [{"n": 0, "_type": "Num"}]}], "name": "MistressOfPain", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(3),\n            HeroSelector()))])\n", "score": -3.3616535741797335, "score_history": [-0.0027093887329101562, -1.1444091796875e-05, -2.288818359375e-05, -4.38690185546875e-05, -0.0001087188720703125, -0.0007771911914460361, -0.0017087422311306, -9.202832006849349e-05, -8.380372310057282e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.0004174190107733011, -4.541869566310197e-05, -2.1457672119140625e-05, -9.5367431640625e-06, -0.010364532470703125, -0.0002117156982421875, -1.1920928244535389e-07, -0.00017547607421875, -7.128715515136719e-05, -9.5367431640625e-05, -0.0012291667517274618, -0.00035858154296875, -1.0728830375228426e-06, 0.0, -0.0029926300048828125, -0.0001049041748046875, -8.0108642578125e-05, 0.0, -5.340576171875e-05, -0.0021152496337890625, -7.2479248046875e-05, -2.6455936431884766, -4.1961669921875e-05, -0.01761341094970703, -0.015421867370605469, -1.0132780516869389e-05, -5.364403477869928e-06, -1.1324475053697824e-05, -9.167194366455078e-05, -0.1667919158935547, -0.0003529787063598633, -0.13206958770751953, -0.000179290771484375, 0.0, -0.0011272430419921875, -9.5367431640625e-06, -0.3383857011795044, 0.0, -0.0199127197265625, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Mistress", "Of", "Pain", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", 112, 189, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "DEMON"}], "hole2": "WARLOCK", "hole0": "Mistress of Pain", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "HeroSelector", "hole2": "Damaged", "hole0": 1, "_type": "Template0", "hole3": "Heal", "hole1": 4, "hole4": [{"n": 3, "_type": "Num"}]}], "name": "MistressOfPain", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            HeroSelector()))])\n", "score": -4.1009623782236915, "score_history": [-0.0027093887329101562, -1.1444091796875e-05, -2.288818359375e-05, -4.38690185546875e-05, -0.0001087188720703125, -0.0007771911914460361, -0.0017087422311306, -9.202832006849349e-05, -8.380372310057282e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.0004174190107733011, -4.541869566310197e-05, -2.1457672119140625e-05, -9.5367431640625e-06, -0.010364532470703125, -0.0002117156982421875, -1.1920928244535389e-07, -0.00017547607421875, -7.128715515136719e-05, -9.5367431640625e-05, -0.0012291667517274618, -0.00035858154296875, -1.0728830375228426e-06, 0.0, -0.0029926300048828125, -0.0001049041748046875, -8.0108642578125e-05, 0.0, -5.340576171875e-05, -0.0021152496337890625, -7.2479248046875e-05, -0.081390380859375, -0.0002899169921875, -0.0005588531494140625, -0.018756866455078125, -9.775159924174659e-06, -2.861018856492592e-06, -8.22478614281863e-06, -7.62939453125e-05, -3.0226736068725586, -0.4397010803222656, -9.5367431640625e-06, -0.001590728759765625, -5.14984130859375e-05, 0.0, -0.00064849853515625, -4.00543212890625e-05, -0.4928313195705414, -1.9073486328125e-06, -0.018285751342773438, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Mistress", "Of", "Pain", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 189, "1", "<EOS>", "4", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "WARLOCK", "hole0": "Mistress of Pain", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "HeroSelector", "hole2": "TurnEnded", "hole0": 1, "_type": "Template0", "hole3": "Heal", "hole1": 4, "hole4": [{"n": 3, "_type": "Num"}]}], "name": "MistressOfPain", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), HeroSelector()))])\n", "score": -4.625960834463392, "score_history": [-0.0027093887329101562, -1.1444091796875e-05, -2.288818359375e-05, -4.38690185546875e-05, -0.0001087188720703125, -0.0007771911914460361, -0.0017087422311306, -9.202832006849349e-05, -8.380372310057282e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.0004174190107733011, -4.541869566310197e-05, -2.1457672119140625e-05, -9.5367431640625e-06, -0.010364532470703125, -0.0002117156982421875, -1.1920928244535389e-07, -0.00017547607421875, -7.128715515136719e-05, -9.5367431640625e-05, -0.0012291667517274618, -0.00035858154296875, -1.0728830375228426e-06, 0.0, -0.0029926300048828125, -0.0001049041748046875, -8.0108642578125e-05, 0.0, -5.340576171875e-05, -0.0021152496337890625, -7.2479248046875e-05, -0.081390380859375, -0.0002899169921875, -0.0005588531494140625, -0.018756866455078125, -9.775159924174659e-06, -2.861018856492592e-06, -8.22478614281863e-06, -7.62939453125e-05, -3.0226736068725586, -1.0439777374267578, -5.7220458984375e-06, -0.0046844482421875, -0.000209808349609375, 0.0, -0.0003795623779296875, -2.288818359375e-05, -0.41358935832977295, -1.9073486328125e-06, -0.015287399291992188, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Mistress", "Of", "Pain", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 189, "1", "<EOS>", "4", "<EOS>", "Turn", "Started", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "WARLOCK", "hole0": "Mistress of Pain", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "HeroSelector", "hole2": "TurnStarted", "hole0": 1, "_type": "Template0", "hole3": "Heal", "hole1": 4, "hole4": [{"n": 3, "_type": "Num"}]}], "name": "MistressOfPain", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(2),\n            HeroSelector()))])\n", "score": -4.643166669081772, "score_history": [-0.0027093887329101562, -1.1444091796875e-05, -2.288818359375e-05, -4.38690185546875e-05, -0.0001087188720703125, -0.0007771911914460361, -0.0017087422311306, -9.202832006849349e-05, -8.380372310057282e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.0004174190107733011, -4.541869566310197e-05, -2.1457672119140625e-05, -9.5367431640625e-06, -0.010364532470703125, -0.0002117156982421875, -1.1920928244535389e-07, -0.00017547607421875, -7.128715515136719e-05, -9.5367431640625e-05, -0.0012291667517274618, -0.00035858154296875, -1.0728830375228426e-06, 0.0, -0.0029926300048828125, -0.0001049041748046875, -8.0108642578125e-05, 0.0, -5.340576171875e-05, -0.0021152496337890625, -7.2479248046875e-05, -2.6455936431884766, -4.1961669921875e-05, -0.01761341094970703, -0.015421867370605469, -1.0132780516869389e-05, -5.364403477869928e-06, -1.1324475053697824e-05, -9.167194366455078e-05, -0.1667919158935547, -0.0003529787063598633, -0.13206958770751953, -0.000179290771484375, 0.0, -0.0011272430419921875, -9.5367431640625e-06, -1.6339101791381836, 0.0, -0.005901336669921875, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Mistress", "Of", "Pain", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", 112, 189, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "2", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "DEMON"}], "hole2": "WARLOCK", "hole0": "Mistress of Pain", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "HeroSelector", "hole2": "Damaged", "hole0": 1, "_type": "Template0", "hole3": "Heal", "hole1": 4, "hole4": [{"n": 2, "_type": "Num"}]}], "name": "MistressOfPain", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnEnded(), ActionTag(Heal(2),\n            HeroSelector()))])\n", "score": -4.760766036947523, "score_history": [-0.0027093887329101562, -1.1444091796875e-05, -2.288818359375e-05, -4.38690185546875e-05, -0.0001087188720703125, -0.0007771911914460361, -0.0017087422311306, -9.202832006849349e-05, -8.380372310057282e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.0004174190107733011, -4.541869566310197e-05, -2.1457672119140625e-05, -9.5367431640625e-06, -0.010364532470703125, -0.0002117156982421875, -1.1920928244535389e-07, -0.00017547607421875, -7.128715515136719e-05, -9.5367431640625e-05, -0.0012291667517274618, -0.00035858154296875, -1.0728830375228426e-06, 0.0, -0.0029926300048828125, -0.0001049041748046875, -8.0108642578125e-05, 0.0, -5.340576171875e-05, -0.0021152496337890625, -7.2479248046875e-05, -0.081390380859375, -0.0002899169921875, -0.0005588531494140625, -0.018756866455078125, -9.775159924174659e-06, -2.861018856492592e-06, -8.22478614281863e-06, -7.62939453125e-05, -3.0226736068725586, -0.4397010803222656, -9.5367431640625e-06, -0.001590728759765625, -5.14984130859375e-05, 0.0, -0.00064849853515625, -4.00543212890625e-05, -1.1655572652816772, 0.0, -0.0053653717041015625, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Mistress", "Of", "Pain", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 189, "1", "<EOS>", "4", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "2", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "WARLOCK", "hole0": "Mistress of Pain", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "HeroSelector", "hole2": "TurnEnded", "hole0": 1, "_type": "Template0", "hole3": "Heal", "hole1": 4, "hole4": [{"n": 2, "_type": "Num"}]}], "name": "MistressOfPain", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(3),\n            SelfSelector()))])\n", "score": -5.19374490543202, "score_history": [-0.0027093887329101562, -1.1444091796875e-05, -2.288818359375e-05, -4.38690185546875e-05, -0.0001087188720703125, -0.0007771911914460361, -0.0017087422311306, -9.202832006849349e-05, -8.380372310057282e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.0004174190107733011, -4.541869566310197e-05, -2.1457672119140625e-05, -9.5367431640625e-06, -0.010364532470703125, -0.0002117156982421875, -1.1920928244535389e-07, -0.00017547607421875, -7.128715515136719e-05, -9.5367431640625e-05, -0.0012291667517274618, -0.00035858154296875, -1.0728830375228426e-06, 0.0, -0.0029926300048828125, -0.0001049041748046875, -8.0108642578125e-05, 0.0, -5.340576171875e-05, -0.0021152496337890625, -7.2479248046875e-05, -0.081390380859375, -0.0002899169921875, -0.0005588531494140625, -0.018756866455078125, -9.775159924174659e-06, -2.861018856492592e-06, -8.22478614281863e-06, -7.62939453125e-05, -0.10556888580322266, -0.0002919435501098633, -0.1407184600830078, -0.0001354217529296875, 0.0, -0.0008335113525390625, -1.33514404296875e-05, -0.28987836837768555, 0.0, -4.531176567077637, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Mistress", "Of", "Pain", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 189, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "WARLOCK", "hole0": "Mistress of Pain", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "SelfSelector", "hole2": "Damaged", "hole0": 1, "_type": "Template0", "hole3": "Heal", "hole1": 4, "hole4": [{"n": 3, "_type": "Num"}]}], "name": "MistressOfPain", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(1),\n            HeroSelector()))])\n", "score": -5.2583735065062385, "score_history": [-0.0027093887329101562, -1.1444091796875e-05, -2.288818359375e-05, -4.38690185546875e-05, -0.0001087188720703125, -0.0007771911914460361, -0.0017087422311306, -9.202832006849349e-05, -8.380372310057282e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.0004174190107733011, -4.541869566310197e-05, -2.1457672119140625e-05, -9.5367431640625e-06, -0.010364532470703125, -0.0002117156982421875, -1.1920928244535389e-07, -0.00017547607421875, -7.128715515136719e-05, -9.5367431640625e-05, -0.0012291667517274618, -0.00035858154296875, -1.0728830375228426e-06, 0.0, -0.0029926300048828125, -0.0001049041748046875, -8.0108642578125e-05, 0.0, -5.340576171875e-05, -0.0021152496337890625, -7.2479248046875e-05, -0.081390380859375, -0.0002899169921875, -0.0005588531494140625, -0.018756866455078125, -9.775159924174659e-06, -2.861018856492592e-06, -8.22478614281863e-06, -7.62939453125e-05, -0.10556888580322266, -0.0002919435501098633, -0.1407184600830078, -0.0001354217529296875, 0.0, -0.0008335113525390625, -1.33514404296875e-05, -4.854055881500244, -1.9073486328125e-06, -0.03162574768066406, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Mistress", "Of", "Pain", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 189, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "1", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "WARLOCK", "hole0": "Mistress of Pain", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "HeroSelector", "hole2": "Damaged", "hole0": 1, "_type": "Template0", "hole3": "Heal", "hole1": 4, "hole4": [{"n": 1, "_type": "Num"}]}], "name": "MistressOfPain", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(UsedPower(), ActionTag(Heal(3),\n            HeroSelector()))])\n", "score": -5.308224536617551, "score_history": [-0.0027093887329101562, -1.1444091796875e-05, -2.288818359375e-05, -4.38690185546875e-05, -0.0001087188720703125, -0.0007771911914460361, -0.0017087422311306, -9.202832006849349e-05, -8.380372310057282e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.0004174190107733011, -4.541869566310197e-05, -2.1457672119140625e-05, -9.5367431640625e-06, -0.010364532470703125, -0.0002117156982421875, -1.1920928244535389e-07, -0.00017547607421875, -7.128715515136719e-05, -9.5367431640625e-05, -0.0012291667517274618, -0.00035858154296875, -1.0728830375228426e-06, 0.0, -0.0029926300048828125, -0.0001049041748046875, -8.0108642578125e-05, 0.0, -5.340576171875e-05, -0.0021152496337890625, -7.2479248046875e-05, -0.081390380859375, -0.0002899169921875, -0.0005588531494140625, -0.018756866455078125, -9.775159924174659e-06, -2.861018856492592e-06, -8.22478614281863e-06, -7.62939453125e-05, -4.626158714294434, -0.08373868465423584, -3.24249267578125e-05, -0.0015468597412109375, -7.43865966796875e-05, 0.0, -0.0003261566162109375, -1.1444091796875e-05, -0.45579418540000916, -1.9073486328125e-06, -0.015411376953125, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Mistress", "Of", "Pain", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 189, "1", "<EOS>", "4", "<EOS>", "Used", "Power", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "WARLOCK", "hole0": "Mistress of Pain", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "HeroSelector", "hole2": "UsedPower", "hole0": 1, "_type": "Template0", "hole3": "Heal", "hole1": 4, "hole4": [{"n": 3, "_type": "Num"}]}], "name": "MistressOfPain", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(3),\n            PlayerSelector()))])\n", "score": -5.358125932653699, "score_history": [-0.0027093887329101562, -1.1444091796875e-05, -2.288818359375e-05, -4.38690185546875e-05, -0.0001087188720703125, -0.0007771911914460361, -0.0017087422311306, -9.202832006849349e-05, -8.380372310057282e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.0004174190107733011, -4.541869566310197e-05, -2.1457672119140625e-05, -9.5367431640625e-06, -0.010364532470703125, -0.0002117156982421875, -1.1920928244535389e-07, -0.00017547607421875, -7.128715515136719e-05, -9.5367431640625e-05, -0.0012291667517274618, -0.00035858154296875, -1.0728830375228426e-06, 0.0, -0.0029926300048828125, -0.0001049041748046875, -8.0108642578125e-05, 0.0, -5.340576171875e-05, -0.0021152496337890625, -7.2479248046875e-05, -0.081390380859375, -0.0002899169921875, -0.0005588531494140625, -0.018756866455078125, -9.775159924174659e-06, -2.861018856492592e-06, -8.22478614281863e-06, -7.62939453125e-05, -0.10556888580322266, -0.0002919435501098633, -0.1407184600830078, -0.0001354217529296875, 0.0, -0.0008335113525390625, -1.33514404296875e-05, -0.28987836837768555, 0.0, -4.695557594299316, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Mistress", "Of", "Pain", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 189, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "WARLOCK", "hole0": "Mistress of Pain", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "PlayerSelector", "hole2": "Damaged", "hole0": 1, "_type": "Template0", "hole3": "Heal", "hole1": 4, "hole4": [{"n": 3, "_type": "Num"}]}], "name": "MistressOfPain", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.LIST, source_list=<UNK>)),\n            PlayerSelector()))])\n", "score": -5.382573611122432, "score_history": [-0.0027093887329101562, -1.1444091796875e-05, -2.288818359375e-05, -4.38690185546875e-05, -0.0001087188720703125, -0.0007771911914460361, -0.0017087422311306, -9.202832006849349e-05, -8.380372310057282e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.0004174190107733011, -4.541869566310197e-05, -2.1457672119140625e-05, -9.5367431640625e-06, -0.010364532470703125, -0.0002117156982421875, -1.1920928244535389e-07, -0.00017547607421875, -7.128715515136719e-05, -9.5367431640625e-05, -0.0012291667517274618, -0.00035858154296875, -1.0728830375228426e-06, 0.0, -0.0029926300048828125, -0.0001049041748046875, -8.0108642578125e-05, 0.0, -5.340576171875e-05, -0.0021152496337890625, -7.2479248046875e-05, -2.6455936431884766, -4.1961669921875e-05, -0.01761341094970703, -0.015421867370605469, -1.0132780516869389e-05, -5.364403477869928e-06, -1.1324475053697824e-05, -9.167194366455078e-05, -0.1667919158935547, -0.0003529787063598633, -2.312318801879883, -0.0033617019653320312, -7.653236389160156e-05, -1.9073486328125e-06, -0.09235668182373047, -0.00966644287109375, -0.0027238130569458008, -0.0003110170364379883, -2.47955322265625e-05, -0.0031833648681640625, -5.7220458984375e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001773834228515625, 0.0, -0.014737129211425781, -0.0002193450927734375, -0.012396812438964844, -5.7220458984375e-06, -0.0096588134765625, -0.0011768341064453125, -0.0009613037109375, 0.0, -0.01866447925567627, -0.0010383116314187646, -0.029483795166015625, -1.52587890625e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Mistress", "Of", "Pain", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", 112, 189, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "<UNK>", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "DEMON"}], "hole2": "WARLOCK", "hole0": "Mistress of Pain", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "PlayerSelector", "hole2": "Damaged", "hole0": 1, "_type": "Template0", "hole3": "AddCard", "hole1": 4, "hole4": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "<UNK>", "_type": "Name"}}]}], "name": "MistressOfPain", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnStarted(), ActionTag(Heal(2\n            ), HeroSelector()))])\n", "score": -5.463086135824476, "score_history": [-0.0027093887329101562, -1.1444091796875e-05, -2.288818359375e-05, -4.38690185546875e-05, -0.0001087188720703125, -0.0007771911914460361, -0.0017087422311306, -9.202832006849349e-05, -8.380372310057282e-05, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.0004174190107733011, -4.541869566310197e-05, -2.1457672119140625e-05, -9.5367431640625e-06, -0.010364532470703125, -0.0002117156982421875, -1.1920928244535389e-07, -0.00017547607421875, -7.128715515136719e-05, -9.5367431640625e-05, -0.0012291667517274618, -0.00035858154296875, -1.0728830375228426e-06, 0.0, -0.0029926300048828125, -0.0001049041748046875, -8.0108642578125e-05, 0.0, -5.340576171875e-05, -0.0021152496337890625, -7.2479248046875e-05, -0.081390380859375, -0.0002899169921875, -0.0005588531494140625, -0.018756866455078125, -9.775159924174659e-06, -2.861018856492592e-06, -8.22478614281863e-06, -7.62939453125e-05, -3.0226736068725586, -1.0439777374267578, -5.7220458984375e-06, -0.0046844482421875, -0.000209808349609375, 0.0, -0.0003795623779296875, -2.288818359375e-05, -1.2597936391830444, 0.0, -0.0062103271484375, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Mistress", "Of", "Pain", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "MECH", "<EOS>", 112, 189, "1", "<EOS>", "4", "<EOS>", "Turn", "Started", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "2", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "MECH"}], "hole2": "WARLOCK", "hole0": "Mistress of Pain", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "HeroSelector", "hole2": "TurnStarted", "hole0": 1, "_type": "Template0", "hole3": "Heal", "hole1": 4, "hole4": [{"n": 2, "_type": "Num"}]}], "name": "MistressOfPain", "_type": "ClassDef"}], "_type": "Module"}}]}
{"gold_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give([Buff(ChangeHealth\n            (2)), Buff(ChangeAttack(2))]), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=RandomPicker())))\n", "beams": [{"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector(BothPlayer())))\n", "score": -2.327115247463439, "score_history": [-2.6702880859375e-05, -0.0002002716064453125, -7.700637797825038e-05, -1.621242699911818e-05, -0.00019226610311307013, -0.00022923506912775338, -2.90866428258596e-05, -2.288818359375e-05, -0.20862960815429688, -0.000354766845703125, -3.814689989667386e-06, 0.0, -8.333172445418313e-05, 0.0, -0.000301361083984375, 0.0, -0.00054168701171875, 0.0, -0.21201133728027344, 0.0, -6.306171417236328e-05, 0.0, -0.0001735687255859375, -9.5367431640625e-05, -0.0001430511474609375, -0.00011669908417388797, -7.510183422709815e-06, 0.0, -0.00010644822759786621, -0.00034558773040771484, -5.602820692729438e-06, -7.62939453125e-05, -0.0069732666015625, -1.1774497032165527, -0.12152571976184845, -0.013663326390087605, -0.0009255408658646047, -0.0010776519775390625, -0.026021957397460938, -0.0008611679077148438, -0.0006386038730852306, -0.0006396770477294922, -1.2040138244628906e-05, -0.0022279024124145508, 0.0, -0.000225067138671875, 0.0, -1.52587890625e-05, 0.0, -0.001554727554321289, -0.0005360841751098633, -0.020715713500976562, -5.7220458984375e-06, -0.013682365417480469, -1.1444091796875e-05, -0.0220489501953125, 0.0, -0.013603444211184978, -6.198883056640625e-05, -0.024743080139160156, -7.152555099310121e-07, -1.5497195136049413e-06, -8.0108642578125e-05, -0.3144960403442383, -1.9073486328125e-06, -0.13935983180999756, -9.39365490921773e-05, -7.987022399902344e-06], "choice_history": [97, 283, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 353, 92, 259, "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "spare_part_list", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Both", "Player", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"hole1": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "spare_part_list", "_type": "Name"}}], "hole3": [{"_type": "Template79", "hole0": "BothPlayer"}], "_type": "Template41", "hole0": "AddCard", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Weapon", "hole2": 2}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Powermace", "hole2": "SHAMAN"}], "hole0": "Powermace", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Bounce(),\n            MinionSelector(picker=RandomPicker())))\n", "score": -2.3470869808811443, "score_history": [-2.6702880859375e-05, -0.0002002716064453125, -7.700637797825038e-05, -1.621242699911818e-05, -0.00019226610311307013, -0.00022923506912775338, -2.90866428258596e-05, -2.288818359375e-05, -0.20862960815429688, -0.000354766845703125, -3.814689989667386e-06, 0.0, -8.333172445418313e-05, 0.0, -0.000301361083984375, 0.0, -0.00054168701171875, 0.0, -0.21201133728027344, 0.0, -6.306171417236328e-05, 0.0, -0.0001735687255859375, -9.5367431640625e-05, -0.0001430511474609375, -0.00011669908417388797, -7.510183422709815e-06, 0.0, -0.00010644822759786621, -0.00034558773040771484, -5.602820692729438e-06, -7.62939453125e-05, -0.0069732666015625, -1.442183494567871, -0.11007033288478851, -2.9325206924113445e-05, -0.2717919647693634, -0.0006358623504638672, -1.1920928244535389e-07, -0.0804586410522461, -0.004714012145996094, -1.9073486328125e-06, -0.0019602524116635323, -8.64267349243164e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.004220843315124512, -6.377696263371035e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 353, 92, 255, "Bounce", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"hole2": "MinionSelector", "_type": "Template41", "hole0": "Bounce", "hole4": [{"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "picker", "_type": "keyword"}]}], "_type": "Template68", "hole0": "Weapon", "hole2": 2}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Powermace", "hole2": "SHAMAN"}], "hole0": "Powermace", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give(ChangeHealth(3)),\n            MinionSelector(picker=RandomPicker())))\n", "score": -2.431758319922629, "score_history": [-2.6702880859375e-05, -0.0002002716064453125, -7.700637797825038e-05, -1.621242699911818e-05, -0.00019226610311307013, -0.00022923506912775338, -2.90866428258596e-05, -2.288818359375e-05, -0.20862960815429688, -0.000354766845703125, -3.814689989667386e-06, 0.0, -8.333172445418313e-05, 0.0, -0.000301361083984375, 0.0, -0.00054168701171875, 0.0, -0.21201133728027344, 0.0, -6.306171417236328e-05, 0.0, -0.0001735687255859375, -9.5367431640625e-05, -0.0001430511474609375, -0.00011669908417388797, -7.510183422709815e-06, 0.0, -0.00010644822759786621, -0.00034558773040771484, -5.602820692729438e-06, -7.62939453125e-05, -0.0069732666015625, -1.7730393409729004, -0.11486790329217911, -0.00018775345233734697, -7.62939453125e-06, -0.07312393188476562, -0.00078582763671875, -0.025822676718235016, -5.960462203802308e-06, -0.0019807443022727966, -0.00022208690643310547, -1.1920928244535389e-07, -7.82012939453125e-05, -0.0008573532104492188, 0.0, -0.008789394050836563, -4.0292736230185255e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.001057267189025879, -3.3140171581180766e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 353, 92, 258, "Give", "<EOS>", 346, 81, 311, "3", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"hole4": [{"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"_type": "Template71", "hole0": 3}], "_type": "Template41", "hole0": "Give", "hole2": "MinionSelector"}], "_type": "Template68", "hole0": "Weapon", "hole2": 2}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Powermace", "hole2": "SHAMAN"}], "hole0": "Powermace", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Bounce(),\n            WeaponSelector(picker=RandomPicker())))\n", "score": -3.4698203363772677, "score_history": [-2.6702880859375e-05, -0.0002002716064453125, -7.700637797825038e-05, -1.621242699911818e-05, -0.00019226610311307013, -0.00022923506912775338, -2.90866428258596e-05, -2.288818359375e-05, -0.20862960815429688, -0.000354766845703125, -3.814689989667386e-06, 0.0, -8.333172445418313e-05, 0.0, -0.000301361083984375, 0.0, -0.00054168701171875, 0.0, -0.21201133728027344, 0.0, -6.306171417236328e-05, 0.0, -0.0001735687255859375, -9.5367431640625e-05, -0.0001430511474609375, -0.00011669908417388797, -7.510183422709815e-06, 0.0, -0.00010644822759786621, -0.00034558773040771484, -5.602820692729438e-06, -7.62939453125e-05, -0.0069732666015625, -1.442183494567871, -0.11007033288478851, -2.9325206924113445e-05, -1.4379709959030151, -0.00040435791015625, -2.3841855067985307e-07, -0.019994735717773438, -0.0045166015625, -1.9073486328125e-06, -0.0213704165071249, -4.374980926513672e-05, -5.53131103515625e-05, -1.9073486328125e-06, -0.0023043155670166016, -4.6372402721317485e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 353, 92, 255, "Bounce", "<EOS>", "Weapon", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"hole2": "WeaponSelector", "_type": "Template41", "hole0": "Bounce", "hole4": [{"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "picker", "_type": "keyword"}]}], "_type": "Template68", "hole0": "Weapon", "hole2": 2}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Powermace", "hole2": "SHAMAN"}], "hole0": "Powermace", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector(BothPlayer())))\n", "score": -3.8152240690719736, "score_history": [-2.6702880859375e-05, -0.0002002716064453125, -7.700637797825038e-05, -1.621242699911818e-05, -0.00019226610311307013, -0.00022923506912775338, -2.90866428258596e-05, -2.288818359375e-05, -0.20862960815429688, -0.000354766845703125, -3.814689989667386e-06, 0.0, -8.333172445418313e-05, 0.0, -0.000301361083984375, 0.0, -0.00054168701171875, 0.0, -1.670762062072754, -5.7220458984375e-06, -7.510185241699219e-05, 0.0, -0.0001277923583984375, -6.4849853515625e-05, -0.0008916854858398438, -5.376194530981593e-05, -9.894352842820808e-06, 0.0, -0.00013958434283267707, -0.0003914833068847656, -6.6756979322235566e-06, -0.0001068115234375, -0.015931129455566406, -1.1317400932312012, -0.13293388485908508, -0.014876391738653183, -0.0009479522705078125, -0.0010242462158203125, -0.02650928497314453, -0.0009059906005859375, -0.0005652901600115001, -0.0006263256072998047, -1.0132789611816406e-05, -0.0022908449172973633, 0.0, -0.0002155303955078125, 0.0, -1.52587890625e-05, 0.0, -0.001623392105102539, -0.0005284547805786133, -0.020325660705566406, -5.7220458984375e-06, -0.013567924499511719, -1.1444091796875e-05, -0.022800445556640625, 0.0, -0.013822789303958416, -6.389617919921875e-05, -0.02400493621826172, -7.152555099310121e-07, -1.7881377516459906e-06, -8.392333984375e-05, -0.36467933654785156, -1.9073486328125e-06, -0.1416616439819336, -9.608230902813375e-05, -7.987022399902344e-06], "choice_history": [97, 283, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", "RARE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 353, 92, 259, "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "spare_part_list", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Both", "Player", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"hole1": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "spare_part_list", "_type": "Name"}}], "hole3": [{"_type": "Template79", "hole0": "BothPlayer"}], "_type": "Template41", "hole0": "AddCard", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Weapon", "hole2": 2}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Powermace", "hole2": "SHAMAN"}], "hole0": "Powermace", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Bounce(),\n            MinionSelector(picker=RandomPicker())))\n", "score": -3.977340533166611, "score_history": [-2.6702880859375e-05, -0.0002002716064453125, -7.700637797825038e-05, -1.621242699911818e-05, -0.00019226610311307013, -0.00022923506912775338, -2.90866428258596e-05, -2.288818359375e-05, -0.20862960815429688, -0.000354766845703125, -3.814689989667386e-06, 0.0, -8.333172445418313e-05, 0.0, -0.000301361083984375, 0.0, -0.00054168701171875, 0.0, -1.670762062072754, -5.7220458984375e-06, -7.510185241699219e-05, 0.0, -0.0001277923583984375, -6.4849853515625e-05, -0.0008916854858398438, -5.376194530981593e-05, -9.894352842820808e-06, 0.0, -0.00013958434283267707, -0.0003914833068847656, -6.6756979322235566e-06, -0.0001068115234375, -0.015931129455566406, -1.5938549041748047, -0.1231813132762909, -2.646424763952382e-05, -0.2571548521518707, -0.0006721019744873047, -1.1920928244535389e-07, -0.09243011474609375, -0.00447845458984375, -1.9073486328125e-06, -0.001831518835388124, -8.821487426757812e-05, -4.38690185546875e-05, 0.0, -0.004236102104187012, -6.568431126652285e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", "RARE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 353, 92, 255, "Bounce", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"hole2": "MinionSelector", "_type": "Template41", "hole0": "Bounce", "hole4": [{"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "picker", "_type": "keyword"}]}], "_type": "Template68", "hole0": "Weapon", "hole2": 2}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Powermace", "hole2": "SHAMAN"}], "hole0": "Powermace", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give(ChangeHealth(3)),\n            MinionSelector(picker=RandomPicker())))\n", "score": -4.105916311429127, "score_history": [-2.6702880859375e-05, -0.0002002716064453125, -7.700637797825038e-05, -1.621242699911818e-05, -0.00019226610311307013, -0.00022923506912775338, -2.90866428258596e-05, -2.288818359375e-05, -0.20862960815429688, -0.000354766845703125, -3.814689989667386e-06, 0.0, -8.333172445418313e-05, 0.0, -0.000301361083984375, 0.0, -0.00054168701171875, 0.0, -1.670762062072754, -5.7220458984375e-06, -7.510185241699219e-05, 0.0, -0.0001277923583984375, -6.4849853515625e-05, -0.0008916854858398438, -5.376194530981593e-05, -9.894352842820808e-06, 0.0, -0.00013958434283267707, -0.0003914833068847656, -6.6756979322235566e-06, -0.0001068115234375, -0.015931129455566406, -1.9502105712890625, -0.1270356923341751, -0.0002044431894319132, -7.62939453125e-06, -0.08347511291503906, -0.0008068084716796875, -0.03285325691103935, -5.841253368998878e-06, -0.0019525486277416348, -0.00025784969329833984, 0.0, -7.62939453125e-05, -0.0008363723754882812, 0.0, -0.007748343516141176, -4.0173526940634474e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.001064896583557129, -3.3020962291629985e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", "RARE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 353, 92, 258, "Give", "<EOS>", 346, 81, 311, "3", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"hole4": [{"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"_type": "Template71", "hole0": 3}], "_type": "Template41", "hole0": "Give", "hole2": "MinionSelector"}], "_type": "Template68", "hole0": "Weapon", "hole2": 2}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Powermace", "hole2": "SHAMAN"}], "hole0": "Powermace", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, overload=0)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give(ChangeHealth(3)),\n            MinionSelector(picker=RandomPicker())))\n", "score": -4.176366827513988, "score_history": [-2.6702880859375e-05, -0.0002002716064453125, -7.700637797825038e-05, -1.621242699911818e-05, -0.00019226610311307013, -0.00022923506912775338, -2.90866428258596e-05, -2.288818359375e-05, -1.6739730834960938, -0.0009441375732421875, -9.72747802734375e-05, 0.0, -3.457015918684192e-05, -7.069110870361328e-05, -0.0001373291015625, 0.0, -0.0001373291015625, -2.288818359375e-05, -2.6702880859375e-05, -8.284810610348359e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.9073486328125e-06, -0.005065202713012695, -1.9073486328125e-06, -5.91278076171875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.010408401489257812, -1.71661376953125e-05, -0.000247955322265625, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002765655517578125, -9.5367431640625e-06, -0.000240325927734375, -0.01192474365234375, -1.9073486328125e-06, -0.8067227602005005, -1.5854835510253906e-05, -0.0022563934326171875, -8.20159912109375e-05, -0.04609819874167442, -0.0005208253860473633, -0.010436296463012695, 0.0, -0.00018143653869628906, 0.0, -0.001041412353515625, -0.036398887634277344, -9.34600830078125e-05, -0.00046456989366561174, -1.4185905456542969e-05, -5.960462203802308e-07, -4.60137271147687e-05, -0.0004583597183227539, -1.4305104514278355e-06, -0.0001850128173828125, -0.004070281982421875, -1.3628125190734863, -0.12713174521923065, -0.00018811007612384856, -9.5367431640625e-06, -0.04808330535888672, -0.00077056884765625, -0.012833267450332642, -4.29153169534402e-06, -0.0010819631861522794, -0.00012755393981933594, 0.0, -8.7738037109375e-05, -0.000885009765625, 0.0, -0.007309537846595049, -3.802776336669922e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0010362863540649414, -3.1113613658817485e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Powermace", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "Give", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 353, 92, 258, "Give", "<EOS>", 346, 81, 311, "3", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"hole4": [{"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"_type": "Template71", "hole0": 3}], "_type": "Template41", "hole0": "Give", "hole2": "MinionSelector"}], "_type": "Template68", "hole0": "Weapon", "hole2": 2}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 0, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Powermace", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "Powermace", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(WeaponSelector(\n            CardQuery(conditions=[ManaCost(2), IsMinion()])), PlayerSelector())\n            )\n", "score": -4.2633633693521915, "score_history": [-2.6702880859375e-05, -0.0002002716064453125, -7.700637797825038e-05, -1.621242699911818e-05, -0.00019226610311307013, -0.00022923506912775338, -2.90866428258596e-05, -2.288818359375e-05, -0.20862960815429688, -0.000354766845703125, -3.814689989667386e-06, 0.0, -8.333172445418313e-05, 0.0, -0.000301361083984375, 0.0, -0.00054168701171875, 0.0, -0.21201133728027344, 0.0, -6.306171417236328e-05, 0.0, -0.0001735687255859375, -9.5367431640625e-05, -0.0001430511474609375, -0.00011669908417388797, -7.510183422709815e-06, 0.0, -0.00010644822759786621, -0.00034558773040771484, -5.602820692729438e-06, -7.62939453125e-05, -0.0069732666015625, -2.30318546295166, -0.2941017150878906, -0.09790146350860596, -2.002696055569686e-05, -0.00023651123046875, -0.04788494110107422, -0.10254859924316406, -2.288818359375e-05, 0.0, -0.0005812643212266266, -0.0004407167434692383, -2.2530553906108253e-05, -1.71661376953125e-05, -0.0003337860107421875, -1.9073486328125e-06, -0.009060978889465332, 0.0, -0.026071548461914062, -0.000850677490234375, -0.0015897750854492188, -0.8240623474121094, -0.000354766845703125, -0.009533010423183441, -0.006225683726370335, -1.33514404296875e-05, -0.0020033118780702353, 0.0, -0.04181861877441406, -0.0005035400390625, -0.009081673808395863, -0.024338752031326294, -0.019629597663879395, -0.010071873664855957, -2.5153160095214844e-05, -3.6954811548639555e-06], "choice_history": [97, 283, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 353, 92, 257, "Weapon", "Selector", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 84, 315, "Mana", "Cost", "<EOS>", "2", "<EOS>", 83, 314, "Is", "Minion", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": 2, "_type": "Template74", "hole0": "ManaCost"}, {"_type": "Template73_expr_seq", "hole0": "IsMinion"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "_type": "Template41", "hole0": "WeaponSelector", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Weapon", "hole2": 2}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Powermace", "hole2": "SHAMAN"}], "hole0": "Powermace", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, overload=0)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Bounce(),\n            MinionSelector(picker=RandomPicker())))\n", "score": -4.294678114704389, "score_history": [-2.6702880859375e-05, -0.0002002716064453125, -7.700637797825038e-05, -1.621242699911818e-05, -0.00019226610311307013, -0.00022923506912775338, -2.90866428258596e-05, -2.288818359375e-05, -1.6739730834960938, -0.0009441375732421875, -9.72747802734375e-05, 0.0, -3.457015918684192e-05, -7.069110870361328e-05, -0.0001373291015625, 0.0, -0.0001373291015625, -2.288818359375e-05, -2.6702880859375e-05, -8.284810610348359e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.9073486328125e-06, -0.005065202713012695, -1.9073486328125e-06, -5.91278076171875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.010408401489257812, -1.71661376953125e-05, -0.000247955322265625, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002765655517578125, -9.5367431640625e-06, -0.000240325927734375, -0.01192474365234375, -1.9073486328125e-06, -0.8067227602005005, -1.5854835510253906e-05, -0.0022563934326171875, -8.20159912109375e-05, -0.04609819874167442, -0.0005208253860473633, -0.010436296463012695, 0.0, -0.00018143653869628906, 0.0, -0.001041412353515625, -0.036398887634277344, -9.34600830078125e-05, -0.00046456989366561174, -1.4185905456542969e-05, -5.960462203802308e-07, -4.60137271147687e-05, -0.0004583597183227539, -1.4305104514278355e-06, -0.0001850128173828125, -0.004070281982421875, -1.2931265830993652, -0.08817020058631897, -3.3616630389587954e-05, -0.2091083824634552, -0.0008243322372436523, -1.1920928244535389e-07, -0.07721900939941406, -0.006379127502441406, -1.9073486328125e-06, -0.001721278764307499, -8.618831634521484e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.004005074501037598, -6.22272418695502e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Powermace", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "Give", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 353, 92, 255, "Bounce", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"hole2": "MinionSelector", "_type": "Template41", "hole0": "Bounce", "hole4": [{"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "picker", "_type": "keyword"}]}], "_type": "Template68", "hole0": "Weapon", "hole2": 2}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 0, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Powermace", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "Powermace", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Draw(), PlayerSelector(\n            EnemyPlayer())))\n", "score": -4.317805050062816, "score_history": [-2.6702880859375e-05, -0.0002002716064453125, -7.700637797825038e-05, -1.621242699911818e-05, -0.00019226610311307013, -0.00022923506912775338, -2.90866428258596e-05, -2.288818359375e-05, -0.20862960815429688, -0.000354766845703125, -3.814689989667386e-06, 0.0, -8.333172445418313e-05, 0.0, -0.000301361083984375, 0.0, -0.00054168701171875, 0.0, -0.21201133728027344, 0.0, -6.306171417236328e-05, 0.0, -0.0001735687255859375, -9.5367431640625e-05, -0.0001430511474609375, -0.00011669908417388797, -7.510183422709815e-06, 0.0, -0.00010644822759786621, -0.00034558773040771484, -5.602820692729438e-06, -7.62939453125e-05, -0.0069732666015625, -3.277280807495117, -0.25393110513687134, -0.0007266998291015625, -6.568431126652285e-05, -3.719328742590733e-05, -9.536738616588991e-07, -3.814697265625e-06, -0.3429231643676758, -2.288818359375e-05, -0.011609410867094994, -0.00035822103382088244, -1.9073486328125e-05], "choice_history": [97, 283, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 353, 92, 256, "Draw", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"hole2": "PlayerSelector", "hole3": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "_type": "Template41", "hole0": "Draw"}], "_type": "Template68", "hole0": "Weapon", "hole2": 2}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Powermace", "hole2": "SHAMAN"}], "hole0": "Powermace", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Deathrattle(),\n            PlayerSelector()))\n", "score": -4.378860631245509, "score_history": [-2.6702880859375e-05, -0.0002002716064453125, -7.700637797825038e-05, -1.621242699911818e-05, -0.00019226610311307013, -0.00022923506912775338, -2.90866428258596e-05, -2.288818359375e-05, -0.20862960815429688, -0.000354766845703125, -3.814689989667386e-06, 0.0, -8.333172445418313e-05, 0.0, -0.000301361083984375, 0.0, -0.00054168701171875, 0.0, -0.21201133728027344, 0.0, -6.306171417236328e-05, 0.0, -0.0001735687255859375, -9.5367431640625e-05, -0.0001430511474609375, -0.00011669908417388797, -7.510183422709815e-06, 0.0, -0.00010644822759786621, -0.00034558773040771484, -5.602820692729438e-06, -7.62939453125e-05, -0.0069732666015625, -3.525622844696045, -0.40380075573921204, -0.0001531839370727539, -0.018451614305377007, -6.079665126890177e-06, -1.1920928244535389e-07], "choice_history": [97, 283, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 353, 92, 254, "Deathrattle", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"hole2": "PlayerSelector", "_type": "Template41", "hole0": "Deathrattle"}], "_type": "Template68", "hole0": "Weapon", "hole2": 2}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Powermace", "hole2": "SHAMAN"}], "hole0": "Powermace", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, overload=0)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector(BothPlayer())))\n", "score": -4.724942932016916, "score_history": [-2.6702880859375e-05, -0.0002002716064453125, -7.700637797825038e-05, -1.621242699911818e-05, -0.00019226610311307013, -0.00022923506912775338, -2.90866428258596e-05, -2.288818359375e-05, -1.6739730834960938, -0.0009441375732421875, -9.72747802734375e-05, 0.0, -3.457015918684192e-05, -7.069110870361328e-05, -0.0001373291015625, 0.0, -0.0001373291015625, -2.288818359375e-05, -2.6702880859375e-05, -8.284810610348359e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.9073486328125e-06, -0.005065202713012695, -1.9073486328125e-06, -5.91278076171875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.010408401489257812, -1.71661376953125e-05, -0.000247955322265625, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002765655517578125, -9.5367431640625e-06, -0.000240325927734375, -0.01192474365234375, -1.9073486328125e-06, -0.8067227602005005, -1.5854835510253906e-05, -0.0022563934326171875, -8.20159912109375e-05, -0.04609819874167442, -0.0005208253860473633, -0.010436296463012695, 0.0, -0.00018143653869628906, 0.0, -0.001041412353515625, -0.036398887634277344, -9.34600830078125e-05, -0.00046456989366561174, -1.4185905456542969e-05, -5.960462203802308e-07, -4.60137271147687e-05, -0.0004583597183227539, -1.4305104514278355e-06, -0.0001850128173828125, -0.004070281982421875, -1.364975929260254, -0.13356128334999084, -0.013230240903794765, -0.000775456428527832, -0.0008449554443359375, -0.06909847259521484, -0.0009250640869140625, -0.0016969440039247274, -0.000536799430847168, -8.463859558105469e-06, -0.0028077363967895508, 0.0, -0.000232696533203125, 0.0, -1.52587890625e-05, 0.0, -0.0057451725006103516, -7.832050323486328e-05, -0.027548789978027344, -3.814697265625e-06, -0.015633583068847656, -3.814697265625e-06, -0.02525043487548828, 0.0, -0.017493601888418198, -1.990795135498047e-05, -0.028351783752441406, -1.0728830375228426e-06, -1.5497195136049413e-06, -7.43865966796875e-05, -0.26505374908447266, -1.9073486328125e-06, -0.13697457313537598, -9.310205496149138e-05, -8.106231689453125e-06], "choice_history": [97, 283, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Powermace", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "Give", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 353, 92, 259, "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "spare_part_list", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Both", "Player", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"hole1": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "spare_part_list", "_type": "Name"}}], "hole3": [{"_type": "Template79", "hole0": "BothPlayer"}], "_type": "Template41", "hole0": "AddCard", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Weapon", "hole2": 2}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 0, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Powermace", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "Powermace", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(WeaponSelector(\n            CardQuery(conditions=[ManaPowermace(Attribute('health',\n            SelfSelector())), IsMinion()])), PlayerSelector()))\n", "score": -4.77930002138055, "score_history": [-2.6702880859375e-05, -0.0002002716064453125, -7.700637797825038e-05, -1.621242699911818e-05, -0.00019226610311307013, -0.00022923506912775338, -2.90866428258596e-05, -2.288818359375e-05, -0.20862960815429688, -0.000354766845703125, -3.814689989667386e-06, 0.0, -8.333172445418313e-05, 0.0, -0.000301361083984375, 0.0, -0.00054168701171875, 0.0, -0.21201133728027344, 0.0, -6.306171417236328e-05, 0.0, -0.0001735687255859375, -9.5367431640625e-05, -0.0001430511474609375, -0.00011669908417388797, -7.510183422709815e-06, 0.0, -0.00010644822759786621, -0.00034558773040771484, -5.602820692729438e-06, -7.62939453125e-05, -0.0069732666015625, -2.30318546295166, -0.2941017150878906, -0.09790146350860596, -2.002696055569686e-05, -0.00023651123046875, -0.04788494110107422, -0.10254859924316406, -2.288818359375e-05, 0.0, -0.0005812643212266266, -0.0004407167434692383, -2.2530553906108253e-05, -1.71661376953125e-05, -0.0003337860107421875, -1.9073486328125e-06, -0.009060978889465332, 0.0, -0.026071548461914062, -0.000850677490234375, -0.0015897750854492188, -0.5842008590698242, -0.0048656463623046875, -0.009210464544594288, -0.1279669553041458, -0.028323477134108543, -0.000362396240234375, 0.0, -0.05573626235127449, -0.00012409679766278714, -0.0001926422119140625, -0.009702682495117188, -1.71661376953125e-05, -0.23296290636062622, -3.814697265625e-06, -0.16387081146240234, -1.33514404296875e-05, -0.08774352073669434, -0.00013755857071373612, 0.0, -0.0028600692749023438, -0.002254486083984375, -0.000603249529376626, -0.12094450742006302, -0.0036243200302124023, -0.027855273336172104, -2.3365020751953125e-05, -2.145764938177308e-06], "choice_history": [97, 283, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 353, 92, 257, "Weapon", "Selector", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 77, 302, "Mana", "Powermace", "<EOS>", 21, 174, "Attribute", "<EOS>", 347, 53, 183, "health", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 83, 314, "Is", "Minion", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": {"id": "Attribute", "_type": "Name"}, "_type": "Template64", "hole0": "ManaPowermace", "hole2": [{"s": "health", "_type": "Str"}, {"_type": "Template79", "hole0": "SelfSelector"}]}, {"_type": "Template73_expr_seq", "hole0": "IsMinion"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "_type": "Template41", "hole0": "WeaponSelector", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Weapon", "hole2": 2}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Powermace", "hole2": "SHAMAN"}], "hole0": "Powermace", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, overload=0)\n\n    def create_minion(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector(Battlecry(ManaChange(-3), GreaterThan(Count(\n            CardSelector(condition=IsType(MINION_TYPE.MECH))), value=0)))))\n", "score": -12.0547616244736, "score_history": [-2.6702880859375e-05, -0.0002002716064453125, -7.700637797825038e-05, -1.621242699911818e-05, -0.00019226610311307013, -0.00022923506912775338, -2.90866428258596e-05, -2.288818359375e-05, -1.6739730834960938, -0.0009441375732421875, -9.72747802734375e-05, 0.0, -3.457015918684192e-05, -7.069110870361328e-05, -0.0001373291015625, 0.0, -0.0001373291015625, -2.288818359375e-05, -2.6702880859375e-05, -8.284810610348359e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.9073486328125e-06, -0.005065202713012695, -1.9073486328125e-06, -5.91278076171875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.010408401489257812, -1.71661376953125e-05, -0.000247955322265625, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -0.0002765655517578125, -9.5367431640625e-06, -0.000240325927734375, -0.01192474365234375, -1.9073486328125e-06, -0.8067227602005005, -1.5854835510253906e-05, -0.0022563934326171875, -8.20159912109375e-05, -0.04609819874167442, -0.0005208253860473633, -0.010436296463012695, 0.0, -0.00018143653869628906, 0.0, -0.001041412353515625, -0.036398887634277344, -9.34600830078125e-05, -0.00046456989366561174, -1.4185905456542969e-05, -5.960462203802308e-07, -4.60137271147687e-05, -0.0004583597183227539, -1.4305104514278355e-06, -0.0001850128173828125, -0.004070281982421875, -1.364975929260254, -0.13356128334999084, -0.013230240903794765, -0.000775456428527832, -0.0008449554443359375, -0.06909847259521484, -0.0009250640869140625, -0.0016969440039247274, -0.000536799430847168, -8.463859558105469e-06, -0.0028077363967895508, 0.0, -0.000232696533203125, 0.0, -1.52587890625e-05, 0.0, -0.0057451725006103516, -7.832050323486328e-05, -0.027548789978027344, -3.814697265625e-06, -0.015633583068847656, -3.814697265625e-06, -0.02525043487548828, 0.0, -0.017493601888418198, -1.990795135498047e-05, -0.028351783752441406, -1.0728830375228426e-06, -1.5497195136049413e-06, -7.43865966796875e-05, -1.4639253616333008, -8.58306884765625e-05, -7.62939453125e-06, 0.0, -1.2307443618774414, -0.058658719062805176, -0.000438690185546875, -0.4031095504760742, -0.04535388946533203, -1.33514404296875e-05, -5.7220458984375e-06, -1.2194163799285889, -0.07180452346801758, -5.340576171875e-05, -1.71661376953125e-05, -0.002124786376953125, -0.0012149810791015625, -0.3614969253540039, -9.5367431640625e-05, -5.7220458984375e-06, -0.5245615839958191, -3.24249267578125e-05, -0.44231414794921875, -0.6007776260375977, -0.0003757476806640625, -3.24249267578125e-05, -0.18353664875030518, -0.001332402229309082, -5.602834789897315e-06, -1.52587890625e-05, -0.04496192932128906, -0.0005397796630859375, -1.33514404296875e-05, -5.340576171875e-05, -0.06594538688659668, -5.5670738220214844e-05, -0.0001068115234375, -0.2492218017578125, -0.030254364013671875, -0.0002300739288330078, -0.00031936168670654297, -1.9073486328125e-06, -3.4332275390625e-05, -0.004322052001953125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.012065887451171875, -7.62939453125e-06, -0.6092414855957031, -1.9073486328125e-06, -9.5367431640625e-06, -0.000621795654296875, 0.0, -0.059462785720825195, -7.271766662597656e-05, -0.00524139404296875, -0.0014133453369140625, -0.03615322336554527, -2.47955322265625e-05], "choice_history": [97, 283, "Powermace", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Powermace", "<EOS>", 52, 179, "3", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "Give", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "3", "<EOS>", "2", "<EOS>", 353, 92, 259, "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "spare_part_list", "<EOS>", "Player", "Selector", "<EOS>", 346, 45, 150, 21, 174, "Battlecry", "<EOS>", 347, 45, 150, 21, 174, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "3", "<EOS>", 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": [{"hole1": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "spare_part_list", "_type": "Name"}}], "hole3": [{"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Call"}, {"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}], "_type": "Call"}], "_type": "Template41", "hole0": "AddCard", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Weapon", "hole2": 2}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 0, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Powermace", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "Powermace", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}]}
{"gold_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2))]),\n            MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "beams": [{"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(4)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score": -0.5265456121170757, "score_history": [-0.00150299072265625, -2.47955322265625e-05, -2.47955322265625e-05, -0.000240325927734375, -3.62396240234375e-05, -0.00016282663273159415, -1.0609570381348021e-05, -9.42901024245657e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1920201359316707e-07, -9.107272489927709e-05, -1.811981201171875e-05, -1.9073486328125e-05, -0.0017833709716796875, -0.000102996826171875, -1.4305104514278355e-06, -2.8491018383647315e-05, -4.291525328881107e-06, -3.933906555175781e-06, -5.245207830739673e-06, -1.9073486328125e-06, -0.0014325380325317383, -9.5367431640625e-06, -0.00460052490234375, -1.9073486328125e-06, -0.00035130977630615234, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.001293182373046875, -4.1961669921875e-05, -0.0002460479736328125, -0.0004329681396484375, -0.15018272399902344, -0.00018310546875, -5.7220458984375e-05, -3.814697265625e-06, -0.0018318883376196027, -5.030632019042969e-05, -0.00553131103515625, -0.21323299407958984, -0.00629425048828125, -0.008733391761779785, -2.861022494471399e-06, -0.0003192424774169922, -0.0027924776077270508, -1.7762025890988298e-05, -0.05765675753355026, -5.14984130859375e-05, -0.051537513732910156, -0.01195526123046875, -0.00200653076171875, -0.00084686279296875, -1.9073486328125e-06, -0.0003986358642578125, -2.288818359375e-05, -6.806619057897478e-05, -5.960462772236497e-07, -4.971027374267578e-05, -2.3841855067985307e-07], "choice_history": [96, 173, 358, 105, 152, "Screwjank", "Clunker", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 68, 288, "Give", "<EOS>", "Change", "Health", "<EOS>", "4", "<EOS>", 59, 232, "User", "Picker", "<EOS>", 122, 213, "2", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Screwjank Clunker", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MECH", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": "ChangeHealth", "_type": "Template51", "hole0": "Give", "hole2": 4}, {"_type": "Template33", "hole0": "UserPicker"}], "_type": "Call"}}, {"hole1": 5, "_type": "Template19", "hole0": 2}], "name": "ScrewjankClunker", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(Buff(ChangeAttack(2))), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score": -4.522410227975968, "score_history": [-0.00150299072265625, -2.47955322265625e-05, -2.47955322265625e-05, -0.000240325927734375, -3.62396240234375e-05, -0.00016282663273159415, -1.0609570381348021e-05, -9.42901024245657e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1920201359316707e-07, -9.107272489927709e-05, -1.811981201171875e-05, -1.9073486328125e-05, -0.0017833709716796875, -0.000102996826171875, -1.4305104514278355e-06, -2.8491018383647315e-05, -4.291525328881107e-06, -3.933906555175781e-06, -5.245207830739673e-06, -1.9073486328125e-06, -0.0014325380325317383, -9.5367431640625e-06, -0.00460052490234375, -1.9073486328125e-06, -0.00035130977630615234, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.001293182373046875, -4.1961669921875e-05, -0.0002460479736328125, -0.0004329681396484375, -3.0564608573913574, -0.6418638229370117, -0.03208649531006813, -0.0009584224317222834, -7.43865966796875e-05, -0.6953668594360352, -0.0269927978515625, -0.001274585840292275, -7.438658940372989e-05, -0.0001962187234312296, -0.0010625123977661133, 0.0, -0.0034160614013671875, -0.046062469482421875, -0.00051116943359375, -0.000339508056640625, -0.000469207763671875, -0.0021190643310546875, -0.0001316070556640625, -0.00012909529323223978, -1.168244216387393e-05, -9.262561798095703e-05, -5.960462772236497e-07], "choice_history": [96, 173, 358, 105, 152, "Screwjank", "Clunker", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 29, 267, "Give", "<EOS>", 346, 66, 279, "2", "<EOS>", "Minion", "Selector", "<EOS>", 346, 74, 297, "MECH", "<EOS>", 122, 213, "2", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Screwjank Clunker", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"_type": "Template47", "hole0": 2}], "hole3": [{"_type": "Template60", "hole0": "MECH"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}, {"hole1": 5, "_type": "Template19", "hole0": 2}], "name": "ScrewjankClunker", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score": -4.664319968037574, "score_history": [-0.00150299072265625, -2.47955322265625e-05, -2.47955322265625e-05, -0.000240325927734375, -3.62396240234375e-05, -0.00016282663273159415, -1.0609570381348021e-05, -9.42901024245657e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1920201359316707e-07, -9.107272489927709e-05, -1.811981201171875e-05, -1.9073486328125e-05, -0.0017833709716796875, -0.000102996826171875, -1.4305104514278355e-06, -2.8491018383647315e-05, -4.291525328881107e-06, -3.933906555175781e-06, -5.245207830739673e-06, -1.9073486328125e-06, -0.0014325380325317383, -9.5367431640625e-06, -0.00460052490234375, -1.9073486328125e-06, -0.00035130977630615234, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.001293182373046875, -4.1961669921875e-05, -0.0002460479736328125, -0.0004329681396484375, -0.15018272399902344, -0.00018310546875, -5.7220458984375e-05, -3.814697265625e-06, -0.0018318883376196027, -5.030632019042969e-05, -0.00553131103515625, -0.21323299407958984, -0.00629425048828125, -0.008733391761779785, -2.861022494471399e-06, -0.0003192424774169922, -0.0027924776077270508, -1.7762025890988298e-05, -2.967648506164551, -4.768370445162873e-07, -1.2773704528808594, -0.013770103454589844, -0.002704620361328125, -0.00038754940032958984, -1.9073486328125e-06, -0.0003414154052734375, -2.6702880859375e-05, -6.48477507638745e-05, -4.768370445162873e-07, -5.352497100830078e-05, -2.3841855067985307e-07], "choice_history": [96, 173, 358, 105, 152, "Screwjank", "Clunker", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 68, 288, "Give", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 59, 232, "User", "Picker", "<EOS>", 122, 213, "2", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Screwjank Clunker", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MECH", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": "ChangeHealth", "_type": "Template51", "hole0": "Give", "hole2": 2}, {"_type": "Template33", "hole0": "UserPicker"}], "_type": "Call"}}, {"hole1": 5, "_type": "Template19", "hole0": 2}], "name": "ScrewjankClunker", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(players=\n            BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score": -4.744172068090727, "score_history": [-0.00150299072265625, -2.47955322265625e-05, -2.47955322265625e-05, -0.000240325927734375, -3.62396240234375e-05, -0.00016282663273159415, -1.0609570381348021e-05, -9.42901024245657e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1920201359316707e-07, -9.107272489927709e-05, -1.811981201171875e-05, -1.9073486328125e-05, -0.0017833709716796875, -0.000102996826171875, -1.4305104514278355e-06, -2.8491018383647315e-05, -4.291525328881107e-06, -3.933906555175781e-06, -5.245207830739673e-06, -1.9073486328125e-06, -0.0014325380325317383, -9.5367431640625e-06, -0.00460052490234375, -1.9073486328125e-06, -0.00035130977630615234, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.001293182373046875, -4.1961669921875e-05, -0.0002460479736328125, -0.0004329681396484375, -0.15018272399902344, -0.00018310546875, -5.7220458984375e-05, -3.814697265625e-06, -0.0018318883376196027, -5.030632019042969e-05, -0.00553131103515625, -0.21323299407958984, -0.00629425048828125, -0.008733391761779785, -2.861022494471399e-06, -0.0003192424774169922, -0.0027924776077270508, -1.7762025890988298e-05, -2.967648506164551, -4.768370445162873e-07, -0.9357481002807617, -0.00295257568359375, -0.04082465171813965, -0.0885009765625, 0.0, -0.25235652923583984, -0.0006561279296875, -0.0001964569091796875, 0.0, -0.0054857730865478516, -4.4226646423339844e-05, -1.9073486328125e-06, -0.03365445137023926, -6.496906280517578e-05, -0.000110626220703125, -1.9073486328125e-06, -0.013645172119140625, -8.988380432128906e-05, 0.0, -7.82012939453125e-05, -4.00543212890625e-05, -0.00011169286881340668, -8.344646857949556e-07, -8.70227722771233e-06, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Screwjank", "Clunker", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 68, 288, "Give", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 71, 293, "Minion", "Selector", "<EOS>", "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "2", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Screwjank Clunker", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MECH", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": "ChangeHealth", "_type": "Template51", "hole0": "Give", "hole2": 2}, {"hole2": {"_type": "Template79", "hole0": "BothPlayer"}, "hole0": "MinionSelector", "_type": "Template56", "hole3": "picker", "hole1": "players", "hole4": {"_type": "Template79", "hole0": "UserPicker"}}], "_type": "Call"}}, {"hole1": 5, "_type": "Template19", "hole0": 2}], "name": "ScrewjankClunker", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(IsType(\n            MINION_TYPE.MURLOC), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score": -4.79350722345572, "score_history": [-0.00150299072265625, -2.47955322265625e-05, -2.47955322265625e-05, -0.000240325927734375, -3.62396240234375e-05, -0.00016282663273159415, -1.0609570381348021e-05, -9.42901024245657e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1920201359316707e-07, -9.107272489927709e-05, -1.811981201171875e-05, -1.9073486328125e-05, -0.0017833709716796875, -0.000102996826171875, -1.4305104514278355e-06, -2.8491018383647315e-05, -4.291525328881107e-06, -3.933906555175781e-06, -5.245207830739673e-06, -1.9073486328125e-06, -0.0014325380325317383, -9.5367431640625e-06, -0.00460052490234375, -1.9073486328125e-06, -0.00035130977630615234, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.001293182373046875, -4.1961669921875e-05, -0.0002460479736328125, -0.0004329681396484375, -3.0564608573913574, -0.6418638229370117, -0.03208649531006813, -0.0009584224317222834, -7.43865966796875e-05, -0.9110145568847656, -0.00086212158203125, -0.01625034213066101, -0.0005028251325711608, -2.6658177375793457e-05, -0.021851539611816406, -2.3841855067985307e-07, -0.02080059051513672, -0.005730628967285156, -0.0002117156982421875, -0.05507183074951172, -4.00543212890625e-05, -0.000240325927734375, -3.814697265625e-06, -0.016412734985351562, -1.5497207641601562e-05, -5.7220458984375e-06, -0.000156402587890625, -4.9591064453125e-05, -7.033100700937212e-05, -1.9073468138230965e-06, -2.777576446533203e-05, -2.3841855067985307e-07], "choice_history": [96, 173, 358, 105, 152, "Screwjank", "Clunker", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 29, 267, "Give", "<EOS>", 346, 81, 311, "2", "<EOS>", "Minion", "Selector", "<EOS>", 347, 74, 297, "MURLOC", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 122, 213, "2", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Screwjank Clunker", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"_type": "Template71", "hole0": 2}], "hole3": [{"_type": "Template60", "hole0": "MURLOC"}, {"_type": "Template79", "hole0": "BothPlayer"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}, {"hole1": 5, "_type": "Template19", "hole0": 2}], "name": "ScrewjankClunker", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(2())]), MinionSelector(IsType(MINION_TYPE.MECH), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score": -5.3097695786762955, "score_history": [-0.00150299072265625, -2.47955322265625e-05, -2.47955322265625e-05, -0.000240325927734375, -3.62396240234375e-05, -0.00016282663273159415, -1.0609570381348021e-05, -9.42901024245657e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1920201359316707e-07, -9.107272489927709e-05, -1.811981201171875e-05, -1.9073486328125e-05, -0.0017833709716796875, -0.000102996826171875, -1.4305104514278355e-06, -2.8491018383647315e-05, -4.291525328881107e-06, -3.933906555175781e-06, -5.245207830739673e-06, -1.9073486328125e-06, -0.0014325380325317383, -9.5367431640625e-06, -0.00460052490234375, -1.9073486328125e-06, -0.00035130977630615234, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.001293182373046875, -4.1961669921875e-05, -0.0002460479736328125, -0.0004329681396484375, -3.725102424621582, -0.049042701721191406, -0.04214973747730255, -0.0007475614547729492, -0.003387928009033203, -0.0011043548583984375, -1.0490362910786644e-05, -3.814697265625e-05, -0.00043487548828125, -5.340576171875e-05, -0.0032158801332116127, -7.62939453125e-06, -0.008191227912902832, -0.15469741821289062, -8.392333984375e-05, -0.0006085634231567383, -9.5367431640625e-06, -0.012750625610351562, -0.00641632080078125, -0.0011501312255859375, -0.0171658918261528, -0.0009223059751093388, -0.003953337669372559, -0.013974189758300781, -0.00038909912109375, -3.0517578125e-05, -0.023911476135253906, 0.0, -3.24249267578125e-05, -1.33514404296875e-05, -8.976459503173828e-05, -0.0002231597900390625, -0.6361331939697266, 0.0, -0.001201629638671875, -0.007933616638183594, 0.0, -0.3021632432937622, -8.58306884765625e-05, -0.039768218994140625, -0.0005092620849609375, -0.044162817299366, -5.7220458984375e-06, -0.19448566436767578, -0.00055694580078125, -2.3603161025675945e-05, -1.1920928244535389e-07, -0.00011539438855834305, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Screwjank", "Clunker", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 39, 328, "Battlecry", "<EOS>", "Change", "Health", "<EOS>", 346, 52, 179, "2", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 346, 69, 290, "2", "<EOS>", "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", 122, 213, "2", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Screwjank Clunker", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole7": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}], "hole5": [{"_type": "Template54", "hole0": "2"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "Battlecry", "_type": "Template9", "hole3": "ChangeAttack", "hole1": "ChangeHealth", "hole4": 2, "hole6": "IsType", "hole8": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}}, {"hole1": 5, "_type": "Template19", "hole0": 2}], "name": "ScrewjankClunker", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score": -5.4618739861190875, "score_history": [-0.00150299072265625, -2.47955322265625e-05, -2.47955322265625e-05, -0.000240325927734375, -3.62396240234375e-05, -0.00016282663273159415, -1.0609570381348021e-05, -9.42901024245657e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1920201359316707e-07, -9.107272489927709e-05, -1.811981201171875e-05, -1.9073486328125e-05, -0.0017833709716796875, -0.000102996826171875, -1.4305104514278355e-06, -2.8491018383647315e-05, -4.291525328881107e-06, -3.933906555175781e-06, -5.245207830739673e-06, -1.9073486328125e-06, -0.0014325380325317383, -9.5367431640625e-06, -0.00460052490234375, -1.9073486328125e-06, -0.00035130977630615234, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.001293182373046875, -4.1961669921875e-05, -0.0002460479736328125, -0.0004329681396484375, -0.15018272399902344, -0.00018310546875, -5.7220458984375e-05, -3.814697265625e-06, -0.0018318883376196027, -5.030632019042969e-05, -0.00553131103515625, -0.21323299407958984, -0.00629425048828125, -0.008733391761779785, -2.861022494471399e-06, -0.0003192424774169922, -0.0027924776077270508, -1.7762025890988298e-05, -2.967648506164551, -4.768370445162873e-07, -1.589181900024414, -0.0002193450927734375, -0.5024830102920532, -9.560585021972656e-05, 0.0, -0.000164031982421875, -0.0001010894775390625, -1.835809598560445e-05, -3.576278118089249e-07, -1.2159347534179688e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Screwjank", "Clunker", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 68, 288, "Give", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 122, 213, "2", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Screwjank Clunker", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MECH", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": "ChangeHealth", "_type": "Template51", "hole0": "Give", "hole2": 2}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Call"}}, {"hole1": 5, "_type": "Template19", "hole0": 2}], "name": "ScrewjankClunker", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(4)), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score": -5.553100317619446, "score_history": [-0.00150299072265625, -2.47955322265625e-05, -2.47955322265625e-05, -0.000240325927734375, -3.62396240234375e-05, -0.00016282663273159415, -1.0609570381348021e-05, -9.42901024245657e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1920201359316707e-07, -9.107272489927709e-05, -1.811981201171875e-05, -1.9073486328125e-05, -0.0017833709716796875, -0.000102996826171875, -1.4305104514278355e-06, -2.8491018383647315e-05, -4.291525328881107e-06, -3.933906555175781e-06, -5.245207830739673e-06, -1.9073486328125e-06, -0.0014325380325317383, -9.5367431640625e-06, -0.00460052490234375, -1.9073486328125e-06, -0.00035130977630615234, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.001293182373046875, -4.1961669921875e-05, -0.0002460479736328125, -0.0004329681396484375, -0.15018272399902344, -0.00018310546875, -5.7220458984375e-05, -3.814697265625e-06, -0.0018318883376196027, -5.030632019042969e-05, -0.00553131103515625, -0.21323299407958984, -0.00629425048828125, -0.008733391761779785, -2.861022494471399e-06, -0.0003192424774169922, -0.0027924776077270508, -1.7762025890988298e-05, -0.05765675753355026, -5.14984130859375e-05, -4.751000881195068, -0.0032644271850585938, -0.3385976552963257, -8.2254373410251e-06, 0.0, -0.0004558563232421875, -7.43865966796875e-05, -3.2305197237292305e-05, -5.960462772236497e-07, -8.463859558105469e-06, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Screwjank", "Clunker", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 68, 288, "Give", "<EOS>", "Change", "Health", "<EOS>", "4", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 122, 213, "2", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Screwjank Clunker", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MECH", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": "ChangeHealth", "_type": "Template51", "hole0": "Give", "hole2": 4}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Call"}}, {"hole1": 5, "_type": "Template19", "hole0": 2}], "name": "ScrewjankClunker", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Count(MinionSelector(IsType(\n            MINION_TYPE.MECH)))))), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score": -5.618098816713079, "score_history": [-0.00150299072265625, -2.47955322265625e-05, -2.47955322265625e-05, -0.000240325927734375, -3.62396240234375e-05, -0.00016282663273159415, -1.0609570381348021e-05, -9.42901024245657e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1920201359316707e-07, -9.107272489927709e-05, -1.811981201171875e-05, -1.9073486328125e-05, -0.0017833709716796875, -0.000102996826171875, -1.4305104514278355e-06, -2.8491018383647315e-05, -4.291525328881107e-06, -3.933906555175781e-06, -5.245207830739673e-06, -1.9073486328125e-06, -0.0014325380325317383, -9.5367431640625e-06, -0.00460052490234375, -1.9073486328125e-06, -0.00035130977630615234, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.001293182373046875, -4.1961669921875e-05, -0.0002460479736328125, -0.0004329681396484375, -3.0564608573913574, -1.2542400360107422, -0.01766037754714489, -6.94989794283174e-05, -0.000179290771484375, -0.5697040557861328, -0.000274658203125, -0.00021588802337646484, -0.0008797645568847656, -1.442432312614983e-05, -0.00691986083984375, -0.1234426498413086, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -0.21853137016296387, -2.0265579223632812e-06, -0.0002346038818359375, -0.1474151611328125, -0.0006008148193359375, -0.00022900104522705078, -0.0003987550735473633, -0.0002803802490234375, -0.0013637542724609375, -0.0010004043579101562, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.0001544952392578125, -2.86102294921875e-05, -0.00341796875, 0.0, -0.1975116729736328, -3.814697265625e-06, 0.0, -0.0037393569946289062, -0.000156402587890625, -0.00017581824795342982, -7.152555099310121e-07, -1.537799835205078e-05, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Screwjank", "Clunker", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "Player", "Selector", "<EOS>", 122, 213, "2", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Screwjank Clunker", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "PlayerSelector"}}, {"hole1": 5, "_type": "Template19", "hole0": 2}], "name": "ScrewjankClunker", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(2())]), MinionSelector(IsType(MINION_TYPE.DRAGON), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score": -5.658307083174648, "score_history": [-0.00150299072265625, -2.47955322265625e-05, -2.47955322265625e-05, -0.000240325927734375, -3.62396240234375e-05, -0.00016282663273159415, -1.0609570381348021e-05, -9.42901024245657e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1920201359316707e-07, -9.107272489927709e-05, -1.811981201171875e-05, -1.9073486328125e-05, -0.0017833709716796875, -0.000102996826171875, -1.4305104514278355e-06, -2.8491018383647315e-05, -4.291525328881107e-06, -3.933906555175781e-06, -5.245207830739673e-06, -1.9073486328125e-06, -0.0014325380325317383, -9.5367431640625e-06, -0.00460052490234375, -1.9073486328125e-06, -0.00035130977630615234, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.001293182373046875, -4.1961669921875e-05, -0.0002460479736328125, -0.0004329681396484375, -3.725102424621582, -0.049042701721191406, -0.04214973747730255, -0.0007475614547729492, -0.003387928009033203, -0.0011043548583984375, -1.0490362910786644e-05, -3.814697265625e-05, -0.00043487548828125, -5.340576171875e-05, -0.0032158801332116127, -7.62939453125e-06, -0.008191227912902832, -0.15469741821289062, -8.392333984375e-05, -0.0006085634231567383, -9.5367431640625e-06, -0.012750625610351562, -0.00641632080078125, -0.0011501312255859375, -0.0171658918261528, -0.0009223059751093388, -0.003953337669372559, -0.013974189758300781, -0.00038909912109375, -3.0517578125e-05, -0.023911476135253906, 0.0, -3.24249267578125e-05, -1.33514404296875e-05, -8.976459503173828e-05, -0.0002231597900390625, -0.9731063842773438, -2.3841855067985307e-07, -0.002040863037109375, -0.003970146179199219, 0.0, -0.379638671875, -1.7881393432617188e-05, -0.05731487274169922, -0.0005702972412109375, -0.04038871079683304, -5.7220458984375e-06, -0.11800765991210938, -0.0004482269287109375, -2.8609820219571702e-05, -1.1920928244535389e-07, -0.0001443622022634372, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Screwjank", "Clunker", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 39, 328, "Battlecry", "<EOS>", "Change", "Health", "<EOS>", 346, 52, 179, "2", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 346, 69, 290, "2", "<EOS>", "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", 122, 213, "2", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Screwjank Clunker", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole7": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "hole5": [{"_type": "Template54", "hole0": "2"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "Battlecry", "_type": "Template9", "hole3": "ChangeAttack", "hole1": "ChangeHealth", "hole4": 2, "hole6": "IsType", "hole8": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}}, {"hole1": 5, "_type": "Template19", "hole0": 2}], "name": "ScrewjankClunker", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(4)), MinionSelector(players=\n            BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score": -6.1242727678218145, "score_history": [-0.00150299072265625, -2.47955322265625e-05, -2.47955322265625e-05, -0.000240325927734375, -3.62396240234375e-05, -0.00016282663273159415, -1.0609570381348021e-05, -9.42901024245657e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1920201359316707e-07, -9.107272489927709e-05, -1.811981201171875e-05, -1.9073486328125e-05, -0.0017833709716796875, -0.000102996826171875, -1.4305104514278355e-06, -2.8491018383647315e-05, -4.291525328881107e-06, -3.933906555175781e-06, -5.245207830739673e-06, -1.9073486328125e-06, -0.0014325380325317383, -9.5367431640625e-06, -0.00460052490234375, -1.9073486328125e-06, -0.00035130977630615234, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.001293182373046875, -4.1961669921875e-05, -0.0002460479736328125, -0.0004329681396484375, -0.15018272399902344, -0.00018310546875, -5.7220458984375e-05, -3.814697265625e-06, -0.0018318883376196027, -5.030632019042969e-05, -0.00553131103515625, -0.21323299407958984, -0.00629425048828125, -0.008733391761779785, -2.861022494471399e-06, -0.0003192424774169922, -0.0027924776077270508, -1.7762025890988298e-05, -0.05765675753355026, -5.14984130859375e-05, -4.720184803009033, -0.0051174163818359375, -0.17563021183013916, -0.13794708251953125, -1.9073486328125e-06, -0.5505433082580566, -0.0015411376953125, -0.0003337860107421875, 0.0, -0.007284402847290039, -8.594989776611328e-05, -1.9073486328125e-06, -0.05497586727142334, -0.00011646747589111328, -0.0001583099365234375, -1.9073486328125e-06, -0.010206222534179688, -0.00011086463928222656, 0.0, -8.20159912109375e-05, -5.340576171875e-05, -0.0002286172821186483, -8.344646857949556e-07, -8.82148651726311e-06, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Screwjank", "Clunker", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 68, 288, "Give", "<EOS>", "Change", "Health", "<EOS>", "4", "<EOS>", 71, 293, "Minion", "Selector", "<EOS>", "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "2", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Screwjank Clunker", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MECH", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": "ChangeHealth", "_type": "Template51", "hole0": "Give", "hole2": 4}, {"hole2": {"_type": "Template79", "hole0": "BothPlayer"}, "hole0": "MinionSelector", "_type": "Template56", "hole3": "picker", "hole1": "players", "hole4": {"_type": "Template79", "hole0": "UserPicker"}}], "_type": "Call"}}, {"hole1": 5, "_type": "Template19", "hole0": 2}], "name": "ScrewjankClunker", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(2())]), MinionSelector(IsType(MINION_TYPE.MECH), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score": -6.719900132022637, "score_history": [-0.00150299072265625, -2.47955322265625e-05, -2.47955322265625e-05, -0.000240325927734375, -3.62396240234375e-05, -0.00016282663273159415, -1.0609570381348021e-05, -9.42901024245657e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1920201359316707e-07, -9.107272489927709e-05, -1.811981201171875e-05, -1.9073486328125e-05, -0.0017833709716796875, -0.000102996826171875, -1.4305104514278355e-06, -2.8491018383647315e-05, -4.291525328881107e-06, -3.933906555175781e-06, -5.245207830739673e-06, -1.9073486328125e-06, -0.0014325380325317383, -9.5367431640625e-06, -0.00460052490234375, -1.9073486328125e-06, -0.00035130977630615234, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.001293182373046875, -4.1961669921875e-05, -0.0002460479736328125, -0.0004329681396484375, -3.725102424621582, -0.049042701721191406, -0.04214973747730255, -0.0007475614547729492, -0.003387928009033203, -0.0011043548583984375, -1.0490362910786644e-05, -3.814697265625e-05, -0.00043487548828125, -5.340576171875e-05, -0.0032158801332116127, -7.62939453125e-06, -0.008191227912902832, -0.15469741821289062, -8.392333984375e-05, -0.0006085634231567383, -9.5367431640625e-06, -0.012750625610351562, -0.00641632080078125, -0.0011501312255859375, -0.0171658918261528, -0.0009223059751093388, -0.003953337669372559, -0.013974189758300781, -0.00038909912109375, -3.0517578125e-05, -0.023911476135253906, 0.0, -3.24249267578125e-05, -1.33514404296875e-05, -8.976459503173828e-05, -0.0002231597900390625, -0.6361331939697266, 0.0, -0.001201629638671875, -0.007933616638183594, 0.0, -1.979345440864563, -1.9073486328125e-06, -0.0007953643798828125, 0.0, -0.01080322265625, -0.00045287609100341797, 0.0, -0.0002384185791015625, -0.0003204345703125, -1.2636104656849056e-05, -2.50339189733495e-06, -3.457069396972656e-05, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Screwjank", "Clunker", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 39, 328, "Battlecry", "<EOS>", "Change", "Health", "<EOS>", 346, 52, 179, "2", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 346, 69, 290, "2", "<EOS>", "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 122, 213, "2", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Screwjank Clunker", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole7": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}], "hole5": [{"_type": "Template54", "hole0": "2"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "Battlecry", "_type": "Template9", "hole3": "ChangeAttack", "hole1": "ChangeHealth", "hole4": 2, "hole6": "IsType", "hole8": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}]}}, {"hole1": 5, "_type": "Template19", "hole0": 2}], "name": "ScrewjankClunker", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry([IncreaseWeaponAttack(1), IncreaseDurability()],\n            WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score": -6.764419898761723, "score_history": [-0.00150299072265625, -2.47955322265625e-05, -2.47955322265625e-05, -0.000240325927734375, -3.62396240234375e-05, -0.00016282663273159415, -1.0609570381348021e-05, -9.42901024245657e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1920201359316707e-07, -9.107272489927709e-05, -1.811981201171875e-05, -1.9073486328125e-05, -0.0017833709716796875, -0.000102996826171875, -1.4305104514278355e-06, -2.8491018383647315e-05, -4.291525328881107e-06, -3.933906555175781e-06, -5.245207830739673e-06, -1.9073486328125e-06, -0.0014325380325317383, -9.5367431640625e-06, -0.00460052490234375, -1.9073486328125e-06, -0.00035130977630615234, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.001293182373046875, -4.1961669921875e-05, -0.0002460479736328125, -0.0004329681396484375, -0.15018272399902344, -0.00018310546875, -5.7220458984375e-05, -3.814697265625e-06, -0.0018318883376196027, -5.030632019042969e-05, -0.00553131103515625, -3.9371328353881836, -0.0015125274658203125, -0.0031871795654296875, -0.6650056838989258, -0.0005702972412109375, -0.3065187931060791, -0.12724900245666504, -0.0076446533203125, -0.001178741455078125, -0.13056659698486328, 0.0, -0.014040946960449219, -0.0002384185791015625, -1.1635973453521729, -0.07117403298616409, -0.0031385421752929688, -0.03811931610107422, -7.62939453125e-06, -0.12265026569366455, -7.641315460205078e-05, 0.0, -0.0001430511474609375, -7.43865966796875e-05, -2.074220174108632e-05, -1.1920928244535389e-07, -1.621246337890625e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Screwjank", "Clunker", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 48, 169, 347, 84, 315, "Increase", "Weapon", "Attack", "<EOS>", "1", "<EOS>", 83, 314, "Increase", "Durability", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 122, 213, "2", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Screwjank Clunker", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MECH", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"elts": [{"hole1": 1, "_type": "Template74", "hole0": "IncreaseWeaponAttack"}, {"_type": "Template73_expr_seq", "hole0": "IncreaseDurability"}], "_type": "List"}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Call"}}, {"hole1": 5, "_type": "Template19", "hole0": 2}], "name": "ScrewjankClunker", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(GiveAura([AuraUntil(ManaChange(-3), CardSelector(\n            condition=IsType(MINION_TYPE.MECH)), True, Battlecry(CardPlayed\n            (player=CurrentPlayer()), Choice(<UNK>Of<UNK>(), Draw(),\n            PlayerSelector(players=BothPlayer()))))]), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score": -8.251458573738702, "score_history": [-0.00150299072265625, -2.47955322265625e-05, -2.47955322265625e-05, -0.000240325927734375, -3.62396240234375e-05, -0.00016282663273159415, -1.0609570381348021e-05, -9.42901024245657e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1920201359316707e-07, -9.107272489927709e-05, -1.811981201171875e-05, -1.9073486328125e-05, -0.0017833709716796875, -0.000102996826171875, -1.4305104514278355e-06, -2.8491018383647315e-05, -4.291525328881107e-06, -3.933906555175781e-06, -5.245207830739673e-06, -1.9073486328125e-06, -0.0014325380325317383, -9.5367431640625e-06, -0.00460052490234375, -1.9073486328125e-06, -0.00035130977630615234, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.001293182373046875, -4.1961669921875e-05, -0.0002460479736328125, -0.0004329681396484375, -3.5835213661193848, -0.1072540283203125, -0.02015969157218933, -0.09859473258256912, -0.00017833680612966418, -9.5367431640625e-06, -0.2100238800048828, -0.08508491516113281, -0.05426987633109093, -0.010821223258972168, -1.5497207641601562e-05, -0.014199256896972656, -0.0008411407470703125, -5.7220458984375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.021892055869102478, -0.00015449502097908407, -0.0002346038818359375, -3.814697265625e-05, -0.025003433227539062, -0.0002307891845703125, -0.004815101623535156, -0.000110626220703125, -1.71661376953125e-05, -0.10799481719732285, -7.62939453125e-06, -0.02718353271484375, -0.016448020935058594, -0.00034558773040771484, -0.0036623477935791016, -5.7220458984375e-06, 0.0, -0.00020599365234375, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -4.57763671875e-05, -4.00543212890625e-05, -0.011003494262695312, -1.9073486328125e-06, -0.039684295654296875, -4.9591064453125e-05, -0.028438568115234375, -1.1444091796875e-05, -0.3275918960571289, -0.0038356781005859375, -6.67572021484375e-05, -3.814697265625e-06, -0.28318095207214355, -8.7738037109375e-05, -0.0009174346923828125, -0.2976036071777344, -0.7443208694458008, -5.53131103515625e-05, -1.9073486328125e-06, -0.24321198463439941, -0.39466381072998047, -2.110004425048828e-05, -0.0001735687255859375, -4.57763671875e-05, -2.47955322265625e-05, -0.0727924108505249, -3.576278118089249e-07, -1.52587890625e-05, -1.9073486328125e-06, -0.008155107498168945, -0.0017517802771180868, 0.0, -0.0903635025024414, -0.7513742446899414, -0.008392853662371635, -0.00014519691467285156, -0.009346484206616879, -0.008564761839807034, -0.3380381762981415, -3.4570541174616665e-05, -0.0013810360105708241, -3.814697265625e-06, -0.06424272060394287, -3.647804260253906e-05, -1.1920928244535389e-07, -0.000102996826171875, -9.5367431640625e-06, 0.0, -0.01064526941627264, -1.4305104514278355e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.10433483123779297, -4.00543212890625e-05, 0.0, -0.000286102294921875, -0.000141143798828125, -6.437280717364047e-06, -5.722029527532868e-06, -1.9669532775878906e-05, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Screwjank", "Clunker", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 28, 261, "Give", "Aura", "<EOS>", 346, 86, 321, "Aura", "Until", "<EOS>", 349, 45, 150, 21, 174, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "3", "<EOS>", 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 51, 175, "False", "<EOS>", 45, 150, 21, 174, "Battlecry", "<EOS>", 347, 45, 149, 21, 174, "Card", "Played", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Current", "Player", "<EOS>", 61, 240, "Choice", "<EOS>", "<UNK>", "Of", "<UNK>", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 122, 213, "2", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Screwjank Clunker", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"hole1": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Call"}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}, {"value": true, "_type": "NameConstant"}, {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"func": {"id": "CardPlayed", "_type": "Name"}, "keywords": [{"value": {"_type": "Template79", "hole0": "CurrentPlayer"}, "arg": "player", "_type": "keyword"}], "_type": "Call"}, {"hole6": "PlayerSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Draw", "hole1": "<UNK>Of<UNK>", "hole8": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}]}], "_type": "Call"}], "_type": "Template78", "hole0": "AuraUntil"}], "_type": "Template42", "hole0": "GiveAura"}}, {"hole1": 5, "_type": "Template19", "hole0": 2}], "name": "ScrewjankClunker", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(GiveAura([AuraUntil(ManaChange(-3), CardSelector(\n            condition=IsType(MINION_TYPE.MECH)), True, Battlecry(CardPlayed\n            (player=CurrentPlayer()), Choice(<UNK>Of<UNK>(), Draw(),\n            PlayerSelector(players=CurrentPlayer()))))]), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score": -10.534031916030628, "score_history": [-0.00150299072265625, -2.47955322265625e-05, -2.47955322265625e-05, -0.000240325927734375, -3.62396240234375e-05, -0.00016282663273159415, -1.0609570381348021e-05, -9.42901024245657e-05, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1920201359316707e-07, -9.107272489927709e-05, -1.811981201171875e-05, -1.9073486328125e-05, -0.0017833709716796875, -0.000102996826171875, -1.4305104514278355e-06, -2.8491018383647315e-05, -4.291525328881107e-06, -3.933906555175781e-06, -5.245207830739673e-06, -1.9073486328125e-06, -0.0014325380325317383, -9.5367431640625e-06, -0.00460052490234375, -1.9073486328125e-06, -0.00035130977630615234, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.537799835205078e-05, -5.7220458984375e-06, -0.001293182373046875, -4.1961669921875e-05, -0.0002460479736328125, -0.0004329681396484375, -3.5835213661193848, -0.1072540283203125, -0.02015969157218933, -0.09859473258256912, -0.00017833680612966418, -9.5367431640625e-06, -0.2100238800048828, -0.08508491516113281, -0.05426987633109093, -0.010821223258972168, -1.5497207641601562e-05, -0.014199256896972656, -0.0008411407470703125, -5.7220458984375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.021892055869102478, -0.00015449502097908407, -0.0002346038818359375, -3.814697265625e-05, -0.025003433227539062, -0.0002307891845703125, -0.004815101623535156, -0.000110626220703125, -1.71661376953125e-05, -0.10799481719732285, -7.62939453125e-06, -0.02718353271484375, -0.016448020935058594, -0.00034558773040771484, -0.0036623477935791016, -5.7220458984375e-06, 0.0, -0.00020599365234375, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -4.57763671875e-05, -4.00543212890625e-05, -0.011003494262695312, -1.9073486328125e-06, -0.039684295654296875, -4.9591064453125e-05, -0.028438568115234375, -1.1444091796875e-05, -0.3275918960571289, -0.0038356781005859375, -6.67572021484375e-05, -3.814697265625e-06, -0.28318095207214355, -8.7738037109375e-05, -0.0009174346923828125, -0.2976036071777344, -0.7443208694458008, -5.53131103515625e-05, -1.9073486328125e-06, -0.24321198463439941, -0.39466381072998047, -2.110004425048828e-05, -0.0001735687255859375, -4.57763671875e-05, -2.47955322265625e-05, -0.0727924108505249, -3.576278118089249e-07, -1.52587890625e-05, -1.9073486328125e-06, -0.008155107498168945, -0.0017517802771180868, 0.0, -0.0903635025024414, -0.7513742446899414, -0.008392853662371635, -0.00014519691467285156, -0.009346484206616879, -0.008564761839807034, -0.3380381762981415, -3.4570541174616665e-05, -0.0013810360105708241, -3.814697265625e-06, -0.06424272060394287, -3.647804260253906e-05, -1.1920928244535389e-07, -0.000102996826171875, -9.5367431640625e-06, 0.0, -0.01064526941627264, -1.4305104514278355e-06, -9.5367431640625e-06, -3.814697265625e-06, -2.381631851196289, -0.005367755889892578, 0.0, -0.0002384185791015625, -0.000133514404296875, -1.0013530300057027e-05, -6.079655122448457e-06, -1.9669532775878906e-05, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Screwjank", "Clunker", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 28, 261, "Give", "Aura", "<EOS>", 346, 86, 321, "Aura", "Until", "<EOS>", 349, 45, 150, 21, 174, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "3", "<EOS>", 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 51, 175, "False", "<EOS>", 45, 150, 21, 174, "Battlecry", "<EOS>", 347, 45, 149, 21, 174, "Card", "Played", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Current", "Player", "<EOS>", 61, 240, "Choice", "<EOS>", "<UNK>", "Of", "<UNK>", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Current", "Player", "<EOS>", 122, 213, "2", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "WARRIOR", "hole0": "Screwjank Clunker", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"hole1": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Call"}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}, {"value": true, "_type": "NameConstant"}, {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"func": {"id": "CardPlayed", "_type": "Name"}, "keywords": [{"value": {"_type": "Template79", "hole0": "CurrentPlayer"}, "arg": "player", "_type": "keyword"}], "_type": "Call"}, {"hole6": "PlayerSelector", "hole0": "Choice", "_type": "Template39", "hole3": "Draw", "hole1": "<UNK>Of<UNK>", "hole8": [{"value": {"_type": "Template79", "hole0": "CurrentPlayer"}, "arg": "players", "_type": "keyword"}]}], "_type": "Call"}], "_type": "Template78", "hole0": "AuraUntil"}], "_type": "Template42", "hole0": "GiveAura"}}, {"hole1": 5, "_type": "Template19", "hole0": 2}], "name": "ScrewjankClunker", "_type": "ClassDef"}], "_type": "Module"}}]}
{"gold_code": "class SneedsOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sneed's Old Shredder\", 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[IsRarity(CARD_RARITY.LEGENDARY), IsMinion()])),\n            PlayerSelector()))\n", "beams": [{"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score": -0.7340300267840121, "score_history": [-0.0002422332763671875, -0.001392364501953125, -0.00029321727924980223, -0.031975679099559784, -0.26446300745010376, -1.8954096958623268e-05, -2.3795291781425476e-07, -0.00010514259338378906, -1.3708974620385561e-05, -1.33514404296875e-05, -0.0044574737548828125, -0.000186920166015625, -0.05897437408566475, -3.0517578125e-05, -0.0009567567612975836, -0.0001811981201171875, -0.07572996616363525, -0.0004100799560546875, -8.344639354618266e-06, -1.9073486328125e-06, -0.0007517337799072266, -1.9073486328125e-06, -7.355085108429193e-05, -2.503394853192731e-06, -9.918212890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011265277862548828, -5.7220458984375e-05, -0.0006809234619140625, 0.0, -2.09808349609375e-05, 0.0, -0.00016617774963378906, 0.0, -4.57763671875e-05, -0.0005474090576171875, -6.29425048828125e-05, -3.5669654607772827e-07, -3.063647454837337e-05, -1.52587890625e-05, -1.883488948806189e-05, -0.00020945072174072266, -1.7881377516459906e-06, -0.0001621246337890625, -0.0012683868408203125, -0.19625186920166016, -0.0005167732015252113, -2.7418097943154862e-06, -0.0047893524169921875, -0.003353118896484375, -0.001033782958984375, -9.918212890625e-05, 0.0, -0.0008267606608569622, -0.0003446340560913086, -2.205355303885881e-05, -2.47955322265625e-05, -0.00072479248046875, -7.62939453125e-06, -0.0052642822265625, 0.0, -0.00620269775390625, -0.0003948211669921875, -0.0009403228759765625, -0.04229164123535156, -0.0010852813720703125, -0.004559677559882402, -0.0025368756614625454, -3.814697265625e-06, -0.0020824552047997713, 0.0, -0.008066177368164062, -0.00089263916015625, -0.005517873913049698, -0.0006090449169278145, -0.0007116794586181641, -0.0010451074922457337, -1.7046884750016034e-05, -6.794917680963408e-06], "choice_history": [97, 283, "<UNK>", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 353, 92, 257, "Summon", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 84, 315, "Mana", "Cost", "<EOS>", "2", "<EOS>", 83, 314, "Is", "Minion", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": 2, "_type": "Template74", "hole0": "ManaCost"}, {"_type": "Template73_expr_seq", "hole0": "IsMinion"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "_type": "Template41", "hole0": "Summon", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Sneed Old Shredder", "_type": "Template26", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK>OldShredder", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Old(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score": -2.269206081725997, "score_history": [-0.0002422332763671875, -0.001392364501953125, -0.00029321727924980223, -0.031975679099559784, -1.860802412033081, -4.780292510986328e-05, -0.00015604496002197266, -1.3589766240329482e-05, -1.9073486328125e-05, -0.0028839111328125, -0.00016021728515625, -0.06109761446714401, -3.24249267578125e-05, -0.0006699489313177764, -0.0027256011962890625, -0.005104780197143555, -1.1444091796875e-05, -1.0132769602932967e-05, -1.9073486328125e-06, -0.0007306337356567383, -1.9073486328125e-06, -6.854446837678552e-05, -2.384185791015625e-06, -9.918212890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011456012725830078, -6.4849853515625e-05, -0.0006999969482421875, 0.0, -1.9073486328125e-05, 0.0, -0.00016617774963378906, 0.0, -4.57763671875e-05, -0.000545501708984375, -6.29425048828125e-05, -2.3795291781425476e-07, -3.05172707157908e-05, -1.52587890625e-05, -1.8954096958623268e-05, -0.00020956993103027344, -1.9073468138230965e-06, -0.000164031982421875, -0.001300811767578125, -0.202392578125, -0.0005381011287681758, -2.7418097943154862e-06, -0.00469207763671875, -0.00341033935546875, -0.001041412353515625, -9.918212890625e-05, 0.0, -0.0008186568738892674, -0.0003446340560913086, -2.1219102563918568e-05, -2.288818359375e-05, -0.000701904296875, -7.62939453125e-06, -0.005573153495788574, 0.0, -0.0064754486083984375, -0.000408172607421875, -0.000949859619140625, -0.04275989532470703, -0.0010776519775390625, -0.004526897333562374, -0.002532823011279106, -3.814697265625e-06, -0.002075302181765437, 0.0, -0.007903099060058594, -0.00091552734375, -0.005482792388647795, -0.0006127217784523964, -0.0007115602493286133, -0.0010583397233858705, -1.6808467989903875e-05, -6.5565000113565475e-06], "choice_history": [97, 283, "<UNK>", "Old", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 353, 92, 257, "Summon", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 84, 315, "Mana", "Cost", "<EOS>", "2", "<EOS>", 83, 314, "Is", "Minion", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": 2, "_type": "Template74", "hole0": "ManaCost"}, {"_type": "Template73_expr_seq", "hole0": "IsMinion"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "_type": "Template41", "hole0": "Summon", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Sneed Old Shredder", "_type": "Template26", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK>Old", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Old<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score": -3.079983193268845, "score_history": [-0.0002422332763671875, -0.001392364501953125, -0.00029321727924980223, -0.031975679099559784, -2.6104161739349365, -1.8954096958623268e-05, -2.3795291781425476e-07, -0.00010514259338378906, -1.3708974620385561e-05, -1.33514404296875e-05, -0.0044574737548828125, -0.000186920166015625, -0.05897437408566475, -3.0517578125e-05, -0.0009567567612975836, -0.0001811981201171875, -0.07572996616363525, -0.0004100799560546875, -8.344639354618266e-06, -1.9073486328125e-06, -0.0007517337799072266, -1.9073486328125e-06, -7.355085108429193e-05, -2.503394853192731e-06, -9.918212890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011265277862548828, -5.7220458984375e-05, -0.0006809234619140625, 0.0, -2.09808349609375e-05, 0.0, -0.00016617774963378906, 0.0, -4.57763671875e-05, -0.0005474090576171875, -6.29425048828125e-05, -3.5669654607772827e-07, -3.063647454837337e-05, -1.52587890625e-05, -1.883488948806189e-05, -0.00020945072174072266, -1.7881377516459906e-06, -0.0001621246337890625, -0.0012683868408203125, -0.19625186920166016, -0.0005167732015252113, -2.7418097943154862e-06, -0.0047893524169921875, -0.003353118896484375, -0.001033782958984375, -9.918212890625e-05, 0.0, -0.0008267606608569622, -0.0003446340560913086, -2.205355303885881e-05, -2.47955322265625e-05, -0.00072479248046875, -7.62939453125e-06, -0.0052642822265625, 0.0, -0.00620269775390625, -0.0003948211669921875, -0.0009403228759765625, -0.04229164123535156, -0.0010852813720703125, -0.004559677559882402, -0.0025368756614625454, -3.814697265625e-06, -0.0020824552047997713, 0.0, -0.008066177368164062, -0.00089263916015625, -0.005517873913049698, -0.0006090449169278145, -0.0007116794586181641, -0.0010451074922457337, -1.7046884750016034e-05, -6.794917680963408e-06], "choice_history": [97, 283, "<UNK>", "Old", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 353, 92, 257, "Summon", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 84, 315, "Mana", "Cost", "<EOS>", "2", "<EOS>", 83, 314, "Is", "Minion", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": 2, "_type": "Template74", "hole0": "ManaCost"}, {"_type": "Template73_expr_seq", "hole0": "IsMinion"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "_type": "Template41", "hole0": "Summon", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Sneed Old Shredder", "_type": "Template26", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK>Old<UNK>", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Old', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score": -3.2765389865542147, "score_history": [-0.0002422332763671875, -0.001392364501953125, -0.00029321727924980223, -0.031975679099559784, -0.26446300745010376, -1.8954096958623268e-05, -2.3795291781425476e-07, -0.00010514259338378906, -1.3708974620385561e-05, -1.33514404296875e-05, -0.0044574737548828125, -0.000186920166015625, -0.05897437408566475, -3.0517578125e-05, -0.0009567567612975836, -0.0001811981201171875, -2.618238925933838, -0.0004100799560546875, -8.344639354618266e-06, -1.9073486328125e-06, -0.0007517337799072266, -1.9073486328125e-06, -7.355085108429193e-05, -2.503394853192731e-06, -9.918212890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011265277862548828, -5.7220458984375e-05, -0.0006809234619140625, 0.0, -2.09808349609375e-05, 0.0, -0.00016617774963378906, 0.0, -4.57763671875e-05, -0.0005474090576171875, -6.29425048828125e-05, -3.5669654607772827e-07, -3.063647454837337e-05, -1.52587890625e-05, -1.883488948806189e-05, -0.00020945072174072266, -1.7881377516459906e-06, -0.0001621246337890625, -0.0012683868408203125, -0.19625186920166016, -0.0005167732015252113, -2.7418097943154862e-06, -0.0047893524169921875, -0.003353118896484375, -0.001033782958984375, -9.918212890625e-05, 0.0, -0.0008267606608569622, -0.0003446340560913086, -2.205355303885881e-05, -2.47955322265625e-05, -0.00072479248046875, -7.62939453125e-06, -0.0052642822265625, 0.0, -0.00620269775390625, -0.0003948211669921875, -0.0009403228759765625, -0.04229164123535156, -0.0010852813720703125, -0.004559677559882402, -0.0025368756614625454, -3.814697265625e-06, -0.0020824552047997713, 0.0, -0.008066177368164062, -0.00089263916015625, -0.005517873913049698, -0.0006090449169278145, -0.0007116794586181641, -0.0010451074922457337, -1.7046884750016034e-05, -6.794917680963408e-06], "choice_history": [97, 283, "<UNK>", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Sneed", " ", "Old", " ", "Old", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 353, 92, 257, "Summon", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 84, 315, "Mana", "Cost", "<EOS>", "2", "<EOS>", 83, 314, "Is", "Minion", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": 2, "_type": "Template74", "hole0": "ManaCost"}, {"_type": "Template73_expr_seq", "hole0": "IsMinion"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "_type": "Template41", "hole0": "Summon", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Sneed Old Old", "_type": "Template26", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK>OldShredder", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Old Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score": -3.5495225487554762, "score_history": [-0.0002422332763671875, -0.001392364501953125, -0.00029321727924980223, -0.031975679099559784, -0.26446300745010376, -1.8954096958623268e-05, -2.3795291781425476e-07, -0.00010514259338378906, -1.3708974620385561e-05, -1.33514404296875e-05, -0.0044574737548828125, -0.000186920166015625, -2.874466896057129, -3.0517578125e-05, -0.0009567567612975836, -0.0001811981201171875, -0.07572996616363525, -0.0004100799560546875, -8.344639354618266e-06, -1.9073486328125e-06, -0.0007517337799072266, -1.9073486328125e-06, -7.355085108429193e-05, -2.503394853192731e-06, -9.918212890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011265277862548828, -5.7220458984375e-05, -0.0006809234619140625, 0.0, -2.09808349609375e-05, 0.0, -0.00016617774963378906, 0.0, -4.57763671875e-05, -0.0005474090576171875, -6.29425048828125e-05, -3.5669654607772827e-07, -3.063647454837337e-05, -1.52587890625e-05, -1.883488948806189e-05, -0.00020945072174072266, -1.7881377516459906e-06, -0.0001621246337890625, -0.0012683868408203125, -0.19625186920166016, -0.0005167732015252113, -2.7418097943154862e-06, -0.0047893524169921875, -0.003353118896484375, -0.001033782958984375, -9.918212890625e-05, 0.0, -0.0008267606608569622, -0.0003446340560913086, -2.205355303885881e-05, -2.47955322265625e-05, -0.00072479248046875, -7.62939453125e-06, -0.0052642822265625, 0.0, -0.00620269775390625, -0.0003948211669921875, -0.0009403228759765625, -0.04229164123535156, -0.0010852813720703125, -0.004559677559882402, -0.0025368756614625454, -3.814697265625e-06, -0.0020824552047997713, 0.0, -0.008066177368164062, -0.00089263916015625, -0.005517873913049698, -0.0006090449169278145, -0.0007116794586181641, -0.0010451074922457337, -1.7046884750016034e-05, -6.794917680963408e-06], "choice_history": [97, 283, "<UNK>", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Old", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 353, 92, 257, "Summon", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 84, 315, "Mana", "Cost", "<EOS>", "2", "<EOS>", 83, 314, "Is", "Minion", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": 2, "_type": "Template74", "hole0": "ManaCost"}, {"_type": "Template73_expr_seq", "hole0": "IsMinion"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "_type": "Template41", "hole0": "Summon", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Old Old Shredder", "_type": "Template26", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK>OldShredder", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK><UNK>Shredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score": -4.238099660565922, "score_history": [-0.0002422332763671875, -0.001392364501953125, -0.00029321727924980223, -3.5360453128814697, -0.26446300745010376, -1.8954096958623268e-05, -2.3795291781425476e-07, -0.00010514259338378906, -1.3708974620385561e-05, -1.33514404296875e-05, -0.0044574737548828125, -0.000186920166015625, -0.05897437408566475, -3.0517578125e-05, -0.0009567567612975836, -0.0001811981201171875, -0.07572996616363525, -0.0004100799560546875, -8.344639354618266e-06, -1.9073486328125e-06, -0.0007517337799072266, -1.9073486328125e-06, -7.355085108429193e-05, -2.503394853192731e-06, -9.918212890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011265277862548828, -5.7220458984375e-05, -0.0006809234619140625, 0.0, -2.09808349609375e-05, 0.0, -0.00016617774963378906, 0.0, -4.57763671875e-05, -0.0005474090576171875, -6.29425048828125e-05, -3.5669654607772827e-07, -3.063647454837337e-05, -1.52587890625e-05, -1.883488948806189e-05, -0.00020945072174072266, -1.7881377516459906e-06, -0.0001621246337890625, -0.0012683868408203125, -0.19625186920166016, -0.0005167732015252113, -2.7418097943154862e-06, -0.0047893524169921875, -0.003353118896484375, -0.001033782958984375, -9.918212890625e-05, 0.0, -0.0008267606608569622, -0.0003446340560913086, -2.205355303885881e-05, -2.47955322265625e-05, -0.00072479248046875, -7.62939453125e-06, -0.0052642822265625, 0.0, -0.00620269775390625, -0.0003948211669921875, -0.0009403228759765625, -0.04229164123535156, -0.0010852813720703125, -0.004559677559882402, -0.0025368756614625454, -3.814697265625e-06, -0.0020824552047997713, 0.0, -0.008066177368164062, -0.00089263916015625, -0.005517873913049698, -0.0006090449169278145, -0.0007116794586181641, -0.0010451074922457337, -1.7046884750016034e-05, -6.794917680963408e-06], "choice_history": [97, 283, "<UNK>", "<UNK>", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 353, 92, 257, "Summon", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 84, 315, "Mana", "Cost", "<EOS>", "2", "<EOS>", 83, 314, "Is", "Minion", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": 2, "_type": "Template74", "hole0": "ManaCost"}, {"_type": "Template73_expr_seq", "hole0": "IsMinion"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "_type": "Template41", "hole0": "Summon", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Sneed Old Shredder", "_type": "Template26", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK><UNK>Shredder", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(\n            legendaryShredder()), PlayerSelector(EnemyPlayer())))\n", "score": -4.328091706872158, "score_history": [-0.0002422332763671875, -0.001392364501953125, -0.00029321727924980223, -0.031975679099559784, -0.26446300745010376, -1.8954096958623268e-05, -2.3795291781425476e-07, -0.00010514259338378906, -1.3708974620385561e-05, -1.33514404296875e-05, -0.0044574737548828125, -0.000186920166015625, -0.05897437408566475, -3.0517578125e-05, -0.0009567567612975836, -0.0001811981201171875, -0.07572996616363525, -0.0004100799560546875, -8.344639354618266e-06, -1.9073486328125e-06, -0.0007517337799072266, -1.9073486328125e-06, -7.355085108429193e-05, -2.503394853192731e-06, -9.918212890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011265277862548828, -5.7220458984375e-05, -0.0006809234619140625, 0.0, -2.09808349609375e-05, 0.0, -0.00016617774963378906, 0.0, -4.57763671875e-05, -0.0005474090576171875, -6.29425048828125e-05, -3.5669654607772827e-07, -3.063647454837337e-05, -1.52587890625e-05, -1.883488948806189e-05, -0.00020945072174072266, -1.7881377516459906e-06, -0.0001621246337890625, -0.0012683868408203125, -2.172544479370117, -0.3458705544471741, -0.00010645056318026036, -0.001468658447265625, -0.10644245147705078, -5.7220458984375e-06, -0.8194477558135986, -0.41732966899871826, -0.0020408225245773792, -0.0009774856735020876, -5.960462772236497e-07, -9.298297300119884e-06, -0.0005245208740234375, -0.012067794799804688, -1.1444091796875e-05, -0.005110340658575296, -0.000319580954965204, -9.775161743164062e-06], "choice_history": [97, 283, "<UNK>", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 353, 92, 259, "Summon", "<EOS>", 346, 88, 325, "legendary", "Shredder", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "legendaryShredder"}], "hole3": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "_type": "Template41", "hole0": "Summon", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Sneed Old Shredder", "_type": "Template26", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK>OldShredder", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(Summon()),\n            PlayerSelector(EnemyPlayer())))\n", "score": -4.652104498934023, "score_history": [-0.0002422332763671875, -0.001392364501953125, -0.00029321727924980223, -0.031975679099559784, -0.26446300745010376, -1.8954096958623268e-05, -2.3795291781425476e-07, -0.00010514259338378906, -1.3708974620385561e-05, -1.33514404296875e-05, -0.0044574737548828125, -0.000186920166015625, -0.05897437408566475, -3.0517578125e-05, -0.0009567567612975836, -0.0001811981201171875, -0.07572996616363525, -0.0004100799560546875, -8.344639354618266e-06, -1.9073486328125e-06, -0.0007517337799072266, -1.9073486328125e-06, -7.355085108429193e-05, -2.503394853192731e-06, -9.918212890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011265277862548828, -5.7220458984375e-05, -0.0006809234619140625, 0.0, -2.09808349609375e-05, 0.0, -0.00016617774963378906, 0.0, -4.57763671875e-05, -0.0005474090576171875, -6.29425048828125e-05, -3.5669654607772827e-07, -3.063647454837337e-05, -1.52587890625e-05, -1.883488948806189e-05, -0.00020945072174072266, -1.7881377516459906e-06, -0.0001621246337890625, -0.0012683868408203125, -2.172544479370117, -0.3458705544471741, -0.00010645056318026036, -0.001468658447265625, -0.10644245147705078, -5.7220458984375e-06, -1.138416051864624, -0.4322563409805298, -0.000703922938555479, -9.059865078597795e-06, -6.794917680963408e-06, -0.00046539306640625, -0.0033931732177734375, -9.5367431640625e-06, -0.0060738250613212585, -0.0005199094885028899, -7.867813110351562e-06], "choice_history": [97, 283, "<UNK>", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 353, 92, 259, "Summon", "<EOS>", 346, 88, 325, "Summon", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "Summon"}], "hole3": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "_type": "Template41", "hole0": "Summon", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Sneed Old Shredder", "_type": "Template26", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK>OldShredder", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Old(MinionCard):\n\n    def __init__(self):\n        super().__init__('Old Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score": -5.046818775333804, "score_history": [-0.0002422332763671875, -0.001392364501953125, -0.00029321727924980223, -0.031975679099559784, -1.860802412033081, -4.780292510986328e-05, -0.00015604496002197266, -1.3589766240329482e-05, -1.9073486328125e-05, -0.0028839111328125, -0.00016021728515625, -2.838710308074951, -3.24249267578125e-05, -0.0006699489313177764, -0.0027256011962890625, -0.005104780197143555, -1.1444091796875e-05, -1.0132769602932967e-05, -1.9073486328125e-06, -0.0007306337356567383, -1.9073486328125e-06, -6.854446837678552e-05, -2.384185791015625e-06, -9.918212890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011456012725830078, -6.4849853515625e-05, -0.0006999969482421875, 0.0, -1.9073486328125e-05, 0.0, -0.00016617774963378906, 0.0, -4.57763671875e-05, -0.000545501708984375, -6.29425048828125e-05, -2.3795291781425476e-07, -3.05172707157908e-05, -1.52587890625e-05, -1.8954096958623268e-05, -0.00020956993103027344, -1.9073468138230965e-06, -0.000164031982421875, -0.001300811767578125, -0.202392578125, -0.0005381011287681758, -2.7418097943154862e-06, -0.00469207763671875, -0.00341033935546875, -0.001041412353515625, -9.918212890625e-05, 0.0, -0.0008186568738892674, -0.0003446340560913086, -2.1219102563918568e-05, -2.288818359375e-05, -0.000701904296875, -7.62939453125e-06, -0.005573153495788574, 0.0, -0.0064754486083984375, -0.000408172607421875, -0.000949859619140625, -0.04275989532470703, -0.0010776519775390625, -0.004526897333562374, -0.002532823011279106, -3.814697265625e-06, -0.002075302181765437, 0.0, -0.007903099060058594, -0.00091552734375, -0.005482792388647795, -0.0006127217784523964, -0.0007115602493286133, -0.0010583397233858705, -1.6808467989903875e-05, -6.5565000113565475e-06], "choice_history": [97, 283, "<UNK>", "Old", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Old", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 353, 92, 257, "Summon", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 84, 315, "Mana", "Cost", "<EOS>", "2", "<EOS>", 83, 314, "Is", "Minion", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": 2, "_type": "Template74", "hole0": "ManaCost"}, {"_type": "Template73_expr_seq", "hole0": "IsMinion"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "_type": "Template41", "hole0": "Summon", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Old Old Shredder", "_type": "Template26", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK>Old", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(<UNK>(), MinionSelector\n            (players=EnemyPlayer(), picker=RandomPicker())))\n", "score": -5.050359995250574, "score_history": [-0.0002422332763671875, -0.001392364501953125, -0.00029321727924980223, -0.031975679099559784, -0.26446300745010376, -1.8954096958623268e-05, -2.3795291781425476e-07, -0.00010514259338378906, -1.3708974620385561e-05, -1.33514404296875e-05, -0.0044574737548828125, -0.000186920166015625, -0.05897437408566475, -3.0517578125e-05, -0.0009567567612975836, -0.0001811981201171875, -0.07572996616363525, -0.0004100799560546875, -8.344639354618266e-06, -1.9073486328125e-06, -0.0007517337799072266, -1.9073486328125e-06, -7.355085108429193e-05, -2.503394853192731e-06, -9.918212890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011265277862548828, -5.7220458984375e-05, -0.0006809234619140625, 0.0, -2.09808349609375e-05, 0.0, -0.00016617774963378906, 0.0, -4.57763671875e-05, -0.0005474090576171875, -6.29425048828125e-05, -3.5669654607772827e-07, -3.063647454837337e-05, -1.52587890625e-05, -1.883488948806189e-05, -0.00020945072174072266, -1.7881377516459906e-06, -0.0001621246337890625, -0.0012683868408203125, -3.820239543914795, -0.7229258418083191, -0.002573121804744005, -0.0004863154608756304, -4.589557647705078e-05, 0.0, -0.031065940856933594, -0.0013742446899414062, -1.1444091796875e-05, -0.0010228157043457031, -1.9073486328125e-06, -0.000278472900390625, -1.9073486328125e-06, -0.005488157272338867, -7.474421727238223e-05, -1.9073486328125e-06, -0.0040645599365234375, -2.09808349609375e-05, -0.014923451468348503, -7.629376341355965e-05, -0.0011348724365234375, -7.62939453125e-06, -0.0006766319274902344, -5.8293262554798275e-05, -7.152555099310121e-07], "choice_history": [97, 283, "<UNK>", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 353, 92, 255, "<UNK>", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": [{"hole2": "MinionSelector", "_type": "Template41", "hole0": "<UNK>", "hole4": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "picker", "_type": "keyword"}]}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Sneed Old Shredder", "_type": "Template26", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK>OldShredder", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaShredder(Attribute('attack', SelfSelector())),\n            IsMinion()])), PlayerSelector()))\n", "score": -5.170254211256633, "score_history": [-0.0002422332763671875, -0.001392364501953125, -0.00029321727924980223, -0.031975679099559784, -0.26446300745010376, -1.8954096958623268e-05, -2.3795291781425476e-07, -0.00010514259338378906, -1.3708974620385561e-05, -1.33514404296875e-05, -0.0044574737548828125, -0.000186920166015625, -0.05897437408566475, -3.0517578125e-05, -0.0009567567612975836, -0.0001811981201171875, -0.07572996616363525, -0.0004100799560546875, -8.344639354618266e-06, -1.9073486328125e-06, -0.0007517337799072266, -1.9073486328125e-06, -7.355085108429193e-05, -2.503394853192731e-06, -9.918212890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011265277862548828, -5.7220458984375e-05, -0.0006809234619140625, 0.0, -2.09808349609375e-05, 0.0, -0.00016617774963378906, 0.0, -4.57763671875e-05, -0.0005474090576171875, -6.29425048828125e-05, -3.5669654607772827e-07, -3.063647454837337e-05, -1.52587890625e-05, -1.883488948806189e-05, -0.00020945072174072266, -1.7881377516459906e-06, -0.0001621246337890625, -0.0012683868408203125, -0.19625186920166016, -0.0005167732015252113, -2.7418097943154862e-06, -0.0047893524169921875, -0.003353118896484375, -0.001033782958984375, -9.918212890625e-05, 0.0, -0.0008267606608569622, -0.0003446340560913086, -2.205355303885881e-05, -2.47955322265625e-05, -0.00072479248046875, -7.62939453125e-06, -0.0052642822265625, 0.0, -0.00620269775390625, -0.0003948211669921875, -0.0009403228759765625, -3.2225770950317383, -0.004962921142578125, -0.1289607137441635, -0.6743195056915283, -0.0025435546413064003, -0.00028228759765625, 0.0, -0.02784533053636551, -3.1948089599609375e-05, -7.62939453125e-06, -0.0019931793212890625, -3.24249267578125e-05, -0.2943457365036011, 0.0, -0.12271499633789062, -2.86102294921875e-05, -0.0028862953186035156, -0.00036143590114079416, 0.0, -0.0032606124877929688, -0.0011224746704101562, -0.0062905969098210335, -0.007534325122833252, -0.00024771690368652344, -0.003289459738880396, -9.417517503607087e-06, -2.0265558760002023e-06], "choice_history": [97, 283, "<UNK>", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 353, 92, 257, "Summon", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 77, 302, "Mana", "Shredder", "<EOS>", 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 83, 314, "Is", "Minion", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": {"id": "Attribute", "_type": "Name"}, "_type": "Template64", "hole0": "ManaShredder", "hole2": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "SelfSelector"}]}, {"_type": "Template73_expr_seq", "hole0": "IsMinion"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "_type": "Template41", "hole0": "Summon", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Sneed Old Shredder", "_type": "Template26", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK>OldShredder", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(legendary()),\n            PlayerSelector(EnemyPlayer())))\n", "score": -5.2029481244144336, "score_history": [-0.0002422332763671875, -0.001392364501953125, -0.00029321727924980223, -0.031975679099559784, -0.26446300745010376, -1.8954096958623268e-05, -2.3795291781425476e-07, -0.00010514259338378906, -1.3708974620385561e-05, -1.33514404296875e-05, -0.0044574737548828125, -0.000186920166015625, -0.05897437408566475, -3.0517578125e-05, -0.0009567567612975836, -0.0001811981201171875, -0.07572996616363525, -0.0004100799560546875, -8.344639354618266e-06, -1.9073486328125e-06, -0.0007517337799072266, -1.9073486328125e-06, -7.355085108429193e-05, -2.503394853192731e-06, -9.918212890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011265277862548828, -5.7220458984375e-05, -0.0006809234619140625, 0.0, -2.09808349609375e-05, 0.0, -0.00016617774963378906, 0.0, -4.57763671875e-05, -0.0005474090576171875, -6.29425048828125e-05, -3.5669654607772827e-07, -3.063647454837337e-05, -1.52587890625e-05, -1.883488948806189e-05, -0.00020945072174072266, -1.7881377516459906e-06, -0.0001621246337890625, -0.0012683868408203125, -2.172544479370117, -0.3458705544471741, -0.00010645056318026036, -0.001468658447265625, -0.10644245147705078, -5.7220458984375e-06, -0.8194477558135986, -1.2999821901321411, -0.0008374042809009552, -1.311301275563892e-06, -9.655935173213948e-06, -0.000659942626953125, -0.0064220428466796875, -9.5367431640625e-06, -0.004917395766824484, -0.0004065834800712764, -1.1682510375976562e-05], "choice_history": [97, 283, "<UNK>", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 353, 92, 259, "Summon", "<EOS>", 346, 88, 325, "legendary", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "legendary"}], "hole3": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "_type": "Template41", "hole0": "Summon", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Sneed Old Shredder", "_type": "Template26", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK>OldShredder", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaOld(Attribute('attack', SelfSelector())),\n            IsMinion()])), PlayerSelector()))\n", "score": -5.253468017408977, "score_history": [-0.0002422332763671875, -0.001392364501953125, -0.00029321727924980223, -0.031975679099559784, -0.26446300745010376, -1.8954096958623268e-05, -2.3795291781425476e-07, -0.00010514259338378906, -1.3708974620385561e-05, -1.33514404296875e-05, -0.0044574737548828125, -0.000186920166015625, -0.05897437408566475, -3.0517578125e-05, -0.0009567567612975836, -0.0001811981201171875, -0.07572996616363525, -0.0004100799560546875, -8.344639354618266e-06, -1.9073486328125e-06, -0.0007517337799072266, -1.9073486328125e-06, -7.355085108429193e-05, -2.503394853192731e-06, -9.918212890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011265277862548828, -5.7220458984375e-05, -0.0006809234619140625, 0.0, -2.09808349609375e-05, 0.0, -0.00016617774963378906, 0.0, -4.57763671875e-05, -0.0005474090576171875, -6.29425048828125e-05, -3.5669654607772827e-07, -3.063647454837337e-05, -1.52587890625e-05, -1.883488948806189e-05, -0.00020945072174072266, -1.7881377516459906e-06, -0.0001621246337890625, -0.0012683868408203125, -0.19625186920166016, -0.0005167732015252113, -2.7418097943154862e-06, -0.0047893524169921875, -0.003353118896484375, -0.001033782958984375, -9.918212890625e-05, 0.0, -0.0008267606608569622, -0.0003446340560913086, -2.205355303885881e-05, -2.47955322265625e-05, -0.00072479248046875, -7.62939453125e-06, -0.0052642822265625, 0.0, -0.00620269775390625, -0.0003948211669921875, -0.0009403228759765625, -3.2225770950317383, -0.004962921142578125, -0.1289607137441635, -0.7575333118438721, -0.0025435546413064003, -0.00028228759765625, 0.0, -0.02784533053636551, -3.1948089599609375e-05, -7.62939453125e-06, -0.0019931793212890625, -3.24249267578125e-05, -0.2943457365036011, 0.0, -0.12271499633789062, -2.86102294921875e-05, -0.0028862953186035156, -0.00036143590114079416, 0.0, -0.0032606124877929688, -0.0011224746704101562, -0.0062905969098210335, -0.007534325122833252, -0.00024771690368652344, -0.003289459738880396, -9.417517503607087e-06, -2.0265558760002023e-06], "choice_history": [97, 283, "<UNK>", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 353, 92, 257, "Summon", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 77, 302, "Mana", "Old", "<EOS>", 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 83, 314, "Is", "Minion", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": {"id": "Attribute", "_type": "Name"}, "_type": "Template64", "hole0": "ManaOld", "hole2": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "SelfSelector"}]}, {"_type": "Template73_expr_seq", "hole0": "IsMinion"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "_type": "Template41", "hole0": "Summon", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Sneed Old Shredder", "_type": "Template26", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK>OldShredder", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(SummonShredder()\n            ), PlayerSelector(EnemyPlayer())))\n", "score": -5.361070962096846, "score_history": [-0.0002422332763671875, -0.001392364501953125, -0.00029321727924980223, -0.031975679099559784, -0.26446300745010376, -1.8954096958623268e-05, -2.3795291781425476e-07, -0.00010514259338378906, -1.3708974620385561e-05, -1.33514404296875e-05, -0.0044574737548828125, -0.000186920166015625, -0.05897437408566475, -3.0517578125e-05, -0.0009567567612975836, -0.0001811981201171875, -0.07572996616363525, -0.0004100799560546875, -8.344639354618266e-06, -1.9073486328125e-06, -0.0007517337799072266, -1.9073486328125e-06, -7.355085108429193e-05, -2.503394853192731e-06, -9.918212890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011265277862548828, -5.7220458984375e-05, -0.0006809234619140625, 0.0, -2.09808349609375e-05, 0.0, -0.00016617774963378906, 0.0, -4.57763671875e-05, -0.0005474090576171875, -6.29425048828125e-05, -3.5669654607772827e-07, -3.063647454837337e-05, -1.52587890625e-05, -1.883488948806189e-05, -0.00020945072174072266, -1.7881377516459906e-06, -0.0001621246337890625, -0.0012683868408203125, -2.172544479370117, -0.3458705544471741, -0.00010645056318026036, -0.001468658447265625, -0.10644245147705078, -5.7220458984375e-06, -1.138416051864624, -1.1318023204803467, -0.0029721204191446304, -0.002602230990305543, -7.152555099310121e-07, -8.940672159951646e-06, -0.0003337860107421875, -0.0056247711181640625, -9.5367431640625e-06, -0.008651159703731537, -0.00039693069993518293, -9.775161743164062e-06], "choice_history": [97, 283, "<UNK>", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 353, 92, 259, "Summon", "<EOS>", 346, 88, 325, "Summon", "Shredder", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "SummonShredder"}], "hole3": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "_type": "Template41", "hole0": "Summon", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Sneed Old Shredder", "_type": "Template26", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK>OldShredder", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector(BothPlayer())))\n", "score": -5.726378432389879, "score_history": [-0.0002422332763671875, -0.001392364501953125, -0.00029321727924980223, -0.031975679099559784, -0.26446300745010376, -1.8954096958623268e-05, -2.3795291781425476e-07, -0.00010514259338378906, -1.3708974620385561e-05, -1.33514404296875e-05, -0.0044574737548828125, -0.000186920166015625, -0.05897437408566475, -3.0517578125e-05, -0.0009567567612975836, -0.0001811981201171875, -0.07572996616363525, -0.0004100799560546875, -8.344639354618266e-06, -1.9073486328125e-06, -0.0007517337799072266, -1.9073486328125e-06, -7.355085108429193e-05, -2.503394853192731e-06, -9.918212890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011265277862548828, -5.7220458984375e-05, -0.0006809234619140625, 0.0, -2.09808349609375e-05, 0.0, -0.00016617774963378906, 0.0, -4.57763671875e-05, -0.0005474090576171875, -6.29425048828125e-05, -3.5669654607772827e-07, -3.063647454837337e-05, -1.52587890625e-05, -1.883488948806189e-05, -0.00020945072174072266, -1.7881377516459906e-06, -0.0001621246337890625, -0.0012683868408203125, -2.172544479370117, -1.3091075420379639, -0.016185706481337547, -0.0009000301361083984, -0.006005287170410156, -0.1842041015625, -0.000244140625, -0.000820741115603596, -0.0003908872604370117, -2.300739288330078e-05, -0.0005398988723754883, 0.0, -0.0006771087646484375, 0.0, -3.814697265625e-05, 0.0, -0.002111196517944336, -0.00013399124145507812, -0.08994865417480469, -3.62396240234375e-05, -0.010126113891601562, -1.9073486328125e-06, -0.0017852783203125, 0.0, -0.4707299470901489, -2.5272369384765625e-05, -0.0007419586181640625, -2.0265558760002023e-06, -8.344646857949556e-07, -0.0003414154052734375, -0.11882972717285156, -3.814697265625e-06, -0.8957121968269348, -0.0003500759194139391, -1.2397762475302443e-05], "choice_history": [97, 283, "<UNK>", "Old", "Shredder", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "5", "<EOS>", "7", "<EOS>", 353, 92, 259, "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "spare_part_list", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Both", "Player", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "hole3": [{"hole1": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "spare_part_list", "_type": "Name"}}], "hole3": [{"_type": "Template79", "hole0": "BothPlayer"}], "_type": "Template41", "hole0": "AddCard", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole2": "LEGENDARY", "hole0": "Sneed Old Shredder", "_type": "Template26", "hole3": "minion_type", "hole1": 8, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "<UNK>OldShredder", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector()))\n", "beams": [{"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=<UNK>)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score": -3.2689357918450668, "score_history": [-0.0013904571533203125, -1.9073486328125e-05, -0.0075356182642281055, -2.0265579223632812e-06, -1.1641532182693481e-06, -2.8967857360839844e-05, -2.0265579223632812e-06, -0.09905338287353516, -0.0014896392822265625, -0.7841963768005371, -0.0004683732404373586, -1.0609614946588408e-05, -3.0517578125e-05, 0.0, -0.002987504005432129, -8.20159912109375e-05, -0.35466238856315613, -0.023049116134643555, -0.00020466477144509554, -1.3063688278198242, -0.3455495834350586, -0.000774383544921875, -0.017423707991838455, -0.00021755695343017578, -0.00012791156768798828, -0.000102996826171875, 0.0, -0.0003070831298828125, 0.0, -9.34600830078125e-05, 0.0, -0.0002928971953224391, -2.09808349609375e-05, -0.14337635040283203, -0.000110626220703125, -0.0016832351684570312, -1.1444091796875e-05, -0.000492095947265625, 0.0, -0.17013069987297058, -0.00018952481332235038, -0.00014853061293251812, -1.9073486328125e-06, -1.1920928244535389e-07, -0.0001268386113224551, -1.9073486328125e-06, -0.00015270708536263555, 0.0, -0.003917694091796875, -0.0015411376953125, -2.288818359375e-05, 0.0, -5.960462772236497e-07, -0.0005340576171875, -1.1920928244535389e-07], "choice_history": [97, 283, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "<UNK>", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "PlayerSelector", "hole2": "LEGENDARY", "hole0": "Toshley", "_type": "Template15", "hole3": "AddCard", "hole1": 6, "hole4": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "<UNK>", "_type": "Name"}}]}], "hole0": "Toshley", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(PlayerSelector(EnemyPlayer()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score": -3.433455179309661, "score_history": [-0.0013904571533203125, -1.9073486328125e-05, -0.0075356182642281055, -2.0265579223632812e-06, -1.1641532182693481e-06, -2.8967857360839844e-05, -2.0265579223632812e-06, -0.09905338287353516, -0.0014896392822265625, -0.7841963768005371, -0.0004683732404373586, -1.0609614946588408e-05, -3.0517578125e-05, 0.0, -0.002987504005432129, -8.20159912109375e-05, -2.307338237762451, -0.0005142577574588358, -1.1920928244535389e-07, -0.037654876708984375, -0.0017652511596679688, -1.71661376953125e-05, -0.18163861334323883, -0.00044882172369398177, -3.814697265625e-06, -0.0038407386746257544, -5.960462772236497e-07, -2.3841855067985307e-07, -3.7074067222420126e-05, -1.9073486328125e-06, -0.00010097025369759649, 0.0, -0.0015239715576171875, -0.000659942626953125, -2.6702880859375e-05, 0.0, -3.576278118089249e-07, -0.000583648681640625, -1.1920928244535389e-07], "choice_history": [97, 283, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "PlayerSelector", "hole2": "LEGENDARY", "hole0": "Toshley", "_type": "Template15", "hole3": "PlayerSelector", "hole1": 6, "hole4": [{"_type": "Template79", "hole0": "EnemyPlayer"}]}], "hole0": "Toshley", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Kill(), MinionSelector(Has<UNK>(\n            'taunt'), EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score": -4.239218604052326, "score_history": [-0.0013904571533203125, -1.9073486328125e-05, -0.0075356182642281055, -2.0265579223632812e-06, -1.1641532182693481e-06, -2.8967857360839844e-05, -2.0265579223632812e-06, -0.09905338287353516, -0.0014896392822265625, -3.100104808807373, -0.0002444967976771295, -5.614757174043916e-05, -0.0008325576782226562, -7.62939453125e-06, -0.008692145347595215, -3.0517578125e-05, -0.010517075657844543, -0.0010762665187940001, -0.16194802522659302, -0.0002981424331665039, 0.0, -0.022912025451660156, -0.0007724761962890625, -0.000446319580078125, -0.0022792816162109375, -3.814697265625e-06, -0.30351364612579346, -0.005414485465735197, -4.720636934507638e-05, -3.814697265625e-05, -0.004974365234375, -0.0003509521484375, -0.3193652033805847, -1.71661376953125e-05, -5.14984130859375e-05, -7.62939453125e-06, -0.019456148147583008, -9.775161743164062e-06, -1.9073486328125e-06, -0.00211334228515625, -7.82012939453125e-05, -0.1502162218093872, -0.0002633333206176758, 0.0, -2.1696079784305766e-05, -1.9073486328125e-06, -0.00011861324310302734, 0.0, -0.0067996978759765625, -0.005817413330078125, -1.33514404296875e-05, 0.0, -4.768370445162873e-07, -0.0007821321487426758, 0.0], "choice_history": [97, 283, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 204, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 348, 45, 150, 21, 174, "Has", "<UNK>", "<EOS>", 346, 53, 183, "taunt", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 88, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "MinionSelector", "hole2": "LEGENDARY", "hole0": "Toshley", "_type": "Template15", "hole3": "Kill", "hole1": 6, "hole6": [{"func": {"id": "Has<UNK>", "_type": "Name"}, "args": [{"s": "taunt", "_type": "Str"}], "_type": "Call"}, {"_type": "Template79", "hole0": "EnemyPlayer"}, {"_type": "Template79", "hole0": "UserPicker"}]}], "hole0": "Toshley", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Kill(card()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score": -4.33331187664475, "score_history": [-0.0013904571533203125, -1.9073486328125e-05, -0.0075356182642281055, -2.0265579223632812e-06, -1.1641532182693481e-06, -2.8967857360839844e-05, -2.0265579223632812e-06, -0.09905338287353516, -0.0014896392822265625, -0.7841963768005371, -0.0004683732404373586, -1.0609614946588408e-05, -3.0517578125e-05, 0.0, -0.002987504005432129, -8.20159912109375e-05, -2.9659838676452637, -0.06642699241638184, -8.20159912109375e-05, -0.0051746368408203125, -1.33514404296875e-05, -0.37958967685699463, -0.01494581252336502, -0.0004138946533203125, 0.0, -4.768370445162873e-07, -1.955030529643409e-05, -7.62939453125e-06, -0.00013220308755990118, 0.0, -0.001918792724609375, -0.000701904296875, -3.0517578125e-05, 0.0, -4.768370445162873e-07, -0.00057220458984375, -1.1920928244535389e-07], "choice_history": [97, 283, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Kill", "<EOS>", 346, 88, 325, "card", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "PlayerSelector", "hole2": "LEGENDARY", "hole0": "Toshley", "_type": "Template15", "hole3": "Kill", "hole1": 6, "hole4": [{"_type": "Template79", "hole0": "card"}]}], "hole0": "Toshley", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CharacterSelector(\n            players=BothPlayer(), source_list=<UNK>), 5), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score": -4.640003273134859, "score_history": [-0.0013904571533203125, -1.9073486328125e-05, -0.0075356182642281055, -2.0265579223632812e-06, -1.1641532182693481e-06, -2.8967857360839844e-05, -2.0265579223632812e-06, -0.09905338287353516, -0.0014896392822265625, -0.7841963768005371, -0.0004683732404373586, -1.0609614946588408e-05, -3.0517578125e-05, 0.0, -0.002987504005432129, -8.20159912109375e-05, -0.35466238856315613, -0.023049116134643555, -0.00020466477144509554, -0.32676029205322266, -0.4983682632446289, -0.0025644302368164062, -0.10206234455108643, -0.2268010377883911, 0.0, -0.26615023612976074, -9.5367431640625e-06, -0.00016021728515625, 0.0, -0.06771087646484375, -2.3841617803554982e-05, 0.0, -1.1235140562057495, -4.768371127283899e-06, -0.029851913452148438, 0.0, -0.28209662437438965, -0.000459565402707085, -0.000278472900390625, -9.5367431640625e-06, -0.4336492717266083, -2.86102294921875e-05, -0.00040078163146972656, -1.1920928244535389e-07, 0.0, -3.1828865758143365e-05, -1.9073486328125e-06, -8.916854130802676e-05, 0.0, -0.0005474090576171875, -0.0025615692138671875, -2.47955322265625e-05, 0.0, -1.1920928244535389e-07, -0.0006276369094848633, -1.1920928244535389e-07], "choice_history": [97, 283, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Add", "Card", "<EOS>", 347, 71, 293, "Character", "Selector", "<EOS>", "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", "source_list", "<EOS>", 21, 174, "<UNK>", "<EOS>", 52, 179, "5", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "PlayerSelector", "hole2": "LEGENDARY", "hole0": "Toshley", "_type": "Template15", "hole3": "AddCard", "hole1": 6, "hole4": [{"hole2": {"_type": "Template79", "hole0": "BothPlayer"}, "hole0": "CharacterSelector", "_type": "Template56", "hole3": "source_list", "hole1": "players", "hole4": {"id": "<UNK>", "_type": "Name"}}, {"n": 5, "_type": "Num"}]}], "hole0": "Toshley", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(PlayerSelector(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score": -4.652680318707063, "score_history": [-0.0013904571533203125, -1.9073486328125e-05, -0.0075356182642281055, -2.0265579223632812e-06, -1.1641532182693481e-06, -2.8967857360839844e-05, -2.0265579223632812e-06, -0.09905338287353516, -0.0014896392822265625, -3.6022958755493164, -0.00022408878430724144, -9.893900278257206e-05, -3.4689903259277344e-05, 0.0, -0.005262494087219238, -3.814697265625e-06, -0.2496703714132309, -0.00031931427656672895, 0.0, -0.6817687749862671, -4.887576324108522e-06, 0.0, -5.6743581808405e-05, 0.0, -0.0002131461224053055, 0.0, -0.001800537109375, -0.0007953643798828125, -6.4849853515625e-05, 0.0, -2.3841855067985307e-07, -0.0005437135696411133, -1.1920928244535389e-07], "choice_history": [97, 283, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 201, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Player", "Selector", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "PlayerSelector", "hole2": "LEGENDARY", "hole0": "Toshley", "_type": "Template15", "hole3": "PlayerSelector", "hole1": 6}], "hole0": "Toshley", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Kill(), MinionSelector(IsType(\n            MINION_TYPE.MECH), players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score": -4.8094566131202825, "score_history": [-0.0013904571533203125, -1.9073486328125e-05, -0.0075356182642281055, -2.0265579223632812e-06, -1.1641532182693481e-06, -2.8967857360839844e-05, -2.0265579223632812e-06, -0.09905338287353516, -0.0014896392822265625, -3.321719169616699, -0.0004502518568187952, -0.00015722615353297442, -0.0004559755325317383, -1.9073486328125e-06, -0.004998445510864258, -6.115436553955078e-05, -0.03287818655371666, -0.0006804458680562675, -0.10050702095031738, -0.0011290311813354492, 0.0, -0.07598590850830078, -0.0027923583984375, -0.0001049041748046875, -0.08582210540771484, -5.7220458984375e-06, -0.9276723861694336, -0.00018310546875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.019711732864379883, -1.1324875231366605e-05, 0.0, -0.0002002716064453125, -2.6702880859375e-05, -0.03329479694366455, -5.245203283266164e-06, -0.000965118408203125, -1.9073486328125e-06, -0.003847360610961914, -8.594989776611328e-05, 0.0, -9.894371032714844e-06, 0.0, -0.0001685619354248047, 0.0, -0.010171890258789062, -0.07463359832763672, -2.86102294921875e-05, 0.0, -3.576278118089249e-07, -0.0010377168655395508, -1.1920928244535389e-07], "choice_history": [97, 283, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 206, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 346, 74, 297, "MECH", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 5}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "LEGENDARY", "hole0": "Toshley", "_type": "Template15", "hole3": "Kill", "hole1": 6, "hole6": [{"_type": "Template60", "hole0": "MECH"}]}], "hole0": "Toshley", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=<UNK>), 5), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score": -4.967123710593043, "score_history": [-0.0013904571533203125, -1.9073486328125e-05, -0.0075356182642281055, -2.0265579223632812e-06, -1.1641532182693481e-06, -2.8967857360839844e-05, -2.0265579223632812e-06, -0.09905338287353516, -0.0014896392822265625, -0.7841963768005371, -0.0004683732404373586, -1.0609614946588408e-05, -3.0517578125e-05, 0.0, -0.002987504005432129, -8.20159912109375e-05, -0.35466238856315613, -0.023049116134643555, -0.00020466477144509554, -0.32676029205322266, -0.4983682632446289, -0.0025644302368164062, -2.4710311889648438, -0.006175041198730469, -1.1801719665527344e-05, -0.0018749237060546875, 0.0, -0.000507354736328125, 0.0, -0.0003108978271484375, 0.0, -0.0028717517852783203, -8.0108642578125e-05, -0.011401176452636719, -8.7738037109375e-05, -0.0032014846801757812, -7.62939453125e-06, -0.0004673004150390625, 0.0, -0.1383185237646103, -6.770858453819528e-05, -0.003383636474609375, -7.62939453125e-06, -0.21937645971775055, -3.4332275390625e-05, -0.00044846534729003906, -1.1920928244535389e-07, 0.0, -3.862377707264386e-05, -1.9073486328125e-06, -7.593631016789004e-05, 0.0, -0.001373291015625, -0.0024509429931640625, -2.09808349609375e-05, 0.0, -3.576278118089249e-07, -0.0005893707275390625, -1.1920928244535389e-07], "choice_history": [97, 283, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Add", "Card", "<EOS>", 347, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "<UNK>", "<EOS>", 52, 179, "5", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "PlayerSelector", "hole2": "LEGENDARY", "hole0": "Toshley", "_type": "Template15", "hole3": "AddCard", "hole1": 6, "hole4": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "<UNK>", "_type": "Name"}}, {"n": 5, "_type": "Num"}]}], "hole0": "Toshley", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score": -5.006145282766703, "score_history": [-0.0013904571533203125, -1.9073486328125e-05, -0.0075356182642281055, -2.0265579223632812e-06, -1.1641532182693481e-06, -2.8967857360839844e-05, -2.0265579223632812e-06, -0.09905338287353516, -0.0014896392822265625, -0.7841963768005371, -0.0004683732404373586, -1.0609614946588408e-05, -3.0517578125e-05, 0.0, -0.002987504005432129, -8.20159912109375e-05, -0.35466238856315613, -0.023049116134643555, -0.00020466477144509554, -1.3063688278198242, -0.3455495834350586, -0.000774383544921875, -0.017423707991838455, -0.00021755695343017578, -0.00012791156768798828, -0.000102996826171875, 0.0, -0.0003070831298828125, 0.0, -9.34600830078125e-05, 0.0, -0.0002928971953224391, -2.09808349609375e-05, -0.14337635040283203, -0.000110626220703125, -0.0016832351684570312, -1.1444091796875e-05, -0.000492095947265625, 0.0, -1.9018926620483398, -2.5272369384765625e-05, -7.843971252441406e-05, -2.741813204920618e-06, -1.1920928244535389e-07, -0.000217199107282795, -5.7220458984375e-06, -0.0004730223154183477, 0.0, -0.009103775024414062, -0.0016956329345703125, -4.9591064453125e-05, 0.0, -2.741813204920618e-06, -0.000431060791015625, -2.3841855067985307e-07], "choice_history": [97, 283, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "spare_part_list", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "PlayerSelector", "hole2": "LEGENDARY", "hole0": "Toshley", "_type": "Template15", "hole3": "AddCard", "hole1": 6, "hole4": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "spare_part_list", "_type": "Name"}}]}], "hole0": "Toshley", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CharacterSelector(\n            players=BothPlayer(), condition=IsMinion()), 5), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score": -5.439694588255392, "score_history": [-0.0013904571533203125, -1.9073486328125e-05, -0.0075356182642281055, -2.0265579223632812e-06, -1.1641532182693481e-06, -2.8967857360839844e-05, -2.0265579223632812e-06, -0.09905338287353516, -0.0014896392822265625, -0.7841963768005371, -0.0004683732404373586, -1.0609614946588408e-05, -3.0517578125e-05, 0.0, -0.002987504005432129, -8.20159912109375e-05, -0.35466238856315613, -0.023049116134643555, -0.00020466477144509554, -0.32676029205322266, -0.4983682632446289, -0.0025644302368164062, -0.10206234455108643, -0.2268010377883911, 0.0, -0.26615023612976074, -9.5367431640625e-06, -0.00016021728515625, 0.0, -0.06771087646484375, -2.3841617803554982e-05, 0.0, -1.6081207990646362, -6.830683560110629e-05, -0.017108917236328125, 0.0, -0.003927813842892647, -0.1211356446146965, -7.62939453125e-06, -0.18463420867919922, -0.000110626220703125, -0.733967125415802, -4.76837158203125e-05, -0.0002442598342895508, 0.0, 0.0, -2.694129761948716e-05, -3.814697265625e-06, -9.763240814208984e-05, 0.0, -0.001129150390625, -0.00252532958984375, -2.86102294921875e-05, 0.0, -1.1920928244535389e-07, -0.0006848573684692383, -1.1920928244535389e-07], "choice_history": [97, 283, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Add", "Card", "<EOS>", 347, 71, 293, "Character", "Selector", "<EOS>", "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", 52, 179, "5", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "PlayerSelector", "hole2": "LEGENDARY", "hole0": "Toshley", "_type": "Template15", "hole3": "AddCard", "hole1": 6, "hole4": [{"hole2": {"_type": "Template79", "hole0": "BothPlayer"}, "hole0": "CharacterSelector", "_type": "Template56", "hole3": "condition", "hole1": "players", "hole4": {"_type": "Template79", "hole0": "IsMinion"}}, {"n": 5, "_type": "Num"}]}], "hole0": "Toshley", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CharacterSelector(\n            condition=IsMinion(), player=BothPlayer()), ActionTag(Draw(),\n            PlayerSelector())), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score": -5.7725436794179785, "score_history": [-0.0013904571533203125, -1.9073486328125e-05, -0.0075356182642281055, -2.0265579223632812e-06, -1.1641532182693481e-06, -2.8967857360839844e-05, -2.0265579223632812e-06, -0.09905338287353516, -0.0014896392822265625, -0.7841963768005371, -0.0004683732404373586, -1.0609614946588408e-05, -3.0517578125e-05, 0.0, -0.002987504005432129, -8.20159912109375e-05, -0.35466238856315613, -0.023049116134643555, -0.00020466477144509554, -0.32676029205322266, -0.4983682632446289, -0.0025644302368164062, -0.10206234455108643, -0.2268010377883911, 0.0, -2.0127999782562256, -0.0006299018859863281, -0.0027484893798828125, 0.0, -0.16016265749931335, -0.12637458741664886, -9.5367431640625e-05, -0.07709121704101562, 0.0, -0.000125885009765625, 0.0, -0.03239560127258301, -7.629378160345368e-06, 0.0, -0.02443218231201172, -0.23198413848876953, -0.5498067140579224, -0.0005626678466796875, -0.00011849403381347656, 0.0, -1.1920928244535389e-07, -0.11901304125785828, 0.0, -2.3841855067985307e-07, -5.292888454278e-05, -5.7220458984375e-06, -0.0001929998106788844, 0.0, -0.000980377197265625, -0.0006256103515625, -2.47955322265625e-05, 0.0, -2.3841855067985307e-07, -0.00054168701171875, -1.1920928244535389e-07], "choice_history": [97, 283, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Add", "Card", "<EOS>", 347, 71, 293, "Character", "Selector", "<EOS>", "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", "player", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 64, 269, "Draw", "<EOS>", "Player", "Selector", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "PlayerSelector", "hole2": "LEGENDARY", "hole0": "Toshley", "_type": "Template15", "hole3": "AddCard", "hole1": 6, "hole4": [{"hole2": {"_type": "Template79", "hole0": "IsMinion"}, "hole0": "CharacterSelector", "_type": "Template56", "hole3": "player", "hole1": "condition", "hole4": {"_type": "Template79", "hole0": "BothPlayer"}}, {"hole3": "PlayerSelector", "_type": "Template44", "hole0": "Draw"}]}], "hole0": "Toshley", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CharacterSelector(\n            players=BothPlayer(), picker=BothPlayer()), ActionTag(Draw(),\n            PlayerSelector())), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score": -5.8460436418308035, "score_history": [-0.0013904571533203125, -1.9073486328125e-05, -0.0075356182642281055, -2.0265579223632812e-06, -1.1641532182693481e-06, -2.8967857360839844e-05, -2.0265579223632812e-06, -0.09905338287353516, -0.0014896392822265625, -0.7841963768005371, -0.0004683732404373586, -1.0609614946588408e-05, -3.0517578125e-05, 0.0, -0.002987504005432129, -8.20159912109375e-05, -0.35466238856315613, -0.023049116134643555, -0.00020466477144509554, -0.32676029205322266, -0.4983682632446289, -0.0025644302368164062, -0.10206234455108643, -0.2268010377883911, 0.0, -0.26615023612976074, -9.5367431640625e-06, -0.00016021728515625, 0.0, -0.06771087646484375, -2.3841617803554982e-05, 0.0, -1.4264458417892456, -4.172325134277344e-06, -6.103515625e-05, 0.0, -0.6248208284378052, -1.1801719665527344e-05, 0.0, -0.055450439453125, -0.09877395629882812, -0.7459912300109863, -0.0008478164672851562, -9.942054748535156e-05, 0.0, -1.1920928244535389e-07, -0.125311940908432, 0.0, -2.3841855067985307e-07, -5.805484761367552e-05, -5.7220458984375e-06, -0.00019752974912989885, 0.0, -0.00095367431640625, -0.0006198883056640625, -2.6702880859375e-05, 0.0, -2.3841855067985307e-07, -0.000537872314453125, -1.1920928244535389e-07], "choice_history": [97, 283, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Add", "Card", "<EOS>", 347, 71, 293, "Character", "Selector", "<EOS>", "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", "picker", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 64, 269, "Draw", "<EOS>", "Player", "Selector", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "PlayerSelector", "hole2": "LEGENDARY", "hole0": "Toshley", "_type": "Template15", "hole3": "AddCard", "hole1": 6, "hole4": [{"hole2": {"_type": "Template79", "hole0": "BothPlayer"}, "hole0": "CharacterSelector", "_type": "Template56", "hole3": "picker", "hole1": "players", "hole4": {"_type": "Template79", "hole0": "BothPlayer"}}, {"hole3": "PlayerSelector", "_type": "Template44", "hole0": "Draw"}]}], "hole0": "Toshley", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(conditions=[\n            Is<UNK>(Attribute('mana', SelfSelector())), IsSpell()])),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score": -6.670359979826451, "score_history": [-0.0013904571533203125, -1.9073486328125e-05, -0.0075356182642281055, -2.0265579223632812e-06, -1.1641532182693481e-06, -2.8967857360839844e-05, -2.0265579223632812e-06, -0.09905338287353516, -0.0014896392822265625, -0.7841963768005371, -0.0004683732404373586, -1.0609614946588408e-05, -3.0517578125e-05, 0.0, -0.002987504005432129, -8.20159912109375e-05, -0.35466238856315613, -0.023049116134643555, -0.00020466477144509554, -1.3063688278198242, -1.7548847198486328, -0.0003681182861328125, -4.1961669921875e-05, 0.0, -7.307403575396165e-05, -0.00047528743743896484, -9.763240814208984e-05, -4.76837158203125e-05, -0.0001354217529296875, -1.9073486328125e-06, -0.001540541648864746, 0.0, -0.004790306091308594, -4.38690185546875e-05, -0.19369125366210938, -0.036652565002441406, -0.0064754486083984375, -0.2072237730026245, -0.06055993586778641, -0.00595602672547102, -6.29425048828125e-05, 0.0, -0.012450733222067356, -0.0033435821533203125, -0.0001163482666015625, -0.0002765655517578125, -5.14984130859375e-05, -0.8346115350723267, 0.0, -0.1549510955810547, -2.6702880859375e-05, -0.742046594619751, -3.802711216849275e-05, -2.3841855067985307e-07, -0.0035390853881835938, -0.0006399154663085938, -0.0016911127604544163, -0.04133809357881546, -0.0013103485107421875, -0.012419532984495163, 0.0, -1.1920928244535389e-07, -5.030589090893045e-05, -1.9073486328125e-06, -0.000538468302693218, 0.0, -0.0051174163818359375, -0.0006961822509765625, -9.1552734375e-05, 0.0, -3.576278118089249e-07, -0.0003072023391723633, -2.3841855067985307e-07], "choice_history": [97, 283, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 77, 302, "Is", "<UNK>", "<EOS>", 21, 174, "Attribute", "<EOS>", 347, 53, 183, "mana", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 83, 314, "Is", "Spell", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "PlayerSelector", "hole2": "LEGENDARY", "hole0": "Toshley", "_type": "Template15", "hole3": "AddCard", "hole1": 6, "hole4": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": {"id": "Attribute", "_type": "Name"}, "_type": "Template64", "hole0": "Is<UNK>", "hole2": [{"s": "mana", "_type": "Str"}, {"_type": "Template79", "hole0": "SelfSelector"}]}, {"_type": "Template73_expr_seq", "hole0": "IsSpell"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}]}], "hole0": "Toshley", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Kill(CardQuery(conditions=[\n            Is<UNK>(Attribute('mana', SelfSelector())), IsSpell()])),\n            PlayerSelector(), EnemyPlayer()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score": -7.333692947111466, "score_history": [-0.0013904571533203125, -1.9073486328125e-05, -0.0075356182642281055, -2.0265579223632812e-06, -1.1641532182693481e-06, -2.8967857360839844e-05, -2.0265579223632812e-06, -0.09905338287353516, -0.0014896392822265625, -2.6734042167663574, -0.005576968193054199, -4.386855289340019e-05, -1.52587890625e-05, 0.0, -0.0004597902297973633, -6.4849853515625e-05, -0.900551438331604, -3.9458249375456944e-05, -0.043623924255371094, -0.3452634811401367, -0.38106632232666016, -2.47955322265625e-05, 0.0, -0.00025832600658759475, -0.003926515579223633, -0.00012421607971191406, -4.76837158203125e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0006593465805053711, 0.0, -0.01441192626953125, -6.103515625e-05, -0.12055397033691406, -0.05002021789550781, -0.0076503753662109375, -0.30553174018859863, -0.100161112844944, -0.005270595196634531, -6.4849853515625e-05, -1.9073486328125e-06, -0.01182817853987217, -0.0028228759765625, -9.72747802734375e-05, -0.000278472900390625, -4.57763671875e-05, -0.7732353210449219, 0.0, -0.14117908477783203, -2.47955322265625e-05, -0.7645378112792969, -3.5285393096273765e-05, -2.3841855067985307e-07, -0.003170013427734375, -0.0006036758422851562, -0.0017478096997365355, -0.04034697636961937, -0.0014085769653320312, -0.19253425300121307, -2.0265579223632812e-06, 0.0, -0.0016689300537109375, -0.2884654998779297, -5.7220458984375e-06, -0.027127739042043686, -0.0002695322036743164, -5.7220458984375e-06, -7.915496826171875e-05, -5.7220458984375e-06, -6.103515625e-05, 0.0, -0.002895355224609375, -0.010183334350585938, -2.288818359375e-05, 0.0, -3.576278118089249e-07, -0.0005341768264770508, -1.1920928244535389e-07], "choice_history": [97, 283, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 208, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Kill", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 77, 302, "Is", "<UNK>", "<EOS>", 21, 174, "Attribute", "<EOS>", 347, 53, 183, "mana", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 83, 314, "Is", "Spell", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "PlayerSelector", "hole2": "LEGENDARY", "hole0": "Toshley", "_type": "Template15", "hole3": "Kill", "hole1": 6, "hole4": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": {"id": "Attribute", "_type": "Name"}, "_type": "Template64", "hole0": "Is<UNK>", "hole2": [{"s": "mana", "_type": "Str"}, {"_type": "Template79", "hole0": "SelfSelector"}]}, {"_type": "Template73_expr_seq", "hole0": "IsSpell"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole8": [{"_type": "Template79", "hole0": "EnemyPlayer"}]}], "hole0": "Toshley", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(conditions=[\n            Is<UNK>(Attribute('mana', SelfSelector())), IsSpell()]), 2),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score": -7.743525490687645, "score_history": [-0.0013904571533203125, -1.9073486328125e-05, -0.0075356182642281055, -2.0265579223632812e-06, -1.1641532182693481e-06, -2.8967857360839844e-05, -2.0265579223632812e-06, -0.09905338287353516, -0.0014896392822265625, -0.7841963768005371, -0.0004683732404373586, -1.0609614946588408e-05, -3.0517578125e-05, 0.0, -0.002987504005432129, -8.20159912109375e-05, -0.35466238856315613, -0.023049116134643555, -0.00020466477144509554, -0.32676029205322266, -2.7572507858276367, -0.001621246337890625, -0.0017242431640625, 0.0, -0.10356853902339935, -0.019950032234191895, -1.3470649719238281e-05, -0.0002613067626953125, -8.392333984375e-05, -1.9073486328125e-06, -0.004333853721618652, 0.0, -0.04148101806640625, -0.00037384033203125, -0.08593177795410156, -0.011044502258300781, -0.0025482177734375, -0.22561872005462646, -0.1039767935872078, -0.0028659882955253124, -8.7738037109375e-05, -1.9073486328125e-06, -0.010941613465547562, -0.0027923583984375, -0.0001430511474609375, -0.000263214111328125, -4.38690185546875e-05, -0.7610583305358887, 0.0, -0.14855670928955078, -2.09808349609375e-05, -0.7962774038314819, -4.267609620001167e-05, -2.3841855067985307e-07, -0.004039764404296875, -0.0006532669067382812, -0.0020645358599722385, -0.043142031878232956, -0.0013580322265625, -0.004032135009765625, -6.67572021484375e-05, -0.9961990118026733, 0.0, -0.0027829408645629883, -1.1920928244535389e-07, 0.0, -4.446503226063214e-05, -3.814697265625e-06, -0.0002515315427444875, 0.0, -0.0008869171142578125, -0.0024776458740234375, -4.1961669921875e-05, 0.0, -2.3841855067985307e-07, -0.0006257295608520508, -1.1920928244535389e-07], "choice_history": [97, 283, "Toshley", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Add", "Card", "<EOS>", 347, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 77, 302, "Is", "<UNK>", "<EOS>", 21, 174, "Attribute", "<EOS>", 347, 53, 183, "mana", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 83, 314, "Is", "Spell", "<EOS>", 52, 179, "2", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "PlayerSelector", "hole2": "LEGENDARY", "hole0": "Toshley", "_type": "Template15", "hole3": "AddCard", "hole1": 6, "hole4": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": {"id": "Attribute", "_type": "Name"}, "_type": "Template64", "hole0": "Is<UNK>", "hole2": [{"s": "mana", "_type": "Str"}, {"_type": "Template79", "hole0": "SelfSelector"}]}, {"_type": "Template73_expr_seq", "hole0": "IsSpell"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}, {"n": 2, "_type": "Num"}]}], "hole0": "Toshley", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "beams": [{"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score": -0.6608894825542393, "score_history": [-0.00017547607421875, -1.52587890625e-05, -0.0001728385395836085, -2.50339189733495e-06, -7.033348083496094e-06, -7.748603820800781e-06, -2.2649765014648438e-06, -5.7220458984375e-06, -0.4152355194091797, -0.0005855560302734375, -3.6954863844584906e-06, -9.5367431640625e-06, -0.0001927770208567381, 0.0, -0.008785009384155273, -7.62939453125e-06, -0.011016249656677246, 0.0, -0.0009708404541015625, -1.9073486328125e-06, -0.0008907318115234375, 0.0, -0.00023114681243896484, 0.0, -0.006122589111328125, 0.0, -1.71661376953125e-05, 0.0, -0.0010433197021484375, 0.0, -2.6702880859375e-05, -0.03548145294189453, -5.91278076171875e-05, -2.2649765014648438e-06, -1.2278481335670222e-05, -7.772429671604186e-05, 0.0, -0.008080124855041504, 0.0, -0.000591278076171875, -0.05710029602050781, -0.0009424686431884766, 0.0, -0.0001583099365234375, -0.0008630752563476562, -4.1961669921875e-05, -0.10702693462371826, -0.0004100799560546875, -0.0021419525146484375, -6.103515625e-05, -0.0023071523755788803, -2.741813204920618e-06, 0.0], "choice_history": [97, 283, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Warbot", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 1, "hole2": "enrage"}], "hole2": [{"hole2": "WARRIOR", "hole0": "Warbot", "_type": "Template27", "hole3": "minion_type", "hole1": 1, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "Warbot", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score": -2.3709056895584055, "score_history": [-0.00017547607421875, -1.52587890625e-05, -0.0001728385395836085, -2.50339189733495e-06, -7.033348083496094e-06, -7.748603820800781e-06, -2.2649765014648438e-06, -5.7220458984375e-06, -1.332463264465332, -0.0039577484130859375, -1.52587890625e-05, 0.0, -2.384185791015625e-06, -7.62939453125e-06, -0.0001201629638671875, 0.0, -0.0059490203857421875, -0.0001850128173828125, -7.62939453125e-06, -2.622604142743512e-06, -8.392333984375e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.891734276199713e-05, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.14839398860931396, 0.0, -5.14984130859375e-05, 0.0, -5.340576171875e-05, 0.0, -0.00010120868682861328, -3.4332275390625e-05, -0.0016269683837890625, 0.0, -7.43865966796875e-05, -8.58306884765625e-05, -7.963180541992188e-05, -1.9073486328125e-06, -0.000316619873046875, -0.04917335510253906, -0.000457763671875, -0.47783660888671875, -9.5367431640625e-05, -0.0001392364501953125, 0.0, -0.000736236572265625, 0.0, -7.05718994140625e-05, -0.00376129150390625, -0.0001354217529296875, -1.1920928244535389e-07, -1.5139465176616795e-05, -5.900808173464611e-05, 0.0, -0.017029523849487305, 0.0, -0.000629425048828125, -0.0645294189453125, -0.0007151365280151367, -3.814697265625e-06, -0.0001678466796875, -0.0006113052368164062, -3.62396240234375e-05, -0.2532510757446289, -0.0004253387451171875, -0.0024623870849609375, -7.43865966796875e-05, -0.004295892547816038, -2.861022494471399e-06, 0.0], "choice_history": [97, 283, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Warbot", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 1, "hole2": "enrage"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "MECH"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Warbot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Warbot", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score": -3.234076554788537, "score_history": [-0.00017547607421875, -1.52587890625e-05, -0.0001728385395836085, -2.50339189733495e-06, -7.033348083496094e-06, -7.748603820800781e-06, -2.2649765014648438e-06, -5.7220458984375e-06, -1.332463264465332, -0.0039577484130859375, -1.52587890625e-05, 0.0, -2.384185791015625e-06, -7.62939453125e-06, -0.0001201629638671875, 0.0, -0.0059490203857421875, -0.0001850128173828125, -7.62939453125e-06, -2.622604142743512e-06, -8.392333984375e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.891734276199713e-05, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.14839398860931396, 0.0, -5.14984130859375e-05, 0.0, -5.340576171875e-05, 0.0, -0.00010120868682861328, -3.4332275390625e-05, -0.0016269683837890625, 0.0, -7.43865966796875e-05, -8.58306884765625e-05, -7.963180541992188e-05, -1.9073486328125e-06, -0.000316619873046875, -0.04917335510253906, -0.000457763671875, -1.3440704345703125, 0.0, -0.00084686279296875, 0.0, -0.0003377199172973633, 0.0, -2.47955322265625e-05, -0.00276947021484375, -0.000110626220703125, -1.1920928244535389e-07, -2.253030106658116e-05, -4.3868938519153744e-05, 0.0, -0.008701682090759277, 0.0, -0.0005931854248046875, -0.06314373016357422, -0.0006909369840286672, -3.814697265625e-06, -0.0001735687255859375, -0.000629425048828125, -3.62396240234375e-05, -0.2608222961425781, -0.000431060791015625, -0.002582550048828125, -8.7738037109375e-05, -0.004129002336412668, -2.861022494471399e-06, 0.0], "choice_history": [97, 283, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Warbot", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 1, "hole2": "enrage"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "BEAST"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Warbot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Warbot", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(5), SelfSelector())])\n", "score": -3.698294639900041, "score_history": [-0.00017547607421875, -1.52587890625e-05, -0.0001728385395836085, -2.50339189733495e-06, -7.033348083496094e-06, -7.748603820800781e-06, -2.2649765014648438e-06, -5.7220458984375e-06, -0.4152355194091797, -0.0005855560302734375, -3.6954863844584906e-06, -9.5367431640625e-06, -0.0001927770208567381, 0.0, -0.008785009384155273, -7.62939453125e-06, -0.011016249656677246, 0.0, -0.0009708404541015625, -1.9073486328125e-06, -0.0008907318115234375, 0.0, -0.00023114681243896484, 0.0, -0.006122589111328125, 0.0, -1.71661376953125e-05, 0.0, -0.0010433197021484375, 0.0, -2.6702880859375e-05, -0.03548145294189453, -5.91278076171875e-05, -2.2649765014648438e-06, -1.2278481335670222e-05, -7.772429671604186e-05, 0.0, -0.008080124855041504, 0.0, -0.000591278076171875, -0.05710029602050781, -0.0009424686431884766, 0.0, -0.0001583099365234375, -0.0008630752563476562, -4.1961669921875e-05, -3.146333694458008, -0.0004673004150390625, -0.0006322860717773438, -6.29425048828125e-05, -0.0018564461497589946, -2.384185791015625e-06, 0.0], "choice_history": [97, 283, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Warbot", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "5", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 5}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 1, "hole2": "enrage"}], "hole2": [{"hole2": "WARRIOR", "hole0": "Warbot", "_type": "Template27", "hole3": "minion_type", "hole1": 1, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "Warbot", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(5), SelfSelector())])\n", "score": -3.8824597444747653, "score_history": [-0.00017547607421875, -1.52587890625e-05, -0.0001728385395836085, -2.50339189733495e-06, -7.033348083496094e-06, -7.748603820800781e-06, -2.2649765014648438e-06, -5.7220458984375e-06, -1.332463264465332, -0.0039577484130859375, -1.52587890625e-05, 0.0, -2.384185791015625e-06, -7.62939453125e-06, -0.0001201629638671875, 0.0, -0.0059490203857421875, -0.0001850128173828125, -7.62939453125e-06, -2.622604142743512e-06, -8.392333984375e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.891734276199713e-05, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.14839398860931396, 0.0, -5.14984130859375e-05, 0.0, -5.340576171875e-05, 0.0, -0.00010120868682861328, -3.4332275390625e-05, -0.0016269683837890625, 0.0, -7.43865966796875e-05, -8.58306884765625e-05, -7.963180541992188e-05, -1.9073486328125e-06, -0.000316619873046875, -0.04917335510253906, -0.000457763671875, -0.47783660888671875, -9.5367431640625e-05, -0.0001392364501953125, 0.0, -0.000736236572265625, 0.0, -7.05718994140625e-05, -0.00376129150390625, -0.0001354217529296875, -1.1920928244535389e-07, -1.5139465176616795e-05, -5.900808173464611e-05, 0.0, -0.017029523849487305, 0.0, -0.000629425048828125, -0.0645294189453125, -0.0007151365280151367, -3.814697265625e-06, -0.0001678466796875, -0.0006113052368164062, -3.62396240234375e-05, -1.7649403810501099, -0.002567291259765625, -0.00067138671875, -0.0001735687255859375, -0.003710984718054533, -2.384185791015625e-06, 0.0], "choice_history": [97, 283, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Warbot", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "5", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 5}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 1, "hole2": "enrage"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "MECH"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Warbot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARRIOR", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Warbot", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(2), SelfSelector())])\n", "score": -4.029082294982118, "score_history": [-0.00017547607421875, -1.52587890625e-05, -0.0001728385395836085, -2.50339189733495e-06, -7.033348083496094e-06, -7.748603820800781e-06, -2.2649765014648438e-06, -5.7220458984375e-06, -0.4152355194091797, -0.0005855560302734375, -3.6954863844584906e-06, -9.5367431640625e-06, -0.0001927770208567381, 0.0, -0.008785009384155273, -7.62939453125e-06, -0.011016249656677246, 0.0, -0.0009708404541015625, -1.9073486328125e-06, -0.0008907318115234375, 0.0, -0.00023114681243896484, 0.0, -0.006122589111328125, 0.0, -1.71661376953125e-05, 0.0, -0.0010433197021484375, 0.0, -2.6702880859375e-05, -0.03548145294189453, -5.91278076171875e-05, -2.2649765014648438e-06, -1.2278481335670222e-05, -7.772429671604186e-05, 0.0, -0.008080124855041504, 0.0, -0.000591278076171875, -0.05710029602050781, -0.0009424686431884766, 0.0, -0.0001583099365234375, -0.0008630752563476562, -4.1961669921875e-05, -3.4607620239257812, -8.7738037109375e-05, -0.0008878707885742188, -1.9073486328125e-05, -0.01838504895567894, -9.536738616588991e-07, 0.0], "choice_history": [97, 283, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Warbot", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 1, "hole2": "enrage"}], "hole2": [{"hole2": "WARRIOR", "hole0": "Warbot", "_type": "Template27", "hole3": "minion_type", "hole1": 1, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "Warbot", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score": -4.086930954187494, "score_history": [-0.00017547607421875, -1.52587890625e-05, -0.0001728385395836085, -2.50339189733495e-06, -7.033348083496094e-06, -7.748603820800781e-06, -2.2649765014648438e-06, -5.7220458984375e-06, -3.707275390625, -0.0002117156982421875, -5.006785613659304e-06, -3.0517578125e-05, -3.711640601977706e-05, 0.0, -0.0022965669631958008, 0.0, -4.38690185546875e-05, 0.0, -0.0011311769485473633, 0.0, -1.33514404296875e-05, -0.000606536865234375, -0.0004253387451171875, -4.768369876728684e-07, -3.6954811548639555e-06, -5.7935467339120805e-05, 0.0, -0.011924386024475098, 0.0, -0.0006999969482421875, -0.09456920623779297, -0.0007644891156814992, 0.0, -0.000156402587890625, -0.0006961822509765625, -4.00543212890625e-05, -0.2596096992492676, -0.0005168914794921875, -0.00232696533203125, -7.62939453125e-05, -0.0030196274165064096, -3.218649908376392e-06, 0.0], "choice_history": [97, 283, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Warbot", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 1, "hole2": "enrage"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Warbot", "hole2": "WARRIOR"}], "hole0": "Warbot", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score": -4.28842657983818, "score_history": [-0.00017547607421875, -1.52587890625e-05, -0.0001728385395836085, -2.50339189733495e-06, -7.033348083496094e-06, -7.748603820800781e-06, -2.2649765014648438e-06, -5.7220458984375e-06, -1.332463264465332, -0.0039577484130859375, -1.52587890625e-05, 0.0, -2.384185791015625e-06, -7.62939453125e-06, -0.0001201629638671875, 0.0, -0.0059490203857421875, -0.0001850128173828125, -7.62939453125e-06, -2.622604142743512e-06, -8.392333984375e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.891734276199713e-05, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.0684473514556885, 0.0, -1.1444091796875e-05, 0.0, -0.000141143798828125, 0.0, -2.872943878173828e-05, -6.67572021484375e-05, -0.0019474029541015625, 0.0, -0.0001220703125, -9.72747802734375e-05, -8.380413055419922e-05, -1.9073486328125e-06, -0.0003643035888671875, -0.0398406982421875, -0.0004177093505859375, -0.48575305938720703, 0.0, -0.000904083251953125, 0.0, -0.0003167390823364258, 0.0, -2.47955322265625e-05, -0.0028781890869140625, -0.0001087188720703125, -1.1920928244535389e-07, -1.8715683836489916e-05, -4.6729910536669195e-05, 0.0, -0.009709000587463379, 0.0, -0.00060272216796875, -0.06309795379638672, -0.0006830691709183156, -3.814697265625e-06, -0.0001735687255859375, -0.0006237030029296875, -3.62396240234375e-05, -0.26133155822753906, -0.000431060791015625, -0.0025539398193359375, -8.7738037109375e-05, -0.004096464719623327, -2.861022494471399e-06, 0.0], "choice_history": [97, 283, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Warbot", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 1, "hole2": "enrage"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "BEAST"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Warbot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Warbot", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(1(), SelfSelector())])\n", "score": -4.374005207869914, "score_history": [-0.00017547607421875, -1.52587890625e-05, -0.0001728385395836085, -2.50339189733495e-06, -7.033348083496094e-06, -7.748603820800781e-06, -2.2649765014648438e-06, -5.7220458984375e-06, -0.4152355194091797, -0.0005855560302734375, -3.6954863844584906e-06, -9.5367431640625e-06, -0.0001927770208567381, 0.0, -0.008785009384155273, -7.62939453125e-06, -0.011016249656677246, 0.0, -0.0009708404541015625, -1.9073486328125e-06, -0.0008907318115234375, 0.0, -0.00023114681243896484, 0.0, -0.006122589111328125, 0.0, -1.71661376953125e-05, 0.0, -0.0010433197021484375, 0.0, -2.6702880859375e-05, -0.03548145294189453, -5.91278076171875e-05, -2.2649765014648438e-06, -1.2278481335670222e-05, -7.772429671604186e-05, 0.0, -0.008080124855041504, 0.0, -0.000591278076171875, -2.9279937744140625, -0.013468264602124691, -9.5367431640625e-06, -0.000797271728515625, -0.0006008148193359375, -7.62939453125e-05, -0.06395435333251953, -0.0003566741943359375, -0.0007944107055664062, -2.6702880859375e-05, -0.0020061698742210865, -2.861022494471399e-06, 0.0, -1.9073486328125e-05, -0.0018949508666992188, -0.0005617141723632812, -0.11395558714866638, -9.655952453613281e-06, -0.000202178955078125, -0.06679821014404297, -0.0073604583740234375, -0.6693165898323059, -0.012127269990742207, -0.0007419586181640625, -9.5367431640625e-06, -0.0010839636670425534, -3.4570680327306036e-06, 0.0], "choice_history": [97, 283, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Warbot", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 88, 325, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"_type": "Template79", "hole0": "1"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 1, "hole2": "enrage"}], "hole2": [{"hole2": "WARRIOR", "hole0": "Warbot", "_type": "Template27", "hole3": "minion_type", "hole1": 1, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "Warbot", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, taunt=True, enrage=[Aura(ChangeAttack(1),\n            SelfSelector())])\n", "score": -4.645058912696413, "score_history": [-0.00017547607421875, -1.52587890625e-05, -0.0001728385395836085, -2.50339189733495e-06, -7.033348083496094e-06, -7.748603820800781e-06, -2.2649765014648438e-06, -5.7220458984375e-06, -0.4152355194091797, -0.0005855560302734375, -3.6954863844584906e-06, -9.5367431640625e-06, -0.0001927770208567381, 0.0, -0.008785009384155273, -7.62939453125e-06, -0.011016249656677246, 0.0, -0.0009708404541015625, -1.9073486328125e-06, -0.0008907318115234375, 0.0, -0.00023114681243896484, 0.0, -0.006122589111328125, 0.0, -1.71661376953125e-05, 0.0, -0.0010433197021484375, 0.0, -2.6702880859375e-05, -3.452813148498535, -0.0037822723388671875, -1.936778426170349e-05, -2.372264498262666e-05, -7.867813110351562e-06, 0.0, -0.00010144493717234582, 0.0, -0.0001678466796875, -0.000804901123046875, -7.43865966796875e-05, -0.2653946876525879, -1.33514404296875e-05, -0.0006885528564453125, -1.9073486328125e-05, -0.0004962682723999023, 0.0, -0.20730972290039062, -4.76837158203125e-05, -0.02881750836968422, -1.1444091796875e-05, -0.0035390853881835938, -0.003719329833984375, -0.0006827112520113587, 0.0, -0.0002288818359375, -0.0011796951293945312, -3.4332275390625e-05, -0.2212374210357666, -0.0009403228759765625, -0.0023050308227539062, -2.86102294921875e-05, -0.005038037430495024, -2.9802317840221804e-06, 0.0], "choice_history": [97, 283, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Warbot", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 354, 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "taunt", "_type": "keyword"}, {"value": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "arg": "enrage", "_type": "keyword"}], "_type": "Template68", "hole0": "Minion", "hole2": 3}], "hole2": [{"hole2": "WARRIOR", "hole0": "Warbot", "_type": "Template27", "hole3": "minion_type", "hole1": 1, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "Warbot", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 3)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score": -4.761684323257434, "score_history": [-0.00017547607421875, -1.52587890625e-05, -0.0001728385395836085, -2.50339189733495e-06, -7.033348083496094e-06, -7.748603820800781e-06, -2.2649765014648438e-06, -5.7220458984375e-06, -3.713503837585449, -0.03234672546386719, -2.026555648626527e-06, -2.0265558760002023e-06, -0.2689023017883301, 0.0, -0.1546398401260376, 0.0, -0.0064185746014118195, 0.0, -5.7220458984375e-05, -0.19174480438232422, -0.00035858154296875, -1.1920928244535389e-07, -2.52720492426306e-05, -2.2530510250362568e-05, 0.0, -0.007750868797302246, 0.0, -0.000751495361328125, -0.07702255249023438, -0.0009841916617006063, -1.9073486328125e-06, -0.00019073486328125, -0.0006437301635742188, -4.1961669921875e-05, -0.3003197908401489, -0.0005893707275390625, -0.0019330978393554688, -5.53131103515625e-05, -0.0029831447172909975, -3.4570680327306036e-06, 0.0], "choice_history": [97, 283, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 358, 132, 299, "1", "<EOS>", "3", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 1, "hole2": "enrage"}], "hole2": [{"hole1": 3, "_type": "Template62", "hole0": 1}], "hole0": "Warbot", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(5), SelfSelector())])\n", "score": -5.570197728287496, "score_history": [-0.00017547607421875, -1.52587890625e-05, -0.0001728385395836085, -2.50339189733495e-06, -7.033348083496094e-06, -7.748603820800781e-06, -2.2649765014648438e-06, -5.7220458984375e-06, -3.707275390625, -0.0002117156982421875, -5.006785613659304e-06, -3.0517578125e-05, -3.711640601977706e-05, 0.0, -0.0022965669631958008, 0.0, -4.38690185546875e-05, 0.0, -0.0011311769485473633, 0.0, -1.33514404296875e-05, -0.000606536865234375, -0.0004253387451171875, -4.768369876728684e-07, -3.6954811548639555e-06, -5.7935467339120805e-05, 0.0, -0.011924386024475098, 0.0, -0.0006999969482421875, -0.09456920623779297, -0.0007644891156814992, 0.0, -0.000156402587890625, -0.0006961822509765625, -4.00543212890625e-05, -1.74351966381073, -0.0018482208251953125, -0.000774383544921875, -0.000148773193359375, -0.0025259254034608603, -2.503394853192731e-06, 0.0], "choice_history": [97, 283, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Warbot", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "5", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 5}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 1, "hole2": "enrage"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Warbot", "hole2": "WARRIOR"}], "hole0": "Warbot", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 3)\n\n    def create_minion(self, player):\n        return Minion(1, 3)\n", "score": -5.938448522184672, "score_history": [-0.00017547607421875, -1.52587890625e-05, -0.0001728385395836085, -2.50339189733495e-06, -7.033348083496094e-06, -7.748603820800781e-06, -2.2649765014648438e-06, -5.7220458984375e-06, -3.713503837585449, -0.03234672546386719, -2.026555648626527e-06, -2.0265558760002023e-06, -0.2689023017883301, 0.0, -0.1546398401260376, 0.0, -0.0064185746014118195, 0.0, -5.7220458984375e-05, -1.7592382431030273, -0.0004253387451171875, -2.861018856492592e-06, -5.364403477869928e-06, -0.0025153160095214844, 0.0], "choice_history": [97, 283, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 358, 132, 299, "1", "<EOS>", "3", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": 3, "_type": "Template62", "hole0": 1}], "hole0": "Warbot", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 3)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(5), SelfSelector())])\n", "score": -6.074105473996944, "score_history": [-0.00017547607421875, -1.52587890625e-05, -0.0001728385395836085, -2.50339189733495e-06, -7.033348083496094e-06, -7.748603820800781e-06, -2.2649765014648438e-06, -5.7220458984375e-06, -3.713503837585449, -0.03234672546386719, -2.026555648626527e-06, -2.0265558760002023e-06, -0.2689023017883301, 0.0, -0.1546398401260376, 0.0, -0.0064185746014118195, 0.0, -5.7220458984375e-05, -0.19174480438232422, -0.00035858154296875, -1.1920928244535389e-07, -2.52720492426306e-05, -2.2530510250362568e-05, 0.0, -0.007750868797302246, 0.0, -0.000751495361328125, -0.07702255249023438, -0.0009841916617006063, -1.9073486328125e-06, -0.00019073486328125, -0.0006437301635742188, -4.1961669921875e-05, -1.6123955249786377, -0.0024394989013671875, -0.000667572021484375, -0.0001239776611328125, -0.0026762480847537518, -2.503394853192731e-06, 0.0], "choice_history": [97, 283, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 358, 132, 299, "1", "<EOS>", "3", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "5", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 5}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 1, "hole2": "enrage"}], "hole2": [{"hole1": 3, "_type": "Template62", "hole0": 1}], "hole0": "Warbot", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 1)\n\n    def create_minion(self, player):\n        return Minion(1, 3)\n", "score": -6.209212489364063, "score_history": [-0.00017547607421875, -1.52587890625e-05, -0.0001728385395836085, -2.50339189733495e-06, -7.033348083496094e-06, -7.748603820800781e-06, -2.2649765014648438e-06, -5.7220458984375e-06, -3.713503837585449, -0.03234672546386719, -2.026555648626527e-06, -2.0265558760002023e-06, -1.4448695182800293, 0.0, -0.3752999007701874, 0.0, -0.07923006266355515, 0.0, -3.4332275390625e-05, -0.5577030181884766, -0.0004730224609375, -3.576272320060525e-06, -6.198863957251888e-06, -0.005349397659301758, 0.0], "choice_history": [97, 283, "Warbot", "<EOS>", "Minion", "Card", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": 1, "_type": "Template62", "hole0": 1}], "hole0": "Warbot", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, deathrattle=Deathrattle(Summon(\n            CardQuery(conditions=[IsMinion()], source=CARD_SOURCE.MY_DECK)),\n            PlayerSelector(EnemyPlayer())))\n", "beams": [{"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, divine_shield=True, effects=[Effect(DidDamage(),\n            ActionTag(KillSelector(), AdjacentSelector(Adjacent())))])\n", "score": -4.068045408552962, "score_history": [-2.47955322265625e-05, -2.288818359375e-05, -2.896749174396973e-05, -5.4001808166503906e-05, -9.504146873950958e-07, -1.2993811651540454e-05, -4.291525328881107e-06, -3.814697265625e-06, -0.001659393310546875, -1.1444091796875e-05, -2.1457672119140625e-06, 0.0, -1.728534698486328e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -0.000255584716796875, 0.0, -1.33514404296875e-05, 0.0, -0.00016415119171142578, 0.0, -2.09808349609375e-05, -0.0003414154052734375, -4.9591064453125e-05, 0.0, -2.2649763195659034e-05, -5.7220458984375e-06, -3.576278118089249e-07, -0.004568696022033691, -5.960462772236497e-07, -0.16608333587646484, -0.031935691833496094, -1.9073486328125e-06, -0.23991870880126953, -1.9073486328125e-06, -0.00014495849609375, -1.33514404296875e-05, -0.0012553930282592773, 0.0, -0.31732177734375, -0.3720541000366211, -0.08240591734647751, -0.03955650329589844, -0.0002593994140625, -0.2070380449295044, -0.11324465274810791, 0.0, -1.3896807432174683, -0.8426523208618164, -9.5367431640625e-06, -1.9073486328125e-06, -0.001659393310546875, 0.0, -0.24802134931087494, -0.007303890772163868], "choice_history": [97, 283, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 90, 218, "Did", "Damage", "<EOS>", "Kill", "Selector", "<EOS>", "Adjacent", "Selector", "<EOS>", 346, 88, 325, "Adjacent", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "divine_shield", "_type": "keyword"}, {"hole1": "KillSelector", "hole3": "AdjacentSelector", "_type": "Template25", "hole0": "DidDamage", "hole4": [{"_type": "Template79", "hole0": "Adjacent"}]}], "_type": "Template68", "hole0": "Minion", "hole2": 8}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Deathlord", "hole2": "ALL"}], "hole0": "Deathlord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(Heal(2), HeroSelector(\n            EnemyPlayer())))\n", "score": -4.162712209475096, "score_history": [-2.47955322265625e-05, -2.288818359375e-05, -2.896749174396973e-05, -5.4001808166503906e-05, -9.504146873950958e-07, -1.2993811651540454e-05, -4.291525328881107e-06, -3.814697265625e-06, -0.001659393310546875, -1.1444091796875e-05, -2.1457672119140625e-06, 0.0, -1.728534698486328e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -0.000255584716796875, 0.0, -1.33514404296875e-05, 0.0, -0.00016415119171142578, 0.0, -2.09808349609375e-05, -0.0003414154052734375, -4.9591064453125e-05, 0.0, -2.2649763195659034e-05, -5.7220458984375e-06, -3.576278118089249e-07, -0.004568696022033691, -5.960462772236497e-07, -2.0131635665893555, -0.0027723312377929688, -0.5781536102294922, -1.2634519338607788, -0.00029813990113325417, -1.9073486328125e-06, -0.044890403747558594, -3.814697265625e-06, -0.23959743976593018, -1.1920928244535389e-07, -0.01156914234161377, -2.0265579223632812e-06, -3.2186455882765586e-06, -0.0002079010009765625, -7.82012939453125e-05, -1.1444091796875e-05, -0.0006844992749392986, -0.0003380772832315415, -3.814697265625e-06], "choice_history": [97, 283, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 353, 92, 259, "Heal", "<EOS>", 346, 52, 179, "2", "<EOS>", "Hero", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"hole1": [{"n": 2, "_type": "Num"}], "hole3": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "_type": "Template41", "hole0": "Heal", "hole2": "HeroSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 8}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Deathlord", "hole2": "ALL"}], "hole0": "Deathlord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, divine_shield=True, effects=[Effect(DidDamage(),\n            ActionTag(KillSelector(), Adjacent(Adjacent())))])\n", "score": -4.203536733141618, "score_history": [-2.47955322265625e-05, -2.288818359375e-05, -2.896749174396973e-05, -5.4001808166503906e-05, -9.504146873950958e-07, -1.2993811651540454e-05, -4.291525328881107e-06, -3.814697265625e-06, -0.001659393310546875, -1.1444091796875e-05, -2.1457672119140625e-06, 0.0, -1.728534698486328e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -0.000255584716796875, 0.0, -1.33514404296875e-05, 0.0, -0.00016415119171142578, 0.0, -2.09808349609375e-05, -0.0003414154052734375, -4.9591064453125e-05, 0.0, -2.2649763195659034e-05, -5.7220458984375e-06, -3.576278118089249e-07, -0.004568696022033691, -5.960462772236497e-07, -0.16608333587646484, -0.031935691833496094, -1.9073486328125e-06, -0.23991870880126953, -1.9073486328125e-06, -0.00014495849609375, -1.33514404296875e-05, -0.0012553930282592773, 0.0, -0.31732177734375, -0.3720541000366211, -0.08240591734647751, -0.03955650329589844, -0.0002593994140625, -0.2070380449295044, -0.11324465274810791, 0.0, -1.3896807432174683, -0.5664215087890625, 0.0, -0.13805294036865234, 0.0, -0.5251615047454834, -0.0055037690326571465], "choice_history": [97, 283, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 90, 218, "Did", "Damage", "<EOS>", "Kill", "Selector", "<EOS>", "Adjacent", "<EOS>", 346, 88, 325, "Adjacent", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "divine_shield", "_type": "keyword"}, {"hole1": "KillSelector", "hole3": "Adjacent", "_type": "Template25", "hole0": "DidDamage", "hole4": [{"_type": "Template79", "hole0": "Adjacent"}]}], "_type": "Template68", "hole0": "Minion", "hole2": 8}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Deathlord", "hole2": "ALL"}], "hole0": "Deathlord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, divine_shield=True, effects=[Effect(DidDamage(),\n            ActionTag(Kill(), TargetSelector(Adjacent())))])\n", "score": -4.32907717311241, "score_history": [-2.47955322265625e-05, -2.288818359375e-05, -2.896749174396973e-05, -5.4001808166503906e-05, -9.504146873950958e-07, -1.2993811651540454e-05, -4.291525328881107e-06, -3.814697265625e-06, -0.001659393310546875, -1.1444091796875e-05, -2.1457672119140625e-06, 0.0, -1.728534698486328e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -0.000255584716796875, 0.0, -1.33514404296875e-05, 0.0, -0.00016415119171142578, 0.0, -2.09808349609375e-05, -0.0003414154052734375, -4.9591064453125e-05, 0.0, -2.2649763195659034e-05, -5.7220458984375e-06, -3.576278118089249e-07, -0.004568696022033691, -5.960462772236497e-07, -0.16608333587646484, -0.031935691833496094, -1.9073486328125e-06, -0.23991870880126953, -1.9073486328125e-06, -0.00014495849609375, -1.33514404296875e-05, -0.0012553930282592773, 0.0, -0.31732177734375, -0.3720541000366211, -0.08240591734647751, -0.03955650329589844, -0.0002593994140625, -0.2070380449295044, -2.236466884613037, -0.30710434913635254, -3.24249267578125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.002239227294921875, 0.0, -0.3130075931549072, -0.00474172830581665], "choice_history": [97, 283, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 90, 218, "Did", "Damage", "<EOS>", "Kill", "<EOS>", "Target", "Selector", "<EOS>", 346, 88, 325, "Adjacent", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "divine_shield", "_type": "keyword"}, {"hole1": "Kill", "hole3": "TargetSelector", "_type": "Template25", "hole0": "DidDamage", "hole4": [{"_type": "Template79", "hole0": "Adjacent"}]}], "_type": "Template68", "hole0": "Minion", "hole2": 8}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Deathlord", "hole2": "ALL"}], "hole0": "Deathlord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, divine_shield=True, effects=[Effect(TurnEnded(),\n            ActionTag(Give(ChangeAttack(1)), MinionSelector(picker=\n            RandomPicker())))])\n", "score": -4.386324505176809, "score_history": [-2.47955322265625e-05, -2.288818359375e-05, -2.896749174396973e-05, -5.4001808166503906e-05, -9.504146873950958e-07, -1.2993811651540454e-05, -4.291525328881107e-06, -3.814697265625e-06, -0.001659393310546875, -1.1444091796875e-05, -2.1457672119140625e-06, 0.0, -1.728534698486328e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -0.000255584716796875, 0.0, -1.33514404296875e-05, 0.0, -0.00016415119171142578, 0.0, -2.09808349609375e-05, -0.0003414154052734375, -4.9591064453125e-05, 0.0, -2.2649763195659034e-05, -5.7220458984375e-06, -3.576278118089249e-07, -0.004568696022033691, -5.960462772236497e-07, -0.16608333587646484, -0.031935691833496094, -1.9073486328125e-06, -0.23991870880126953, -1.9073486328125e-06, -0.00014495849609375, -1.33514404296875e-05, -0.0012553930282592773, 0.0, -0.31732177734375, -2.6735124588012695, -0.010293595492839813, -0.0015245676040649414, -1.1920928244535389e-07, -0.016932476311922073, -0.0024889616761356592, 0.0, -0.7995977401733398, -0.0009250640869140625, -0.0070030358619987965, -0.0003186464309692383, -0.007443428039550781, -1.9073486328125e-06, 0.0, -0.0014972686767578125, -0.0001049041748046875, -1.9073486328125e-06, -0.06735901534557343, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -0.03310596942901611, -2.5033950805664062e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 90, 221, "Turn", "Ended", "<EOS>", "Give", "<EOS>", 346, 80, 310, "1", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "divine_shield", "_type": "keyword"}, {"hole5": [{"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "picker", "_type": "keyword"}], "hole2": [{"_type": "Template70", "hole0": 1}], "hole0": "TurnEnded", "_type": "Template25", "hole3": "MinionSelector", "hole1": "Give"}], "_type": "Template68", "hole0": "Minion", "hole2": 8}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Deathlord", "hole2": "ALL"}], "hole0": "Deathlord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, divine_shield=True, effects=[Effect(Attack(),\n            IsMinion())])\n", "score": -4.425764277665394, "score_history": [-2.47955322265625e-05, -2.288818359375e-05, -2.896749174396973e-05, -5.4001808166503906e-05, -9.504146873950958e-07, -1.2993811651540454e-05, -4.291525328881107e-06, -3.814697265625e-06, -0.001659393310546875, -1.1444091796875e-05, -2.1457672119140625e-06, 0.0, -1.728534698486328e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -0.000255584716796875, 0.0, -1.33514404296875e-05, 0.0, -0.00016415119171142578, 0.0, -2.09808349609375e-05, -0.0003414154052734375, -4.9591064453125e-05, 0.0, -2.2649763195659034e-05, -5.7220458984375e-06, -3.576278118089249e-07, -0.004568696022033691, -5.960462772236497e-07, -0.16608333587646484, -0.031935691833496094, -1.9073486328125e-06, -0.23991870880126953, -1.9073486328125e-06, -0.00014495849609375, -1.33514404296875e-05, -0.0012553930282592773, 0.0, -1.6497812271118164, -0.005368232727050781, -0.10666525363922119, -4.00543212890625e-05, -1.9073486328125e-06, -2.023378372192383, -1.9073486328125e-06, -0.04732722416520119, -0.143035426735878, -0.0033288002014160156], "choice_history": [97, 283, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 93, 274, "Attack", "<EOS>", 346, 88, 325, "Is", "Minion", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "divine_shield", "_type": "keyword"}, {"hole2": [{"_type": "Template79", "hole0": "IsMinion"}], "_type": "Template45", "hole0": "Attack"}], "_type": "Template68", "hole0": "Minion", "hole2": 8}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Deathlord", "hole2": "ALL"}], "hole0": "Deathlord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, divine_shield=True, effects=[Effect(Attack(),\n            ActionTag(ChangeTarget(CharacterSelector(NotCurrentTarget(),\n            EnemyPlayer(), RandomPicker())), SelfSelector(), And(OneIn(2),\n            OpponentMinionCountIsGreaterThan(0))))])\n", "score": -4.43455346286612, "score_history": [-2.47955322265625e-05, -2.288818359375e-05, -2.896749174396973e-05, -5.4001808166503906e-05, -9.504146873950958e-07, -1.2993811651540454e-05, -4.291525328881107e-06, -3.814697265625e-06, -0.001659393310546875, -1.1444091796875e-05, -2.1457672119140625e-06, 0.0, -1.728534698486328e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -0.000255584716796875, 0.0, -1.33514404296875e-05, 0.0, -0.00016415119171142578, 0.0, -2.09808349609375e-05, -0.0003414154052734375, -4.9591064453125e-05, 0.0, -2.2649763195659034e-05, -5.7220458984375e-06, -3.576278118089249e-07, -0.004568696022033691, -5.960462772236497e-07, -0.16608333587646484, -0.031935691833496094, -1.9073486328125e-06, -0.23991870880126953, -1.9073486328125e-06, -0.00014495849609375, -1.33514404296875e-05, -0.0012553930282592773, 0.0, -1.6497812271118164, -0.005368232727050781, -0.10666525363922119, -4.00543212890625e-05, -1.9073486328125e-06, -0.8944339752197266, -0.0132904052734375, -0.003980278968811035, -0.0006371736526489258, -5.996227264404297e-05, -0.045928001403808594, -0.006622433662414551, -0.000141143798828125, -1.1444091796875e-05, -0.015232086181640625, -0.011074066162109375, -0.01705944538116455, -0.0004885562229901552, 0.0, -0.024414028972387314, -0.011716372333467007, -0.0017049312591552734, -2.47955322265625e-05, -0.0036867856979370117, -0.0003681182861328125, -5.7220458984375e-06, -0.01700592041015625, -6.532669067382812e-05, -1.4305104514278355e-06, -0.29335665702819824, -1.9073486328125e-06, 0.0, -0.034827232360839844, -7.069110870361328e-05, -7.82012939453125e-05, -0.0008182525634765625, -5.340576171875e-05, -0.46034619212150574, -0.0028749629855155945, -3.0517578125e-05, -0.0019382601603865623, 0.0, -0.3498363494873047, -1.52587890625e-05, -0.0017546308226883411, -0.0002574920654296875, -0.0004197359085083008, -0.00014519691467285156, -0.0022813081741333008, -0.00030517578125, -7.62939453125e-06, -0.008462751284241676, -2.6702880859375e-05], "choice_history": [97, 283, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 93, 274, "Attack", "<EOS>", 346, 61, 246, "Action", "Tag", "<EOS>", "Change", "Target", "<EOS>", 346, 61, 239, "Character", "Selector", "<EOS>", "Not", "Current", "Target", "<EOS>", "Enemy", "Player", "<EOS>", "Random", "Picker", "<EOS>", "Self", "Selector", "<EOS>", "And", "<EOS>", 347, 84, 315, "One", "In", "<EOS>", "2", "<EOS>", 84, 315, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", "0", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "divine_shield", "_type": "keyword"}, {"hole2": [{"hole7": [{"hole1": 2, "_type": "Template74", "hole0": "OneIn"}, {"hole1": 0, "_type": "Template74", "hole0": "OpponentMinionCountIsGreaterThan"}], "hole6": "And", "hole2": [{"hole1": "NotCurrentTarget", "hole3": "EnemyPlayer", "_type": "Template39", "hole0": "CharacterSelector", "hole6": "RandomPicker"}], "hole0": "ActionTag", "_type": "Template39", "hole3": "SelfSelector", "hole1": "ChangeTarget"}], "_type": "Template45", "hole0": "Attack"}], "_type": "Template68", "hole0": "Minion", "hole2": 8}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Deathlord", "hole2": "ALL"}], "hole0": "Deathlord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(Bounce(),\n            MinionSelector(picker=RandomPicker())))\n", "score": -4.551052616981167, "score_history": [-2.47955322265625e-05, -2.288818359375e-05, -2.896749174396973e-05, -5.4001808166503906e-05, -9.504146873950958e-07, -1.2993811651540454e-05, -4.291525328881107e-06, -3.814697265625e-06, -0.001659393310546875, -1.1444091796875e-05, -2.1457672119140625e-06, 0.0, -1.728534698486328e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -0.000255584716796875, 0.0, -1.33514404296875e-05, 0.0, -0.00016415119171142578, 0.0, -2.09808349609375e-05, -0.0003414154052734375, -4.9591064453125e-05, 0.0, -2.2649763195659034e-05, -5.7220458984375e-06, -3.576278118089249e-07, -0.004568696022033691, -5.960462772236497e-07, -2.0131635665893555, -0.0027723312377929688, -2.002800941467285, -0.1699693351984024, -7.510169325541938e-06, -0.0029695387929677963, -5.352497100830078e-05, 0.0, -0.14439010620117188, -0.00019073486328125, 0.0, -0.19091331958770752, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.016214728355407715, -3.826618194580078e-05, -3.576278118089249e-07], "choice_history": [97, 283, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 353, 92, 255, "Bounce", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"hole2": "MinionSelector", "_type": "Template41", "hole0": "Bounce", "hole4": [{"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "picker", "_type": "keyword"}]}], "_type": "Template68", "hole0": "Minion", "hole2": 8}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Deathlord", "hole2": "ALL"}], "hole0": "Deathlord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, divine_shield=True, buffs=[Buff(CantAttack())])\n", "score": -4.744951541739965, "score_history": [-2.47955322265625e-05, -2.288818359375e-05, -2.896749174396973e-05, -5.4001808166503906e-05, -9.504146873950958e-07, -1.2993811651540454e-05, -4.291525328881107e-06, -3.814697265625e-06, -0.001659393310546875, -1.1444091796875e-05, -2.1457672119140625e-06, 0.0, -1.728534698486328e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -0.000255584716796875, 0.0, -1.33514404296875e-05, 0.0, -0.00016415119171142578, 0.0, -2.09808349609375e-05, -0.0003414154052734375, -4.9591064453125e-05, 0.0, -2.2649763195659034e-05, -5.7220458984375e-06, -3.576278118089249e-07, -0.004568696022033691, -5.960462772236497e-07, -0.16608333587646484, -0.031935691833496094, -1.9073486328125e-06, -0.23991870880126953, -1.9073486328125e-06, -0.00014495849609375, -1.33514404296875e-05, -0.0012553930282592773, 0.0, -2.8043994903564453, -9.72747802734375e-05, -1.440322756767273, -5.7220458984375e-06, -0.023235321044921875, -0.000362396240234375, -8.392333984375e-05, -0.0011138916015625, -0.0007801055908203125, -0.02599174529314041, -0.0017114795045927167, -1.1563301086425781e-05], "choice_history": [97, 283, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "buffs", "<EOS>", 19, 169, 346, 69, 290, "Cant", "Attack", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "divine_shield", "_type": "keyword"}, {"value": {"elts": [{"_type": "Template54", "hole0": "CantAttack"}], "_type": "List"}, "arg": "buffs", "_type": "keyword"}], "_type": "Template68", "hole0": "Minion", "hole2": 8}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Deathlord", "hole2": "ALL"}], "hole0": "Deathlord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, divine_shield=True, effects=[Effect(Attack(),\n            ActionTag(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]),\n            SelfSelector()))])\n", "score": -4.7752995343059865, "score_history": [-2.47955322265625e-05, -2.288818359375e-05, -2.896749174396973e-05, -5.4001808166503906e-05, -9.504146873950958e-07, -1.2993811651540454e-05, -4.291525328881107e-06, -3.814697265625e-06, -0.001659393310546875, -1.1444091796875e-05, -2.1457672119140625e-06, 0.0, -1.728534698486328e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -0.000255584716796875, 0.0, -1.33514404296875e-05, 0.0, -0.00016415119171142578, 0.0, -2.09808349609375e-05, -0.0003414154052734375, -4.9591064453125e-05, 0.0, -2.2649763195659034e-05, -5.7220458984375e-06, -3.576278118089249e-07, -0.004568696022033691, -5.960462772236497e-07, -0.16608333587646484, -0.031935691833496094, -1.9073486328125e-06, -0.23991870880126953, -1.9073486328125e-06, -0.00014495849609375, -1.33514404296875e-05, -0.0012553930282592773, 0.0, -1.6497812271118164, -0.005368232727050781, -0.10666525363922119, -4.00543212890625e-05, -1.9073486328125e-06, -1.1657514572143555, -0.00011444091796875, -0.0001621246337890625, -1.9073486328125e-06, -0.2811269760131836, -0.0017714500427246094, -3.3378591979271732e-06, -0.0002079010009765625, -0.024860382080078125, -0.0004730224609375, -3.635883331298828e-05, -0.3004797697067261, -4.172325134277344e-06, -0.0016603731783106923, -3.814697265625e-06, -0.009938240051269531, -0.0002956390380859375, -4.0531076592742465e-06, -0.08047708123922348, -1.9073486328125e-06, -0.00011444091796875, -1.1444091796875e-05, -0.6990913152694702, -1.5377907402580604e-05, 0.0], "choice_history": [97, 283, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 93, 274, "Attack", "<EOS>", 346, 45, 150, 21, 174, "Action", "Tag", "<EOS>", 347, 55, 215, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "divine_shield", "_type": "keyword"}, {"hole2": [{"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 1, "hole3": 1, "_type": "Template21", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Call"}], "_type": "Template45", "hole0": "Attack"}], "_type": "Template68", "hole0": "Minion", "hole2": 8}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Deathlord", "hole2": "ALL"}], "hole0": "Deathlord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, divine_shield=True, effects=[Effect(TurnEnded(),\n            ActionTag(Give(ChangeHealth(3)), MinionSelector(picker=\n            RandomPicker())))])\n", "score": -4.882021969503249, "score_history": [-2.47955322265625e-05, -2.288818359375e-05, -2.896749174396973e-05, -5.4001808166503906e-05, -9.504146873950958e-07, -1.2993811651540454e-05, -4.291525328881107e-06, -3.814697265625e-06, -0.001659393310546875, -1.1444091796875e-05, -2.1457672119140625e-06, 0.0, -1.728534698486328e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -0.000255584716796875, 0.0, -1.33514404296875e-05, 0.0, -0.00016415119171142578, 0.0, -2.09808349609375e-05, -0.0003414154052734375, -4.9591064453125e-05, 0.0, -2.2649763195659034e-05, -5.7220458984375e-06, -3.576278118089249e-07, -0.004568696022033691, -5.960462772236497e-07, -0.16608333587646484, -0.031935691833496094, -1.9073486328125e-06, -0.23991870880126953, -1.9073486328125e-06, -0.00014495849609375, -1.33514404296875e-05, -0.0012553930282592773, 0.0, -0.31732177734375, -2.6735124588012695, -0.010293595492839813, -0.0015245676040649414, -1.1920928244535389e-07, -0.016932476311922073, -0.0024889616761356592, 0.0, -0.7928752899169922, -0.0008535385131835938, -0.5452162027359009, -1.9073468138230965e-06, -0.0006264448165893555, -7.748603820800781e-06, 0.0, -0.00081634521484375, -0.0001697540283203125, 0.0, -0.06270203739404678, -3.933906555175781e-06, -1.9073486328125e-05, 0.0, -0.009798169136047363, -2.1457672119140625e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 90, 221, "Turn", "Ended", "<EOS>", "Give", "<EOS>", 346, 81, 311, "3", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "divine_shield", "_type": "keyword"}, {"hole5": [{"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "picker", "_type": "keyword"}], "hole2": [{"_type": "Template71", "hole0": 3}], "hole0": "TurnEnded", "_type": "Template25", "hole3": "MinionSelector", "hole1": "Give"}], "_type": "Template68", "hole0": "Minion", "hole2": 8}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Deathlord", "hole2": "ALL"}], "hole0": "Deathlord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, divine_shield=True, effects=[Effect(DidDamage(),\n            ActionTag(KillSelector(), Adjacent(EnemyPlayer())))])\n", "score": -4.915046084527376, "score_history": [-2.47955322265625e-05, -2.288818359375e-05, -2.896749174396973e-05, -5.4001808166503906e-05, -9.504146873950958e-07, -1.2993811651540454e-05, -4.291525328881107e-06, -3.814697265625e-06, -0.001659393310546875, -1.1444091796875e-05, -2.1457672119140625e-06, 0.0, -1.728534698486328e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -0.000255584716796875, 0.0, -1.33514404296875e-05, 0.0, -0.00016415119171142578, 0.0, -2.09808349609375e-05, -0.0003414154052734375, -4.9591064453125e-05, 0.0, -2.2649763195659034e-05, -5.7220458984375e-06, -3.576278118089249e-07, -0.004568696022033691, -5.960462772236497e-07, -0.16608333587646484, -0.031935691833496094, -1.9073486328125e-06, -0.23991870880126953, -1.9073486328125e-06, -0.00014495849609375, -1.33514404296875e-05, -0.0012553930282592773, 0.0, -0.31732177734375, -0.3720541000366211, -0.08240591734647751, -0.03955650329589844, -0.0002593994140625, -0.2070380449295044, -0.11324465274810791, 0.0, -1.3896807432174683, -0.5664215087890625, 0.0, -0.13805294036865234, 0.0, -1.240081548690796, -0.002091169124469161, -1.9073486328125e-06], "choice_history": [97, 283, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 90, 218, "Did", "Damage", "<EOS>", "Kill", "Selector", "<EOS>", "Adjacent", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "divine_shield", "_type": "keyword"}, {"hole1": "KillSelector", "hole3": "Adjacent", "_type": "Template25", "hole0": "DidDamage", "hole4": [{"_type": "Template79", "hole0": "EnemyPlayer"}]}], "_type": "Template68", "hole0": "Minion", "hole2": 8}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Deathlord", "hole2": "ALL"}], "hole0": "Deathlord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=<UNK>)), PlayerSelector(\n            BothPlayer())))\n", "score": -4.969836951197692, "score_history": [-2.47955322265625e-05, -2.288818359375e-05, -2.896749174396973e-05, -5.4001808166503906e-05, -9.504146873950958e-07, -1.2993811651540454e-05, -4.291525328881107e-06, -3.814697265625e-06, -0.001659393310546875, -1.1444091796875e-05, -2.1457672119140625e-06, 0.0, -1.728534698486328e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -0.000255584716796875, 0.0, -1.33514404296875e-05, 0.0, -0.00016415119171142578, 0.0, -2.09808349609375e-05, -0.0003414154052734375, -4.9591064453125e-05, 0.0, -2.2649763195659034e-05, -5.7220458984375e-06, -3.576278118089249e-07, -0.004568696022033691, -5.960462772236497e-07, -2.0131635665893555, -0.0027723312377929688, -0.5781536102294922, -0.455226331949234, -0.0016896476736292243, -5.4836273193359375e-05, -0.0022640228271484375, -0.15277099609375, -0.0002765655517578125, -0.00026619413984008133, -8.213520050048828e-05, -8.976459503173828e-05, -0.0014820098876953125, 0.0, -0.000152587890625, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0002543926239013672, -0.000133514404296875, -0.010951042175292969, -1.1444091796875e-05, -0.004390716552734375, -3.814697265625e-06, -0.0019092559814453125, 0.0, -0.7020461559295654, -1.9430961401667446e-05, -0.001809835433959961, 0.0, -3.576278118089249e-07, -3.814697265625e-06, -9.5367431640625e-05, 0.0, -1.0320727825164795, -0.00016021716874092817, -1.9073486328125e-06], "choice_history": [97, 283, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 353, 92, 259, "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "<UNK>", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Both", "Player", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"hole1": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "<UNK>", "_type": "Name"}}], "hole3": [{"_type": "Template79", "hole0": "BothPlayer"}], "_type": "Template41", "hole0": "AddCard", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 8}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Deathlord", "hole2": "ALL"}], "hole0": "Deathlord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector(Adjacent())))\n", "score": -5.066010883893533, "score_history": [-2.47955322265625e-05, -2.288818359375e-05, -2.896749174396973e-05, -5.4001808166503906e-05, -9.504146873950958e-07, -1.2993811651540454e-05, -4.291525328881107e-06, -3.814697265625e-06, -0.001659393310546875, -1.1444091796875e-05, -2.1457672119140625e-06, 0.0, -1.728534698486328e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -0.000255584716796875, 0.0, -1.33514404296875e-05, 0.0, -0.00016415119171142578, 0.0, -2.09808349609375e-05, -0.0003414154052734375, -4.9591064453125e-05, 0.0, -2.2649763195659034e-05, -5.7220458984375e-06, -3.576278118089249e-07, -0.004568696022033691, -5.960462772236497e-07, -2.0131635665893555, -0.0027723312377929688, -0.5781536102294922, -0.455226331949234, -0.0016896476736292243, -5.4836273193359375e-05, -0.0022640228271484375, -0.15277099609375, -0.0002765655517578125, -0.00026619413984008133, -8.213520050048828e-05, -8.976459503173828e-05, -0.0014820098876953125, 0.0, -0.000152587890625, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0002543926239013672, -0.000133514404296875, -0.010951042175292969, -1.1444091796875e-05, -0.004390716552734375, -3.814697265625e-06, -0.0019092559814453125, 0.0, -0.8388326168060303, -7.987022399902344e-06, -0.0005340576171875, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.9073486328125e-06, -0.000152587890625, 0.0, -0.9919939041137695, -0.000860383384861052], "choice_history": [97, 283, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 353, 92, 259, "Add", "Card", "<EOS>", 346, 71, 293, "Card", "Query", "<EOS>", "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", "source_list", "<EOS>", 21, 174, "spare_part_list", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Adjacent", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"hole1": [{"hole2": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST", "_type": "Attribute"}, "hole0": "CardQuery", "_type": "Template56", "hole3": "source_list", "hole1": "source", "hole4": {"id": "spare_part_list", "_type": "Name"}}], "hole3": [{"_type": "Template79", "hole0": "Adjacent"}], "_type": "Template41", "hole0": "AddCard", "hole2": "PlayerSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 8}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Deathlord", "hole2": "ALL"}], "hole0": "Deathlord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, divine_shield=True, effects=[Effect(Attack(),\n            ActionTag(ChangeTarget(CharacterSelector(NotCurrentTarget(),\n            EnemyPlayer(), RandomPicker())), SelfSelector(), And(ManaCost(2\n            ), BothPlayer())))])\n", "score": -5.2853834334233625, "score_history": [-2.47955322265625e-05, -2.288818359375e-05, -2.896749174396973e-05, -5.4001808166503906e-05, -9.504146873950958e-07, -1.2993811651540454e-05, -4.291525328881107e-06, -3.814697265625e-06, -0.001659393310546875, -1.1444091796875e-05, -2.1457672119140625e-06, 0.0, -1.728534698486328e-05, 0.0, -0.00019073486328125, -3.814697265625e-06, -0.000255584716796875, 0.0, -1.33514404296875e-05, 0.0, -0.00016415119171142578, 0.0, -2.09808349609375e-05, -0.0003414154052734375, -4.9591064453125e-05, 0.0, -2.2649763195659034e-05, -5.7220458984375e-06, -3.576278118089249e-07, -0.004568696022033691, -5.960462772236497e-07, -0.16608333587646484, -0.031935691833496094, -1.9073486328125e-06, -0.23991870880126953, -1.9073486328125e-06, -0.00014495849609375, -1.33514404296875e-05, -0.0012553930282592773, 0.0, -1.6497812271118164, -0.005368232727050781, -0.10666525363922119, -4.00543212890625e-05, -1.9073486328125e-06, -0.8944339752197266, -0.0132904052734375, -0.003980278968811035, -0.0006371736526489258, -5.996227264404297e-05, -0.045928001403808594, -0.006622433662414551, -0.000141143798828125, -1.1444091796875e-05, -0.015232086181640625, -0.011074066162109375, -0.01705944538116455, -0.0004885562229901552, 0.0, -0.024414028972387314, -0.011716372333467007, -0.0017049312591552734, -2.47955322265625e-05, -0.0036867856979370117, -0.0003681182861328125, -5.7220458984375e-06, -0.01700592041015625, -6.532669067382812e-05, -1.4305104514278355e-06, -0.29335665702819824, -1.9073486328125e-06, 0.0, -0.034827232360839844, -7.069110870361328e-05, -7.82012939453125e-05, -0.0008182525634765625, -5.340576171875e-05, -1.1814184188842773, -0.008260130882263184, -1.9073486328125e-06, -0.004568064585328102, 0.0, -0.22992229461669922, -7.62939453125e-06, -0.2553246021270752, -2.7179718017578125e-05, -1.9073486328125e-06], "choice_history": [97, 283, "Deathlord", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 93, 274, "Attack", "<EOS>", 346, 61, 246, "Action", "Tag", "<EOS>", "Change", "Target", "<EOS>", 346, 61, 239, "Character", "Selector", "<EOS>", "Not", "Current", "Target", "<EOS>", "Enemy", "Player", "<EOS>", "Random", "Picker", "<EOS>", "Self", "Selector", "<EOS>", "And", "<EOS>", 347, 84, 315, "Mana", "Cost", "<EOS>", "2", "<EOS>", 88, 325, "Both", "Player", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "divine_shield", "_type": "keyword"}, {"hole2": [{"hole7": [{"hole1": 2, "_type": "Template74", "hole0": "ManaCost"}, {"_type": "Template79", "hole0": "BothPlayer"}], "hole6": "And", "hole2": [{"hole1": "NotCurrentTarget", "hole3": "EnemyPlayer", "_type": "Template39", "hole0": "CharacterSelector", "hole6": "RandomPicker"}], "hole0": "ActionTag", "_type": "Template39", "hole3": "SelfSelector", "hole1": "ChangeTarget"}], "_type": "Template45", "hole0": "Attack"}], "_type": "Template68", "hole0": "Minion", "hole2": 8}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Deathlord", "hole2": "ALL"}], "hole0": "Deathlord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class NerubarWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(\n            BothPlayer(), HasBattlecry()))])\n", "beams": [{"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, stealth=True)\n", "score": -0.7513835266008684, "score_history": [-9.1552734375e-05, -7.62939453125e-06, -0.005436408799141645, -1.5854762750677764e-05, -3.099436753473128e-06, -9.490177035331726e-07, -1.1444091796875e-05, -1.1920928244535389e-07, 0.0, -0.018593788146972656, -5.14984130859375e-05, -1.0728830375228426e-06, -2.15768777707126e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -1.5497207641601562e-05, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -0.00311279296875, -2.47955322265625e-05, -1.1920922133867862e-06, -7.986990567587782e-06, 0.0, 0.0, -0.6407654285430908, 0.0, -0.0036039352416992188, -3.4332275390625e-05, -0.07953715324401855, -1.9073486328125e-06], "choice_history": [97, 283, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "stealth", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "stealth"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Nerub'ar Weblord", "hole2": "ALL"}], "hole0": "Nerub'arWeblord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_targetable=True)\n", "score": -2.741093142308266, "score_history": [-9.1552734375e-05, -7.62939453125e-06, -0.005436408799141645, -1.5854762750677764e-05, -3.099436753473128e-06, -9.490177035331726e-07, -1.1444091796875e-05, -1.1920928244535389e-07, 0.0, -0.018593788146972656, -5.14984130859375e-05, -1.0728830375228426e-06, -2.15768777707126e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -1.5497207641601562e-05, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -0.00311279296875, -2.47955322265625e-05, -1.1920922133867862e-06, -7.986990567587782e-06, 0.0, 0.0, -2.636378049850464, 0.0, -0.014790534973144531, -0.000148773193359375, -0.06233501434326172, 0.0], "choice_history": [97, 283, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "spell_targetable"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Nerub'ar Weblord", "hole2": "ALL"}], "hole0": "Nerub'arWeblord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "score": -2.9184508159532854, "score_history": [-9.1552734375e-05, -7.62939453125e-06, -0.005436408799141645, -1.5854762750677764e-05, -3.099436753473128e-06, -9.490177035331726e-07, -1.1444091796875e-05, -1.1920928244535389e-07, 0.0, -0.018593788146972656, -5.14984130859375e-05, -1.0728830375228426e-06, -2.15768777707126e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -1.5497207641601562e-05, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -0.00311279296875, -2.47955322265625e-05, -1.1920922133867862e-06, -7.986990567587782e-06, 0.0, 0.0, -2.3037126064300537, 0.0, -0.0019245147705078125, -0.0002384185791015625, -0.5851325988769531, -1.9073486328125e-06], "choice_history": [97, 283, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "windfury"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Nerub'ar Weblord", "hole2": "ALL"}], "hole0": "Nerub'arWeblord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "score": -3.1525559261217424, "score_history": [-9.1552734375e-05, -7.62939453125e-06, -0.005436408799141645, -1.5854762750677764e-05, -3.099436753473128e-06, -9.490177035331726e-07, -1.1444091796875e-05, -1.1920928244535389e-07, 0.0, -0.018593788146972656, -5.14984130859375e-05, -1.0728830375228426e-06, -2.15768777707126e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -1.5497207641601562e-05, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -0.00311279296875, -2.47955322265625e-05, -1.1920922133867862e-06, -7.986990567587782e-06, 0.0, 0.0, -2.3037126064300537, 0.0, -0.0019245147705078125, -0.0002384185791015625, -0.819239616394043, 0.0], "choice_history": [97, 283, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "windfury"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Nerub'ar Weblord", "hole2": "ALL"}], "hole0": "Nerub'arWeblord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, stealth=True)\n", "score": -3.253643734730751, "score_history": [-9.1552734375e-05, -7.62939453125e-06, -0.005436408799141645, -1.5854762750677764e-05, -3.099436753473128e-06, -9.490177035331726e-07, -1.1444091796875e-05, -1.1920928244535389e-07, 0.0, -0.018593788146972656, -5.14984130859375e-05, -1.0728830375228426e-06, -2.15768777707126e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -1.5497207641601562e-05, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -0.00311279296875, -2.47955322265625e-05, -1.1920922133867862e-06, -7.986990567587782e-06, 0.0, 0.0, -0.6407654285430908, 0.0, -0.0036039352416992188, -3.4332275390625e-05, -2.581799268722534, 0.0], "choice_history": [97, 283, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "stealth", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "stealth"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Nerub'ar Weblord", "hole2": "ALL"}], "hole0": "Nerub'arWeblord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(MinionSelector())))\n", "score": -3.7395396663641662, "score_history": [-9.1552734375e-05, -7.62939453125e-06, -0.005436408799141645, -1.5854762750677764e-05, -3.099436753473128e-06, -9.490177035331726e-07, -1.1444091796875e-05, -1.1920928244535389e-07, 0.0, -0.018593788146972656, -5.14984130859375e-05, -1.0728830375228426e-06, -2.15768777707126e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -1.5497207641601562e-05, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -0.00311279296875, -2.47955322265625e-05, -1.1920922133867862e-06, -7.986990567587782e-06, 0.0, 0.0, -2.1393797397613525, -2.0265579223632812e-06, -0.09745979309082031, -0.02788543701171875, -0.03264112025499344, 0.0, -0.012724876403808594, -1.1682510375976562e-05, -1.1444091796875e-05, -3.4332275390625e-05, -5.7220458984375e-06, -0.2158966362476349, -0.0002668834349606186, -0.0006542205810546875, -1.9073486328125e-06, 0.0, -0.013268589973449707, -0.008469581604003906, 0.0, 0.0, -0.004137992858886719, -3.814697265625e-06, -1.1229523420333862, -0.03629063442349434, -1.1920928244535389e-07], "choice_history": [97, 283, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "deathrattle", "<EOS>", 27, 246, "Deathrattle", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Thaddius", "<EOS>", "Player", "Selector", "<EOS>", "In", "Graveyard", "<EOS>", 346, 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"hole7": [{"_type": "Template79", "hole0": "MinionSelector"}], "hole6": "InGraveyard", "hole2": [{"_type": "Template79", "hole0": "Thaddius"}], "hole0": "Deathrattle", "_type": "Template39", "hole3": "PlayerSelector", "hole1": "Summon"}, "_type": "Template50", "hole0": 1, "hole2": "deathrattle"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Nerub'ar Weblord", "hole2": "ALL"}], "hole0": "Nerub'arWeblord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, PRIEST=True)\n", "score": -4.026311261929536, "score_history": [-9.1552734375e-05, -7.62939453125e-06, -0.005436408799141645, -1.5854762750677764e-05, -3.099436753473128e-06, -9.490177035331726e-07, -1.1444091796875e-05, -1.1920928244535389e-07, 0.0, -0.018593788146972656, -5.14984130859375e-05, -1.0728830375228426e-06, -2.15768777707126e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -1.5497207641601562e-05, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -0.00311279296875, -2.47955322265625e-05, -1.1920922133867862e-06, -7.986990567587782e-06, 0.0, 0.0, -3.970623254776001, -1.1920928244535389e-07, -0.016503334045410156, -0.0003719329833984375, -0.011371850967407227, 0.0], "choice_history": [97, 283, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "PRIEST", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "PRIEST"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Nerub'ar Weblord", "hole2": "ALL"}], "hole0": "Nerub'arWeblord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True)\n", "score": -4.113878472126991, "score_history": [-9.1552734375e-05, -7.62939453125e-06, -0.005436408799141645, -1.5854762750677764e-05, -3.099436753473128e-06, -9.490177035331726e-07, -1.1444091796875e-05, -1.1920928244535389e-07, 0.0, -0.018593788146972656, -5.14984130859375e-05, -1.0728830375228426e-06, -2.15768777707126e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -1.5497207641601562e-05, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -0.00311279296875, -2.47955322265625e-05, -1.1920922133867862e-06, -7.986990567587782e-06, 0.0, 0.0, -3.9800312519073486, 0.0, -0.0007534027099609375, -0.000202178955078125, -0.10544896125793457, -1.9073486328125e-06], "choice_history": [97, 283, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Nerub'ar Weblord", "hole2": "ALL"}], "hole0": "Nerub'arWeblord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Feugen())))\n", "score": -4.199852640072088, "score_history": [-9.1552734375e-05, -7.62939453125e-06, -0.005436408799141645, -1.5854762750677764e-05, -3.099436753473128e-06, -9.490177035331726e-07, -1.1444091796875e-05, -1.1920928244535389e-07, 0.0, -0.018593788146972656, -5.14984130859375e-05, -1.0728830375228426e-06, -2.15768777707126e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -1.5497207641601562e-05, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -0.00311279296875, -2.47955322265625e-05, -1.1920922133867862e-06, -7.986990567587782e-06, 0.0, 0.0, -2.1393797397613525, -2.0265579223632812e-06, -0.09745979309082031, -0.02788543701171875, -0.03264112025499344, 0.0, -0.012724876403808594, -1.1682510375976562e-05, -1.1444091796875e-05, -3.4332275390625e-05, -5.7220458984375e-06, -0.2158966362476349, -0.0002668834349606186, -0.0006542205810546875, -1.9073486328125e-06, 0.0, -0.013268589973449707, -0.008469581604003906, 0.0, 0.0, -0.004137992858886719, -3.814697265625e-06, -1.6169397830963135, -0.002616286277770996], "choice_history": [97, 283, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "deathrattle", "<EOS>", 27, 246, "Deathrattle", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Thaddius", "<EOS>", "Player", "Selector", "<EOS>", "In", "Graveyard", "<EOS>", 346, 88, 325, "Feugen", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"hole7": [{"_type": "Template79", "hole0": "Feugen"}], "hole6": "InGraveyard", "hole2": [{"_type": "Template79", "hole0": "Thaddius"}], "hole0": "Deathrattle", "_type": "Template39", "hole3": "PlayerSelector", "hole1": "Summon"}, "_type": "Template50", "hole0": 1, "hole2": "deathrattle"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Nerub'ar Weblord", "hole2": "ALL"}], "hole0": "Nerub'arWeblord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, condition=True)\n", "score": -4.748216016562303, "score_history": [-9.1552734375e-05, -7.62939453125e-06, -0.005436408799141645, -1.5854762750677764e-05, -3.099436753473128e-06, -9.490177035331726e-07, -1.1444091796875e-05, -1.1920928244535389e-07, 0.0, -0.018593788146972656, -5.14984130859375e-05, -1.0728830375228426e-06, -2.15768777707126e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -1.5497207641601562e-05, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -0.00311279296875, -2.47955322265625e-05, -1.1920922133867862e-06, -7.986990567587782e-06, 0.0, 0.0, -4.591339588165283, -3.4570634852570947e-06, -0.009510040283203125, -0.0001163482666015625, -0.11980581283569336, 0.0], "choice_history": [97, 283, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "condition", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "condition"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Nerub'ar Weblord", "hole2": "ALL"}], "hole0": "Nerub'arWeblord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, deathrattle=True)\n", "score": -4.924874050892861, "score_history": [-9.1552734375e-05, -7.62939453125e-06, -0.005436408799141645, -1.5854762750677764e-05, -3.099436753473128e-06, -9.490177035331726e-07, -1.1444091796875e-05, -1.1920928244535389e-07, 0.0, -0.018593788146972656, -5.14984130859375e-05, -1.0728830375228426e-06, -2.15768777707126e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -1.5497207641601562e-05, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -0.00311279296875, -2.47955322265625e-05, -1.1920922133867862e-06, -7.986990567587782e-06, 0.0, 0.0, -2.1393797397613525, -2.0265579223632812e-06, -2.729541778564453, -0.0001163482666015625, -0.02839338779449463, 0.0], "choice_history": [97, 283, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "deathrattle", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "deathrattle"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Nerub'ar Weblord", "hole2": "ALL"}], "hole0": "Nerub'arWeblord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, divine_shield=True)\n", "score": -5.243699653424287, "score_history": [-9.1552734375e-05, -7.62939453125e-06, -0.005436408799141645, -1.5854762750677764e-05, -3.099436753473128e-06, -9.490177035331726e-07, -1.1444091796875e-05, -1.1920928244535389e-07, 0.0, -0.018593788146972656, -5.14984130859375e-05, -1.0728830375228426e-06, -2.15768777707126e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -1.5497207641601562e-05, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -0.00311279296875, -2.47955322265625e-05, -1.1920922133867862e-06, -7.986990567587782e-06, 0.0, 0.0, -5.047034740447998, -1.1920928244535389e-07, -0.14577960968017578, -0.0002613067626953125, -0.02318120002746582, -1.9073486328125e-06], "choice_history": [97, 283, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "divine_shield"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Nerub'ar Weblord", "hole2": "ALL"}], "hole0": "Nerub'arWeblord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, enrage=[Aura(ManaChange(-3), CardSelector(\n            condition=IsType(MINION_TYPE.DRAGON)))])\n", "score": -5.260369909637085, "score_history": [-9.1552734375e-05, -7.62939453125e-06, -0.005436408799141645, -1.5854762750677764e-05, -3.099436753473128e-06, -9.490177035331726e-07, -1.1444091796875e-05, -1.1920928244535389e-07, 0.0, -0.018593788146972656, -5.14984130859375e-05, -1.0728830375228426e-06, -2.15768777707126e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -1.5497207641601562e-05, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -0.00311279296875, -2.47955322265625e-05, -1.1920922133867862e-06, -7.986990567587782e-06, 0.0, 0.0, -3.2266557216644287, 0.0, -0.12381172180175781, -0.20677566528320312, -0.006654977332800627, -1.52587890625e-05, -0.0008563995361328125, -0.3657712936401367, -0.00122833251953125, -2.86102294921875e-05, -5.7220458984375e-06, -0.012168205343186855, -0.00047075748443603516, -0.0001087188720703125, -5.7220458984375e-06, -0.0017795562744140625, -0.0003719329833984375, -8.0108642578125e-05, -0.0001392364501953125, -1.9073486328125e-06, -0.6702214479446411, -5.7220458984375e-06, -0.0035915374755859375, -0.21300601959228516, -0.00024485407629981637, -0.0037993143778294325, 0.0, -1.9073486328125e-06, -0.0025501251220703125, 0.0, -3.62396240234375e-05, 0.0, -7.05718994140625e-05, -0.0001239776611328125, -0.3923473358154297, -2.3841855067985307e-07], "choice_history": [97, 283, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 45, 150, 21, 174, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "3", "<EOS>", 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"hole1": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Call"}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 1, "hole2": "enrage"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Nerub'ar Weblord", "hole2": "ALL"}], "hole0": "Nerub'arWeblord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, Turn=True)\n", "score": -5.366418941296608, "score_history": [-9.1552734375e-05, -7.62939453125e-06, -0.005436408799141645, -1.5854762750677764e-05, -3.099436753473128e-06, -9.490177035331726e-07, -1.1444091796875e-05, -1.1920928244535389e-07, 0.0, -0.018593788146972656, -5.14984130859375e-05, -1.0728830375228426e-06, -2.15768777707126e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -1.5497207641601562e-05, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -0.00311279296875, -2.47955322265625e-05, -1.1920922133867862e-06, -7.986990567587782e-06, 0.0, 0.0, -4.630084037780762, -0.009876251220703125, -0.24158287048339844, -0.000926971435546875, -0.4565061330795288, -1.9073486328125e-06], "choice_history": [97, 283, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "4", "<EOS>", "Turn", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "Turn"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Nerub'ar Weblord", "hole2": "ALL"}], "hole0": "Nerub'arWeblord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4)\n", "score": -8.549923522114781, "score_history": [-9.1552734375e-05, -7.62939453125e-06, -0.005436408799141645, -1.5854762750677764e-05, -3.099436753473128e-06, -9.490177035331726e-07, -1.1444091796875e-05, -1.1920928244535389e-07, 0.0, -0.018593788146972656, -5.14984130859375e-05, -1.0728830375228426e-06, -2.15768777707126e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -1.5497207641601562e-05, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -8.525556564331055, -1.1444091796875e-05, -3.6477376852417365e-05, -1.1920928244535389e-07, -2.491474151611328e-05, 0.0], "choice_history": [97, 283, "Nerub'ar", "Weblord", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Nerub'ar Weblord", "hole2": "ALL"}], "hole0": "Nerub'arWeblord", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=False)\n", "beams": [{"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n", "score": -0.2578994718507346, "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -0.00025018901214934886, -2.9921531677246094e-05, -3.576278118089249e-07, -2.963002771139145e-06, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -0.06888484954833984, -2.09808349609375e-05, -2.861018856492592e-06, -7.569787703687325e-05, -0.0004636049270629883, -1.9073486328125e-06, -3.516612196108326e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, 0.0, 0.0, -9.72747802734375e-05, -4.00543212890625e-05, -2.0265415514586493e-06, -5.07818695041351e-05, -0.004226088058203459, -7.152555099310121e-07, -0.18097317218780518, 0.0, -0.0019435882568359375, -6.29425048828125e-05, -0.0006215572357177734, -1.1920928244535389e-07], "choice_history": [97, 283, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "spell_targetable"}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "Spectral Knight", "hole2": "ALL"}], "hole0": "SpectralKnight", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, taunt=True)\n", "score": -3.4125939098313935, "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -0.00025018901214934886, -2.9921531677246094e-05, -3.576278118089249e-07, -2.963002771139145e-06, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -0.06888484954833984, -2.09808349609375e-05, -2.861018856492592e-06, -7.569787703687325e-05, -0.0004636049270629883, -1.9073486328125e-06, -3.516612196108326e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, 0.0, 0.0, -9.72747802734375e-05, -4.00543212890625e-05, -2.0265415514586493e-06, -5.07818695041351e-05, -0.004226088058203459, -7.152555099310121e-07, -2.863231658935547, 0.0, -0.000576019287109375, -3.62396240234375e-05, -0.47444987297058105, -2.0265579223632812e-06], "choice_history": [97, 283, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "6", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "taunt"}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "Spectral Knight", "hole2": "ALL"}], "hole0": "SpectralKnight", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, taunt=True)\n", "score": -3.9439668146089204, "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -0.00025018901214934886, -2.9921531677246094e-05, -3.576278118089249e-07, -2.963002771139145e-06, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -0.06888484954833984, -2.09808349609375e-05, -2.861018856492592e-06, -7.569787703687325e-05, -0.0004636049270629883, -1.9073486328125e-06, -3.516612196108326e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, 0.0, 0.0, -9.72747802734375e-05, -4.00543212890625e-05, -2.0265415514586493e-06, -5.07818695041351e-05, -0.004226088058203459, -7.152555099310121e-07, -2.863231658935547, 0.0, -0.000576019287109375, -3.62396240234375e-05, -1.0058248043060303, 0.0], "choice_history": [97, 283, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "6", "<EOS>", "taunt", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "taunt"}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "Spectral Knight", "hole2": "ALL"}], "hole0": "SpectralKnight", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n", "score": -4.248482437888363, "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -0.00025018901214934886, -2.9921531677246094e-05, -3.576278118089249e-07, -2.963002771139145e-06, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -3.8454675674438477, -0.000179290771484375, -1.1920928244535389e-07, -4.00543212890625e-05, -0.00014889240264892578, -1.9073486328125e-06, -0.0004207202873658389, 0.0, -0.013784408569335938, 0.0, -0.0024585723876953125, -1.1920928244535389e-07, -2.288818359375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0025196075439453125, -3.814697265625e-06, -0.32599925994873047, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -0.000152587890625, 0.0, -3.814697265625e-06, -0.00023651123046875, -9.34600830078125e-05, -1.1920851648028474e-06, -0.00014161060971673578, -0.007974386215209961, -2.3841830625315197e-06, -0.04778242111206055, 0.0, -0.0004444122314453125, -9.1552734375e-05, -0.00011837481724796817, -2.3841855067985307e-07], "choice_history": [97, 283, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "spell_targetable"}], "hole2": [{"hole2": "COMMON", "hole0": "Spectral Knight", "_type": "Template26", "hole3": "minion_type", "hole1": 5, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}}], "hole0": "SpectralKnight", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, True)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n", "score": -4.630742618166259, "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -0.00025018901214934886, -2.9921531677246094e-05, -3.576278118089249e-07, -2.963002771139145e-06, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -3.869290351867676, -0.026111602783203125, -3.814697265625e-05, -1.9073486328125e-06, -5.006785613659304e-06, -1.9073486328125e-05, -0.000118255615234375, -1.9073486328125e-06, -0.0010738372802734375, -0.0003681182861328125, -1.71661376953125e-05, -5.364403477869928e-06, -8.76188205438666e-05, -0.00032651377841830254, -7.82012939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768360213347478e-06, -3.814697265625e-06, -0.000179290771484375, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-05, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.254413604736328e-05, -8.96453857421875e-05, -0.48700809478759766, -5.7220458984375e-06, -6.29425048828125e-05, -0.0001773834228515625, -2.47955322265625e-05, 0.0, -0.0004978179931640625, 0.0, -0.0038738250732421875, 0.0, -3.814697265625e-06, -0.0024776458740234375, -0.0001201629638671875, -1.192088575407979e-06, -6.174850568640977e-05, -0.009892106056213379, -4.291525328881107e-06, -0.22704505920410156, 0.0, -0.0010318756103515625, -6.29425048828125e-05, -9.608268737792969e-05, -2.0265579223632812e-06], "choice_history": [97, 283, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Spectral", " ", "Knight", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "spell_targetable"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Spectral Knight", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "SpectralKnight", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, c=True)\n", "score": -4.7517437425569184, "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -0.00025018901214934886, -2.9921531677246094e-05, -3.576278118089249e-07, -2.963002771139145e-06, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -0.06888484954833984, -2.09808349609375e-05, -2.861018856492592e-06, -7.569787703687325e-05, -0.0004636049270629883, -1.9073486328125e-06, -3.516612196108326e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, 0.0, 0.0, -9.72747802734375e-05, -4.00543212890625e-05, -2.0265415514586493e-06, -5.07818695041351e-05, -0.004226088058203459, -7.152555099310121e-07, -4.246486186981201, 0.0, -0.33485984802246094, -0.000102996826171875, -0.09599661827087402, 0.0], "choice_history": [97, 283, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "6", "<EOS>", "c", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "c"}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "Spectral Knight", "hole2": "ALL"}], "hole0": "SpectralKnight", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(MinionHasKnight())))\n", "score": -4.89980799603034, "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -0.00025018901214934886, -2.9921531677246094e-05, -3.576278118089249e-07, -2.963002771139145e-06, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -0.06888484954833984, -2.09808349609375e-05, -2.861018856492592e-06, -7.569787703687325e-05, -0.0004636049270629883, -1.9073486328125e-06, -3.516612196108326e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, 0.0, 0.0, -9.72747802734375e-05, -4.00543212890625e-05, -2.0265415514586493e-06, -5.07818695041351e-05, -0.004226088058203459, -7.152555099310121e-07, -3.030782699584961, -3.0875205993652344e-05, -0.09996891021728516, -0.022859573364257812, -0.029896434396505356, -0.0001354217529296875, -0.002849578857421875, -0.00013589859008789062, -0.0049343109130859375, -5.7220458984375e-06, -9.5367431640625e-06, -0.120641328394413, -0.00018440521671436727, -0.002887725830078125, -3.814697265625e-06, 0.0, -0.06238079071044922, -0.008473396301269531, 0.0, 0.0, -0.000507354736328125, -2.47955322265625e-05, -1.1358565092086792, -0.2843269407749176, -0.01701611839234829, -0.001597762107849121], "choice_history": [97, 283, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "6", "<EOS>", "deathrattle", "<EOS>", 27, 246, "Deathrattle", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Thaddius", "<EOS>", "Player", "Selector", "<EOS>", "In", "Graveyard", "<EOS>", 346, 88, 325, "Minion", "Has", "Knight", "<EOS>"], "model_output": {"hole6": [{"hole1": 6, "hole3": {"hole7": [{"_type": "Template79", "hole0": "MinionHasKnight"}], "hole6": "InGraveyard", "hole2": [{"_type": "Template79", "hole0": "Thaddius"}], "hole0": "Deathrattle", "_type": "Template39", "hole3": "PlayerSelector", "hole1": "Summon"}, "_type": "Template50", "hole0": 4, "hole2": "deathrattle"}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "Spectral Knight", "hole2": "ALL"}], "hole0": "SpectralKnight", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, divine_shield=True)\n", "score": -4.927073904605223, "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -0.00025018901214934886, -2.9921531677246094e-05, -3.576278118089249e-07, -2.963002771139145e-06, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -0.06888484954833984, -2.09808349609375e-05, -2.861018856492592e-06, -7.569787703687325e-05, -0.0004636049270629883, -1.9073486328125e-06, -3.516612196108326e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, 0.0, 0.0, -9.72747802734375e-05, -4.00543212890625e-05, -2.0265415514586493e-06, -5.07818695041351e-05, -0.004226088058203459, -7.152555099310121e-07, -4.447733402252197, -1.1920928244535389e-07, -0.008744239807128906, -7.05718994140625e-05, -0.39622724056243896, -2.3841855067985307e-07], "choice_history": [97, 283, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "6", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "divine_shield"}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "Spectral Knight", "hole2": "ALL"}], "hole0": "SpectralKnight", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, True)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n", "score": -5.15172202023011, "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -0.00025018901214934886, -2.9921531677246094e-05, -3.576278118089249e-07, -2.963002771139145e-06, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -3.869290351867676, -0.026111602783203125, -3.814697265625e-05, -1.9073486328125e-06, -5.006785613659304e-06, -1.9073486328125e-05, -0.000118255615234375, -1.9073486328125e-06, -0.0010738372802734375, -0.0003681182861328125, -1.71661376953125e-05, -5.364403477869928e-06, -8.76188205438666e-05, -0.00032651377841830254, -7.82012939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768360213347478e-06, -3.814697265625e-06, -0.000179290771484375, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-05, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, 0.0, -3.254413604736328e-05, -8.96453857421875e-05, -0.9857273101806641, 0.0, -1.9073486328125e-05, -0.000186920166015625, -3.826618194580078e-05, 0.0, -0.0006105899810791016, 0.0, -0.0002460479736328125, 0.0, -3.814697265625e-06, -0.00080108642578125, -0.0001087188720703125, -8.344618436240125e-07, -9.262132516596466e-05, -0.010191917419433594, -2.0265558760002023e-06, -0.2537658214569092, 0.0, -0.0014743804931640625, -6.67572021484375e-05, -9.262561070499942e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Spectral", " ", "Knight", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "spell_targetable"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Spectral Knight", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "SpectralKnight", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n", "score": -5.4560349922491085, "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -0.00025018901214934886, -2.9921531677246094e-05, -3.576278118089249e-07, -2.963002771139145e-06, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -3.8454675674438477, -0.000179290771484375, -1.1920928244535389e-07, -4.00543212890625e-05, -0.00014889240264892578, -1.9073486328125e-06, -0.0004207202873658389, 0.0, -0.013784408569335938, 0.0, -0.0024585723876953125, -1.1920928244535389e-07, -2.288818359375e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0025196075439453125, -3.814697265625e-06, -1.531479835510254, 0.0, -8.0108642578125e-05, 0.0, -0.0001621246337890625, 0.0, -1.9073486328125e-06, -0.0001773834228515625, -9.72747802734375e-05, -1.4305010154203046e-06, -0.00012563870404846966, -0.007543206214904785, -1.7881377516459906e-06, -0.050254106521606445, 0.0, -0.0005397796630859375, -9.34600830078125e-05, -0.00010895728337345645, -2.3841855067985307e-07], "choice_history": [97, 283, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 358, 124, 222, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "spell_targetable"}], "hole2": [{"hole2": "COMMON", "hole0": "Spectral Knight", "_type": "Template26", "hole3": "minion_type", "hole1": 5, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}}], "hole0": "SpectralKnight", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, divine_shield=True)\n", "score": -5.684654542537068, "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -0.00025018901214934886, -2.9921531677246094e-05, -3.576278118089249e-07, -2.963002771139145e-06, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -0.06888484954833984, -2.09808349609375e-05, -2.861018856492592e-06, -7.569787703687325e-05, -0.0004636049270629883, -1.9073486328125e-06, -3.516612196108326e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, 0.0, 0.0, -9.72747802734375e-05, -4.00543212890625e-05, -2.0265415514586493e-06, -5.07818695041351e-05, -0.004226088058203459, -7.152555099310121e-07, -4.447733402252197, -1.1920928244535389e-07, -0.008744239807128906, -7.05718994140625e-05, -1.1538079977035522, -1.1920928244535389e-07], "choice_history": [97, 283, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "6", "<EOS>", "divine_shield", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "divine_shield"}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "Spectral Knight", "hole2": "ALL"}], "hole0": "SpectralKnight", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 4, spell_targetable=True)\n", "score": -5.77159864624376, "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -0.00025018901214934886, -2.9921531677246094e-05, -3.576278118089249e-07, -2.963002771139145e-06, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -0.06888484954833984, -2.09808349609375e-05, -2.861018856492592e-06, -7.569787703687325e-05, -0.0004636049270629883, -1.9073486328125e-06, -3.516612196108326e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, 0.0, 0.0, -9.72747802734375e-05, -4.00543212890625e-05, -2.0265415514586493e-06, -5.07818695041351e-05, -5.473976135253906, -5.960462772236497e-07, -0.21969926357269287, 0.0, -0.007323265075683594, -6.4849853515625e-05, -0.00046312808990478516, -1.1920928244535389e-07], "choice_history": [97, 283, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "4", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "spell_targetable"}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "Spectral Knight", "hole2": "ALL"}], "hole0": "SpectralKnight", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(SpectralSpider())))\n", "score": -5.920346348896764, "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -0.00025018901214934886, -2.9921531677246094e-05, -3.576278118089249e-07, -2.963002771139145e-06, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -0.06888484954833984, -2.09808349609375e-05, -2.861018856492592e-06, -7.569787703687325e-05, -0.0004636049270629883, -1.9073486328125e-06, -3.516612196108326e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, 0.0, 0.0, -9.72747802734375e-05, -4.00543212890625e-05, -2.0265415514586493e-06, -5.07818695041351e-05, -0.004226088058203459, -7.152555099310121e-07, -3.030782699584961, -3.0875205993652344e-05, -0.09996891021728516, -0.022859573364257812, -0.029896434396505356, -0.0001354217529296875, -0.002849578857421875, -0.00013589859008789062, -0.0049343109130859375, -5.7220458984375e-06, -9.5367431640625e-06, -0.120641328394413, -0.00018440521671436727, -0.002887725830078125, -3.814697265625e-06, 0.0, -0.06238079071044922, -0.008473396301269531, 0.0, 0.0, -0.000507354736328125, -2.47955322265625e-05, -1.0408259630203247, -1.4183341264724731, -0.0001755938574206084], "choice_history": [97, 283, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "6", "<EOS>", "deathrattle", "<EOS>", 27, 246, "Deathrattle", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Thaddius", "<EOS>", "Player", "Selector", "<EOS>", "In", "Graveyard", "<EOS>", 346, 88, 325, "Spectral", "Spider", "<EOS>"], "model_output": {"hole6": [{"hole1": 6, "hole3": {"hole7": [{"_type": "Template79", "hole0": "SpectralSpider"}], "hole6": "InGraveyard", "hole2": [{"_type": "Template79", "hole0": "Thaddius"}], "hole0": "Deathrattle", "_type": "Template39", "hole3": "PlayerSelector", "hole1": "Summon"}, "_type": "Template50", "hole0": 4, "hole2": "deathrattle"}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "Spectral Knight", "hole2": "ALL"}], "hole0": "SpectralKnight", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, stealth=True)\n", "score": -6.114643522830356, "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -0.00025018901214934886, -2.9921531677246094e-05, -3.576278118089249e-07, -2.963002771139145e-06, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -0.06888484954833984, -2.09808349609375e-05, -2.861018856492592e-06, -7.569787703687325e-05, -0.0004636049270629883, -1.9073486328125e-06, -3.516612196108326e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, 0.0, 0.0, -9.72747802734375e-05, -4.00543212890625e-05, -2.0265415514586493e-06, -5.07818695041351e-05, -0.004226088058203459, -7.152555099310121e-07, -5.810662269592285, 0.0, -0.07472610473632812, -4.00543212890625e-05, -0.15491700172424316, 0.0], "choice_history": [97, 283, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "6", "<EOS>", "stealth", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "stealth"}], "hole2": [{"hole1": 5, "_type": "Template31", "hole0": "Spectral Knight", "hole2": "ALL"}], "hole0": "SpectralKnight", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n", "score": -6.35667806925737, "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -0.00025018901214934886, -2.9921531677246094e-05, -3.576278118089249e-07, -2.963002771139145e-06, -9.5367431640625e-06, -1.1920928244535389e-07, 0.0, -5.850202560424805, -7.2479248046875e-05, -2.384185791015625e-06, -3.9458260289393365e-05, -3.7550926208496094e-05, 0.0, -2.47952248173533e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.15143871307373047, 0.0, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, 0.0, -9.5367431640625e-05, -7.43865966796875e-05, -7.152546004363103e-07, -0.00014244495832826942, -0.004472613334655762, -2.50339189733495e-06, -0.34305667877197266, 0.0, -0.005337715148925781, -5.91278076171875e-05, -0.001252889633178711, -1.1920928244535389e-07], "choice_history": [97, 283, "Spectral", "Knight", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 4, "hole2": "spell_targetable"}], "hole2": [{"hole1": 5, "hole3": "FREE", "_type": "Template34", "hole0": "Spectral Knight", "hole2": "ALL"}], "hole0": "SpectralKnight", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "beams": [{"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Give(ChangeHealth(3)), MinionSelector(IsType(\n            MINION_TYPE.MURLOC), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -3.0383335611852544, "score_history": [-0.6324806213378906, -0.00084686279296875, -0.0005626678466796875, -9.34600830078125e-05, -7.62939453125e-05, -0.012460595928132534, -0.00014256415306590497, -5.900707401451655e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.1920565157197416e-07, -9.417517503607087e-06, -2.384185791015625e-05, -4.9591064453125e-05, -0.02539348602294922, -8.0108642578125e-05, -2.3841855067985307e-07, -2.5510787963867188e-05, -2.2172682292875834e-05, -1.4185905456542969e-05, -1.0728830375228426e-06, 0.0, -0.00046372413635253906, -1.33514404296875e-05, -0.0001983642578125, 0.0, -1.9073486328125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, 0.0, -5.40018045285251e-05, -5.424022674560547e-05, -0.45508575439453125, -1.9073486328125e-06, -9.1552734375e-05, -4.017353057861328e-05, -0.09284782409667969, -0.3046245574951172, -0.22334885597229004, -0.0012031776132062078, -5.7220458984375e-06, -1.2472286224365234, -0.0030794143676757812, -0.02087906375527382, -9.357920498587191e-05, -0.00010132766328752041, -0.0002537965774536133, -2.3841855067985307e-07, -0.00565338134765625, -0.00441741943359375, -0.0012645721435546875, -0.0010013580322265625, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -0.0036145448684692383, -1.1205671398784034e-05, -1.9073486328125e-06, -9.5367431640625e-05, -5.14984130859375e-05, -2.145764483429957e-06, -8.22540732769994e-06, -7.748603820800781e-06, -3.576278118089249e-07], "choice_history": [96, 173, 358, 105, 152, "Wailing", "Soul", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "battlecry", "<EOS>", 29, 267, "Give", "<EOS>", 346, 81, 311, "3", "<EOS>", "Minion", "Selector", "<EOS>", 347, 74, 297, "MURLOC", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 122, 213, "3", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Wailing Soul", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MURLOC", "hole8": {"hole1": [{"_type": "Template71", "hole0": 3}], "hole3": [{"_type": "Template60", "hole0": "MURLOC"}, {"_type": "Template79", "hole0": "BothPlayer"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}, {"hole1": 5, "_type": "Template19", "hole0": 3}], "name": "WailingSoul", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(Silence()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -3.2655993469810056, "score_history": [-0.7692747116088867, -1.1444091796875e-05, -0.03409378230571747, -0.00016008615784812719, -0.00024613735149614513, -4.675239324569702e-07, -6.914137884450611e-06, -1.9073486328125e-06, -0.0009307861328125, -0.003952980041503906, -1.454287052154541, -1.2874520507466514e-05, -8.225440979003906e-06, -1.0251987987430766e-05, -6.67572021484375e-05, -1.1920928244535389e-07, 0.0, -0.019052505493164062, -2.0265579223632812e-06, -0.1255054920911789, -0.0048476457595825195, -0.0002994537353515625, -0.26165103912353516, -0.0001678466796875, -0.5475139021873474, -0.006526945624500513, -0.036727190017700195, -1.1920928244535389e-07, -8.344646857949556e-07, -4.518007335718721e-05, 0.0, -6.3300110923592e-05, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -8.106231689453125e-06, -7.152555099310121e-07], "choice_history": [97, 283, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 346, 88, 325, "Silence", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 3}], "hole2": [{"hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Wailing Soul", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "Silence"}]}], "hole0": "WailingSoul", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Give(Buff(ChangeAttack(2))), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -4.281796014137598, "score_history": [-0.6324806213378906, -0.00084686279296875, -0.0005626678466796875, -9.34600830078125e-05, -7.62939453125e-05, -0.012460595928132534, -0.00014256415306590497, -5.900707401451655e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.1920565157197416e-07, -9.417517503607087e-06, -2.384185791015625e-05, -4.9591064453125e-05, -0.02539348602294922, -8.0108642578125e-05, -2.3841855067985307e-07, -2.5510787963867188e-05, -2.2172682292875834e-05, -1.4185905456542969e-05, -1.0728830375228426e-06, 0.0, -0.00046372413635253906, -1.33514404296875e-05, -0.0001983642578125, 0.0, -1.9073486328125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, 0.0, -5.40018045285251e-05, -5.424022674560547e-05, -0.45508575439453125, -1.9073486328125e-06, -9.1552734375e-05, -4.017353057861328e-05, -0.09284782409667969, -0.3046245574951172, -0.22334885597229004, -0.0012031776132062078, -5.7220458984375e-06, -1.546269416809082, -0.00875091552734375, -0.118308886885643, -1.2159326615801547e-05, -0.000670967623591423, -0.00018334388732910156, 0.0, -0.1113271713256836, -0.014825820922851562, -0.0024318695068359375, -0.7258651256561279, -3.814697265625e-06, -0.0023593902587890625, -0.000240325927734375, 0.0, -9.894321920000948e-06, -7.259845733642578e-05, -1.4305104514278355e-06], "choice_history": [96, 173, 358, 105, 152, "Wailing", "Soul", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "battlecry", "<EOS>", 29, 267, "Give", "<EOS>", 346, 66, 279, "2", "<EOS>", "Minion", "Selector", "<EOS>", 346, 74, 297, "MECH", "<EOS>", 122, 213, "3", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Wailing Soul", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MURLOC", "hole8": {"hole1": [{"_type": "Template47", "hole0": 2}], "hole3": [{"_type": "Template60", "hole0": "MECH"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}, {"hole1": 5, "_type": "Template19", "hole0": 3}], "name": "WailingSoul", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(5), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -4.644137753024225, "score_history": [-0.7692747116088867, -1.1444091796875e-05, -0.03409378230571747, -0.00016008615784812719, -0.00024613735149614513, -4.675239324569702e-07, -6.914137884450611e-06, -1.9073486328125e-06, -0.0009307861328125, -0.003952980041503906, -1.454287052154541, -1.2874520507466514e-05, -8.225440979003906e-06, -1.0251987987430766e-05, -6.67572021484375e-05, -1.1920928244535389e-07, 0.0, -0.019052505493164062, -2.0265579223632812e-06, -0.1255054920911789, -0.0048476457595825195, -0.0002994537353515625, -2.0318679809570312, -0.0007305145263671875, -0.13201092183589935, -2.288818359375e-05, -0.06613349914550781, -3.576278118089249e-07, -1.1920928244535389e-07, -0.00015365038416348398, 0.0, -5.173676254344173e-05, 0.0, -6.29425048828125e-05, -0.000316619873046875, -5.7220458984375e-06, -3.933906555175781e-06, -2.3841855067985307e-07, -4.291534423828125e-06, -7.152555099310121e-07], "choice_history": [97, 283, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 346, 52, 179, "5", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 3}], "hole2": [{"hole5": "HeroSelector", "hole2": "RARE", "hole0": "Wailing Soul", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"n": 5, "_type": "Num"}]}], "hole0": "WailingSoul", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(minions()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -4.697055801734358, "score_history": [-0.7692747116088867, -1.1444091796875e-05, -0.03409378230571747, -0.00016008615784812719, -0.00024613735149614513, -4.675239324569702e-07, -6.914137884450611e-06, -1.9073486328125e-06, -0.0009307861328125, -0.003952980041503906, -1.454287052154541, -1.2874520507466514e-05, -8.225440979003906e-06, -1.0251987987430766e-05, -6.67572021484375e-05, -1.1920928244535389e-07, 0.0, -0.019052505493164062, -2.0265579223632812e-06, -0.1255054920911789, -0.0048476457595825195, -0.0002994537353515625, -0.26165103912353516, -0.0001678466796875, -1.6885217428207397, -0.03346414119005203, -0.3001977205276489, -2.3841855067985307e-07, -2.3841855067985307e-07, -8.797548071015626e-05, 0.0, -6.365772424032912e-05, 0.0, -5.14984130859375e-05, -5.53131103515625e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -8.225440979003906e-06, -7.152555099310121e-07], "choice_history": [97, 283, "Wailing", "Soul", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 346, 88, 325, "minions", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 3}], "hole2": [{"hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Wailing Soul", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "minions"}]}], "hole0": "WailingSoul", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Count(CardSelector())))),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -4.913681577080432, "score_history": [-0.6324806213378906, -0.00084686279296875, -0.0005626678466796875, -9.34600830078125e-05, -7.62939453125e-05, -0.012460595928132534, -0.00014256415306590497, -5.900707401451655e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.1920565157197416e-07, -9.417517503607087e-06, -2.384185791015625e-05, -4.9591064453125e-05, -0.02539348602294922, -8.0108642578125e-05, -2.3841855067985307e-07, -2.5510787963867188e-05, -2.2172682292875834e-05, -1.4185905456542969e-05, -1.0728830375228426e-06, 0.0, -0.00046372413635253906, -1.33514404296875e-05, -0.0001983642578125, 0.0, -1.9073486328125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, 0.0, -5.40018045285251e-05, -5.424022674560547e-05, -0.45508575439453125, -1.9073486328125e-06, -9.1552734375e-05, -4.017353057861328e-05, -0.09284782409667969, -2.057541847229004, -0.002528546843677759, -0.00019371506641618907, -0.000232696533203125, -0.09429645538330078, -0.0001621246337890625, -0.002374887466430664, -0.0031898021697998047, -0.00015925093612167984, -0.01393890380859375, -1.3199748992919922, -0.0001926422119140625, -0.056101322174072266, -0.00034820829750970006, -0.00027653801953420043, -0.00020313252753112465, -5.960462772236497e-07, -0.14003431797027588, -5.841247457283316e-06, -1.9073486328125e-06, -0.0001373291015625, -0.000492095947265625, -7.152302714530379e-07, -1.1920928244535389e-07, -1.3113020031596534e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Wailing", "Soul", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 70, 292, "Count", "<EOS>", "Card", "Selector", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "3", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Wailing Soul", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MURLOC", "hole8": {"hole1": [{"hole1": [{"hole1": "CardSelector", "_type": "Template55", "hole0": "Count"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 5, "_type": "Template19", "hole0": 3}], "name": "WailingSoul", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Attribute('attack',\n            WeaponSelector())))), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -4.9742929884472105, "score_history": [-0.6324806213378906, -0.00084686279296875, -0.0005626678466796875, -9.34600830078125e-05, -7.62939453125e-05, -0.012460595928132534, -0.00014256415306590497, -5.900707401451655e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.1920565157197416e-07, -9.417517503607087e-06, -2.384185791015625e-05, -4.9591064453125e-05, -0.02539348602294922, -8.0108642578125e-05, -2.3841855067985307e-07, -2.5510787963867188e-05, -2.2172682292875834e-05, -1.4185905456542969e-05, -1.0728830375228426e-06, 0.0, -0.00046372413635253906, -1.33514404296875e-05, -0.0001983642578125, 0.0, -1.9073486328125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, 0.0, -5.40018045285251e-05, -5.424022674560547e-05, -0.45508575439453125, -1.9073486328125e-06, -9.1552734375e-05, -4.017353057861328e-05, -0.09284782409667969, -2.057541847229004, -0.002528546843677759, -0.00019371506641618907, -0.000232696533203125, -0.09429645538330078, -0.0001621246337890625, -0.002374887466430664, -0.0031898021697998047, -0.00015925093612167984, -0.01393890380859375, -0.36609745025634766, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -0.007127388846129179, -1.9073486328125e-05, -0.0011043548583984375, -0.0005474090576171875, -3.0517578125e-05, -0.12097501754760742, 0.0, -0.40984153747558594, -7.62939453125e-06, -0.31926000118255615, -2.1457672119140625e-06, -1.1920928244535389e-07, -0.3530118763446808, -7.748603820800781e-06, 0.0, -0.0001850128173828125, -0.0001239776611328125, -3.814697265625e-06, -1.311301275563892e-06, -7.748603820800781e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Wailing", "Soul", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", "Minion", "Selector", "<EOS>", 122, 213, "3", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Wailing Soul", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MURLOC", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}, {"hole1": 5, "_type": "Template19", "hole0": 3}], "name": "WailingSoul", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(AddCard(minions(), 2), PlayerSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -5.004690758881978, "score_history": [-0.6324806213378906, -0.00084686279296875, -0.0005626678466796875, -9.34600830078125e-05, -7.62939453125e-05, -0.012460595928132534, -0.00014256415306590497, -5.900707401451655e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.1920565157197416e-07, -9.417517503607087e-06, -2.384185791015625e-05, -4.9591064453125e-05, -0.02539348602294922, -8.0108642578125e-05, -2.3841855067985307e-07, -2.5510787963867188e-05, -2.2172682292875834e-05, -1.4185905456542969e-05, -1.0728830375228426e-06, 0.0, -0.00046372413635253906, -1.33514404296875e-05, -0.0001983642578125, 0.0, -1.9073486328125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, 0.0, -5.40018045285251e-05, -5.424022674560547e-05, -0.45508575439453125, -1.9073486328125e-06, -9.1552734375e-05, -4.017353057861328e-05, -0.09284782409667969, -0.3046245574951172, -1.781475305557251, -0.03709912300109863, -9.644031524658203e-05, -0.014642715454101562, -0.1086893081665039, -0.0002231597900390625, -0.5666772723197937, -0.3800002932548523, -0.031589508056640625, -3.62396240234375e-05, -0.05961048975586891, 0.0, -0.03760731220245361, -1.1920922133867862e-06, -1.1920928244535389e-07, -0.0002002716064453125, -0.45854949951171875, -0.0001068115234375, -0.0014830770669505, -0.00032734868000261486, -1.9073486328125e-06, -0.0002117156982421875, -0.000133514404296875, -2.2649655875284225e-06, -1.1920922133867862e-06, -1.9431114196777344e-05, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Wailing", "Soul", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "battlecry", "<EOS>", 29, 267, "Add", "Card", "<EOS>", 347, 88, 325, "minions", "<EOS>", 52, 179, "2", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", 122, 213, "3", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Wailing Soul", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MURLOC", "hole8": {"hole1": [{"_type": "Template79", "hole0": "minions"}, {"n": 2, "_type": "Num"}], "hole3": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "_type": "Template43", "hole0": "AddCard", "hole2": "PlayerSelector"}}, {"hole1": 5, "_type": "Template19", "hole0": 3}], "name": "WailingSoul", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(AddCard(Silence(), 2), PlayerSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -5.332305663875289, "score_history": [-0.6324806213378906, -0.00084686279296875, -0.0005626678466796875, -9.34600830078125e-05, -7.62939453125e-05, -0.012460595928132534, -0.00014256415306590497, -5.900707401451655e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.1920565157197416e-07, -9.417517503607087e-06, -2.384185791015625e-05, -4.9591064453125e-05, -0.02539348602294922, -8.0108642578125e-05, -2.3841855067985307e-07, -2.5510787963867188e-05, -2.2172682292875834e-05, -1.4185905456542969e-05, -1.0728830375228426e-06, 0.0, -0.00046372413635253906, -1.33514404296875e-05, -0.0001983642578125, 0.0, -1.9073486328125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, 0.0, -5.40018045285251e-05, -5.424022674560547e-05, -0.45508575439453125, -1.9073486328125e-06, -9.1552734375e-05, -4.017353057861328e-05, -0.09284782409667969, -0.3046245574951172, -1.781475305557251, -0.03709912300109863, -9.644031524658203e-05, -0.014642715454101562, -0.1086893081665039, -0.0002231597900390625, -1.5729326009750366, -0.08908427506685257, -0.014932632446289062, -4.00543212890625e-05, -0.04925822466611862, 0.0, -0.004880428314208984, -8.344646857949556e-07, -1.1920928244535389e-07, -0.000156402587890625, -0.1316995620727539, -8.7738037109375e-05, -0.00045669032260775566, -0.00037217140197753906, -1.9073486328125e-06, -9.34600830078125e-05, -0.0001544952392578125, -2.3841748770792037e-06, -7.152555099310121e-07, -1.9669532775878906e-05, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Wailing", "Soul", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "battlecry", "<EOS>", 29, 267, "Add", "Card", "<EOS>", 347, 88, 325, "Silence", "<EOS>", 52, 179, "2", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", 122, 213, "3", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Wailing Soul", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MURLOC", "hole8": {"hole1": [{"_type": "Template79", "hole0": "Silence"}, {"n": 2, "_type": "Num"}], "hole3": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "_type": "Template43", "hole0": "AddCard", "hole2": "PlayerSelector"}}, {"hole1": 5, "_type": "Template19", "hole0": 3}], "name": "WailingSoul", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Give(Buff(ChangeAttack(2))), MinionSelector(IsType(\n            MINION_TYPE.MURLOC))))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -5.41276231986339, "score_history": [-0.6324806213378906, -0.00084686279296875, -0.0005626678466796875, -9.34600830078125e-05, -7.62939453125e-05, -0.012460595928132534, -0.00014256415306590497, -5.900707401451655e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.1920565157197416e-07, -9.417517503607087e-06, -2.384185791015625e-05, -4.9591064453125e-05, -0.02539348602294922, -8.0108642578125e-05, -2.3841855067985307e-07, -2.5510787963867188e-05, -2.2172682292875834e-05, -1.4185905456542969e-05, -1.0728830375228426e-06, 0.0, -0.00046372413635253906, -1.33514404296875e-05, -0.0001983642578125, 0.0, -1.9073486328125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, 0.0, -5.40018045285251e-05, -5.424022674560547e-05, -0.45508575439453125, -1.9073486328125e-06, -9.1552734375e-05, -4.017353057861328e-05, -0.09284782409667969, -0.3046245574951172, -0.22334885597229004, -0.0012031776132062078, -5.7220458984375e-06, -1.546269416809082, -0.00875091552734375, -0.118308886885643, -1.2159326615801547e-05, -0.000670967623591423, -0.00018334388732910156, 0.0, -0.1113271713256836, -0.014825820922851562, -0.0024318695068359375, -1.8578269481658936, -0.00019073486328125, -0.00116729736328125, -0.0002765655517578125, -1.1920883480343036e-07, -1.0609570381348021e-05, -4.589557647705078e-05, -7.152555099310121e-07], "choice_history": [96, 173, 358, 105, 152, "Wailing", "Soul", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "battlecry", "<EOS>", 29, 267, "Give", "<EOS>", 346, 66, 279, "2", "<EOS>", "Minion", "Selector", "<EOS>", 346, 74, 297, "MURLOC", "<EOS>", 122, 213, "3", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Wailing Soul", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MURLOC", "hole8": {"hole1": [{"_type": "Template47", "hole0": 2}], "hole3": [{"_type": "Template60", "hole0": "MURLOC"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}, {"hole1": 5, "_type": "Template19", "hole0": 3}], "name": "WailingSoul", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Attribute('attack',\n            MinionSelector(Adjacent()))))), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -5.577936182287111, "score_history": [-0.6324806213378906, -0.00084686279296875, -0.0005626678466796875, -9.34600830078125e-05, -7.62939453125e-05, -0.012460595928132534, -0.00014256415306590497, -5.900707401451655e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.1920565157197416e-07, -9.417517503607087e-06, -2.384185791015625e-05, -4.9591064453125e-05, -0.02539348602294922, -8.0108642578125e-05, -2.3841855067985307e-07, -2.5510787963867188e-05, -2.2172682292875834e-05, -1.4185905456542969e-05, -1.0728830375228426e-06, 0.0, -0.00046372413635253906, -1.33514404296875e-05, -0.0001983642578125, 0.0, -1.9073486328125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, 0.0, -5.40018045285251e-05, -5.424022674560547e-05, -0.45508575439453125, -1.9073486328125e-06, -9.1552734375e-05, -4.017353057861328e-05, -0.09284782409667969, -2.057541847229004, -0.002528546843677759, -0.00019371506641618907, -0.000232696533203125, -0.09429645538330078, -0.0001621246337890625, -0.002374887466430664, -0.0031898021697998047, -0.00015925093612167984, -0.01393890380859375, -0.36609745025634766, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -0.007127388846129179, -1.9073486328125e-05, -0.0011043548583984375, -0.0005474090576171875, -3.0517578125e-05, -0.12097501754760742, 0.0, -1.1131353378295898, -0.0031070709228515625, -0.03979694843292236, -9.775161743164062e-06, -1.1920928244535389e-07, -0.09106378257274628, -1.4066696166992188e-05, -0.4372830390930176, -1.609325408935547e-05, 0.0, -0.0008296966552734375, -0.0008296966552734375, -2.0265561033738777e-06, -5.960462772236497e-07, -7.867813110351562e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Wailing", "Soul", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>", "Minion", "Selector", "<EOS>", 122, 213, "3", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Wailing Soul", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MURLOC", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"hole1": "Adjacent", "_type": "Template55", "hole0": "MinionSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}, {"hole1": 5, "_type": "Template19", "hole0": 3}], "name": "WailingSoul", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(<UNK>Silence(), MinionSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -5.6075531923602, "score_history": [-0.6324806213378906, -0.00084686279296875, -0.0005626678466796875, -9.34600830078125e-05, -7.62939453125e-05, -0.012460595928132534, -0.00014256415306590497, -5.900707401451655e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.1920565157197416e-07, -9.417517503607087e-06, -2.384185791015625e-05, -4.9591064453125e-05, -0.02539348602294922, -8.0108642578125e-05, -2.3841855067985307e-07, -2.5510787963867188e-05, -2.2172682292875834e-05, -1.4185905456542969e-05, -1.0728830375228426e-06, 0.0, -0.00046372413635253906, -1.33514404296875e-05, -0.0001983642578125, 0.0, -1.9073486328125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, 0.0, -5.40018045285251e-05, -5.424022674560547e-05, -0.45508575439453125, -1.9073486328125e-06, -9.1552734375e-05, -4.017353057861328e-05, -0.09284782409667969, -3.1015520095825195, -0.00852575059980154, -0.5545424818992615, -0.013252131640911102, -0.0018652677536010742, -0.00013005724758841097, -1.5497195136049413e-06, -0.2130603790283203, -0.2291421890258789, -0.000537872314453125, -0.26240742206573486, -0.0009707211283966899, 0.0, -0.0001583099365234375, -0.000102996826171875, -2.026554284384474e-06, -1.5497195136049413e-06, -1.9431114196777344e-05, -4.768370445162873e-07], "choice_history": [96, 173, 358, 105, 152, "Wailing", "Soul", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "battlecry", "<EOS>", 29, 264, "<UNK>", "Silence", "<EOS>", "Minion", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", 122, 213, "3", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Wailing Soul", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MURLOC", "hole8": {"hole2": "MinionSelector", "hole3": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "_type": "Template43", "hole0": "<UNK>Silence"}}, {"hole1": 5, "_type": "Template19", "hole0": 3}], "name": "WailingSoul", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(Count(MinionSelector(\n            MinionHasSilence(), EnemyPlayer())))), Buff(ChangeHealth(Count(\n            MinionSelector(IsType(MINION_TYPE.MURLOC), BothPlayer()))))]),\n            MinionSelector(IsType(MINION_TYPE.DRAGON))))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -7.9096929487797, "score_history": [-0.6324806213378906, -0.00084686279296875, -0.0005626678466796875, -9.34600830078125e-05, -7.62939453125e-05, -0.012460595928132534, -0.00014256415306590497, -5.900707401451655e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.1920565157197416e-07, -9.417517503607087e-06, -2.384185791015625e-05, -4.9591064453125e-05, -0.02539348602294922, -8.0108642578125e-05, -2.3841855067985307e-07, -2.5510787963867188e-05, -2.2172682292875834e-05, -1.4185905456542969e-05, -1.0728830375228426e-06, 0.0, -0.00046372413635253906, -1.33514404296875e-05, -0.0001983642578125, 0.0, -1.9073486328125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, 0.0, -5.40018045285251e-05, -5.424022674560547e-05, -0.45508575439453125, -1.9073486328125e-06, -9.1552734375e-05, -4.017353057861328e-05, -0.09284782409667969, -0.3046245574951172, -0.22334885597229004, -0.0012031776132062078, -5.7220458984375e-06, -1.4355506896972656, -0.0001392364501953125, -0.0038042068481445312, -0.20339202880859375, -0.018951416015625, -0.0014271736145019531, -0.007079720497131348, -0.014508610591292381, -0.000457763671875, -0.1484050750732422, -0.002185821533203125, -0.008113980293273926, -5.1020273531321436e-05, -0.0002040863037109375, 0.0, -0.03513766825199127, -0.0004124641418457031, -3.576278118089249e-07, -0.0029735565185546875, -0.5420303344726562, -2.09808349609375e-05, -0.5093568563461304, -0.034105084836483, -0.6807163953781128, -0.00019562231318559498, -0.004535675048828125, 0.0, -0.13918542861938477, -1.5616416931152344e-05, 0.0, -0.21502113342285156, -0.005391120910644531, -0.007157444953918457, -0.0004979372024536133, -0.00012933467223774642, -0.027042388916015625, -0.037720680236816406, -0.003513336181640625, -0.009694933891296387, -5.507317473529838e-05, -0.000213623046875, 0.0, -0.03659845516085625, -0.0009577274322509766, -4.768370445162873e-07, -0.0011138916015625, -1.1591176986694336, -0.000949859619140625, -0.004463315010070801, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -0.0014458894729614258, -1.931190308823716e-05, -3.814697265625e-06, -0.06267383694648743, -0.000247955322265625, 0.0, -0.00783538818359375, -0.03921794891357422, -0.0025205612182617188, -0.7399474382400513, -0.0006544580101035535, -0.000518798828125, -0.0011463165283203125, -2.026554284384474e-06, -2.3841855067985307e-07, -0.0003205537796020508, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Wailing", "Soul", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "battlecry", "<EOS>", 29, 267, "Give", "<EOS>", 346, 48, 169, 347, 69, 291, "Change", "Health", "<EOS>", 346, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 88, 325, "Minion", "Has", "Silence", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 69, 291, "Change", "Health", "<EOS>", 346, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 74, 297, "MURLOC", "<EOS>", 88, 325, "Both", "Player", "<EOS>", "Minion", "Selector", "<EOS>", 346, 74, 297, "DRAGON", "<EOS>", 122, 213, "3", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Wailing Soul", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MURLOC", "hole8": {"hole1": [{"elts": [{"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"_type": "Template79", "hole0": "MinionHasSilence"}, {"_type": "Template79", "hole0": "EnemyPlayer"}]}], "_type": "Template54", "hole0": "ChangeHealth"}, {"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"_type": "Template60", "hole0": "MURLOC"}, {"_type": "Template79", "hole0": "BothPlayer"}]}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "List"}], "hole3": [{"_type": "Template60", "hole0": "DRAGON"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}, {"hole1": 5, "_type": "Template19", "hole0": 3}], "name": "WailingSoul", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(Count(MinionSelector(\n            MinionHasSilence(), EnemyPlayer())))), Buff(ChangeHealth(Count(\n            MinionSelector(MinionHasSilence(), EnemyPlayer()))))]),\n            MinionSelector(IsType(MINION_TYPE.DRAGON))))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -8.544703966267768, "score_history": [-0.6324806213378906, -0.00084686279296875, -0.0005626678466796875, -9.34600830078125e-05, -7.62939453125e-05, -0.012460595928132534, -0.00014256415306590497, -5.900707401451655e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.1920565157197416e-07, -9.417517503607087e-06, -2.384185791015625e-05, -4.9591064453125e-05, -0.02539348602294922, -8.0108642578125e-05, -2.3841855067985307e-07, -2.5510787963867188e-05, -2.2172682292875834e-05, -1.4185905456542969e-05, -1.0728830375228426e-06, 0.0, -0.00046372413635253906, -1.33514404296875e-05, -0.0001983642578125, 0.0, -1.9073486328125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, 0.0, -5.40018045285251e-05, -5.424022674560547e-05, -0.45508575439453125, -1.9073486328125e-06, -9.1552734375e-05, -4.017353057861328e-05, -0.09284782409667969, -0.3046245574951172, -0.22334885597229004, -0.0012031776132062078, -5.7220458984375e-06, -1.4355506896972656, -0.0001392364501953125, -0.0038042068481445312, -0.20339202880859375, -0.018951416015625, -0.0014271736145019531, -0.007079720497131348, -0.014508610591292381, -0.000457763671875, -0.1484050750732422, -0.002185821533203125, -0.008113980293273926, -5.1020273531321436e-05, -0.0002040863037109375, 0.0, -0.03513766825199127, -0.0004124641418457031, -3.576278118089249e-07, -0.0029735565185546875, -0.5420303344726562, -2.09808349609375e-05, -0.5093568563461304, -0.034105084836483, -0.6807163953781128, -0.00019562231318559498, -0.004535675048828125, 0.0, -0.13918542861938477, -1.5616416931152344e-05, 0.0, -0.21502113342285156, -0.005391120910644531, -0.007157444953918457, -0.0004979372024536133, -0.00012933467223774642, -0.027042388916015625, -0.037720680236816406, -0.003513336181640625, -0.009694933891296387, -5.507317473529838e-05, -0.000213623046875, 0.0, -0.03659845516085625, -0.0009577274322509766, -4.768370445162873e-07, -0.0011138916015625, -0.4371528625488281, -3.814697265625e-05, -0.35663288831710815, -0.030499249696731567, -0.6688607931137085, -0.00021254982857499272, -0.0033588409423828125, 0.0, -0.06337642669677734, -1.3828277587890625e-05, 0.0, -0.09913969039916992, -7.05718994140625e-05, 0.0, -0.14847564697265625, -0.07364368438720703, -0.0027618408203125, -0.7700711488723755, -0.0002658362209331244, -0.0003871917724609375, -0.000926971435546875, -1.9073486328125e-06, -2.3841855067985307e-07, -0.0002862215042114258, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Wailing", "Soul", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "battlecry", "<EOS>", 29, 267, "Give", "<EOS>", 346, 48, 169, 347, 69, 291, "Change", "Health", "<EOS>", 346, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 88, 325, "Minion", "Has", "Silence", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 69, 291, "Change", "Health", "<EOS>", 346, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 88, 325, "Minion", "Has", "Silence", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", "Minion", "Selector", "<EOS>", 346, 74, 297, "DRAGON", "<EOS>", 122, 213, "3", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Wailing Soul", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MURLOC", "hole8": {"hole1": [{"elts": [{"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"_type": "Template79", "hole0": "MinionHasSilence"}, {"_type": "Template79", "hole0": "EnemyPlayer"}]}], "_type": "Template54", "hole0": "ChangeHealth"}, {"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"_type": "Template79", "hole0": "MinionHasSilence"}, {"_type": "Template79", "hole0": "EnemyPlayer"}]}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "List"}], "hole3": [{"_type": "Template60", "hole0": "DRAGON"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}, {"hole1": 5, "_type": "Template19", "hole0": 3}], "name": "WailingSoul", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(Count(MinionSelector(\n            MinionHasminions(), EnemyPlayer())))), Buff(ChangeHealth(Count(\n            MinionSelector(MinionHasSilence(), EnemyPlayer()))))]),\n            MinionSelector(IsType(MINION_TYPE.DRAGON))))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score": -8.601032179543033, "score_history": [-0.6324806213378906, -0.00084686279296875, -0.0005626678466796875, -9.34600830078125e-05, -7.62939453125e-05, -0.012460595928132534, -0.00014256415306590497, -5.900707401451655e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.1920565157197416e-07, -9.417517503607087e-06, -2.384185791015625e-05, -4.9591064453125e-05, -0.02539348602294922, -8.0108642578125e-05, -2.3841855067985307e-07, -2.5510787963867188e-05, -2.2172682292875834e-05, -1.4185905456542969e-05, -1.0728830375228426e-06, 0.0, -0.00046372413635253906, -1.33514404296875e-05, -0.0001983642578125, 0.0, -1.9073486328125e-05, -2.0265579223632812e-06, -5.53131103515625e-05, 0.0, -5.40018045285251e-05, -5.424022674560547e-05, -0.45508575439453125, -1.9073486328125e-06, -9.1552734375e-05, -4.017353057861328e-05, -0.09284782409667969, -0.3046245574951172, -0.22334885597229004, -0.0012031776132062078, -5.7220458984375e-06, -1.4355506896972656, -0.0001392364501953125, -0.0038042068481445312, -0.20339202880859375, -0.018951416015625, -0.0014271736145019531, -0.007079720497131348, -0.014508610591292381, -0.000457763671875, -0.1484050750732422, -0.002185821533203125, -0.008113980293273926, -5.1020273531321436e-05, -0.0002040863037109375, 0.0, -0.03513766825199127, -0.0004124641418457031, -3.576278118089249e-07, -0.0029735565185546875, -0.5420303344726562, -2.09808349609375e-05, -0.5093568563461304, -0.034105084836483, -0.8380402326583862, -0.0016065426170825958, -0.001636505126953125, 0.0, -0.1402890682220459, -1.800060272216797e-05, 0.0, -0.14371013641357422, -0.004807472229003906, -0.006669044494628906, -0.00044846534729003906, -0.00018750003073364496, -0.029356002807617188, -0.033283233642578125, -0.0033445358276367188, -0.00851428508758545, -5.924526340095326e-05, -0.000213623046875, 0.0, -0.03509319946169853, -0.0009503364562988281, -4.768370445162873e-07, -0.001094818115234375, -0.41812610626220703, -3.814697265625e-05, -0.3540138304233551, -0.030580785125494003, -0.6659616231918335, -0.00020897354988846928, -0.0034351348876953125, 0.0, -0.06250619888305664, -1.3828277587890625e-05, 0.0, -0.09926557540893555, -7.05718994140625e-05, 0.0, -0.14969444274902344, -0.07386493682861328, -0.0027627944946289062, -0.7705298662185669, -0.0002658362209331244, -0.000385284423828125, -0.0009260177612304688, -1.9073486328125e-06, -2.3841855067985307e-07, -0.0002862215042114258, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Wailing", "Soul", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", "battlecry", "<EOS>", 29, 267, "Give", "<EOS>", 346, 48, 169, 347, 69, 291, "Change", "Health", "<EOS>", 346, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 88, 325, "Minion", "Has", "minions", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 69, 291, "Change", "Health", "<EOS>", 346, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 88, 325, "Minion", "Has", "Silence", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", "Minion", "Selector", "<EOS>", 346, 74, 297, "DRAGON", "<EOS>", 122, 213, "3", "<EOS>", "5", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Wailing Soul", "_type": "Template4", "hole3": "RARE", "hole1": 4, "hole4": "minion_type", "hole6": "MURLOC", "hole8": {"hole1": [{"elts": [{"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"_type": "Template79", "hole0": "MinionHasminions"}, {"_type": "Template79", "hole0": "EnemyPlayer"}]}], "_type": "Template54", "hole0": "ChangeHealth"}, {"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"_type": "Template79", "hole0": "MinionHasSilence"}, {"_type": "Template79", "hole0": "EnemyPlayer"}]}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "List"}], "hole3": [{"_type": "Template60", "hole0": "DRAGON"}], "_type": "Template43", "hole0": "Give", "hole2": "MinionSelector"}}, {"hole1": 5, "_type": "Template19", "hole0": 3}], "name": "WailingSoul", "_type": "ClassDef"}], "_type": "Module"}}]}
{"gold_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n", "beams": [{"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, charge=True, enrage=[Aura(ChangeAttack(3),\n            SelfSelector())])\n", "score": -1.1319071071319442, "score_history": [-0.00014495849609375, -1.1444091796875e-05, -0.0002725990198086947, -6.794924956921022e-06, -7.152531907195225e-06, -1.1909287422895432e-07, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -0.00787353515625, -0.00035858154296875, -5.245203283266164e-06, -2.5391578674316406e-05, 0.0, -2.288818359375e-05, -0.0002057431556750089, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -0.509613037109375, -0.0043582916259765625, -2.3818574845790863e-07, -4.768370445162873e-07, 0.0, -1.1920928244535389e-07, -2.3483988115913235e-05, 0.0, -0.0006618499755859375, -0.0003757476806640625, -3.0517578125e-05, -0.39204537868499756, -1.9073486328125e-06, -0.0007305145263671875, -5.14984130859375e-05, -0.00044643765431828797, 0.0, -0.048534393310546875, -0.0004825592041015625, -0.010811889544129372, -3.814697265625e-06, -0.03016185760498047, -0.0016632080078125, -0.0019234362989664078, -1.9073486328125e-06, -0.000301361083984375, -0.0018367767333984375, -2.288818359375e-05, -0.11648496985435486, -9.918212890625e-05, -0.00051116943359375, -1.9073486328125e-05, -0.0016106364782899618, -1.3232186574896332e-05, 0.0], "choice_history": [97, 283, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 354, 95, 336, "charge", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "3", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "charge", "_type": "keyword"}, {"value": {"hole1": [{"_type": "Template70", "hole0": 3}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "arg": "enrage", "_type": "keyword"}], "_type": "Template68", "hole0": "Minion", "hole2": 3}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Amani Berserker", "hole2": "ALL"}], "hole0": "AmaniBerserker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), SelfSelector())])\n", "score": -1.5895313686689434, "score_history": [-0.00014495849609375, -1.1444091796875e-05, -0.0002725990198086947, -6.794924956921022e-06, -7.152531907195225e-06, -1.1909287422895432e-07, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -0.00787353515625, -0.00035858154296875, -5.245203283266164e-06, -2.5391578674316406e-05, 0.0, -2.288818359375e-05, -0.0002057431556750089, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -0.9228401184082031, -0.00016021728515625, -2.3841855067985307e-07, -2.264974000354414e-06, -1.0132764145964757e-05, -1.1920928244535389e-07, -0.028360003605484962, 0.0, -0.0038299560546875, -0.2892189025878906, -0.0015678403433412313, -1.9073486328125e-06, -7.82012939453125e-05, -0.014296531677246094, -3.0517578125e-05, -0.28848767280578613, -9.5367431640625e-05, -0.0013904571533203125, -3.814697265625e-06, -0.030040619894862175, -3.1113198929233477e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 2, "hole2": "enrage"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Amani Berserker", "hole2": "ALL"}], "hole0": "AmaniBerserker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True, enrage=[Aura(ChangeAttack(3),\n            SelfSelector())])\n", "score": -2.222139005927936, "score_history": [-0.00014495849609375, -1.1444091796875e-05, -0.0002725990198086947, -6.794924956921022e-06, -7.152531907195225e-06, -1.1909287422895432e-07, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -0.00787353515625, -0.00035858154296875, -5.245203283266164e-06, -2.5391578674316406e-05, 0.0, -2.288818359375e-05, -0.0002057431556750089, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -0.509613037109375, -0.0043582916259765625, -2.3818574845790863e-07, -4.768370445162873e-07, 0.0, -1.1920928244535389e-07, -2.3483988115913235e-05, 0.0, -0.0006618499755859375, -0.0003757476806640625, -3.0517578125e-05, -1.5028623342514038, -1.52587890625e-05, -0.00028228759765625, -1.9073486328125e-05, -0.0004235504602547735, 0.0, -0.019855499267578125, -0.001117706298828125, -0.006801452953368425, -1.9073486328125e-06, -0.04894542694091797, -0.0019741058349609375, -0.0027367863804101944, -3.814697265625e-06, -0.000316619873046875, -0.0018091201782226562, -2.47955322265625e-05, -0.10663412511348724, -0.0001010894775390625, -0.0005702972412109375, -2.86102294921875e-05, -0.003459095722064376, -7.033334895822918e-06, 0.0], "choice_history": [97, 283, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 354, 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "3", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "taunt", "_type": "keyword"}, {"value": {"hole1": [{"_type": "Template70", "hole0": 3}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "arg": "enrage", "_type": "keyword"}], "_type": "Template68", "hole0": "Minion", "hole2": 3}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Amani Berserker", "hole2": "ALL"}], "hole0": "AmaniBerserker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n", "score": -2.9846132467157105, "score_history": [-0.00014495849609375, -1.1444091796875e-05, -0.0002725990198086947, -6.794924956921022e-06, -7.152531907195225e-06, -1.1909287422895432e-07, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -0.00787353515625, -0.00035858154296875, -5.245203283266164e-06, -2.5391578674316406e-05, 0.0, -2.288818359375e-05, -0.0002057431556750089, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -0.9228401184082031, -0.00016021728515625, -2.3841855067985307e-07, -2.264974000354414e-06, -1.0132764145964757e-05, -1.1920928244535389e-07, -0.028360003605484962, 0.0, -0.0038299560546875, -0.2892189025878906, -0.0015678403433412313, -1.9073486328125e-06, -7.82012939453125e-05, -0.014296531677246094, -3.0517578125e-05, -1.712579607963562, -6.67572021484375e-05, -0.0008726119995117188, -1.1444091796875e-05, -0.0015853624790906906, -1.5139492461457849e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "3", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 3}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 2, "hole2": "enrage"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Amani Berserker", "hole2": "ALL"}], "hole0": "AmaniBerserker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, charge=True, enrage=[Aura(ChangeAttack(2),\n            SelfSelector())])\n", "score": -3.4722067425017187, "score_history": [-0.00014495849609375, -1.1444091796875e-05, -0.0002725990198086947, -6.794924956921022e-06, -7.152531907195225e-06, -1.1909287422895432e-07, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -0.00787353515625, -0.00035858154296875, -5.245203283266164e-06, -2.5391578674316406e-05, 0.0, -2.288818359375e-05, -0.0002057431556750089, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -0.509613037109375, -0.0043582916259765625, -2.3818574845790863e-07, -4.768370445162873e-07, 0.0, -1.1920928244535389e-07, -2.3483988115913235e-05, 0.0, -0.0006618499755859375, -0.0003757476806640625, -3.0517578125e-05, -0.39204537868499756, -1.9073486328125e-06, -0.0007305145263671875, -5.14984130859375e-05, -0.00044643765431828797, 0.0, -0.048534393310546875, -0.0004825592041015625, -0.010811889544129372, -3.814697265625e-06, -0.03016185760498047, -0.0016632080078125, -0.0019234362989664078, -1.9073486328125e-06, -0.000301361083984375, -0.0018367767333984375, -2.288818359375e-05, -2.443692684173584, -0.0002899169921875, -0.000514984130859375, -3.814697265625e-06, -0.014518498443067074, -1.800050085876137e-05, 0.0], "choice_history": [97, 283, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 354, 95, 336, "charge", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "charge", "_type": "keyword"}, {"value": {"hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "arg": "enrage", "_type": "keyword"}], "_type": "Template68", "hole0": "Minion", "hole2": 3}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Amani Berserker", "hole2": "ALL"}], "hole0": "AmaniBerserker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, divine_shield=True, enrage=[Aura(ChangeAttack(3\n            ), SelfSelector())])\n", "score": -3.7625809953695963, "score_history": [-0.00014495849609375, -1.1444091796875e-05, -0.0002725990198086947, -6.794924956921022e-06, -7.152531907195225e-06, -1.1909287422895432e-07, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -0.00787353515625, -0.00035858154296875, -5.245203283266164e-06, -2.5391578674316406e-05, 0.0, -2.288818359375e-05, -0.0002057431556750089, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -0.509613037109375, -0.0043582916259765625, -2.3818574845790863e-07, -4.768370445162873e-07, 0.0, -1.1920928244535389e-07, -2.3483988115913235e-05, 0.0, -0.0006618499755859375, -0.0003757476806640625, -3.0517578125e-05, -3.020061731338501, -1.33514404296875e-05, -0.000370025634765625, -2.86102294921875e-05, -0.0008373215096071362, 0.0, -0.019212722778320312, -0.0006618499755859375, -0.007643566001206636, -3.814697265625e-06, -0.05354595184326172, -0.001903533935546875, -0.0030008351895958185, -3.814697265625e-06, -0.000362396240234375, -0.0015974044799804688, -2.288818359375e-05, -0.1264946162700653, -0.000118255615234375, -0.0005044937133789062, -2.288818359375e-05, -0.0020098683889955282, -1.204010459332494e-05, 0.0], "choice_history": [97, 283, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>", 354, 95, 336, "divine_shield", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "3", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "divine_shield", "_type": "keyword"}, {"value": {"hole1": [{"_type": "Template70", "hole0": 3}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "arg": "enrage", "_type": "keyword"}], "_type": "Template68", "hole0": "Minion", "hole2": 3}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Amani Berserker", "hole2": "ALL"}], "hole0": "AmaniBerserker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), SelfSelector()),\n            Aura(MinionSelector(), SelfSelector())])\n", "score": -4.138629573606714, "score_history": [-0.00014495849609375, -1.1444091796875e-05, -0.0002725990198086947, -6.794924956921022e-06, -7.152531907195225e-06, -1.1909287422895432e-07, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -0.00787353515625, -0.00035858154296875, -5.245203283266164e-06, -2.5391578674316406e-05, 0.0, -2.288818359375e-05, -0.0002057431556750089, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -0.9228401184082031, -0.00016021728515625, -2.3841855067985307e-07, -2.264974000354414e-06, -1.0132764145964757e-05, -1.1920928244535389e-07, -0.028360003605484962, 0.0, -0.0038299560546875, -1.3971939086914062, -0.022511685267090797, -2.09808349609375e-05, -0.00040435791015625, -0.009324073791503906, -8.0108642578125e-05, -0.17472302913665771, -2.86102294921875e-05, -0.0008001327514648438, -1.9073486328125e-06, -0.0015088317450135946, -1.9430961401667446e-05, 0.0, 0.0, -0.00670623779296875, -0.0011234283447265625, -0.17311237752437592, -0.00014162063598632812, -0.000347137451171875, -0.509516716003418, -0.000396728515625, -0.5890369415283203, -0.26888442039489746, -5.3882598876953125e-05, -0.0038604736328125, -1.1444091796875e-05, -0.014499902725219727, -3.290160748292692e-05, 0.0], "choice_history": [97, 283, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 88, 325, "Minion", "Selector", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"_type": "Template79", "hole0": "MinionSelector"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 2, "hole2": "enrage"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Amani Berserker", "hole2": "ALL"}], "hole0": "AmaniBerserker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), SelfSelector()),\n            Aura(ChangeHealth(1), SelfSelector())])\n", "score": -4.599983813897943, "score_history": [-0.00014495849609375, -1.1444091796875e-05, -0.0002725990198086947, -6.794924956921022e-06, -7.152531907195225e-06, -1.1909287422895432e-07, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -0.00787353515625, -0.00035858154296875, -5.245203283266164e-06, -2.5391578674316406e-05, 0.0, -2.288818359375e-05, -0.0002057431556750089, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -0.9228401184082031, -0.00016021728515625, -2.3841855067985307e-07, -2.264974000354414e-06, -1.0132764145964757e-05, -1.1920928244535389e-07, -0.028360003605484962, 0.0, -0.0038299560546875, -1.3971939086914062, -0.022511685267090797, -2.09808349609375e-05, -0.00040435791015625, -0.009324073791503906, -8.0108642578125e-05, -0.17472302913665771, -2.86102294921875e-05, -0.0008001327514648438, -1.9073486328125e-06, -0.0015088317450135946, -1.9430961401667446e-05, 0.0, 0.0, -0.00670623779296875, -0.0011234283447265625, -0.17311237752437592, -0.00014162063598632812, -0.000347137451171875, -1.7126836776733398, -0.004147529602050781, -0.12902341783046722, -0.00031065940856933594, -0.00038909912109375, -7.62939453125e-06, -0.0010135170305147767, -7.188291056081653e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 81, 311, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"_type": "Template71", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 2, "hole2": "enrage"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Amani Berserker", "hole2": "ALL"}], "hole0": "AmaniBerserker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), SelfSelector()),\n            Aura(Attack(), SelfSelector())])\n", "score": -4.625999230296841, "score_history": [-0.00014495849609375, -1.1444091796875e-05, -0.0002725990198086947, -6.794924956921022e-06, -7.152531907195225e-06, -1.1909287422895432e-07, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -0.00787353515625, -0.00035858154296875, -5.245203283266164e-06, -2.5391578674316406e-05, 0.0, -2.288818359375e-05, -0.0002057431556750089, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -0.9228401184082031, -0.00016021728515625, -2.3841855067985307e-07, -2.264974000354414e-06, -1.0132764145964757e-05, -1.1920928244535389e-07, -0.028360003605484962, 0.0, -0.0038299560546875, -1.3971939086914062, -0.022511685267090797, -2.09808349609375e-05, -0.00040435791015625, -0.009324073791503906, -8.0108642578125e-05, -0.17472302913665771, -2.86102294921875e-05, -0.0008001327514648438, -1.9073486328125e-06, -0.0015088317450135946, -1.9430961401667446e-05, 0.0, 0.0, -0.00670623779296875, -0.0011234283447265625, -0.17311237752437592, -0.00014162063598632812, -0.000347137451171875, -0.509516716003418, -0.000396728515625, -1.2561182975769043, -0.10107922554016113, -0.0006246566772460938, -1.52587890625e-05, -0.005676865577697754, -0.00023519989917986095, -1.1920928244535389e-07], "choice_history": [97, 283, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 322, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 346, 87, 324, "Aura", "<EOS>", 347, 88, 325, "Attack", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura", "hole2": [{"hole1": [{"_type": "Template79", "hole0": "Attack"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78_expr_seq", "hole0": "Aura"}]}, "_type": "Template50", "hole0": 2, "hole2": "enrage"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Amani Berserker", "hole2": "ALL"}], "hole0": "AmaniBerserker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score": -4.660799192855585, "score_history": [-0.00014495849609375, -1.1444091796875e-05, -0.0002725990198086947, -6.794924956921022e-06, -7.152531907195225e-06, -1.1909287422895432e-07, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -0.00787353515625, -0.00035858154296875, -5.245203283266164e-06, -2.5391578674316406e-05, 0.0, -2.288818359375e-05, -0.0002057431556750089, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -0.9228401184082031, -0.00016021728515625, -2.3841855067985307e-07, -2.264974000354414e-06, -1.0132764145964757e-05, -1.1920928244535389e-07, -0.028360003605484962, 0.0, -0.0038299560546875, -0.2892189025878906, -0.0015678403433412313, -1.9073486328125e-06, -7.82012939453125e-05, -0.014296531677246094, -3.0517578125e-05, -3.3881266117095947, -0.000225067138671875, -0.0007257461547851562, -5.7220458984375e-06, -0.0021794834174215794, -5.340443749446422e-05, -9.536738616588991e-07], "choice_history": [97, 283, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 1}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 2, "hole2": "enrage"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Amani Berserker", "hole2": "ALL"}], "hole0": "AmaniBerserker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), WeaponSelector())])\n", "score": -5.176687189896391, "score_history": [-0.00014495849609375, -1.1444091796875e-05, -0.0002725990198086947, -6.794924956921022e-06, -7.152531907195225e-06, -1.1909287422895432e-07, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -0.00787353515625, -0.00035858154296875, -5.245203283266164e-06, -2.5391578674316406e-05, 0.0, -2.288818359375e-05, -0.0002057431556750089, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -0.9228401184082031, -0.00016021728515625, -2.3841855067985307e-07, -2.264974000354414e-06, -1.0132764145964757e-05, -1.1920928244535389e-07, -0.028360003605484962, 0.0, -0.0038299560546875, -0.2892189025878906, -0.0015678403433412313, -1.9073486328125e-06, -7.82012939453125e-05, -0.014296531677246094, -3.0517578125e-05, -0.28848767280578613, -9.5367431640625e-05, -0.0013904571533203125, -3.814697265625e-06, -3.6172215938568115, -5.7220458984375e-06, -3.576278118089249e-07], "choice_history": [97, 283, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "2", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 2}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 2, "hole2": "enrage"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Amani Berserker", "hole2": "ALL"}], "hole0": "AmaniBerserker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(6), SelfSelector())])\n", "score": -5.545637436382279, "score_history": [-0.00014495849609375, -1.1444091796875e-05, -0.0002725990198086947, -6.794924956921022e-06, -7.152531907195225e-06, -1.1909287422895432e-07, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -0.00787353515625, -0.00035858154296875, -5.245203283266164e-06, -2.5391578674316406e-05, 0.0, -2.288818359375e-05, -0.0002057431556750089, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -0.9228401184082031, -0.00016021728515625, -2.3841855067985307e-07, -2.264974000354414e-06, -1.0132764145964757e-05, -1.1920928244535389e-07, -0.028360003605484962, 0.0, -0.0038299560546875, -0.2892189025878906, -0.0015678403433412313, -1.9073486328125e-06, -7.82012939453125e-05, -0.014296531677246094, -3.0517578125e-05, -4.272392272949219, -3.24249267578125e-05, -0.0008535385131835938, -3.814697265625e-06, -0.002856014994904399, -1.7046813809429295e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 80, 310, "6", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"_type": "Template70", "hole0": 6}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 2, "hole2": "enrage"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Amani Berserker", "hole2": "ALL"}], "hole0": "AmaniBerserker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, divine_shield=True)\n", "score": -5.79756016859956, "score_history": [-0.00014495849609375, -1.1444091796875e-05, -0.0002725990198086947, -6.794924956921022e-06, -7.152531907195225e-06, -1.1909287422895432e-07, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -0.00787353515625, -0.00035858154296875, -5.245203283266164e-06, -2.5391578674316406e-05, 0.0, -2.288818359375e-05, -0.0002057431556750089, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -0.9228401184082031, -0.00016021728515625, -2.3841855067985307e-07, -2.264974000354414e-06, -1.0132764145964757e-05, -1.1920928244535389e-07, -4.863199710845947, -1.1920928244535389e-07, -0.0020008087158203125, -7.62939453125e-06, -0.00025355664547532797, 0.0], "choice_history": [97, 283, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "3", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "divine_shield"}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Amani Berserker", "hole2": "ALL"}], "hole0": "AmaniBerserker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -6.266665488894425, "score_history": [-0.00014495849609375, -1.1444091796875e-05, -0.0002725990198086947, -6.794924956921022e-06, -7.152531907195225e-06, -1.1909287422895432e-07, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -0.00787353515625, -0.00035858154296875, -5.245203283266164e-06, -2.5391578674316406e-05, 0.0, -2.288818359375e-05, -0.0002057431556750089, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -0.509613037109375, -5.747673988342285, -1.0609555829432793e-05, -1.33514404296875e-05, -4.887576324108522e-06, -1.1920928244535389e-07, -0.00026424293173477054, 0.0], "choice_history": [97, 283, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 306, "Minion", "<EOS>", "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template68", "hole0": "Minion", "hole2": 3}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Amani Berserker", "hole2": "ALL"}], "hole0": "AmaniBerserker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -9.309209896841793, "score_history": [-0.00014495849609375, -1.1444091796875e-05, -0.0002725990198086947, -6.794924956921022e-06, -7.152531907195225e-06, -1.1909287422895432e-07, -1.537799835205078e-05, 0.0, -1.9073486328125e-06, -0.00787353515625, -0.00035858154296875, -5.245203283266164e-06, -2.5391578674316406e-05, 0.0, -2.288818359375e-05, -0.0002057431556750089, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.000102996826171875, 0.0, -3.814697265625e-06, -9.299495697021484, -0.000522613525390625, -1.9430925021879375e-05, -2.3841855067985307e-07, -8.666422218084335e-05, 0.0], "choice_history": [97, 283, "Amani", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole1": 2, "_type": "Template31", "hole0": "Amani Berserker", "hole2": "ALL"}], "hole0": "AmaniBerserker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(), ActionTag(AddCard(\n            hearthbreaker.cards.Fireball()), PlayerSelector()))])\n", "beams": [{"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(conditions=[IsType(MINION_TYPE.MECH\n            )])), PlayerSelector()))])\n", "score": -0.8228747135778747, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -0.05106412619352341, -2.157668859581463e-05, -2.0265558760002023e-06, -1.3874378055334091e-05, -2.110004425048828e-05, -7.152555099310121e-07, -8.20159912109375e-05, -0.000335693359375, -3.62396240234375e-05, -6.556489552167477e-06, -3.552436828613281e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -0.1184738278388977, 0.0, -0.10356807708740234, -0.0004673004150390625, -0.1859731674194336, 0.0, -2.47955322265625e-05, 0.0, -1.6570091247558594e-05, 0.0, -8.58306884765625e-05, -0.0006694793701171875, -0.00359344482421875, -0.0005435943603515625, -0.014512062072753906, -8.583057933719829e-06, -0.00042259314795956016, -0.0004552602767944336, -5.137898551765829e-05, -0.14315979182720184, -0.005518436431884766, -7.62939453125e-06, -0.0047397613525390625, -0.040169715881347656, -0.00037384033203125, -0.010551651939749718, -0.007448421325534582, -5.7220458984375e-06, -0.03787478059530258, -7.152555099310121e-07, -1.33514404296875e-05, -0.0053234100341796875, -0.005321502685546875, -0.007136940490454435, -0.0005577802658081055, -1.811981201171875e-05, -3.814697265625e-06, -0.010198593139648438, -0.000446319580078125, -9.918212890625e-05, 0.0, -9.608261461835355e-05, -0.004575133323669434, -6.4373016357421875e-06, -5.91278076171875e-05, -4.57763671875e-05, -5.7220458984375e-06, -0.023724675178527832, 0.0, -0.002410888671875, -8.20159912109375e-05, -0.019771575927734375, -0.0023527145385742188, -0.0023374557495117188, -0.0051898956298828125, -1.9073486328125e-06, -0.0026092529296875, -5.7220458984375e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "5", "<EOS>", "7", "<EOS>", "Spell", "Cast", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "1", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 346, 74, 297, "MECH", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "SpellCast", "hole0": 5, "_type": "Template36", "hole3": [{"hole1": 1, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 7, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"_type": "Template60", "hole0": "MECH"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard"}]}, "_type": "Return"}], "hole2": [{"hole1": 7, "hole3": "LEGENDARY", "_type": "Template34", "hole0": "Archmage Antonidas", "hole2": "MAGE"}], "hole0": "ArchmageAntonidas", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(conditions=[IsType(MINION_TYPE.MECH\n            )])), PlayerSelector()))])\n", "score": -2.4755386096065024, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -0.05106412619352341, -2.157668859581463e-05, -2.0265558760002023e-06, -1.3874378055334091e-05, -2.110004425048828e-05, -7.152555099310121e-07, -8.20159912109375e-05, -0.000335693359375, -3.62396240234375e-05, -6.556489552167477e-06, -3.552436828613281e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -0.1184738278388977, 0.0, -0.10356807708740234, -0.0004673004150390625, -1.8937749862670898, 0.0, -5.7220458984375e-05, 0.0, -1.251697449333733e-05, 0.0, -2.47955322265625e-05, -0.0006313323974609375, -0.00438690185546875, -0.000621795654296875, -0.0079345703125, -1.2040129149681889e-05, -0.00039708276744931936, -0.00020301342010498047, -7.188227027654648e-05, -0.08145555853843689, -0.006075620651245117, -7.62939453125e-06, -0.0059299468994140625, -0.049335479736328125, -0.00035858154296875, -0.011683886870741844, -0.007686964701861143, -5.7220458984375e-06, -0.03309261426329613, -5.960462772236497e-07, -1.52587890625e-05, -0.0051097869873046875, -0.004913330078125, -0.008797764778137207, -0.0007921457290649414, -1.800060272216797e-05, -3.814697265625e-06, -0.009787559509277344, -0.0004482269287109375, -9.34600830078125e-05, 0.0, -9.918206342263147e-05, -0.004413962364196777, -6.4373016357421875e-06, -5.91278076171875e-05, -4.1961669921875e-05, -5.7220458984375e-06, -0.02591264247894287, 0.0, -0.0021610260009765625, -8.0108642578125e-05, -0.022371292114257812, -0.0022668838500976562, -0.0022916793823242188, -0.005130767822265625, -1.9073486328125e-06, -0.00267791748046875, -5.53131103515625e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "5", "<EOS>", "7", "<EOS>", "Spell", "Cast", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "1", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 346, 74, 297, "MECH", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "SpellCast", "hole0": 5, "_type": "Template36", "hole3": [{"hole1": 1, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 7, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"_type": "Template60", "hole0": "MECH"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard"}]}, "_type": "Return"}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Archmage Antonidas", "hole2": "MAGE"}], "hole0": "ArchmageAntonidas", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 5, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(conditions=[IsType(MINION_TYPE.MECH\n            )])), PlayerSelector()))])\n", "score": -2.819218848607676, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -0.05106412619352341, -2.157668859581463e-05, -2.0265558760002023e-06, -1.3874378055334091e-05, -2.110004425048828e-05, -7.152555099310121e-07, -8.20159912109375e-05, -0.000335693359375, -3.62396240234375e-05, -6.556489552167477e-06, -3.552436828613281e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -2.1918528079986572, -1.9073486328125e-06, -0.013513565063476562, -0.00043487548828125, -0.16309642791748047, 0.0, -7.62939453125e-06, 0.0, -1.609325408935547e-05, 0.0, -0.000110626220703125, -0.0005588531494140625, -0.0037059783935546875, -0.0010852813720703125, -0.025809288024902344, -1.3112978194840252e-05, -0.00031971686985343695, -0.0007717609405517578, -3.70738489436917e-05, -0.1522229015827179, -0.0064849853515625, -1.1444091796875e-05, -0.005908966064453125, -0.039703369140625, -0.0003795623779296875, -0.010842335410416126, -0.007460036780685186, -5.7220458984375e-06, -0.035514332354068756, -3.576278118089249e-07, -1.1444091796875e-05, -0.005702018737792969, -0.005612373352050781, -0.008397459983825684, -0.000670313835144043, -1.811981201171875e-05, -3.814697265625e-06, -0.010149002075195312, -0.000457763671875, -8.392333984375e-05, 0.0, -8.857242937665433e-05, -0.004634261131286621, -6.556510470545618e-06, -6.29425048828125e-05, -3.814697265625e-05, -5.7220458984375e-06, -0.03070700168609619, 0.0, -0.0019359588623046875, -7.2479248046875e-05, -0.026994705200195312, -0.0021657943725585938, -0.0021677017211914062, -0.00510406494140625, -1.9073486328125e-06, -0.002490997314453125, -5.340576171875e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Archmage", " ", "Antonidas", "<EOS>", "5", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "5", "<EOS>", "7", "<EOS>", "Spell", "Cast", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "1", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 346, 74, 297, "MECH", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "SpellCast", "hole0": 5, "_type": "Template36", "hole3": [{"hole1": 1, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 7, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"_type": "Template60", "hole0": "MECH"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard"}]}, "_type": "Return"}], "hole2": [{"hole1": 5, "hole3": "LEGENDARY", "_type": "Template34", "hole0": "Archmage Antonidas", "hole2": "MAGE"}], "hole0": "ArchmageAntonidas", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(conditions=[IsType(MINION_TYPE.MECH\n            )])), PlayerSelector()))])\n", "score": -3.1799639699531497, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -0.05106412619352341, -2.157668859581463e-05, -2.0265558760002023e-06, -1.3874378055334091e-05, -2.110004425048828e-05, -7.152555099310121e-07, -8.20159912109375e-05, -0.000335693359375, -3.62396240234375e-05, -6.556489552167477e-06, -3.552436828613281e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -0.1184738278388977, 0.0, -2.437808036804199, -5.7220458984375e-06, -0.19110107421875, 0.0, -1.9073486328125e-05, 0.0, -1.5020368664409034e-05, 0.0, -0.000102996826171875, -0.0024585723876953125, -0.0033016204833984375, -0.0005950927734375, -0.01064300537109375, -7.5101784204889555e-06, -0.0005199871375225484, -0.0003943443298339844, -5.662416515406221e-05, -0.16551147401332855, -0.005464076995849609, -5.7220458984375e-06, -0.0054111480712890625, -0.0395050048828125, -0.000377655029296875, -0.010182950645685196, -0.007400897331535816, -5.7220458984375e-06, -0.03673643246293068, -7.152555099310121e-07, -1.52587890625e-05, -0.005402565002441406, -0.0053424835205078125, -0.007227181922644377, -0.0005463361740112305, -1.811981201171875e-05, -3.814697265625e-06, -0.010263442993164062, -0.0004444122314453125, -9.918212890625e-05, 0.0, -9.798996325116605e-05, -0.004536032676696777, -6.4373016357421875e-06, -5.91278076171875e-05, -4.76837158203125e-05, -5.7220458984375e-06, -0.023813605308532715, 0.0, -0.0024900436401367188, -8.20159912109375e-05, -0.019056320190429688, -0.002376556396484375, -0.0023527145385742188, -0.005221366882324219, -1.9073486328125e-06, -0.0025787353515625, -5.7220458984375e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "5", "<EOS>", "7", "<EOS>", "Spell", "Cast", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "1", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 346, 74, 297, "MECH", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "SpellCast", "hole0": 5, "_type": "Template36", "hole3": [{"hole1": 1, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 7, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"_type": "Template60", "hole0": "MECH"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard"}]}, "_type": "Return"}], "hole2": [{"hole1": 7, "hole3": "LEGENDARY", "_type": "Template34", "hole0": "Archmage Antonidas", "hole2": "ROGUE"}], "hole0": "ArchmageAntonidas", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Antonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(conditions=[IsType(MINION_TYPE.MECH\n            )])), PlayerSelector()))])\n", "score": -3.773800667264112, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -3.0019900798797607, -2.157668859581463e-05, -2.0265558760002023e-06, -1.3874378055334091e-05, -2.110004425048828e-05, -7.152555099310121e-07, -8.20159912109375e-05, -0.000335693359375, -3.62396240234375e-05, -6.556489552167477e-06, -3.552436828613281e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -0.1184738278388977, 0.0, -0.10356807708740234, -0.0004673004150390625, -0.1859731674194336, 0.0, -2.47955322265625e-05, 0.0, -1.6570091247558594e-05, 0.0, -8.58306884765625e-05, -0.0006694793701171875, -0.00359344482421875, -0.0005435943603515625, -0.014512062072753906, -8.583057933719829e-06, -0.00042259314795956016, -0.0004552602767944336, -5.137898551765829e-05, -0.14315979182720184, -0.005518436431884766, -7.62939453125e-06, -0.0047397613525390625, -0.040169715881347656, -0.00037384033203125, -0.010551651939749718, -0.007448421325534582, -5.7220458984375e-06, -0.03787478059530258, -7.152555099310121e-07, -1.33514404296875e-05, -0.0053234100341796875, -0.005321502685546875, -0.007136940490454435, -0.0005577802658081055, -1.811981201171875e-05, -3.814697265625e-06, -0.010198593139648438, -0.000446319580078125, -9.918212890625e-05, 0.0, -9.608261461835355e-05, -0.004575133323669434, -6.4373016357421875e-06, -5.91278076171875e-05, -4.57763671875e-05, -5.7220458984375e-06, -0.023724675178527832, 0.0, -0.002410888671875, -8.20159912109375e-05, -0.019771575927734375, -0.0023527145385742188, -0.0023374557495117188, -0.0051898956298828125, -1.9073486328125e-06, -0.0026092529296875, -5.7220458984375e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "<UNK>", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "5", "<EOS>", "7", "<EOS>", "Spell", "Cast", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "1", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 346, 74, 297, "MECH", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "SpellCast", "hole0": 5, "_type": "Template36", "hole3": [{"hole1": 1, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 7, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"_type": "Template60", "hole0": "MECH"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard"}]}, "_type": "Return"}], "hole2": [{"hole1": 7, "hole3": "LEGENDARY", "_type": "Template34", "hole0": "Archmage Antonidas", "hole2": "MAGE"}], "hole0": "<UNK>Antonidas", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(MinionPlaced(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(conditions=[IsType(MINION_TYPE.MECH\n            )])), PlayerSelector()))])\n", "score": -4.444130558634612, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -0.05106412619352341, -2.157668859581463e-05, -2.0265558760002023e-06, -1.3874378055334091e-05, -2.110004425048828e-05, -7.152555099310121e-07, -8.20159912109375e-05, -0.000335693359375, -3.62396240234375e-05, -6.556489552167477e-06, -3.552436828613281e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -0.1184738278388977, 0.0, -0.10356807708740234, -0.0004673004150390625, -0.1859731674194336, 0.0, -2.47955322265625e-05, 0.0, -1.6570091247558594e-05, 0.0, -8.58306884765625e-05, -0.0006694793701171875, -0.00359344482421875, -0.0005435943603515625, -0.014512062072753906, -8.583057933719829e-06, -0.00042259314795956016, -0.0004552602767944336, -5.137898551765829e-05, -2.038250684738159, -0.9777767658233643, -0.0012186749372631311, -3.814697265625e-06, -0.6835575103759766, -0.0009555816650390625, -0.11257156729698181, -0.020144322887063026, -1.1444091796875e-05, -0.0295853391289711, -2.3841855067985307e-07, -2.288818359375e-05, -0.0072021484375, -0.004748344421386719, -0.006341337226331234, -0.0005636215209960938, -1.430511474609375e-05, -3.814697265625e-06, -0.012149810791015625, -0.0004749298095703125, -9.72747802734375e-05, 0.0, -9.679786307970062e-05, -0.004987120628356934, -6.556510470545618e-06, -5.91278076171875e-05, -4.57763671875e-05, -5.7220458984375e-06, -0.02553856372833252, 0.0, -0.0021200180053710938, -8.58306884765625e-05, -0.023443222045898438, -0.0022792816162109375, -0.00209808349609375, -0.004878044128417969, -1.9073486328125e-06, -0.0021533966064453125, -5.7220458984375e-05, -3.576278118089249e-07], "choice_history": [97, 283, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "5", "<EOS>", "7", "<EOS>", "Minion", "Placed", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "1", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 346, 74, 297, "MECH", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionPlaced", "hole0": 5, "_type": "Template36", "hole3": [{"hole1": 1, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 7, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"_type": "Template60", "hole0": "MECH"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard"}]}, "_type": "Return"}], "hole2": [{"hole1": 7, "hole3": "LEGENDARY", "_type": "Template34", "hole0": "Archmage Antonidas", "hole2": "MAGE"}], "hole0": "ArchmageAntonidas", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 5, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(conditions=[IsType(MINION_TYPE.MECH\n            )])), PlayerSelector()))])\n", "score": -4.612813472641761, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -0.05106412619352341, -2.157668859581463e-05, -2.0265558760002023e-06, -1.3874378055334091e-05, -2.110004425048828e-05, -7.152555099310121e-07, -8.20159912109375e-05, -0.000335693359375, -3.62396240234375e-05, -6.556489552167477e-06, -3.552436828613281e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -2.1918528079986572, -1.9073486328125e-06, -0.013513565063476562, -0.00043487548828125, -1.9963397979736328, 0.0, -3.4332275390625e-05, 0.0, -1.0132789611816406e-05, 0.0, -2.6702880859375e-05, -0.00066375732421875, -0.0044116973876953125, -0.0010356903076171875, -0.011134147644042969, -1.0728812412708066e-05, -0.0003268705040682107, -0.00028336048126220703, -5.4239466408034787e-05, -0.1157585084438324, -0.006851315498352051, -9.5367431640625e-06, -0.00765228271484375, -0.04250049591064453, -0.0003604888916015625, -0.011300011537969112, -0.007825279608368874, -5.7220458984375e-06, -0.03171508014202118, -3.576278118089249e-07, -1.33514404296875e-05, -0.0057659149169921875, -0.005374908447265625, -0.011095166206359863, -0.0010287761688232422, -1.800060272216797e-05, -3.814697265625e-06, -0.010001182556152344, -0.0004634857177734375, -8.0108642578125e-05, 0.0, -9.143345960183069e-05, -0.004498839378356934, -6.556510470545618e-06, -6.103515625e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.03557324409484863, 0.0, -0.0018968582153320312, -7.05718994140625e-05, -0.028989791870117188, -0.0021228790283203125, -0.0021572113037109375, -0.0051136016845703125, -1.9073486328125e-06, -0.00246429443359375, -5.14984130859375e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Archmage", " ", "Antonidas", "<EOS>", "5", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "5", "<EOS>", "7", "<EOS>", "Spell", "Cast", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "1", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 346, 74, 297, "MECH", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "SpellCast", "hole0": 5, "_type": "Template36", "hole3": [{"hole1": 1, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 7, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"_type": "Template60", "hole0": "MECH"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard"}]}, "_type": "Return"}], "hole2": [{"hole1": 5, "hole3": "EPIC", "_type": "Template34", "hole0": "Archmage Antonidas", "hole2": "MAGE"}], "hole0": "ArchmageAntonidas", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(conditions=[IsType(MINION_TYPE.MECH\n            )])), PlayerSelector()))])\n", "score": -4.735371318444521, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -0.05106412619352341, -2.157668859581463e-05, -2.0265558760002023e-06, -1.3874378055334091e-05, -2.110004425048828e-05, -7.152555099310121e-07, -8.20159912109375e-05, -0.000335693359375, -3.62396240234375e-05, -6.556489552167477e-06, -3.552436828613281e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -0.1184738278388977, 0.0, -2.437808036804199, -5.7220458984375e-06, -1.775242805480957, 0.0, -4.9591064453125e-05, 0.0, -1.239776611328125e-05, 0.0, -2.09808349609375e-05, -0.0029296875, -0.003177642822265625, -0.00070953369140625, -0.004413604736328125, -1.1205666851310525e-05, -0.0005862681427970529, -0.0001691579818725586, -8.392237941734493e-05, -0.13029389083385468, -0.005915284156799316, -7.62939453125e-06, -0.0068035125732421875, -0.050026893615722656, -0.000362396240234375, -0.01107245683670044, -0.0077246613800525665, -5.7220458984375e-06, -0.031905997544527054, -7.152555099310121e-07, -1.71661376953125e-05, -0.0051326751708984375, -0.004748344421386719, -0.008701801300048828, -0.0007559061050415039, -1.800060272216797e-05, -3.814697265625e-06, -0.010117530822753906, -0.00045013427734375, -9.5367431640625e-05, 0.0, -0.00010120862134499475, -0.004389166831970215, -6.4373016357421875e-06, -5.91278076171875e-05, -4.38690185546875e-05, -5.7220458984375e-06, -0.025328516960144043, 0.0, -0.0022706985473632812, -8.20159912109375e-05, -0.020994186401367188, -0.0023059844970703125, -0.002315521240234375, -0.005158424377441406, -1.9073486328125e-06, -0.0026836395263671875, -5.7220458984375e-05, -2.3841855067985307e-07], "choice_history": [97, 283, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "5", "<EOS>", "7", "<EOS>", "Spell", "Cast", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "1", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 346, 74, 297, "MECH", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "SpellCast", "hole0": 5, "_type": "Template36", "hole3": [{"hole1": 1, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 7, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"_type": "Template60", "hole0": "MECH"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard"}]}, "_type": "Return"}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Archmage Antonidas", "hole2": "ROGUE"}], "hole0": "ArchmageAntonidas", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(3)),\n            ActionTag(AddCard(CardQuery(conditions=[IsType(MINION_TYPE.MECH\n            )])), PlayerSelector()))])\n", "score": -4.772412147734876, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -0.05106412619352341, -2.157668859581463e-05, -2.0265558760002023e-06, -1.3874378055334091e-05, -2.110004425048828e-05, -7.152555099310121e-07, -8.20159912109375e-05, -0.000335693359375, -3.62396240234375e-05, -6.556489552167477e-06, -3.552436828613281e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -0.1184738278388977, 0.0, -0.10356807708740234, -0.0004673004150390625, -0.1859731674194336, 0.0, -2.47955322265625e-05, 0.0, -1.6570091247558594e-05, 0.0, -8.58306884765625e-05, -0.0006694793701171875, -0.00359344482421875, -0.0005435943603515625, -0.014512062072753906, -8.583057933719829e-06, -0.00042259314795956016, -0.0004552602767944336, -5.137898551765829e-05, -0.14315979182720184, -0.005518436431884766, -7.62939453125e-06, -0.0047397613525390625, -0.040169715881347656, -0.00037384033203125, -0.010551651939749718, -0.007448421325534582, -5.7220458984375e-06, -3.942868709564209, -1.1920928244535389e-07, -1.71661376953125e-05, -0.0222320556640625, -0.014870643615722656, -0.013118505477905273, -0.0005921125411987305, -1.7881393432617188e-05, -1.9073486328125e-06, -0.012578964233398438, -0.0004634857177734375, -8.7738037109375e-05, 0.0, -8.940690167946741e-05, -0.004511237144470215, -6.4373016357421875e-06, -6.29425048828125e-05, -3.62396240234375e-05, -7.62939453125e-06, -0.02877044677734375, 0.0, -0.0022134780883789062, -6.103515625e-05, -0.025861740112304688, -0.0022935867309570312, -0.0022640228271484375, -0.0054340362548828125, -1.9073486328125e-06, -0.001346588134765625, -4.76837158203125e-05, -3.576278118089249e-07], "choice_history": [97, 283, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "5", "<EOS>", "7", "<EOS>", "Spell", "Cast", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "3", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 346, 74, 297, "MECH", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "SpellCast", "hole0": 5, "_type": "Template36", "hole3": [{"hole1": 3, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 7, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"_type": "Template60", "hole0": "MECH"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard"}]}, "_type": "Return"}], "hole2": [{"hole1": 7, "hole3": "LEGENDARY", "_type": "Template34", "hole0": "Archmage Antonidas", "hole2": "MAGE"}], "hole0": "ArchmageAntonidas", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector()))])\n", "score": -5.221746612229019, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -0.05106412619352341, -2.157668859581463e-05, -2.0265558760002023e-06, -1.3874378055334091e-05, -2.110004425048828e-05, -7.152555099310121e-07, -8.20159912109375e-05, -0.000335693359375, -3.62396240234375e-05, -6.556489552167477e-06, -3.552436828613281e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -0.1184738278388977, 0.0, -0.10356807708740234, -0.0004673004150390625, -0.1859731674194336, 0.0, -2.47955322265625e-05, 0.0, -1.6570091247558594e-05, 0.0, -8.58306884765625e-05, -0.0006694793701171875, -0.00359344482421875, -0.0005435943603515625, -0.014512062072753906, -8.583057933719829e-06, -0.00042259314795956016, -0.0004552602767944336, -5.137898551765829e-05, -0.14315979182720184, -0.005518436431884766, -7.62939453125e-06, -0.0047397613525390625, -0.040169715881347656, -0.00037384033203125, -0.010551651939749718, -0.007448421325534582, -5.7220458984375e-06, -0.03787478059530258, -7.152555099310121e-07, -1.33514404296875e-05, -0.0053234100341796875, -0.005321502685546875, -0.007136940490454435, -0.0005577802658081055, -1.811981201171875e-05, -3.814697265625e-06, -0.010198593139648438, -0.000446319580078125, -9.918212890625e-05, 0.0, -9.608261461835355e-05, -0.004575133323669434, -6.4373016357421875e-06, -5.91278076171875e-05, -4.57763671875e-05, -5.7220458984375e-06, -4.343070030212402, 0.0, -7.62939453125e-05, -4.00543212890625e-05, -0.10162353515625, -1.9073486328125e-06, -0.007533907890319824, -0.0016524791717529297, -0.0032073259353637695, -1.9073486328125e-06, -0.0001850128173828125, -1.71661376953125e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "5", "<EOS>", "7", "<EOS>", "Spell", "Cast", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "1", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "SpellCast", "hole0": 5, "_type": "Template36", "hole3": [{"hole1": 1, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 7, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "arg": "source", "_type": "keyword"}], "_type": "Call"}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard"}]}, "_type": "Return"}], "hole2": [{"hole1": 7, "hole3": "LEGENDARY", "_type": "Template34", "hole0": "Archmage Antonidas", "hole2": "MAGE"}], "hole0": "ArchmageAntonidas", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(5)),\n            ActionTag(AddCard(CardQuery(conditions=[IsType(MINION_TYPE.MECH\n            )])), PlayerSelector()))])\n", "score": -5.265065398423644, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -0.05106412619352341, -2.157668859581463e-05, -2.0265558760002023e-06, -1.3874378055334091e-05, -2.110004425048828e-05, -7.152555099310121e-07, -8.20159912109375e-05, -0.000335693359375, -3.62396240234375e-05, -6.556489552167477e-06, -3.552436828613281e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -0.1184738278388977, 0.0, -0.10356807708740234, -0.0004673004150390625, -0.1859731674194336, 0.0, -2.47955322265625e-05, 0.0, -1.6570091247558594e-05, 0.0, -8.58306884765625e-05, -0.0006694793701171875, -0.00359344482421875, -0.0005435943603515625, -0.014512062072753906, -8.583057933719829e-06, -0.00042259314795956016, -0.0004552602767944336, -5.137898551765829e-05, -0.14315979182720184, -0.005518436431884766, -7.62939453125e-06, -0.0047397613525390625, -0.040169715881347656, -0.00037384033203125, -0.010551651939749718, -0.007448421325534582, -5.7220458984375e-06, -4.431756019592285, -5.125993993715383e-06, -0.000186920166015625, -0.047634124755859375, -0.011430740356445312, -0.010881304740905762, -0.000775456428527832, -2.384185791015625e-05, -1.9073486328125e-06, -0.008531570434570312, -0.000545501708984375, -0.0001125335693359375, 0.0, -0.00010514252790017053, -0.00453794002532959, -6.4373016357421875e-06, -6.29425048828125e-05, -4.1961669921875e-05, -7.62939453125e-06, -0.021667838096618652, 0.0, -0.0028057098388671875, -7.2479248046875e-05, -0.019548416137695312, -0.0024394989013671875, -0.0024690628051757812, -0.0053958892822265625, -1.9073486328125e-06, -0.00141143798828125, -5.14984130859375e-05, -4.768370445162873e-07], "choice_history": [97, 283, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "5", "<EOS>", "7", "<EOS>", "Spell", "Cast", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "5", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 346, 74, 297, "MECH", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "SpellCast", "hole0": 5, "_type": "Template36", "hole3": [{"hole1": 5, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 7, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"_type": "Template60", "hole0": "MECH"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard"}]}, "_type": "Return"}], "hole2": [{"hole1": 7, "hole3": "LEGENDARY", "_type": "Template34", "hole0": "Archmage Antonidas", "hole2": "MAGE"}], "hole0": "ArchmageAntonidas", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(MinionDied(IsType(MINION_TYPE.\n            MECH)), ActionTag(Give([Buff(ChangeAttack(1)), Buff(\n            ChangeHealth(1))]), TargetSelector()))])\n", "score": -5.339375873978042, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -0.05106412619352341, -2.157668859581463e-05, -2.0265558760002023e-06, -1.3874378055334091e-05, -2.110004425048828e-05, -7.152555099310121e-07, -8.20159912109375e-05, -0.000335693359375, -3.62396240234375e-05, -6.556489552167477e-06, -3.552436828613281e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -0.1184738278388977, 0.0, -0.10356807708740234, -0.0004673004150390625, -0.1859731674194336, 0.0, -2.47955322265625e-05, 0.0, -1.6570091247558594e-05, 0.0, -8.58306884765625e-05, -0.0006694793701171875, -0.00359344482421875, -0.0005435943603515625, -0.014512062072753906, -8.583057933719829e-06, -0.00042259314795956016, -0.0004552602767944336, -5.137898551765829e-05, -2.038250684738159, -0.9083149433135986, -2.2530550268129446e-05, -3.814697265625e-06, -0.06380748748779297, -0.0016756057739257812, -0.042685627937316895, -8.0108642578125e-05, -1.9073486328125e-06, -0.90850830078125, -0.007176399230957031, -0.001132965087890625, -7.43865966796875e-05, -0.03319859504699707, -0.004565596580505371, -3.4570634852570947e-06, -0.00067901611328125, -0.48383426666259766, -0.00121307373046875, -0.0037137269973754883, -0.2897524833679199, -0.0001926422119140625, -0.020642753690481186, -3.933906555175781e-06, -0.006177067756652832, -0.002918243408203125, -2.1457672119140625e-06, -0.011677672155201435, -1.9073486328125e-05, -0.000553131103515625, -8.0108642578125e-05, -0.026947975158691406, -0.0008870363235473633, 0.0], "choice_history": [97, 283, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "5", "<EOS>", "7", "<EOS>", "Minion", "Died", "<EOS>", 346, 74, 297, "MECH", "<EOS>", 346, 45, 150, 21, 174, "Action", "Tag", "<EOS>", 347, 55, 215, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 88, 325, "Target", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionDied", "hole0": 5, "_type": "Template36", "hole3": [{"_type": "Template60", "hole0": "MECH"}], "hole1": 7, "hole4": [{"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 1, "hole3": 1, "_type": "Template21", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}, {"_type": "Template79", "hole0": "TargetSelector"}], "_type": "Call"}]}, "_type": "Return"}], "hole2": [{"hole1": 7, "hole3": "LEGENDARY", "_type": "Template34", "hole0": "Archmage Antonidas", "hole2": "MAGE"}], "hole0": "ArchmageAntonidas", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .MECH)), ActionTag(Give([Buff(ChangeAttack(1)), Buff(\n            ChangeHealth(1))]), TargetSelector()))])\n", "score": -5.78549341131361, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -0.05106412619352341, -2.157668859581463e-05, -2.0265558760002023e-06, -1.3874378055334091e-05, -2.110004425048828e-05, -7.152555099310121e-07, -8.20159912109375e-05, -0.000335693359375, -3.62396240234375e-05, -6.556489552167477e-06, -3.552436828613281e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -0.1184738278388977, 0.0, -0.10356807708740234, -0.0004673004150390625, -0.1859731674194336, 0.0, -2.47955322265625e-05, 0.0, -1.6570091247558594e-05, 0.0, -8.58306884765625e-05, -0.0006694793701171875, -0.00359344482421875, -0.0005435943603515625, -0.014512062072753906, -8.583057933719829e-06, -0.00042259314795956016, -0.0004552602767944336, -5.137898551765829e-05, -2.038250684738159, -0.9777767658233643, -0.0012186749372631311, -3.814697265625e-06, -0.7635154724121094, -0.007277488708496094, -0.024361729621887207, -5.7220458984375e-05, -1.9073486328125e-06, -0.7307376861572266, -0.005183219909667969, -0.00113677978515625, -9.1552734375e-05, -0.036605119705200195, -0.004393100738525391, -3.099436753473128e-06, -0.0006866455078125, -0.3339090347290039, -0.0014371871948242188, -0.002804875373840332, -0.30490756034851074, -0.000274658203125, -0.020210858434438705, -3.933906555175781e-06, -0.00668644905090332, -0.0036754608154296875, -2.1457672119140625e-06, -0.011594363488256931, -1.52587890625e-05, -0.000614166259765625, -7.62939453125e-05, -0.02640819549560547, -0.000992894172668457, 0.0], "choice_history": [97, 283, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "5", "<EOS>", "7", "<EOS>", "Minion", "Placed", "<EOS>", 346, 74, 297, "MECH", "<EOS>", 346, 45, 150, 21, 174, "Action", "Tag", "<EOS>", 347, 55, 215, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 88, 325, "Target", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionPlaced", "hole0": 5, "_type": "Template36", "hole3": [{"_type": "Template60", "hole0": "MECH"}], "hole1": 7, "hole4": [{"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 1, "hole3": 1, "_type": "Template21", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}, {"_type": "Template79", "hole0": "TargetSelector"}], "_type": "Call"}]}, "_type": "Return"}], "hole2": [{"hole1": 7, "hole3": "LEGENDARY", "_type": "Template34", "hole0": "Archmage Antonidas", "hole2": "MAGE"}], "hole0": "ArchmageAntonidas", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(MinionDied(IsType(MINION_TYPE.\n            MECH)), ActionTag(AddCard(CardQuery(conditions=[IsType(\n            MINION_TYPE.MECH)])), PlayerSelector(EnemyPlayer())))])\n", "score": -6.900569254483571, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -0.05106412619352341, -2.157668859581463e-05, -2.0265558760002023e-06, -1.3874378055334091e-05, -2.110004425048828e-05, -7.152555099310121e-07, -8.20159912109375e-05, -0.000335693359375, -3.62396240234375e-05, -6.556489552167477e-06, -3.552436828613281e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -0.1184738278388977, 0.0, -0.10356807708740234, -0.0004673004150390625, -0.1859731674194336, 0.0, -2.47955322265625e-05, 0.0, -1.6570091247558594e-05, 0.0, -8.58306884765625e-05, -0.0006694793701171875, -0.00359344482421875, -0.0005435943603515625, -0.014512062072753906, -8.583057933719829e-06, -0.00042259314795956016, -0.0004552602767944336, -5.137898551765829e-05, -2.038250684738159, -0.9083149433135986, -2.2530550268129446e-05, -3.814697265625e-06, -0.06380748748779297, -0.0016756057739257812, -0.042685627937316895, -8.0108642578125e-05, -1.9073486328125e-06, -1.2810440063476562, -0.20168495178222656, -0.00858768168836832, -4.172307308181189e-05, -0.0001873934525065124, 0.0, -0.0002193450927734375, -0.005055427551269531, -0.0001220703125, -1.9073486328125e-06, -0.0009124279022216797, -0.005790829658508301, -5.006789251638111e-06, -0.0001049041748046875, -2.09808349609375e-05, -9.5367431640625e-06, -0.550944447517395, 0.0, -0.004338264465332031, -3.814697265625e-05, -0.06832408905029297, -0.0024480819702148438, -0.0061397552490234375, -0.0031156539916992188, 0.0, -0.0034695863723754883, -8.96453857421875e-05, -1.1920922133867862e-06, -2.09808349609375e-05, -0.4462146759033203, -3.814697265625e-06, -0.7744064331054688, -0.0017987489700317383, -5.7220458984375e-06], "choice_history": [97, 283, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "5", "<EOS>", "7", "<EOS>", "Minion", "Died", "<EOS>", 346, 74, 297, "MECH", "<EOS>", 346, 64, 272, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 346, 74, 297, "MECH", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionDied", "hole0": 5, "_type": "Template36", "hole3": [{"_type": "Template60", "hole0": "MECH"}], "hole1": 7, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"_type": "Template60", "hole0": "MECH"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard", "hole4": [{"_type": "Template79", "hole0": "EnemyPlayer"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 7, "hole3": "LEGENDARY", "_type": "Template34", "hole0": "Archmage Antonidas", "hole2": "MAGE"}], "hole0": "ArchmageAntonidas", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(conditions=[Is<UNK>(Attribute(\n            'attack', HeroSelector(EnemyPlayer()))), IsSpell()])),\n            PlayerSelector()))])\n", "score": -7.866700937860273, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -0.05106412619352341, -2.157668859581463e-05, -2.0265558760002023e-06, -1.3874378055334091e-05, -2.110004425048828e-05, -7.152555099310121e-07, -8.20159912109375e-05, -0.000335693359375, -3.62396240234375e-05, -6.556489552167477e-06, -3.552436828613281e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -0.1184738278388977, 0.0, -0.10356807708740234, -0.0004673004150390625, -0.1859731674194336, 0.0, -2.47955322265625e-05, 0.0, -1.6570091247558594e-05, 0.0, -8.58306884765625e-05, -0.0006694793701171875, -0.00359344482421875, -0.0005435943603515625, -0.014512062072753906, -8.583057933719829e-06, -0.00042259314795956016, -0.0004552602767944336, -5.137898551765829e-05, -0.14315979182720184, -0.005518436431884766, -7.62939453125e-06, -0.0047397613525390625, -0.040169715881347656, -0.00037384033203125, -0.010551651939749718, -0.007448421325534582, -5.7220458984375e-06, -0.03787478059530258, -7.152555099310121e-07, -1.33514404296875e-05, -0.0053234100341796875, -0.005321502685546875, -0.007136940490454435, -0.0005577802658081055, -1.811981201171875e-05, -3.814697265625e-06, -0.010198593139648438, -0.000446319580078125, -9.918212890625e-05, 0.0, -9.608261461835355e-05, -0.004575133323669434, -6.4373016357421875e-06, -5.91278076171875e-05, -4.57763671875e-05, -5.7220458984375e-06, -0.023724675178527832, 0.0, -0.002410888671875, -8.20159912109375e-05, -3.9615402221679688, -0.21736526489257812, -0.013666152954101562, -0.35315239429473877, -0.16713477671146393, -0.029068583622574806, -0.00030517578125, 0.0, -0.06495244801044464, -9.357929229736328e-05, -0.0001659393310546875, -0.000560760498046875, -0.00038909912109375, -0.40004920959472656, 0.0, -0.49506473541259766, -0.0046977996826171875, -0.14974141120910645, -4.017353057861328e-05, -1.1920928244535389e-07, -0.36492884159088135, -0.0038263797760009766, -3.814697265625e-06, -0.2255849838256836, -0.016434669494628906, -0.031994618475437164, -0.5317889451980591, -0.005196571350097656, -0.038397789001464844, -1.9073486328125e-06, -1.1920928244535389e-07], "choice_history": [97, 283, "Archmage", "Antonidas", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "5", "<EOS>", "7", "<EOS>", "Spell", "Cast", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "1", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 77, 302, "Is", "<UNK>", "<EOS>", 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 70, 292, "Hero", "Selector", "<EOS>", "Enemy", "Player", "<EOS>", 83, 314, "Is", "Spell", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "SpellCast", "hole0": 5, "_type": "Template36", "hole3": [{"hole1": 1, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 7, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": {"id": "Attribute", "_type": "Name"}, "_type": "Template64", "hole0": "Is<UNK>", "hole2": [{"s": "attack", "_type": "Str"}, {"hole1": "EnemyPlayer", "_type": "Template55", "hole0": "HeroSelector"}]}, {"_type": "Template73_expr_seq", "hole0": "IsSpell"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard"}]}, "_type": "Return"}], "hole2": [{"hole1": 7, "hole3": "LEGENDARY", "_type": "Template34", "hole0": "Archmage Antonidas", "hole2": "MAGE"}], "hole0": "ArchmageAntonidas", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.increase_health(1)\n", "beams": [{"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(BuffUntil(ChangeAttack(1), 1))\n", "score": -1.7797589270335195, "score_history": [-0.000469207763671875, -0.0001125335693359375, -7.62939453125e-06, -7.62939453125e-05, -0.00032806396484375, -2.622600959512056e-06, -1.1920896213268861e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.3841846541472478e-07, -4.8279762268066406e-05, -1.3828258488501888e-05, -0.0003337860107421875, -0.0029735565185546875, -0.004764556884765625, -2.9682672902708873e-05, -4.88758041683468e-06, -1.4542187273036689e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00335693359375, 0.0, -0.00029754638671875, -0.0006561279296875, -0.0030117034912109375, -0.000144354606163688, -4.649158654501662e-06, -6.29425048828125e-05, -0.0004444122314453125, -2.6702880859375e-05, -0.0005676746368408203, -1.9073486328125e-06, -0.0004215240478515625, -1.71661376953125e-05, -6.4849853515625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -6.0558319091796875e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.009550213813781738, -2.3841855067985307e-07, -0.0017919540405273438, -0.003276824951171875, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.00012505054473876953, -2.3841855067985307e-07, -0.0003604888916015625, -1.1920928244535389e-07, -0.12591886520385742, -4.0531158447265625e-06, 0.0, -0.01710987091064453, -0.000148773193359375, -0.0004177093505859375, -1.9073486328125e-06, -0.2511410415172577, -0.004737996030598879, -1.311301275563892e-06, -9.5367431640625e-06, -0.4873065948486328, -0.025630950927734375, -0.0002994537353515625, -1.1444091796875e-05, -0.14537274837493896, -0.005700111389160156, -3.576278118089249e-07, 0.0, -0.6057376861572266, -5.7220458984375e-06, -0.04335153102874756, -2.0265579223632812e-06, -0.027584075927734375, -3.62396240234375e-05, -0.00561191001906991, -5.7220440794480965e-06], "choice_history": [96, 173, 358, 105, 152, "Bananas", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Bananas", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 45, 150, 21, 174, "Buff", "Until", "<EOS>", 347, 45, 150, 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Bananas", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "add_buff", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"func": {"id": "BuffUntil", "_type": "Name"}, "args": [{"func": {"id": "ChangeAttack", "_type": "Name"}, "args": [{"n": 1, "_type": "Num"}], "_type": "Call"}, {"n": 1, "_type": "Num"}], "_type": "Call"}]}], "name": "Bananas", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(BuffUntil(+1/+1(), TurnStarted()))\n", "score": -2.4380611759566406, "score_history": [-0.000469207763671875, -0.0001125335693359375, -7.62939453125e-06, -7.62939453125e-05, -0.00032806396484375, -2.622600959512056e-06, -1.1920896213268861e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.3841846541472478e-07, -4.8279762268066406e-05, -1.3828258488501888e-05, -0.0003337860107421875, -0.0029735565185546875, -0.004764556884765625, -2.9682672902708873e-05, -4.88758041683468e-06, -1.4542187273036689e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00335693359375, 0.0, -0.00029754638671875, -0.0006561279296875, -0.0030117034912109375, -0.000144354606163688, -4.649158654501662e-06, -6.29425048828125e-05, -0.0004444122314453125, -2.6702880859375e-05, -0.0005676746368408203, -1.9073486328125e-06, -0.0004215240478515625, -1.71661376953125e-05, -6.4849853515625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -6.0558319091796875e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.009550213813781738, -2.3841855067985307e-07, -0.0017919540405273438, -0.003276824951171875, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.00012505054473876953, -2.3841855067985307e-07, -0.0003604888916015625, -1.1920928244535389e-07, -0.12591886520385742, -4.0531158447265625e-06, 0.0, -0.01710987091064453, -0.000148773193359375, -0.0004177093505859375, -1.9073486328125e-06, -0.2511410415172577, -0.004737996030598879, -1.311301275563892e-06, -9.5367431640625e-06, -1.1907768249511719, -0.0001163482666015625, -0.11366641521453857, -0.10497628152370453, -0.0006990432739257812, -1.33514404296875e-05, -0.4194861352443695, -0.17522025108337402, -4.172325134277344e-06], "choice_history": [96, 173, 358, 105, 152, "Bananas", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Bananas", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 45, 150, 21, 174, "Buff", "Until", "<EOS>", 347, 88, 325, "+1/+1", "<EOS>", 88, 325, "Turn", "Started", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Bananas", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "add_buff", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"func": {"id": "BuffUntil", "_type": "Name"}, "args": [{"_type": "Template79", "hole0": "+1/+1"}, {"_type": "Template79", "hole0": "TurnStarted"}], "_type": "Call"}]}], "name": "Bananas", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1)\n", "score": -2.879963015470409, "score_history": [-0.000469207763671875, -0.0001125335693359375, -7.62939453125e-06, -7.62939453125e-05, -0.00032806396484375, -2.622600959512056e-06, -1.1920896213268861e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.3841846541472478e-07, -4.8279762268066406e-05, -1.3828258488501888e-05, -0.0003337860107421875, -0.0029735565185546875, -0.004764556884765625, -2.9682672902708873e-05, -4.88758041683468e-06, -1.4542187273036689e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00335693359375, 0.0, -0.00029754638671875, -0.0006561279296875, -0.0030117034912109375, -0.000144354606163688, -4.649158654501662e-06, -6.29425048828125e-05, -0.0004444122314453125, -2.6702880859375e-05, -0.0005676746368408203, -1.9073486328125e-06, -0.0004215240478515625, -1.71661376953125e-05, -6.4849853515625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -6.0558319091796875e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.009550213813781738, -2.3841855067985307e-07, -0.0017919540405273438, -0.003276824951171875, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.00012505054473876953, -2.3841855067985307e-07, -0.0003604888916015625, -1.1920928244535389e-07, -2.832963466644287, -1.1920928244535389e-07, 0.0, -0.013208389282226562, -5.7220458984375e-06, -0.0001740303705446422, 0.0], "choice_history": [96, 173, 358, 105, 152, "Bananas", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Bananas", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Bananas", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "increase_health", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 1, "_type": "Num"}]}], "name": "Bananas", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(BuffUntil(+1/+1(), SpellTarget()))\n", "score": -3.2785486918597186, "score_history": [-0.000469207763671875, -0.0001125335693359375, -7.62939453125e-06, -7.62939453125e-05, -0.00032806396484375, -2.622600959512056e-06, -1.1920896213268861e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.3841846541472478e-07, -4.8279762268066406e-05, -1.3828258488501888e-05, -0.0003337860107421875, -0.0029735565185546875, -0.004764556884765625, -2.9682672902708873e-05, -4.88758041683468e-06, -1.4542187273036689e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00335693359375, 0.0, -0.00029754638671875, -0.0006561279296875, -0.0030117034912109375, -0.000144354606163688, -4.649158654501662e-06, -6.29425048828125e-05, -0.0004444122314453125, -2.6702880859375e-05, -0.0005676746368408203, -1.9073486328125e-06, -0.0004215240478515625, -1.71661376953125e-05, -6.4849853515625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -6.0558319091796875e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.009550213813781738, -2.3841855067985307e-07, -0.0017919540405273438, -0.003276824951171875, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.00012505054473876953, -2.3841855067985307e-07, -0.0003604888916015625, -1.1920928244535389e-07, -0.12591886520385742, -4.0531158447265625e-06, 0.0, -0.01710987091064453, -0.000148773193359375, -0.0004177093505859375, -1.9073486328125e-06, -0.2511410415172577, -0.004737996030598879, -1.311301275563892e-06, -9.5367431640625e-06, -1.1907768249511719, -0.0001163482666015625, -0.11366641521453857, -0.10497628152370453, -0.0006990432739257812, -1.33514404296875e-05, -1.1298383474349976, -0.3047809898853302, -0.0005787372356280684], "choice_history": [96, 173, 358, 105, 152, "Bananas", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Bananas", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 45, 150, 21, 174, "Buff", "Until", "<EOS>", 347, 88, 325, "+1/+1", "<EOS>", 88, 325, "Spell", "Target", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Bananas", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "add_buff", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"func": {"id": "BuffUntil", "_type": "Name"}, "args": [{"_type": "Template79", "hole0": "+1/+1"}, {"_type": "Template79", "hole0": "SpellTarget"}], "_type": "Call"}]}], "name": "Bananas", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Effect(MinionDied(player=CurrentPlayer()),\n            ActionTag(Draw(), PlayerSelector())))\n", "score": -4.092026724103974, "score_history": [-0.000469207763671875, -0.0001125335693359375, -7.62939453125e-06, -7.62939453125e-05, -0.00032806396484375, -2.622600959512056e-06, -1.1920896213268861e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.3841846541472478e-07, -4.8279762268066406e-05, -1.3828258488501888e-05, -0.0003337860107421875, -0.0029735565185546875, -0.004764556884765625, -2.9682672902708873e-05, -4.88758041683468e-06, -1.4542187273036689e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00335693359375, 0.0, -0.00029754638671875, -0.0006561279296875, -0.0030117034912109375, -0.000144354606163688, -4.649158654501662e-06, -6.29425048828125e-05, -0.0004444122314453125, -2.6702880859375e-05, -0.0005676746368408203, -1.9073486328125e-06, -0.0004215240478515625, -1.71661376953125e-05, -6.4849853515625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -6.0558319091796875e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.009550213813781738, -2.3841855067985307e-07, -0.0017919540405273438, -0.003276824951171875, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.00012505054473876953, -2.3841855067985307e-07, -0.0003604888916015625, -1.1920928244535389e-07, -0.12591886520385742, -4.0531158447265625e-06, 0.0, -0.01710987091064453, -0.000148773193359375, -0.0004177093505859375, -1.9073486328125e-06, -1.8373198509216309, -0.01255339477211237, -0.000186920166015625, -0.0009288787841796875, -0.039870262145996094, -0.0002803802490234375, -2.09808349609375e-05, -0.1649402379989624, -0.02222251705825329, -5.650520324707031e-05, -0.008764266967773438, -0.0001697540283203125, -3.814697265625e-06, -0.010207295417785645, -2.3841855067985307e-07, -9.5367431640625e-06, 0.0, -0.622768223285675, -0.0021382812410593033, -3.576278118089249e-07, -0.15457725524902344, -0.2016458511352539, -0.8337150812149048, -1.9073486328125e-06, -0.0024281740188598633, -4.172325134277344e-06, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Bananas", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Bananas", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 45, 150, 21, 174, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Minion", "Died", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Current", "Player", "<EOS>", 64, 269, "Draw", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Bananas", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "add_buff", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"func": {"id": "Effect", "_type": "Name"}, "args": [{"func": {"id": "MinionDied", "_type": "Name"}, "keywords": [{"value": {"_type": "Template79", "hole0": "CurrentPlayer"}, "arg": "player", "_type": "keyword"}], "_type": "Call"}, {"hole3": "PlayerSelector", "_type": "Template44", "hole0": "Draw"}], "_type": "Call"}]}], "name": "Bananas", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(BuffUntil(ChangeAttack(-1), GreaterThan(Count(\n            MinionSelector(IsDamaged())), value=0)))\n", "score": -4.533997031533623, "score_history": [-0.000469207763671875, -0.0001125335693359375, -7.62939453125e-06, -7.62939453125e-05, -0.00032806396484375, -2.622600959512056e-06, -1.1920896213268861e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.3841846541472478e-07, -4.8279762268066406e-05, -1.3828258488501888e-05, -0.0003337860107421875, -0.0029735565185546875, -0.004764556884765625, -2.9682672902708873e-05, -4.88758041683468e-06, -1.4542187273036689e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00335693359375, 0.0, -0.00029754638671875, -0.0006561279296875, -0.0030117034912109375, -0.000144354606163688, -4.649158654501662e-06, -6.29425048828125e-05, -0.0004444122314453125, -2.6702880859375e-05, -0.0005676746368408203, -1.9073486328125e-06, -0.0004215240478515625, -1.71661376953125e-05, -6.4849853515625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -6.0558319091796875e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.009550213813781738, -2.3841855067985307e-07, -0.0017919540405273438, -0.003276824951171875, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.00012505054473876953, -2.3841855067985307e-07, -0.0003604888916015625, -1.1920928244535389e-07, -0.12591886520385742, -4.0531158447265625e-06, 0.0, -0.01710987091064453, -0.000148773193359375, -0.0004177093505859375, -1.9073486328125e-06, -0.2511410415172577, -0.004737996030598879, -1.311301275563892e-06, -9.5367431640625e-06, -0.4873065948486328, -0.025630950927734375, -0.0002994537353515625, -1.1444091796875e-05, -0.14537274837493896, -0.005700111389160156, -3.576278118089249e-07, 0.0, -0.8145694732666016, -0.004015922546386719, -0.001026153564453125, -0.00028228759765625, -0.0002841949462890625, -0.003519093617796898, -3.647804260253906e-05, -0.534876823425293, -0.2929210662841797, -0.0003337860107421875, -1.9073486328125e-06, -0.11654756218194962, -0.009271609596908092, -0.0007103264797478914, -3.814697265625e-06, -0.0013599395751953125, -0.0017299652099609375, -2.288818359375e-05, -1.1444091796875e-05, -0.7336971759796143, -0.00024640560150146484, -0.000118255615234375, -0.7017698287963867, -0.000545501708984375, -0.0009478599531576037, -0.00010597705113468692, -2.3841855067985307e-07, -0.009414752945303917, -0.023727117106318474, -8.344646857949556e-07, -0.0016498565673828125, -2.288818359375e-05, 0.0, -0.017419099807739258, -3.433175152167678e-05, -0.0005035400390625, -0.0008258819580078125, -0.16401682794094086, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Bananas", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Bananas", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 45, 150, 21, 174, "Buff", "Until", "<EOS>", 347, 45, 150, 21, 174, "Change", "Attack", "<EOS>", 346, 89, 331, 139, 23, 179, "1", "<EOS>", 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 70, 292, "Minion", "Selector", "<EOS>", "Is", "Damaged", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Bananas", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "add_buff", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"func": {"id": "BuffUntil", "_type": "Name"}, "args": [{"func": {"id": "ChangeAttack", "_type": "Name"}, "args": [{"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Call"}, {"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": "IsDamaged", "_type": "Template55", "hole0": "MinionSelector"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}], "_type": "Call"}]}], "name": "Bananas", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score": -4.866830778688886, "score_history": [-0.000469207763671875, -0.0001125335693359375, -7.62939453125e-06, -7.62939453125e-05, -0.00032806396484375, -2.622600959512056e-06, -1.1920896213268861e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.3841846541472478e-07, -4.8279762268066406e-05, -1.3828258488501888e-05, -0.0003337860107421875, -0.0029735565185546875, -0.004764556884765625, -2.9682672902708873e-05, -4.88758041683468e-06, -1.4542187273036689e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00335693359375, 0.0, -0.00029754638671875, -0.0006561279296875, -0.0030117034912109375, -0.000144354606163688, -4.649158654501662e-06, -6.29425048828125e-05, -0.0004444122314453125, -2.6702880859375e-05, -0.0005676746368408203, -1.9073486328125e-06, -0.0004215240478515625, -1.71661376953125e-05, -6.4849853515625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -6.0558319091796875e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.009550213813781738, -2.3841855067985307e-07, -0.0017919540405273438, -0.003276824951171875, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.00012505054473876953, -2.3841855067985307e-07, -0.0003604888916015625, -1.1920928244535389e-07, -4.758317470550537, -1.9073486328125e-06, -1.9073486328125e-06, -0.07429122924804688, -4.76837158203125e-05, -0.0005592925590462983, 0.0], "choice_history": [96, 173, 358, 105, 152, "Bananas", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Bananas", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Bananas", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "set_health_to", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 1, "_type": "Num"}]}], "name": "Bananas", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score": -5.645270518116881, "score_history": [-0.000469207763671875, -0.0001125335693359375, -7.62939453125e-06, -7.62939453125e-05, -0.00032806396484375, -2.622600959512056e-06, -1.1920896213268861e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.3841846541472478e-07, -4.8279762268066406e-05, -1.3828258488501888e-05, -0.0003337860107421875, -0.0029735565185546875, -0.004764556884765625, -2.9682672902708873e-05, -4.88758041683468e-06, -1.4542187273036689e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00335693359375, 0.0, -0.00029754638671875, -0.0006561279296875, -0.0030117034912109375, -0.000144354606163688, -4.649158654501662e-06, -6.29425048828125e-05, -0.0004444122314453125, -2.6702880859375e-05, -0.0005676746368408203, -1.9073486328125e-06, -0.0004215240478515625, -1.71661376953125e-05, -6.4849853515625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -6.0558319091796875e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.009550213813781738, -2.3841855067985307e-07, -0.0017919540405273438, -0.003276824951171875, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.00012505054473876953, -2.3841855067985307e-07, -0.0003604888916015625, -1.1920928244535389e-07, -5.602677822113037, 0.0, 0.0, -0.0076904296875, -4.57763671875e-05, -0.0012452020309865475, 0.0], "choice_history": [96, 173, 358, 105, 152, "Bananas", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Bananas", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Bananas", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "change_attack", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 1, "_type": "Num"}]}], "name": "Bananas", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(1)\n", "score": -5.813112631762621, "score_history": [-0.000469207763671875, -0.0001125335693359375, -7.62939453125e-06, -7.62939453125e-05, -0.00032806396484375, -2.622600959512056e-06, -1.1920896213268861e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.3841846541472478e-07, -4.8279762268066406e-05, -1.3828258488501888e-05, -0.0003337860107421875, -0.0029735565185546875, -0.004764556884765625, -2.9682672902708873e-05, -4.88758041683468e-06, -1.4542187273036689e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00335693359375, 0.0, -0.00029754638671875, -0.0006561279296875, -0.0030117034912109375, -0.000144354606163688, -4.649158654501662e-06, -6.29425048828125e-05, -0.0004444122314453125, -2.6702880859375e-05, -0.0005676746368408203, -1.9073486328125e-06, -0.0004215240478515625, -1.71661376953125e-05, -6.4849853515625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -6.0558319091796875e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.009550213813781738, -2.3841855067985307e-07, -0.0017919540405273438, -0.003276824951171875, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.00012505054473876953, -2.3841855067985307e-07, -0.0003604888916015625, -1.1920928244535389e-07, -4.178522109985352, 0.0, 0.0, -1.5997953414916992, -7.62939453125e-06, -0.0011761437635868788, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Bananas", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Bananas", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Bananas", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "add_effect", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 1, "_type": "Num"}]}], "name": "Bananas", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_armor(1)\n", "score": -5.887837934901242, "score_history": [-0.000469207763671875, -0.0001125335693359375, -7.62939453125e-06, -7.62939453125e-05, -0.00032806396484375, -2.622600959512056e-06, -1.1920896213268861e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.3841846541472478e-07, -4.8279762268066406e-05, -1.3828258488501888e-05, -0.0003337860107421875, -0.0029735565185546875, -0.004764556884765625, -2.9682672902708873e-05, -4.88758041683468e-06, -1.4542187273036689e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00335693359375, 0.0, -0.00029754638671875, -0.0006561279296875, -0.0030117034912109375, -0.000144354606163688, -4.649158654501662e-06, -6.29425048828125e-05, -0.0004444122314453125, -2.6702880859375e-05, -0.0005676746368408203, -1.9073486328125e-06, -0.0004215240478515625, -1.71661376953125e-05, -6.4849853515625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -6.0558319091796875e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.009550213813781738, -2.3841855067985307e-07, -0.0017919540405273438, -0.003276824951171875, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.00012505054473876953, -2.3841855067985307e-07, -0.0003604888916015625, -1.1920928244535389e-07, -5.822122097015381, -6.318072337307967e-06, -1.9073486328125e-06, -0.031658172607421875, -8.58306884765625e-05, -0.0003522020415402949, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Bananas", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Bananas", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_armor", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Bananas", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "increase_armor", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 1, "_type": "Num"}]}], "name": "Bananas", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.append(1)\n", "score": -6.054774786434727, "score_history": [-0.000469207763671875, -0.0001125335693359375, -7.62939453125e-06, -7.62939453125e-05, -0.00032806396484375, -2.622600959512056e-06, -1.1920896213268861e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.3841846541472478e-07, -4.8279762268066406e-05, -1.3828258488501888e-05, -0.0003337860107421875, -0.0029735565185546875, -0.004764556884765625, -2.9682672902708873e-05, -4.88758041683468e-06, -1.4542187273036689e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00335693359375, 0.0, -0.00029754638671875, -0.0006561279296875, -0.0030117034912109375, -0.000144354606163688, -4.649158654501662e-06, -6.29425048828125e-05, -0.0004444122314453125, -2.6702880859375e-05, -0.0005676746368408203, -1.9073486328125e-06, -0.0004215240478515625, -1.71661376953125e-05, -6.4849853515625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -6.0558319091796875e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.009550213813781738, -2.3841855067985307e-07, -0.0017919540405273438, -0.003276824951171875, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.00012505054473876953, -2.3841855067985307e-07, -0.0003604888916015625, -1.1920928244535389e-07, -5.978616714477539, -1.0728830375228426e-06, 0.0, -0.040210723876953125, -5.7220458984375e-05, -0.002275740262120962, -2.0265579223632812e-06], "choice_history": [96, 173, 358, 105, 152, "Bananas", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Bananas", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "append", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Bananas", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "append", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 1, "_type": "Num"}]}], "name": "Bananas", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(1)\n", "score": -6.0581202032935195, "score_history": [-0.000469207763671875, -0.0001125335693359375, -7.62939453125e-06, -7.62939453125e-05, -0.00032806396484375, -2.622600959512056e-06, -1.1920896213268861e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.3841846541472478e-07, -4.8279762268066406e-05, -1.3828258488501888e-05, -0.0003337860107421875, -0.0029735565185546875, -0.004764556884765625, -2.9682672902708873e-05, -4.88758041683468e-06, -1.4542187273036689e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00335693359375, 0.0, -0.00029754638671875, -0.0006561279296875, -0.0030117034912109375, -0.000144354606163688, -4.649158654501662e-06, -6.29425048828125e-05, -0.0004444122314453125, -2.6702880859375e-05, -0.0005676746368408203, -1.9073486328125e-06, -0.0004215240478515625, -1.71661376953125e-05, -6.4849853515625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -6.0558319091796875e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.009550213813781738, -2.3841855067985307e-07, -0.0017919540405273438, -0.003276824951171875, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.00012505054473876953, -2.3841855067985307e-07, -0.0003604888916015625, -1.1920928244535389e-07, -6.005734443664551, -1.0728830375228426e-06, 0.0, -0.016954421997070312, -3.62396240234375e-05, -0.0017827372066676617, 0.0], "choice_history": [96, 173, 358, 105, 152, "Bananas", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Bananas", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Bananas", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "change_temp_attack", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 1, "_type": "Num"}]}], "name": "Bananas", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -6.098122605212261, "score_history": [-0.000469207763671875, -0.0001125335693359375, -7.62939453125e-06, -7.62939453125e-05, -0.00032806396484375, -2.622600959512056e-06, -1.1920896213268861e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.3841846541472478e-07, -4.8279762268066406e-05, -1.3828258488501888e-05, -0.0003337860107421875, -0.0029735565185546875, -0.004764556884765625, -2.9682672902708873e-05, -4.88758041683468e-06, -1.4542187273036689e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.00335693359375, 0.0, -0.00029754638671875, -0.0006561279296875, -0.0030117034912109375, -0.000144354606163688, -4.649158654501662e-06, -6.29425048828125e-05, -0.0004444122314453125, -2.6702880859375e-05, -0.0005676746368408203, -1.9073486328125e-06, -0.0004215240478515625, -1.71661376953125e-05, -6.4849853515625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -6.0558319091796875e-05, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.009550213813781738, -2.3841855067985307e-07, -0.0017919540405273438, -0.003276824951171875, -1.33514404296875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.00012505054473876953, -2.3841855067985307e-07, -0.0003604888916015625, -1.1920928244535389e-07, -0.12591886520385742, -4.0531158447265625e-06, 0.0, -5.474515438079834, -0.0116729736328125, -0.44521278142929077, -0.007187205832451582], "choice_history": [96, 173, 358, 105, 152, "Bananas", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 200, "Bananas", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 346, 51, 175, "False", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 346, 69, 290, "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "ALL", "hole0": "Bananas", "_type": "Template14", "hole3": "COMMON", "hole1": 1, "hole4": [{"value": true, "_type": "NameConstant"}]}, {"hole1": "add_buff", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template54", "hole0": "<UNK>"}]}], "name": "Bananas", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n", "score": -11.367103208554909, "score_history": [-0.000469207763671875, -0.0001125335693359375, -7.62939453125e-06, -10.161579132080078, -1.1804790496826172, -0.023800039663910866, 0.0, -0.00016149389557540417, 0.0, -0.0004941225051879883, 0.0], "choice_history": [96, 173, 358, 127, 230, "Bananas", "<EOS>", "1", "<EOS>", "ALL", "<EOS>"], "model_output": {"body": [{"hole1": 1, "_type": "Template31", "hole0": "Bananas", "hole2": "ALL"}], "_type": "Module"}}, {"inferred_code": "", "score": -21.37735366821289, "score_history": [-0.000469207763671875, -0.0001125335693359375, -21.376771926879883], "choice_history": [96, 173, 357], "model_output": {"body": [], "_type": "Module"}}]}
{"gold_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(DoubleAttack()))\n", "beams": [{"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        <UNK> = self.target.health\n        self.target.change_attack(<UNK>)\n", "score": -4.7470344172050645, "score_history": [-0.015087127685546875, -0.000652313232421875, -0.0004440752090886235, -0.00037424711626954377, 0.0, -8.821445590001531e-06, -0.0001220703125, -2.3841855067985307e-07, -2.09808349609375e-05, -0.0060062408447265625, -0.0002613067626953125, -1.71661376953125e-05, 0.0, -1.1920922133867862e-06, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -0.0004024505615234375, -2.6702880859375e-05, -0.001651763916015625, -2.0265579223632812e-06, -6.115436553955078e-05, -2.8491018383647315e-05, -3.24249267578125e-05, -1.52587890625e-05, -3.4332275390625e-05, -1.5497195136049413e-06, -2.09808349609375e-05, -6.4849853515625e-05, -2.09808349609375e-05, -7.62939453125e-06, -8.392333984375e-05, -0.0001373291015625, -7.62939453125e-06, -0.0009224414825439453, -1.9073486328125e-06, -6.103515625e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -7.05718994140625e-05, -2.86102294921875e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.000324249267578125, -7.05718994140625e-05, -1.9073486328125e-06, -0.0034819841384887695, 0.0, -0.005171775817871094, -1.52587890625e-05, -0.00028228759765625, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000270843505859375, -2.47955322265625e-05, -6.29425048828125e-05, -2.288818359375e-05, -0.7806617021560669, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -2.6702880859375e-05, -4.76837158203125e-05, -3.62396240234375e-05, -2.1457672119140625e-06, -0.05695056915283203, -0.000438690185546875, -5.53131103515625e-05, -3.0517578125e-05, -9.34600830078125e-05, -1.1444091796875e-05, 0.0, -0.00010502338409423828, -3.62396240234375e-05, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -7.069110870361328e-05, -1.1920928244535389e-07, -0.000301361083984375, -1.9073486328125e-05, -6.103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.02270297333598137, -3.600114359869622e-05, -1.5454730987548828, -8.96453857421875e-05, -1.1444091796875e-05, 0.0, -0.00238037109375, 0.0, -0.004805564880371094, 0.0, -1.9073486328125e-05, 0.0, -0.005780696868896484, -5.0067901611328125e-05, -0.24799346923828125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0021266937255859375, -7.62939453125e-06, -0.02297985553741455, -2.0265579223632812e-06, -0.20129776000976562, -1.9073486328125e-06, -0.0001277923583984375, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -0.0116807222366333, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.1810988187789917, -3.814697265625e-06, -1.4152107238769531, -0.0002498626708984375, -0.02048778533935547, 0.0, -0.006439208984375, 0.0, -0.015992164611816406, 0.0, -3.814697265625e-05, 0.0, -0.14391303062438965, 0.0, -0.000457763671875, -0.00536346435546875, 0.0, -0.014279360882937908, -1.9073420844506472e-05], "choice_history": [97, 285, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Blessed", " ", "Champion", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_friendly_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "BlessedChampion", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "change_attack", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        <UNK> = self.target.health\n        self.target.change_attack(<UNK>)\n", "score": -4.806328047761632, "score_history": [-0.015087127685546875, -0.000652313232421875, -0.0004440752090886235, -0.00037424711626954377, 0.0, -8.821445590001531e-06, -0.0001220703125, -2.3841855067985307e-07, -2.09808349609375e-05, -0.0060062408447265625, -0.0002613067626953125, -1.71661376953125e-05, 0.0, -1.1920922133867862e-06, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -0.0004024505615234375, -2.6702880859375e-05, -0.001651763916015625, -2.0265579223632812e-06, -6.115436553955078e-05, -2.8491018383647315e-05, -3.24249267578125e-05, -1.52587890625e-05, -3.4332275390625e-05, -1.5497195136049413e-06, -2.09808349609375e-05, -6.4849853515625e-05, -2.09808349609375e-05, -7.62939453125e-06, -8.392333984375e-05, -0.0001373291015625, -7.62939453125e-06, -0.0009224414825439453, -1.9073486328125e-06, -6.103515625e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -7.05718994140625e-05, -2.86102294921875e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.000324249267578125, -7.05718994140625e-05, -1.9073486328125e-06, -0.0034819841384887695, 0.0, -0.005171775817871094, -1.52587890625e-05, -0.00028228759765625, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000270843505859375, -2.47955322265625e-05, -6.29425048828125e-05, -2.288818359375e-05, -0.7806617021560669, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -2.6702880859375e-05, -4.76837158203125e-05, -3.62396240234375e-05, -2.1457672119140625e-06, -0.05695056915283203, -0.000438690185546875, -5.53131103515625e-05, -3.0517578125e-05, -9.34600830078125e-05, -1.1444091796875e-05, 0.0, -0.00010502338409423828, -3.62396240234375e-05, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -7.069110870361328e-05, -1.1920928244535389e-07, -0.000301361083984375, -1.9073486328125e-05, -6.103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.02270297333598137, -3.600114359869622e-05, -0.9718923568725586, -0.001903533935546875, -0.0017833709716796875, -0.000186920166015625, -0.06327152252197266, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.012407541275024414, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -0.026732444763183594, -2.0742414562846534e-05, -0.0089263916015625, -0.4769296646118164, -7.62939453125e-05, -0.001377105712890625, 0.0, -3.24249267578125e-05, 0.0, -0.0007677078247070312, 0.0, -7.62939453125e-06, 0.0, -0.0022965669631958008, -0.00011444091796875, -0.3765554428100586, -1.9073486328125e-06, -3.814697265625e-06, -0.0002994537353515625, -1.52587890625e-05, -0.01575624942779541, -1.9073486328125e-06, -0.03814125061035156, -1.9073486328125e-06, -0.000171661376953125, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -0.006671905517578125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.12438666820526123, -3.814697265625e-06, -1.6507759094238281, -0.0002307891845703125, -0.0481414794921875, 0.0, -0.002552032470703125, 0.0, -0.0020313262939453125, 0.0, -1.71661376953125e-05, 0.0, -0.05377495288848877, 0.0, -0.000457763671875, -0.005721092224121094, 0.0, -0.013211844488978386, -1.6570051229791716e-05], "choice_history": [97, 285, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Blessed", " ", "Champion", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 14, 145, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_friendly_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "BlessedChampion", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"op": {"_type": "Sub"}, "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "BinOp", "right": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "change_attack", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -5.110859375658038, "score_history": [-4.2287702560424805, -2.09808349609375e-05, -5.7220458984375e-06, -6.29425048828125e-05, -9.918212890625e-05, -2.3841574147809297e-05, -5.960446742392378e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00022658385569229722, -3.838539123535156e-05, -9.536738616588991e-07, -2.09808349609375e-05, -0.0022783279418945312, -0.000240325927734375, -4.1723224057932384e-06, -0.0001049041748046875, -2.384185791015625e-06, -1.9073486328125e-06, -4.0531076592742465e-06, -1.1444091796875e-05, -0.004710674285888672, -1.52587890625e-05, -0.00022339820861816406, 0.0, -0.000240325927734375, -0.0004253387451171875, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.0002994537353515625, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -8.392333984375e-05, -2.09808349609375e-05, -0.0001373291015625, -4.76837158203125e-05, -2.6702880859375e-05, -1.52587890625e-05, -0.02606785297393799, 0.0, -0.0006427764892578125, -0.0031614303588867188, -9.5367431640625e-06, 0.0, -8.7738037109375e-05, 0.0, -7.62939453125e-06, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.14559590816497803, 0.0, 0.0, -0.5944137573242188, -0.0013675689697265625, -0.10002519190311432, 0.0], "choice_history": [96, 173, 358, 105, 152, "Blessed", "Champion", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Blessed", " ", "Champion", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "PALADIN", "hole0": "Blessed Champion", "_type": "Template14", "hole3": "RARE", "hole1": 5}, {"hole1": "change_attack", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 3, "_type": "Num"}]}], "name": "BlessedChampion", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        <UNK> = self.target.health\n        self.target.change_attack(<UNK>)\n", "score": -5.306433014307764, "score_history": [-0.015087127685546875, -0.000652313232421875, -0.0004440752090886235, -0.00037424711626954377, 0.0, -8.821445590001531e-06, -0.0001220703125, -2.3841855067985307e-07, -2.09808349609375e-05, -0.0060062408447265625, -0.0002613067626953125, -1.71661376953125e-05, 0.0, -1.1920922133867862e-06, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -0.0004024505615234375, -2.6702880859375e-05, -0.001651763916015625, -2.0265579223632812e-06, -6.115436553955078e-05, -2.8491018383647315e-05, -3.24249267578125e-05, -1.52587890625e-05, -3.4332275390625e-05, -1.5497195136049413e-06, -2.09808349609375e-05, -6.4849853515625e-05, -2.09808349609375e-05, -7.62939453125e-06, -8.392333984375e-05, -0.0001373291015625, -7.62939453125e-06, -0.0009224414825439453, -1.9073486328125e-06, -6.103515625e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -7.05718994140625e-05, -2.86102294921875e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.000324249267578125, -7.05718994140625e-05, -1.9073486328125e-06, -0.0034819841384887695, 0.0, -0.005171775817871094, -1.52587890625e-05, -0.00028228759765625, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000270843505859375, -2.47955322265625e-05, -6.29425048828125e-05, -2.288818359375e-05, -1.3124324083328247, 0.0, -0.000293731689453125, 0.0, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -4.9591064453125e-05, -2.09808349609375e-05, -2.2649765014648438e-06, -0.057056427001953125, -0.0004119873046875, -4.9591064453125e-05, -3.0517578125e-05, -9.1552734375e-05, -9.5367431640625e-06, 0.0, -9.548664093017578e-05, -3.62396240234375e-05, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -7.069110870361328e-05, -1.1920928244535389e-07, -0.00029754638671875, -1.9073486328125e-05, -6.103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.02229355461895466, -3.612034925026819e-05, -1.5422630310058594, -8.96453857421875e-05, -1.1444091796875e-05, 0.0, -0.0023937225341796875, 0.0, -0.0048427581787109375, 0.0, -1.9073486328125e-05, 0.0, -0.005814075469970703, -5.0067901611328125e-05, -0.24724102020263672, -1.9073486328125e-06, -1.9073486328125e-06, -0.0021533966064453125, -7.62939453125e-06, -0.023320317268371582, -2.0265579223632812e-06, -0.20409202575683594, -1.9073486328125e-06, -0.0001277923583984375, 0.0, -0.000133514404296875, -1.9073486328125e-06, -0.011785626411437988, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.18274211883544922, -3.814697265625e-06, -1.4419527053833008, -0.000247955322265625, -0.02012920379638672, 0.0, -0.0064792633056640625, 0.0, -0.016063690185546875, 0.0, -3.814697265625e-05, 0.0, -0.14411234855651855, 0.0, -0.0004482269287109375, -0.0054187774658203125, 0.0, -0.014294500462710857, -1.9073420844506472e-05], "choice_history": [97, 285, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Blessed", " ", "Champion", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "BlessedChampion", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "change_attack", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        <UNK> = self.target.health\n        self.target.change_attack(<UNK>)\n", "score": -5.3742710889672125, "score_history": [-0.015087127685546875, -0.000652313232421875, -0.0004440752090886235, -0.00037424711626954377, 0.0, -8.821445590001531e-06, -0.0001220703125, -2.3841855067985307e-07, -2.09808349609375e-05, -0.0060062408447265625, -0.0002613067626953125, -1.71661376953125e-05, 0.0, -1.1920922133867862e-06, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -0.0004024505615234375, -2.6702880859375e-05, -0.001651763916015625, -2.0265579223632812e-06, -6.115436553955078e-05, -2.8491018383647315e-05, -3.24249267578125e-05, -1.52587890625e-05, -3.4332275390625e-05, -1.5497195136049413e-06, -2.09808349609375e-05, -6.4849853515625e-05, -2.09808349609375e-05, -7.62939453125e-06, -8.392333984375e-05, -0.0001373291015625, -7.62939453125e-06, -0.0009224414825439453, -1.9073486328125e-06, -6.103515625e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -7.05718994140625e-05, -2.86102294921875e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.000324249267578125, -7.05718994140625e-05, -1.9073486328125e-06, -0.0034819841384887695, 0.0, -0.005171775817871094, -1.52587890625e-05, -0.00028228759765625, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000270843505859375, -2.47955322265625e-05, -6.29425048828125e-05, -2.288818359375e-05, -1.3124324083328247, 0.0, -0.000293731689453125, 0.0, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -4.9591064453125e-05, -2.09808349609375e-05, -2.2649765014648438e-06, -0.057056427001953125, -0.0004119873046875, -4.9591064453125e-05, -3.0517578125e-05, -9.1552734375e-05, -9.5367431640625e-06, 0.0, -9.548664093017578e-05, -3.62396240234375e-05, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -7.069110870361328e-05, -1.1920928244535389e-07, -0.00029754638671875, -1.9073486328125e-05, -6.103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.02229355461895466, -3.612034925026819e-05, -0.9638938903808594, -0.0018987655639648438, -0.0017852783203125, -0.000186920166015625, -0.06376934051513672, -1.33514404296875e-05, -3.0517578125e-05, 0.0, -0.012414216995239258, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -0.02686488628387451, -2.0861623852397315e-05, -0.00894927978515625, -0.48056888580322266, -7.62939453125e-05, -0.00138092041015625, 0.0, -3.24249267578125e-05, 0.0, -0.0007686614990234375, 0.0, -7.62939453125e-06, 0.0, -0.0022956132888793945, -0.00011444091796875, -0.37677860260009766, -1.9073486328125e-06, -3.814697265625e-06, -0.00030517578125, -1.52587890625e-05, -0.015866756439208984, -1.9073486328125e-06, -0.038443565368652344, -1.9073486328125e-06, -0.000171661376953125, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -0.006657600402832031, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.1248091459274292, -3.814697265625e-06, -1.682906150817871, -0.0002288818359375, -0.04682636260986328, 0.0, -0.002590179443359375, 0.0, -0.0020666122436523438, 0.0, -1.71661376953125e-05, 0.0, -0.06110692024230957, 0.0, -0.000469207763671875, -0.005742073059082031, 0.0, -0.013937708921730518, -1.6927675460465252e-05], "choice_history": [97, 285, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Blessed", " ", "Champion", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 14, 145, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "BlessedChampion", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"op": {"_type": "Sub"}, "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "BinOp", "right": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "change_attack", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        <UNK> = self.target.health\n        self.target.calculate_attack()\n", "score": -5.57388888931731, "score_history": [-0.015087127685546875, -0.000652313232421875, -0.0004440752090886235, -0.00037424711626954377, 0.0, -8.821445590001531e-06, -0.0001220703125, -2.3841855067985307e-07, -2.09808349609375e-05, -0.0060062408447265625, -0.0002613067626953125, -1.71661376953125e-05, 0.0, -1.1920922133867862e-06, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -0.0004024505615234375, -2.6702880859375e-05, -0.001651763916015625, -2.0265579223632812e-06, -6.115436553955078e-05, -2.8491018383647315e-05, -3.24249267578125e-05, -1.52587890625e-05, -3.4332275390625e-05, -1.5497195136049413e-06, -2.09808349609375e-05, -6.4849853515625e-05, -2.09808349609375e-05, -7.62939453125e-06, -8.392333984375e-05, -0.0001373291015625, -7.62939453125e-06, -0.0009224414825439453, -1.9073486328125e-06, -6.103515625e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -7.05718994140625e-05, -2.86102294921875e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.000324249267578125, -7.05718994140625e-05, -1.9073486328125e-06, -0.0034819841384887695, 0.0, -0.005171775817871094, -1.52587890625e-05, -0.00028228759765625, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000270843505859375, -2.47955322265625e-05, -6.29425048828125e-05, -2.288818359375e-05, -0.7806617021560669, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -2.6702880859375e-05, -4.76837158203125e-05, -3.62396240234375e-05, -2.1457672119140625e-06, -0.05695056915283203, -0.000438690185546875, -5.53131103515625e-05, -3.0517578125e-05, -9.34600830078125e-05, -1.1444091796875e-05, 0.0, -0.00010502338409423828, -3.62396240234375e-05, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -7.069110870361328e-05, -1.1920928244535389e-07, -0.000301361083984375, -1.9073486328125e-05, -6.103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.02270297333598137, -3.600114359869622e-05, -0.9718923568725586, -0.001903533935546875, -0.0017833709716796875, -0.000186920166015625, -0.06327152252197266, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.012407541275024414, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -0.026732444763183594, -2.0742414562846534e-05, -0.0089263916015625, -0.4769296646118164, -7.62939453125e-05, -0.001377105712890625, 0.0, -3.24249267578125e-05, 0.0, -0.0007677078247070312, 0.0, -7.62939453125e-06, 0.0, -0.0022965669631958008, -0.00011444091796875, -0.3765554428100586, -1.9073486328125e-06, -3.814697265625e-06, -0.0002994537353515625, -1.52587890625e-05, -0.01575624942779541, -1.9073486328125e-06, -0.03814125061035156, -1.9073486328125e-06, -0.000171661376953125, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -0.006671905517578125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.12438666820526123, -3.814697265625e-06, -1.5607051849365234, -0.0018978118896484375, -0.7906417846679688, -3.4332275390625e-05, -0.0024242401123046875, 0.0, -1.33514404296875e-05, 0.0, -0.000148773193359375, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.18860721588134766, -9.5367431640625e-06], "choice_history": [97, 285, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Blessed", " ", "Champion", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 14, 145, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 106, 155, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_friendly_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "BlessedChampion", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"op": {"_type": "Sub"}, "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "BinOp", "right": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}, "_type": "Expr"}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score": -5.649026990613493, "score_history": [-4.2287702560424805, -2.09808349609375e-05, -5.7220458984375e-06, -6.29425048828125e-05, -9.918212890625e-05, -2.3841574147809297e-05, -5.960446742392378e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00022658385569229722, -3.838539123535156e-05, -9.536738616588991e-07, -2.09808349609375e-05, -0.0022783279418945312, -0.000240325927734375, -4.1723224057932384e-06, -0.0001049041748046875, -2.384185791015625e-06, -1.9073486328125e-06, -4.0531076592742465e-06, -1.1444091796875e-05, -0.004710674285888672, -1.52587890625e-05, -0.00022339820861816406, 0.0, -0.000240325927734375, -0.0004253387451171875, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.0002994537353515625, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -8.392333984375e-05, -2.09808349609375e-05, -0.0001373291015625, -4.76837158203125e-05, -2.6702880859375e-05, -1.52587890625e-05, -0.02606785297393799, 0.0, -0.0006427764892578125, -0.0031614303588867188, -9.5367431640625e-06, 0.0, -8.7738037109375e-05, 0.0, -7.62939453125e-06, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.14559590816497803, 0.0, 0.0, -1.1892995834350586, -0.008458137512207031, -0.0017795562744140625, -3.0517578125e-05, -0.0011077267117798328, -2.6702880859375e-05, -0.016388893127441406, -0.00408172607421875, -0.000141143798828125, -0.0002346038818359375, 0.0, -0.0001316070556640625, 0.0, -0.006312370300292969, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.005848050117492676, -0.000118255615234375], "choice_history": [96, 173, 358, 105, 152, "Blessed", "Champion", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 118, 198, "Blessed", " ", "Champion", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 43, 145, 23, 179, "1", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole5": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "hole2": "PALADIN", "hole0": "Blessed Champion", "_type": "Template14", "hole3": "RARE", "hole1": 5}, {"hole1": "change_attack", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"op": {"_type": "Sub"}, "left": {"n": 1, "_type": "Num"}, "_type": "BinOp", "right": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}}]}], "name": "BlessedChampion", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        self.target.change_attack(<UNK>)\n        self.target.change_attack(<UNK>)\n", "score": -5.75959180452795, "score_history": [-0.015087127685546875, -0.000652313232421875, -0.0004440752090886235, -0.00037424711626954377, 0.0, -8.821445590001531e-06, -0.0001220703125, -2.3841855067985307e-07, -2.09808349609375e-05, -0.0060062408447265625, -0.0002613067626953125, -1.71661376953125e-05, 0.0, -1.1920922133867862e-06, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -0.0004024505615234375, -2.6702880859375e-05, -0.001651763916015625, -2.0265579223632812e-06, -6.115436553955078e-05, -2.8491018383647315e-05, -3.24249267578125e-05, -1.52587890625e-05, -3.4332275390625e-05, -1.5497195136049413e-06, -2.09808349609375e-05, -6.4849853515625e-05, -2.09808349609375e-05, -7.62939453125e-06, -8.392333984375e-05, -0.0001373291015625, -7.62939453125e-06, -0.0009224414825439453, -1.9073486328125e-06, -6.103515625e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -7.05718994140625e-05, -2.86102294921875e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.000324249267578125, -7.05718994140625e-05, -1.9073486328125e-06, -0.0034819841384887695, 0.0, -0.005171775817871094, -1.52587890625e-05, -0.00028228759765625, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000270843505859375, -2.47955322265625e-05, -6.29425048828125e-05, -2.288818359375e-05, -0.7806617021560669, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -2.6702880859375e-05, -4.76837158203125e-05, -3.62396240234375e-05, -2.1457672119140625e-06, -0.05695056915283203, -0.000438690185546875, -5.53131103515625e-05, -3.0517578125e-05, -9.34600830078125e-05, -1.1444091796875e-05, 0.0, -0.00010502338409423828, -3.62396240234375e-05, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -7.069110870361328e-05, -1.1920928244535389e-07, -0.000301361083984375, -1.9073486328125e-05, -6.103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.02270297333598137, -3.600114359869622e-05, -0.9718923568725586, -0.001903533935546875, -0.0017833709716796875, -0.000186920166015625, -0.06327152252197266, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.012407541275024414, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -0.026732444763183594, -2.0742414562846534e-05, -0.0089263916015625, -0.4769296646118164, -7.62939453125e-05, -0.001377105712890625, 0.0, -3.24249267578125e-05, 0.0, -0.0007677078247070312, 0.0, -7.62939453125e-06, 0.0, -0.0022965669631958008, -0.00011444091796875, -1.6108207702636719, -0.000957489013671875, -0.0009822845458984375, 0.0, -0.000637054443359375, 0.0, -0.033133506774902344, 0.0, -2.288818359375e-05, 0.0, -0.10878288745880127, 0.0, -0.0001010894775390625, -0.0051326751708984375, 0.0, -0.011657710187137127, -1.7642923921812326e-05, -0.9373540878295898, -0.0062656402587890625, -0.001476287841796875, 0.0, -0.0002460479736328125, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.5319265127182007, 0.0, -0.0016422271728515625, -0.007950782775878906, 0.0, -0.03301095962524414, -2.8252559786778875e-05], "choice_history": [97, 285, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Blessed", " ", "Champion", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 14, 145, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_friendly_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "BlessedChampion", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"op": {"_type": "Sub"}, "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "BinOp", "right": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "change_attack", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "change_attack", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        <UNK> = self.target.health\n        self.target.calculate_attack()\n", "score": -6.115046438560817, "score_history": [-0.015087127685546875, -0.000652313232421875, -0.0004440752090886235, -0.00037424711626954377, 0.0, -8.821445590001531e-06, -0.0001220703125, -2.3841855067985307e-07, -2.09808349609375e-05, -0.0060062408447265625, -0.0002613067626953125, -1.71661376953125e-05, 0.0, -1.1920922133867862e-06, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -0.0004024505615234375, -2.6702880859375e-05, -0.001651763916015625, -2.0265579223632812e-06, -6.115436553955078e-05, -2.8491018383647315e-05, -3.24249267578125e-05, -1.52587890625e-05, -3.4332275390625e-05, -1.5497195136049413e-06, -2.09808349609375e-05, -6.4849853515625e-05, -2.09808349609375e-05, -7.62939453125e-06, -8.392333984375e-05, -0.0001373291015625, -7.62939453125e-06, -0.0009224414825439453, -1.9073486328125e-06, -6.103515625e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -7.05718994140625e-05, -2.86102294921875e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.000324249267578125, -7.05718994140625e-05, -1.9073486328125e-06, -0.0034819841384887695, 0.0, -0.005171775817871094, -1.52587890625e-05, -0.00028228759765625, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000270843505859375, -2.47955322265625e-05, -6.29425048828125e-05, -2.288818359375e-05, -1.3124324083328247, 0.0, -0.000293731689453125, 0.0, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -4.9591064453125e-05, -2.09808349609375e-05, -2.2649765014648438e-06, -0.057056427001953125, -0.0004119873046875, -4.9591064453125e-05, -3.0517578125e-05, -9.1552734375e-05, -9.5367431640625e-06, 0.0, -9.548664093017578e-05, -3.62396240234375e-05, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -7.069110870361328e-05, -1.1920928244535389e-07, -0.00029754638671875, -1.9073486328125e-05, -6.103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.02229355461895466, -3.612034925026819e-05, -0.9638938903808594, -0.0018987655639648438, -0.0017852783203125, -0.000186920166015625, -0.06376934051513672, -1.33514404296875e-05, -3.0517578125e-05, 0.0, -0.012414216995239258, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -0.02686488628387451, -2.0861623852397315e-05, -0.00894927978515625, -0.48056888580322266, -7.62939453125e-05, -0.00138092041015625, 0.0, -3.24249267578125e-05, 0.0, -0.0007686614990234375, 0.0, -7.62939453125e-06, 0.0, -0.0022956132888793945, -0.00011444091796875, -0.37677860260009766, -1.9073486328125e-06, -3.814697265625e-06, -0.00030517578125, -1.52587890625e-05, -0.015866756439208984, -1.9073486328125e-06, -0.038443565368652344, -1.9073486328125e-06, -0.000171661376953125, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -0.006657600402832031, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.1248091459274292, -3.814697265625e-06, -1.556915283203125, -0.0018768310546875, -0.7988767623901367, -3.4332275390625e-05, -0.00238037109375, 0.0, -1.52587890625e-05, 0.0, -0.0001659393310546875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.19639968872070312, -9.5367431640625e-06], "choice_history": [97, 285, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Blessed", " ", "Champion", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 14, 145, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 106, 155, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "BlessedChampion", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"op": {"_type": "Sub"}, "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "BinOp", "right": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}, "_type": "Expr"}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        <UNK> = self.target.health\n        <UNK> = game.random_choice(<UNK>)\n", "score": -6.3932345982519365, "score_history": [-0.015087127685546875, -0.000652313232421875, -0.0004440752090886235, -0.00037424711626954377, 0.0, -8.821445590001531e-06, -0.0001220703125, -2.3841855067985307e-07, -2.09808349609375e-05, -0.0060062408447265625, -0.0002613067626953125, -1.71661376953125e-05, 0.0, -1.1920922133867862e-06, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -0.0004024505615234375, -2.6702880859375e-05, -0.001651763916015625, -2.0265579223632812e-06, -6.115436553955078e-05, -2.8491018383647315e-05, -3.24249267578125e-05, -1.52587890625e-05, -3.4332275390625e-05, -1.5497195136049413e-06, -2.09808349609375e-05, -6.4849853515625e-05, -2.09808349609375e-05, -7.62939453125e-06, -8.392333984375e-05, -0.0001373291015625, -7.62939453125e-06, -0.0009224414825439453, -1.9073486328125e-06, -6.103515625e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -7.05718994140625e-05, -2.86102294921875e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.000324249267578125, -7.05718994140625e-05, -1.9073486328125e-06, -0.0034819841384887695, 0.0, -0.005171775817871094, -1.52587890625e-05, -0.00028228759765625, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000270843505859375, -2.47955322265625e-05, -6.29425048828125e-05, -2.288818359375e-05, -0.7806617021560669, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -2.6702880859375e-05, -4.76837158203125e-05, -3.62396240234375e-05, -2.1457672119140625e-06, -0.05695056915283203, -0.000438690185546875, -5.53131103515625e-05, -3.0517578125e-05, -9.34600830078125e-05, -1.1444091796875e-05, 0.0, -0.00010502338409423828, -3.62396240234375e-05, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -7.069110870361328e-05, -1.1920928244535389e-07, -0.000301361083984375, -1.9073486328125e-05, -6.103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.02270297333598137, -3.600114359869622e-05, -0.9718923568725586, -0.001903533935546875, -0.0017833709716796875, -0.000186920166015625, -0.06327152252197266, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.012407541275024414, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -0.026732444763183594, -2.0742414562846534e-05, -0.0089263916015625, -0.4769296646118164, -7.62939453125e-05, -0.001377105712890625, 0.0, -3.24249267578125e-05, 0.0, -0.0007677078247070312, 0.0, -7.62939453125e-06, 0.0, -0.0022965669631958008, -0.00011444091796875, -0.3765554428100586, -1.9073486328125e-06, -3.814697265625e-06, -0.0002994537353515625, -1.52587890625e-05, -0.01575624942779541, -1.9073486328125e-06, -0.03814125061035156, -1.9073486328125e-06, -0.000171661376953125, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -0.006671905517578125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.12438666820526123, -3.814697265625e-06, -2.366250991821289, -5.7220458984375e-06, 0.0, -0.0011386871337890625, -7.62939453125e-06, -0.1461935043334961, -1.1920928244535389e-07, -0.5819911956787109, -0.000274658203125, -0.0003032684326171875, 0.0, -0.12471580505371094, 0.0, -0.006697893142700195, 0.0, -0.0031614303588867188, -7.62939453125e-06, -1.9073486328125e-06, -0.09367179870605469, -1.9073486328125e-06, -0.03940367326140404, -9.655950634623878e-06], "choice_history": [97, 285, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Blessed", " ", "Champion", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 14, 145, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_friendly_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "BlessedChampion", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"op": {"_type": "Sub"}, "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "BinOp", "right": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        <UNK> = self.target.health\n        <UNK>.<UNK>(len(game.other_player.minions))\n", "score": -7.131045809736712, "score_history": [-0.015087127685546875, -0.000652313232421875, -0.0004440752090886235, -0.00037424711626954377, 0.0, -8.821445590001531e-06, -0.0001220703125, -2.3841855067985307e-07, -2.09808349609375e-05, -0.0060062408447265625, -0.0002613067626953125, -1.71661376953125e-05, 0.0, -1.1920922133867862e-06, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -0.0004024505615234375, -2.6702880859375e-05, -0.001651763916015625, -2.0265579223632812e-06, -6.115436553955078e-05, -2.8491018383647315e-05, -3.24249267578125e-05, -1.52587890625e-05, -3.4332275390625e-05, -1.5497195136049413e-06, -2.09808349609375e-05, -6.4849853515625e-05, -2.09808349609375e-05, -7.62939453125e-06, -8.392333984375e-05, -0.0001373291015625, -7.62939453125e-06, -0.0009224414825439453, -1.9073486328125e-06, -6.103515625e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -7.05718994140625e-05, -2.86102294921875e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.000324249267578125, -7.05718994140625e-05, -1.9073486328125e-06, -0.0034819841384887695, 0.0, -0.005171775817871094, -1.52587890625e-05, -0.00028228759765625, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000270843505859375, -2.47955322265625e-05, -6.29425048828125e-05, -2.288818359375e-05, -0.7806617021560669, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -2.6702880859375e-05, -4.76837158203125e-05, -3.62396240234375e-05, -2.1457672119140625e-06, -0.05695056915283203, -0.000438690185546875, -5.53131103515625e-05, -3.0517578125e-05, -9.34600830078125e-05, -1.1444091796875e-05, 0.0, -0.00010502338409423828, -3.62396240234375e-05, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -7.069110870361328e-05, -1.1920928244535389e-07, -0.000301361083984375, -1.9073486328125e-05, -6.103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.02270297333598137, -3.600114359869622e-05, -0.9718923568725586, -0.001903533935546875, -0.0017833709716796875, -0.000186920166015625, -0.06327152252197266, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.012407541275024414, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -0.026732444763183594, -2.0742414562846534e-05, -0.0089263916015625, -0.4769296646118164, -7.62939453125e-05, -0.001377105712890625, 0.0, -3.24249267578125e-05, 0.0, -0.0007677078247070312, 0.0, -7.62939453125e-06, 0.0, -0.0022965669631958008, -0.00011444091796875, -0.3765554428100586, -1.9073486328125e-06, -3.814697265625e-06, -0.0002994537353515625, -1.52587890625e-05, -0.01575624942779541, -1.9073486328125e-06, -0.03814125061035156, -1.9073486328125e-06, -0.000171661376953125, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -0.006671905517578125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.12438666820526123, -3.814697265625e-06, -1.5607051849365234, -0.0018978118896484375, -1.1254844665527344, -0.005921363830566406, -0.049831390380859375, 0.0, -0.01120603084564209, -4.172325134277344e-06, -0.25522327423095703, 0.0, -0.01821613311767578, -1.9073486328125e-06, -0.15723657608032227, -9.059892363438848e-06, -3.814697265625e-05, -0.013577461242675781, 0.0, -0.33246898651123047, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.2644834518432617, 0.0, -0.27936458587646484, 0.0, -0.025957703590393066, -5.7220458984375e-06], "choice_history": [97, 285, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Blessed", " ", "Champion", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 14, 145, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 106, 155, 31, 295, 21, 174, "<UNK>", "<EOS>", "<UNK>", "<EOS>", 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_friendly_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "BlessedChampion", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"op": {"_type": "Sub"}, "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "BinOp", "right": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"hole1": "<UNK>", "hole3": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Template57", "hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": {"id": "len", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        <UNK> = self.target.health\n        if index is not Null:\n            <UNK>.summon(player, game, len(player.opponent.minions))\n", "score": -7.751898838941152, "score_history": [-0.015087127685546875, -0.000652313232421875, -0.0004440752090886235, -0.00037424711626954377, 0.0, -8.821445590001531e-06, -0.0001220703125, -2.3841855067985307e-07, -2.09808349609375e-05, -0.0060062408447265625, -0.0002613067626953125, -1.71661376953125e-05, 0.0, -1.1920922133867862e-06, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -0.0004024505615234375, -2.6702880859375e-05, -0.001651763916015625, -2.0265579223632812e-06, -6.115436553955078e-05, -2.8491018383647315e-05, -3.24249267578125e-05, -1.52587890625e-05, -3.4332275390625e-05, -1.5497195136049413e-06, -2.09808349609375e-05, -6.4849853515625e-05, -2.09808349609375e-05, -7.62939453125e-06, -8.392333984375e-05, -0.0001373291015625, -7.62939453125e-06, -0.0009224414825439453, -1.9073486328125e-06, -6.103515625e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -7.05718994140625e-05, -2.86102294921875e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.000324249267578125, -7.05718994140625e-05, -1.9073486328125e-06, -0.0034819841384887695, 0.0, -0.005171775817871094, -1.52587890625e-05, -0.00028228759765625, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000270843505859375, -2.47955322265625e-05, -6.29425048828125e-05, -2.288818359375e-05, -0.7806617021560669, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -2.6702880859375e-05, -4.76837158203125e-05, -3.62396240234375e-05, -2.1457672119140625e-06, -0.05695056915283203, -0.000438690185546875, -5.53131103515625e-05, -3.0517578125e-05, -9.34600830078125e-05, -1.1444091796875e-05, 0.0, -0.00010502338409423828, -3.62396240234375e-05, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -7.069110870361328e-05, -1.1920928244535389e-07, -0.000301361083984375, -1.9073486328125e-05, -6.103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.02270297333598137, -3.600114359869622e-05, -0.9718923568725586, -0.001903533935546875, -0.0017833709716796875, -0.000186920166015625, -0.06327152252197266, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.012407541275024414, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -0.026732444763183594, -2.0742414562846534e-05, -0.0089263916015625, -0.4769296646118164, -7.62939453125e-05, -0.001377105712890625, 0.0, -3.24249267578125e-05, 0.0, -0.0007677078247070312, 0.0, -7.62939453125e-06, 0.0, -0.0022965669631958008, -0.00011444091796875, -0.3765554428100586, -1.9073486328125e-06, -3.814697265625e-06, -0.0002994537353515625, -1.52587890625e-05, -0.01575624942779541, -1.9073486328125e-06, -0.03814125061035156, -1.9073486328125e-06, -0.000171661376953125, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -0.006671905517578125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.12438666820526123, -3.814697265625e-06, -0.7235565185546875, -0.5403938293457031, -0.0044612884521484375, -3.814697265625e-06, -0.00034332275390625, -3.814697265625e-06, -0.9106353521347046, -1.9311904907226562e-05, -4.9591064453125e-05, -0.8865633010864258, -1.9073486328125e-06, -2.6702880859375e-05, -0.061168670654296875, -5.257129669189453e-05, -1.1920928244535389e-07, -0.012884140014648438, -0.12531471252441406, -3.4332275390625e-05, -0.06189727783203125, -5.7220458984375e-06, -0.5634735822677612, -3.099440846199286e-06, -0.08515235781669617, 0.0, -0.03623199462890625, -0.004978179931640625, -1.9073486328125e-06, -0.043220631778240204, -1.1920928244535389e-07, -0.0028705596923828125, -0.037342071533203125, -0.008981823921203613, 0.0, -0.0008983612060546875, -2.6702880859375e-05, -0.0052394866943359375, -0.0010662078857421875, -0.0006072521209716797, -9.655952453613281e-06, -6.67572021484375e-05, -0.010295867919921875, -1.9073486328125e-06, -0.16467952728271484, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.29376792907714844, 0.0, -0.1314382553100586, 0.0, -0.004706382751464844, -1.9073486328125e-06], "choice_history": [97, 285, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Blessed", " ", "Champion", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 14, 145, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 109, 160, 17, 153, 21, 174, "index", "<EOS>", 343, 9, 346, 51, 176, "Null", "<EOS>", 358, 136, 318, 21, 174, "<UNK>", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "player", "<EOS>", "opponent", "<EOS>", "minions", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_friendly_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "BlessedChampion", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"op": {"_type": "Sub"}, "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "BinOp", "right": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"hole1": "summon", "_type": "Template77", "hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "player", "_type": "Name"}, "attr": "opponent", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}], "test": {"left": {"id": "index", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "IsNot"}], "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If"}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack is not Null:\n            <UNK>.summon(player, game, len(game.other_player.minions))\n        else:\n            <UNK>.summon(player, game, len(player.opponent.minions))\n", "score": -9.825271854909666, "score_history": [-0.015087127685546875, -0.000652313232421875, -0.0004440752090886235, -0.00037424711626954377, 0.0, -8.821445590001531e-06, -0.0001220703125, -2.3841855067985307e-07, -2.09808349609375e-05, -0.0060062408447265625, -0.0002613067626953125, -1.71661376953125e-05, 0.0, -1.1920922133867862e-06, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -0.0004024505615234375, -2.6702880859375e-05, -0.001651763916015625, -2.0265579223632812e-06, -6.115436553955078e-05, -2.8491018383647315e-05, -3.24249267578125e-05, -1.52587890625e-05, -3.4332275390625e-05, -1.5497195136049413e-06, -2.09808349609375e-05, -6.4849853515625e-05, -2.09808349609375e-05, -7.62939453125e-06, -8.392333984375e-05, -0.0001373291015625, -7.62939453125e-06, -0.0009224414825439453, -1.9073486328125e-06, -6.103515625e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -7.05718994140625e-05, -2.86102294921875e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.000324249267578125, -7.05718994140625e-05, -1.9073486328125e-06, -0.0034819841384887695, 0.0, -0.005171775817871094, -1.52587890625e-05, -0.00028228759765625, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000270843505859375, -2.47955322265625e-05, -6.29425048828125e-05, -2.288818359375e-05, -0.7806617021560669, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -2.6702880859375e-05, -4.76837158203125e-05, -3.62396240234375e-05, -2.1457672119140625e-06, -0.05695056915283203, -0.000438690185546875, -5.53131103515625e-05, -3.0517578125e-05, -9.34600830078125e-05, -1.1444091796875e-05, 0.0, -0.00010502338409423828, -3.62396240234375e-05, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -7.069110870361328e-05, -1.1920928244535389e-07, -0.000301361083984375, -1.9073486328125e-05, -6.103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.02270297333598137, -3.600114359869622e-05, -0.9718923568725586, -0.001903533935546875, -0.0017833709716796875, -0.000186920166015625, -0.06327152252197266, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.012407541275024414, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -0.026732444763183594, -2.0742414562846534e-05, -0.0089263916015625, -0.4769296646118164, -7.62939453125e-05, -0.001377105712890625, 0.0, -3.24249267578125e-05, 0.0, -0.0007677078247070312, 0.0, -7.62939453125e-06, 0.0, -0.0022965669631958008, -0.00011444091796875, -0.3765554428100586, -1.9073486328125e-06, -3.814697265625e-06, -0.0002994537353515625, -1.52587890625e-05, -0.01575624942779541, -1.9073486328125e-06, -0.03814125061035156, -1.9073486328125e-06, -0.000171661376953125, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -0.006671905517578125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.12438666820526123, -3.814697265625e-06, -0.7235565185546875, -0.8837003707885742, -0.000629425048828125, -1.52587890625e-05, -0.012034416198730469, -5.7220458984375e-06, -0.5309723019599915, -7.390974587906385e-06, -1.33514404296875e-05, -0.3764066696166992, -1.9073486328125e-06, -0.00267791748046875, -0.0009517669677734375, -6.985664367675781e-05, 0.0, -0.011684417724609375, -0.000705718994140625, -5.91278076171875e-05, -0.1885242462158203, -3.814697265625e-06, -0.9604034423828125, -2.503394853192731e-06, -0.04496495798230171, 0.0, -0.02772235870361328, -0.002346038818359375, 0.0, -0.028065670281648636, -1.1920928244535389e-07, -0.002655029296875, -0.03392219543457031, -0.012128829956054688, 0.0, -0.001125335693359375, -2.86102294921875e-05, -0.0057926177978515625, -0.001033782958984375, -0.0007009506225585938, -1.1563301086425781e-05, -7.2479248046875e-05, -0.02357006072998047, -1.9073486328125e-06, -0.17039966583251953, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.384267807006836, 0.0, -0.03392601013183594, 0.0, -0.0031872987747192383, -1.9073486328125e-06, -4.9591064453125e-05, -0.018866539001464844, -4.76837158203125e-05, -0.07793521881103516, 0.0, -0.3960443437099457, -1.0728830375228426e-06, -0.08871109783649445, -1.9073486328125e-06, -0.04681873321533203, -0.009843826293945312, -3.814697265625e-06, -0.024998780339956284, -1.1920928244535389e-07, -0.0037441253662109375, -0.0049839019775390625, -0.010877728462219238, 0.0, -0.0006465911865234375, -5.340576171875e-05, -0.0039119720458984375, -0.0010986328125, -0.0009590387344360352, -9.655952453613281e-06, -6.103515625e-05, -0.007825851440429688, -1.9073486328125e-06, -0.17178630828857422, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -0.32737064361572266, 0.0, -0.1264028549194336, 0.0, -0.004421234130859375, -1.9073486328125e-06], "choice_history": [97, 285, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Blessed", " ", "Champion", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 14, 145, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 109, 161, 17, 153, 21, 174, "temp_attack", "<EOS>", 343, 9, 346, 51, 176, "Null", "<EOS>", 358, 136, 318, 21, 174, "<UNK>", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "<UNK>", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "player", "<EOS>", "opponent", "<EOS>", "minions", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_friendly_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "BlessedChampion", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"op": {"_type": "Sub"}, "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "BinOp", "right": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"hole1": "summon", "_type": "Template77", "hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}], "test": {"left": {"id": "temp_attack", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "IsNot"}], "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"hole1": "summon", "_type": "Template77", "hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "player", "_type": "Name"}, "attr": "opponent", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack is not Null:\n            <UNK>.summon(player, game, len(game.other_player.minions))\n        else:\n            <UNK>.summon(player, game, len(game.other_player.minions))\n", "score": -10.80525911858917, "score_history": [-0.015087127685546875, -0.000652313232421875, -0.0004440752090886235, -0.00037424711626954377, 0.0, -8.821445590001531e-06, -0.0001220703125, -2.3841855067985307e-07, -2.09808349609375e-05, -0.0060062408447265625, -0.0002613067626953125, -1.71661376953125e-05, 0.0, -1.1920922133867862e-06, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -0.0004024505615234375, -2.6702880859375e-05, -0.001651763916015625, -2.0265579223632812e-06, -6.115436553955078e-05, -2.8491018383647315e-05, -3.24249267578125e-05, -1.52587890625e-05, -3.4332275390625e-05, -1.5497195136049413e-06, -2.09808349609375e-05, -6.4849853515625e-05, -2.09808349609375e-05, -7.62939453125e-06, -8.392333984375e-05, -0.0001373291015625, -7.62939453125e-06, -0.0009224414825439453, -1.9073486328125e-06, -6.103515625e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -7.05718994140625e-05, -2.86102294921875e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.000324249267578125, -7.05718994140625e-05, -1.9073486328125e-06, -0.0034819841384887695, 0.0, -0.005171775817871094, -1.52587890625e-05, -0.00028228759765625, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000270843505859375, -2.47955322265625e-05, -6.29425048828125e-05, -2.288818359375e-05, -0.7806617021560669, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -2.6702880859375e-05, -4.76837158203125e-05, -3.62396240234375e-05, -2.1457672119140625e-06, -0.05695056915283203, -0.000438690185546875, -5.53131103515625e-05, -3.0517578125e-05, -9.34600830078125e-05, -1.1444091796875e-05, 0.0, -0.00010502338409423828, -3.62396240234375e-05, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -7.069110870361328e-05, -1.1920928244535389e-07, -0.000301361083984375, -1.9073486328125e-05, -6.103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.02270297333598137, -3.600114359869622e-05, -0.9718923568725586, -0.001903533935546875, -0.0017833709716796875, -0.000186920166015625, -0.06327152252197266, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.012407541275024414, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -0.026732444763183594, -2.0742414562846534e-05, -0.0089263916015625, -0.4769296646118164, -7.62939453125e-05, -0.001377105712890625, 0.0, -3.24249267578125e-05, 0.0, -0.0007677078247070312, 0.0, -7.62939453125e-06, 0.0, -0.0022965669631958008, -0.00011444091796875, -0.3765554428100586, -1.9073486328125e-06, -3.814697265625e-06, -0.0002994537353515625, -1.52587890625e-05, -0.01575624942779541, -1.9073486328125e-06, -0.03814125061035156, -1.9073486328125e-06, -0.000171661376953125, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -0.006671905517578125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.12438666820526123, -3.814697265625e-06, -0.7235565185546875, -0.8837003707885742, -0.000629425048828125, -1.52587890625e-05, -0.012034416198730469, -5.7220458984375e-06, -0.5309723019599915, -7.390974587906385e-06, -1.33514404296875e-05, -0.3764066696166992, -1.9073486328125e-06, -0.00267791748046875, -0.0009517669677734375, -6.985664367675781e-05, 0.0, -0.011684417724609375, -0.000705718994140625, -5.91278076171875e-05, -0.1885242462158203, -3.814697265625e-06, -0.9604034423828125, -2.503394853192731e-06, -0.04496495798230171, 0.0, -0.02772235870361328, -0.002346038818359375, 0.0, -0.028065670281648636, -1.1920928244535389e-07, -0.002655029296875, -0.03392219543457031, -0.012128829956054688, 0.0, -0.001125335693359375, -2.86102294921875e-05, -0.0057926177978515625, -0.001033782958984375, -0.0007009506225585938, -1.1563301086425781e-05, -7.2479248046875e-05, -0.02357006072998047, -1.9073486328125e-06, -0.17039966583251953, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -1.384267807006836, 0.0, -0.03392601013183594, 0.0, -0.0031872987747192383, -1.9073486328125e-06, -4.9591064453125e-05, -0.018866539001464844, -4.76837158203125e-05, -0.07793521881103516, 0.0, -0.3960443437099457, -1.0728830375228426e-06, -0.08871109783649445, -1.9073486328125e-06, -0.04681873321533203, -0.009843826293945312, -3.814697265625e-06, -0.024998780339956284, -1.1920928244535389e-07, -0.0037441253662109375, -0.0049839019775390625, -0.010877728462219238, 0.0, -0.0006465911865234375, -5.340576171875e-05, -0.0039119720458984375, -0.0010986328125, -0.0009590387344360352, -9.655952453613281e-06, -6.103515625e-05, -0.007825851440429688, -1.9073486328125e-06, -0.17178630828857422, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.4012174606323242, 0.0, -0.033577919006347656, 0.0, -0.0033866167068481445, -1.9073486328125e-06], "choice_history": [97, 285, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Blessed", " ", "Champion", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 14, 145, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 109, 161, 17, 153, 21, 174, "temp_attack", "<EOS>", 343, 9, 346, 51, 176, "Null", "<EOS>", 358, 136, 318, 21, 174, "<UNK>", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "<UNK>", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_friendly_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "BlessedChampion", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"op": {"_type": "Sub"}, "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "BinOp", "right": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"hole1": "summon", "_type": "Template77", "hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}], "test": {"left": {"id": "temp_attack", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "IsNot"}], "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"hole1": "summon", "_type": "Template77", "hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack is not Null:\n            <UNK>.summon(player, game, len(player.opponent.minions))\n        elif temp_attack is not Null:\n            <UNK>.summon(player, game, len(player.opponent.minions))\n", "score": -11.089923287543066, "score_history": [-0.015087127685546875, -0.000652313232421875, -0.0004440752090886235, -0.00037424711626954377, 0.0, -8.821445590001531e-06, -0.0001220703125, -2.3841855067985307e-07, -2.09808349609375e-05, -0.0060062408447265625, -0.0002613067626953125, -1.71661376953125e-05, 0.0, -1.1920922133867862e-06, -1.33514404296875e-05, -7.82012939453125e-05, 0.0, -0.0004024505615234375, -2.6702880859375e-05, -0.001651763916015625, -2.0265579223632812e-06, -6.115436553955078e-05, -2.8491018383647315e-05, -3.24249267578125e-05, -1.52587890625e-05, -3.4332275390625e-05, -1.5497195136049413e-06, -2.09808349609375e-05, -6.4849853515625e-05, -2.09808349609375e-05, -7.62939453125e-06, -8.392333984375e-05, -0.0001373291015625, -7.62939453125e-06, -0.0009224414825439453, -1.9073486328125e-06, -6.103515625e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -7.05718994140625e-05, -2.86102294921875e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.000324249267578125, -7.05718994140625e-05, -1.9073486328125e-06, -0.0034819841384887695, 0.0, -0.005171775817871094, -1.52587890625e-05, -0.00028228759765625, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000270843505859375, -2.47955322265625e-05, -6.29425048828125e-05, -2.288818359375e-05, -0.7806617021560669, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -2.6702880859375e-05, -4.76837158203125e-05, -3.62396240234375e-05, -2.1457672119140625e-06, -0.05695056915283203, -0.000438690185546875, -5.53131103515625e-05, -3.0517578125e-05, -9.34600830078125e-05, -1.1444091796875e-05, 0.0, -0.00010502338409423828, -3.62396240234375e-05, -7.62939453125e-06, 0.0, -2.0265579223632812e-06, 0.0, -7.069110870361328e-05, -1.1920928244535389e-07, -0.000301361083984375, -1.9073486328125e-05, -6.103515625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.02270297333598137, -3.600114359869622e-05, -0.9718923568725586, -0.001903533935546875, -0.0017833709716796875, -0.000186920166015625, -0.06327152252197266, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.012407541275024414, 0.0, -1.3470649719238281e-05, -3.814697265625e-06, -0.026732444763183594, -2.0742414562846534e-05, -0.0089263916015625, -0.4769296646118164, -7.62939453125e-05, -0.001377105712890625, 0.0, -3.24249267578125e-05, 0.0, -0.0007677078247070312, 0.0, -7.62939453125e-06, 0.0, -0.0022965669631958008, -0.00011444091796875, -0.3765554428100586, -1.9073486328125e-06, -3.814697265625e-06, -0.0002994537353515625, -1.52587890625e-05, -0.01575624942779541, -1.9073486328125e-06, -0.03814125061035156, -1.9073486328125e-06, -0.000171661376953125, 0.0, -8.392333984375e-05, -1.9073486328125e-06, -0.006671905517578125, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.12438666820526123, -3.814697265625e-06, -0.7235565185546875, -0.8837003707885742, -0.000629425048828125, -1.52587890625e-05, -0.012034416198730469, -5.7220458984375e-06, -0.5309723019599915, -7.390974587906385e-06, -1.33514404296875e-05, -0.3764066696166992, -1.9073486328125e-06, -0.00267791748046875, -0.0009517669677734375, -6.985664367675781e-05, 0.0, -0.011684417724609375, -0.000705718994140625, -5.91278076171875e-05, -0.1885242462158203, -3.814697265625e-06, -0.9604034423828125, -2.503394853192731e-06, -0.04496495798230171, 0.0, -0.02772235870361328, -0.002346038818359375, 0.0, -0.028065670281648636, -1.1920928244535389e-07, -0.002655029296875, -0.03392219543457031, -0.012128829956054688, 0.0, -0.001125335693359375, -2.86102294921875e-05, -0.0057926177978515625, -0.001033782958984375, -0.0007009506225585938, -1.1563301086425781e-05, -7.2479248046875e-05, -0.02357006072998047, -1.9073486328125e-06, -0.17039966583251953, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.31810569763183594, 0.0, -0.1270761489868164, 0.0, -0.004845619201660156, -1.9073486328125e-06, -5.14984130859375e-05, -0.1717052459716797, -0.0004425048828125, -0.0006866455078125, -1.9073486328125e-06, -0.02710247039794922, -9.5367431640625e-06, -1.8394817113876343, -4.768370445162873e-07, -2.6702880859375e-05, -0.12798309326171875, -1.9073486328125e-06, -0.000202178955078125, -0.0058460235595703125, -6.330013275146484e-05, 0.0, -0.012500762939453125, -0.015195846557617188, -1.52587890625e-05, -0.12137031555175781, -1.52587890625e-05, -0.4087775945663452, -2.741813204920618e-06, -0.08537859469652176, 0.0, -0.016757965087890625, -0.012142181396484375, -3.814697265625e-06, -0.03772639110684395, -1.1920928244535389e-07, -0.00547027587890625, -0.02797698974609375, -0.004963040351867676, 0.0, -0.00066375732421875, -2.86102294921875e-05, -0.005706787109375, -0.0013885498046875, -0.0006586313247680664, -1.1563301086425781e-05, -6.67572021484375e-05, -0.007928848266601562, -1.9073486328125e-06, -0.18528270721435547, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.31003856658935547, 0.0, -0.12537765502929688, 0.0, -0.004424095153808594, -1.9073486328125e-06], "choice_history": [97, 285, "Blessed", "Champion", "<EOS>", "Spell", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Blessed", " ", "Champion", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 353, 95, 336, "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 14, 145, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 109, 161, 17, 153, 21, 174, "temp_attack", "<EOS>", 343, 9, 346, 51, 176, "Null", "<EOS>", 358, 136, 318, 21, 174, "<UNK>", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "player", "<EOS>", "opponent", "<EOS>", "minions", "<EOS>", 358, 109, 160, 17, 153, 21, 174, "temp_attack", "<EOS>", 343, 9, 346, 51, 176, "Null", "<EOS>", 358, 136, 318, 21, 174, "<UNK>", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "player", "<EOS>", "opponent", "<EOS>", "minions", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_friendly_minion_spell_target", "_type": "Attribute"}, "arg": "target_func", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}]}], "hole0": "BlessedChampion", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"op": {"_type": "Sub"}, "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "BinOp", "right": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"body": [{"hole1": "summon", "_type": "Template77", "hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "player", "_type": "Name"}, "attr": "opponent", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}], "test": {"left": {"id": "temp_attack", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "IsNot"}], "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If", "orelse": [{"body": [{"hole1": "summon", "_type": "Template77", "hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"value": {"id": "player", "_type": "Name"}, "attr": "opponent", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}], "test": {"left": {"id": "temp_attack", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "IsNot"}], "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If"}]}]}}]}
{"gold_code": "class CabalShadowPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Steal(), MinionSelector(\n            AttackLessThanOrEqualTo(2), players=EnemyPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "beams": [{"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(thatthatPriest\n            ()), Buff(2())]), MinionSelector(picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -4.2796411523074696, "score_history": [-0.0004863739013671875, -0.0002880096435546875, -0.0033791386522352695, -0.011249714531004429, -0.01390302274376154, -1.0114628821611404e-05, -1.7642974853515625e-05, -3.099440846199286e-06, -0.00049591064453125, -0.040337562561035156, -0.0002460479736328125, -4.1961669921875e-05, 0.0, 0.0, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.400143709266558e-05, -4.1961669921875e-05, -0.02801155112683773, -0.38189125061035156, -0.007272947113960981, -0.0077533721923828125, -0.000125885009765625, -3.4332275390625e-05, -0.03583705425262451, -9.5367431640625e-06, -4.1961669921875e-05, -6.29425048828125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.01068127155303955, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -0.024761199951171875, -1.9073486328125e-06, -0.0026454925537109375, -0.03254222869873047, -0.0332489013671875, -0.0051490068435668945, -0.00016235557268373668, 0.0, -0.011338233947753906, -0.0002269744873046875, -8.7738037109375e-05, -0.06088447570800781, -0.6680679321289062, -0.8861393332481384, -0.5271307229995728, -0.4308662414550781, -0.06468996405601501, -0.020722389221191406, -0.0016927719116210938, -0.26470744609832764, -0.0016012086998671293, -0.09503960609436035, -7.62939453125e-06, -8.022785186767578e-05, -0.003688812255859375, -2.288818359375e-05, -1.1444091796875e-05, -0.3144958019256592, -1.1920928244535389e-07, -1.9073486328125e-05, -1.9073486328125e-06, -0.26445865631103516, -1.1563301086425781e-05, 0.0, -0.019482966512441635, 0.0, -8.034706115722656e-05, 0.0, -0.000102996826171875, -0.0021915435791015625, -4.00543212890625e-05, -2.0265574676159304e-06, 0.0, -0.0006646570982411504, 0.0], "choice_history": [97, 283, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 290, "that", "that", "Priest", "<EOS>", 69, 290, "2", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": "__init__", "hole3": [{"hole4": [{"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"elts": [{"_type": "Template54", "hole0": "thatthatPriest"}, {"_type": "Template54", "hole0": "2"}], "_type": "List"}], "_type": "Template40", "hole0": "Give", "hole2": "MinionSelector"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "CabalShadow", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(that2()), Buff\n            (2())]), MinionSelector(picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -4.867962395429679, "score_history": [-0.0004863739013671875, -0.0002880096435546875, -0.0033791386522352695, -0.011249714531004429, -0.01390302274376154, -1.0114628821611404e-05, -1.7642974853515625e-05, -3.099440846199286e-06, -0.00049591064453125, -0.040337562561035156, -0.0002460479736328125, -4.1961669921875e-05, 0.0, 0.0, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.400143709266558e-05, -4.1961669921875e-05, -0.02801155112683773, -0.38189125061035156, -0.007272947113960981, -0.0077533721923828125, -0.000125885009765625, -3.4332275390625e-05, -0.03583705425262451, -9.5367431640625e-06, -4.1961669921875e-05, -6.29425048828125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.01068127155303955, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -0.024761199951171875, -1.9073486328125e-06, -0.0026454925537109375, -0.03254222869873047, -0.0332489013671875, -0.0051490068435668945, -0.00016235557268373668, 0.0, -0.011338233947753906, -0.0002269744873046875, -8.7738037109375e-05, -0.06088447570800781, -0.6680679321289062, -0.8861393332481384, -1.7639753818511963, -0.001064687268808484, -0.0011014938354492188, -0.0008373260498046875, -0.054941024631261826, -0.0011179610155522823, -0.055977463722229004, -7.62939453125e-06, -0.00010311603546142578, -0.0050525665283203125, -2.288818359375e-05, -1.33514404296875e-05, -0.2840895652770996, -1.1920928244535389e-07, -2.09808349609375e-05, -1.9073486328125e-06, -0.4113349914550781, -1.3470649719238281e-05, 0.0, -0.017266985028982162, 0.0, -8.416175842285156e-05, 0.0, -0.0001049041748046875, -0.0022716522216796875, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.0006944414344616234, 0.0], "choice_history": [97, 283, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 290, "that", "2", "<EOS>", 69, 290, "2", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": "__init__", "hole3": [{"hole4": [{"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"elts": [{"_type": "Template54", "hole0": "that2"}, {"_type": "Template54", "hole0": "2"}], "_type": "List"}], "_type": "Template40", "hole0": "Give", "hole2": "MinionSelector"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "CabalShadow", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(thatthat()),\n            Buff(2())]), MinionSelector(picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -4.884601100005277, "score_history": [-0.0004863739013671875, -0.0002880096435546875, -0.0033791386522352695, -0.011249714531004429, -0.01390302274376154, -1.0114628821611404e-05, -1.7642974853515625e-05, -3.099440846199286e-06, -0.00049591064453125, -0.040337562561035156, -0.0002460479736328125, -4.1961669921875e-05, 0.0, 0.0, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.400143709266558e-05, -4.1961669921875e-05, -0.02801155112683773, -0.38189125061035156, -0.007272947113960981, -0.0077533721923828125, -0.000125885009765625, -3.4332275390625e-05, -0.03583705425262451, -9.5367431640625e-06, -4.1961669921875e-05, -6.29425048828125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.01068127155303955, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -0.024761199951171875, -1.9073486328125e-06, -0.0026454925537109375, -0.03254222869873047, -0.0332489013671875, -0.0051490068435668945, -0.00016235557268373668, 0.0, -0.011338233947753906, -0.0002269744873046875, -8.7738037109375e-05, -0.06088447570800781, -0.6680679321289062, -0.8861393332481384, -0.5271307229995728, -1.111677885055542, -0.010206222534179688, -0.0008258819580078125, -0.16692817211151123, -0.0023461005184799433, -0.051883697509765625, -5.7220458984375e-06, -0.00010883808135986328, -0.0039691925048828125, -2.09808349609375e-05, -1.1444091796875e-05, -0.3096144199371338, -1.1920928244535389e-07, -1.9073486328125e-05, -1.9073486328125e-06, -0.4091510772705078, -1.3470649719238281e-05, 0.0, -0.01876985654234886, 0.0, -8.225440979003906e-05, 0.0, -8.7738037109375e-05, -0.0032176971435546875, -3.62396240234375e-05, -1.9073486328125e-06, 0.0, -0.0006623922963626683, 0.0], "choice_history": [97, 283, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 290, "that", "that", "<EOS>", 69, 290, "2", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": "__init__", "hole3": [{"hole4": [{"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"elts": [{"_type": "Template54", "hole0": "thatthat"}, {"_type": "Template54", "hole0": "2"}], "_type": "List"}], "_type": "Template40", "hole0": "Give", "hole2": "MinionSelector"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "CabalShadow", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(Attack()),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -5.0034690909317305, "score_history": [-0.0004863739013671875, -0.0002880096435546875, -0.0033791386522352695, -0.011249714531004429, -0.01390302274376154, -1.0114628821611404e-05, -1.7642974853515625e-05, -3.099440846199286e-06, -0.00049591064453125, -3.4112491607666016, -0.000102996826171875, -4.887576324108522e-06, -1.71661376953125e-05, -0.13890087604522705, -0.10077285766601562, -0.00030517575214616954, 0.0, -0.11028969287872314, -0.002002716064453125, -0.0013414621353149414, -1.71661376953125e-05, -0.18978023529052734, -0.2709932327270508, -0.00012922115274704993, -0.00010192394256591797, -5.7220458984375e-06, -0.2956209182739258, -1.33514404296875e-05, -0.20540472865104675, -0.003766397712752223, -0.24154961109161377, -5.14984130859375e-05, 0.0, -0.0002993311791215092, -1.9073486328125e-06, -0.00013720989227294922, -1.9073486328125e-06, -4.1961669921875e-05, -6.866455078125e-05, -2.6702880859375e-05, -3.8146963561302982e-06, -1.9073486328125e-06, -0.0006316581275314093, 0.0], "choice_history": [97, 283, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Cabal", " ", "Shadow", "<EOS>", "6", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 88, 325, "Attack", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 4}], "hole2": [{"hole2": "PRIEST", "hole0": "Cabal Shadow", "_type": "Template27", "hole3": "battlecry", "hole1": 6, "hole4": {"hole1": [{"_type": "Template79", "hole0": "Attack"}], "_type": "Template43", "hole0": "Give", "hole2": "HeroSelector"}}], "hole0": "CabalShadow", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(thatthatPriest\n            ()), Buff(2())]), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -5.476676369383533, "score_history": [-0.0004863739013671875, -0.0002880096435546875, -0.0033791386522352695, -0.011249714531004429, -0.01390302274376154, -1.0114628821611404e-05, -1.7642974853515625e-05, -3.099440846199286e-06, -0.00049591064453125, -0.040337562561035156, -0.0002460479736328125, -4.1961669921875e-05, 0.0, 0.0, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.400143709266558e-05, -4.1961669921875e-05, -0.02801155112683773, -0.38189125061035156, -0.007272947113960981, -0.0077533721923828125, -0.000125885009765625, -3.4332275390625e-05, -0.03583705425262451, -9.5367431640625e-06, -4.1961669921875e-05, -6.29425048828125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.01068127155303955, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -0.024761199951171875, -1.9073486328125e-06, -0.0026454925537109375, -0.03254222869873047, -0.0332489013671875, -0.0051490068435668945, -0.00016235557268373668, 0.0, -0.011338233947753906, -0.0002269744873046875, -8.7738037109375e-05, -0.06088447570800781, -0.6680679321289062, -0.8861393332481384, -0.5271307229995728, -0.4308662414550781, -0.06468996405601501, -0.020722389221191406, -0.0016927719116210938, -0.26470744609832764, -0.0016012086998671293, -0.09503960609436035, -7.62939453125e-06, -8.022785186767578e-05, -0.003688812255859375, -2.288818359375e-05, -1.1444091796875e-05, -0.3144958019256592, -1.1920928244535389e-07, -1.9073486328125e-05, -1.9073486328125e-06, -1.479496955871582, -1.537799835205078e-05, 0.0, -0.002052903175354004, 0.0, -0.00010120868682861328, 0.0, -0.0001068115234375, -0.00162506103515625, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.0006278413347899914, 0.0], "choice_history": [97, 283, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 290, "that", "that", "Priest", "<EOS>", 69, 290, "2", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": "__init__", "hole3": [{"hole4": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"elts": [{"_type": "Template54", "hole0": "thatthatPriest"}, {"_type": "Template54", "hole0": "2"}], "_type": "List"}], "_type": "Template40", "hole0": "Give", "hole2": "MinionSelector"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "CabalShadow", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Attribute('damage', SelfSelector()))), IsMinion()]),\n            MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -5.603906540093021, "score_history": [-0.0004863739013671875, -0.0002880096435546875, -0.0033791386522352695, -0.011249714531004429, -0.01390302274376154, -1.0114628821611404e-05, -1.7642974853515625e-05, -3.099440846199286e-06, -0.00049591064453125, -0.040337562561035156, -0.0002460479736328125, -4.1961669921875e-05, 0.0, 0.0, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.400143709266558e-05, -4.1961669921875e-05, -0.02801155112683773, -0.38189125061035156, -0.007272947113960981, -0.0077533721923828125, -0.000125885009765625, -3.4332275390625e-05, -0.03583705425262451, -9.5367431640625e-06, -4.1961669921875e-05, -6.29425048828125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.01068127155303955, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -0.024761199951171875, -1.9073486328125e-06, -0.0026454925537109375, -0.03254222869873047, -0.0332489013671875, -0.0051490068435668945, -0.00016235557268373668, 0.0, -0.011338233947753906, -0.0002269744873046875, -8.7738037109375e-05, -0.06088447570800781, -0.7270650863647461, -0.0001143217014032416, -1.0826926231384277, -1.811964830267243e-05, -0.1250600814819336, -0.031157493591308594, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.06315374374389648, -5.841255187988281e-06, -5.7220458984375e-06, -0.001270294189453125, -0.0001392364501953125, -1.2915146350860596, -0.0002384185791015625, -0.8495702743530273, -0.000118255615234375, -0.4044402837753296, -8.82148651726311e-06, 0.0, -0.11638164520263672, -0.0018663406372070312, -0.0019206659635528922, -0.13769744336605072, -0.0015507936477661133, -0.000637054443359375, -0.00023651123046875, 0.0, -0.001007080078125, -1.71661376953125e-05, 0.0, -0.007113933563232422, 0.0, -7.82012939453125e-05, 0.0, -0.04237937927246094, -2.09808349609375e-05, 0.0, -0.0007677078247070312, 0.0, -0.00011086463928222656, 0.0, -0.0001697540283203125, -0.0004730224609375, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0012553116539493203, 0.0], "choice_history": [97, 283, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 291, "Change", "Attack", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "damage", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 83, 314, "Is", "Minion", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": "__init__", "hole3": [{"hole4": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"elts": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "damage", "_type": "Str"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeAttack"}, {"_type": "Template73_expr_seq", "hole0": "IsMinion"}], "_type": "List"}], "_type": "Template40", "hole0": "Give", "hole2": "MinionSelector"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "CabalShadow", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeHealth(\n            Count(MinionSelector('attack', WeaponSelector())), -1)), 5]),\n            HeroSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -5.805993627290263, "score_history": [-0.0004863739013671875, -0.0002880096435546875, -0.0033791386522352695, -0.011249714531004429, -0.01390302274376154, -1.0114628821611404e-05, -1.7642974853515625e-05, -3.099440846199286e-06, -0.00049591064453125, -0.040337562561035156, -0.0002460479736328125, -4.1961669921875e-05, 0.0, 0.0, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.400143709266558e-05, -4.1961669921875e-05, -0.02801155112683773, -0.38189125061035156, -0.007272947113960981, -0.0077533721923828125, -0.000125885009765625, -3.4332275390625e-05, -0.03583705425262451, -9.5367431640625e-06, -4.1961669921875e-05, -6.29425048828125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.01068127155303955, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -0.024761199951171875, -1.9073486328125e-06, -0.0026454925537109375, -0.03254222869873047, -0.0332489013671875, -0.0051490068435668945, -0.00016235557268373668, 0.0, -0.011338233947753906, -0.0002269744873046875, -8.7738037109375e-05, -0.06088447570800781, -0.7270650863647461, -0.0001143217014032416, -0.41775190830230713, -0.0011980506824329495, -0.5149698257446289, -0.05243396759033203, -0.053363800048828125, -0.000510096549987793, -0.0013242532731965184, -0.00051116943359375, -1.9073486328125e-06, -0.0010115576442331076, -9.310239693149924e-05, -7.152555099310121e-07, -9.5367431640625e-06, -1.3033437728881836, -0.0001220703125, -0.11273626983165741, -1.9073486328125e-06, -0.005458831787109375, -3.814697265625e-06, -0.1422189474105835, -4.792213439941406e-05, 0.0, -0.052433013916015625, -0.0001277923583984375, -0.0003337860107421875, -0.000530242919921875, 0.0, -0.06979003548622131, 0.0, -0.1409921646118164, -1.9073486328125e-06, -0.20987610518932343, -7.62939453125e-06, -0.12880802154541016, 0.0, -9.5367431640625e-06, -0.0004711151123046875, -1.9073486328125e-05, 0.0, -0.7747106552124023, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.37702953815460205, -7.748603820800781e-06, 0.0, -0.0003169773845002055, 0.0, -4.00543212890625e-05, 0.0, -6.103515625e-05, -0.000579833984375, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.001853595138527453, 0.0], "choice_history": [97, 283, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 291, "Change", "Health", "<EOS>", 347, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", 52, 179, "5", "<EOS>", "Hero", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": "__init__", "hole3": [{"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}], "hole1": [{"elts": [{"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "WeaponSelector"}]}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ChangeHealth"}, {"n": 5, "_type": "Num"}], "_type": "List"}], "_type": "Template40", "hole0": "Give", "hole2": "HeroSelector"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "CabalShadow", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeHealth(\n            Count(MinionSelector('attack', WeaponSelector())), -1)), 5]),\n            HeroSelector(condition=Count(CardSelector()))))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -6.696866853622851, "score_history": [-0.0004863739013671875, -0.0002880096435546875, -0.0033791386522352695, -0.011249714531004429, -0.01390302274376154, -1.0114628821611404e-05, -1.7642974853515625e-05, -3.099440846199286e-06, -0.00049591064453125, -0.040337562561035156, -0.0002460479736328125, -4.1961669921875e-05, 0.0, 0.0, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.400143709266558e-05, -4.1961669921875e-05, -0.02801155112683773, -0.38189125061035156, -0.007272947113960981, -0.0077533721923828125, -0.000125885009765625, -3.4332275390625e-05, -0.03583705425262451, -9.5367431640625e-06, -4.1961669921875e-05, -6.29425048828125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.01068127155303955, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -0.024761199951171875, -1.9073486328125e-06, -0.0026454925537109375, -0.03254222869873047, -0.0332489013671875, -0.0051490068435668945, -0.00016235557268373668, 0.0, -0.011338233947753906, -0.0002269744873046875, -8.7738037109375e-05, -0.06088447570800781, -0.7270650863647461, -0.0001143217014032416, -0.41775190830230713, -0.0011980506824329495, -0.5149698257446289, -0.05243396759033203, -0.053363800048828125, -0.000510096549987793, -0.0013242532731965184, -0.00051116943359375, -1.9073486328125e-06, -0.0010115576442331076, -9.310239693149924e-05, -7.152555099310121e-07, -9.5367431640625e-06, -1.3033437728881836, -0.0001220703125, -0.11273626983165741, -1.9073486328125e-06, -0.005458831787109375, -3.814697265625e-06, -0.1422189474105835, -4.792213439941406e-05, 0.0, -0.052433013916015625, -0.0001277923583984375, -0.0003337860107421875, -0.000530242919921875, 0.0, -0.06979003548622131, 0.0, -0.1409921646118164, -1.9073486328125e-06, -0.20987610518932343, -7.62939453125e-06, -0.12880802154541016, 0.0, -9.5367431640625e-06, -0.0004711151123046875, -1.9073486328125e-05, 0.0, -1.0554370880126953, 0.0, -0.9313564300537109, -0.0080718994140625, -0.034057021141052246, -1.3709050108445808e-05, -0.014106392860412598, -0.0015472173690795898, 0.0, -4.851802077610046e-05, -1.9073486328125e-06, -0.00010335445404052734, 0.0, -0.0002231597900390625, -0.0001125335693359375, -2.09808349609375e-05, -1.9073477233177982e-06, 0.0, -0.00045065366430208087, 0.0], "choice_history": [97, 283, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 291, "Change", "Health", "<EOS>", 347, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", 52, 179, "5", "<EOS>", "Hero", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 30, 292, "Count", "<EOS>", "Card", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": "__init__", "hole3": [{"hole4": [{"value": {"hole1": "CardSelector", "_type": "Template55", "hole0": "Count"}, "arg": "condition", "_type": "keyword"}], "hole1": [{"elts": [{"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "WeaponSelector"}]}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ChangeHealth"}, {"n": 5, "_type": "Num"}], "_type": "List"}], "_type": "Template40", "hole0": "Give", "hole2": "HeroSelector"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "CabalShadow", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeHealth(\n            Count(MinionSelector('attack', WeaponSelector())), -1)), 5]),\n            HeroSelector(players=CurrentPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -6.707453538327165, "score_history": [-0.0004863739013671875, -0.0002880096435546875, -0.0033791386522352695, -0.011249714531004429, -0.01390302274376154, -1.0114628821611404e-05, -1.7642974853515625e-05, -3.099440846199286e-06, -0.00049591064453125, -0.040337562561035156, -0.0002460479736328125, -4.1961669921875e-05, 0.0, 0.0, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.400143709266558e-05, -4.1961669921875e-05, -0.02801155112683773, -0.38189125061035156, -0.007272947113960981, -0.0077533721923828125, -0.000125885009765625, -3.4332275390625e-05, -0.03583705425262451, -9.5367431640625e-06, -4.1961669921875e-05, -6.29425048828125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.01068127155303955, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -0.024761199951171875, -1.9073486328125e-06, -0.0026454925537109375, -0.03254222869873047, -0.0332489013671875, -0.0051490068435668945, -0.00016235557268373668, 0.0, -0.011338233947753906, -0.0002269744873046875, -8.7738037109375e-05, -0.06088447570800781, -0.7270650863647461, -0.0001143217014032416, -0.41775190830230713, -0.0011980506824329495, -0.5149698257446289, -0.05243396759033203, -0.053363800048828125, -0.000510096549987793, -0.0013242532731965184, -0.00051116943359375, -1.9073486328125e-06, -0.0010115576442331076, -9.310239693149924e-05, -7.152555099310121e-07, -9.5367431640625e-06, -1.3033437728881836, -0.0001220703125, -0.11273626983165741, -1.9073486328125e-06, -0.005458831787109375, -3.814697265625e-06, -0.1422189474105835, -4.792213439941406e-05, 0.0, -0.052433013916015625, -0.0001277923583984375, -0.0003337860107421875, -0.000530242919921875, 0.0, -0.06979003548622131, 0.0, -0.1409921646118164, -1.9073486328125e-06, -0.20987610518932343, -7.62939453125e-06, -0.12880802154541016, 0.0, -9.5367431640625e-06, -0.0004711151123046875, -1.9073486328125e-05, 0.0, -0.7747106552124023, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -1.2745057344436646, -0.0035663843154907227, 0.0, -0.0001786941575119272, 0.0, -6.890296936035156e-05, 0.0, -6.866455078125e-05, -0.001163482666015625, -1.52587890625e-05, -2.0265570128685795e-06, -1.1920928244535389e-07, -0.00179468491114676, 0.0], "choice_history": [97, 283, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 291, "Change", "Health", "<EOS>", 347, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", 52, 179, "5", "<EOS>", "Hero", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Current", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": "__init__", "hole3": [{"hole4": [{"value": {"_type": "Template79", "hole0": "CurrentPlayer"}, "arg": "players", "_type": "keyword"}], "hole1": [{"elts": [{"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "WeaponSelector"}]}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ChangeHealth"}, {"n": 5, "_type": "Num"}], "_type": "List"}], "_type": "Template40", "hole0": "Give", "hole2": "HeroSelector"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "CabalShadow", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeHealth(\n            Count(MinionSelector('attack', WeaponSelector())), -1)), 5]),\n            HeroSelector(condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -6.804885095914862, "score_history": [-0.0004863739013671875, -0.0002880096435546875, -0.0033791386522352695, -0.011249714531004429, -0.01390302274376154, -1.0114628821611404e-05, -1.7642974853515625e-05, -3.099440846199286e-06, -0.00049591064453125, -0.040337562561035156, -0.0002460479736328125, -4.1961669921875e-05, 0.0, 0.0, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.400143709266558e-05, -4.1961669921875e-05, -0.02801155112683773, -0.38189125061035156, -0.007272947113960981, -0.0077533721923828125, -0.000125885009765625, -3.4332275390625e-05, -0.03583705425262451, -9.5367431640625e-06, -4.1961669921875e-05, -6.29425048828125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.01068127155303955, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -0.024761199951171875, -1.9073486328125e-06, -0.0026454925537109375, -0.03254222869873047, -0.0332489013671875, -0.0051490068435668945, -0.00016235557268373668, 0.0, -0.011338233947753906, -0.0002269744873046875, -8.7738037109375e-05, -0.06088447570800781, -0.7270650863647461, -0.0001143217014032416, -0.41775190830230713, -0.0011980506824329495, -0.5149698257446289, -0.05243396759033203, -0.053363800048828125, -0.000510096549987793, -0.0013242532731965184, -0.00051116943359375, -1.9073486328125e-06, -0.0010115576442331076, -9.310239693149924e-05, -7.152555099310121e-07, -9.5367431640625e-06, -1.3033437728881836, -0.0001220703125, -0.11273626983165741, -1.9073486328125e-06, -0.005458831787109375, -3.814697265625e-06, -0.1422189474105835, -4.792213439941406e-05, 0.0, -0.052433013916015625, -0.0001277923583984375, -0.0003337860107421875, -0.000530242919921875, 0.0, -0.06979003548622131, 0.0, -0.1409921646118164, -1.9073486328125e-06, -0.20987610518932343, -7.62939453125e-06, -0.12880802154541016, 0.0, -9.5367431640625e-06, -0.0004711151123046875, -1.9073486328125e-05, 0.0, -1.0554370880126953, 0.0, -1.0268936157226562, -0.00177001953125, -0.0003694295883178711, -1.1920928244535389e-07, -0.06212007999420166, 0.0, -0.0022792816162109375, 0.0, -3.4332275390625e-05, -0.0017604827880859375, -3.0517578125e-05, -5.722044988942798e-06, 0.0, -0.0028703268617391586, 0.0], "choice_history": [97, 283, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 291, "Change", "Health", "<EOS>", 347, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", 52, 179, "5", "<EOS>", "Hero", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": "__init__", "hole3": [{"hole4": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "hole1": [{"elts": [{"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "WeaponSelector"}]}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ChangeHealth"}, {"n": 5, "_type": "Num"}], "_type": "List"}], "_type": "Template40", "hole0": "Give", "hole2": "HeroSelector"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "CabalShadow", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeHealth(\n            Count(MinionSelector(Null, BothPlayer())), -1)), 5]),\n            HeroSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -6.828560867985281, "score_history": [-0.0004863739013671875, -0.0002880096435546875, -0.0033791386522352695, -0.011249714531004429, -0.01390302274376154, -1.0114628821611404e-05, -1.7642974853515625e-05, -3.099440846199286e-06, -0.00049591064453125, -0.040337562561035156, -0.0002460479736328125, -4.1961669921875e-05, 0.0, 0.0, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.400143709266558e-05, -4.1961669921875e-05, -0.02801155112683773, -0.38189125061035156, -0.007272947113960981, -0.0077533721923828125, -0.000125885009765625, -3.4332275390625e-05, -0.03583705425262451, -9.5367431640625e-06, -4.1961669921875e-05, -6.29425048828125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.01068127155303955, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -0.024761199951171875, -1.9073486328125e-06, -0.0026454925537109375, -0.03254222869873047, -0.0332489013671875, -0.0051490068435668945, -0.00016235557268373668, 0.0, -0.011338233947753906, -0.0002269744873046875, -8.7738037109375e-05, -0.06088447570800781, -0.7270650863647461, -0.0001143217014032416, -0.41775190830230713, -0.0011980506824329495, -0.5149698257446289, -0.05243396759033203, -0.053363800048828125, -0.000510096549987793, -0.0013242532731965184, -0.00051116943359375, -1.9073486328125e-06, -0.0010115576442331076, -9.310239693149924e-05, -7.152555099310121e-07, -9.5367431640625e-06, -1.5293941497802734, -0.000644683837890625, -0.0009137278539128602, -1.1920928244535389e-07, -0.0002117156982421875, 0.0, -0.017145872116088867, -5.9485435485839844e-05, -1.9073486328125e-06, -0.3599081039428711, -0.000125885009765625, -0.00016021728515625, -0.0002193450927734375, -1.9073486328125e-06, -0.04428328201174736, 0.0, -0.34117889404296875, 0.0, -0.3248574733734131, -1.9073486328125e-05, -0.25113868713378906, 0.0, -2.47955322265625e-05, -0.000438690185546875, -1.71661376953125e-05, 0.0, -1.1398258209228516, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -0.3311368227005005, -7.748603820800781e-06, 0.0, -0.0003032683162018657, 0.0, -3.62396240234375e-05, 0.0, -5.340576171875e-05, -0.0005245208740234375, -1.33514404296875e-05, -2.0265570128685795e-06, 0.0, -0.001871326006948948, 0.0], "choice_history": [97, 283, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 291, "Change", "Health", "<EOS>", 347, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 51, 176, "Null", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", 52, 179, "5", "<EOS>", "Hero", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": "__init__", "hole3": [{"hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}], "hole1": [{"elts": [{"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "BothPlayer"}]}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ChangeHealth"}, {"n": 5, "_type": "Num"}], "_type": "List"}], "_type": "Template40", "hole0": "Give", "hole2": "HeroSelector"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "CabalShadow", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Attribute('attack', MinionSelector(Adjacent())))), Buff(\n            ChangeHealth(Count(MinionSelector(Null, BothPlayer())), -1))]),\n            MinionSelector(condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -7.300677097555514, "score_history": [-0.0004863739013671875, -0.0002880096435546875, -0.0033791386522352695, -0.011249714531004429, -0.01390302274376154, -1.0114628821611404e-05, -1.7642974853515625e-05, -3.099440846199286e-06, -0.00049591064453125, -0.040337562561035156, -0.0002460479736328125, -4.1961669921875e-05, 0.0, 0.0, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.400143709266558e-05, -4.1961669921875e-05, -0.02801155112683773, -0.38189125061035156, -0.007272947113960981, -0.0077533721923828125, -0.000125885009765625, -3.4332275390625e-05, -0.03583705425262451, -9.5367431640625e-06, -4.1961669921875e-05, -6.29425048828125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.01068127155303955, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -0.024761199951171875, -1.9073486328125e-06, -0.0026454925537109375, -0.03254222869873047, -0.0332489013671875, -0.0051490068435668945, -0.00016235557268373668, 0.0, -0.011338233947753906, -0.0002269744873046875, -8.7738037109375e-05, -0.06088447570800781, -0.7270650863647461, -0.0001143217014032416, -1.0826926231384277, -1.811964830267243e-05, -0.1250600814819336, -0.031157493591308594, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.06315374374389648, -5.841255187988281e-06, -5.7220458984375e-06, -0.001270294189453125, -0.0001392364501953125, -0.9720714092254639, -1.9073486328125e-06, -0.6793956756591797, -0.0019779205322265625, -0.013563275337219238, -2.288818359375e-05, 0.0, -0.1158289685845375, -4.0531158447265625e-06, -0.022988319396972656, -0.0017910003662109375, -0.0001239776611328125, -0.006441593170166016, -7.986990567587782e-06, -0.18725967407226562, -0.1705484390258789, -0.001216888427734375, -0.0010989904403686523, -0.0005996812833473086, -0.000225067138671875, 0.0, -0.0013447985984385014, -0.00014507770538330078, -2.1457672119140625e-06, -7.62939453125e-06, -0.7301130294799805, -0.001010894775390625, -0.001072386628948152, -1.1920928244535389e-07, -0.0001735687255859375, 0.0, -0.007605433464050293, -4.9948692321777344e-05, -1.9073486328125e-06, -0.37810611724853516, -0.000110626220703125, -0.000164031982421875, -0.0001983642578125, -1.9073486328125e-06, -0.04797676205635071, 0.0, -0.0009403228759765625, 0.0, -2.09808349609375e-05, -0.005062103271484375, -2.6702880859375e-05, 0.0, -0.3299018144607544, -1.1920928244535389e-07, -0.6945686340332031, -0.0023832321166992188, -0.00024080276489257812, -1.1920928244535389e-07, -0.16929280757904053, 0.0, -0.0035544633865356445, 0.0, -3.4332275390625e-05, -0.006339073181152344, -4.00543212890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007004268118180335, 0.0], "choice_history": [97, 283, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 291, "Change", "Attack", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>", 69, 291, "Change", "Health", "<EOS>", 347, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 51, 176, "Null", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": "__init__", "hole3": [{"hole4": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "hole1": [{"elts": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"hole1": "Adjacent", "_type": "Template55", "hole0": "MinionSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeAttack"}, {"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "BothPlayer"}]}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "List"}], "_type": "Template40", "hole0": "Give", "hole2": "MinionSelector"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "CabalShadow", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeHealth(\n            Attribute('attack', MinionSelector(Adjacent())))), Buff(\n            ChangeHealth(Count(MinionSelector(Null, BothPlayer())), -1))]),\n            MinionSelector(condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -7.831902371863386, "score_history": [-0.0004863739013671875, -0.0002880096435546875, -0.0033791386522352695, -0.011249714531004429, -0.01390302274376154, -1.0114628821611404e-05, -1.7642974853515625e-05, -3.099440846199286e-06, -0.00049591064453125, -0.040337562561035156, -0.0002460479736328125, -4.1961669921875e-05, 0.0, 0.0, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.400143709266558e-05, -4.1961669921875e-05, -0.02801155112683773, -0.38189125061035156, -0.007272947113960981, -0.0077533721923828125, -0.000125885009765625, -3.4332275390625e-05, -0.03583705425262451, -9.5367431640625e-06, -4.1961669921875e-05, -6.29425048828125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.01068127155303955, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -0.024761199951171875, -1.9073486328125e-06, -0.0026454925537109375, -0.03254222869873047, -0.0332489013671875, -0.0051490068435668945, -0.00016235557268373668, 0.0, -0.011338233947753906, -0.0002269744873046875, -8.7738037109375e-05, -0.06088447570800781, -0.7270650863647461, -0.0001143217014032416, -0.41775190830230713, -0.0011980506824329495, -0.9118566513061523, -0.585597038269043, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.05649900063872337, -2.491474151611328e-05, -3.814697265625e-06, -0.00144195556640625, -0.0001659393310546875, -0.8486990928649902, -1.9073486328125e-06, -0.6632623672485352, -0.0019283294677734375, -0.012592434883117676, -2.09808349609375e-05, 0.0, -0.1175825297832489, -4.0531158447265625e-06, -0.022225379943847656, -0.0017948150634765625, -0.000125885009765625, -0.006315708160400391, -7.748573807475623e-06, -0.18332290649414062, -0.16847801208496094, -0.0012149810791015625, -0.0010875463485717773, -0.0005912224878557026, -0.000225067138671875, 0.0, -0.0012944922782480717, -0.00016021728515625, -2.1457672119140625e-06, -9.5367431640625e-06, -0.736729621887207, -0.0009860992431640625, -0.00103614735417068, -1.1920928244535389e-07, -0.00017547607421875, 0.0, -0.007708430290222168, -4.9948692321777344e-05, -1.9073486328125e-06, -0.37755584716796875, -0.000110626220703125, -0.0001621246337890625, -0.0002002716064453125, -1.9073486328125e-06, -0.04716228321194649, 0.0, -0.0009441375732421875, 0.0, -2.09808349609375e-05, -0.0051021575927734375, -2.6702880859375e-05, 0.0, -0.3304091691970825, -1.1920928244535389e-07, -0.694331169128418, -0.0024051666259765625, -0.00023889541625976562, -1.1920928244535389e-07, -0.16959702968597412, 0.0, -0.003548741340637207, 0.0, -3.4332275390625e-05, -0.006319999694824219, -4.00543212890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007006651139818132, 0.0], "choice_history": [97, 283, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 291, "Change", "Health", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>", 69, 291, "Change", "Health", "<EOS>", 347, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 51, 176, "Null", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": "__init__", "hole3": [{"hole4": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "hole1": [{"elts": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"hole1": "Adjacent", "_type": "Template55", "hole0": "MinionSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeHealth"}, {"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "BothPlayer"}]}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "List"}], "_type": "Template40", "hole0": "Give", "hole2": "MinionSelector"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "CabalShadow", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Attribute('attack', MinionSelector(Adjacent())))), Buff(\n            ChangeHealth(Count(MinionSelector(Null, BothPlayer())), -1))]),\n            MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -7.9358305466960175, "score_history": [-0.0004863739013671875, -0.0002880096435546875, -0.0033791386522352695, -0.011249714531004429, -0.01390302274376154, -1.0114628821611404e-05, -1.7642974853515625e-05, -3.099440846199286e-06, -0.00049591064453125, -0.040337562561035156, -0.0002460479736328125, -4.1961669921875e-05, 0.0, 0.0, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.400143709266558e-05, -4.1961669921875e-05, -0.02801155112683773, -0.38189125061035156, -0.007272947113960981, -0.0077533721923828125, -0.000125885009765625, -3.4332275390625e-05, -0.03583705425262451, -9.5367431640625e-06, -4.1961669921875e-05, -6.29425048828125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.01068127155303955, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -0.024761199951171875, -1.9073486328125e-06, -0.0026454925537109375, -0.03254222869873047, -0.0332489013671875, -0.0051490068435668945, -0.00016235557268373668, 0.0, -0.011338233947753906, -0.0002269744873046875, -8.7738037109375e-05, -0.06088447570800781, -0.7270650863647461, -0.0001143217014032416, -1.0826926231384277, -1.811964830267243e-05, -0.1250600814819336, -0.031157493591308594, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.06315374374389648, -5.841255187988281e-06, -5.7220458984375e-06, -0.001270294189453125, -0.0001392364501953125, -0.9720714092254639, -1.9073486328125e-06, -0.6793956756591797, -0.0019779205322265625, -0.013563275337219238, -2.288818359375e-05, 0.0, -0.1158289685845375, -4.0531158447265625e-06, -0.022988319396972656, -0.0017910003662109375, -0.0001239776611328125, -0.006441593170166016, -7.986990567587782e-06, -0.18725967407226562, -0.1705484390258789, -0.001216888427734375, -0.0010989904403686523, -0.0005996812833473086, -0.000225067138671875, 0.0, -0.0013447985984385014, -0.00014507770538330078, -2.1457672119140625e-06, -7.62939453125e-06, -0.7301130294799805, -0.001010894775390625, -0.001072386628948152, -1.1920928244535389e-07, -0.0001735687255859375, 0.0, -0.007605433464050293, -4.9948692321777344e-05, -1.9073486328125e-06, -0.37810611724853516, -0.000110626220703125, -0.000164031982421875, -0.0001983642578125, -1.9073486328125e-06, -0.04797676205635071, 0.0, -0.0009403228759765625, 0.0, -2.09808349609375e-05, -0.005062103271484375, -2.6702880859375e-05, 0.0, -1.7959052324295044, 0.0, -0.000186920166015625, -1.9073486328125e-06, -0.042835235595703125, -2.300739288330078e-05, 0.0, -0.0013936756877228618, 0.0, -8.606910705566406e-05, 0.0, -0.000133514404296875, -0.000690460205078125, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0009399547125212848, 0.0], "choice_history": [97, 283, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 291, "Change", "Attack", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>", 69, 291, "Change", "Health", "<EOS>", 347, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 51, 176, "Null", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": "__init__", "hole3": [{"hole4": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole1": [{"elts": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"hole1": "Adjacent", "_type": "Template55", "hole0": "MinionSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeAttack"}, {"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "BothPlayer"}]}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "List"}], "_type": "Template40", "hole0": "Give", "hole2": "MinionSelector"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "CabalShadow", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Attribute('attack', MinionSelector(Adjacent())))), Buff(\n            ChangeHealth(Count(MinionSelector(Null, BothPlayer())), -1))]),\n            MinionSelector(condition=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -8.633518654598177, "score_history": [-0.0004863739013671875, -0.0002880096435546875, -0.0033791386522352695, -0.011249714531004429, -0.01390302274376154, -1.0114628821611404e-05, -1.7642974853515625e-05, -3.099440846199286e-06, -0.00049591064453125, -0.040337562561035156, -0.0002460479736328125, -4.1961669921875e-05, 0.0, 0.0, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-05, -2.86102294921875e-05, -1.33514404296875e-05, -5.400143709266558e-05, -4.1961669921875e-05, -0.02801155112683773, -0.38189125061035156, -0.007272947113960981, -0.0077533721923828125, -0.000125885009765625, -3.4332275390625e-05, -0.03583705425262451, -9.5367431640625e-06, -4.1961669921875e-05, -6.29425048828125e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.01068127155303955, -1.9073486328125e-06, -1.1444091796875e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -4.9591064453125e-05, -0.024761199951171875, -1.9073486328125e-06, -0.0026454925537109375, -0.03254222869873047, -0.0332489013671875, -0.0051490068435668945, -0.00016235557268373668, 0.0, -0.011338233947753906, -0.0002269744873046875, -8.7738037109375e-05, -0.06088447570800781, -0.7270650863647461, -0.0001143217014032416, -1.0826926231384277, -1.811964830267243e-05, -0.1250600814819336, -0.031157493591308594, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.06315374374389648, -5.841255187988281e-06, -5.7220458984375e-06, -0.001270294189453125, -0.0001392364501953125, -0.9720714092254639, -1.9073486328125e-06, -0.6793956756591797, -0.0019779205322265625, -0.013563275337219238, -2.288818359375e-05, 0.0, -0.1158289685845375, -4.0531158447265625e-06, -0.022988319396972656, -0.0017910003662109375, -0.0001239776611328125, -0.006441593170166016, -7.986990567587782e-06, -0.18725967407226562, -0.1705484390258789, -0.001216888427734375, -0.0010989904403686523, -0.0005996812833473086, -0.000225067138671875, 0.0, -0.0013447985984385014, -0.00014507770538330078, -2.1457672119140625e-06, -7.62939453125e-06, -0.7301130294799805, -0.001010894775390625, -0.001072386628948152, -1.1920928244535389e-07, -0.0001735687255859375, 0.0, -0.007605433464050293, -4.9948692321777344e-05, -1.9073486328125e-06, -0.37810611724853516, -0.000110626220703125, -0.000164031982421875, -0.0001983642578125, -1.9073486328125e-06, -0.04797676205635071, 0.0, -0.0009403228759765625, 0.0, -2.09808349609375e-05, -0.005062103271484375, -2.6702880859375e-05, 0.0, -0.3299018144607544, -1.1920928244535389e-07, -1.170370101928711, -3.814697265625e-06, -1.036202073097229, -0.0006563663482666016, -2.3841855067985307e-07, -0.001113389153033495, 0.0, -7.069110870361328e-05, 0.0, -4.00543212890625e-05, -0.000606536865234375, -2.6702880859375e-05, -2.0265574676159304e-06, 0.0, -0.0009111367398872972, 0.0], "choice_history": [97, 283, "Cabal", "Shadow", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 52, 179, "6", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 91, 252, "Give", "<EOS>", 346, 48, 169, 347, 69, 291, "Change", "Attack", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Adjacent", "<EOS>", 69, 291, "Change", "Health", "<EOS>", 347, 77, 302, "Count", "<EOS>", 21, 174, "Minion", "Selector", "<EOS>", 347, 51, 176, "Null", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 89, 331, 139, 23, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "5", "<EOS>"], "model_output": {"hole6": [{"hole1": 5, "_type": "Template62", "hole0": 4}], "hole2": [{"hole1": "__init__", "hole3": [{"hole4": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "condition", "_type": "keyword"}], "hole1": [{"elts": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"hole1": "Adjacent", "_type": "Template55", "hole0": "MinionSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeAttack"}, {"hole1": [{"hole1": {"id": "MinionSelector", "_type": "Name"}, "_type": "Template64", "hole0": "Count", "hole2": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "BothPlayer"}]}, {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "List"}], "_type": "Template40", "hole0": "Give", "hole2": "MinionSelector"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ROGUE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "CabalShadow", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n        index = self.target.index\n        if self.target.index < len(self.target.player.minions) - 1:\n            minion = self.target.player.minions[index + 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n        self.target.damage(player.effective_spell_damage(1), self)\n        if self.target.index > 0:\n            minion = self.target.player.minions[index - 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n", "beams": [{"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        left_minion = Null\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score": -3.3702612787489272, "score_history": [-0.007396697998046875, -3.4332275390625e-05, -2.09808349609375e-05, -4.76837158203125e-05, -8.20159912109375e-05, -0.00018714142788667232, -0.0015835665399208665, -4.4941058149561286e-05, -4.9828242481453344e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002003914210945368, -1.0371208190917969e-05, -2.002716064453125e-05, -4.76837158203125e-05, -0.009553909301757812, -0.0003032684326171875, -4.52994936495088e-06, -0.000110626220703125, -5.0186685257358477e-05, -7.05718994140625e-05, -0.0003783702850341797, -1.33514404296875e-05, -2.026555193879176e-06, 0.0, -0.00141143798828125, -1.71661376953125e-05, -0.05095386505126953, -5.14984130859375e-05, -7.069110870361328e-05, 0.0, -0.0006084442138671875, -0.0001659393310546875, -0.00316619873046875, -0.0003509521484375, -3.826618194580078e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -0.00020301342010498047, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.2288494110107422, -2.6702880859375e-05, -0.0003204345703125, -3.0517578125e-05, -9.5367431640625e-06, -0.000125885009765625, -7.62939453125e-06, -4.291534423828125e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -9.5367431640625e-06, 0.0, -3.266334533691406e-05, 0.0, -0.0033521652221679688, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05, -7.82012939453125e-05, -1.9010716676712036, -0.00018131732940673828, -0.0203094482421875, -0.0006847381591796875, -0.0003517845761962235, -5.125993993715383e-06, -0.7553997039794922, -0.0010814666748046875, -0.12456703186035156, -1.9073486328125e-06, -0.00011444091796875, 0.0, -0.0003681182861328125, 0.0, -1.71661376953125e-05, 0.0, -0.09918919950723648, 0.0, -9.5367431640625e-06, -0.02414417266845703, -6.103515625e-05, -0.12893171608448029, -3.576278118089249e-07, -1.9073486328125e-06, -1.52587890625e-05, -0.0017528533935546875, -1.3470649719238281e-05], "choice_history": [96, 173, 358, 105, 152, "Cone", "Of", "Cold", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "left_minion", "<EOS>", 22, 176, "Null", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "_type": "Template2", "hole0": "Cone of Cold", "hole2": "MAGE"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign", "targets": [{"id": "left_minion", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 1}, {"id": "self", "_type": "Name"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "ConeOfCold", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        left_minion = Null\n        game.check_delayed()\n", "score": -3.7295148119335124, "score_history": [-0.007396697998046875, -3.4332275390625e-05, -2.09808349609375e-05, -4.76837158203125e-05, -8.20159912109375e-05, -0.00018714142788667232, -0.0015835665399208665, -4.4941058149561286e-05, -4.9828242481453344e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002003914210945368, -1.0371208190917969e-05, -2.002716064453125e-05, -4.76837158203125e-05, -0.009553909301757812, -0.0003032684326171875, -4.52994936495088e-06, -0.000110626220703125, -5.0186685257358477e-05, -7.05718994140625e-05, -0.0003783702850341797, -1.33514404296875e-05, -2.026555193879176e-06, 0.0, -0.00141143798828125, -1.71661376953125e-05, -0.05095386505126953, -5.14984130859375e-05, -7.069110870361328e-05, 0.0, -0.0006084442138671875, -0.0001659393310546875, -0.00316619873046875, -0.0003509521484375, -3.826618194580078e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -0.00020301342010498047, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.2288494110107422, -2.6702880859375e-05, -0.0003204345703125, -3.0517578125e-05, -9.5367431640625e-06, -0.000125885009765625, -7.62939453125e-06, -4.291534423828125e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -9.5367431640625e-06, 0.0, -3.266334533691406e-05, 0.0, -0.0033521652221679688, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05, -7.82012939453125e-05, -1.9010716676712036, -0.00018131732940673828, -0.0203094482421875, -0.0006847381591796875, -0.0003517845761962235, -5.125993993715383e-06, -1.3815803527832031, -2.09808349609375e-05, -0.1039419174194336, -1.1444091796875e-05, -0.0008258819580078125, 0.0, -0.0009012222290039062, 0.0, -0.0076410770416259766, 0.0], "choice_history": [96, 173, 358, 105, 152, "Cone", "Of", "Cold", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "left_minion", "<EOS>", 22, 176, "Null", "<EOS>", 106, 155, 36, 317, 21, 174, "game", "<EOS>", "check_delayed", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "_type": "Template2", "hole0": "Cone of Cold", "hole2": "MAGE"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign", "targets": [{"id": "left_minion", "_type": "Name"}]}, {"value": {"hole1": "check_delayed", "_type": "Template76", "hole0": {"id": "game", "_type": "Name"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "ConeOfCold", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        right_minion = Null\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score": -3.9965230633194153, "score_history": [-0.007396697998046875, -3.4332275390625e-05, -2.09808349609375e-05, -4.76837158203125e-05, -8.20159912109375e-05, -0.00018714142788667232, -0.0015835665399208665, -4.4941058149561286e-05, -4.9828242481453344e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002003914210945368, -1.0371208190917969e-05, -2.002716064453125e-05, -4.76837158203125e-05, -0.009553909301757812, -0.0003032684326171875, -4.52994936495088e-06, -0.000110626220703125, -5.0186685257358477e-05, -7.05718994140625e-05, -0.0003783702850341797, -1.33514404296875e-05, -2.026555193879176e-06, 0.0, -0.00141143798828125, -1.71661376953125e-05, -0.05095386505126953, -5.14984130859375e-05, -7.069110870361328e-05, 0.0, -0.0006084442138671875, -0.0001659393310546875, -0.00316619873046875, -0.0003509521484375, -3.826618194580078e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -0.00020301342010498047, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.2288494110107422, -2.6702880859375e-05, -0.0003204345703125, -3.0517578125e-05, -9.5367431640625e-06, -0.000125885009765625, -7.62939453125e-06, -4.291534423828125e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -9.5367431640625e-06, 0.0, -3.266334533691406e-05, 0.0, -0.0033521652221679688, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05, -7.82012939453125e-05, -2.63679838180542, -2.09808349609375e-05, -0.0854949951171875, -0.0003204345703125, -0.0007586448336951435, -9.059892363438848e-06, -0.5431060791015625, -0.0011310577392578125, -0.17998886108398438, -1.9073486328125e-06, -0.0002288818359375, 0.0, -0.00049591064453125, 0.0, -1.9073486328125e-05, 0.0, -0.07582955807447433, 0.0, -1.1444091796875e-05, -0.028118133544921875, -5.7220458984375e-05, -0.13040079176425934, -3.576278118089249e-07, -1.9073486328125e-06, -1.52587890625e-05, -0.0017147064208984375, -1.1563301086425781e-05], "choice_history": [96, 173, 358, 105, 152, "Cone", "Of", "Cold", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "right_minion", "<EOS>", 22, 176, "Null", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "_type": "Template2", "hole0": "Cone of Cold", "hole2": "MAGE"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign", "targets": [{"id": "right_minion", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 1}, {"id": "self", "_type": "Name"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "ConeOfCold", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = Null\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score": -4.164165431975249, "score_history": [-0.007396697998046875, -3.4332275390625e-05, -2.09808349609375e-05, -4.76837158203125e-05, -8.20159912109375e-05, -0.00018714142788667232, -0.0015835665399208665, -4.4941058149561286e-05, -4.9828242481453344e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002003914210945368, -1.0371208190917969e-05, -2.002716064453125e-05, -4.76837158203125e-05, -0.009553909301757812, -0.0003032684326171875, -4.52994936495088e-06, -0.000110626220703125, -5.0186685257358477e-05, -7.05718994140625e-05, -0.0003783702850341797, -1.33514404296875e-05, -2.026555193879176e-06, 0.0, -0.00141143798828125, -1.71661376953125e-05, -0.05095386505126953, -5.14984130859375e-05, -7.069110870361328e-05, 0.0, -0.0006084442138671875, -0.0001659393310546875, -0.00316619873046875, -0.0003509521484375, -3.826618194580078e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -0.00020301342010498047, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.2288494110107422, -2.6702880859375e-05, -0.0003204345703125, -3.0517578125e-05, -9.5367431640625e-06, -0.000125885009765625, -7.62939453125e-06, -4.291534423828125e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -9.5367431640625e-06, 0.0, -3.266334533691406e-05, 0.0, -0.0033521652221679688, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05, -7.82012939453125e-05, -2.2637670040130615, 0.0, -0.4184846878051758, -0.000667572021484375, -0.0008617596467956901, -5.7220440794480965e-06, -0.5964765548706055, -0.0016841888427734375, -0.2749509811401367, -1.9073486328125e-06, -0.000240325927734375, 0.0, -0.0005979537963867188, 0.0, -2.09808349609375e-05, 0.0, -0.12403947860002518, 0.0, -1.52587890625e-05, -0.035407066345214844, -5.14984130859375e-05, -0.13306738436222076, -3.576278118089249e-07, -1.9073486328125e-06, -1.52587890625e-05, -0.0018062591552734375, -1.3470649719238281e-05], "choice_history": [96, 173, 358, 105, 152, "Cone", "Of", "Cold", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "temp_attack", "<EOS>", 22, 176, "Null", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "_type": "Template2", "hole0": "Cone of Cold", "hole2": "MAGE"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign", "targets": [{"id": "temp_attack", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 1}, {"id": "self", "_type": "Name"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "ConeOfCold", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.immune - 1\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score": -4.514468214468785, "score_history": [-0.007396697998046875, -3.4332275390625e-05, -2.09808349609375e-05, -4.76837158203125e-05, -8.20159912109375e-05, -0.00018714142788667232, -0.0015835665399208665, -4.4941058149561286e-05, -4.9828242481453344e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002003914210945368, -1.0371208190917969e-05, -2.002716064453125e-05, -4.76837158203125e-05, -0.009553909301757812, -0.0003032684326171875, -4.52994936495088e-06, -0.000110626220703125, -5.0186685257358477e-05, -7.05718994140625e-05, -0.0003783702850341797, -1.33514404296875e-05, -2.026555193879176e-06, 0.0, -0.00141143798828125, -1.71661376953125e-05, -0.05095386505126953, -5.14984130859375e-05, -7.069110870361328e-05, 0.0, -0.0006084442138671875, -0.0001659393310546875, -0.00316619873046875, -0.0003509521484375, -3.826618194580078e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -0.00020301342010498047, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.2288494110107422, -2.6702880859375e-05, -0.0003204345703125, -3.0517578125e-05, -9.5367431640625e-06, -0.000125885009765625, -7.62939453125e-06, -4.291534423828125e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -9.5367431640625e-06, 0.0, -3.266334533691406e-05, 0.0, -0.0033521652221679688, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05, -7.82012939453125e-05, -1.795535683631897, -4.208087921142578e-05, -0.8530168533325195, -0.013936996459960938, -0.005288124084472656, -8.58306884765625e-05, -0.001911163330078125, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.012084126472473145, 0.0, -2.09808349609375e-05, 0.0, -0.6986119747161865, -1.1920928244535389e-07, -0.007628440856933594, -0.03163719177246094, -9.5367431640625e-06, -0.00012052059173583984, -1.9073486328125e-06, -0.36075782775878906, -0.004235267639160156, -0.005840301513671875, 0.0, -4.1961669921875e-05, 0.0, -9.918212890625e-05, 0.0, -2.288818359375e-05, 0.0, -0.36521202325820923, 0.0, -5.7220458984375e-06, -0.0025424957275390625, -6.29425048828125e-05, -0.041862115263938904, -4.768370445162873e-07, -1.9073486328125e-06, -2.6702880859375e-05, -0.0016442537307739258, -2.682209014892578e-05], "choice_history": [96, 173, 358, 105, 152, "Cone", "Of", "Cold", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 14, 145, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 99, 23, 179, "1", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "_type": "Template2", "hole0": "Cone of Cold", "hole2": "MAGE"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"op": {"_type": "Sub"}, "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "immune", "_type": "Attribute"}, "_type": "BinOp", "right": {"n": 1, "_type": "Num"}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 1}, {"id": "self", "_type": "Name"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "ConeOfCold", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        option = game.random_choice.choose_option([Cone(), Cone()], player)\n        option.use(player, game)\n", "score": -5.067304956720946, "score_history": [-0.007396697998046875, -3.4332275390625e-05, -2.09808349609375e-05, -4.76837158203125e-05, -8.20159912109375e-05, -0.00018714142788667232, -0.0015835665399208665, -4.4941058149561286e-05, -4.9828242481453344e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002003914210945368, -1.0371208190917969e-05, -2.002716064453125e-05, -4.76837158203125e-05, -0.009553909301757812, -0.0003032684326171875, -4.52994936495088e-06, -0.000110626220703125, -5.0186685257358477e-05, -7.05718994140625e-05, -0.0003783702850341797, -1.33514404296875e-05, -2.026555193879176e-06, 0.0, -0.00141143798828125, -1.71661376953125e-05, -0.05095386505126953, -5.14984130859375e-05, -7.069110870361328e-05, 0.0, -0.0006084442138671875, -0.0001659393310546875, -0.00316619873046875, -0.0003509521484375, -3.826618194580078e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -0.00020301342010498047, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.2288494110107422, -2.6702880859375e-05, -0.0003204345703125, -3.0517578125e-05, -9.5367431640625e-06, -0.000125885009765625, -7.62939453125e-06, -4.291534423828125e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -9.5367431640625e-06, 0.0, -3.266334533691406e-05, 0.0, -0.0033521652221679688, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05, -7.82012939453125e-05, -1.719319462776184, -7.748603820800781e-06, -0.07129478454589844, -0.0003185272216796875, -5.7220458984375e-06, 0.0, -0.010389328002929688, 0.0, -0.016361236572265625, 0.0, -0.0413593053817749, 0.0, -0.743952751159668, -1.9073486328125e-06, -0.765864372253418, 0.0, -0.00046539306640625, -0.047720909118652344, -0.020818710327148438, -0.9368107914924622, -0.10065983980894089, -7.62939453125e-06, -0.03626251220703125, -0.0012912750244140625, -0.038716185837984085, -0.15452536940574646, -0.0013952255249023438, -1.9073486328125e-06, -0.00312650203704834, -1.1920928244535389e-07, -0.03295135498046875, -9.5367431640625e-05, -0.001026153564453125, -0.000545501708984375, -0.0047588348388671875, -1.9073486328125e-06, -0.00490880012512207, 0.0, -0.0002913475036621094, -5.7220458984375e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -1.4066696166992188e-05, -3.576278118089249e-07], "choice_history": [96, 173, 358, 105, 152, "Cone", "Of", "Cold", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "option", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", "choose_option", "<EOS>", 347, 86, 320, "Cone", "<EOS>", 346, 83, 314, "Cone", "<EOS>", 50, 174, "player", "<EOS>", 106, 155, 32, 300, 21, 174, "option", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "_type": "Template2", "hole0": "Cone of Cold", "hole2": "MAGE"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "attr": "choose_option", "_type": "Attribute"}, "args": [{"hole2": [{"_type": "Template73_expr_seq", "hole0": "Cone"}], "_type": "Template78", "hole0": "Cone"}, {"id": "player", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "option", "_type": "Name"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"id": "option", "_type": "Name"}, "hole2": "player"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "ConeOfCold", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        index = self.target.immune\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score": -5.094856285484269, "score_history": [-0.007396697998046875, -3.4332275390625e-05, -2.09808349609375e-05, -4.76837158203125e-05, -8.20159912109375e-05, -0.00018714142788667232, -0.0015835665399208665, -4.4941058149561286e-05, -4.9828242481453344e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002003914210945368, -1.0371208190917969e-05, -2.002716064453125e-05, -4.76837158203125e-05, -0.009553909301757812, -0.0003032684326171875, -4.52994936495088e-06, -0.000110626220703125, -5.0186685257358477e-05, -7.05718994140625e-05, -0.0003783702850341797, -1.33514404296875e-05, -2.026555193879176e-06, 0.0, -0.00141143798828125, -1.71661376953125e-05, -0.05095386505126953, -5.14984130859375e-05, -7.069110870361328e-05, 0.0, -0.0006084442138671875, -0.0001659393310546875, -0.00316619873046875, -0.0003509521484375, -3.826618194580078e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -0.00020301342010498047, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.2288494110107422, -2.6702880859375e-05, -0.0003204345703125, -3.0517578125e-05, -9.5367431640625e-06, -0.000125885009765625, -7.62939453125e-06, -4.291534423828125e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -9.5367431640625e-06, 0.0, -3.266334533691406e-05, 0.0, -0.0033521652221679688, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05, -7.82012939453125e-05, -2.3252241611480713, -6.67572021484375e-05, -0.0052089691162109375, -9.5367431640625e-06, -0.0001964569091796875, 0.0, -0.0030345916748046875, 0.0, -0.0021314620971679688, 0.0, -1.52587890625e-05, 0.0, -0.9807263612747192, 0.0, -0.8825855255126953, -0.0001163482666015625, -0.012586593627929688, -1.9073486328125e-06, -0.17920875549316406, 0.0, -0.0002231597900390625, 0.0, -1.71661376953125e-05, 0.0, -0.36755746603012085, 0.0, -1.71661376953125e-05, -0.005858421325683594, -8.0108642578125e-05, -0.01725374348461628, -4.768370445162873e-07, -1.9073486328125e-06, -3.0517578125e-05, -0.0006963014602661133, -1.9311904907226562e-05], "choice_history": [96, 173, 358, 105, 152, "Cone", "Of", "Cold", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "index", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "_type": "Template2", "hole0": "Cone of Cold", "hole2": "MAGE"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "immune", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "index", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 1}, {"id": "self", "_type": "Name"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "ConeOfCold", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        option = game.random_choice.choose_option([Damage<UNK>(), Cone()],\n            player)\n        option.use(player, game)\n", "score": -5.1643833359500135, "score_history": [-0.007396697998046875, -3.4332275390625e-05, -2.09808349609375e-05, -4.76837158203125e-05, -8.20159912109375e-05, -0.00018714142788667232, -0.0015835665399208665, -4.4941058149561286e-05, -4.9828242481453344e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002003914210945368, -1.0371208190917969e-05, -2.002716064453125e-05, -4.76837158203125e-05, -0.009553909301757812, -0.0003032684326171875, -4.52994936495088e-06, -0.000110626220703125, -5.0186685257358477e-05, -7.05718994140625e-05, -0.0003783702850341797, -1.33514404296875e-05, -2.026555193879176e-06, 0.0, -0.00141143798828125, -1.71661376953125e-05, -0.05095386505126953, -5.14984130859375e-05, -7.069110870361328e-05, 0.0, -0.0006084442138671875, -0.0001659393310546875, -0.00316619873046875, -0.0003509521484375, -3.826618194580078e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -0.00020301342010498047, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.2288494110107422, -2.6702880859375e-05, -0.0003204345703125, -3.0517578125e-05, -9.5367431640625e-06, -0.000125885009765625, -7.62939453125e-06, -4.291534423828125e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -9.5367431640625e-06, 0.0, -3.266334533691406e-05, 0.0, -0.0033521652221679688, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05, -7.82012939453125e-05, -1.719319462776184, -7.748603820800781e-06, -0.07129478454589844, -0.0003185272216796875, -5.7220458984375e-06, 0.0, -0.010389328002929688, 0.0, -0.016361236572265625, 0.0, -0.0413593053817749, 0.0, -0.743952751159668, -1.9073486328125e-06, -0.765864372253418, 0.0, -0.00046539306640625, -0.047720909118652344, -0.020818710327148438, -0.6075683236122131, -0.16079333424568176, -0.00016224382852669805, -3.4332275390625e-05, -0.09734916687011719, -0.0003986358642578125, -0.09835413843393326, -0.3919520974159241, -0.007262229919433594, -1.9073486328125e-06, -0.006049990653991699, -1.1920928244535389e-07, -0.0341644287109375, -9.72747802734375e-05, -0.0009441375732421875, -0.000522613525390625, -0.0039119720458984375, -1.9073486328125e-06, -0.004564523696899414, 0.0, -0.0003160238265991211, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -1.4066696166992188e-05, -3.576278118089249e-07], "choice_history": [96, 173, 358, 105, 152, "Cone", "Of", "Cold", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "option", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", "choose_option", "<EOS>", 347, 86, 320, "Damage", "<UNK>", "<EOS>", 346, 83, 314, "Cone", "<EOS>", 50, 174, "player", "<EOS>", 106, 155, 32, 300, 21, 174, "option", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "_type": "Template2", "hole0": "Cone of Cold", "hole2": "MAGE"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "attr": "choose_option", "_type": "Attribute"}, "args": [{"hole2": [{"_type": "Template73_expr_seq", "hole0": "Cone"}], "_type": "Template78", "hole0": "Damage<UNK>"}, {"id": "player", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "option", "_type": "Name"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"id": "option", "_type": "Name"}, "hole2": "player"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "ConeOfCold", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score": -5.178928432980371, "score_history": [-0.007396697998046875, -3.4332275390625e-05, -2.09808349609375e-05, -4.76837158203125e-05, -8.20159912109375e-05, -0.00018714142788667232, -0.0015835665399208665, -4.4941058149561286e-05, -4.9828242481453344e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002003914210945368, -1.0371208190917969e-05, -2.002716064453125e-05, -4.76837158203125e-05, -0.009553909301757812, -0.0003032684326171875, -4.52994936495088e-06, -0.000110626220703125, -5.0186685257358477e-05, -7.05718994140625e-05, -0.0003783702850341797, -1.33514404296875e-05, -2.026555193879176e-06, 0.0, -0.00141143798828125, -1.71661376953125e-05, -0.05095386505126953, -5.14984130859375e-05, -7.069110870361328e-05, 0.0, -0.0006084442138671875, -0.0001659393310546875, -0.00316619873046875, -0.0003509521484375, -3.826618194580078e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -0.00020301342010498047, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.2288494110107422, -2.6702880859375e-05, -0.0003204345703125, -3.0517578125e-05, -9.5367431640625e-06, -0.000125885009765625, -7.62939453125e-06, -4.291534423828125e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -9.5367431640625e-06, 0.0, -3.266334533691406e-05, 0.0, -0.0033521652221679688, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05, -7.82012939453125e-05, -1.795535683631897, -4.208087921142578e-05, -1.931687355041504, -0.0003662109375, -4.76837158203125e-05, 0.0, -0.2732381820678711, 0.0, -0.0024623870849609375, 0.0, -1.9073486328125e-05, 0.0, -0.00806098710745573, -2.2649765014648438e-06, -0.0005245208740234375, -0.00043487548828125, -0.0012989044189453125, -9.5367431640625e-06, -0.1902313232421875, -1.9073486328125e-06, -0.0009298324584960938, 0.0, -3.4332275390625e-05, 0.0, -0.6147831678390503, 0.0, -8.58306884765625e-05, -0.006062507629394531, -5.53131103515625e-05, -0.04000368341803551, -3.576278118089249e-07, -1.9073486328125e-06, -3.24249267578125e-05, -0.0009709596633911133, -1.728534698486328e-05], "choice_history": [96, 173, 358, 105, 152, "Cone", "Of", "Cold", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "_type": "Template2", "hole0": "Cone of Cold", "hole2": "MAGE"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 1}, {"id": "self", "_type": "Name"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "ConeOfCold", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        self.target.die(self)\n", "score": -5.494660945603329, "score_history": [-0.007396697998046875, -3.4332275390625e-05, -2.09808349609375e-05, -4.76837158203125e-05, -8.20159912109375e-05, -0.00018714142788667232, -0.0015835665399208665, -4.4941058149561286e-05, -4.9828242481453344e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002003914210945368, -1.0371208190917969e-05, -2.002716064453125e-05, -4.76837158203125e-05, -0.009553909301757812, -0.0003032684326171875, -4.52994936495088e-06, -0.000110626220703125, -5.0186685257358477e-05, -7.05718994140625e-05, -0.0003783702850341797, -1.33514404296875e-05, -2.026555193879176e-06, 0.0, -0.00141143798828125, -1.71661376953125e-05, -0.05095386505126953, -5.14984130859375e-05, -7.069110870361328e-05, 0.0, -0.0006084442138671875, -0.0001659393310546875, -0.00316619873046875, -0.0003509521484375, -3.826618194580078e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -0.00020301342010498047, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.2288494110107422, -2.6702880859375e-05, -0.0003204345703125, -3.0517578125e-05, -9.5367431640625e-06, -0.000125885009765625, -7.62939453125e-06, -4.291534423828125e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -9.5367431640625e-06, 0.0, -3.266334533691406e-05, 0.0, -0.0033521652221679688, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05, -7.82012939453125e-05, -1.795535683631897, -4.208087921142578e-05, -1.931687355041504, -0.0003662109375, -4.76837158203125e-05, 0.0, -0.2732381820678711, 0.0, -0.0024623870849609375, 0.0, -1.9073486328125e-05, 0.0, -0.00806098710745573, -2.2649765014648438e-06, -0.0005245208740234375, -0.00043487548828125, -0.0012989044189453125, -9.5367431640625e-06, -0.1902313232421875, -1.9073486328125e-06, -0.0009298324584960938, 0.0, -3.4332275390625e-05, 0.0, -0.8272377848625183, 0.0, -2.09808349609375e-05, -0.1475820541381836, 0.0, -0.002904534339904785, -5.960462772236497e-07], "choice_history": [96, 173, 358, 105, 152, "Cone", "Of", "Cold", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "_type": "Template2", "hole0": "Cone of Cold", "hole2": "MAGE"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "die", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "ConeOfCold", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(4)\n", "score": -5.744907832705394, "score_history": [-0.007396697998046875, -3.4332275390625e-05, -2.09808349609375e-05, -4.76837158203125e-05, -8.20159912109375e-05, -0.00018714142788667232, -0.0015835665399208665, -4.4941058149561286e-05, -4.9828242481453344e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002003914210945368, -1.0371208190917969e-05, -2.002716064453125e-05, -4.76837158203125e-05, -0.009553909301757812, -0.0003032684326171875, -4.52994936495088e-06, -0.000110626220703125, -5.0186685257358477e-05, -7.05718994140625e-05, -0.0003783702850341797, -1.33514404296875e-05, -2.026555193879176e-06, 0.0, -0.00141143798828125, -1.71661376953125e-05, -4.833661079406738, -0.0002994537353515625, -5.7220458984375e-05, 0.0, -0.016693115234375, 0.0, -4.57763671875e-05, 0.0, -1.52587890625e-05, 0.0, -0.31403613090515137, -2.288818359375e-05, -8.96453857421875e-05, -0.0027618408203125, -0.0001010894775390625, -0.5536223649978638, -1.919269561767578e-05], "choice_history": [96, 173, 358, 105, 152, "Cone", "Of", "Cold", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 346, 52, 179, "4", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "_type": "Template2", "hole0": "Cone of Cold", "hole2": "MAGE"}, {"hole1": "set_health_to", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 4, "_type": "Num"}]}], "name": "ConeOfCold", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score": -6.0468560224408066, "score_history": [-0.007396697998046875, -3.4332275390625e-05, -2.09808349609375e-05, -4.76837158203125e-05, -8.20159912109375e-05, -0.00018714142788667232, -0.0015835665399208665, -4.4941058149561286e-05, -4.9828242481453344e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002003914210945368, -1.0371208190917969e-05, -2.002716064453125e-05, -4.76837158203125e-05, -0.009553909301757812, -0.0003032684326171875, -4.52994936495088e-06, -0.000110626220703125, -5.0186685257358477e-05, -7.05718994140625e-05, -0.0003783702850341797, -1.33514404296875e-05, -2.026555193879176e-06, 0.0, -0.00141143798828125, -1.71661376953125e-05, -4.833661079406738, -0.0002994537353515625, -5.7220458984375e-05, 0.0, -0.016693115234375, 0.0, -4.57763671875e-05, 0.0, -1.52587890625e-05, 0.0, -0.31403613090515137, -2.288818359375e-05, -8.96453857421875e-05, -0.0027618408203125, -0.0001010894775390625, -0.8555876016616821, -2.1457672119140625e-06], "choice_history": [96, 173, 358, 105, 152, "Cone", "Of", "Cold", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "_type": "Template2", "hole0": "Cone of Cold", "hole2": "MAGE"}, {"hole1": "set_health_to", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 1, "_type": "Num"}]}], "name": "ConeOfCold", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        option = game.current_player.agent(game.current_player.\n            current_player.game, lambda x: True)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score": -7.045297149757658, "score_history": [-0.007396697998046875, -3.4332275390625e-05, -2.09808349609375e-05, -4.76837158203125e-05, -8.20159912109375e-05, -0.00018714142788667232, -0.0015835665399208665, -4.4941058149561286e-05, -4.9828242481453344e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002003914210945368, -1.0371208190917969e-05, -2.002716064453125e-05, -4.76837158203125e-05, -0.009553909301757812, -0.0003032684326171875, -4.52994936495088e-06, -0.000110626220703125, -5.0186685257358477e-05, -7.05718994140625e-05, -0.0003783702850341797, -1.33514404296875e-05, -2.026555193879176e-06, 0.0, -0.00141143798828125, -1.71661376953125e-05, -0.05095386505126953, -5.14984130859375e-05, -7.069110870361328e-05, 0.0, -0.0006084442138671875, -0.0001659393310546875, -0.00316619873046875, -0.0003509521484375, -3.826618194580078e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -0.00020301342010498047, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.2288494110107422, -2.6702880859375e-05, -0.0003204345703125, -3.0517578125e-05, -9.5367431640625e-06, -0.000125885009765625, -7.62939453125e-06, -4.291534423828125e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -9.5367431640625e-06, 0.0, -3.266334533691406e-05, 0.0, -0.0033521652221679688, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05, -7.82012939453125e-05, -1.719319462776184, -7.748603820800781e-06, -0.07129478454589844, -0.0003185272216796875, -5.7220458984375e-06, 0.0, -0.010389328002929688, 0.0, -0.016361236572265625, 0.0, -0.0413593053817749, 0.0, -1.0472612380981445, -1.9073486328125e-06, -0.3502054214477539, -1.71661376953125e-05, -0.007283210754394531, -0.3807229995727539, -4.57763671875e-05, -0.029653549194335938, -5.7220458984375e-06, -0.7178668975830078, -3.814697265625e-06, -6.29425048828125e-05, -2.288818359375e-05, -0.0032869577407836914, -3.814697265625e-06, -0.14527952671051025, -5.53131103515625e-05, -0.23395287990570068, -0.00031280517578125, -0.0351717472076416, -2.741813204920618e-06, -0.00072479248046875, -0.0001201629638671875, -0.0002231597900390625, -0.0001888275146484375, -0.2398204803466797, -1.6689286894688848e-06, -0.053709983825683594, -3.0517578125e-05, -0.00011026599531760439, -6.079673767089844e-06, -1.1853227615356445, -0.005131721496582031, -0.2217855453491211, 0.0, -0.000896453857421875, 0.0, -4.9591064453125e-05, 0.0, -1.52587890625e-05, 0.0, -0.03875793516635895, 0.0, -2.6702880859375e-05, -0.020448684692382812, -0.0001010894775390625, -0.154512420296669, -3.576278118089249e-07, -1.9073486328125e-06, -1.33514404296875e-05, -0.0010111331939697266, -2.300739288330078e-05], "choice_history": [96, 173, 358, 105, 152, "Cone", "Of", "Cold", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "option", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "agent", "<EOS>", 347, 42, 143, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "current_player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 22, 175, "True", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "_type": "Template2", "hole0": "Cone of Cold", "hole2": "MAGE"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "current_player", "_type": "Attribute"}, "attr": "agent", "_type": "Attribute"}, "args": [{"value": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "current_player", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "attr": "game", "_type": "Attribute"}, {"body": {"value": true, "_type": "NameConstant"}, "args": {"_type": "Template49", "hole0": "x"}, "_type": "Lambda"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "option", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 1}, {"id": "self", "_type": "Name"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "ConeOfCold", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        option = game.current_player.agent(game.current_player.\n            current_player.game, lambda x: True)\n        target = game.random_choice(<UNK>)\n", "score": -8.269011829235495, "score_history": [-0.007396697998046875, -3.4332275390625e-05, -2.09808349609375e-05, -4.76837158203125e-05, -8.20159912109375e-05, -0.00018714142788667232, -0.0015835665399208665, -4.4941058149561286e-05, -4.9828242481453344e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002003914210945368, -1.0371208190917969e-05, -2.002716064453125e-05, -4.76837158203125e-05, -0.009553909301757812, -0.0003032684326171875, -4.52994936495088e-06, -0.000110626220703125, -5.0186685257358477e-05, -7.05718994140625e-05, -0.0003783702850341797, -1.33514404296875e-05, -2.026555193879176e-06, 0.0, -0.00141143798828125, -1.71661376953125e-05, -0.05095386505126953, -5.14984130859375e-05, -7.069110870361328e-05, 0.0, -0.0006084442138671875, -0.0001659393310546875, -0.00316619873046875, -0.0003509521484375, -3.826618194580078e-05, -2.0265558760002023e-06, -1.9073486328125e-06, -0.00020301342010498047, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, -4.887576324108522e-06, -0.2288494110107422, -2.6702880859375e-05, -0.0003204345703125, -3.0517578125e-05, -9.5367431640625e-06, -0.000125885009765625, -7.62939453125e-06, -4.291534423828125e-06, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -9.5367431640625e-06, 0.0, -3.266334533691406e-05, 0.0, -0.0033521652221679688, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05, -7.82012939453125e-05, -1.719319462776184, -7.748603820800781e-06, -0.07129478454589844, -0.0003185272216796875, -5.7220458984375e-06, 0.0, -0.010389328002929688, 0.0, -0.016361236572265625, 0.0, -0.0413593053817749, 0.0, -1.0472612380981445, -1.9073486328125e-06, -0.3502054214477539, -1.71661376953125e-05, -0.007283210754394531, -0.3807229995727539, -4.57763671875e-05, -0.029653549194335938, -5.7220458984375e-06, -0.7178668975830078, -3.814697265625e-06, -6.29425048828125e-05, -2.288818359375e-05, -0.0032869577407836914, -3.814697265625e-06, -0.14527952671051025, -5.53131103515625e-05, -0.23395287990570068, -0.00031280517578125, -0.0351717472076416, -2.741813204920618e-06, -0.00072479248046875, -0.0001201629638671875, -0.0002231597900390625, -0.0001888275146484375, -0.2398204803466797, -1.6689286894688848e-06, -0.053709983825683594, -3.0517578125e-05, -0.00011026599531760439, -6.079673767089844e-06, -1.5865554809570312, 0.0, -5.340576171875e-05, -0.001220703125, 0.0, -0.023845314979553223, -1.5616416931152344e-05, -0.22711753845214844, -4.57763671875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.294647216796875, 0.0, -0.02854442596435547, 0.0, -0.0075893402099609375, 0.0, -4.00543212890625e-05, -0.018642425537109375, 0.0, -0.6634647846221924, -1.3351438610698096e-05], "choice_history": [96, 173, 358, 105, 152, "Cone", "Of", "Cold", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "option", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "agent", "<EOS>", 347, 42, 143, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "current_player", "<EOS>", "game", "<EOS>", 47, 167, 0, 282, "x", "<EOS>", 22, 175, "True", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 4, "_type": "Template2", "hole0": "Cone of Cold", "hole2": "MAGE"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "current_player", "_type": "Attribute"}, "attr": "agent", "_type": "Attribute"}, "args": [{"value": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "current_player", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "attr": "game", "_type": "Attribute"}, {"body": {"value": true, "_type": "NameConstant"}, "args": {"_type": "Template49", "hole0": "x"}, "_type": "Lambda"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "option", "_type": "Name"}]}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "ConeOfCold", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "break\n", "score": -14.895326614379883, "score_history": [-0.007396697998046875, -3.4332275390625e-05, -2.09808349609375e-05, -14.887874603271484], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}}]}
{"gold_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(Taunt()), Buff\n            (ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(\n            Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "beams": [{"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(Give(2)),\n            MinionSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -2.1226427491593114, "score_history": [-0.0004425048828125, -1.1444091796875e-05, -0.00221649301238358, -0.0006538498564623296, -0.002494696993380785, -6.127213418949395e-05, -2.3655593395233154e-07, -4.768371127283899e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.000934600830078125, -0.037105560302734375, -3.242446109652519e-05, -3.24249267578125e-05, -0.00037407875061035156, -0.0002384185791015625, -0.0021982192993164062, -0.004215240478515625, -4.172325134277344e-06, -7.62939453125e-06, -0.00347900390625, -1.013275596051244e-05, -0.0054969992488622665, -0.042672865092754364, -0.013783994130790234, -0.01851177215576172, -0.5331039428710938, -0.009362220764160156, -0.0644393339753151, -0.024233102798461914, -0.023839807137846947, -8.344646857949556e-07, -0.001821401179768145, -0.00013649463653564453, -1.1920928244535389e-07, -0.6070156097412109, -0.0002593994140625, -3.814697265625e-06, -0.13205325603485107, -3.6478038964560255e-05, -0.035617828369140625, -7.2479248046875e-05, -0.55503249168396, -2.551078432588838e-05, -4.017353057861328e-05, -1.9073486328125e-06, -0.0002114772651111707, 0.0, -3.0517578125e-05, -7.62939453125e-05, -5.14984130859375e-05, -3.576272320060525e-06, -1.1920928244535389e-07, -7.748602365609258e-05, 0.0], "choice_history": [97, 283, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 84, 315, "Give", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "RARE", "hole0": "Defender of Argus", "_type": "Template15", "hole3": "GiveAura", "hole1": 4, "hole4": [{"hole1": 2, "_type": "Template74", "hole0": "Give"}]}], "hole0": "DefenderOfArgus", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(Give(2)),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -2.1545821364912427, "score_history": [-0.0004425048828125, -1.1444091796875e-05, -0.00221649301238358, -0.0006538498564623296, -0.002494696993380785, -6.127213418949395e-05, -2.3655593395233154e-07, -4.768371127283899e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.000934600830078125, -0.037105560302734375, -3.242446109652519e-05, -3.24249267578125e-05, -0.00037407875061035156, -0.0002384185791015625, -0.0021982192993164062, -0.004215240478515625, -4.172325134277344e-06, -7.62939453125e-06, -0.00347900390625, -1.013275596051244e-05, -0.0054969992488622665, -0.042672865092754364, -0.013783994130790234, -0.01851177215576172, -0.5331039428710938, -0.009362220764160156, -0.0644393339753151, -0.024233102798461914, -0.023839807137846947, -8.344646857949556e-07, -0.001821401179768145, -0.00013649463653564453, -1.1920928244535389e-07, -1.3265142440795898, -0.0001468658447265625, -7.62939453125e-06, -0.012761116027832031, -7.62939453125e-06, -4.9591064453125e-05, 0.0, -0.011783123016357422, -6.365776062011719e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -4.76837158203125e-05, -0.006348252296447754, -6.687641143798828e-05, -0.0035037994384765625, 0.0, -0.0005512237548828125, -3.0994415283203125e-05, 0.0, -9.775161743164062e-06, 0.0, -0.0003838539123535156, 0.0, -5.53131103515625e-05, -8.58306884765625e-05, -4.1961669921875e-05, -5.960446742392378e-06, -1.1920928244535389e-07, -3.981588815804571e-05, 0.0], "choice_history": [97, 283, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 84, 315, "Give", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "RARE", "hole0": "Defender of Argus", "_type": "Template15", "hole3": "GiveAura", "hole1": 4, "hole4": [{"hole1": 2, "_type": "Template74", "hole0": "Give"}]}], "hole0": "DefenderOfArgus", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(Give(2)),\n            MinionSelector(condition=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -2.79439484434085, "score_history": [-0.0004425048828125, -1.1444091796875e-05, -0.00221649301238358, -0.0006538498564623296, -0.002494696993380785, -6.127213418949395e-05, -2.3655593395233154e-07, -4.768371127283899e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.000934600830078125, -0.037105560302734375, -3.242446109652519e-05, -3.24249267578125e-05, -0.00037407875061035156, -0.0002384185791015625, -0.0021982192993164062, -0.004215240478515625, -4.172325134277344e-06, -7.62939453125e-06, -0.00347900390625, -1.013275596051244e-05, -0.0054969992488622665, -0.042672865092754364, -0.013783994130790234, -0.01851177215576172, -0.5331039428710938, -0.009362220764160156, -0.0644393339753151, -0.024233102798461914, -0.023839807137846947, -8.344646857949556e-07, -0.001821401179768145, -0.00013649463653564453, -1.1920928244535389e-07, -0.6070156097412109, -0.0002593994140625, -3.814697265625e-06, -0.13205325603485107, -3.6478038964560255e-05, -0.035617828369140625, -7.2479248046875e-05, -1.2256858348846436, -0.001053452491760254, -1.1920928244535389e-07, -4.875654121860862e-05, -1.9073486328125e-06, -0.0003439188003540039, 0.0, -2.09808349609375e-05, -5.340576171875e-05, -4.76837158203125e-05, -3.814689989667386e-06, -1.1920928244535389e-07, -4.3153748265467584e-05, 0.0], "choice_history": [97, 283, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 84, 315, "Give", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "condition", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "RARE", "hole0": "Defender of Argus", "_type": "Template15", "hole3": "GiveAura", "hole1": 4, "hole4": [{"hole1": 2, "_type": "Template74", "hole0": "Give"}]}], "hole0": "DefenderOfArgus", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(2), CardSelector(condition=IsMinion()), MinionPlaced\n            ())), PlayerSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -3.6217234332020354, "score_history": [-0.0004425048828125, -1.1444091796875e-05, -0.00221649301238358, -0.0006538498564623296, -0.002494696993380785, -6.127213418949395e-05, -2.3655593395233154e-07, -4.768371127283899e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.000934600830078125, -0.037105560302734375, -3.242446109652519e-05, -3.24249267578125e-05, -0.00037407875061035156, -0.0002384185791015625, -0.0021982192993164062, -0.004215240478515625, -4.172325134277344e-06, -7.62939453125e-06, -0.00347900390625, -1.013275596051244e-05, -0.0054969992488622665, -0.042672865092754364, -0.013783994130790234, -0.01851177215576172, -1.041971206665039, -0.03834724426269531, -0.0033661124762147665, -0.0025157928466796875, -3.933906555175781e-06, -0.008570432662963867, -0.0010278215631842613, -0.0001678466796875, -2.6702880859375e-05, -0.12511730194091797, -2.288818359375e-05, -0.22282850742340088, -1.1920928244535389e-07, -0.0055599212646484375, -0.0002665519714355469, 0.0, -0.021805763244628906, -4.00543212890625e-05, -7.62939453125e-06, -0.008328676223754883, -5.125998541188892e-06, -0.0025644302368164062, -1.33514404296875e-05, -0.4094022810459137, -0.24599972367286682, -2.86102294921875e-05, -0.0018464343156665564, -0.25071918964385986, -0.0002460479736328125, -0.05078141763806343, -0.00012087091454304755, -3.814697265625e-06, -0.09201431274414062, -0.0002689361572265625, -3.814697265625e-06, -0.5759954452514648, -6.4373016357421875e-06, -0.05125713348388672, -3.0517578125e-05, -0.32443469762802124, -4.3869011278729886e-05, -0.00012040138244628906, -3.814697265625e-06, -0.00023102758859749883, 0.0, -1.33514404296875e-05, -0.0003185272216796875, -6.103515625e-05, -3.576272320060525e-06, -1.1920928244535389e-07, -0.00011503692803671584, 0.0], "choice_history": [97, 283, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "2", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Defender of Argus", "_type": "Template15", "hole3": "GiveAura", "hole1": 4, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "IsMinion"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "DefenderOfArgus", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(Give(2)),\n            MinionSelector(players=BothPlayer(), picker=UserPicker(), taunt\n            =True)))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -3.8572242035738995, "score_history": [-0.0004425048828125, -1.1444091796875e-05, -0.00221649301238358, -0.0006538498564623296, -0.002494696993380785, -6.127213418949395e-05, -2.3655593395233154e-07, -4.768371127283899e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.000934600830078125, -0.037105560302734375, -3.242446109652519e-05, -3.24249267578125e-05, -0.00037407875061035156, -0.0002384185791015625, -0.0021982192993164062, -0.004215240478515625, -4.172325134277344e-06, -7.62939453125e-06, -0.00347900390625, -1.013275596051244e-05, -0.0054969992488622665, -0.042672865092754364, -0.013783994130790234, -0.01851177215576172, -0.5331039428710938, -0.009362220764160156, -0.0644393339753151, -0.024233102798461914, -0.023839807137846947, -8.344646857949556e-07, -0.001821401179768145, -0.00013649463653564453, -1.1920928244535389e-07, -2.180267333984375, -0.0015125274658203125, -5.7220458984375e-06, -0.00328826904296875, -0.0001277923583984375, -8.58306884765625e-05, 0.0, -0.06293261051177979, -0.0011010169982910156, -2.6702880859375e-05, -0.0008115768432617188, -0.0001316070556640625, -0.026488184928894043, -0.00017940998077392578, -0.007818222045898438, 0.0, -0.001010894775390625, -5.936622619628906e-05, 0.0, -0.006375312805175781, -5.7220458984375e-05, -0.7130175828933716, -1.9073486328125e-06, -0.0035905838012695312, -0.015611648559570312, -0.022391080856323242, 0.0, -0.00029788987012580037, 0.0, -0.017358897253870964, 0.0, -7.2479248046875e-05, -0.0003604888916015625, -8.58306884765625e-05, -6.794906312279636e-06, -3.576278118089249e-07, -0.00011622897000052035, 0.0], "choice_history": [97, 283, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 84, 315, "Give", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 355, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}, {"value": {"value": true, "_type": "NameConstant"}, "arg": "taunt", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "RARE", "hole0": "Defender of Argus", "_type": "Template15", "hole3": "GiveAura", "hole1": 4, "hole4": [{"hole1": 2, "_type": "Template74", "hole0": "Give"}]}], "hole0": "DefenderOfArgus", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(Give(2)),\n            MinionSelector(players=BothPlayer(), picker=UserPicker(),\n            condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.011576646212646, "score_history": [-0.0004425048828125, -1.1444091796875e-05, -0.00221649301238358, -0.0006538498564623296, -0.002494696993380785, -6.127213418949395e-05, -2.3655593395233154e-07, -4.768371127283899e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.000934600830078125, -0.037105560302734375, -3.242446109652519e-05, -3.24249267578125e-05, -0.00037407875061035156, -0.0002384185791015625, -0.0021982192993164062, -0.004215240478515625, -4.172325134277344e-06, -7.62939453125e-06, -0.00347900390625, -1.013275596051244e-05, -0.0054969992488622665, -0.042672865092754364, -0.013783994130790234, -0.01851177215576172, -0.5331039428710938, -0.009362220764160156, -0.0644393339753151, -0.024233102798461914, -0.023839807137846947, -8.344646857949556e-07, -0.001821401179768145, -0.00013649463653564453, -1.1920928244535389e-07, -2.180267333984375, -0.0015125274658203125, -5.7220458984375e-06, -0.00328826904296875, -0.0001277923583984375, -8.58306884765625e-05, 0.0, -0.06293261051177979, -0.0011010169982910156, -2.6702880859375e-05, -0.0008115768432617188, -0.0001316070556640625, -0.026488184928894043, -0.00017940998077392578, -0.007818222045898438, 0.0, -0.001010894775390625, -5.936622619628906e-05, 0.0, -0.006375312805175781, -5.7220458984375e-05, -0.9204636812210083, -0.00023472309112548828, -0.0027112960815429688, -0.00118255615234375, -0.0008996725082397461, -4.0531158447265625e-06, -0.0002123117446899414, 0.0, -0.0010762214660644531, 0.0, -0.00017547607421875, -0.00017547607421875, -5.14984130859375e-05, -1.0728830375228426e-06, -1.1920928244535389e-07, -7.605551945744082e-05, 0.0], "choice_history": [97, 283, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 84, 315, "Give", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 355, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "RARE", "hole0": "Defender of Argus", "_type": "Template15", "hole3": "GiveAura", "hole1": 4, "hole4": [{"hole1": 2, "_type": "Template74", "hole0": "Give"}]}], "hole0": "DefenderOfArgus", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(Give(2)),\n            MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.026228297593278, "score_history": [-0.0004425048828125, -1.1444091796875e-05, -0.00221649301238358, -0.0006538498564623296, -0.002494696993380785, -6.127213418949395e-05, -2.3655593395233154e-07, -4.768371127283899e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.000934600830078125, -0.037105560302734375, -3.242446109652519e-05, -3.24249267578125e-05, -0.00037407875061035156, -0.0002384185791015625, -0.0021982192993164062, -0.004215240478515625, -4.172325134277344e-06, -7.62939453125e-06, -0.00347900390625, -1.013275596051244e-05, -0.0054969992488622665, -0.042672865092754364, -0.013783994130790234, -0.01851177215576172, -0.5331039428710938, -0.009362220764160156, -0.0644393339753151, -0.024233102798461914, -0.023839807137846947, -8.344646857949556e-07, -0.001821401179768145, -0.00013649463653564453, -1.1920928244535389e-07, -0.6070156097412109, -0.0002593994140625, -3.814697265625e-06, -2.59000563621521, -3.814697265625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.036121249198913574, -0.00010025500523624942, -3.814697265625e-06, -0.00010656839731382206, -1.9073486328125e-06, -0.00029122826526872814, 0.0, -2.09808349609375e-05, -0.0001049041748046875, -3.4332275390625e-05, -6.794906312279636e-06, -1.1920928244535389e-07, -5.7816494518192485e-05, 0.0], "choice_history": [97, 283, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 84, 315, "Give", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "RARE", "hole0": "Defender of Argus", "_type": "Template15", "hole3": "GiveAura", "hole1": 4, "hole4": [{"hole1": 2, "_type": "Template74", "hole0": "Give"}]}], "hole0": "DefenderOfArgus", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(2), CardSelector(condition=IsMinion()), MinionPlaced\n            ())), PlayerSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.427951414378597, "score_history": [-0.0004425048828125, -1.1444091796875e-05, -0.00221649301238358, -0.0006538498564623296, -0.002494696993380785, -6.127213418949395e-05, -2.3655593395233154e-07, -4.768371127283899e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.000934600830078125, -0.037105560302734375, -3.242446109652519e-05, -3.24249267578125e-05, -0.00037407875061035156, -0.0002384185791015625, -0.0021982192993164062, -0.004215240478515625, -4.172325134277344e-06, -7.62939453125e-06, -0.00347900390625, -1.013275596051244e-05, -0.0054969992488622665, -0.042672865092754364, -0.013783994130790234, -0.01851177215576172, -1.041971206665039, -0.03834724426269531, -0.0033661124762147665, -0.0025157928466796875, -3.933906555175781e-06, -0.008570432662963867, -0.0010278215631842613, -0.0001678466796875, -2.6702880859375e-05, -0.12511730194091797, -2.288818359375e-05, -0.22282850742340088, -1.1920928244535389e-07, -0.0055599212646484375, -0.0002665519714355469, 0.0, -0.021805763244628906, -4.00543212890625e-05, -7.62939453125e-06, -0.008328676223754883, -5.125998541188892e-06, -0.0025644302368164062, -1.33514404296875e-05, -0.4094022810459137, -0.24599972367286682, -2.86102294921875e-05, -0.0018464343156665564, -0.25071918964385986, -0.0002460479736328125, -0.05078141763806343, -0.00012087091454304755, -3.814697265625e-06, -0.09201431274414062, -0.0002689361572265625, -3.814697265625e-06, -1.3150148391723633, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -0.4430183172225952, -8.189678192138672e-05, -3.254413604736328e-05, -5.543143561226316e-05, -3.814697265625e-06, -0.0001873969886219129, 0.0, -1.1444091796875e-05, -0.0003070831298828125, -3.814697265625e-05, -6.198863957251888e-06, -1.1920928244535389e-07, -6.568430399056524e-05, 0.0], "choice_history": [97, 283, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "2", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Defender of Argus", "_type": "Template15", "hole3": "GiveAura", "hole1": 4, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "IsMinion"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "DefenderOfArgus", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(Give(2)),\n            MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.819706076014043, "score_history": [-0.0004425048828125, -1.1444091796875e-05, -0.00221649301238358, -0.0006538498564623296, -0.002494696993380785, -6.127213418949395e-05, -2.3655593395233154e-07, -4.768371127283899e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.000934600830078125, -0.037105560302734375, -3.242446109652519e-05, -3.24249267578125e-05, -0.00037407875061035156, -0.0002384185791015625, -0.0021982192993164062, -0.004215240478515625, -4.172325134277344e-06, -7.62939453125e-06, -0.00347900390625, -1.013275596051244e-05, -0.0054969992488622665, -0.042672865092754364, -0.013783994130790234, -0.01851177215576172, -0.5331039428710938, -0.009362220764160156, -0.0644393339753151, -0.024233102798461914, -0.023839807137846947, -8.344646857949556e-07, -0.001821401179768145, -0.00013649463653564453, -1.1920928244535389e-07, -0.6070156097412109, -0.0002593994140625, -3.814697265625e-06, -3.415586233139038, -9.655952453613281e-06, -0.0002155303955078125, -5.7220458984375e-06, -0.004123687744140625, -2.110004425048828e-05, 0.0, -2.562999725341797e-05, 0.0, -0.00022542476654052734, 0.0, -1.71661376953125e-05, -8.58306884765625e-05, -3.4332275390625e-05, -5.006777428206988e-06, -1.1920928244535389e-07, -3.898142676916905e-05, 0.0], "choice_history": [97, 283, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 84, 315, "Give", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "RARE", "hole0": "Defender of Argus", "_type": "Template15", "hole3": "GiveAura", "hole1": 4, "hole4": [{"hole1": 2, "_type": "Template74", "hole0": "Give"}]}], "hole0": "DefenderOfArgus", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura('health',\n            'attack', True), MinionSelector(players=BothPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.842048421859502, "score_history": [-0.0004425048828125, -1.1444091796875e-05, -0.00221649301238358, -0.0006538498564623296, -0.002494696993380785, -6.127213418949395e-05, -2.3655593395233154e-07, -4.768371127283899e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.000934600830078125, -0.037105560302734375, -3.242446109652519e-05, -3.24249267578125e-05, -0.00037407875061035156, -0.0002384185791015625, -0.0021982192993164062, -0.004215240478515625, -4.172325134277344e-06, -7.62939453125e-06, -0.00347900390625, -1.013275596051244e-05, -0.0054969992488622665, -0.042672865092754364, -0.013783994130790234, -4.283140182495117, -0.15682601928710938, -2.47955322265625e-05, -0.17751608788967133, -5.7220458984375e-06, -0.0040302276611328125, -0.0001201629638671875, -0.03353177383542061, 0.0, -0.04336833953857422, -0.00023651123046875, -0.00013315660180523992, -1.9073486328125e-06, -0.0019435323774814606, -0.0003743171691894531, -1.1920928244535389e-07, -0.005518913269042969, -0.00012969970703125, -7.62939453125e-06, -0.001735687255859375, -1.9073486328125e-06, -0.0001354217529296875, 0.0, -0.003691434860229492, -0.00014901161193847656, -2.0265579223632812e-06, -6.103515625e-05, -2.86102294921875e-05, -0.006997227668762207, -9.655952453613281e-06, -0.0043792724609375, 0.0, -0.0004177093505859375, -4.410743713378906e-05, 0.0, -1.1563301086425781e-05, 0.0, -0.00047910213470458984, 0.0, -2.288818359375e-05, -0.000293731689453125, -4.57763671875e-05, -5.602820692729438e-06, -1.1920928244535389e-07, -4.363058542367071e-05, 0.0], "choice_history": [97, 283, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 348, 53, 183, "health", "<EOS>", 53, 183, "attack", "<EOS>", 51, 175, "False", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "RARE", "hole0": "Defender of Argus", "_type": "Template15", "hole3": "GiveAura", "hole1": 4, "hole4": [{"s": "health", "_type": "Str"}, {"s": "attack", "_type": "Str"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "DefenderOfArgus", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(2), CardSelector(condition=IsMinion()), MinionPlaced\n            ())), PlayerSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.894116957891534, "score_history": [-0.0004425048828125, -1.1444091796875e-05, -0.00221649301238358, -0.0006538498564623296, -0.002494696993380785, -6.127213418949395e-05, -2.3655593395233154e-07, -4.768371127283899e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.000934600830078125, -0.037105560302734375, -3.242446109652519e-05, -3.24249267578125e-05, -0.00037407875061035156, -0.0002384185791015625, -0.0021982192993164062, -0.004215240478515625, -4.172325134277344e-06, -7.62939453125e-06, -0.00347900390625, -1.013275596051244e-05, -0.0054969992488622665, -0.042672865092754364, -0.013783994130790234, -0.01851177215576172, -1.041971206665039, -0.03834724426269531, -0.0033661124762147665, -0.0025157928466796875, -3.933906555175781e-06, -0.008570432662963867, -0.0010278215631842613, -0.0001678466796875, -2.6702880859375e-05, -0.12511730194091797, -2.288818359375e-05, -0.22282850742340088, -1.1920928244535389e-07, -0.0055599212646484375, -0.0002665519714355469, 0.0, -0.021805763244628906, -4.00543212890625e-05, -7.62939453125e-06, -0.008328676223754883, -5.125998541188892e-06, -0.0025644302368164062, -1.33514404296875e-05, -0.4094022810459137, -0.24599972367286682, -2.86102294921875e-05, -0.0018464343156665564, -0.25071918964385986, -0.0002460479736328125, -0.05078141763806343, -0.00012087091454304755, -3.814697265625e-06, -0.09201431274414062, -0.0002689361572265625, -3.814697265625e-06, -2.2107009887695312, -3.933906555175781e-06, -0.000247955322265625, -1.9073486328125e-06, -0.013513684272766113, -2.1457672119140625e-05, -1.1920928244535389e-07, -0.00010716915130615234, 0.0, -0.00015473365783691406, 0.0, -1.33514404296875e-05, -0.0001773834228515625, -3.814697265625e-05, -4.6491513785440475e-06, -1.1920928244535389e-07, -4.291533332434483e-05, 0.0], "choice_history": [97, 283, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "2", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Defender of Argus", "_type": "Template15", "hole3": "GiveAura", "hole1": 4, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "IsMinion"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "DefenderOfArgus", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(2), CardSelector(condition=IsMinion()), MinionPlaced\n            ())), PlayerSelector(condition=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.964646061056911, "score_history": [-0.0004425048828125, -1.1444091796875e-05, -0.00221649301238358, -0.0006538498564623296, -0.002494696993380785, -6.127213418949395e-05, -2.3655593395233154e-07, -4.768371127283899e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.000934600830078125, -0.037105560302734375, -3.242446109652519e-05, -3.24249267578125e-05, -0.00037407875061035156, -0.0002384185791015625, -0.0021982192993164062, -0.004215240478515625, -4.172325134277344e-06, -7.62939453125e-06, -0.00347900390625, -1.013275596051244e-05, -0.0054969992488622665, -0.042672865092754364, -0.013783994130790234, -0.01851177215576172, -1.041971206665039, -0.03834724426269531, -0.0033661124762147665, -0.0025157928466796875, -3.933906555175781e-06, -0.008570432662963867, -0.0010278215631842613, -0.0001678466796875, -2.6702880859375e-05, -0.12511730194091797, -2.288818359375e-05, -0.22282850742340088, -1.1920928244535389e-07, -0.0055599212646484375, -0.0002665519714355469, 0.0, -0.021805763244628906, -4.00543212890625e-05, -7.62939453125e-06, -0.008328676223754883, -5.125998541188892e-06, -0.0025644302368164062, -1.33514404296875e-05, -0.4094022810459137, -0.24599972367286682, -2.86102294921875e-05, -0.0018464343156665564, -0.25071918964385986, -0.0002460479736328125, -0.05078141763806343, -0.00012087091454304755, -3.814697265625e-06, -0.09201431274414062, -0.0002689361572265625, -3.814697265625e-06, -0.5759954452514648, -6.4373016357421875e-06, -0.05125713348388672, -3.0517578125e-05, -1.6668189764022827, -0.0008625984191894531, -3.576278118089249e-07, -0.00013220302935224026, -3.814697265625e-06, -0.00023496150970458984, 0.0, -1.52587890625e-05, -9.72747802734375e-05, -4.9591064453125e-05, -4.887569048150908e-06, -1.1920928244535389e-07, -4.8041292757261544e-05, 0.0], "choice_history": [97, 283, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "2", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "condition", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Defender of Argus", "_type": "Template15", "hole3": "GiveAura", "hole1": 4, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "IsMinion"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "DefenderOfArgus", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(2), CardSelector(condition=Adjacent()), MinionPlaced\n            ())), PlayerSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.982027737189995, "score_history": [-0.0004425048828125, -1.1444091796875e-05, -0.00221649301238358, -0.0006538498564623296, -0.002494696993380785, -6.127213418949395e-05, -2.3655593395233154e-07, -4.768371127283899e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.000934600830078125, -0.037105560302734375, -3.242446109652519e-05, -3.24249267578125e-05, -0.00037407875061035156, -0.0002384185791015625, -0.0021982192993164062, -0.004215240478515625, -4.172325134277344e-06, -7.62939453125e-06, -0.00347900390625, -1.013275596051244e-05, -0.0054969992488622665, -0.042672865092754364, -0.013783994130790234, -0.01851177215576172, -1.041971206665039, -0.03834724426269531, -0.0033661124762147665, -0.0025157928466796875, -3.933906555175781e-06, -0.008570432662963867, -0.0010278215631842613, -0.0001678466796875, -2.6702880859375e-05, -0.12511730194091797, -2.288818359375e-05, -0.22282850742340088, -1.1920928244535389e-07, -0.0055599212646484375, -0.0002665519714355469, 0.0, -0.021805763244628906, -4.00543212890625e-05, -7.62939453125e-06, -0.008328676223754883, -5.125998541188892e-06, -0.0025644302368164062, -1.33514404296875e-05, -1.5506500005722046, -0.00017762141942512244, -0.043152809143066406, -0.6540138721466064, -0.000141143798828125, -0.07918530702590942, -0.00013028726971242577, -1.9073486328125e-06, -0.08965301513671875, -0.0002918243408203125, -3.814697265625e-06, -0.5866937637329102, -6.556510470545618e-06, -0.048992156982421875, -3.0517578125e-05, -0.30971401929855347, -4.398822056828067e-05, -0.00015091896057128906, -3.814697265625e-06, -0.00040519237518310547, 0.0, -1.1444091796875e-05, -0.0006313323974609375, -8.0108642578125e-05, -1.9073468138230965e-06, -1.1920928244535389e-07, -0.00020730492542497814, 0.0], "choice_history": [97, 283, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "2", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Defender of Argus", "_type": "Template15", "hole3": "GiveAura", "hole1": 4, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "DefenderOfArgus", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(0), CardSelector(condition=IsMinion()), MinionPlaced\n            ())), PlayerSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -5.104152590942213, "score_history": [-0.0004425048828125, -1.1444091796875e-05, -0.00221649301238358, -0.0006538498564623296, -0.002494696993380785, -6.127213418949395e-05, -2.3655593395233154e-07, -4.768371127283899e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.000934600830078125, -0.037105560302734375, -3.242446109652519e-05, -3.24249267578125e-05, -0.00037407875061035156, -0.0002384185791015625, -0.0021982192993164062, -0.004215240478515625, -4.172325134277344e-06, -7.62939453125e-06, -0.00347900390625, -1.013275596051244e-05, -0.0054969992488622665, -0.042672865092754364, -0.013783994130790234, -0.01851177215576172, -1.041971206665039, -0.03834724426269531, -0.0033661124762147665, -0.0025157928466796875, -3.933906555175781e-06, -0.008570432662963867, -0.0010278215631842613, -0.0001678466796875, -2.6702880859375e-05, -0.12511730194091797, -2.288818359375e-05, -1.633162260055542, -2.1457672119140625e-05, -0.008905529975891113, -0.0002834796905517578, 0.0, -0.014117240905761719, -6.103515625e-05, -5.7220458984375e-06, -0.013619422912597656, -4.649161837733118e-06, -0.0059909820556640625, -5.7220458984375e-06, -0.439193993806839, -0.29976582527160645, -2.6702880859375e-05, -0.0018774282652884722, -0.23954975605010986, -0.000232696533203125, -0.05691656470298767, -0.00011872540198964998, -3.814697265625e-06, -0.09921932220458984, -0.000270843505859375, -3.814697265625e-06, -0.5590353012084961, -6.4373016357421875e-06, -0.050803184509277344, -3.0517578125e-05, -0.32374876737594604, -4.1961662645917386e-05, -0.00011467933654785156, -3.814697265625e-06, -0.00023293493723031133, 0.0, -1.33514404296875e-05, -0.000347137451171875, -6.29425048828125e-05, -3.3378546504536644e-06, -1.1920928244535389e-07, -0.00011825558613054454, 0.0], "choice_history": [97, 283, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "Taunt", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Defender of Argus", "_type": "Template15", "hole3": "GiveAura", "hole1": 4, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "IsMinion"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 0, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "DefenderOfArgus", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(2), CardSelector(condition=IsMinion()), MinionPlaced\n            ())), PlayerSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -5.204052405400901, "score_history": [-0.0004425048828125, -1.1444091796875e-05, -0.00221649301238358, -0.0006538498564623296, -0.002494696993380785, -6.127213418949395e-05, -2.3655593395233154e-07, -4.768371127283899e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.000934600830078125, -0.037105560302734375, -3.242446109652519e-05, -3.24249267578125e-05, -0.00037407875061035156, -0.0002384185791015625, -0.0021982192993164062, -0.004215240478515625, -4.172325134277344e-06, -7.62939453125e-06, -0.00347900390625, -1.013275596051244e-05, -0.0054969992488622665, -0.042672865092754364, -0.013783994130790234, -0.01851177215576172, -1.041971206665039, -0.03834724426269531, -0.0033661124762147665, -0.0025157928466796875, -3.933906555175781e-06, -0.008570432662963867, -0.0010278215631842613, -0.0001678466796875, -2.6702880859375e-05, -0.12511730194091797, -2.288818359375e-05, -0.22282850742340088, -1.1920928244535389e-07, -0.0055599212646484375, -0.0002665519714355469, 0.0, -0.021805763244628906, -4.00543212890625e-05, -7.62939453125e-06, -0.008328676223754883, -5.125998541188892e-06, -0.0025644302368164062, -1.33514404296875e-05, -0.4094022810459137, -0.24599972367286682, -2.86102294921875e-05, -0.0018464343156665564, -0.25071918964385986, -0.0002460479736328125, -0.05078141763806343, -0.00012087091454304755, -3.814697265625e-06, -0.09201431274414062, -0.0002689361572265625, -3.814697265625e-06, -1.3150148391723633, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -1.2181113958358765, -0.0008432865142822266, -1.9073486328125e-06, -0.00010466271487530321, -5.7220458984375e-06, -0.00018715858459472656, 0.0, -1.1444091796875e-05, -0.000537872314453125, -3.4332275390625e-05, -5.960446742392378e-06, -1.1920928244535389e-07, -6.520747410831973e-05, 0.0], "choice_history": [97, 283, "Defender", "Of", "Argus", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "2", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "arg": "players", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Defender of Argus", "_type": "Template15", "hole3": "GiveAura", "hole1": 4, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "IsMinion"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "DefenderOfArgus", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, buffs=[Buff(Windfury())])\n", "beams": [{"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8, windfury=True, windfury=True)\n", "score": -2.9607863361879367, "score_history": [-2.09808349609375e-05, -0.024044036865234375, -0.0012996142031624913, -0.0002206563949584961, -1.1324817933200393e-05, -0.00010108859714819118, -3.504691630951129e-05, -1.1444091796875e-05, -0.0056858062744140625, -0.004245758056640625, -4.76837158203125e-05, 0.0, -4.577630170388147e-05, -2.86102294921875e-05, -0.000270843505859375, -7.62939453125e-06, -0.0001239776611328125, -1.1444091796875e-05, -4.76837158203125e-05, -0.0001532977621536702, -2.86102294921875e-05, -0.000171661376953125, -3.814697265625e-06, -0.003754734992980957, -1.52587890625e-05, -7.82012939453125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000194549560546875, -1.9073486328125e-06, -0.015323638916015625, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -2.288818359375e-05, -0.3556833267211914, -5.7220458984375e-06, -0.0009479522705078125, -0.01599884033203125, -2.86102294921875e-05, -0.007780790328979492, -3.814697265625e-05, -0.001583099365234375, -0.000396728515625, -0.0036262073554098606, 0.0, -0.38417649269104004, 0.0, -6.508827209472656e-05, 0.0, -3.814697265625e-06, -0.0015850067138671875, -0.030849456787109375, -0.04622962325811386, -3.218649908376392e-06, -2.9802276912960224e-06, -3.576278118089249e-07, -0.039309386163949966, -4.0531158447265625e-06, -0.002651214599609375, -0.0004673004150390625, -0.001865386962890625, -0.014219045639038086, -7.62939453125e-06, -0.0008697509765625, -4.00543212890625e-05, -0.0028634071350097656, 0.0, -0.8258562088012695, -6.866455078125e-05, -1.1223869323730469, -1.52587890625e-05, -0.04332160949707031, -0.00014495849609375, -0.0015180110931396484, 0.0], "choice_history": [97, 283, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Doomhammer", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "windfury", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}, {"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}], "_type": "Template68", "hole0": "Weapon", "hole2": 8}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "Doomhammer", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8, windfury=True, effects=[Effect(Attack(),\n            ActionTag(ChangeTarget(CharacterSelector(NotCurrentTarget(),\n            EnemyPlayer(), RandomPicker())), SelfSelector(), And(OneIn(2),\n            OpponentMinionCountIsGreaterThan(0))))])\n", "score": -3.573076363913458, "score_history": [-2.09808349609375e-05, -0.024044036865234375, -0.0012996142031624913, -0.0002206563949584961, -1.1324817933200393e-05, -0.00010108859714819118, -3.504691630951129e-05, -1.1444091796875e-05, -0.0056858062744140625, -0.004245758056640625, -4.76837158203125e-05, 0.0, -4.577630170388147e-05, -2.86102294921875e-05, -0.000270843505859375, -7.62939453125e-06, -0.0001239776611328125, -1.1444091796875e-05, -4.76837158203125e-05, -0.0001532977621536702, -2.86102294921875e-05, -0.000171661376953125, -3.814697265625e-06, -0.003754734992980957, -1.52587890625e-05, -7.82012939453125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000194549560546875, -1.9073486328125e-06, -0.015323638916015625, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -2.288818359375e-05, -0.3556833267211914, -5.7220458984375e-06, -0.0009479522705078125, -0.01599884033203125, -2.86102294921875e-05, -0.007780790328979492, -3.814697265625e-05, -0.001583099365234375, -0.000396728515625, -0.0036262073554098606, 0.0, -0.38417649269104004, 0.0, -6.508827209472656e-05, 0.0, -3.814697265625e-06, -0.0015850067138671875, -0.030849456787109375, -0.04622962325811386, -3.218649908376392e-06, -2.9802276912960224e-06, -3.576278118089249e-07, -0.039309386163949966, -4.0531158447265625e-06, -0.002651214599609375, -0.0004673004150390625, -0.001865386962890625, -0.014219045639038086, -7.62939453125e-06, -0.0008697509765625, -4.00543212890625e-05, -0.0028634071350097656, 0.0, -0.8585081100463867, -0.008715629577636719, -0.16724646091461182, 0.0, -0.0002307891845703125, -0.014598846435546875, -0.00717926025390625, -0.039841532707214355, -0.0008692741394042969, -0.0007085800170898438, -0.06876468658447266, -0.0027227401733398438, -7.43865966796875e-05, -4.38690185546875e-05, -0.019021034240722656, -0.19574546813964844, -0.03860759735107422, -0.002991556189954281, 0.0, -0.10524222254753113, -0.009106278419494629, -0.029748201370239258, -1.1444091796875e-05, -0.00578188756480813, -0.17420196533203125, 0.0, -0.023367486894130707, -0.0008765459060668945, -9.536738616588991e-07, -0.35218286514282227, -1.9073486328125e-05, 0.0, -0.08999359607696533, -1.1563301086425781e-05, -0.0003337860107421875, -0.0010538101196289062, -9.72747802734375e-05, -0.3019521236419678, -0.0035305023193359375, -5.7220458984375e-06, -0.0006820380222052336, 0.0, -0.016813278198242188, -6.866455078125e-05, -0.034514158964157104, -0.000388979387935251, -0.006590008735656738, -0.001094818115234375, -0.0174485445022583, -0.001682281494140625, -5.924701690673828e-05, -0.00287062069401145, -1.9073486328125e-06], "choice_history": [97, 283, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Doomhammer", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "windfury", "<EOS>", 22, 175, "True", "<EOS>", 93, 274, "Attack", "<EOS>", 346, 61, 246, "Action", "Tag", "<EOS>", "Change", "Target", "<EOS>", 346, 61, 239, "Character", "Selector", "<EOS>", "Not", "Current", "Target", "<EOS>", "Enemy", "Player", "<EOS>", "Random", "Picker", "<EOS>", "Self", "Selector", "<EOS>", "And", "<EOS>", 347, 84, 315, "One", "In", "<EOS>", "2", "<EOS>", 84, 315, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", "0", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}, {"hole2": [{"hole7": [{"hole1": 2, "_type": "Template74", "hole0": "OneIn"}, {"hole1": 0, "_type": "Template74", "hole0": "OpponentMinionCountIsGreaterThan"}], "hole6": "And", "hole2": [{"hole1": "NotCurrentTarget", "hole3": "EnemyPlayer", "_type": "Template39", "hole0": "CharacterSelector", "hole6": "RandomPicker"}], "hole0": "ActionTag", "_type": "Template39", "hole3": "SelfSelector", "hole1": "ChangeTarget"}], "_type": "Template45", "hole0": "Attack"}], "_type": "Template68", "hole0": "Weapon", "hole2": 8}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "Doomhammer", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, windfury=True, windfury=True)\n", "score": -3.6609678576537306, "score_history": [-2.09808349609375e-05, -0.024044036865234375, -0.0012996142031624913, -0.0002206563949584961, -1.1324817933200393e-05, -0.00010108859714819118, -3.504691630951129e-05, -1.1444091796875e-05, -0.0056858062744140625, -0.004245758056640625, -4.76837158203125e-05, 0.0, -4.577630170388147e-05, -2.86102294921875e-05, -0.000270843505859375, -7.62939453125e-06, -0.0001239776611328125, -1.1444091796875e-05, -4.76837158203125e-05, -0.0001532977621536702, -2.86102294921875e-05, -0.000171661376953125, -3.814697265625e-06, -0.003754734992980957, -1.52587890625e-05, -7.82012939453125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000194549560546875, -1.9073486328125e-06, -0.015323638916015625, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -2.288818359375e-05, -0.3556833267211914, -5.7220458984375e-06, -0.0009479522705078125, -0.01599884033203125, -2.86102294921875e-05, -0.007780790328979492, -3.814697265625e-05, -0.001583099365234375, -0.000396728515625, -0.0036262073554098606, 0.0, -1.152461290359497, -2.288818359375e-05, -4.839897155761719e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000133514404296875, -0.021117210388183594, -0.0582953616976738, -2.682209014892578e-05, -5.483612312673358e-06, -2.3841855067985307e-07, -0.01665956899523735, -2.0265579223632812e-06, -0.00276947021484375, -0.000415802001953125, -0.001129150390625, -0.0168607234954834, -7.62939453125e-06, -0.0007762908935546875, -4.00543212890625e-05, -0.0029931068420410156, 0.0, -0.7441482543945312, -6.29425048828125e-05, -1.156643033027649, -1.52587890625e-05, -0.042395591735839844, -0.00014495849609375, -0.0015218257904052734, 0.0], "choice_history": [97, 283, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Doomhammer", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "2", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "windfury", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}, {"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}], "_type": "Template68", "hole0": "Weapon", "hole2": 8}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "Doomhammer", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8, windfury=True, auras=[Aura(Weapon<UNK>(),\n            HeroSelector())])\n", "score": -3.6683939631029148, "score_history": [-2.09808349609375e-05, -0.024044036865234375, -0.0012996142031624913, -0.0002206563949584961, -1.1324817933200393e-05, -0.00010108859714819118, -3.504691630951129e-05, -1.1444091796875e-05, -0.0056858062744140625, -0.004245758056640625, -4.76837158203125e-05, 0.0, -4.577630170388147e-05, -2.86102294921875e-05, -0.000270843505859375, -7.62939453125e-06, -0.0001239776611328125, -1.1444091796875e-05, -4.76837158203125e-05, -0.0001532977621536702, -2.86102294921875e-05, -0.000171661376953125, -3.814697265625e-06, -0.003754734992980957, -1.52587890625e-05, -7.82012939453125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000194549560546875, -1.9073486328125e-06, -0.015323638916015625, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -2.288818359375e-05, -0.3556833267211914, -5.7220458984375e-06, -0.0009479522705078125, -0.01599884033203125, -2.86102294921875e-05, -0.007780790328979492, -3.814697265625e-05, -0.001583099365234375, -0.000396728515625, -0.0036262073554098606, 0.0, -0.38417649269104004, 0.0, -6.508827209472656e-05, 0.0, -3.814697265625e-06, -0.0015850067138671875, -0.030849456787109375, -0.04622962325811386, -3.218649908376392e-06, -2.9802276912960224e-06, -3.576278118089249e-07, -0.039309386163949966, -4.0531158447265625e-06, -0.002651214599609375, -0.0004673004150390625, -0.001865386962890625, -0.014219045639038086, -7.62939453125e-06, -0.0008697509765625, -4.00543212890625e-05, -0.0028634071350097656, 0.0, -0.8258562088012695, -6.866455078125e-05, -1.1334409713745117, 0.0, -0.008700370788574219, -0.008745193481445312, -0.002032756805419922, -7.62939453125e-06, -0.00014495849609375, -0.08325862884521484, -0.0002803802490234375, -0.4216127395629883, -0.01212918758392334, -2.3365020751953125e-05, -0.0019321441650390625, 0.0, -0.20268023014068604, -5.841255187988281e-06, 0.0], "choice_history": [97, 283, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Doomhammer", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "windfury", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 88, 325, "Weapon", "<UNK>", "<EOS>", 88, 325, "Hero", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}, {"value": {"hole1": [{"_type": "Template79", "hole0": "Weapon<UNK>"}, {"_type": "Template79", "hole0": "HeroSelector"}], "_type": "Template78", "hole0": "Aura"}, "arg": "auras", "_type": "keyword"}], "_type": "Template68", "hole0": "Weapon", "hole2": 8}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "Doomhammer", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8, windfury=True, windfury=True)\n", "score": -3.88381974104999, "score_history": [-2.09808349609375e-05, -0.024044036865234375, -0.0012996142031624913, -0.0002206563949584961, -1.1324817933200393e-05, -0.00010108859714819118, -3.504691630951129e-05, -1.1444091796875e-05, -0.0056858062744140625, -0.004245758056640625, -4.76837158203125e-05, 0.0, -4.577630170388147e-05, -2.86102294921875e-05, -0.000270843505859375, -7.62939453125e-06, -0.0001239776611328125, -1.1444091796875e-05, -4.76837158203125e-05, -0.0001532977621536702, -2.86102294921875e-05, -0.000171661376953125, -3.814697265625e-06, -0.003754734992980957, -1.52587890625e-05, -7.82012939453125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000194549560546875, -1.9073486328125e-06, -0.015323638916015625, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -2.288818359375e-05, -1.2266016006469727, -3.814697265625e-06, -0.0004425048828125, -0.015345573425292969, -1.52587890625e-05, -0.0074079036712646484, -4.9591064453125e-05, -0.0014848709106445312, -0.0007381439208984375, -0.002576874801889062, 0.0, -0.42687249183654785, 0.0, -8.225440979003906e-05, 0.0, -3.814697265625e-06, -0.0016574859619140625, -0.03271675109863281, -0.0540456548333168, -3.576277322281385e-06, -2.9802276912960224e-06, -3.576278118089249e-07, -0.03959527611732483, -4.0531158447265625e-06, -0.0026378631591796875, -0.0004673004150390625, -0.0018310546875, -0.01424098014831543, -7.62939453125e-06, -0.00086212158203125, -4.00543212890625e-05, -0.002841472625732422, 0.0, -0.8278865814208984, -6.866455078125e-05, -1.1221123933792114, -1.52587890625e-05, -0.043328285217285156, -0.00014495849609375, -0.001512289047241211, 0.0], "choice_history": [97, 283, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Doomhammer", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "windfury", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}, {"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}], "_type": "Template68", "hole0": "Weapon", "hole2": 8}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "Doomhammer", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8, windfury=True, charge=True)\n", "score": -4.1806554729982395, "score_history": [-2.09808349609375e-05, -0.024044036865234375, -0.0012996142031624913, -0.0002206563949584961, -1.1324817933200393e-05, -0.00010108859714819118, -3.504691630951129e-05, -1.1444091796875e-05, -0.0056858062744140625, -0.004245758056640625, -4.76837158203125e-05, 0.0, -4.577630170388147e-05, -2.86102294921875e-05, -0.000270843505859375, -7.62939453125e-06, -0.0001239776611328125, -1.1444091796875e-05, -4.76837158203125e-05, -0.0001532977621536702, -2.86102294921875e-05, -0.000171661376953125, -3.814697265625e-06, -0.003754734992980957, -1.52587890625e-05, -7.82012939453125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000194549560546875, -1.9073486328125e-06, -0.015323638916015625, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -2.288818359375e-05, -0.3556833267211914, -5.7220458984375e-06, -0.0009479522705078125, -0.01599884033203125, -2.86102294921875e-05, -0.007780790328979492, -3.814697265625e-05, -0.001583099365234375, -0.000396728515625, -0.0036262073554098606, 0.0, -0.38417649269104004, 0.0, -6.508827209472656e-05, 0.0, -3.814697265625e-06, -0.0015850067138671875, -0.030849456787109375, -0.04622962325811386, -3.218649908376392e-06, -2.9802276912960224e-06, -3.576278118089249e-07, -0.039309386163949966, -4.0531158447265625e-06, -0.002651214599609375, -0.0004673004150390625, -0.001865386962890625, -0.014219045639038086, -7.62939453125e-06, -0.0008697509765625, -4.00543212890625e-05, -0.0028634071350097656, 0.0, -0.8258562088012695, -6.866455078125e-05, -2.2647571563720703, -1.9073486328125e-06, -0.12038993835449219, -0.000125885009765625, -0.001981019973754883, 0.0], "choice_history": [97, 283, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Doomhammer", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "windfury", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}, {"value": {"value": true, "_type": "NameConstant"}, "arg": "charge", "_type": "keyword"}], "_type": "Template68", "hole0": "Weapon", "hole2": 8}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "Doomhammer", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8, windfury=True, divine_shield=True)\n", "score": -4.242084377531626, "score_history": [-2.09808349609375e-05, -0.024044036865234375, -0.0012996142031624913, -0.0002206563949584961, -1.1324817933200393e-05, -0.00010108859714819118, -3.504691630951129e-05, -1.1444091796875e-05, -0.0056858062744140625, -0.004245758056640625, -4.76837158203125e-05, 0.0, -4.577630170388147e-05, -2.86102294921875e-05, -0.000270843505859375, -7.62939453125e-06, -0.0001239776611328125, -1.1444091796875e-05, -4.76837158203125e-05, -0.0001532977621536702, -2.86102294921875e-05, -0.000171661376953125, -3.814697265625e-06, -0.003754734992980957, -1.52587890625e-05, -7.82012939453125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000194549560546875, -1.9073486328125e-06, -0.015323638916015625, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -2.288818359375e-05, -0.3556833267211914, -5.7220458984375e-06, -0.0009479522705078125, -0.01599884033203125, -2.86102294921875e-05, -0.007780790328979492, -3.814697265625e-05, -0.001583099365234375, -0.000396728515625, -0.0036262073554098606, 0.0, -0.38417649269104004, 0.0, -6.508827209472656e-05, 0.0, -3.814697265625e-06, -0.0015850067138671875, -0.030849456787109375, -0.04622962325811386, -3.218649908376392e-06, -2.9802276912960224e-06, -3.576278118089249e-07, -0.039309386163949966, -4.0531158447265625e-06, -0.002651214599609375, -0.0004673004150390625, -0.001865386962890625, -0.014219045639038086, -7.62939453125e-06, -0.0008697509765625, -4.00543212890625e-05, -0.0028634071350097656, 0.0, -0.8258562088012695, -6.866455078125e-05, -2.411142349243164, -1.33514404296875e-05, -0.03705310821533203, -9.1552734375e-05, -0.00038444995880126953, 0.0], "choice_history": [97, 283, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Doomhammer", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "windfury", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}, {"value": {"value": true, "_type": "NameConstant"}, "arg": "divine_shield", "_type": "keyword"}], "_type": "Template68", "hole0": "Weapon", "hole2": 8}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "Doomhammer", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, windfury=True, auras=[Aura(Weapon<UNK>(),\n            HeroSelector())])\n", "score": -4.283942253405684, "score_history": [-2.09808349609375e-05, -0.024044036865234375, -0.0012996142031624913, -0.0002206563949584961, -1.1324817933200393e-05, -0.00010108859714819118, -3.504691630951129e-05, -1.1444091796875e-05, -0.0056858062744140625, -0.004245758056640625, -4.76837158203125e-05, 0.0, -4.577630170388147e-05, -2.86102294921875e-05, -0.000270843505859375, -7.62939453125e-06, -0.0001239776611328125, -1.1444091796875e-05, -4.76837158203125e-05, -0.0001532977621536702, -2.86102294921875e-05, -0.000171661376953125, -3.814697265625e-06, -0.003754734992980957, -1.52587890625e-05, -7.82012939453125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000194549560546875, -1.9073486328125e-06, -0.015323638916015625, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -2.288818359375e-05, -0.3556833267211914, -5.7220458984375e-06, -0.0009479522705078125, -0.01599884033203125, -2.86102294921875e-05, -0.007780790328979492, -3.814697265625e-05, -0.001583099365234375, -0.000396728515625, -0.0036262073554098606, 0.0, -1.152461290359497, -2.288818359375e-05, -4.839897155761719e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000133514404296875, -0.021117210388183594, -0.0582953616976738, -2.682209014892578e-05, -5.483612312673358e-06, -2.3841855067985307e-07, -0.01665956899523735, -2.0265579223632812e-06, -0.00276947021484375, -0.000415802001953125, -0.001129150390625, -0.0168607234954834, -7.62939453125e-06, -0.0007762908935546875, -4.00543212890625e-05, -0.0029931068420410156, 0.0, -0.7441482543945312, -6.29425048828125e-05, -1.0940276384353638, 0.0, -0.00914764404296875, -0.008707046508789062, -0.002032756805419922, -7.62939453125e-06, -0.00014495849609375, -0.082489013671875, -0.000278472900390625, -0.42300307750701904, -0.012231945991516113, -2.3365020751953125e-05, -0.0019502639770507812, 0.0, -0.1896454095840454, -5.841255187988281e-06, 0.0], "choice_history": [97, 283, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Doomhammer", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "2", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "windfury", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 88, 325, "Weapon", "<UNK>", "<EOS>", 88, 325, "Hero", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}, {"value": {"hole1": [{"_type": "Template79", "hole0": "Weapon<UNK>"}, {"_type": "Template79", "hole0": "HeroSelector"}], "_type": "Template78", "hole0": "Aura"}, "arg": "auras", "_type": "keyword"}], "_type": "Template68", "hole0": "Weapon", "hole2": 8}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "Doomhammer", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, windfury=True, effects=[Effect(Attack(),\n            ActionTag(ChangeTarget(CharacterSelector(NotCurrentTarget(),\n            EnemyPlayer(), RandomPicker())), SelfSelector(), And(OneIn(2),\n            OpponentMinionCountIsGreaterThan(0))))])\n", "score": -4.44372590726195, "score_history": [-2.09808349609375e-05, -0.024044036865234375, -0.0012996142031624913, -0.0002206563949584961, -1.1324817933200393e-05, -0.00010108859714819118, -3.504691630951129e-05, -1.1444091796875e-05, -0.0056858062744140625, -0.004245758056640625, -4.76837158203125e-05, 0.0, -4.577630170388147e-05, -2.86102294921875e-05, -0.000270843505859375, -7.62939453125e-06, -0.0001239776611328125, -1.1444091796875e-05, -4.76837158203125e-05, -0.0001532977621536702, -2.86102294921875e-05, -0.000171661376953125, -3.814697265625e-06, -0.003754734992980957, -1.52587890625e-05, -7.82012939453125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000194549560546875, -1.9073486328125e-06, -0.015323638916015625, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -2.288818359375e-05, -0.3556833267211914, -5.7220458984375e-06, -0.0009479522705078125, -0.01599884033203125, -2.86102294921875e-05, -0.007780790328979492, -3.814697265625e-05, -0.001583099365234375, -0.000396728515625, -0.0036262073554098606, 0.0, -1.152461290359497, -2.288818359375e-05, -4.839897155761719e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000133514404296875, -0.021117210388183594, -0.0582953616976738, -2.682209014892578e-05, -5.483612312673358e-06, -2.3841855067985307e-07, -0.01665956899523735, -2.0265579223632812e-06, -0.00276947021484375, -0.000415802001953125, -0.001129150390625, -0.0168607234954834, -7.62939453125e-06, -0.0007762908935546875, -4.00543212890625e-05, -0.0029931068420410156, 0.0, -0.9466447830200195, -0.008874893188476562, -0.15936219692230225, 0.0, -0.0002193450927734375, -0.014742851257324219, -0.007391929626464844, -0.04016005992889404, -0.0008292198181152344, -0.0007314682006835938, -0.06832122802734375, -0.0027017593383789062, -7.2479248046875e-05, -4.1961669921875e-05, -0.017717361450195312, -0.21169281005859375, -0.03858661651611328, -0.0029487600550055504, 0.0, -0.10638316720724106, -0.009328722953796387, -0.0275728702545166, -1.33514404296875e-05, -0.006079910788685083, -0.18677234649658203, 0.0, -0.02269776538014412, -0.0008832216262817383, -9.536738616588991e-07, -0.36701250076293945, -1.9073486328125e-05, 0.0, -0.08993065357208252, -1.1563301086425781e-05, -0.0003376007080078125, -0.0010690689086914062, -9.34600830078125e-05, -0.30256184935569763, -0.003522157669067383, -5.7220458984375e-06, -0.0006829956546425819, 0.0, -0.016572952270507812, -6.866455078125e-05, -0.034728940576314926, -0.0003870720393024385, -0.006588101387023926, -0.001094818115234375, -0.017612576484680176, -0.0016841888427734375, -5.924701690673828e-05, -0.002872766926884651, -1.9073486328125e-06], "choice_history": [97, 283, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Doomhammer", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "2", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "windfury", "<EOS>", 22, 175, "True", "<EOS>", 93, 274, "Attack", "<EOS>", 346, 61, 246, "Action", "Tag", "<EOS>", "Change", "Target", "<EOS>", 346, 61, 239, "Character", "Selector", "<EOS>", "Not", "Current", "Target", "<EOS>", "Enemy", "Player", "<EOS>", "Random", "Picker", "<EOS>", "Self", "Selector", "<EOS>", "And", "<EOS>", 347, 84, 315, "One", "In", "<EOS>", "2", "<EOS>", 84, 315, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", "0", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}, {"hole2": [{"hole7": [{"hole1": 2, "_type": "Template74", "hole0": "OneIn"}, {"hole1": 0, "_type": "Template74", "hole0": "OpponentMinionCountIsGreaterThan"}], "hole6": "And", "hole2": [{"hole1": "NotCurrentTarget", "hole3": "EnemyPlayer", "_type": "Template39", "hole0": "CharacterSelector", "hole6": "RandomPicker"}], "hole0": "ActionTag", "_type": "Template39", "hole3": "SelfSelector", "hole1": "ChangeTarget"}], "_type": "Template45", "hole0": "Attack"}], "_type": "Template68", "hole0": "Weapon", "hole2": 8}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "Doomhammer", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8, windfury=True, effects=[Effect(Attack(),\n            ActionTag(ChangeTarget(CharacterSelector(NotCurrentTarget(),\n            EnemyPlayer(), RandomPicker())), SelfSelector(), And(OneIn(2),\n            OpponentMinionCountIsGreaterThan(0))))])\n", "score": -4.492690382552553, "score_history": [-2.09808349609375e-05, -0.024044036865234375, -0.0012996142031624913, -0.0002206563949584961, -1.1324817933200393e-05, -0.00010108859714819118, -3.504691630951129e-05, -1.1444091796875e-05, -0.0056858062744140625, -0.004245758056640625, -4.76837158203125e-05, 0.0, -4.577630170388147e-05, -2.86102294921875e-05, -0.000270843505859375, -7.62939453125e-06, -0.0001239776611328125, -1.1444091796875e-05, -4.76837158203125e-05, -0.0001532977621536702, -2.86102294921875e-05, -0.000171661376953125, -3.814697265625e-06, -0.003754734992980957, -1.52587890625e-05, -7.82012939453125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000194549560546875, -1.9073486328125e-06, -0.015323638916015625, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -2.288818359375e-05, -1.2266016006469727, -3.814697265625e-06, -0.0004425048828125, -0.015345573425292969, -1.52587890625e-05, -0.0074079036712646484, -4.9591064453125e-05, -0.0014848709106445312, -0.0007381439208984375, -0.002576874801889062, 0.0, -0.42687249183654785, 0.0, -8.225440979003906e-05, 0.0, -3.814697265625e-06, -0.0016574859619140625, -0.03271675109863281, -0.0540456548333168, -3.576277322281385e-06, -2.9802276912960224e-06, -3.576278118089249e-07, -0.03959527611732483, -4.0531158447265625e-06, -0.0026378631591796875, -0.0004673004150390625, -0.0018310546875, -0.01424098014831543, -7.62939453125e-06, -0.00086212158203125, -4.00543212890625e-05, -0.002841472625732422, 0.0, -0.857050895690918, -0.008695602416992188, -0.16569578647613525, 0.0, -0.0002346038818359375, -0.014514923095703125, -0.0071620941162109375, -0.039925456047058105, -0.0008673667907714844, -0.0007104873657226562, -0.06872367858886719, -0.0027294158935546875, -7.2479248046875e-05, -4.38690185546875e-05, -0.019445419311523438, -0.19636917114257812, -0.03870391845703125, -0.0029960861429572105, 0.0, -0.10531291365623474, -0.009117603302001953, -0.0297701358795166, -1.1444091796875e-05, -0.00576352933421731, -0.17385482788085938, 0.0, -0.023304663598537445, -0.0008774995803833008, -9.536738616588991e-07, -0.3521122932434082, -1.9073486328125e-05, 0.0, -0.09008800983428955, -1.1563301086425781e-05, -0.0003337860107421875, -0.0010528564453125, -9.72747802734375e-05, -0.3025067150592804, -0.0035333633422851562, -5.7220458984375e-06, -0.0006816822569817305, 0.0, -0.016808509826660156, -6.866455078125e-05, -0.034520696848630905, -0.000388979387935251, -0.006591916084289551, -0.001094818115234375, -0.017452359199523926, -0.001682281494140625, -5.924701690673828e-05, -0.0028725280426442623, -1.9073486328125e-06], "choice_history": [97, 283, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Doomhammer", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "windfury", "<EOS>", 22, 175, "True", "<EOS>", 93, 274, "Attack", "<EOS>", 346, 61, 246, "Action", "Tag", "<EOS>", "Change", "Target", "<EOS>", 346, 61, 239, "Character", "Selector", "<EOS>", "Not", "Current", "Target", "<EOS>", "Enemy", "Player", "<EOS>", "Random", "Picker", "<EOS>", "Self", "Selector", "<EOS>", "And", "<EOS>", 347, 84, 315, "One", "In", "<EOS>", "2", "<EOS>", 84, 315, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", "0", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}, {"hole2": [{"hole7": [{"hole1": 2, "_type": "Template74", "hole0": "OneIn"}, {"hole1": 0, "_type": "Template74", "hole0": "OpponentMinionCountIsGreaterThan"}], "hole6": "And", "hole2": [{"hole1": "NotCurrentTarget", "hole3": "EnemyPlayer", "_type": "Template39", "hole0": "CharacterSelector", "hole6": "RandomPicker"}], "hole0": "ActionTag", "_type": "Template39", "hole3": "SelfSelector", "hole1": "ChangeTarget"}], "_type": "Template45", "hole0": "Attack"}], "_type": "Template68", "hole0": "Weapon", "hole2": 8}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "Doomhammer", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8)\n", "score": -4.615005538282958, "score_history": [-2.09808349609375e-05, -0.024044036865234375, -0.0012996142031624913, -0.0002206563949584961, -1.1324817933200393e-05, -0.00010108859714819118, -3.504691630951129e-05, -1.1444091796875e-05, -0.0056858062744140625, -0.004245758056640625, -4.76837158203125e-05, 0.0, -4.577630170388147e-05, -2.86102294921875e-05, -0.000270843505859375, -7.62939453125e-06, -0.0001239776611328125, -1.1444091796875e-05, -4.76837158203125e-05, -0.0001532977621536702, -2.86102294921875e-05, -0.000171661376953125, -3.814697265625e-06, -0.003754734992980957, -1.52587890625e-05, -7.82012939453125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000194549560546875, -1.9073486328125e-06, -0.015323638916015625, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -2.288818359375e-05, -0.3556833267211914, -5.7220458984375e-06, -0.0009479522705078125, -0.01599884033203125, -2.86102294921875e-05, -0.007780790328979492, -3.814697265625e-05, -0.001583099365234375, -0.000396728515625, -0.0036262073554098606, 0.0, -0.38417649269104004, 0.0, -6.508827209472656e-05, 0.0, -3.814697265625e-06, -0.0015850067138671875, -3.757230758666992, -0.00157768779899925, -5.841255187988281e-06, -6.794906312279636e-06, -2.264974000354414e-06, -0.028076892718672752, -1.3470649719238281e-05], "choice_history": [97, 283, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Doomhammer", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template68", "hole0": "Weapon", "hole2": 8}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "Doomhammer", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, windfury=True, effects=[Effect(Attack(),\n            ActionTag(ChangeTarget(CharacterSelector(NotCurrentTarget(),\n            EnemyPlayer(), RandomPicker())), SelfSelector(), And(OneIn(2),\n            OpponentMinionCountIsGreaterThan(0))))])\n", "score": -5.24426257495449, "score_history": [-2.09808349609375e-05, -0.024044036865234375, -0.0012996142031624913, -0.0002206563949584961, -1.1324817933200393e-05, -0.00010108859714819118, -3.504691630951129e-05, -1.1444091796875e-05, -0.0056858062744140625, -0.004245758056640625, -4.76837158203125e-05, 0.0, -4.577630170388147e-05, -2.86102294921875e-05, -0.000270843505859375, -7.62939453125e-06, -0.0001239776611328125, -1.1444091796875e-05, -4.76837158203125e-05, -0.0001532977621536702, -2.86102294921875e-05, -0.000171661376953125, -3.814697265625e-06, -0.003754734992980957, -1.52587890625e-05, -7.82012939453125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000194549560546875, -1.9073486328125e-06, -0.015323638916015625, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -2.288818359375e-05, -1.2266016006469727, -3.814697265625e-06, -0.0004425048828125, -0.015345573425292969, -1.52587890625e-05, -0.0074079036712646484, -4.9591064453125e-05, -0.0014848709106445312, -0.0007381439208984375, -0.002576874801889062, 0.0, -1.0670006275177002, -2.288818359375e-05, -5.805492401123047e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0001316070556640625, -0.02146625518798828, -0.06987392157316208, -2.872943878173828e-05, -5.960446742392378e-06, -2.3841855067985307e-07, -0.016143042594194412, -2.0265579223632812e-06, -0.0027141571044921875, -0.0004119873046875, -0.0011196136474609375, -0.01688849925994873, -7.62939453125e-06, -0.0007534027099609375, -4.00543212890625e-05, -0.002956867218017578, 0.0, -0.9518251419067383, -0.008846282958984375, -0.15844953060150146, 0.0, -0.0002231597900390625, -0.014692306518554688, -0.007370948791503906, -0.040248751640319824, -0.0008254051208496094, -0.0007352828979492188, -0.06817626953125, -0.0027103424072265625, -7.2479248046875e-05, -4.1961669921875e-05, -0.01812744140625, -0.2122173309326172, -0.0386810302734375, -0.0029562702402472496, 0.0, -0.10650690644979477, -0.009341001510620117, -0.027579545974731445, -1.33514404296875e-05, -0.006067274603992701, -0.1866893768310547, 0.0, -0.022634942084550858, -0.0008841753005981445, -9.536738616588991e-07, -0.3672623634338379, -1.9073486328125e-05, 0.0, -0.0900346040725708, -1.1563301086425781e-05, -0.000335693359375, -0.001068115234375, -9.34600830078125e-05, -0.3031613230705261, -0.0035250186920166016, -5.7220458984375e-06, -0.0006826398894190788, 0.0, -0.016572952270507812, -6.866455078125e-05, -0.03472904860973358, -0.0003870720393024385, -0.006589055061340332, -0.001094818115234375, -0.017612576484680176, -0.0016841888427734375, -5.924701690673828e-05, -0.002872766926884651, -1.9073486328125e-06], "choice_history": [97, 283, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Doomhammer", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "2", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "windfury", "<EOS>", 22, 175, "True", "<EOS>", 93, 274, "Attack", "<EOS>", 346, 61, 246, "Action", "Tag", "<EOS>", "Change", "Target", "<EOS>", 346, 61, 239, "Character", "Selector", "<EOS>", "Not", "Current", "Target", "<EOS>", "Enemy", "Player", "<EOS>", "Random", "Picker", "<EOS>", "Self", "Selector", "<EOS>", "And", "<EOS>", 347, 84, 315, "One", "In", "<EOS>", "2", "<EOS>", 84, 315, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", "0", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}, {"hole2": [{"hole7": [{"hole1": 2, "_type": "Template74", "hole0": "OneIn"}, {"hole1": 0, "_type": "Template74", "hole0": "OpponentMinionCountIsGreaterThan"}], "hole6": "And", "hole2": [{"hole1": "NotCurrentTarget", "hole3": "EnemyPlayer", "_type": "Template39", "hole0": "CharacterSelector", "hole6": "RandomPicker"}], "hole0": "ActionTag", "_type": "Template39", "hole3": "SelfSelector", "hole1": "ChangeTarget"}], "_type": "Template45", "hole0": "Attack"}], "_type": "Template68", "hole0": "Weapon", "hole2": 8}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "Doomhammer", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8, windfury=True, effects=[Effect(Attack(),\n            ActionTag(ChangeTarget(CharacterSelector(NotCurrentTarget(),\n            EnemyPlayer(), RandomPicker())), SelfSelector(), And(ManaCost(2\n            ), OpponentMinionCountIsGreaterThan(0))))])\n", "score": -5.4470735409108215, "score_history": [-2.09808349609375e-05, -0.024044036865234375, -0.0012996142031624913, -0.0002206563949584961, -1.1324817933200393e-05, -0.00010108859714819118, -3.504691630951129e-05, -1.1444091796875e-05, -0.0056858062744140625, -0.004245758056640625, -4.76837158203125e-05, 0.0, -4.577630170388147e-05, -2.86102294921875e-05, -0.000270843505859375, -7.62939453125e-06, -0.0001239776611328125, -1.1444091796875e-05, -4.76837158203125e-05, -0.0001532977621536702, -2.86102294921875e-05, -0.000171661376953125, -3.814697265625e-06, -0.003754734992980957, -1.52587890625e-05, -7.82012939453125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000194549560546875, -1.9073486328125e-06, -0.015323638916015625, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -2.288818359375e-05, -0.3556833267211914, -5.7220458984375e-06, -0.0009479522705078125, -0.01599884033203125, -2.86102294921875e-05, -0.007780790328979492, -3.814697265625e-05, -0.001583099365234375, -0.000396728515625, -0.0036262073554098606, 0.0, -0.38417649269104004, 0.0, -6.508827209472656e-05, 0.0, -3.814697265625e-06, -0.0015850067138671875, -0.030849456787109375, -0.04622962325811386, -3.218649908376392e-06, -2.9802276912960224e-06, -3.576278118089249e-07, -0.039309386163949966, -4.0531158447265625e-06, -0.002651214599609375, -0.0004673004150390625, -0.001865386962890625, -0.014219045639038086, -7.62939453125e-06, -0.0008697509765625, -4.00543212890625e-05, -0.0028634071350097656, 0.0, -0.8585081100463867, -0.008715629577636719, -0.16724646091461182, 0.0, -0.0002307891845703125, -0.014598846435546875, -0.00717926025390625, -0.039841532707214355, -0.0008692741394042969, -0.0007085800170898438, -0.06876468658447266, -0.0027227401733398438, -7.43865966796875e-05, -4.38690185546875e-05, -0.019021034240722656, -0.19574546813964844, -0.03860759735107422, -0.002991556189954281, 0.0, -0.10524222254753113, -0.009106278419494629, -0.029748201370239258, -1.1444091796875e-05, -0.00578188756480813, -0.17420196533203125, 0.0, -0.023367486894130707, -0.0008765459060668945, -9.536738616588991e-07, -0.35218286514282227, -1.9073486328125e-05, 0.0, -0.08999359607696533, -1.1563301086425781e-05, -0.0003337860107421875, -0.0010538101196289062, -9.72747802734375e-05, -1.8038699626922607, -0.31217992305755615, 0.0, -0.001905728131532669, 0.0, -0.038299560546875, -3.0517578125e-05, -0.05848079174757004, -0.00024139852030202746, -0.008841633796691895, -0.0010852813720703125, -0.02995777130126953, -0.00283050537109375, -7.450580596923828e-05, -0.003900584764778614, -1.9073486328125e-06], "choice_history": [97, 283, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Doomhammer", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>", 354, 95, 336, "windfury", "<EOS>", 22, 175, "True", "<EOS>", 93, 274, "Attack", "<EOS>", 346, 61, 246, "Action", "Tag", "<EOS>", "Change", "Target", "<EOS>", 346, 61, 239, "Character", "Selector", "<EOS>", "Not", "Current", "Target", "<EOS>", "Enemy", "Player", "<EOS>", "Random", "Picker", "<EOS>", "Self", "Selector", "<EOS>", "And", "<EOS>", 347, 84, 315, "Mana", "Cost", "<EOS>", "2", "<EOS>", 84, 315, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", "0", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}, {"hole2": [{"hole7": [{"hole1": 2, "_type": "Template74", "hole0": "ManaCost"}, {"hole1": 0, "_type": "Template74", "hole0": "OpponentMinionCountIsGreaterThan"}], "hole6": "And", "hole2": [{"hole1": "NotCurrentTarget", "hole3": "EnemyPlayer", "_type": "Template39", "hole0": "CharacterSelector", "hole6": "RandomPicker"}], "hole0": "ActionTag", "_type": "Template39", "hole3": "SelfSelector", "hole1": "ChangeTarget"}], "_type": "Template45", "hole0": "Attack"}], "_type": "Template68", "hole0": "Weapon", "hole2": 8}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "Doomhammer", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8)\n", "score": -5.467856294537569, "score_history": [-2.09808349609375e-05, -0.024044036865234375, -0.0012996142031624913, -0.0002206563949584961, -1.1324817933200393e-05, -0.00010108859714819118, -3.504691630951129e-05, -1.1444091796875e-05, -0.0056858062744140625, -0.004245758056640625, -4.76837158203125e-05, 0.0, -4.577630170388147e-05, -2.86102294921875e-05, -0.000270843505859375, -7.62939453125e-06, -0.0001239776611328125, -1.1444091796875e-05, -4.76837158203125e-05, -0.0001532977621536702, -2.86102294921875e-05, -0.000171661376953125, -3.814697265625e-06, -0.003754734992980957, -1.52587890625e-05, -7.82012939453125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000194549560546875, -1.9073486328125e-06, -0.015323638916015625, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -2.288818359375e-05, -1.2266016006469727, -3.814697265625e-06, -0.0004425048828125, -0.015345573425292969, -1.52587890625e-05, -0.0074079036712646484, -4.9591064453125e-05, -0.0014848709106445312, -0.0007381439208984375, -0.002576874801889062, 0.0, -0.42687249183654785, 0.0, -8.225440979003906e-05, 0.0, -3.814697265625e-06, -0.0016574859619140625, -3.6998291015625, -0.001703720772638917, -5.841255187988281e-06, -7.271740287251305e-06, -2.622600959512056e-06, -0.026840081438422203, -1.3470649719238281e-05], "choice_history": [97, 283, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Doomhammer", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template68", "hole0": "Weapon", "hole2": 8}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}]}], "hole0": "Doomhammer", "_type": "Template5", "hole3": "create_minion", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8)\n", "score": -5.731641263658162, "score_history": [-2.09808349609375e-05, -0.024044036865234375, -0.0012996142031624913, -0.0002206563949584961, -1.1324817933200393e-05, -0.00010108859714819118, -3.504691630951129e-05, -1.1444091796875e-05, -0.0056858062744140625, -0.004245758056640625, -4.76837158203125e-05, 0.0, -4.577630170388147e-05, -2.86102294921875e-05, -0.000270843505859375, -7.62939453125e-06, -0.0001239776611328125, -1.1444091796875e-05, -4.76837158203125e-05, -0.0001532977621536702, -2.86102294921875e-05, -0.000171661376953125, -3.814697265625e-06, -0.003754734992980957, -1.52587890625e-05, -7.82012939453125e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000194549560546875, -1.9073486328125e-06, -0.015323638916015625, -5.7220458984375e-06, -1.9073486328125e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -2.288818359375e-05, -0.3556833267211914, -5.7220458984375e-06, -0.0009479522705078125, -0.01599884033203125, -2.86102294921875e-05, -0.007780790328979492, -3.814697265625e-05, -0.001583099365234375, -0.000396728515625, -0.0036262073554098606, 0.0, -1.152461290359497, -2.288818359375e-05, -4.839897155761719e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000133514404296875, -4.105142593383789, -0.011744522489607334, -7.62939453125e-06, -4.8040277761174366e-05, -4.768370445162873e-07, -0.019757132977247238, -3.814697265625e-06], "choice_history": [97, 283, "Doomhammer", "<EOS>", "Weapon", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 349, 53, 183, "Doomhammer", "<EOS>", 52, 179, "5", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 353, 95, 336, "overload", "<EOS>", 23, 179, "2", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "2", "<EOS>", "8", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "_type": "Template68", "hole0": "Weapon", "hole2": 8}], "hole2": [{"hole1": "__init__", "hole3": [{"value": {"n": 2, "_type": "Num"}, "arg": "overload", "_type": "keyword"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "SHAMAN", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}]}], "hole0": "Doomhammer", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}]}
{"gold_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.silence()\n        self.target.damage(player.effective_spell_damage(1), self)\n", "beams": [{"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        self.target.die(self)\n        game.check_delayed()\n", "score": -4.154239060005743, "score_history": [-0.0014781951904296875, -5.7220458984375e-05, -3.814697265625e-06, -0.0004558563232421875, -0.0001010894775390625, -1.883488948806189e-05, -5.722029527532868e-06, -4.7801782784517854e-05, -2.288818359375e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0003796246601268649, -2.1100042431498878e-05, -1.5258781786542386e-05, -3.0517578125e-05, -0.005976676940917969, -0.00060272216796875, -8.22540732769994e-06, -3.826618194580078e-05, -5.960462772236497e-07, -1.33514404296875e-05, -0.0005129431956447661, 0.0, -0.0017528533935546875, 0.0, -0.09491729736328125, -0.000701904296875, -0.003146529197692871, 0.0, -0.0002193450927734375, -6.29425048828125e-05, -0.00463104248046875, -3.0517578125e-05, -3.135204315185547e-05, -4.6491513785440475e-06, 0.0, -0.0010514233727008104, -9.536738616588991e-07, 0.0, -7.987019671418238e-06, -1.0967229172820225e-05, -0.2555208206176758, -7.2479248046875e-05, -0.00041961669921875, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -7.62939453125e-06, 0.0, -5.280971163301729e-05, -1.1920922133867862e-06, -0.05350685119628906, -9.5367431640625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.326430082321167, -0.00010263919102726504, -0.8599557876586914, -5.91278076171875e-05, -4.1961669921875e-05, 0.0, -0.510716438293457, 0.0, -0.0016984939575195312, 0.0, -4.410743713378906e-05, -2.0265579223632812e-06, -0.014119673520326614, -4.29153169534402e-06, -0.03203010559082031, -0.0001010894775390625, -0.000461578369140625, -3.814697265625e-06, -0.23441314697265625, -1.9073486328125e-06, -0.0008394718170166016, 0.0, -6.902217864990234e-05, -1.1920928244535389e-07, -0.31041112542152405, 0.0, -3.4332275390625e-05, -0.0048046112060546875, 0.0, -0.0022548423148691654, -8.821463779895566e-06, -0.001041412353515625, -0.0002613067626953125, -0.002613067626953125, -5.7220458984375e-06, -0.40240001678466797, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.023221611976623535, 0.0], "choice_history": [96, 173, 358, 105, 152, "Earth", "Shock", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "game", "<EOS>", "check_delayed", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Earth Shock", "hole2": "SHAMAN"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "die", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}]}, {"value": {"hole1": "check_delayed", "_type": "Template76", "hole0": {"id": "game", "_type": "Name"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "EarthShock", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        index = self.target.immune\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -4.242204533411915, "score_history": [-0.0014781951904296875, -5.7220458984375e-05, -3.814697265625e-06, -0.0004558563232421875, -0.0001010894775390625, -1.883488948806189e-05, -5.722029527532868e-06, -4.7801782784517854e-05, -2.288818359375e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0003796246601268649, -2.1100042431498878e-05, -1.5258781786542386e-05, -3.0517578125e-05, -0.005976676940917969, -0.00060272216796875, -8.22540732769994e-06, -3.826618194580078e-05, -5.960462772236497e-07, -1.33514404296875e-05, -0.0005129431956447661, 0.0, -0.0017528533935546875, 0.0, -0.09491729736328125, -0.000701904296875, -0.003146529197692871, 0.0, -0.0002193450927734375, -6.29425048828125e-05, -0.00463104248046875, -3.0517578125e-05, -3.135204315185547e-05, -4.6491513785440475e-06, 0.0, -0.0010514233727008104, -9.536738616588991e-07, 0.0, -7.987019671418238e-06, -1.0967229172820225e-05, -0.2555208206176758, -7.2479248046875e-05, -0.00041961669921875, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -7.62939453125e-06, 0.0, -5.280971163301729e-05, -1.1920922133867862e-06, -0.05350685119628906, -9.5367431640625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.036741018295288, -3.9577484130859375e-05, -0.008322715759277344, -1.1444091796875e-05, -0.0003662109375, 0.0, -0.000156402587890625, -1.9073486328125e-06, -9.34600830078125e-05, 0.0, -3.063678741455078e-05, -2.0265579223632812e-06, -0.8123009204864502, -3.576278118089249e-07, -0.1669912338256836, -0.000225067138671875, -0.07776641845703125, -1.9073486328125e-06, -0.06340599060058594, 0.0, -3.826618194580078e-05, 0.0, -1.919269561767578e-05, -1.1920928244535389e-07, -1.0871341228485107, 0.0, -2.47955322265625e-05, -0.035900115966796875, -4.1961669921875e-05, -0.0064721726812422276, -2.3841855067985307e-07, -5.7220458984375e-06, 0.0, -0.0004787445068359375, -2.384185791015625e-06, -0.006381988525390625, -5.7220458984375e-05, -0.5005083084106445, -0.0032100677490234375, -0.00937795639038086, -5.233271804172546e-05], "choice_history": [96, 173, 358, 105, 152, "Earth", "Shock", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "index", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Earth Shock", "hole2": "SHAMAN"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "immune", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "index", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 1}, {"id": "self", "_type": "Name"}]}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "EarthShock", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score": -4.583663070533298, "score_history": [-0.0014781951904296875, -5.7220458984375e-05, -3.814697265625e-06, -0.0004558563232421875, -0.0001010894775390625, -1.883488948806189e-05, -5.722029527532868e-06, -4.7801782784517854e-05, -2.288818359375e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0003796246601268649, -2.1100042431498878e-05, -1.5258781786542386e-05, -3.0517578125e-05, -0.005976676940917969, -0.00060272216796875, -8.22540732769994e-06, -3.826618194580078e-05, -5.960462772236497e-07, -1.33514404296875e-05, -0.0005129431956447661, 0.0, -0.0017528533935546875, 0.0, -3.2878036499023438, -0.0001316070556640625, -3.24249267578125e-05, 0.0, -0.021991729736328125, 0.0, -2.6702880859375e-05, 0.0, -1.5616416931152344e-05, -1.1920928244535389e-07, -1.255200743675232, -5.841255187988281e-06, -3.814697265625e-06, -0.0065097808837890625, -4.9591064453125e-05, -0.0003288164734840393, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Earth", "Shock", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Earth Shock", "hole2": "SHAMAN"}, {"hole1": "set_health_to", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 1, "_type": "Num"}]}], "name": "EarthShock", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1)\n", "score": -4.715198395965437, "score_history": [-0.0014781951904296875, -5.7220458984375e-05, -3.814697265625e-06, -0.0004558563232421875, -0.0001010894775390625, -1.883488948806189e-05, -5.722029527532868e-06, -4.7801782784517854e-05, -2.288818359375e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0003796246601268649, -2.1100042431498878e-05, -1.5258781786542386e-05, -3.0517578125e-05, -0.005976676940917969, -0.00060272216796875, -8.22540732769994e-06, -3.826618194580078e-05, -5.960462772236497e-07, -1.33514404296875e-05, -0.0005129431956447661, 0.0, -0.0017528533935546875, 0.0, -3.2878036499023438, -0.0001316070556640625, -3.24249267578125e-05, 0.0, -0.021991729736328125, 0.0, -2.6702880859375e-05, 0.0, -1.5616416931152344e-05, -1.1920928244535389e-07, -0.8249906301498413, -3.576278118089249e-07, -1.9073486328125e-06, -0.5670051574707031, -3.24249267578125e-05, -0.0016015286091715097, -3.814697265625e-06], "choice_history": [96, 173, 358, 105, 152, "Earth", "Shock", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "1", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Earth Shock", "hole2": "SHAMAN"}, {"hole1": "increase_health", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 1, "_type": "Num"}]}], "name": "EarthShock", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.health - self.target.calculate_attack()\n        self.target.die(self)\n        game.check_delayed()\n", "score": -4.7917264934007875, "score_history": [-0.0014781951904296875, -5.7220458984375e-05, -3.814697265625e-06, -0.0004558563232421875, -0.0001010894775390625, -1.883488948806189e-05, -5.722029527532868e-06, -4.7801782784517854e-05, -2.288818359375e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0003796246601268649, -2.1100042431498878e-05, -1.5258781786542386e-05, -3.0517578125e-05, -0.005976676940917969, -0.00060272216796875, -8.22540732769994e-06, -3.826618194580078e-05, -5.960462772236497e-07, -1.33514404296875e-05, -0.0005129431956447661, 0.0, -0.0017528533935546875, 0.0, -0.09491729736328125, -0.000701904296875, -0.003146529197692871, 0.0, -0.0002193450927734375, -6.29425048828125e-05, -0.00463104248046875, -3.0517578125e-05, -3.135204315185547e-05, -4.6491513785440475e-06, 0.0, -0.0010514233727008104, -9.536738616588991e-07, 0.0, -7.987019671418238e-06, -1.0967229172820225e-05, -0.2555208206176758, -7.2479248046875e-05, -0.00041961669921875, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -7.62939453125e-06, 0.0, -5.280971163301729e-05, -1.1920922133867862e-06, -0.05350685119628906, -9.5367431640625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.326430082321167, -0.00010263919102726504, -1.1548242568969727, -0.0026454925537109375, -0.0064792633056640625, -0.000152587890625, -0.0022907257080078125, 0.0, -5.340576171875e-05, 0.0, -0.004696011543273926, 0.0, -2.1576881408691406e-05, -2.0265579223632812e-06, -0.6208972930908203, -3.576278118089249e-07, -0.012497901916503906, -0.32146358489990234, -3.62396240234375e-05, -0.0016994476318359375, 0.0, -4.38690185546875e-05, 0.0, -0.008758544921875, 0.0, -2.7060508728027344e-05, -1.1920928244535389e-07, -0.019255977123975754, -2.0265579223632812e-06, -0.0064849853515625, -0.000118255615234375, -0.000423431396484375, -7.62939453125e-06, -0.022369384765625, -1.9073486328125e-06, -0.000672459602355957, 0.0, -6.318092346191406e-05, -1.1920928244535389e-07, -0.3987555503845215, 0.0, -4.1961669921875e-05, -0.006236076354980469, 0.0, -0.002987382933497429, -7.629378160345368e-06, -0.0009593963623046875, -0.00035858154296875, -0.002368927001953125, -5.7220458984375e-06, -0.41843318939208984, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -0.022961020469665527, 0.0], "choice_history": [96, 173, 358, 105, 152, "Earth", "Shock", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 14, 145, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 99, 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "game", "<EOS>", "check_delayed", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Earth Shock", "hole2": "SHAMAN"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"op": {"_type": "Sub"}, "left": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "health", "_type": "Attribute"}, "_type": "BinOp", "right": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "die", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}]}, {"value": {"hole1": "check_delayed", "_type": "Template76", "hole0": {"id": "game", "_type": "Name"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "EarthShock", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        index = self.target.immune\n        self.target.die(self)\n        game.check_delayed()\n", "score": -4.804821534675732, "score_history": [-0.0014781951904296875, -5.7220458984375e-05, -3.814697265625e-06, -0.0004558563232421875, -0.0001010894775390625, -1.883488948806189e-05, -5.722029527532868e-06, -4.7801782784517854e-05, -2.288818359375e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0003796246601268649, -2.1100042431498878e-05, -1.5258781786542386e-05, -3.0517578125e-05, -0.005976676940917969, -0.00060272216796875, -8.22540732769994e-06, -3.826618194580078e-05, -5.960462772236497e-07, -1.33514404296875e-05, -0.0005129431956447661, 0.0, -0.0017528533935546875, 0.0, -0.09491729736328125, -0.000701904296875, -0.003146529197692871, 0.0, -0.0002193450927734375, -6.29425048828125e-05, -0.00463104248046875, -3.0517578125e-05, -3.135204315185547e-05, -4.6491513785440475e-06, 0.0, -0.0010514233727008104, -9.536738616588991e-07, 0.0, -7.987019671418238e-06, -1.0967229172820225e-05, -0.2555208206176758, -7.2479248046875e-05, -0.00041961669921875, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -7.62939453125e-06, 0.0, -5.280971163301729e-05, -1.1920922133867862e-06, -0.05350685119628906, -9.5367431640625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.036741018295288, -3.9577484130859375e-05, -0.008322715759277344, -1.1444091796875e-05, -0.0003662109375, 0.0, -0.000156402587890625, -1.9073486328125e-06, -9.34600830078125e-05, 0.0, -3.063678741455078e-05, -2.0265579223632812e-06, -0.8123009204864502, -3.576278118089249e-07, -0.1669912338256836, -0.000225067138671875, -0.07776641845703125, -1.9073486328125e-06, -0.06340599060058594, 0.0, -3.826618194580078e-05, 0.0, -1.919269561767578e-05, -1.1920928244535389e-07, -1.7456727027893066, 0.0, -7.62939453125e-06, -0.02808380126953125, 0.0, -0.0019381041638553143, -8.225420970120467e-06, -0.000823974609375, -0.0003185272216796875, -0.0032444000244140625, -7.62939453125e-06, -0.40824222564697266, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.02387213706970215, 0.0], "choice_history": [96, 173, 358, 105, 152, "Earth", "Shock", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "index", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "game", "<EOS>", "check_delayed", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Earth Shock", "hole2": "SHAMAN"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "immune", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "index", "_type": "Name"}]}, {"hole1": "die", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}]}, {"value": {"hole1": "check_delayed", "_type": "Template76", "hole0": {"id": "game", "_type": "Name"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "EarthShock", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        self.target.die(self)\n        game.check_delayed()\n", "score": -4.830129933667301, "score_history": [-0.0014781951904296875, -5.7220458984375e-05, -3.814697265625e-06, -0.0004558563232421875, -0.0001010894775390625, -1.883488948806189e-05, -5.722029527532868e-06, -4.7801782784517854e-05, -2.288818359375e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0003796246601268649, -2.1100042431498878e-05, -1.5258781786542386e-05, -3.0517578125e-05, -0.005976676940917969, -0.00060272216796875, -8.22540732769994e-06, -3.826618194580078e-05, -5.960462772236497e-07, -1.33514404296875e-05, -0.0005129431956447661, 0.0, -0.0017528533935546875, 0.0, -0.09491729736328125, -0.000701904296875, -0.003146529197692871, 0.0, -0.0002193450927734375, -6.29425048828125e-05, -0.00463104248046875, -3.0517578125e-05, -3.135204315185547e-05, -4.6491513785440475e-06, 0.0, -0.0010514233727008104, -9.536738616588991e-07, 0.0, -7.987019671418238e-06, -1.0967229172820225e-05, -0.2555208206176758, -7.2479248046875e-05, -0.00041961669921875, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -7.62939453125e-06, 0.0, -5.280971163301729e-05, -1.1920922133867862e-06, -0.05350685119628906, -9.5367431640625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -2.750926971435547, -7.152555099310121e-07, -0.6897745132446289, -3.814697265625e-05, -5.340576171875e-05, 0.0, -0.0019817352294921875, 0.0, -0.000744938850402832, 0.0, -9.21487808227539e-05, -1.1920928244535389e-07, -0.022239476442337036, -5.960462772236497e-07, -0.025360107421875, -0.000118255615234375, -0.0002346038818359375, -1.9073486328125e-06, -0.1300830841064453, -1.9073486328125e-06, -0.0002683401107788086, 0.0, -5.936622619628906e-05, 0.0, -0.31594252586364746, 0.0, -2.86102294921875e-05, -0.005959510803222656, 0.0, -0.0030689220875501633, -8.702254490344785e-06, -0.000949859619140625, -0.0002040863037109375, -0.002197265625, -5.7220458984375e-06, -0.4304361343383789, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.023260951042175293, 0.0], "choice_history": [96, 173, 358, 105, 152, "Earth", "Shock", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "temp_attack", "<EOS>", 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "game", "<EOS>", "check_delayed", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Earth Shock", "hole2": "SHAMAN"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}, "_type": "Assign", "targets": [{"id": "temp_attack", "_type": "Name"}]}, {"hole1": "die", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}]}, {"value": {"hole1": "check_delayed", "_type": "Template76", "hole0": {"id": "game", "_type": "Name"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "EarthShock", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n    self.target.taunt = True\n", "score": -4.832290457520514, "score_history": [-0.0014781951904296875, -5.7220458984375e-05, -3.814697265625e-06, -0.0004558563232421875, -0.0001010894775390625, -1.883488948806189e-05, -5.722029527532868e-06, -4.7801782784517854e-05, -2.288818359375e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0003796246601268649, -2.1100042431498878e-05, -1.5258781786542386e-05, -3.0517578125e-05, -0.005976676940917969, -0.00060272216796875, -8.22540732769994e-06, -3.826618194580078e-05, -5.960462772236497e-07, -1.33514404296875e-05, -0.0005129431956447661, 0.0, -0.0017528533935546875, 0.0, -4.384337425231934, -3.0517578125e-05, -0.0001163482666015625, -5.91278076171875e-05, -5.7220458984375e-06, -0.02669239044189453, -1.9073486328125e-06, -0.0004901885986328125, 0.0, -0.0058498382568359375, 0.0, -0.0003682374954223633, -1.9073486328125e-06, -0.402276873588562, 0.0, -0.000270843505859375, -0.0001983642578125, -2.8014183044433594e-05, -2.0265579223632812e-06], "choice_history": [96, 173, 358, 105, 152, "Earth", "Shock", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 102, 142, 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Earth Shock", "hole2": "SHAMAN"}, {"value": {"value": true, "_type": "NameConstant"}, "_type": "Assign", "targets": [{"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "taunt", "_type": "Attribute"}]}], "name": "EarthShock", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        self.target.die(self)\n        game.other_player.draw()\n", "score": -5.027333978212077, "score_history": [-0.0014781951904296875, -5.7220458984375e-05, -3.814697265625e-06, -0.0004558563232421875, -0.0001010894775390625, -1.883488948806189e-05, -5.722029527532868e-06, -4.7801782784517854e-05, -2.288818359375e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0003796246601268649, -2.1100042431498878e-05, -1.5258781786542386e-05, -3.0517578125e-05, -0.005976676940917969, -0.00060272216796875, -8.22540732769994e-06, -3.826618194580078e-05, -5.960462772236497e-07, -1.33514404296875e-05, -0.0005129431956447661, 0.0, -0.0017528533935546875, 0.0, -0.09491729736328125, -0.000701904296875, -0.003146529197692871, 0.0, -0.0002193450927734375, -6.29425048828125e-05, -0.00463104248046875, -3.0517578125e-05, -3.135204315185547e-05, -4.6491513785440475e-06, 0.0, -0.0010514233727008104, -9.536738616588991e-07, 0.0, -7.987019671418238e-06, -1.0967229172820225e-05, -0.2555208206176758, -7.2479248046875e-05, -0.00041961669921875, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -7.62939453125e-06, 0.0, -5.280971163301729e-05, -1.1920922133867862e-06, -0.05350685119628906, -9.5367431640625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.326430082321167, -0.00010263919102726504, -0.8599557876586914, -5.91278076171875e-05, -4.1961669921875e-05, 0.0, -0.510716438293457, 0.0, -0.0016984939575195312, 0.0, -4.410743713378906e-05, -2.0265579223632812e-06, -0.014119673520326614, -4.29153169534402e-06, -0.03203010559082031, -0.0001010894775390625, -0.000461578369140625, -3.814697265625e-06, -0.23441314697265625, -1.9073486328125e-06, -0.0008394718170166016, 0.0, -6.902217864990234e-05, -1.1920928244535389e-07, -0.31041112542152405, 0.0, -3.4332275390625e-05, -0.0048046112060546875, 0.0, -0.0022548423148691654, -8.821463779895566e-06, -0.001041412353515625, -0.0002613067626953125, -0.002613067626953125, -5.7220458984375e-06, -1.1238107681274414, -1.9073486328125e-06, -0.0001697540283203125, -3.814697265625e-06, -0.0185699462890625, 0.0, -0.1378699541091919, 0.0, -0.018334271386265755, -1.9073486328125e-06], "choice_history": [96, 173, 358, 105, 152, "Earth", "Shock", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 36, 317, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>", 106, 155, 36, 317, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Earth Shock", "hole2": "SHAMAN"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "calculate_attack", "_type": "Template76", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "die", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}]}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "EarthShock", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        index = self.target.immune\n        self.target.damage(player.effective_spell_damage(1), self)\n        game.other_player.draw()\n", "score": -5.166284480745581, "score_history": [-0.0014781951904296875, -5.7220458984375e-05, -3.814697265625e-06, -0.0004558563232421875, -0.0001010894775390625, -1.883488948806189e-05, -5.722029527532868e-06, -4.7801782784517854e-05, -2.288818359375e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0003796246601268649, -2.1100042431498878e-05, -1.5258781786542386e-05, -3.0517578125e-05, -0.005976676940917969, -0.00060272216796875, -8.22540732769994e-06, -3.826618194580078e-05, -5.960462772236497e-07, -1.33514404296875e-05, -0.0005129431956447661, 0.0, -0.0017528533935546875, 0.0, -0.09491729736328125, -0.000701904296875, -0.003146529197692871, 0.0, -0.0002193450927734375, -6.29425048828125e-05, -0.00463104248046875, -3.0517578125e-05, -3.135204315185547e-05, -4.6491513785440475e-06, 0.0, -0.0010514233727008104, -9.536738616588991e-07, 0.0, -7.987019671418238e-06, -1.0967229172820225e-05, -0.2555208206176758, -7.2479248046875e-05, -0.00041961669921875, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -7.62939453125e-06, 0.0, -5.280971163301729e-05, -1.1920922133867862e-06, -0.05350685119628906, -9.5367431640625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, -1.036741018295288, -3.9577484130859375e-05, -0.008322715759277344, -1.1444091796875e-05, -0.0003662109375, 0.0, -0.000156402587890625, -1.9073486328125e-06, -9.34600830078125e-05, 0.0, -3.063678741455078e-05, -2.0265579223632812e-06, -0.8123009204864502, -3.576278118089249e-07, -0.1669912338256836, -0.000225067138671875, -0.07776641845703125, -1.9073486328125e-06, -0.06340599060058594, 0.0, -3.826618194580078e-05, 0.0, -1.919269561767578e-05, -1.1920928244535389e-07, -1.0871341228485107, 0.0, -2.47955322265625e-05, -0.035900115966796875, -4.1961669921875e-05, -0.0064721726812422276, -2.3841855067985307e-07, -5.7220458984375e-06, 0.0, -0.0004787445068359375, -2.384185791015625e-06, -0.006381988525390625, -5.7220458984375e-05, -0.955775260925293, -3.814697265625e-06, -0.1558055877685547, -1.1444091796875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.03119480609893799, 0.0, -0.1934068202972412, 0.0, -0.10096602886915207, 0.0], "choice_history": [96, 173, 358, 105, 152, "Earth", "Shock", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "index", "<EOS>", 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "1", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "draw", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Earth Shock", "hole2": "SHAMAN"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "immune", "_type": "Attribute"}, "_type": "Assign", "targets": [{"id": "index", "_type": "Name"}]}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 1}, {"id": "self", "_type": "Name"}]}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "EarthShock", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -5.65059814756642, "score_history": [-0.0014781951904296875, -5.7220458984375e-05, -3.814697265625e-06, -0.0004558563232421875, -0.0001010894775390625, -1.883488948806189e-05, -5.722029527532868e-06, -4.7801782784517854e-05, -2.288818359375e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0003796246601268649, -2.1100042431498878e-05, -1.5258781786542386e-05, -3.0517578125e-05, -0.005976676940917969, -0.00060272216796875, -8.22540732769994e-06, -3.826618194580078e-05, -5.960462772236497e-07, -1.33514404296875e-05, -0.0005129431956447661, 0.0, -0.0017528533935546875, 0.0, -3.2878036499023438, -0.0001316070556640625, -3.24249267578125e-05, 0.0, -0.021991729736328125, 0.0, -2.6702880859375e-05, 0.0, -1.5616416931152344e-05, -1.1920928244535389e-07, -2.2559850215911865, 0.0, -7.62939453125e-06, -0.06952667236328125, 0.0, -0.0034575993195176125, -5.864976265002042e-05], "choice_history": [96, 173, 358, 105, 152, "Earth", "Shock", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Earth Shock", "hole2": "SHAMAN"}, {"hole1": "die", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}]}], "name": "EarthShock", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.divine_shield)\n", "score": -5.995259689123706, "score_history": [-0.0014781951904296875, -5.7220458984375e-05, -3.814697265625e-06, -0.0004558563232421875, -0.0001010894775390625, -1.883488948806189e-05, -5.722029527532868e-06, -4.7801782784517854e-05, -2.288818359375e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0003796246601268649, -2.1100042431498878e-05, -1.5258781786542386e-05, -3.0517578125e-05, -0.005976676940917969, -0.00060272216796875, -8.22540732769994e-06, -3.826618194580078e-05, -5.960462772236497e-07, -1.33514404296875e-05, -0.0005129431956447661, 0.0, -0.0017528533935546875, 0.0, -3.2878036499023438, -0.0001316070556640625, -3.24249267578125e-05, 0.0, -0.021991729736328125, 0.0, -2.6702880859375e-05, 0.0, -1.5616416931152344e-05, -1.1920928244535389e-07, -0.8249906301498413, -3.576278118089249e-07, -1.9073486328125e-06, -1.1382160186767578, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001678466796875, 0.0, -0.10714542865753174, 0.0, -0.00018274784088134766, -2.145764938177308e-06, -0.6029822826385498, -3.933906555175781e-06], "choice_history": [96, 173, 358, 105, 152, "Earth", "Shock", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Earth Shock", "hole2": "SHAMAN"}, {"hole1": "increase_health", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "divine_shield", "_type": "Attribute"}]}], "name": "EarthShock", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.check_delayed()\n        self.target.card.summon(game.current_player.minions, hearthbreaker.\n            cards.minions.Leokk(), self.target.card.Leokk())\n", "score": -11.042438937487546, "score_history": [-0.0014781951904296875, -5.7220458984375e-05, -3.814697265625e-06, -0.0004558563232421875, -0.0001010894775390625, -1.883488948806189e-05, -5.722029527532868e-06, -4.7801782784517854e-05, -2.288818359375e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0003796246601268649, -2.1100042431498878e-05, -1.5258781786542386e-05, -3.0517578125e-05, -0.005976676940917969, -0.00060272216796875, -8.22540732769994e-06, -3.826618194580078e-05, -5.960462772236497e-07, -1.33514404296875e-05, -0.0005129431956447661, 0.0, -0.0017528533935546875, 0.0, -0.09491729736328125, -0.000701904296875, -0.003146529197692871, 0.0, -0.0002193450927734375, -6.29425048828125e-05, -0.00463104248046875, -3.0517578125e-05, -3.135204315185547e-05, -4.6491513785440475e-06, 0.0, -0.0010514233727008104, -9.536738616588991e-07, 0.0, -7.987019671418238e-06, -1.0967229172820225e-05, -0.2555208206176758, -7.2479248046875e-05, -0.00041961669921875, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -7.62939453125e-06, 0.0, -5.280971163301729e-05, -1.1920922133867862e-06, -2.9978713989257812, -0.000545501708984375, -0.000400543212890625, 0.0, -0.0008563995361328125, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.23063378036022186, 0.0, -3.24249267578125e-05, -0.06840133666992188, 0.0, -0.011170506477355957, -6.675708846159978e-06, -0.00099945068359375, -7.62939453125e-05, -0.0038604736328125, -9.5367431640625e-06, -0.18442535400390625, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.021093368530273438, 0.0, -0.02780914306640625, -0.000453948974609375, -0.0001544952392578125, 0.0, -0.08286094665527344, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.046428799629211426, -1.9073486328125e-06, -3.838539123535156e-05, -1.9073486328125e-06, -0.08233880996704102, -1.1920928244535389e-07, -0.07681606709957123, 0.0, -0.000362396240234375, -0.008563995361328125, -3.814697265625e-06, -0.012172698974609375, 0.0, -0.00695037841796875, 0.0, -0.12820208072662354, 0.0, -0.3476221561431885, 0.0, -0.30762577056884766, -3.814697265625e-05, -0.20840930938720703, -0.00028228759765625, -0.001239776611328125, 0.0, -0.4136028289794922, -1.9073486328125e-06, -0.000232696533203125, -3.814697265625e-06, -0.6286640167236328, -2.0265579223632812e-06, -0.22170352935791016, -1.9073486328125e-06, -0.021361470222473145, -7.450580596923828e-05, -1.5624690055847168, -0.0005868673324584961, -0.0930490493774414, -1.33514404296875e-05, -0.021661758422851562, 0.0, -0.05530357360839844, 0.0, -0.02222442626953125, -1.9073486328125e-06, -0.4304211139678955, -2.3841855067985307e-07, -5.0187110900878906e-05, -1.1920928244535389e-07, -0.01470267679542303, 0.0, -2.3246750831604004, -0.0002480745315551758], "choice_history": [96, 173, 358, 105, 152, "Earth", "Shock", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "game", "<EOS>", "check_delayed", "<EOS>", 136, 318, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "summon", "<EOS>", 348, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 85, 317, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Leokk", "<EOS>", 85, 317, 13, 143, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "Leokk", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 1, "_type": "Template2", "hole0": "Earth Shock", "hole2": "SHAMAN"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "die", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}]}, {"value": {"hole1": "check_delayed", "_type": "Template76", "hole0": {"id": "game", "_type": "Name"}}, "_type": "Expr"}, {"hole1": "summon", "_type": "Template77", "hole0": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "card", "_type": "Attribute"}, "hole2": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "current_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}, {"hole1": "Leokk", "_type": "Template76", "hole0": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "cards", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}}, {"hole1": "Leokk", "_type": "Template76", "hole0": {"value": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "attr": "card", "_type": "Attribute"}}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "EarthShock", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "super().__init__('EarthShock', 1, CHARACTER_CLASS.SHAMAN, CARD_RARITY.COMMON)\n", "score": -12.911769798593895, "score_history": [-0.0014781951904296875, -5.7220458984375e-05, -3.814697265625e-06, -9.671062469482422, -3.1960535049438477, -0.0033460394479334354, -0.020963290706276894, -7.152543730626348e-06, -0.0013737661065533757, -2.3841855067985307e-07, -0.01742410659790039, 0.0], "choice_history": [96, 173, 358, 127, 230, "Earth", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>"], "model_output": {"body": [{"hole1": 1, "_type": "Template31", "hole0": "EarthShock", "hole2": "SHAMAN"}], "_type": "Module"}}, {"inferred_code": "break\n", "score": -15.193967819213867, "score_history": [-0.0014781951904296875, -5.7220458984375e-05, -3.814697265625e-06, -15.192428588867188], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}}]}
{"gold_code": "class EyeForAnEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for an Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, character, attacker, amount):\n        if character.is_hero():\n            character.player.opponent.hero.damage(amount, self)\n        super().reveal()\n\n    def activate(self, player):\n        player.bind('character_damaged', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('character_damaged', self._reveal)\n", "beams": [{"inferred_code": "class EyeforEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n", "score": -8.296274725562625, "score_history": [-0.0008678436279296875, -1.7861719131469727, -0.005800584331154823, -0.971196174621582, -0.002540813758969307, -7.986990567587782e-06, -0.001456260564737022, -4.231927960063331e-05, -5.125993993715383e-06, -0.003665924072265625, -0.0009918212890625, -0.0001354217529296875, -2.12190680031199e-05, -3.6239616747479886e-05, -0.17762458324432373, -0.00014901161193847656, -0.0038393735885620117, -0.00046539306640625, -0.00016641616821289062, -1.9073486328125e-06, -0.0004407167434692383, -3.814697265625e-06, -0.027398109436035156, -3.814697265625e-06, -0.005659922491759062, 0.0, -0.00054168701171875, -0.02056407928466797, -0.00191497802734375, -0.00274658203125, -1.33514404296875e-05, -0.011461257934570312, 0.0, -0.0003204345703125, -3.814697265625e-06, -0.005347490310668945, 0.0, -0.0008889408782124519, 0.0, -0.003223896026611328, 0.0, -0.016636012122035027, -4.00543212890625e-05, -5.340576171875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.46980416774749756, -0.7092199325561523, -0.039704322814941406, 0.0, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0015964508056640625, 0.0, -0.01166534423828125, -0.001316070556640625, -1.9073486328125e-06, -0.01186668872833252, 0.0, -3.24249267578125e-05, -0.0001430511474609375, -0.0017032623291015625, -1.52587890625e-05, -6.103515625e-05, -8.82148651726311e-06, -0.0001621246337890625, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -0.0001220703125, -0.091644287109375, -3.814697265625e-06, -0.031026840209960938, -2.6702880859375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.01865231990814209, 0.0, -0.0013037911849096417, 0.0, -0.002928733127191663, 0.0, -0.3814657926559448, -9.655952453613281e-06, -6.29425048828125e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.5295377373695374, -0.6579113006591797, -0.030752182006835938, 0.0, -2.6702880859375e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.001110076904296875, 0.0, -0.03769683837890625, -3.814697265625e-05, -0.07882034778594971, 0.0, -0.0001850128173828125, -0.0002269744873046875, -0.11663818359375, -1.9073486328125e-06, -1.71661376953125e-05, -1.7881377516459906e-06, -0.000217437744140625, -0.010102391242980957, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.07713127136230469, -7.62939453125e-06, -0.3058433532714844, -7.82012939453125e-05, -6.4849853515625e-05, 0.0, -0.023418545722961426, 0.0, -0.0014925003051757812, 0.0, -0.003653049236163497, 0.0, -0.1793534755706787, -9.655952453613281e-06, -5.7220458984375e-05, -0.0001392364501953125, -3.814697265625e-06, -0.5356118083000183, -0.8555803298950195, -0.021492958068847656, 0.0, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.00099945068359375, 0.0], "choice_history": [97, 284, "Eye", "for", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Eye for Eye", "hole2": "PALADIN"}], "hole0": "EyeforEye", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Eye<UNK>Eye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n", "score": -8.390462819701725, "score_history": [-0.0008678436279296875, -1.7861719131469727, -0.005800584331154823, -1.0653842687606812, -0.002540813758969307, -7.986990567587782e-06, -0.001456260564737022, -4.231927960063331e-05, -5.125993993715383e-06, -0.003665924072265625, -0.0009918212890625, -0.0001354217529296875, -2.12190680031199e-05, -3.6239616747479886e-05, -0.17762458324432373, -0.00014901161193847656, -0.0038393735885620117, -0.00046539306640625, -0.00016641616821289062, -1.9073486328125e-06, -0.0004407167434692383, -3.814697265625e-06, -0.027398109436035156, -3.814697265625e-06, -0.005659922491759062, 0.0, -0.00054168701171875, -0.02056407928466797, -0.00191497802734375, -0.00274658203125, -1.33514404296875e-05, -0.011461257934570312, 0.0, -0.0003204345703125, -3.814697265625e-06, -0.005347490310668945, 0.0, -0.0008889408782124519, 0.0, -0.003223896026611328, 0.0, -0.016636012122035027, -4.00543212890625e-05, -5.340576171875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.46980416774749756, -0.7092199325561523, -0.039704322814941406, 0.0, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0015964508056640625, 0.0, -0.01166534423828125, -0.001316070556640625, -1.9073486328125e-06, -0.01186668872833252, 0.0, -3.24249267578125e-05, -0.0001430511474609375, -0.0017032623291015625, -1.52587890625e-05, -6.103515625e-05, -8.82148651726311e-06, -0.0001621246337890625, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -0.0001220703125, -0.091644287109375, -3.814697265625e-06, -0.031026840209960938, -2.6702880859375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.01865231990814209, 0.0, -0.0013037911849096417, 0.0, -0.002928733127191663, 0.0, -0.3814657926559448, -9.655952453613281e-06, -6.29425048828125e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.5295377373695374, -0.6579113006591797, -0.030752182006835938, 0.0, -2.6702880859375e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.001110076904296875, 0.0, -0.03769683837890625, -3.814697265625e-05, -0.07882034778594971, 0.0, -0.0001850128173828125, -0.0002269744873046875, -0.11663818359375, -1.9073486328125e-06, -1.71661376953125e-05, -1.7881377516459906e-06, -0.000217437744140625, -0.010102391242980957, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.07713127136230469, -7.62939453125e-06, -0.3058433532714844, -7.82012939453125e-05, -6.4849853515625e-05, 0.0, -0.023418545722961426, 0.0, -0.0014925003051757812, 0.0, -0.003653049236163497, 0.0, -0.1793534755706787, -9.655952453613281e-06, -5.7220458984375e-05, -0.0001392364501953125, -3.814697265625e-06, -0.5356118083000183, -0.8555803298950195, -0.021492958068847656, 0.0, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.00099945068359375, 0.0], "choice_history": [97, 284, "Eye", "<UNK>", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Eye for Eye", "hole2": "PALADIN"}], "hole0": "Eye<UNK>Eye", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class EyeanEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n", "score": -8.614578787452274, "score_history": [-0.0008678436279296875, -1.7861719131469727, -0.005800584331154823, -1.2895002365112305, -0.002540813758969307, -7.986990567587782e-06, -0.001456260564737022, -4.231927960063331e-05, -5.125993993715383e-06, -0.003665924072265625, -0.0009918212890625, -0.0001354217529296875, -2.12190680031199e-05, -3.6239616747479886e-05, -0.17762458324432373, -0.00014901161193847656, -0.0038393735885620117, -0.00046539306640625, -0.00016641616821289062, -1.9073486328125e-06, -0.0004407167434692383, -3.814697265625e-06, -0.027398109436035156, -3.814697265625e-06, -0.005659922491759062, 0.0, -0.00054168701171875, -0.02056407928466797, -0.00191497802734375, -0.00274658203125, -1.33514404296875e-05, -0.011461257934570312, 0.0, -0.0003204345703125, -3.814697265625e-06, -0.005347490310668945, 0.0, -0.0008889408782124519, 0.0, -0.003223896026611328, 0.0, -0.016636012122035027, -4.00543212890625e-05, -5.340576171875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.46980416774749756, -0.7092199325561523, -0.039704322814941406, 0.0, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0015964508056640625, 0.0, -0.01166534423828125, -0.001316070556640625, -1.9073486328125e-06, -0.01186668872833252, 0.0, -3.24249267578125e-05, -0.0001430511474609375, -0.0017032623291015625, -1.52587890625e-05, -6.103515625e-05, -8.82148651726311e-06, -0.0001621246337890625, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -0.0001220703125, -0.091644287109375, -3.814697265625e-06, -0.031026840209960938, -2.6702880859375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.01865231990814209, 0.0, -0.0013037911849096417, 0.0, -0.002928733127191663, 0.0, -0.3814657926559448, -9.655952453613281e-06, -6.29425048828125e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.5295377373695374, -0.6579113006591797, -0.030752182006835938, 0.0, -2.6702880859375e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.001110076904296875, 0.0, -0.03769683837890625, -3.814697265625e-05, -0.07882034778594971, 0.0, -0.0001850128173828125, -0.0002269744873046875, -0.11663818359375, -1.9073486328125e-06, -1.71661376953125e-05, -1.7881377516459906e-06, -0.000217437744140625, -0.010102391242980957, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.07713127136230469, -7.62939453125e-06, -0.3058433532714844, -7.82012939453125e-05, -6.4849853515625e-05, 0.0, -0.023418545722961426, 0.0, -0.0014925003051757812, 0.0, -0.003653049236163497, 0.0, -0.1793534755706787, -9.655952453613281e-06, -5.7220458984375e-05, -0.0001392364501953125, -3.814697265625e-06, -0.5356118083000183, -0.8555803298950195, -0.021492958068847656, 0.0, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.00099945068359375, 0.0], "choice_history": [97, 284, "Eye", "an", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Eye for Eye", "hole2": "PALADIN"}], "hole0": "EyeanEye", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class EyeforEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, attacker, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.cards.minions.<UNK>.Secret()\n        target = game.random_choice(targets)\n        target.die(Null)\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -8.906065482047111, "score_history": [-0.0008678436279296875, -0.1952352523803711, -0.003221086459234357, -1.1391067504882812, -0.0005549775087274611, -2.4914430468925275e-05, -0.010985968634486198, -0.00030410289764404297, -1.239776611328125e-05, -0.0003261566162109375, -0.0012454986572265625, -4.38690185546875e-05, -9.1790861915797e-06, -5.316734313964844e-05, -0.12489104270935059, -9.369850158691406e-05, -0.002307891845703125, -0.0001430511474609375, -4.4345855712890625e-05, -1.9073486328125e-06, -0.0006203651428222656, -1.9073486328125e-06, -0.01755523681640625, 0.0, -0.3576141595840454, 0.0, -9.1552734375e-05, -0.0010004043579101562, -1.3614916801452637, -3.576278118089249e-07, -0.06531620025634766, -0.0048160552978515625, -3.24249267578125e-05, -2.09808349609375e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.0008392333984375, -1.3470649719238281e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -1.01327859738376e-05, -1.1920928244535389e-07, -0.017526626586914062, -1.52587890625e-05, -2.47955322265625e-05, -3.0517578125e-05, -1.52587890625e-05, -0.15390539169311523, -7.987022399902344e-06, -0.3362550735473633, -0.0023822784423828125, -0.000278472900390625, -1.1444091796875e-05, -6.866455078125e-05, 0.0, -0.023061752319335938, 0.0, -0.002361297607421875, -1.9073486328125e-05, -0.0007016658782958984, -1.1444091796875e-05, -0.0020723342895507812, -1.9073486328125e-06, -0.0191878080368042, -5.841255187988281e-06, -0.2960343360900879, -3.576278118089249e-07, -0.41798481345176697, -0.02739107608795166, -0.09813308715820312, 0.0, -7.62939453125e-06, -0.0008716583251953125, 0.0, -0.06280994415283203, -5.960462772236497e-07, -0.013402938842773438, -0.00380706787109375, -3.24249267578125e-05, -9.5367431640625e-06, -0.04371833801269531, 0.0, -0.9539656639099121, 0.0, -0.019285082817077637, 0.0, -2.86102294921875e-05, -0.030165672302246094, 0.0, -1.4175374507904053, -1.1920928244535389e-07, -0.015875816345214844, -0.0001354217529296875, -0.000186920166015625, -1.71661376953125e-05, -0.0003147125244140625, -1.4543453289661556e-05, -0.38964325189590454, 0.0, -0.0013904571533203125, -0.012037277221679688, -3.814697265625e-05, -0.0001308917999267578, -8.344650268554688e-06, -0.008497238159179688, -0.3251991271972656, -0.000316619873046875, -0.08259212970733643, 0.0, -5.14984130859375e-05, -2.86102294921875e-05, -0.13846111297607422, -3.814697265625e-06, -3.814697265625e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -5.9604644775390625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -4.768370445162873e-07, -0.0163116455078125, -0.015253067016601562, -0.0001888275146484375, -0.004586219787597656, -7.62939453125e-06, -9.1552734375e-05, -0.49222660064697266, -0.0002841949462890625, -0.0002117156982421875, -4.1961669921875e-05, 0.0, -4.410743713378906e-06, 0.0, -0.0009632110595703125, 0.0, -7.62939453125e-05, 0.0, -8.58306884765625e-06, -4.768370445162873e-07, -0.02693462371826172, -7.62939453125e-06, -0.0001544952392578125, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.0016003847122192383, -4.768370445162873e-07, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.12742042541503906, 0.0, -7.43865966796875e-05, 0.0, -0.000732421875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0043582916259765625, -0.0001068115234375, -0.0001049041748046875, -1.71661376953125e-05, -0.007181286811828613, 0.0], "choice_history": [97, 286, "Eye", "for", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "_reveal", "<EOS>", "attacker", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Secret", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "targets", "<EOS>", 136, 318, 21, 174, "target", "<EOS>", "die", "<EOS>", 346, 51, 176, "Null", "<EOS>", 358, 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}], "comparators": [{"n": 7, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Eye for Eye", "hole2": "PALADIN"}], "hole0": "EyeforEye", "_type": "Template5", "hole3": "_reveal", "hole1": "SecretCard", "hole4": "attacker", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "Secret", "_type": "Template76", "hole0": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "cards", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}, "attr": "<UNK>", "_type": "Attribute"}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}, {"hole1": "die", "_type": "Template77", "hole0": {"id": "target", "_type": "Name"}, "hole2": [{"value": "Null", "_type": "NameConstant"}]}]}}, {"inferred_code": "class EyeforEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, attacker, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.cards.minions.<UNK>.Secret()\n        target = game.random_choice(<UNK>)\n        target.die(Null)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -9.000861841649417, "score_history": [-0.0008678436279296875, -0.1952352523803711, -0.003221086459234357, -1.1391067504882812, -0.0005549775087274611, -2.4914430468925275e-05, -0.010985968634486198, -0.00030410289764404297, -1.239776611328125e-05, -0.0003261566162109375, -0.0012454986572265625, -4.38690185546875e-05, -9.1790861915797e-06, -5.316734313964844e-05, -0.12489104270935059, -9.369850158691406e-05, -0.002307891845703125, -0.0001430511474609375, -4.4345855712890625e-05, -1.9073486328125e-06, -0.0006203651428222656, -1.9073486328125e-06, -0.01755523681640625, 0.0, -0.3576141595840454, 0.0, -9.1552734375e-05, -0.0010004043579101562, -1.3614916801452637, -3.576278118089249e-07, -0.06531620025634766, -0.0048160552978515625, -3.24249267578125e-05, -2.09808349609375e-05, -1.52587890625e-05, -1.71661376953125e-05, -0.0008392333984375, -1.3470649719238281e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -1.01327859738376e-05, -1.1920928244535389e-07, -0.017526626586914062, -1.52587890625e-05, -2.47955322265625e-05, -3.0517578125e-05, -1.52587890625e-05, -0.15390539169311523, -7.987022399902344e-06, -0.3362550735473633, -0.0023822784423828125, -0.000278472900390625, -1.1444091796875e-05, -6.866455078125e-05, 0.0, -0.023061752319335938, 0.0, -0.002361297607421875, -1.9073486328125e-05, -0.0007016658782958984, -1.1444091796875e-05, -0.0020723342895507812, -1.9073486328125e-06, -0.0191878080368042, -5.841255187988281e-06, -0.2960343360900879, -3.576278118089249e-07, -0.41798481345176697, -0.02739107608795166, -0.09813308715820312, 0.0, -7.62939453125e-06, -0.0008716583251953125, 0.0, -0.06280994415283203, -5.960462772236497e-07, -0.013402938842773438, -0.00380706787109375, -3.24249267578125e-05, -9.5367431640625e-06, -0.04371833801269531, 0.0, -0.9539656639099121, 0.0, -0.019285082817077637, 0.0, -2.86102294921875e-05, -0.030165672302246094, 0.0, -0.38817858695983887, -5.483612312673358e-06, -0.038951873779296875, -0.00408172607421875, -0.0007610321044921875, -1.9073486328125e-06, -0.09233415126800537, -1.9073468138230965e-06, -0.6034791469573975, 0.0, -0.001262664794921875, -0.3022909164428711, -9.34600830078125e-05, -0.0002359151840209961, -6.318092346191406e-06, -0.0066967010498046875, -0.43358325958251953, -0.0003337860107421875, -0.4924384355545044, 0.0, -3.814697265625e-05, -8.7738037109375e-05, -0.05270957946777344, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -2.3841855067985307e-07, -0.001678466796875, -0.0061092376708984375, -0.0002422332763671875, -0.0036649703979492188, -7.62939453125e-06, -9.1552734375e-05, -0.5850372314453125, -0.0002269744873046875, -0.000152587890625, -4.38690185546875e-05, 0.0, -6.318092346191406e-06, 0.0, -0.0009975433349609375, 0.0, -7.43865966796875e-05, 0.0, -8.463859558105469e-06, -5.960462772236497e-07, -0.028771400451660156, -7.62939453125e-06, -0.000156402587890625, -5.7220458984375e-06, -2.47955322265625e-05, 0.0, -0.0015860795974731445, -4.768370445162873e-07, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.1272125244140625, 0.0, -7.43865966796875e-05, 0.0, -0.0007457733154296875, -1.1444091796875e-05, -1.9073486328125e-06, -0.0043201446533203125, -0.0001068115234375, -0.000102996826171875, -1.71661376953125e-05, -0.0071707963943481445, 0.0], "choice_history": [97, 286, "Eye", "for", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "_reveal", "<EOS>", "attacker", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 36, 317, 13, 143, 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Secret", "<EOS>", 102, 142, 346, 50, 174, "target", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 136, 318, 21, 174, "target", "<EOS>", "die", "<EOS>", 346, 51, 176, "Null", "<EOS>", 358, 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}], "comparators": [{"n": 7, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Eye for Eye", "hole2": "PALADIN"}], "hole0": "EyeforEye", "_type": "Template5", "hole3": "_reveal", "hole1": "SecretCard", "hole4": "attacker", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"hole1": "Secret", "_type": "Template76", "hole0": {"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "cards", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}, "attr": "<UNK>", "_type": "Attribute"}}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "target", "_type": "Name"}]}, {"hole1": "die", "_type": "Template77", "hole0": {"id": "target", "_type": "Name"}, "hole2": [{"value": "Null", "_type": "NameConstant"}]}]}}, {"inferred_code": "class EyeforEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack Recruit', self.\n            _reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n", "score": -9.145059292536416, "score_history": [-0.0008678436279296875, -1.7861719131469727, -0.005800584331154823, -0.971196174621582, -0.002540813758969307, -7.986990567587782e-06, -0.001456260564737022, -4.231927960063331e-05, -5.125993993715383e-06, -0.003665924072265625, -0.0009918212890625, -0.0001354217529296875, -2.12190680031199e-05, -3.6239616747479886e-05, -0.17762458324432373, -0.00014901161193847656, -0.0038393735885620117, -0.00046539306640625, -0.00016641616821289062, -1.9073486328125e-06, -0.0004407167434692383, -3.814697265625e-06, -0.027398109436035156, -3.814697265625e-06, -0.005659922491759062, 0.0, -0.00054168701171875, -0.02056407928466797, -0.00191497802734375, -0.00274658203125, -1.33514404296875e-05, -0.011461257934570312, 0.0, -0.0003204345703125, -3.814697265625e-06, -0.005347490310668945, 0.0, -0.0008889408782124519, 0.0, -0.003223896026611328, 0.0, -0.016636012122035027, -4.00543212890625e-05, -5.340576171875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.46980416774749756, -0.6961536407470703, -1.0625261068344116, 0.0, -0.017236709594726562, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000457763671875, 0.0, -0.000614166259765625, 0.0, -0.0065250396728515625, -0.0002117156982421875, -5.7220458984375e-06, -0.010374188423156738, 0.0, -3.62396240234375e-05, -0.000148773193359375, -0.00182342529296875, -1.52587890625e-05, -6.103515625e-05, -6.79492904964718e-06, -0.0001506805419921875, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -0.0001354217529296875, -0.07306861877441406, -7.62939453125e-06, -0.018838882446289062, -2.6702880859375e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.02245640754699707, 0.0, -0.0016897914465516806, 0.0, -0.00329339480958879, 0.0, -0.23962628841400146, -9.655952453613281e-06, -6.29425048828125e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.5308032631874084, -0.6598939895629883, -0.027894020080566406, 0.0, -2.6702880859375e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0010509490966796875, 0.0, -0.03025531768798828, -3.814697265625e-05, -0.07763302326202393, 0.0, -0.0001773834228515625, -0.0002307891845703125, -0.1192789077758789, -1.9073486328125e-06, -1.71661376953125e-05, -1.7881377516459906e-06, -0.000217437744140625, -0.010350346565246582, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -0.00012969970703125, -0.07822227478027344, -7.62939453125e-06, -0.30978965759277344, -7.82012939453125e-05, -6.4849853515625e-05, 0.0, -0.023403286933898926, 0.0, -0.001479029655456543, 0.0, -0.0036358830984681845, 0.0, -0.18045127391815186, -9.655952453613281e-06, -5.7220458984375e-05, -0.0001373291015625, -3.814697265625e-06, -0.536445677280426, -0.8519582748413086, -0.021585464477539062, 0.0, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.001003265380859375, 0.0], "choice_history": [97, 284, "Eye", "for", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "character_attack", " ", "Recruit", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack Recruit", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Eye for Eye", "hole2": "PALADIN"}], "hole0": "EyeforEye", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Eye<UNK>Eye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack Recruit', self.\n            _reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n", "score": -9.239247386675515, "score_history": [-0.0008678436279296875, -1.7861719131469727, -0.005800584331154823, -1.0653842687606812, -0.002540813758969307, -7.986990567587782e-06, -0.001456260564737022, -4.231927960063331e-05, -5.125993993715383e-06, -0.003665924072265625, -0.0009918212890625, -0.0001354217529296875, -2.12190680031199e-05, -3.6239616747479886e-05, -0.17762458324432373, -0.00014901161193847656, -0.0038393735885620117, -0.00046539306640625, -0.00016641616821289062, -1.9073486328125e-06, -0.0004407167434692383, -3.814697265625e-06, -0.027398109436035156, -3.814697265625e-06, -0.005659922491759062, 0.0, -0.00054168701171875, -0.02056407928466797, -0.00191497802734375, -0.00274658203125, -1.33514404296875e-05, -0.011461257934570312, 0.0, -0.0003204345703125, -3.814697265625e-06, -0.005347490310668945, 0.0, -0.0008889408782124519, 0.0, -0.003223896026611328, 0.0, -0.016636012122035027, -4.00543212890625e-05, -5.340576171875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.46980416774749756, -0.6961536407470703, -1.0625261068344116, 0.0, -0.017236709594726562, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000457763671875, 0.0, -0.000614166259765625, 0.0, -0.0065250396728515625, -0.0002117156982421875, -5.7220458984375e-06, -0.010374188423156738, 0.0, -3.62396240234375e-05, -0.000148773193359375, -0.00182342529296875, -1.52587890625e-05, -6.103515625e-05, -6.79492904964718e-06, -0.0001506805419921875, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -0.0001354217529296875, -0.07306861877441406, -7.62939453125e-06, -0.018838882446289062, -2.6702880859375e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.02245640754699707, 0.0, -0.0016897914465516806, 0.0, -0.00329339480958879, 0.0, -0.23962628841400146, -9.655952453613281e-06, -6.29425048828125e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.5308032631874084, -0.6598939895629883, -0.027894020080566406, 0.0, -2.6702880859375e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0010509490966796875, 0.0, -0.03025531768798828, -3.814697265625e-05, -0.07763302326202393, 0.0, -0.0001773834228515625, -0.0002307891845703125, -0.1192789077758789, -1.9073486328125e-06, -1.71661376953125e-05, -1.7881377516459906e-06, -0.000217437744140625, -0.010350346565246582, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -0.00012969970703125, -0.07822227478027344, -7.62939453125e-06, -0.30978965759277344, -7.82012939453125e-05, -6.4849853515625e-05, 0.0, -0.023403286933898926, 0.0, -0.001479029655456543, 0.0, -0.0036358830984681845, 0.0, -0.18045127391815186, -9.655952453613281e-06, -5.7220458984375e-05, -0.0001373291015625, -3.814697265625e-06, -0.536445677280426, -0.8519582748413086, -0.021585464477539062, 0.0, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.001003265380859375, 0.0], "choice_history": [97, 284, "Eye", "<UNK>", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "character_attack", " ", "Recruit", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack Recruit", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Eye for Eye", "hole2": "PALADIN"}], "hole0": "Eye<UNK>Eye", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class EyeforEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('character_attack Recruit', self.\n            _reveal)\n", "score": -9.259523574477726, "score_history": [-0.0008678436279296875, -1.7861719131469727, -0.005800584331154823, -0.971196174621582, -0.002540813758969307, -7.986990567587782e-06, -0.001456260564737022, -4.231927960063331e-05, -5.125993993715383e-06, -0.003665924072265625, -0.0009918212890625, -0.0001354217529296875, -2.12190680031199e-05, -3.6239616747479886e-05, -0.17762458324432373, -0.00014901161193847656, -0.0038393735885620117, -0.00046539306640625, -0.00016641616821289062, -1.9073486328125e-06, -0.0004407167434692383, -3.814697265625e-06, -0.027398109436035156, -3.814697265625e-06, -0.005659922491759062, 0.0, -0.00054168701171875, -0.02056407928466797, -0.00191497802734375, -0.00274658203125, -1.33514404296875e-05, -0.011461257934570312, 0.0, -0.0003204345703125, -3.814697265625e-06, -0.005347490310668945, 0.0, -0.0008889408782124519, 0.0, -0.003223896026611328, 0.0, -0.016636012122035027, -4.00543212890625e-05, -5.340576171875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.46980416774749756, -0.7092199325561523, -0.039704322814941406, 0.0, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0015964508056640625, 0.0, -0.01166534423828125, -0.001316070556640625, -1.9073486328125e-06, -0.01186668872833252, 0.0, -3.24249267578125e-05, -0.0001430511474609375, -0.0017032623291015625, -1.52587890625e-05, -6.103515625e-05, -8.82148651726311e-06, -0.0001621246337890625, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -0.0001220703125, -0.091644287109375, -3.814697265625e-06, -0.031026840209960938, -2.6702880859375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.01865231990814209, 0.0, -0.0013037911849096417, 0.0, -0.002928733127191663, 0.0, -0.3814657926559448, -9.655952453613281e-06, -6.29425048828125e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.5295377373695374, -0.6579113006591797, -0.030752182006835938, 0.0, -2.6702880859375e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.001110076904296875, 0.0, -0.03769683837890625, -3.814697265625e-05, -0.07882034778594971, 0.0, -0.0001850128173828125, -0.0002269744873046875, -0.11663818359375, -1.9073486328125e-06, -1.71661376953125e-05, -1.7881377516459906e-06, -0.000217437744140625, -0.010102391242980957, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.07713127136230469, -7.62939453125e-06, -0.3058433532714844, -7.82012939453125e-05, -6.4849853515625e-05, 0.0, -0.023418545722961426, 0.0, -0.0014925003051757812, 0.0, -0.003653049236163497, 0.0, -0.1793534755706787, -9.655952453613281e-06, -5.7220458984375e-05, -0.0001392364501953125, -3.814697265625e-06, -0.5356118083000183, -0.5675525665283203, -1.247623085975647, 0.0, -0.025402069091796875, 0.0, -1.71661376953125e-05, 0.0, -0.0001735687255859375, 0.0, -0.0006103515625, 0.0], "choice_history": [97, 284, "Eye", "for", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", " ", "Recruit", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack Recruit", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Eye for Eye", "hole2": "PALADIN"}], "hole0": "EyeforEye", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class EyeforEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('minion_played <UNK>', self._reveal)\n", "score": -9.322817031508976, "score_history": [-0.0008678436279296875, -1.7861719131469727, -0.005800584331154823, -0.971196174621582, -0.002540813758969307, -7.986990567587782e-06, -0.001456260564737022, -4.231927960063331e-05, -5.125993993715383e-06, -0.003665924072265625, -0.0009918212890625, -0.0001354217529296875, -2.12190680031199e-05, -3.6239616747479886e-05, -0.17762458324432373, -0.00014901161193847656, -0.0038393735885620117, -0.00046539306640625, -0.00016641616821289062, -1.9073486328125e-06, -0.0004407167434692383, -3.814697265625e-06, -0.027398109436035156, -3.814697265625e-06, -0.005659922491759062, 0.0, -0.00054168701171875, -0.02056407928466797, -0.00191497802734375, -0.00274658203125, -1.33514404296875e-05, -0.011461257934570312, 0.0, -0.0003204345703125, -3.814697265625e-06, -0.005347490310668945, 0.0, -0.0008889408782124519, 0.0, -0.003223896026611328, 0.0, -0.016636012122035027, -4.00543212890625e-05, -5.340576171875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.46980416774749756, -0.7092199325561523, -0.039704322814941406, 0.0, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0015964508056640625, 0.0, -0.01166534423828125, -0.001316070556640625, -1.9073486328125e-06, -0.01186668872833252, 0.0, -3.24249267578125e-05, -0.0001430511474609375, -0.0017032623291015625, -1.52587890625e-05, -6.103515625e-05, -8.82148651726311e-06, -0.0001621246337890625, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -0.0001220703125, -0.091644287109375, -3.814697265625e-06, -0.031026840209960938, -2.6702880859375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.01865231990814209, 0.0, -0.0013037911849096417, 0.0, -0.002928733127191663, 0.0, -0.3814657926559448, -9.655952453613281e-06, -6.29425048828125e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.5295377373695374, -0.6579113006591797, -0.030752182006835938, 0.0, -2.6702880859375e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.001110076904296875, 0.0, -0.03769683837890625, -3.814697265625e-05, -0.07882034778594971, 0.0, -0.0001850128173828125, -0.0002269744873046875, -0.11663818359375, -1.9073486328125e-06, -1.71661376953125e-05, -1.7881377516459906e-06, -0.000217437744140625, -0.010102391242980957, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.07713127136230469, -7.62939453125e-06, -0.3058433532714844, -7.82012939453125e-05, -6.4849853515625e-05, 0.0, -0.023418545722961426, 0.0, -0.0014925003051757812, 0.0, -0.003653049236163497, 0.0, -0.1793534755706787, -9.655952453613281e-06, -5.7220458984375e-05, -0.0001392364501953125, -3.814697265625e-06, -1.7489826679229736, -0.20940780639648438, -0.4704895615577698, -1.1444091796875e-05, -0.00720977783203125, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.00360107421875, 0.0, -0.000553131103515625, 0.0], "choice_history": [97, 284, "Eye", "for", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", " ", "<UNK>", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played <UNK>", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Eye for Eye", "hole2": "PALADIN"}], "hole0": "EyeforEye", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Eye<UNK>Eye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('character_attack Recruit', self.\n            _reveal)\n", "score": -9.353711668616825, "score_history": [-0.0008678436279296875, -1.7861719131469727, -0.005800584331154823, -1.0653842687606812, -0.002540813758969307, -7.986990567587782e-06, -0.001456260564737022, -4.231927960063331e-05, -5.125993993715383e-06, -0.003665924072265625, -0.0009918212890625, -0.0001354217529296875, -2.12190680031199e-05, -3.6239616747479886e-05, -0.17762458324432373, -0.00014901161193847656, -0.0038393735885620117, -0.00046539306640625, -0.00016641616821289062, -1.9073486328125e-06, -0.0004407167434692383, -3.814697265625e-06, -0.027398109436035156, -3.814697265625e-06, -0.005659922491759062, 0.0, -0.00054168701171875, -0.02056407928466797, -0.00191497802734375, -0.00274658203125, -1.33514404296875e-05, -0.011461257934570312, 0.0, -0.0003204345703125, -3.814697265625e-06, -0.005347490310668945, 0.0, -0.0008889408782124519, 0.0, -0.003223896026611328, 0.0, -0.016636012122035027, -4.00543212890625e-05, -5.340576171875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.46980416774749756, -0.7092199325561523, -0.039704322814941406, 0.0, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0015964508056640625, 0.0, -0.01166534423828125, -0.001316070556640625, -1.9073486328125e-06, -0.01186668872833252, 0.0, -3.24249267578125e-05, -0.0001430511474609375, -0.0017032623291015625, -1.52587890625e-05, -6.103515625e-05, -8.82148651726311e-06, -0.0001621246337890625, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -0.0001220703125, -0.091644287109375, -3.814697265625e-06, -0.031026840209960938, -2.6702880859375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.01865231990814209, 0.0, -0.0013037911849096417, 0.0, -0.002928733127191663, 0.0, -0.3814657926559448, -9.655952453613281e-06, -6.29425048828125e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.5295377373695374, -0.6579113006591797, -0.030752182006835938, 0.0, -2.6702880859375e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.001110076904296875, 0.0, -0.03769683837890625, -3.814697265625e-05, -0.07882034778594971, 0.0, -0.0001850128173828125, -0.0002269744873046875, -0.11663818359375, -1.9073486328125e-06, -1.71661376953125e-05, -1.7881377516459906e-06, -0.000217437744140625, -0.010102391242980957, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.07713127136230469, -7.62939453125e-06, -0.3058433532714844, -7.82012939453125e-05, -6.4849853515625e-05, 0.0, -0.023418545722961426, 0.0, -0.0014925003051757812, 0.0, -0.003653049236163497, 0.0, -0.1793534755706787, -9.655952453613281e-06, -5.7220458984375e-05, -0.0001392364501953125, -3.814697265625e-06, -0.5356118083000183, -0.5675525665283203, -1.247623085975647, 0.0, -0.025402069091796875, 0.0, -1.71661376953125e-05, 0.0, -0.0001735687255859375, 0.0, -0.0006103515625, 0.0], "choice_history": [97, 284, "Eye", "<UNK>", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", " ", "Recruit", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack Recruit", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Eye for Eye", "hole2": "PALADIN"}], "hole0": "Eye<UNK>Eye", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class EyeforEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack Recruit', self.\n            _reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n", "score": -9.510089341766275, "score_history": [-0.0008678436279296875, -1.7861719131469727, -0.005800584331154823, -0.971196174621582, -0.002540813758969307, -7.986990567587782e-06, -0.001456260564737022, -4.231927960063331e-05, -5.125993993715383e-06, -0.003665924072265625, -0.0009918212890625, -0.0001354217529296875, -2.12190680031199e-05, -3.6239616747479886e-05, -0.17762458324432373, -0.00014901161193847656, -0.0038393735885620117, -0.00046539306640625, -0.00016641616821289062, -1.9073486328125e-06, -0.0004407167434692383, -3.814697265625e-06, -0.027398109436035156, -3.814697265625e-06, -0.005659922491759062, 0.0, -0.00054168701171875, -0.02056407928466797, -0.00191497802734375, -0.00274658203125, -1.33514404296875e-05, -0.011461257934570312, 0.0, -0.0003204345703125, -3.814697265625e-06, -0.005347490310668945, 0.0, -0.0008889408782124519, 0.0, -0.003223896026611328, 0.0, -0.016636012122035027, -4.00543212890625e-05, -5.340576171875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.46980416774749756, -0.7092199325561523, -0.039704322814941406, 0.0, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0015964508056640625, 0.0, -0.01166534423828125, -0.001316070556640625, -1.9073486328125e-06, -0.01186668872833252, 0.0, -3.24249267578125e-05, -0.0001430511474609375, -0.0017032623291015625, -1.52587890625e-05, -6.103515625e-05, -8.82148651726311e-06, -0.0001621246337890625, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -0.0001220703125, -0.091644287109375, -3.814697265625e-06, -0.031026840209960938, -2.6702880859375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.01865231990814209, 0.0, -0.0013037911849096417, 0.0, -0.002928733127191663, 0.0, -0.3814657926559448, -9.655952453613281e-06, -6.29425048828125e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.5295377373695374, -0.7461042404174805, -1.2686439752578735, 0.0, -0.030574798583984375, 0.0, -1.52587890625e-05, 0.0, -0.0002498626708984375, 0.0, -0.0005893707275390625, 0.0, -0.010105133056640625, -3.4332275390625e-05, -0.04491150379180908, 0.0, -0.0001926422119140625, -0.0002269744873046875, -0.12373828887939453, -1.9073486328125e-06, -1.9073486328125e-05, -1.5497195136049413e-06, -0.0002536773681640625, -0.009328961372375488, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -0.0001506805419921875, -0.06980133056640625, -9.5367431640625e-06, -0.24672317504882812, -8.0108642578125e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.018286824226379395, 0.0, -0.0016666650772094727, 0.0, -0.0036921498831361532, 0.0, -0.16729605197906494, -9.5367431640625e-06, -5.7220458984375e-05, -0.0001392364501953125, -3.814697265625e-06, -0.5383308529853821, -0.8504438400268555, -0.01992511749267578, 0.0, -3.0517578125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -0.00098419189453125, 0.0], "choice_history": [97, 284, "Eye", "for", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", " ", "Recruit", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack Recruit", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Eye for Eye", "hole2": "PALADIN"}], "hole0": "EyeforEye", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class EyeforEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('card_played <UNK>', self._reveal)\n", "score": -9.58396429217487, "score_history": [-0.0008678436279296875, -1.7861719131469727, -0.005800584331154823, -0.971196174621582, -0.002540813758969307, -7.986990567587782e-06, -0.001456260564737022, -4.231927960063331e-05, -5.125993993715383e-06, -0.003665924072265625, -0.0009918212890625, -0.0001354217529296875, -2.12190680031199e-05, -3.6239616747479886e-05, -0.17762458324432373, -0.00014901161193847656, -0.0038393735885620117, -0.00046539306640625, -0.00016641616821289062, -1.9073486328125e-06, -0.0004407167434692383, -3.814697265625e-06, -0.027398109436035156, -3.814697265625e-06, -0.005659922491759062, 0.0, -0.00054168701171875, -0.02056407928466797, -0.00191497802734375, -0.00274658203125, -1.33514404296875e-05, -0.011461257934570312, 0.0, -0.0003204345703125, -3.814697265625e-06, -0.005347490310668945, 0.0, -0.0008889408782124519, 0.0, -0.003223896026611328, 0.0, -0.016636012122035027, -4.00543212890625e-05, -5.340576171875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.46980416774749756, -0.7092199325561523, -0.039704322814941406, 0.0, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0015964508056640625, 0.0, -0.01166534423828125, -0.001316070556640625, -1.9073486328125e-06, -0.01186668872833252, 0.0, -3.24249267578125e-05, -0.0001430511474609375, -0.0017032623291015625, -1.52587890625e-05, -6.103515625e-05, -8.82148651726311e-06, -0.0001621246337890625, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -0.0001220703125, -0.091644287109375, -3.814697265625e-06, -0.031026840209960938, -2.6702880859375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.01865231990814209, 0.0, -0.0013037911849096417, 0.0, -0.002928733127191663, 0.0, -0.3814657926559448, -9.655952453613281e-06, -6.29425048828125e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.5295377373695374, -0.6579113006591797, -0.030752182006835938, 0.0, -2.6702880859375e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.001110076904296875, 0.0, -0.03769683837890625, -3.814697265625e-05, -0.07882034778594971, 0.0, -0.0001850128173828125, -0.0002269744873046875, -0.11663818359375, -1.9073486328125e-06, -1.71661376953125e-05, -1.7881377516459906e-06, -0.000217437744140625, -0.010102391242980957, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -0.0001277923583984375, -0.07713127136230469, -7.62939453125e-06, -0.3058433532714844, -7.82012939453125e-05, -6.4849853515625e-05, 0.0, -0.023418545722961426, 0.0, -0.0014925003051757812, 0.0, -0.003653049236163497, 0.0, -0.1793534755706787, -9.655952453613281e-06, -5.7220458984375e-05, -0.0001392364501953125, -3.814697265625e-06, -2.0138490200042725, -0.010896682739257812, -0.6312125325202942, -1.9073486328125e-05, -0.0167236328125, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.028055191040039062, 0.0, -0.000652313232421875, 0.0], "choice_history": [97, 284, "Eye", "for", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", " ", "<UNK>", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played <UNK>", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Eye for Eye", "hole2": "PALADIN"}], "hole0": "EyeforEye", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class EyeforEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack Recruit', self.\n            _reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('character_attack Recruit', self.\n            _reveal)\n", "score": -10.114857142191568, "score_history": [-0.0008678436279296875, -1.7861719131469727, -0.005800584331154823, -0.971196174621582, -0.002540813758969307, -7.986990567587782e-06, -0.001456260564737022, -4.231927960063331e-05, -5.125993993715383e-06, -0.003665924072265625, -0.0009918212890625, -0.0001354217529296875, -2.12190680031199e-05, -3.6239616747479886e-05, -0.17762458324432373, -0.00014901161193847656, -0.0038393735885620117, -0.00046539306640625, -0.00016641616821289062, -1.9073486328125e-06, -0.0004407167434692383, -3.814697265625e-06, -0.027398109436035156, -3.814697265625e-06, -0.005659922491759062, 0.0, -0.00054168701171875, -0.02056407928466797, -0.00191497802734375, -0.00274658203125, -1.33514404296875e-05, -0.011461257934570312, 0.0, -0.0003204345703125, -3.814697265625e-06, -0.005347490310668945, 0.0, -0.0008889408782124519, 0.0, -0.003223896026611328, 0.0, -0.016636012122035027, -4.00543212890625e-05, -5.340576171875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.46980416774749756, -0.6961536407470703, -1.0625261068344116, 0.0, -0.017236709594726562, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000457763671875, 0.0, -0.000614166259765625, 0.0, -0.0065250396728515625, -0.0002117156982421875, -5.7220458984375e-06, -0.010374188423156738, 0.0, -3.62396240234375e-05, -0.000148773193359375, -0.00182342529296875, -1.52587890625e-05, -6.103515625e-05, -6.79492904964718e-06, -0.0001506805419921875, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -0.0001354217529296875, -0.07306861877441406, -7.62939453125e-06, -0.018838882446289062, -2.6702880859375e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.02245640754699707, 0.0, -0.0016897914465516806, 0.0, -0.00329339480958879, 0.0, -0.23962628841400146, -9.655952453613281e-06, -6.29425048828125e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.5308032631874084, -0.6598939895629883, -0.027894020080566406, 0.0, -2.6702880859375e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0010509490966796875, 0.0, -0.03025531768798828, -3.814697265625e-05, -0.07763302326202393, 0.0, -0.0001773834228515625, -0.0002307891845703125, -0.1192789077758789, -1.9073486328125e-06, -1.71661376953125e-05, -1.7881377516459906e-06, -0.000217437744140625, -0.010350346565246582, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -0.00012969970703125, -0.07822227478027344, -7.62939453125e-06, -0.30978965759277344, -7.82012939453125e-05, -6.4849853515625e-05, 0.0, -0.023403286933898926, 0.0, -0.001479029655456543, 0.0, -0.0036358830984681845, 0.0, -0.18045127391815186, -9.655952453613281e-06, -5.7220458984375e-05, -0.0001373291015625, -3.814697265625e-06, -0.536445677280426, -0.5702714920043945, -1.2480151653289795, 0.0, -0.0253143310546875, 0.0, -1.71661376953125e-05, 0.0, -0.0001735687255859375, 0.0, -0.0006103515625, 0.0], "choice_history": [97, 284, "Eye", "for", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "character_attack", " ", "Recruit", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", " ", "Recruit", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack Recruit", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack Recruit", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Eye for Eye", "hole2": "PALADIN"}], "hole0": "EyeforEye", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Eye<UNK>Eye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack Recruit', self.\n            _reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('character_attack Recruit', self.\n            _reveal)\n", "score": -10.209045236330667, "score_history": [-0.0008678436279296875, -1.7861719131469727, -0.005800584331154823, -1.0653842687606812, -0.002540813758969307, -7.986990567587782e-06, -0.001456260564737022, -4.231927960063331e-05, -5.125993993715383e-06, -0.003665924072265625, -0.0009918212890625, -0.0001354217529296875, -2.12190680031199e-05, -3.6239616747479886e-05, -0.17762458324432373, -0.00014901161193847656, -0.0038393735885620117, -0.00046539306640625, -0.00016641616821289062, -1.9073486328125e-06, -0.0004407167434692383, -3.814697265625e-06, -0.027398109436035156, -3.814697265625e-06, -0.005659922491759062, 0.0, -0.00054168701171875, -0.02056407928466797, -0.00191497802734375, -0.00274658203125, -1.33514404296875e-05, -0.011461257934570312, 0.0, -0.0003204345703125, -3.814697265625e-06, -0.005347490310668945, 0.0, -0.0008889408782124519, 0.0, -0.003223896026611328, 0.0, -0.016636012122035027, -4.00543212890625e-05, -5.340576171875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.46980416774749756, -0.6961536407470703, -1.0625261068344116, 0.0, -0.017236709594726562, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000457763671875, 0.0, -0.000614166259765625, 0.0, -0.0065250396728515625, -0.0002117156982421875, -5.7220458984375e-06, -0.010374188423156738, 0.0, -3.62396240234375e-05, -0.000148773193359375, -0.00182342529296875, -1.52587890625e-05, -6.103515625e-05, -6.79492904964718e-06, -0.0001506805419921875, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -5.14984130859375e-05, -0.0001354217529296875, -0.07306861877441406, -7.62939453125e-06, -0.018838882446289062, -2.6702880859375e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.02245640754699707, 0.0, -0.0016897914465516806, 0.0, -0.00329339480958879, 0.0, -0.23962628841400146, -9.655952453613281e-06, -6.29425048828125e-05, -0.0001277923583984375, -1.9073486328125e-06, -0.5308032631874084, -0.6598939895629883, -0.027894020080566406, 0.0, -2.6702880859375e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0010509490966796875, 0.0, -0.03025531768798828, -3.814697265625e-05, -0.07763302326202393, 0.0, -0.0001773834228515625, -0.0002307891845703125, -0.1192789077758789, -1.9073486328125e-06, -1.71661376953125e-05, -1.7881377516459906e-06, -0.000217437744140625, -0.010350346565246582, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -0.00012969970703125, -0.07822227478027344, -7.62939453125e-06, -0.30978965759277344, -7.82012939453125e-05, -6.4849853515625e-05, 0.0, -0.023403286933898926, 0.0, -0.001479029655456543, 0.0, -0.0036358830984681845, 0.0, -0.18045127391815186, -9.655952453613281e-06, -5.7220458984375e-05, -0.0001373291015625, -3.814697265625e-06, -0.536445677280426, -0.5702714920043945, -1.2480151653289795, 0.0, -0.0253143310546875, 0.0, -1.71661376953125e-05, 0.0, -0.0001735687255859375, 0.0, -0.0006103515625, 0.0], "choice_history": [97, 284, "Eye", "<UNK>", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "character_attack", " ", "Recruit", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", " ", "Recruit", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack Recruit", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack Recruit", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Eye for Eye", "hole2": "PALADIN"}], "hole0": "Eye<UNK>Eye", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class EyeforEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack Recruit', self.\n            _reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('character_attack Recruit', self.\n            _reveal)\n", "score": -10.481998864776529, "score_history": [-0.0008678436279296875, -1.7861719131469727, -0.005800584331154823, -0.971196174621582, -0.002540813758969307, -7.986990567587782e-06, -0.001456260564737022, -4.231927960063331e-05, -5.125993993715383e-06, -0.003665924072265625, -0.0009918212890625, -0.0001354217529296875, -2.12190680031199e-05, -3.6239616747479886e-05, -0.17762458324432373, -0.00014901161193847656, -0.0038393735885620117, -0.00046539306640625, -0.00016641616821289062, -1.9073486328125e-06, -0.0004407167434692383, -3.814697265625e-06, -0.027398109436035156, -3.814697265625e-06, -0.005659922491759062, 0.0, -0.00054168701171875, -0.02056407928466797, -0.00191497802734375, -0.00274658203125, -1.33514404296875e-05, -0.011461257934570312, 0.0, -0.0003204345703125, -3.814697265625e-06, -0.005347490310668945, 0.0, -0.0008889408782124519, 0.0, -0.003223896026611328, 0.0, -0.016636012122035027, -4.00543212890625e-05, -5.340576171875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.46980416774749756, -0.7092199325561523, -0.039704322814941406, 0.0, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0015964508056640625, 0.0, -0.01166534423828125, -0.001316070556640625, -1.9073486328125e-06, -0.01186668872833252, 0.0, -3.24249267578125e-05, -0.0001430511474609375, -0.0017032623291015625, -1.52587890625e-05, -6.103515625e-05, -8.82148651726311e-06, -0.0001621246337890625, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -0.0001220703125, -0.091644287109375, -3.814697265625e-06, -0.031026840209960938, -2.6702880859375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.01865231990814209, 0.0, -0.0013037911849096417, 0.0, -0.002928733127191663, 0.0, -0.3814657926559448, -9.655952453613281e-06, -6.29425048828125e-05, -0.0001239776611328125, -1.9073486328125e-06, -0.5295377373695374, -0.7461042404174805, -1.2686439752578735, 0.0, -0.030574798583984375, 0.0, -1.52587890625e-05, 0.0, -0.0002498626708984375, 0.0, -0.0005893707275390625, 0.0, -0.010105133056640625, -3.4332275390625e-05, -0.04491150379180908, 0.0, -0.0001926422119140625, -0.0002269744873046875, -0.12373828887939453, -1.9073486328125e-06, -1.9073486328125e-05, -1.5497195136049413e-06, -0.0002536773681640625, -0.009328961372375488, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -0.0001506805419921875, -0.06980133056640625, -9.5367431640625e-06, -0.24672317504882812, -8.0108642578125e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.018286824226379395, 0.0, -0.0016666650772094727, 0.0, -0.0036921498831361532, 0.0, -0.16729605197906494, -9.5367431640625e-06, -5.7220458984375e-05, -0.0001392364501953125, -3.814697265625e-06, -0.5383308529853821, -0.5715217590332031, -1.2472467422485352, 0.0, -0.023740768432617188, 0.0, -1.9073486328125e-05, 0.0, -0.00018310546875, 0.0, -0.0006103515625, 0.0], "choice_history": [97, 284, "Eye", "for", "Eye", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", " ", "Recruit", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", " ", "Recruit", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack Recruit", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack Recruit", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Eye for Eye", "hole2": "PALADIN"}], "hole0": "EyeforEye", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}]}
{"gold_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in hearthbreaker.targeting.find_minion_spell_target(game,\n            lambda m: m.stealth):\n            minion.stealth = False\n        for secret in game.other_player.secrets:\n            secret.deactivate(game.other_player)\n        game.other_player.secrets = []\n        player.draw()\n", "beams": [{"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.<UNK>()\n        player.draw()\n", "score": -2.84792058052647, "score_history": [-1.1444091796875e-05, -0.000110626220703125, -0.046863771975040436, -4.1723224057932384e-06, -2.3841855067985307e-07, -3.707408905029297e-05, -3.4927710657939315e-05, -7.05718994140625e-05, -0.0006504058837890625, -2.47955322265625e-05, -2.861018856492592e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.0002579689025878906, -1.1444091796875e-05, -0.0008679628372192383, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -9.655952453613281e-06, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -8.225431884056889e-06, -6.079673767089844e-06, -0.1338663101196289, -5.340576171875e-05, -0.0001068115234375, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0010608433512970805, -4.57763671875e-05, -2.503394853192731e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.045269012451172e-05, -5.960462772236497e-07, -0.3967113494873047, -0.0022945404052734375, -0.000606536865234375, -3.814697265625e-06, -0.0020259618759155273, 0.0, -0.024537086486816406, -0.9239606857299805, -0.00017547607421875, 0.0, -0.0002231597900390625, 0.0, -0.005047917366027832, -1.9073486328125e-06, -0.0015478134155273438, -5.7220458984375e-06, -2.09808349609375e-05, -0.0008373260498046875, -0.0001125335693359375, -3.4332275390625e-05, 0.0, -0.000339508056640625, -5.91278076171875e-05, -0.0047991275787353516, 0.0, -0.09499752521514893, 0.0, -0.00018525081395637244, -8.392333984375e-05, -1.52587890625e-05, -0.8291120529174805, -0.000164031982421875, -0.001949310302734375, -1.9073486328125e-06, -0.0005340576171875, 0.0, -0.22265517711639404, -1.1920928244535389e-07, -0.08327037841081619, -3.4570634852570947e-06, -0.040884971618652344, -2.6702880859375e-05, -0.0033397674560546875, -3.814697265625e-06, -0.0004291534423828125, 0.0, -0.012664437294006348, -3.576278118089249e-07, -0.009916305541992188, -2.0265579223632812e-06], "choice_history": [97, 285, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "minion", "<EOS>", "<UNK>", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Flare", "hole2": "HUNTER"}], "hole0": "Flare", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"value": {"hole1": "<UNK>", "_type": "Template76", "hole0": {"id": "minion", "_type": "Name"}}, "_type": "Expr"}], "iter": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.draw()\n", "score": -3.1470168712969553, "score_history": [-1.1444091796875e-05, -0.000110626220703125, -0.046863771975040436, -4.1723224057932384e-06, -2.3841855067985307e-07, -3.707408905029297e-05, -3.4927710657939315e-05, -7.05718994140625e-05, -0.0006504058837890625, -2.47955322265625e-05, -2.861018856492592e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.0002579689025878906, -1.1444091796875e-05, -0.0008679628372192383, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -9.655952453613281e-06, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -8.225431884056889e-06, -6.079673767089844e-06, -0.1338663101196289, -5.340576171875e-05, -0.0001068115234375, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0010608433512970805, -4.57763671875e-05, -2.503394853192731e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.045269012451172e-05, -5.960462772236497e-07, -1.870804786682129, -0.0037755966186523438, -2.288818359375e-05, -7.62939453125e-06, -0.000732421875, -2.288818359375e-05, -0.004098296165466309, 0.0, -0.0006674270844087005, 0.0, -0.6208134889602661, -0.0001468658447265625, -0.10977891832590103, 0.0, -0.2634267807006836, -5.53131103515625e-05, -0.08583641052246094, -1.9073486328125e-06, -0.0014858245849609375, 0.0, -1.4781926438445225e-05, -2.622600959512056e-06, -0.0009785890579223633, -7.748603820800781e-06], "choice_history": [97, 285, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", "2", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Flare", "hole2": "HUNTER"}], "hole0": "Flare", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "change_temp_attack", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 2}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.draw()\n", "score": -3.295575957312849, "score_history": [-1.1444091796875e-05, -0.000110626220703125, -0.046863771975040436, -4.1723224057932384e-06, -2.3841855067985307e-07, -3.707408905029297e-05, -3.4927710657939315e-05, -7.05718994140625e-05, -0.0006504058837890625, -2.47955322265625e-05, -2.861018856492592e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.0002579689025878906, -1.1444091796875e-05, -0.0008679628372192383, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -9.655952453613281e-06, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -8.225431884056889e-06, -6.079673767089844e-06, -0.1338663101196289, -5.340576171875e-05, -0.0001068115234375, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0010608433512970805, -4.57763671875e-05, -2.503394853192731e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.045269012451172e-05, -5.960462772236497e-07, -1.870804786682129, -0.0037755966186523438, -2.288818359375e-05, -7.62939453125e-06, -0.000732421875, -2.288818359375e-05, -0.004098296165466309, 0.0, -0.0006674270844087005, 0.0, -0.8401585817337036, -3.814697265625e-06, -0.17750981450080872, 0.0, -0.10913753509521484, -0.0001068115234375, -0.1024770736694336, -3.814697265625e-06, -0.0007781982421875, 0.0, -1.394745322613744e-05, -2.861018856492592e-06, -0.0009082555770874023, -7.62939453125e-06], "choice_history": [97, 285, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 133, 304, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", "2", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Flare", "hole2": "HUNTER"}], "hole0": "Flare", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "increase_armor", "_type": "Template65", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": 2}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in <UNK>(player.minions, <UNK>=lambda m: m.<UNK>):\n            minion.<UNK>()\n        player.draw()\n", "score": -3.7680837118353097, "score_history": [-1.1444091796875e-05, -0.000110626220703125, -0.046863771975040436, -4.1723224057932384e-06, -2.3841855067985307e-07, -3.707408905029297e-05, -3.4927710657939315e-05, -7.05718994140625e-05, -0.0006504058837890625, -2.47955322265625e-05, -2.861018856492592e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.0002579689025878906, -1.1444091796875e-05, -0.0008679628372192383, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -9.655952453613281e-06, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -8.225431884056889e-06, -6.079673767089844e-06, -0.1338663101196289, -5.340576171875e-05, -0.0001068115234375, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0010608433512970805, -4.57763671875e-05, -2.503394853192731e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.045269012451172e-05, -5.960462772236497e-07, -0.3967113494873047, -0.0022945404052734375, -0.000606536865234375, -3.814697265625e-06, -0.0020259618759155273, 0.0, -0.024537086486816406, -0.5418500900268555, -0.008516311645507812, 0.0, -0.0004444122314453125, -2.0503857740550302e-05, -5.7220458984375e-05, -0.0430145263671875, 0.0, -0.008928298950195312, -5.7220458984375e-06, -0.0008920431137084961, 0.0, -0.00797581672668457, -2.0265579223632812e-06, -0.0001678466796875, -0.0002346038818359375, -9.5367431640625e-06, -0.021015524864196777, 0.0, -0.011658668518066406, -0.0010576248168945312, -0.0006866455078125, -0.0001506805419921875, -0.012349128723144531, -0.0004422969068400562, -0.18683242797851562, -0.00035858154296875, -2.47955322265625e-05, 0.0, -0.14294195175170898, -5.841255187988281e-06, -0.007426738739013672, -1.1920928244535389e-07, -1.5623664855957031, -0.004021644592285156, -0.0002765655517578125, -0.014957427978515625, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.02857254259288311, -2.3841855067985307e-07, -0.35727885365486145, -5.6028297876764555e-06, -0.09926986694335938, -3.24249267578125e-05, -0.006478309631347656, -7.62939453125e-06, -9.34600830078125e-05, 0.0, -0.08152031898498535, -5.960462772236497e-07, -0.005576610565185547, -2.0265579223632812e-06], "choice_history": [97, 285, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 151, 21, 174, "<UNK>", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 353, 95, 336, "<UNK>", "<EOS>", 18, 167, 0, 282, "m", "<EOS>", 13, 143, 21, 174, "m", "<EOS>", "<UNK>", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "minion", "<EOS>", "<UNK>", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Flare", "hole2": "HUNTER"}], "hole0": "Flare", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"value": {"hole1": "<UNK>", "_type": "Template76", "hole0": {"id": "minion", "_type": "Name"}}, "_type": "Expr"}], "iter": {"func": {"id": "<UNK>", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call", "keywords": [{"value": {"body": {"value": {"id": "m", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "args": {"_type": "Template49", "hole0": "m"}, "_type": "Lambda"}, "arg": "<UNK>", "_type": "keyword"}]}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in targets:\n            minion.Draw(player.minions)\n", "score": -3.9866478875299833, "score_history": [-1.1444091796875e-05, -0.000110626220703125, -0.046863771975040436, -4.1723224057932384e-06, -2.3841855067985307e-07, -3.707408905029297e-05, -3.4927710657939315e-05, -7.05718994140625e-05, -0.0006504058837890625, -2.47955322265625e-05, -2.861018856492592e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.0002579689025878906, -1.1444091796875e-05, -0.0008679628372192383, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -9.655952453613281e-06, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -8.225431884056889e-06, -6.079673767089844e-06, -2.1178808212280273, -0.0006656646728515625, -0.0002422332763671875, -2.09808349609375e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0008804795797914267, -4.00543212890625e-05, -2.503394853192731e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -5.817412966280244e-05, -7.152555099310121e-07, -0.029280662536621094, -4.76837158203125e-05, -3.814697265625e-06, -8.0108642578125e-05, -5.7220458984375e-06, -0.14535647630691528, -2.384185791015625e-06, -0.0005779266357421875, -0.0005359649658203125, -0.0003910064697265625, -2.47955322265625e-05, -0.0040988922119140625, 0.0, -0.002600431442260742, -1.52587890625e-05, -0.004145622253417969, -3.4332275390625e-05, -1.52587890625e-05, -0.03182411193847656, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -0.00037384033203125, -8.7738037109375e-05, -0.11875402927398682, 0.0, -0.07377350330352783, 0.0, -0.0006777042290195823, -8.797645568847656e-05, -0.000415802001953125, -0.000186920166015625, -0.00012969970703125, -1.9073486328125e-06, -0.14581118524074554, -2.896782461903058e-05, -0.13591861724853516, -7.748603820800781e-06, -0.000133514404296875, -6.103515625e-05, 0.0, -0.05460643768310547, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -0.001393437385559082, -2.1457672119140625e-06, -0.1230010986328125, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0004050731658935547, 0.0, -0.31120967864990234, -3.814697265625e-06, -0.006815075874328613, -9.775161743164062e-06, -0.000637054443359375, -0.05166912078857422, -0.0001544952392578125, -0.0001811981201171875, -0.0002613067626953125, -0.25102612376213074, -5.7220440794480965e-06, -0.17879313230514526, 0.0, -0.0001163482666015625, -0.08743953704833984, 0.0, -0.00312042236328125, 0.0, -0.0045157670974731445, -3.576278118089249e-07, -0.04674767702817917, -2.3841855067985307e-07], "choice_history": [97, 285, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 361, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "targets", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "targets", "<EOS>", "extend", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 21, 174, "targets", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "Draw", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Flare", "hole2": "HUNTER"}], "hole0": "Flare", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "targets", "_type": "Name"}]}, {"hole1": "extend", "_type": "Template77", "hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}]}, {"body": [{"hole1": "Draw", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}]}], "iter": {"id": "targets", "_type": "Name"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.current_player.minions):\n            minion.<UNK>()\n        player.draw()\n", "score": -4.438704348340671, "score_history": [-1.1444091796875e-05, -0.000110626220703125, -0.046863771975040436, -4.1723224057932384e-06, -2.3841855067985307e-07, -3.707408905029297e-05, -3.4927710657939315e-05, -7.05718994140625e-05, -0.0006504058837890625, -2.47955322265625e-05, -2.861018856492592e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.0002579689025878906, -1.1444091796875e-05, -0.0008679628372192383, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -9.655952453613281e-06, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -8.225431884056889e-06, -6.079673767089844e-06, -0.1338663101196289, -5.340576171875e-05, -0.0001068115234375, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0010608433512970805, -4.57763671875e-05, -2.503394853192731e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.045269012451172e-05, -5.960462772236497e-07, -0.3967113494873047, -0.0022945404052734375, -0.000606536865234375, -3.814697265625e-06, -0.0020259618759155273, 0.0, -0.024537086486816406, -0.9239606857299805, -0.00017547607421875, 0.0, -0.0002231597900390625, 0.0, -0.005047917366027832, -1.9073486328125e-06, -0.0015478134155273438, -5.7220458984375e-06, -2.09808349609375e-05, -0.0008373260498046875, -0.0001125335693359375, -3.4332275390625e-05, 0.0, -0.000339508056640625, -5.91278076171875e-05, -0.0047991275787353516, 0.0, -2.4500741958618164, -3.814697265625e-06, -0.0001569986343383789, -3.4809112548828125e-05, -1.71661376953125e-05, -0.06194877624511719, -0.0001850128173828125, -0.002147674560546875, -1.9073486328125e-06, -0.0005340576171875, 0.0, -0.21854984760284424, -1.1920928244535389e-07, -0.10129976272583008, -5.602820692729438e-06, -0.03195762634277344, -2.6702880859375e-05, -0.0032224655151367188, -3.814697265625e-06, -0.000446319580078125, 0.0, -0.00982367992401123, -2.3841855067985307e-07, -0.010581135749816895, -2.0265579223632812e-06], "choice_history": [97, 285, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "minion", "<EOS>", "<UNK>", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Flare", "hole2": "HUNTER"}], "hole0": "Flare", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"value": {"hole1": "<UNK>", "_type": "Template76", "hole0": {"id": "minion", "_type": "Name"}}, "_type": "Expr"}], "iter": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "current_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(ManaChange(-2)))\n        player.draw()\n", "score": -4.67660318927139, "score_history": [-1.1444091796875e-05, -0.000110626220703125, -0.046863771975040436, -4.1723224057932384e-06, -2.3841855067985307e-07, -3.707408905029297e-05, -3.4927710657939315e-05, -7.05718994140625e-05, -0.0006504058837890625, -2.47955322265625e-05, -2.861018856492592e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.0002579689025878906, -1.1444091796875e-05, -0.0008679628372192383, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -9.655952453613281e-06, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -8.225431884056889e-06, -6.079673767089844e-06, -0.1338663101196289, -5.340576171875e-05, -0.0001068115234375, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0010608433512970805, -4.57763671875e-05, -2.503394853192731e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.045269012451172e-05, -5.960462772236497e-07, -0.3967113494873047, -0.0022945404052734375, -0.000606536865234375, -3.814697265625e-06, -0.0020259618759155273, 0.0, -0.024537086486816406, -0.9239606857299805, -0.00017547607421875, 0.0, -0.0002231597900390625, 0.0, -0.005047917366027832, -1.9073486328125e-06, -0.0015478134155273438, -5.7220458984375e-06, -2.09808349609375e-05, -0.0008373260498046875, -0.0001125335693359375, -3.4332275390625e-05, 0.0, -0.000339508056640625, -5.91278076171875e-05, -0.0047991275787353516, 0.0, -0.09499752521514893, 0.0, -0.00018525081395637244, -8.392333984375e-05, -1.52587890625e-05, -0.5963153839111328, -0.000213623046875, -0.000148773193359375, -0.0001373291015625, -0.6393008232116699, -3.576277322281385e-06, -1.0734241008758545, -2.3841855067985307e-07, -1.1444091796875e-05, -0.016847610473632812, -0.34305667877197266, -0.009584188461303711, -7.510185241699219e-05, -1.33514404296875e-05, -0.0013580322265625, -0.006016731262207031, -0.000713348388671875, -0.000141143798828125, -0.0002498626708984375, -9.5367431640625e-06, -0.11838175356388092, 0.0, -0.04248046875, -2.09808349609375e-05, -0.08749961853027344, -2.288818359375e-05, -0.09687614440917969, 0.0, -4.2676765588112175e-05, -2.0265558760002023e-06, -0.0006815195083618164, -1.1682510375976562e-05], "choice_history": [97, 285, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "add_buff", "<EOS>", 346, 69, 291, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "2", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Flare", "hole2": "HUNTER"}], "hole0": "Flare", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "add_buff", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole1": [{"operand": {"n": 2, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Template54", "hole0": "ManaChange"}]}], "iter": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.Draw(player.minions)\n        for minion in targets:\n            minion.Draw(player.minions)\n", "score": -4.798616883107016, "score_history": [-1.1444091796875e-05, -0.000110626220703125, -0.046863771975040436, -4.1723224057932384e-06, -2.3841855067985307e-07, -3.707408905029297e-05, -3.4927710657939315e-05, -7.05718994140625e-05, -0.0006504058837890625, -2.47955322265625e-05, -2.861018856492592e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.0002579689025878906, -1.1444091796875e-05, -0.0008679628372192383, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -9.655952453613281e-06, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -8.225431884056889e-06, -6.079673767089844e-06, -0.1338663101196289, -5.340576171875e-05, -0.0001068115234375, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0010608433512970805, -4.57763671875e-05, -2.503394853192731e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.045269012451172e-05, -5.960462772236497e-07, -0.3967113494873047, -0.0022945404052734375, -0.000606536865234375, -3.814697265625e-06, -0.0020259618759155273, 0.0, -0.024537086486816406, -0.9239606857299805, -0.00017547607421875, 0.0, -0.0002231597900390625, 0.0, -0.005047917366027832, -1.9073486328125e-06, -0.0015478134155273438, -5.7220458984375e-06, -2.09808349609375e-05, -0.0008373260498046875, -0.0001125335693359375, -3.4332275390625e-05, 0.0, -0.000339508056640625, -5.91278076171875e-05, -0.0047991275787353516, 0.0, -0.09499752521514893, 0.0, -0.00018525081395637244, -8.392333984375e-05, -1.52587890625e-05, -0.5963153839111328, -0.000213623046875, -0.000148773193359375, -0.0001373291015625, -0.6393008232116699, -3.576277322281385e-06, -0.676112711429596, 0.0, -0.002384185791015625, -0.03261280059814453, 0.0, -0.11514091491699219, 0.0, -0.0021729469299316406, -1.1920928244535389e-07, -0.025232302024960518, -1.1920928244535389e-07, -0.11551952362060547, -8.7738037109375e-05, -1.52587890625e-05, -5.7220458984375e-06, -0.0014342069625854492, 0.0, -0.31235408782958984, -7.62939453125e-06, -0.013772726058959961, -6.079673767089844e-06, -0.0040874481201171875, -0.0742349624633789, -0.0001125335693359375, -0.00030517578125, -0.0002193450927734375, -0.271442174911499, -3.933904736186378e-06, -0.16731296479701996, 0.0, -0.0002613067626953125, -0.053725242614746094, 0.0, -0.002483367919921875, 0.0, -0.005078911781311035, -3.576278118089249e-07, -0.04340778663754463, -2.3841855067985307e-07], "choice_history": [97, 285, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "Draw", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 21, 174, "targets", "<EOS>", 358, 136, 318, 21, 174, "minion", "<EOS>", "Draw", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Flare", "hole2": "HUNTER"}], "hole0": "Flare", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "Draw", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}]}], "iter": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}, {"body": [{"hole1": "Draw", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}]}], "iter": {"id": "targets", "_type": "Name"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import Draw\n        for minion in player.game.minions:\n            minion.<UNK>()\n", "score": -4.843711528613305, "score_history": [-1.1444091796875e-05, -0.000110626220703125, -0.046863771975040436, -4.1723224057932384e-06, -2.3841855067985307e-07, -3.707408905029297e-05, -3.4927710657939315e-05, -7.05718994140625e-05, -0.0006504058837890625, -2.47955322265625e-05, -2.861018856492592e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.0002579689025878906, -1.1444091796875e-05, -0.0008679628372192383, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -9.655952453613281e-06, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -8.225431884056889e-06, -6.079673767089844e-06, -0.1338663101196289, -5.340576171875e-05, -0.0001068115234375, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0010608433512970805, -4.57763671875e-05, -2.503394853192731e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.045269012451172e-05, -5.960462772236497e-07, -2.2419919967651367, -0.0009756088256835938, -0.015726685523986816, -9.5367431640625e-06, -0.0010957717895507812, -0.000598907470703125, -0.42269694805145264, -0.00010287758777849376, -0.003800509963184595, 0.0, -0.1815338134765625, -6.4849853515625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0032123327255249023, 0.0, -0.22638225555419922, -2.288818359375e-05, -0.1566009521484375, 0.0, -5.340576171875e-05, -1.33514404296875e-05, -0.054086923599243164, 0.0, -0.38078582286834717, 0.0, -0.01824331097304821, -0.0004980564117431641, -3.62396240234375e-05, -0.002628326416015625, -5.7220458984375e-05, -0.15617942810058594, 0.0, -0.0003376007080078125, 0.0, -0.2959526777267456, -1.1920928244535389e-07, -0.4956457018852234, -5.483620952873025e-06], "choice_history": [97, 285, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 110, 162, "hearthbreaker.cards.minions.druid", "<EOS>", 337, 332, "Draw", "<EOS>", "0", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "minions", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "minion", "<EOS>", "<UNK>", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Flare", "hole2": "HUNTER"}], "hole0": "Flare", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"names": [{"name": "Draw", "_type": "alias"}], "_type": "ImportFrom", "level": 0, "module": "hearthbreaker.cards.minions.druid"}, {"body": [{"value": {"hole1": "<UNK>", "_type": "Template76", "hole0": {"id": "minion", "_type": "Name"}}, "_type": "Expr"}], "iter": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in <UNK>(player.minions, <UNK>=lambda m: m.<UNK>):\n            for deathrattle in range(0, 2):\n                player.draw()\n            player.draw()\n        player.draw()\n", "score": -5.102507443966928, "score_history": [-1.1444091796875e-05, -0.000110626220703125, -0.046863771975040436, -4.1723224057932384e-06, -2.3841855067985307e-07, -3.707408905029297e-05, -3.4927710657939315e-05, -7.05718994140625e-05, -0.0006504058837890625, -2.47955322265625e-05, -2.861018856492592e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.0002579689025878906, -1.1444091796875e-05, -0.0008679628372192383, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -9.655952453613281e-06, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -8.225431884056889e-06, -6.079673767089844e-06, -0.1338663101196289, -5.340576171875e-05, -0.0001068115234375, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0010608433512970805, -4.57763671875e-05, -2.503394853192731e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.045269012451172e-05, -5.960462772236497e-07, -0.3967113494873047, -0.0022945404052734375, -0.000606536865234375, -3.814697265625e-06, -0.0020259618759155273, 0.0, -0.024537086486816406, -0.5418500900268555, -0.008516311645507812, 0.0, -0.0004444122314453125, -2.0503857740550302e-05, -5.7220458984375e-05, -0.0430145263671875, 0.0, -0.008928298950195312, -5.7220458984375e-06, -0.0008920431137084961, 0.0, -0.00797581672668457, -2.0265579223632812e-06, -0.0001678466796875, -0.0002346038818359375, -9.5367431640625e-06, -0.021015524864196777, 0.0, -0.011658668518066406, -0.0010576248168945312, -0.0006866455078125, -0.0001506805419921875, -0.012349128723144531, -0.0004422969068400562, -0.18683242797851562, -0.00035858154296875, -2.47955322265625e-05, 0.0, -0.14294195175170898, -5.841255187988281e-06, -0.007426738739013672, -1.1920928244535389e-07, -0.2554149627685547, -0.0846405029296875, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.2250252068042755, -3.659724825411104e-05, -1.789952278137207, -0.009210586547851562, -0.0006999969482421875, 0.0, -0.00535809900611639, 0.0, -0.0001544952392578125, -0.0001678466796875, 0.0, -0.00043534860014915466, -1.9073486328125e-06, -0.0055484771728515625, -1.33514404296875e-05, -0.1672341227531433, 0.0, -0.0678558349609375, -0.7240095138549805, -0.0001201629638671875, -0.0061740875244140625, -1.1444091796875e-05, -0.0003566741943359375, -1.9073486328125e-06, -0.0001111027377191931, -1.1920928244535389e-07, -0.0008879899978637695, -4.398822784423828e-05, -0.08786296844482422, -1.9073486328125e-05, -0.00643157958984375, -5.7220458984375e-06, -0.0003871917724609375, 0.0, -5.626662095892243e-05, -1.311301275563892e-06, -0.0005040168762207031, -3.838539123535156e-05, -0.030670166015625, -2.6702880859375e-05, -0.024262428283691406, -1.33514404296875e-05, -0.0005626678466796875, 0.0, -6.556478183483705e-05, -2.622600959512056e-06, -0.0004712343215942383, -4.601478576660156e-05], "choice_history": [97, 285, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 151, 21, 174, "<UNK>", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 353, 95, 336, "<UNK>", "<EOS>", 18, 167, 0, 282, "m", "<EOS>", 13, 143, 21, 174, "m", "<EOS>", "<UNK>", "<EOS>", 359, 107, 156, 21, 174, "deathrattle", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "2", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Flare", "hole2": "HUNTER"}], "hole0": "Flare", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "deathrattle", "_type": "Name"}}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}], "iter": {"func": {"id": "<UNK>", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call", "keywords": [{"value": {"body": {"value": {"id": "m", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "args": {"_type": "Template49", "hole0": "m"}, "_type": "Lambda"}, "arg": "<UNK>", "_type": "keyword"}]}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            deathrattle.<UNK>(minion)\n        if player.<UNK>:\n            for deathrattle in minion.deathrattle:\n                deathrattle.<UNK>(minion)\n", "score": -5.43336827876778, "score_history": [-1.1444091796875e-05, -0.000110626220703125, -0.046863771975040436, -4.1723224057932384e-06, -2.3841855067985307e-07, -3.707408905029297e-05, -3.4927710657939315e-05, -7.05718994140625e-05, -0.0006504058837890625, -2.47955322265625e-05, -2.861018856492592e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.0002579689025878906, -1.1444091796875e-05, -0.0008679628372192383, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -9.655952453613281e-06, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -8.225431884056889e-06, -6.079673767089844e-06, -0.1338663101196289, -5.340576171875e-05, -0.0001068115234375, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0010608433512970805, -4.57763671875e-05, -2.503394853192731e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.045269012451172e-05, -5.960462772236497e-07, -0.3967113494873047, -0.0022945404052734375, -0.000606536865234375, -3.814697265625e-06, -0.0020259618759155273, 0.0, -0.024537086486816406, -0.9239606857299805, -0.00017547607421875, 0.0, -0.0002231597900390625, 0.0, -0.005047917366027832, -1.9073486328125e-06, -0.0015478134155273438, -5.7220458984375e-06, -2.09808349609375e-05, -0.0008373260498046875, -0.0001125335693359375, -3.4332275390625e-05, 0.0, -0.000339508056640625, -5.91278076171875e-05, -0.0047991275787353516, 0.0, -0.09499752521514893, 0.0, -0.00018525081395637244, -8.392333984375e-05, -1.52587890625e-05, -0.5963153839111328, -0.000213623046875, -0.000148773193359375, -0.0001373291015625, -0.8958001136779785, -0.007326722145080566, -0.11458861082792282, -2.9802276912960224e-06, -0.008775711059570312, -0.02658557891845703, 0.0, -0.545252799987793, -1.1920928244535389e-07, -0.03284168243408203, -0.02471923828125, -0.08396625518798828, -2.09808349609375e-05, -0.00037384033203125, 0.0, -0.003826141357421875, -2.3841855067985307e-07, -0.06612980365753174, -1.1920928244535389e-07, -0.02000904083251953, -0.09922027587890625, -1.33514404296875e-05, -3.0517578125e-05, 0.0, -0.15116485953330994, -0.00025343894958496094, -0.05209064483642578, -4.38690185546875e-05, -0.001068115234375, 0.0, -0.0007406473159790039, 0.0, -0.021957993507385254, -4.00543212890625e-05, -1.9073486328125e-05, -0.13932514190673828, -0.000186920166015625, -0.0003337860107421875, -5.14984130859375e-05, -0.15873704850673676, -0.001591801061294973, -0.10444507002830505, -4.410734163684538e-06, -0.005260467529296875, -0.005435943603515625, 0.0, -0.6213555932044983, -1.1920928244535389e-07], "choice_history": [97, 285, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 150, 13, 143, 21, 174, "copy", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 358, 136, 318, 21, 174, "deathrattle", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>", 109, 160, 13, 143, 21, 174, "player", "<EOS>", "<UNK>", "<EOS>", 358, 107, 156, 21, 174, "deathrattle", "<EOS>", 13, 143, 21, 174, "minion", "<EOS>", "deathrattle", "<EOS>", 358, 136, 318, 21, 174, "deathrattle", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Flare", "hole2": "HUNTER"}], "hole0": "Flare", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "<UNK>", "_type": "Template77", "hole0": {"id": "deathrattle", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}], "iter": {"func": {"value": {"id": "copy", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "game", "_type": "Name"}, "attr": "other_player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}, {"body": [{"body": [{"hole1": "<UNK>", "_type": "Template77", "hole0": {"id": "deathrattle", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}], "iter": {"value": {"id": "minion", "_type": "Name"}, "attr": "deathrattle", "_type": "Attribute"}, "_type": "For", "target": {"id": "deathrattle", "_type": "Name"}}], "test": {"value": {"id": "player", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "_type": "If"}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in <UNK>(player.minions, <UNK>=lambda m: m.<UNK>):\n            for deathrattle in minion.deathrattle:\n                <UNK>.summon(player, game, len(player.minions))\n            player.draw()\n        player.draw()\n", "score": -5.562900309490864, "score_history": [-1.1444091796875e-05, -0.000110626220703125, -0.046863771975040436, -4.1723224057932384e-06, -2.3841855067985307e-07, -3.707408905029297e-05, -3.4927710657939315e-05, -7.05718994140625e-05, -0.0006504058837890625, -2.47955322265625e-05, -2.861018856492592e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.0002579689025878906, -1.1444091796875e-05, -0.0008679628372192383, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -9.655952453613281e-06, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -8.225431884056889e-06, -6.079673767089844e-06, -0.1338663101196289, -5.340576171875e-05, -0.0001068115234375, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0010608433512970805, -4.57763671875e-05, -2.503394853192731e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.045269012451172e-05, -5.960462772236497e-07, -0.3967113494873047, -0.0022945404052734375, -0.000606536865234375, -3.814697265625e-06, -0.0020259618759155273, 0.0, -0.024537086486816406, -0.5418500900268555, -0.008516311645507812, 0.0, -0.0004444122314453125, -2.0503857740550302e-05, -5.7220458984375e-05, -0.0430145263671875, 0.0, -0.008928298950195312, -5.7220458984375e-06, -0.0008920431137084961, 0.0, -0.00797581672668457, -2.0265579223632812e-06, -0.0001678466796875, -0.0002346038818359375, -9.5367431640625e-06, -0.021015524864196777, 0.0, -0.011658668518066406, -0.0010576248168945312, -0.0006866455078125, -0.0001506805419921875, -0.012349128723144531, -0.0004422969068400562, -0.18683242797851562, -0.00035858154296875, -2.47955322265625e-05, 0.0, -0.14294195175170898, -5.841255187988281e-06, -0.007426738739013672, -1.1920928244535389e-07, -0.2554149627685547, -0.0846405029296875, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.2250252068042755, -3.659724825411104e-05, -0.4270162582397461, -9.1552734375e-05, -0.006500244140625, 0.0, -0.013592362403869629, 0.0, -0.0856623649597168, -0.000133514404296875, -1.1444091796875e-05, -0.04647064208984375, -0.000202178955078125, -0.0006256103515625, -3.62396240234375e-05, -1.938528299331665, -3.504698179312982e-05, -0.15996068716049194, -2.1457672119140625e-06, -0.06020164489746094, -0.006180763244628906, -7.62939453125e-06, -0.0009531064424663782, -1.1920928244535389e-07, -0.11084175109863281, -0.0001373291015625, -0.00041353702545166016, -3.576278118089249e-07, -0.0002841949462890625, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -9.834753291215748e-05, -8.225440979003906e-06, -7.62939453125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.010227203369140625, -1.52587890625e-05, -8.45193862915039e-05, 0.0, -0.000133514404296875, -1.9073486328125e-06, -0.36216068267822266, -0.0005035400390625, -0.10517215728759766, -7.62939453125e-06, -0.01525115966796875, 0.0, -0.0002281665802001953, -1.1920928244535389e-07, -0.004920601844787598, -1.9073486328125e-06, -0.02386188507080078, -2.09808349609375e-05, -0.007040977478027344, -1.71661376953125e-05, -0.0016193389892578125, 0.0, -2.7060319553129375e-05, -3.814689989667386e-06, -0.0008034706115722656, -2.3126602172851562e-05], "choice_history": [97, 285, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 151, 21, 174, "<UNK>", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 353, 95, 336, "<UNK>", "<EOS>", 18, 167, 0, 282, "m", "<EOS>", 13, 143, 21, 174, "m", "<EOS>", "<UNK>", "<EOS>", 359, 107, 156, 21, 174, "deathrattle", "<EOS>", 13, 143, 21, 174, "minion", "<EOS>", "deathrattle", "<EOS>", 358, 136, 318, 21, 174, "<UNK>", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Flare", "hole2": "HUNTER"}], "hole0": "Flare", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"hole1": "summon", "_type": "Template77", "hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}], "iter": {"value": {"id": "minion", "_type": "Name"}, "attr": "deathrattle", "_type": "Attribute"}, "_type": "For", "target": {"id": "deathrattle", "_type": "Name"}}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}], "iter": {"func": {"id": "<UNK>", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call", "keywords": [{"value": {"body": {"value": {"id": "m", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "args": {"_type": "Template49", "hole0": "m"}, "_type": "Lambda"}, "arg": "<UNK>", "_type": "keyword"}]}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in <UNK>(player.minions, <UNK>=lambda m: m.<UNK>):\n            for deathrattle in minion.deathrattle:\n                deathrattle.<UNK>(minion)\n            if player.<UNK>:\n                for deathrattle in minion.deathrattle:\n                    deathrattle.<UNK>(minion)\n        if player.<UNK>:\n            for deathrattle in minion.deathrattle:\n                deathrattle.<UNK>(minion)\n", "score": -7.088944841345395, "score_history": [-1.1444091796875e-05, -0.000110626220703125, -0.046863771975040436, -4.1723224057932384e-06, -2.3841855067985307e-07, -3.707408905029297e-05, -3.4927710657939315e-05, -7.05718994140625e-05, -0.0006504058837890625, -2.47955322265625e-05, -2.861018856492592e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.0002579689025878906, -1.1444091796875e-05, -0.0008679628372192383, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -9.655952453613281e-06, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -8.225431884056889e-06, -6.079673767089844e-06, -0.1338663101196289, -5.340576171875e-05, -0.0001068115234375, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0010608433512970805, -4.57763671875e-05, -2.503394853192731e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.045269012451172e-05, -5.960462772236497e-07, -0.3967113494873047, -0.0022945404052734375, -0.000606536865234375, -3.814697265625e-06, -0.0020259618759155273, 0.0, -0.024537086486816406, -0.5418500900268555, -0.008516311645507812, 0.0, -0.0004444122314453125, -2.0503857740550302e-05, -5.7220458984375e-05, -0.0430145263671875, 0.0, -0.008928298950195312, -5.7220458984375e-06, -0.0008920431137084961, 0.0, -0.00797581672668457, -2.0265579223632812e-06, -0.0001678466796875, -0.0002346038818359375, -9.5367431640625e-06, -0.021015524864196777, 0.0, -0.011658668518066406, -0.0010576248168945312, -0.0006866455078125, -0.0001506805419921875, -0.012349128723144531, -0.0004422969068400562, -0.18683242797851562, -0.00035858154296875, -2.47955322265625e-05, 0.0, -0.14294195175170898, -5.841255187988281e-06, -0.007426738739013672, -1.1920928244535389e-07, -0.2554149627685547, -0.0846405029296875, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.2250252068042755, -3.659724825411104e-05, -0.4270162582397461, -9.1552734375e-05, -0.006500244140625, 0.0, -0.013592362403869629, 0.0, -0.0856623649597168, -0.000133514404296875, -1.1444091796875e-05, -0.04647064208984375, -0.000202178955078125, -0.0006256103515625, -3.62396240234375e-05, -0.24418190121650696, -0.027800319716334343, -0.05057357996702194, -7.510157047363464e-06, -0.007999420166015625, -0.008119583129882812, 0.0, -0.880134105682373, -1.1920928244535389e-07, -0.02782440185546875, -0.018260955810546875, -0.05201435089111328, -0.000194549560546875, -0.0002117156982421875, 0.0, -0.019595623016357422, 0.0, -0.06255555152893066, 0.0, -0.021590232849121094, -0.093017578125, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.09742849320173264, -0.00032210350036621094, -0.06015777587890625, -4.38690185546875e-05, -0.0008449554443359375, 0.0, -0.0010924339294433594, 0.0, -0.02257359027862549, -3.4332275390625e-05, -1.71661376953125e-05, -0.14523601531982422, -0.000179290771484375, -0.000316619873046875, -5.14984130859375e-05, -0.1598806530237198, -0.001600026385858655, -0.10245737433433533, -4.529942543740617e-06, -0.0053119659423828125, -0.005337715148925781, 0.0, -0.6278303265571594, -1.1920928244535389e-07, -0.059368133544921875, -0.03145313262939453, -0.0503997802734375, -2.288818359375e-05, -0.0002613067626953125, 0.0, -0.0047702789306640625, -1.1920928244535389e-07, -0.07307040691375732, -1.1920928244535389e-07, -0.02145099639892578, -0.10521984100341797, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.145583838224411, -0.00026297569274902344, -0.04635143280029297, -4.57763671875e-05, -0.00119781494140625, 0.0, -0.0007054805755615234, 0.0, -0.022877097129821777, -4.38690185546875e-05, -1.9073486328125e-05, -0.13454341888427734, -0.000186920166015625, -0.000335693359375, -5.53131103515625e-05, -0.161209836602211, -0.001679538981989026, -0.10554155707359314, -4.529942543740617e-06, -0.0051422119140625, -0.005557060241699219, 0.0, -0.6136114001274109, -1.1920928244535389e-07], "choice_history": [97, 285, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 151, 21, 174, "<UNK>", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 353, 95, 336, "<UNK>", "<EOS>", 18, 167, 0, 282, "m", "<EOS>", 13, 143, 21, 174, "m", "<EOS>", "<UNK>", "<EOS>", 359, 107, 156, 21, 174, "deathrattle", "<EOS>", 13, 143, 21, 174, "minion", "<EOS>", "deathrattle", "<EOS>", 358, 136, 318, 21, 174, "deathrattle", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>", 109, 160, 13, 143, 21, 174, "player", "<EOS>", "<UNK>", "<EOS>", 358, 107, 156, 21, 174, "deathrattle", "<EOS>", 13, 143, 21, 174, "minion", "<EOS>", "deathrattle", "<EOS>", 358, 136, 318, 21, 174, "deathrattle", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>", 109, 160, 13, 143, 21, 174, "player", "<EOS>", "<UNK>", "<EOS>", 358, 107, 156, 21, 174, "deathrattle", "<EOS>", 13, 143, 21, 174, "minion", "<EOS>", "deathrattle", "<EOS>", 358, 136, 318, 21, 174, "deathrattle", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Flare", "hole2": "HUNTER"}], "hole0": "Flare", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"hole1": "<UNK>", "_type": "Template77", "hole0": {"id": "deathrattle", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}], "iter": {"value": {"id": "minion", "_type": "Name"}, "attr": "deathrattle", "_type": "Attribute"}, "_type": "For", "target": {"id": "deathrattle", "_type": "Name"}}, {"body": [{"body": [{"hole1": "<UNK>", "_type": "Template77", "hole0": {"id": "deathrattle", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}], "iter": {"value": {"id": "minion", "_type": "Name"}, "attr": "deathrattle", "_type": "Attribute"}, "_type": "For", "target": {"id": "deathrattle", "_type": "Name"}}], "test": {"value": {"id": "player", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "_type": "If"}], "iter": {"func": {"id": "<UNK>", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call", "keywords": [{"value": {"body": {"value": {"id": "m", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "args": {"_type": "Template49", "hole0": "m"}, "_type": "Lambda"}, "arg": "<UNK>", "_type": "keyword"}]}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}, {"body": [{"body": [{"hole1": "<UNK>", "_type": "Template77", "hole0": {"id": "deathrattle", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}], "iter": {"value": {"id": "minion", "_type": "Name"}, "attr": "deathrattle", "_type": "Attribute"}, "_type": "For", "target": {"id": "deathrattle", "_type": "Name"}}], "test": {"value": {"id": "player", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "_type": "If"}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in <UNK>(player.minions, <UNK>=lambda m: m.<UNK>):\n            for deathrattle in minion.deathrattle:\n                deathrattle.<UNK>(minion)\n            if player.<UNK>:\n                for deathrattle in minion.deathrattle:\n                    deathrattle.<UNK>(minion)\n        if player.<UNK>:\n            for deathrattle in minion.deathrattle:\n                deathrattle.<UNK>(targets)\n", "score": -7.862027276465561, "score_history": [-1.1444091796875e-05, -0.000110626220703125, -0.046863771975040436, -4.1723224057932384e-06, -2.3841855067985307e-07, -3.707408905029297e-05, -3.4927710657939315e-05, -7.05718994140625e-05, -0.0006504058837890625, -2.47955322265625e-05, -2.861018856492592e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.0002579689025878906, -1.1444091796875e-05, -0.0008679628372192383, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -9.655952453613281e-06, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -8.225431884056889e-06, -6.079673767089844e-06, -0.1338663101196289, -5.340576171875e-05, -0.0001068115234375, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0010608433512970805, -4.57763671875e-05, -2.503394853192731e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.045269012451172e-05, -5.960462772236497e-07, -0.3967113494873047, -0.0022945404052734375, -0.000606536865234375, -3.814697265625e-06, -0.0020259618759155273, 0.0, -0.024537086486816406, -0.5418500900268555, -0.008516311645507812, 0.0, -0.0004444122314453125, -2.0503857740550302e-05, -5.7220458984375e-05, -0.0430145263671875, 0.0, -0.008928298950195312, -5.7220458984375e-06, -0.0008920431137084961, 0.0, -0.00797581672668457, -2.0265579223632812e-06, -0.0001678466796875, -0.0002346038818359375, -9.5367431640625e-06, -0.021015524864196777, 0.0, -0.011658668518066406, -0.0010576248168945312, -0.0006866455078125, -0.0001506805419921875, -0.012349128723144531, -0.0004422969068400562, -0.18683242797851562, -0.00035858154296875, -2.47955322265625e-05, 0.0, -0.14294195175170898, -5.841255187988281e-06, -0.007426738739013672, -1.1920928244535389e-07, -0.2554149627685547, -0.0846405029296875, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.2250252068042755, -3.659724825411104e-05, -0.4270162582397461, -9.1552734375e-05, -0.006500244140625, 0.0, -0.013592362403869629, 0.0, -0.0856623649597168, -0.000133514404296875, -1.1444091796875e-05, -0.04647064208984375, -0.000202178955078125, -0.0006256103515625, -3.62396240234375e-05, -0.24418190121650696, -0.027800319716334343, -0.05057357996702194, -7.510157047363464e-06, -0.007999420166015625, -0.008119583129882812, 0.0, -0.880134105682373, -1.1920928244535389e-07, -0.02782440185546875, -0.018260955810546875, -0.05201435089111328, -0.000194549560546875, -0.0002117156982421875, 0.0, -0.019595623016357422, 0.0, -0.06255555152893066, 0.0, -0.021590232849121094, -0.093017578125, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.09742849320173264, -0.00032210350036621094, -0.06015777587890625, -4.38690185546875e-05, -0.0008449554443359375, 0.0, -0.0010924339294433594, 0.0, -0.02257359027862549, -3.4332275390625e-05, -1.71661376953125e-05, -0.14523601531982422, -0.000179290771484375, -0.000316619873046875, -5.14984130859375e-05, -0.1598806530237198, -0.001600026385858655, -0.10245737433433533, -4.529942543740617e-06, -0.0053119659423828125, -0.005337715148925781, 0.0, -0.6278303265571594, -1.1920928244535389e-07, -0.059368133544921875, -0.03145313262939453, -0.0503997802734375, -2.288818359375e-05, -0.0002613067626953125, 0.0, -0.0047702789306640625, -1.1920928244535389e-07, -0.07307040691375732, -1.1920928244535389e-07, -0.02145099639892578, -0.10521984100341797, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.145583838224411, -0.00026297569274902344, -0.04635143280029297, -4.57763671875e-05, -0.00119781494140625, 0.0, -0.0007054805755615234, 0.0, -0.022877097129821777, -4.38690185546875e-05, -1.9073486328125e-05, -0.13454341888427734, -0.000186920166015625, -0.000335693359375, -5.53131103515625e-05, -0.161209836602211, -0.001679538981989026, -0.10554155707359314, -4.529942543740617e-06, -0.0051422119140625, -0.005557060241699219, 0.0, -1.3866873979568481, -6.5565000113565475e-06], "choice_history": [97, 285, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 151, 21, 174, "<UNK>", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 353, 95, 336, "<UNK>", "<EOS>", 18, 167, 0, 282, "m", "<EOS>", 13, 143, 21, 174, "m", "<EOS>", "<UNK>", "<EOS>", 359, 107, 156, 21, 174, "deathrattle", "<EOS>", 13, 143, 21, 174, "minion", "<EOS>", "deathrattle", "<EOS>", 358, 136, 318, 21, 174, "deathrattle", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>", 109, 160, 13, 143, 21, 174, "player", "<EOS>", "<UNK>", "<EOS>", 358, 107, 156, 21, 174, "deathrattle", "<EOS>", 13, 143, 21, 174, "minion", "<EOS>", "deathrattle", "<EOS>", 358, 136, 318, 21, 174, "deathrattle", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>", 109, 160, 13, 143, 21, 174, "player", "<EOS>", "<UNK>", "<EOS>", 358, 107, 156, 21, 174, "deathrattle", "<EOS>", 13, 143, 21, 174, "minion", "<EOS>", "deathrattle", "<EOS>", 358, 136, 318, 21, 174, "deathrattle", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "targets", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Flare", "hole2": "HUNTER"}], "hole0": "Flare", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"hole1": "<UNK>", "_type": "Template77", "hole0": {"id": "deathrattle", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}], "iter": {"value": {"id": "minion", "_type": "Name"}, "attr": "deathrattle", "_type": "Attribute"}, "_type": "For", "target": {"id": "deathrattle", "_type": "Name"}}, {"body": [{"body": [{"hole1": "<UNK>", "_type": "Template77", "hole0": {"id": "deathrattle", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}], "iter": {"value": {"id": "minion", "_type": "Name"}, "attr": "deathrattle", "_type": "Attribute"}, "_type": "For", "target": {"id": "deathrattle", "_type": "Name"}}], "test": {"value": {"id": "player", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "_type": "If"}], "iter": {"func": {"id": "<UNK>", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call", "keywords": [{"value": {"body": {"value": {"id": "m", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "args": {"_type": "Template49", "hole0": "m"}, "_type": "Lambda"}, "arg": "<UNK>", "_type": "keyword"}]}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}, {"body": [{"body": [{"hole1": "<UNK>", "_type": "Template77", "hole0": {"id": "deathrattle", "_type": "Name"}, "hole2": [{"id": "targets", "_type": "Name"}]}], "iter": {"value": {"id": "minion", "_type": "Name"}, "attr": "deathrattle", "_type": "Attribute"}, "_type": "For", "target": {"id": "deathrattle", "_type": "Name"}}], "test": {"value": {"id": "player", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "_type": "If"}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in <UNK>(player.minions, <UNK>=lambda m: m.<UNK>):\n            for deathrattle in minion.deathrattle:\n                deathrattle.<UNK>(minion)\n            if player.<UNK>:\n                for deathrattle in minion.deathrattle:\n                    deathrattle.<UNK>(minion)\n        if player.<UNK>:\n            for deathrattle in minion.deathrattle:\n                minion.<UNK>()\n", "score": -8.44397302432158, "score_history": [-1.1444091796875e-05, -0.000110626220703125, -0.046863771975040436, -4.1723224057932384e-06, -2.3841855067985307e-07, -3.707408905029297e-05, -3.4927710657939315e-05, -7.05718994140625e-05, -0.0006504058837890625, -2.47955322265625e-05, -2.861018856492592e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.0002579689025878906, -1.1444091796875e-05, -0.0008679628372192383, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -9.655952453613281e-06, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -8.225431884056889e-06, -6.079673767089844e-06, -0.1338663101196289, -5.340576171875e-05, -0.0001068115234375, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0010608433512970805, -4.57763671875e-05, -2.503394853192731e-06, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -7.045269012451172e-05, -5.960462772236497e-07, -0.3967113494873047, -0.0022945404052734375, -0.000606536865234375, -3.814697265625e-06, -0.0020259618759155273, 0.0, -0.024537086486816406, -0.5418500900268555, -0.008516311645507812, 0.0, -0.0004444122314453125, -2.0503857740550302e-05, -5.7220458984375e-05, -0.0430145263671875, 0.0, -0.008928298950195312, -5.7220458984375e-06, -0.0008920431137084961, 0.0, -0.00797581672668457, -2.0265579223632812e-06, -0.0001678466796875, -0.0002346038818359375, -9.5367431640625e-06, -0.021015524864196777, 0.0, -0.011658668518066406, -0.0010576248168945312, -0.0006866455078125, -0.0001506805419921875, -0.012349128723144531, -0.0004422969068400562, -0.18683242797851562, -0.00035858154296875, -2.47955322265625e-05, 0.0, -0.14294195175170898, -5.841255187988281e-06, -0.007426738739013672, -1.1920928244535389e-07, -0.2554149627685547, -0.0846405029296875, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.2250252068042755, -3.659724825411104e-05, -0.4270162582397461, -9.1552734375e-05, -0.006500244140625, 0.0, -0.013592362403869629, 0.0, -0.0856623649597168, -0.000133514404296875, -1.1444091796875e-05, -0.04647064208984375, -0.000202178955078125, -0.0006256103515625, -3.62396240234375e-05, -0.24418190121650696, -0.027800319716334343, -0.05057357996702194, -7.510157047363464e-06, -0.007999420166015625, -0.008119583129882812, 0.0, -0.880134105682373, -1.1920928244535389e-07, -0.02782440185546875, -0.018260955810546875, -0.05201435089111328, -0.000194549560546875, -0.0002117156982421875, 0.0, -0.019595623016357422, 0.0, -0.06255555152893066, 0.0, -0.021590232849121094, -0.093017578125, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.09742849320173264, -0.00032210350036621094, -0.06015777587890625, -4.38690185546875e-05, -0.0008449554443359375, 0.0, -0.0010924339294433594, 0.0, -0.02257359027862549, -3.4332275390625e-05, -1.71661376953125e-05, -0.14523601531982422, -0.000179290771484375, -0.000316619873046875, -5.14984130859375e-05, -0.1598806530237198, -0.001600026385858655, -0.10245737433433533, -4.529942543740617e-06, -0.0053119659423828125, -0.005337715148925781, 0.0, -0.6278303265571594, -1.1920928244535389e-07, -0.059368133544921875, -0.03145313262939453, -0.0503997802734375, -2.288818359375e-05, -0.0002613067626953125, 0.0, -0.0047702789306640625, -1.1920928244535389e-07, -0.07307040691375732, -1.1920928244535389e-07, -0.02145099639892578, -0.10521984100341797, -1.52587890625e-05, -3.24249267578125e-05, 0.0, -0.145583838224411, -0.00026297569274902344, -0.04635143280029297, -4.57763671875e-05, -0.00119781494140625, 0.0, -0.0007054805755615234, 0.0, -0.022877097129821777, -4.38690185546875e-05, -1.9073486328125e-05, -2.1177330017089844, -0.001216888427734375, -0.040207862854003906, -9.5367431640625e-06, -8.7738037109375e-05, 0.0, -0.009265542030334473, -1.1920928244535389e-07, -0.2143699675798416, -5.125998541188892e-06], "choice_history": [97, 285, "Flare", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "minion", "<EOS>", 16, 151, 21, 174, "<UNK>", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 353, 95, 336, "<UNK>", "<EOS>", 18, 167, 0, 282, "m", "<EOS>", 13, 143, 21, 174, "m", "<EOS>", "<UNK>", "<EOS>", 359, 107, 156, 21, 174, "deathrattle", "<EOS>", 13, 143, 21, 174, "minion", "<EOS>", "deathrattle", "<EOS>", 358, 136, 318, 21, 174, "deathrattle", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>", 109, 160, 13, 143, 21, 174, "player", "<EOS>", "<UNK>", "<EOS>", 358, 107, 156, 21, 174, "deathrattle", "<EOS>", 13, 143, 21, 174, "minion", "<EOS>", "deathrattle", "<EOS>", 358, 136, 318, 21, 174, "deathrattle", "<EOS>", "<UNK>", "<EOS>", 346, 50, 174, "minion", "<EOS>", 109, 160, 13, 143, 21, 174, "player", "<EOS>", "<UNK>", "<EOS>", 358, 107, 156, 21, 174, "deathrattle", "<EOS>", 13, 143, 21, 174, "minion", "<EOS>", "deathrattle", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "minion", "<EOS>", "<UNK>", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Flare", "hole2": "HUNTER"}], "hole0": "Flare", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"hole1": "<UNK>", "_type": "Template77", "hole0": {"id": "deathrattle", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}], "iter": {"value": {"id": "minion", "_type": "Name"}, "attr": "deathrattle", "_type": "Attribute"}, "_type": "For", "target": {"id": "deathrattle", "_type": "Name"}}, {"body": [{"body": [{"hole1": "<UNK>", "_type": "Template77", "hole0": {"id": "deathrattle", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}]}], "iter": {"value": {"id": "minion", "_type": "Name"}, "attr": "deathrattle", "_type": "Attribute"}, "_type": "For", "target": {"id": "deathrattle", "_type": "Name"}}], "test": {"value": {"id": "player", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "_type": "If"}], "iter": {"func": {"id": "<UNK>", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call", "keywords": [{"value": {"body": {"value": {"id": "m", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "args": {"_type": "Template49", "hole0": "m"}, "_type": "Lambda"}, "arg": "<UNK>", "_type": "keyword"}]}, "_type": "For", "target": {"id": "minion", "_type": "Name"}}, {"body": [{"body": [{"value": {"hole1": "<UNK>", "_type": "Template76", "hole0": {"id": "minion", "_type": "Name"}}, "_type": "Expr"}], "iter": {"value": {"id": "minion", "_type": "Name"}, "attr": "deathrattle", "_type": "Attribute"}, "_type": "For", "target": {"id": "deathrattle", "_type": "Name"}}], "test": {"value": {"id": "player", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "_type": "If"}]}}]}
{"gold_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(And(IsHero(),\n            TargetIsMinion())), [ActionTag(IncreaseDurability(),\n            WeaponSelector()), ActionTag(IncreaseWeaponAttack(-1),\n            WeaponSelector()), ActionTag(Give(BuffUntil(ChangeAttack(1),\n            AttackCompleted())), HeroSelector())])])\n", "beams": [{"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1)\n", "score": -1.643665913533816, "score_history": [-3.62396240234375e-05, -6.29425048828125e-05, -0.0001419681793777272, -6.00810453761369e-05, -6.496880087070167e-05, -0.00012266510748304427, -2.861018856492592e-06, -3.4332275390625e-05, -0.098297119140625, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0007961307419463992, 0.0, -0.003314495086669922, -5.7220458984375e-06, -9.715557098388672e-05, 0.0, -0.035390257835388184, 0.0, -2.1219235350145027e-05, 0.0, -1.9073486328125e-06, -0.0048542022705078125, -1.0170230865478516, -6.306171417236328e-05, -0.00010978634236380458, -3.814697265625e-05, -1.156323378381785e-05, -0.4830758273601532, -1.1920928244535389e-07], "choice_history": [97, 283, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template68", "hole0": "Weapon", "hole2": 1}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Gorehowl", "hole2": "WARRIOR"}], "hole0": "Gorehowl", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 7)\n", "score": -2.120056781959164, "score_history": [-3.62396240234375e-05, -6.29425048828125e-05, -0.0001419681793777272, -6.00810453761369e-05, -6.496880087070167e-05, -0.00012266510748304427, -2.861018856492592e-06, -3.4332275390625e-05, -0.098297119140625, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0007961307419463992, 0.0, -0.003314495086669922, -5.7220458984375e-06, -9.715557098388672e-05, 0.0, -0.035390257835388184, 0.0, -2.1219235350145027e-05, 0.0, -1.9073486328125e-06, -0.0048542022705078125, -1.0170230865478516, -6.306171417236328e-05, -0.00010978634236380458, -3.814697265625e-05, -1.156323378381785e-05, -0.9594665765762329, -2.3841855067985307e-07], "choice_history": [97, 283, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "7", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template68", "hole0": "Weapon", "hole2": 7}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Gorehowl", "hole2": "WARRIOR"}], "hole0": "Gorehowl", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Heal(1), MinionSelector()))])\n", "score": -3.2457742978995086, "score_history": [-3.62396240234375e-05, -6.29425048828125e-05, -0.0001419681793777272, -6.00810453761369e-05, -6.496880087070167e-05, -0.00012266510748304427, -2.861018856492592e-06, -3.4332275390625e-05, -0.098297119140625, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0007961307419463992, 0.0, -0.003314495086669922, -5.7220458984375e-06, -9.715557098388672e-05, 0.0, -0.035390257835388184, 0.0, -2.1219235350145027e-05, 0.0, -1.9073486328125e-06, -0.0048542022705078125, -0.45214176177978516, -6.079665126890177e-06, -3.2066898711491376e-05, -4.1961669921875e-05, -9.298280929215252e-06, -0.05327313393354416, -1.1920928244535389e-07, -0.036009788513183594, -0.27981090545654297, -0.4637260437011719, -0.002773790620267391, -0.00037300586700439453, 0.0, 0.0, -0.056151390075683594, -1.33514404296875e-05, -0.0027031884528696537, -0.04852832853794098, -3.933906555175781e-06, -1.9073486328125e-06, -0.6064424514770508, -0.350311279296875, -0.6134899854660034, -6.0796710386057384e-06, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0009384304285049438, -6.318072337307967e-06, -0.13556265830993652, -4.029273986816406e-05, 0.0], "choice_history": [97, 283, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 353, 93, 276, "Character", "Attack", "<EOS>", 346, 88, 325, "Is", "Hero", "<EOS>", 346, 64, 270, "Heal", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "IsHero"}], "_type": "Template45", "hole0": "CharacterAttack", "hole2": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": "MinionSelector", "_type": "Template44", "hole0": "Heal"}]}], "_type": "Template68", "hole0": "Weapon", "hole2": 1}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Gorehowl", "hole2": "WARRIOR"}], "hole0": "Gorehowl", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(ChangeTarget(CharacterSelector(NotCurrentTarget(),\n            EnemyPlayer(), RandomPicker())), HeroSelector(), And(OneIn(2),\n            OpponentMinionCountIsGreaterThan(0))))])\n", "score": -3.33609520263461, "score_history": [-3.62396240234375e-05, -6.29425048828125e-05, -0.0001419681793777272, -6.00810453761369e-05, -6.496880087070167e-05, -0.00012266510748304427, -2.861018856492592e-06, -3.4332275390625e-05, -0.098297119140625, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0007961307419463992, 0.0, -0.003314495086669922, -5.7220458984375e-06, -9.715557098388672e-05, 0.0, -0.035390257835388184, 0.0, -2.1219235350145027e-05, 0.0, -1.9073486328125e-06, -0.0048542022705078125, -0.45214176177978516, -6.079665126890177e-06, -3.2066898711491376e-05, -4.1961669921875e-05, -9.298280929215252e-06, -0.05327313393354416, -1.1920928244535389e-07, -0.036009788513183594, -0.27981090545654297, -0.4637260437011719, -0.002773790620267391, -0.00037300586700439453, 0.0, 0.0, -0.056151390075683594, -1.33514404296875e-05, -0.0027031884528696537, -0.04852832853794098, -3.933906555175781e-06, -1.9073486328125e-06, -1.0035057067871094, -0.03538799285888672, -0.0005500316619873047, -0.0003837346739601344, -3.4451466490281746e-05, -0.004277467727661133, -0.008799314498901367, -9.655952453613281e-06, -1.9073486328125e-06, -0.01715087890625, -0.0036325454711914062, -0.004350543022155762, -0.0005062767304480076, 0.0, -0.014831828884780407, -0.008242594078183174, -0.0006631609867326915, -6.103515625e-05, -0.001121995272114873, -0.00070953369140625, 0.0, -0.0017640433507040143, -7.605551945744082e-05, -1.6689286894688848e-06, -0.41004252433776855, -3.0517578125e-05, 0.0, -0.0017720460891723633, -0.0004103183455299586, -0.0001430511474609375, -0.0034513473510742188, -9.5367431640625e-05, -0.12787854671478271, -0.0041107600554823875, -9.5367431640625e-06, -0.05312161520123482, -1.1920928244535389e-07, -0.013788223266601562, -4.76837158203125e-05, -0.026309700682759285, -0.01612222008407116, -0.000525355339050293, -0.005066275596618652, -0.023271679878234863, -0.0032100677490234375, -0.0003572702407836914, -0.0013184533454477787, -5.7220458984375e-06], "choice_history": [97, 283, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 353, 93, 276, "Character", "Attack", "<EOS>", 346, 88, 325, "Is", "Hero", "<EOS>", 346, 61, 246, "Action", "Tag", "<EOS>", "Change", "Target", "<EOS>", 346, 61, 239, "Character", "Selector", "<EOS>", "Not", "Current", "Target", "<EOS>", "Enemy", "Player", "<EOS>", "Random", "Picker", "<EOS>", "Hero", "Selector", "<EOS>", "And", "<EOS>", 347, 84, 315, "One", "In", "<EOS>", "2", "<EOS>", 84, 315, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", "0", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "IsHero"}], "_type": "Template45", "hole0": "CharacterAttack", "hole2": [{"hole7": [{"hole1": 2, "_type": "Template74", "hole0": "OneIn"}, {"hole1": 0, "_type": "Template74", "hole0": "OpponentMinionCountIsGreaterThan"}], "hole6": "And", "hole2": [{"hole1": "NotCurrentTarget", "hole3": "EnemyPlayer", "_type": "Template39", "hole0": "CharacterSelector", "hole6": "RandomPicker"}], "hole0": "ActionTag", "_type": "Template39", "hole3": "HeroSelector", "hole1": "ChangeTarget"}]}], "_type": "Template68", "hole0": "Weapon", "hole2": 1}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Gorehowl", "hole2": "WARRIOR"}], "hole0": "Gorehowl", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(MinionSummoned(), ActionTag(\n            Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]),\n            SelfSelector())), Effect(MinionSummoned(), ActionTag(\n            <UNK>Durability(), WeaponSelector()))])\n", "score": -3.8050022276351996, "score_history": [-3.62396240234375e-05, -6.29425048828125e-05, -0.0001419681793777272, -6.00810453761369e-05, -6.496880087070167e-05, -0.00012266510748304427, -2.861018856492592e-06, -3.4332275390625e-05, -0.098297119140625, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0007961307419463992, 0.0, -0.003314495086669922, -5.7220458984375e-06, -9.715557098388672e-05, 0.0, -0.035390257835388184, 0.0, -2.1219235350145027e-05, 0.0, -1.9073486328125e-06, -0.0048542022705078125, -0.45214176177978516, -6.079665126890177e-06, -3.2066898711491376e-05, -4.1961669921875e-05, -9.298280929215252e-06, -0.05327313393354416, -1.1920928244535389e-07, -0.036009788513183594, -0.27981090545654297, -1.3813810348510742, -0.07632079720497131, -0.036799073219299316, -0.0003414124948903918, -1.9073486328125e-06, -0.0005960464477539062, -6.4849853515625e-05, -8.392333984375e-05, -1.9073486328125e-06, -0.028944214805960655, -0.004892706871032715, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0097503662109375, -0.0004367828369140625, -1.9073420844506472e-05, -0.012457966804504395, -7.62939453125e-06, -0.000849480798933655, 0.0, -0.00043702125549316406, -0.0007231235504150391, -1.1920928244535389e-07, -0.0046835048124194145, 0.0, -0.0003185272216796875, -3.62396240234375e-05, -0.2796121835708618, -1.6689286894688848e-06, 0.0, -3.0517578125e-05, -0.018011093139648438, -0.22977161407470703, -0.0009056260460056365, -0.01336443331092596, -0.0030202739872038364, -0.5767249464988708, -0.15789884328842163, -0.0010945764370262623, -0.0003777898382395506, -0.00035446760011836886, -1.2159273865108844e-05], "choice_history": [97, 283, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 353, 93, 275, "Minion", "Summoned", "<EOS>", 346, 45, 150, 21, 174, "Action", "Tag", "<EOS>", 347, 55, 215, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 346, 57, 226, "Minion", "Summoned", "<EOS>", "<UNK>", "Durability", "<EOS>", "Weapon", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": [{"hole2": [{"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 1, "hole3": 1, "_type": "Template21", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Call"}], "hole3": [{"hole1": "<UNK>Durability", "_type": "Template30", "hole0": "MinionSummoned", "hole4": "WeaponSelector"}], "_type": "Template45", "hole0": "MinionSummoned"}], "_type": "Template68", "hole0": "Weapon", "hole2": 1}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Gorehowl", "hole2": "WARRIOR"}], "hole0": "Gorehowl", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(ChangeTarget(CharacterSelector(NotCurrentTarget(),\n            EnemyPlayer(), RandomPicker())), SelfSelector(), And(OneIn(2),\n            OpponentMinionCountIsGreaterThan(0))))])\n", "score": -4.450443166141206, "score_history": [-3.62396240234375e-05, -6.29425048828125e-05, -0.0001419681793777272, -6.00810453761369e-05, -6.496880087070167e-05, -0.00012266510748304427, -2.861018856492592e-06, -3.4332275390625e-05, -0.098297119140625, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0007961307419463992, 0.0, -0.003314495086669922, -5.7220458984375e-06, -9.715557098388672e-05, 0.0, -0.035390257835388184, 0.0, -2.1219235350145027e-05, 0.0, -1.9073486328125e-06, -0.0048542022705078125, -0.45214176177978516, -6.079665126890177e-06, -3.2066898711491376e-05, -4.1961669921875e-05, -9.298280929215252e-06, -0.05327313393354416, -1.1920928244535389e-07, -0.036009788513183594, -0.27981090545654297, -0.4637260437011719, -0.002773790620267391, -0.00037300586700439453, 0.0, 0.0, -0.056151390075683594, -1.33514404296875e-05, -0.0027031884528696537, -0.04852832853794098, -3.933906555175781e-06, -1.9073486328125e-06, -1.0035057067871094, -0.03538799285888672, -0.0005500316619873047, -0.0003837346739601344, -3.4451466490281746e-05, -0.004277467727661133, -0.008799314498901367, -9.655952453613281e-06, -1.9073486328125e-06, -0.01715087890625, -0.0036325454711914062, -0.004350543022155762, -0.0005062767304480076, 0.0, -0.014831828884780407, -0.008242594078183174, -0.0006631609867326915, -6.103515625e-05, -0.001121995272114873, -0.00070953369140625, 0.0, -0.0017640433507040143, -7.605551945744082e-05, -1.6689286894688848e-06, -1.4916236400604248, -1.9073486328125e-06, 0.0, -0.008005738258361816, -0.0006538629531860352, -7.05718994140625e-05, -0.0032682418823242188, -0.000133514404296875, -0.12138281762599945, -0.003834769129753113, -5.7220458984375e-06, -0.09104501456022263, 0.0, -0.007808685302734375, -5.340576171875e-05, -0.0227053239941597, -0.015563929453492165, -0.000548243522644043, -0.005474448204040527, -0.028125762939453125, -0.003482818603515625, -0.0004336833953857422, -0.0012085422640666366, -5.7220458984375e-06], "choice_history": [97, 283, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 353, 93, 276, "Character", "Attack", "<EOS>", 346, 88, 325, "Is", "Hero", "<EOS>", 346, 61, 246, "Action", "Tag", "<EOS>", "Change", "Target", "<EOS>", 346, 61, 239, "Character", "Selector", "<EOS>", "Not", "Current", "Target", "<EOS>", "Enemy", "Player", "<EOS>", "Random", "Picker", "<EOS>", "Self", "Selector", "<EOS>", "And", "<EOS>", 347, 84, 315, "One", "In", "<EOS>", "2", "<EOS>", 84, 315, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", "0", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "IsHero"}], "_type": "Template45", "hole0": "CharacterAttack", "hole2": [{"hole7": [{"hole1": 2, "_type": "Template74", "hole0": "OneIn"}, {"hole1": 0, "_type": "Template74", "hole0": "OpponentMinionCountIsGreaterThan"}], "hole6": "And", "hole2": [{"hole1": "NotCurrentTarget", "hole3": "EnemyPlayer", "_type": "Template39", "hole0": "CharacterSelector", "hole6": "RandomPicker"}], "hole0": "ActionTag", "_type": "Template39", "hole3": "SelfSelector", "hole1": "ChangeTarget"}]}], "_type": "Template68", "hole0": "Weapon", "hole2": 1}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Gorehowl", "hole2": "WARRIOR"}], "hole0": "Gorehowl", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score": -4.84234912589632, "score_history": [-3.62396240234375e-05, -6.29425048828125e-05, -0.0001419681793777272, -6.00810453761369e-05, -6.496880087070167e-05, -0.00012266510748304427, -2.861018856492592e-06, -3.4332275390625e-05, -0.098297119140625, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0007961307419463992, 0.0, -0.003314495086669922, -5.7220458984375e-06, -9.715557098388672e-05, 0.0, -0.035390257835388184, 0.0, -2.1219235350145027e-05, 0.0, -1.9073486328125e-06, -0.0048542022705078125, -0.45214176177978516, -6.079665126890177e-06, -3.2066898711491376e-05, -4.1961669921875e-05, -9.298280929215252e-06, -0.05327313393354416, -1.1920928244535389e-07, -0.036009788513183594, -0.27981090545654297, -0.4637260437011719, -0.002773790620267391, -0.00037300586700439453, 0.0, 0.0, -0.056151390075683594, -1.33514404296875e-05, -0.0027031884528696537, -0.04852832853794098, -3.933906555175781e-06, -1.9073486328125e-06, -3.0193734169006348, -0.0056552886962890625, -3.3497806725790724e-05, -5.3882547945249826e-05, -0.00055694580078125, 0.0, -0.1491718292236328, -0.0003477334976196289, -1.1920928244535389e-07, -0.0003376007080078125, -6.103515625e-05, 0.0, -0.019198119640350342, 0.0, -0.10860741138458252, -2.3841855067985307e-07, -7.62939453125e-06], "choice_history": [97, 283, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 353, 93, 276, "Character", "Attack", "<EOS>", 346, 88, 325, "Is", "Hero", "<EOS>", 346, 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "IsHero"}], "_type": "Template45", "hole0": "CharacterAttack", "hole2": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}]}], "_type": "Template68", "hole0": "Weapon", "hole2": 1}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Gorehowl", "hole2": "WARRIOR"}], "hole0": "Gorehowl", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(AddCard(1), MinionSelector()))])\n", "score": -5.069973870126873, "score_history": [-3.62396240234375e-05, -6.29425048828125e-05, -0.0001419681793777272, -6.00810453761369e-05, -6.496880087070167e-05, -0.00012266510748304427, -2.861018856492592e-06, -3.4332275390625e-05, -0.098297119140625, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0007961307419463992, 0.0, -0.003314495086669922, -5.7220458984375e-06, -9.715557098388672e-05, 0.0, -0.035390257835388184, 0.0, -2.1219235350145027e-05, 0.0, -1.9073486328125e-06, -0.0048542022705078125, -0.45214176177978516, -6.079665126890177e-06, -3.2066898711491376e-05, -4.1961669921875e-05, -9.298280929215252e-06, -0.05327313393354416, -1.1920928244535389e-07, -0.036009788513183594, -0.27981090545654297, -0.4637260437011719, -0.002773790620267391, -0.00037300586700439453, 0.0, 0.0, -0.056151390075683594, -1.33514404296875e-05, -0.0027031884528696537, -0.04852832853794098, -3.933906555175781e-06, -1.9073486328125e-06, -0.6064424514770508, -0.350311279296875, -1.2041701078414917, -0.00027358531951904297, -8.70227722771233e-06, -0.0006160736083984375, -1.3060369491577148, -1.33514404296875e-05, -0.008517533540725708, -1.1920928244535389e-07, -0.05458390712738037, -5.543231964111328e-05, 0.0], "choice_history": [97, 283, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 353, 93, 276, "Character", "Attack", "<EOS>", 346, 88, 325, "Is", "Hero", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "IsHero"}], "_type": "Template45", "hole0": "CharacterAttack", "hole2": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": "MinionSelector", "_type": "Template44", "hole0": "AddCard"}]}], "_type": "Template68", "hole0": "Weapon", "hole2": 1}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Gorehowl", "hole2": "WARRIOR"}], "hole0": "Gorehowl", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(MinionSummoned(), ActionTag(\n            Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]),\n            TargetSelector())), Effect(MinionSummoned(), ActionTag(\n            <UNK>Durability(), WeaponSelector()))])\n", "score": -5.126708204243172, "score_history": [-3.62396240234375e-05, -6.29425048828125e-05, -0.0001419681793777272, -6.00810453761369e-05, -6.496880087070167e-05, -0.00012266510748304427, -2.861018856492592e-06, -3.4332275390625e-05, -0.098297119140625, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0007961307419463992, 0.0, -0.003314495086669922, -5.7220458984375e-06, -9.715557098388672e-05, 0.0, -0.035390257835388184, 0.0, -2.1219235350145027e-05, 0.0, -1.9073486328125e-06, -0.0048542022705078125, -0.45214176177978516, -6.079665126890177e-06, -3.2066898711491376e-05, -4.1961669921875e-05, -9.298280929215252e-06, -0.05327313393354416, -1.1920928244535389e-07, -0.036009788513183594, -0.27981090545654297, -1.3813810348510742, -0.07632079720497131, -0.036799073219299316, -0.0003414124948903918, -1.9073486328125e-06, -0.0005960464477539062, -6.4849853515625e-05, -8.392333984375e-05, -1.9073486328125e-06, -0.028944214805960655, -0.004892706871032715, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0097503662109375, -0.0004367828369140625, -1.9073420844506472e-05, -0.012457966804504395, -7.62939453125e-06, -0.000849480798933655, 0.0, -0.00043702125549316406, -0.0007231235504150391, -1.1920928244535389e-07, -0.0046835048124194145, 0.0, -0.0003185272216796875, -3.62396240234375e-05, -1.5132375955581665, -1.8596589143271558e-05, 0.0, -4.00543212890625e-05, -0.01700592041015625, -0.3325033187866211, -0.0008123487932607532, -0.01135241985321045, -0.0024118064902722836, -0.5708819031715393, -0.1531733274459839, -0.0008546037715859711, -0.0002566085022408515, -0.0003306331636849791, -7.033323527139146e-06], "choice_history": [97, 283, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 353, 93, 275, "Minion", "Summoned", "<EOS>", 346, 45, 150, 21, 174, "Action", "Tag", "<EOS>", 347, 55, 215, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 88, 325, "Target", "Selector", "<EOS>", 346, 57, 226, "Minion", "Summoned", "<EOS>", "<UNK>", "Durability", "<EOS>", "Weapon", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": [{"hole2": [{"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 1, "hole3": 1, "_type": "Template21", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}, {"_type": "Template79", "hole0": "TargetSelector"}], "_type": "Call"}], "hole3": [{"hole1": "<UNK>Durability", "_type": "Template30", "hole0": "MinionSummoned", "hole4": "WeaponSelector"}], "_type": "Template45", "hole0": "MinionSummoned"}], "_type": "Template68", "hole0": "Weapon", "hole2": 1}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Gorehowl", "hole2": "WARRIOR"}], "hole0": "Gorehowl", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, stealth=True, effects=[Effect(Attack(),\n            ActionTag(ChangeTarget(CharacterSelector(NotCurrentTarget(),\n            EnemyPlayer(), RandomPicker())), SelfSelector(), And(OneIn(2),\n            OpponentMinionCountIsGreaterThan(0))))])\n", "score": -5.1841395209163394, "score_history": [-3.62396240234375e-05, -6.29425048828125e-05, -0.0001419681793777272, -6.00810453761369e-05, -6.496880087070167e-05, -0.00012266510748304427, -2.861018856492592e-06, -3.4332275390625e-05, -0.098297119140625, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0007961307419463992, 0.0, -0.003314495086669922, -5.7220458984375e-06, -9.715557098388672e-05, 0.0, -0.035390257835388184, 0.0, -2.1219235350145027e-05, 0.0, -1.9073486328125e-06, -0.0048542022705078125, -0.45214176177978516, -6.079665126890177e-06, -3.2066898711491376e-05, -4.1961669921875e-05, -9.298280929215252e-06, -0.05327313393354416, -1.1920928244535389e-07, -3.3683996200561523, -0.0056247711181640625, -2.09808349609375e-05, -0.11551201343536377, -5.7220458984375e-06, -0.0004596710205078125, -1.52587890625e-05, -0.0012099742889404297, 0.0, -0.35463714599609375, -0.005024909973144531, -0.026292050257325172, -3.0517578125e-05, -2.288818359375e-05, -0.038028717041015625, -0.003936767578125, -0.0007544755935668945, -0.0020813941955566406, -8.344649540958926e-05, -0.0016446113586425781, -0.0018144845962524414, -1.3470649719238281e-05, -3.814697265625e-06, -0.026174545288085938, -0.0022764205932617188, -0.002635955810546875, -0.000595636258367449, 0.0, -0.011475314386188984, -0.006731025408953428, -0.0008212327375076711, -7.05718994140625e-05, -0.00107395404484123, -0.000560760498046875, 0.0, -0.0017635782714933157, -6.67572021484375e-05, -1.5497195136049413e-06, -0.18368029594421387, 0.0, 0.0, -0.004637598991394043, -0.0005869865417480469, -3.24249267578125e-05, -0.00434112548828125, -0.000179290771484375, -0.19616460800170898, -0.002992590656504035, -7.62939453125e-06, -0.07208462059497833, 0.0, -0.010105133056640625, -5.14984130859375e-05, -0.022019866853952408, -0.01590682566165924, -0.0005577802658081055, -0.005365729331970215, -0.031711578369140625, -0.0033893585205078125, -0.0004298686981201172, -0.0011762368958443403, -5.7220458984375e-06], "choice_history": [97, 283, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 354, 95, 336, "stealth", "<EOS>", 22, 175, "True", "<EOS>", 93, 274, "Attack", "<EOS>", 346, 61, 246, "Action", "Tag", "<EOS>", "Change", "Target", "<EOS>", 346, 61, 239, "Character", "Selector", "<EOS>", "Not", "Current", "Target", "<EOS>", "Enemy", "Player", "<EOS>", "Random", "Picker", "<EOS>", "Self", "Selector", "<EOS>", "And", "<EOS>", 347, 84, 315, "One", "In", "<EOS>", "2", "<EOS>", 84, 315, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", "0", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "stealth", "_type": "keyword"}, {"hole2": [{"hole7": [{"hole1": 2, "_type": "Template74", "hole0": "OneIn"}, {"hole1": 0, "_type": "Template74", "hole0": "OpponentMinionCountIsGreaterThan"}], "hole6": "And", "hole2": [{"hole1": "NotCurrentTarget", "hole3": "EnemyPlayer", "_type": "Template39", "hole0": "CharacterSelector", "hole6": "RandomPicker"}], "hole0": "ActionTag", "_type": "Template39", "hole3": "SelfSelector", "hole1": "ChangeTarget"}], "_type": "Template45", "hole0": "Attack"}], "_type": "Template68", "hole0": "Weapon", "hole2": 1}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Gorehowl", "hole2": "WARRIOR"}], "hole0": "Gorehowl", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(TurnEnded(), ActionTag(Damage(1\n            ), SelfSelector())), Effect(TurnEnded(), ActionTag(Summon(\n            GorehowlGorehowl()), PlayerSelector()))])\n", "score": -5.541616829422189, "score_history": [-3.62396240234375e-05, -6.29425048828125e-05, -0.0001419681793777272, -6.00810453761369e-05, -6.496880087070167e-05, -0.00012266510748304427, -2.861018856492592e-06, -3.4332275390625e-05, -0.098297119140625, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0007961307419463992, 0.0, -0.003314495086669922, -5.7220458984375e-06, -9.715557098388672e-05, 0.0, -0.035390257835388184, 0.0, -2.1219235350145027e-05, 0.0, -1.9073486328125e-06, -0.0048542022705078125, -0.45214176177978516, -6.079665126890177e-06, -3.2066898711491376e-05, -4.1961669921875e-05, -9.298280929215252e-06, -0.05327313393354416, -1.1920928244535389e-07, -0.036009788513183594, -1.5037994384765625, -0.3854379653930664, -0.2361469864845276, -0.004146218299865723, -1.5497195136049413e-06, -0.11756643652915955, -0.0003069241065531969, -3.814697265625e-06, -0.0003643035888671875, 0.0, -0.019069574773311615, -3.576278118089249e-07, -0.3739593029022217, -5.960462772236497e-07, -6.306171417236328e-05, -3.0517578125e-05, -0.005015373229980469, -0.11015033721923828, -0.0010823006741702557, -0.0005385872209444642, -5.841253368998878e-06, -0.4048963785171509, -0.00047338721924461424, -0.000492095947265625, -0.006793975830078125, 0.0, -0.5325202941894531, -0.6989054083824158, -0.0010632396442815661, -0.4539043605327606, -1.3232229321147315e-05, -6.437291176553117e-06], "choice_history": [97, 283, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 353, 90, 220, "Turn", "Ended", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>", 346, 57, 228, "Turn", "Ended", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Gorehowl", "Gorehowl", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": [{"hole6": [{"hole4": "PlayerSelector", "hole1": "Summon", "_type": "Template30", "hole0": "TurnEnded", "hole2": [{"_type": "Template79", "hole0": "GorehowlGorehowl"}]}], "hole2": [{"n": 1, "_type": "Num"}], "hole0": "TurnEnded", "_type": "Template25", "hole3": "SelfSelector", "hole1": "Damage"}], "_type": "Template68", "hole0": "Weapon", "hole2": 1}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Gorehowl", "hole2": "WARRIOR"}], "hole0": "Gorehowl", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(TurnEnded(), ActionTag(Damage(1\n            ), SelfSelector())), Effect(TurnEnded(), ActionTag(Summon(\n            GorehowlGorehowl()), HeroSelector()))])\n", "score": -6.10292273978245, "score_history": [-3.62396240234375e-05, -6.29425048828125e-05, -0.0001419681793777272, -6.00810453761369e-05, -6.496880087070167e-05, -0.00012266510748304427, -2.861018856492592e-06, -3.4332275390625e-05, -0.098297119140625, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0007961307419463992, 0.0, -0.003314495086669922, -5.7220458984375e-06, -9.715557098388672e-05, 0.0, -0.035390257835388184, 0.0, -2.1219235350145027e-05, 0.0, -1.9073486328125e-06, -0.0048542022705078125, -0.45214176177978516, -6.079665126890177e-06, -3.2066898711491376e-05, -4.1961669921875e-05, -9.298280929215252e-06, -0.05327313393354416, -1.1920928244535389e-07, -0.036009788513183594, -1.5037994384765625, -0.3854379653930664, -0.2361469864845276, -0.004146218299865723, -1.5497195136049413e-06, -0.11756643652915955, -0.0003069241065531969, -3.814697265625e-06, -0.0003643035888671875, 0.0, -0.019069574773311615, -3.576278118089249e-07, -0.3739593029022217, -5.960462772236497e-07, -6.306171417236328e-05, -3.0517578125e-05, -0.005015373229980469, -0.11015033721923828, -0.0010823006741702557, -0.0005385872209444642, -5.841253368998878e-06, -0.4048963785171509, -0.00047338721924461424, -0.000492095947265625, -0.006793975830078125, 0.0, -0.5325202941894531, -0.6989054083824158, -0.0010632396442815661, -1.0152170658111572, -1.2874602361989673e-05, 0.0], "choice_history": [97, 283, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 353, 90, 220, "Turn", "Ended", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>", 346, 57, 228, "Turn", "Ended", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Gorehowl", "Gorehowl", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": [{"hole6": [{"hole4": "HeroSelector", "hole1": "Summon", "_type": "Template30", "hole0": "TurnEnded", "hole2": [{"_type": "Template79", "hole0": "GorehowlGorehowl"}]}], "hole2": [{"n": 1, "_type": "Num"}], "hole0": "TurnEnded", "_type": "Template25", "hole3": "SelfSelector", "hole1": "Damage"}], "_type": "Template68", "hole0": "Weapon", "hole2": 1}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Gorehowl", "hole2": "WARRIOR"}], "hole0": "Gorehowl", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(AddCard(CardQuery(conditions=[ManaDurability(\n            Attribute('attack', WeaponSelector())), IsWeapon()])),\n            MinionSelector()))])\n", "score": -6.211542156172975, "score_history": [-3.62396240234375e-05, -6.29425048828125e-05, -0.0001419681793777272, -6.00810453761369e-05, -6.496880087070167e-05, -0.00012266510748304427, -2.861018856492592e-06, -3.4332275390625e-05, -0.098297119140625, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0007961307419463992, 0.0, -0.003314495086669922, -5.7220458984375e-06, -9.715557098388672e-05, 0.0, -0.035390257835388184, 0.0, -2.1219235350145027e-05, 0.0, -1.9073486328125e-06, -0.0048542022705078125, -0.45214176177978516, -6.079665126890177e-06, -3.2066898711491376e-05, -4.1961669921875e-05, -9.298280929215252e-06, -0.05327313393354416, -1.1920928244535389e-07, -0.036009788513183594, -0.27981090545654297, -0.4637260437011719, -0.002773790620267391, -0.00037300586700439453, 0.0, 0.0, -0.056151390075683594, -1.33514404296875e-05, -0.0027031884528696537, -0.04852832853794098, -3.933906555175781e-06, -1.9073486328125e-06, -0.6064424514770508, -0.350311279296875, -1.2041701078414917, -0.00027358531951904297, -8.70227722771233e-06, -0.0006160736083984375, -0.3207874298095703, -0.03534698486328125, -3.814697265625e-05, 0.0, -0.0018365381984040141, -0.00019860267639160156, -2.0265579223632812e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -0.007720828056335449, 0.0, -0.015552520751953125, -0.00017547607421875, -0.01685333251953125, -0.058495521545410156, -0.00331878662109375, -0.01651846244931221, -0.1082981675863266, -0.00010740180005086586, -0.0013103485107421875, -1.9073486328125e-06, -0.050274237990379333, -5.9604644775390625e-06, -1.9073486328125e-06, -0.000797271728515625, -5.53131103515625e-05, -0.2804103195667267, 0.0, -0.17163944244384766, -2.47955322265625e-05, -0.5889188051223755, -0.00012421607971191406, 0.0, -0.21793460845947266, -0.0067348480224609375, -0.15461261570453644, -0.20195910334587097, -2.110004425048828e-05, -0.249870166182518, -0.0008054971694946289, 0.0], "choice_history": [97, 283, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 353, 93, 276, "Character", "Attack", "<EOS>", 346, 88, 325, "Is", "Hero", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 77, 302, "Mana", "Durability", "<EOS>", 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 83, 314, "Is", "Weapon", "<EOS>", "Minion", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "IsHero"}], "_type": "Template45", "hole0": "CharacterAttack", "hole2": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": {"id": "Attribute", "_type": "Name"}, "_type": "Template64", "hole0": "ManaDurability", "hole2": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "WeaponSelector"}]}, {"_type": "Template73_expr_seq", "hole0": "IsWeapon"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "MinionSelector", "_type": "Template44", "hole0": "AddCard"}]}], "_type": "Template68", "hole0": "Weapon", "hole2": 1}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Gorehowl", "hole2": "WARRIOR"}], "hole0": "Gorehowl", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(AddCard(CardQuery(conditions=[ManaDurability(\n            Attribute('attack', SelfSelector())), IsWeapon()])),\n            MinionSelector()))])\n", "score": -6.504079636714771, "score_history": [-3.62396240234375e-05, -6.29425048828125e-05, -0.0001419681793777272, -6.00810453761369e-05, -6.496880087070167e-05, -0.00012266510748304427, -2.861018856492592e-06, -3.4332275390625e-05, -0.098297119140625, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0007961307419463992, 0.0, -0.003314495086669922, -5.7220458984375e-06, -9.715557098388672e-05, 0.0, -0.035390257835388184, 0.0, -2.1219235350145027e-05, 0.0, -1.9073486328125e-06, -0.0048542022705078125, -0.45214176177978516, -6.079665126890177e-06, -3.2066898711491376e-05, -4.1961669921875e-05, -9.298280929215252e-06, -0.05327313393354416, -1.1920928244535389e-07, -0.036009788513183594, -0.27981090545654297, -0.4637260437011719, -0.002773790620267391, -0.00037300586700439453, 0.0, 0.0, -0.056151390075683594, -1.33514404296875e-05, -0.0027031884528696537, -0.04852832853794098, -3.933906555175781e-06, -1.9073486328125e-06, -0.6064424514770508, -0.350311279296875, -1.2041701078414917, -0.00027358531951904297, -8.70227722771233e-06, -0.0006160736083984375, -0.3207874298095703, -0.03534698486328125, -3.814697265625e-05, 0.0, -0.0018365381984040141, -0.00019860267639160156, -2.0265579223632812e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -0.007720828056335449, 0.0, -0.015552520751953125, -0.00017547607421875, -0.01685333251953125, -0.058495521545410156, -0.00331878662109375, -0.01651846244931221, -0.1082981675863266, -0.00010740180005086586, -0.0013103485107421875, -1.9073486328125e-06, -0.050274237990379333, -5.9604644775390625e-06, -1.9073486328125e-06, -0.000797271728515625, -5.53131103515625e-05, -0.2804103195667267, 0.0, -0.17163944244384766, -2.47955322265625e-05, -1.1740922927856445, -6.186957034515217e-05, 0.0, -0.0679616928100586, -0.0050411224365234375, -0.09592746198177338, -0.1485000103712082, -7.62939453125e-06, -0.22096458077430725, -0.0009617805480957031, 0.0], "choice_history": [97, 283, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>", 353, 93, 276, "Character", "Attack", "<EOS>", 346, 88, 325, "Is", "Hero", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 77, 302, "Mana", "Durability", "<EOS>", 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 83, 314, "Is", "Weapon", "<EOS>", "Minion", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "IsHero"}], "_type": "Template45", "hole0": "CharacterAttack", "hole2": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": {"id": "Attribute", "_type": "Name"}, "_type": "Template64", "hole0": "ManaDurability", "hole2": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "SelfSelector"}]}, {"_type": "Template73_expr_seq", "hole0": "IsWeapon"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "MinionSelector", "_type": "Template44", "hole0": "AddCard"}]}], "_type": "Template68", "hole0": "Weapon", "hole2": 1}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Gorehowl", "hole2": "WARRIOR"}], "hole0": "Gorehowl", "_type": "Template5", "hole3": "create_weapon", "hole1": "WeaponCard", "hole4": "player"}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def activate(self, player):\n        return Weapon(7, 1)\n", "score": -7.093904141798241, "score_history": [-3.62396240234375e-05, -6.29425048828125e-05, -0.0001419681793777272, -6.00810453761369e-05, -6.496880087070167e-05, -0.00012266510748304427, -2.861018856492592e-06, -3.4332275390625e-05, -0.098297119140625, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0007961307419463992, 0.0, -0.003314495086669922, -5.7220458984375e-06, -9.715557098388672e-05, 0.0, -4.880884647369385, -1.9073486328125e-06, -0.00021946243941783905, 0.0, -5.7220458984375e-06, -0.012624740600585938, -1.6228008270263672, -6.127357482910156e-05, -8.916537626646459e-05, -4.57763671875e-05, -9.298280929215252e-06, -0.4740844666957855, -1.1920928244535389e-07], "choice_history": [97, 283, "Gorehowl", "<EOS>", "Weapon", "Card", "<EOS>", 358, 128, 233, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 134, 306, "Weapon", "<EOS>", "7", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template68", "hole0": "Weapon", "hole2": 1}], "hole2": [{"hole1": 7, "hole3": "EPIC", "_type": "Template34", "hole0": "Gorehowl", "hole2": "WARRIOR"}], "hole0": "Gorehowl", "_type": "Template5", "hole3": "activate", "hole1": "WeaponCard", "hole4": "player"}}]}
{"gold_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "beams": [{"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score": -1.1491202544040462, "score_history": [-7.62939453125e-06, -1.52587890625e-05, -0.0028867737855762243, -1.1920928244535389e-07, -9.715557098388672e-06, -9.775159924174659e-06, 0.0, -7.2479248046875e-05, -0.0007610321044921875, -0.29181861877441406, -5.340576171875e-05, 0.0, -3.4570680327306036e-06, -1.33514404296875e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.009563446044921875, -0.0003757476806640625, -2.288818359375e-05, -2.503394853192731e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -2.4556569769629277e-05, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.002591252326965332, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.91278076171875e-05, 0.0, -0.8248729705810547, -1.9073486328125e-06, -0.0029735565185546875, -6.29425048828125e-05, -0.000553131103515625, -1.9073486328125e-06, -9.34600830078125e-05, -0.000263214111328125, -0.0001430511474609375, -0.002672910690307617, 0.0, -0.0029926300048828125, 0.0, -0.000164031982421875, 0.0, -7.62939453125e-06, -0.0016956329345703125, -2.86102294921875e-05, -1.1920928244535389e-07, -8.844937838148326e-05, -2.9073096811771393e-05, -3.576278118089249e-07, -0.0018837451934814453, -1.1920928244535389e-07, -0.0014324188232421875, -4.1961669921875e-05, -0.0006326436996459961, -1.9073486328125e-06], "choice_history": [97, 283, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Hound", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "BEAST"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Hound", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score": -1.7266130892732363, "score_history": [-7.62939453125e-06, -1.52587890625e-05, -0.0028867737855762243, -1.1920928244535389e-07, -9.715557098388672e-06, -9.775159924174659e-06, 0.0, -7.2479248046875e-05, -0.0007610321044921875, -0.29181861877441406, -5.340576171875e-05, 0.0, -3.4570680327306036e-06, -1.33514404296875e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.009563446044921875, -0.0003757476806640625, -2.288818359375e-05, -2.503394853192731e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -2.4556569769629277e-05, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.002591252326965332, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.91278076171875e-05, 0.0, -1.3877744674682617, -3.62396240234375e-05, -0.01251983642578125, -4.76837158203125e-05, -0.00012969970703125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0004177093505859375, -0.00016021728515625, -0.009218215942382812, 0.0, -0.001636505126953125, 0.0, -0.0001926422119140625, 0.0, -7.62939453125e-06, -0.0017070770263671875, -2.86102294921875e-05, -1.1920928244535389e-07, -9.619726915843785e-05, -2.7645030058920383e-05, -3.576278118089249e-07, -0.0019335746765136719, -1.1920928244535389e-07, -0.0014553070068359375, -4.1961669921875e-05, -0.0006383657455444336, -1.9073486328125e-06], "choice_history": [97, 283, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Hound", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "BEAST"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Hound", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score": -1.921933777868766, "score_history": [-7.62939453125e-06, -1.52587890625e-05, -0.0028867737855762243, -1.1920928244535389e-07, -9.715557098388672e-06, -9.775159924174659e-06, 0.0, -7.2479248046875e-05, -0.0007610321044921875, -0.29181861877441406, -5.340576171875e-05, 0.0, -3.4570680327306036e-06, -1.33514404296875e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.009563446044921875, -0.0003757476806640625, -2.288818359375e-05, -2.503394853192731e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -2.4556569769629277e-05, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.002591252326965332, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.91278076171875e-05, 0.0, -1.5795516967773438, -9.5367431640625e-06, -0.015613555908203125, -5.14984130859375e-05, -0.0001220703125, -1.9073486328125e-06, -6.4849853515625e-05, -0.000888824462890625, -0.0001583099365234375, -0.010453343391418457, 0.0, -0.0006046295166015625, 0.0, -0.000213623046875, 0.0, -7.62939453125e-06, -0.001491546630859375, -3.0517578125e-05, -1.1920928244535389e-07, -9.917721035890281e-05, -2.689321991056204e-05, -3.576278118089249e-07, -0.0019470453262329102, -1.1920928244535389e-07, -0.0014286041259765625, -4.1961669921875e-05, -0.0006421804428100586, -1.9073486328125e-06], "choice_history": [97, 283, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Hound", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "BEAST"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Hound", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score": -3.1650288577447867, "score_history": [-7.62939453125e-06, -1.52587890625e-05, -0.0028867737855762243, -1.1920928244535389e-07, -9.715557098388672e-06, -9.775159924174659e-06, 0.0, -7.2479248046875e-05, -0.0007610321044921875, -1.378021240234375, -0.0001850128173828125, -1.9073486328125e-06, -2.503394853192731e-06, -5.7220458984375e-06, -3.063678741455078e-05, -1.9073486328125e-06, -0.7664070129394531, -2.47955322265625e-05, -8.7738037109375e-05, -5.960462772236497e-07, 0.0, -0.0002765655517578125, -2.6702880859375e-05, -0.01909278705716133, -3.814697265625e-06, -0.000141143798828125, -1.9073486328125e-06, -7.62939453125e-06, -4.38690185546875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0011823176173493266, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.7187690734863281, -3.814697265625e-06, -0.01348114013671875, -4.00543212890625e-05, -0.0016345977783203125, -1.9073486328125e-06, -0.000347137451171875, -5.7220458984375e-06, -0.001781463623046875, -5.91278076171875e-05, -0.0001068115234375, 0.0, -0.0033321380615234375, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -0.20781517028808594, 0.0, -3.814697265625e-06, -0.04242897033691406, -0.0002841949462890625, -6.437279353121994e-06, -1.680836794548668e-05, -7.366880890913308e-05, -3.576278118089249e-07, -0.0033806562423706055, -1.1920928244535389e-07, -0.0012969970703125, -3.814697265625e-05, -0.0006002187728881836, 0.0], "choice_history": [97, 283, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Hound", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}]}], "hole0": "Hound", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, True)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n", "score": -3.292972618261203, "score_history": [-7.62939453125e-06, -1.52587890625e-05, -0.0028867737855762243, -1.1920928244535389e-07, -9.715557098388672e-06, -9.775159924174659e-06, 0.0, -7.2479248046875e-05, -0.0007610321044921875, -1.378021240234375, -0.0001850128173828125, -1.9073486328125e-06, -2.503394853192731e-06, -5.7220458984375e-06, -3.063678741455078e-05, -1.9073486328125e-06, -0.6304302215576172, -6.29425048828125e-05, -3.24249267578125e-05, -2.861022494471399e-06, -2.3841855067985307e-07, -0.000125885009765625, -3.814697265625e-06, -0.0005487885791808367, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.00856482982635498, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001220703125, 0.0, -1.1531658172607422, -7.62939453125e-06, -0.03987884521484375, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.06787490844726562, 0.0, -7.05718994140625e-05, -0.0048618316650390625, -0.000400543212890625, -1.1920848010049667e-05, -6.318072337307967e-06, -0.0006148057291284204, -1.1920928244535389e-07, -0.002338409423828125, -2.3841855067985307e-07, -0.000888824462890625, -6.4849853515625e-05, -0.0005283355712890625, -1.9073486328125e-06], "choice_history": [97, 283, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Hound", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Hound", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n", "score": -3.3421697319642334, "score_history": [-7.62939453125e-06, -1.52587890625e-05, -0.0028867737855762243, -1.1920928244535389e-07, -9.715557098388672e-06, -9.775159924174659e-06, 0.0, -7.2479248046875e-05, -0.0007610321044921875, -1.378021240234375, -0.0001850128173828125, -1.9073486328125e-06, -2.503394853192731e-06, -5.7220458984375e-06, -3.063678741455078e-05, -1.9073486328125e-06, -0.6304302215576172, -6.29425048828125e-05, -3.24249267578125e-05, -2.861022494471399e-06, -2.3841855067985307e-07, -0.000125885009765625, -3.814697265625e-06, -0.0005487885791808367, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.00856482982635498, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.9680805206298828, -1.9073486328125e-06, -0.007061004638671875, -0.0001049041748046875, -0.0001354217529296875, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.3386354446411133, 0.0, -2.47955322265625e-05, -0.002330780029296875, -0.0001697540283203125, -7.510151135647902e-06, -1.3232143828645349e-05, -0.00011142087168991566, -1.1920928244535389e-07, -0.001853346824645996, -2.3841855067985307e-07, -0.000911712646484375, -5.14984130859375e-05, -0.0005700588226318359, -1.9073486328125e-06], "choice_history": [97, 283, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Hound", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Hound", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            BEAST, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score": -3.574815106663813, "score_history": [-7.62939453125e-06, -1.52587890625e-05, -0.0028867737855762243, -1.1920928244535389e-07, -9.715557098388672e-06, -9.775159924174659e-06, 0.0, -7.2479248046875e-05, -0.0007610321044921875, -0.29181861877441406, -5.340576171875e-05, 0.0, -3.4570680327306036e-06, -1.33514404296875e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.009563446044921875, -0.0003757476806640625, -2.288818359375e-05, -2.503394853192731e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -2.4556569769629277e-05, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.002591252326965332, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.91278076171875e-05, 0.0, -2.484607696533203, -1.52587890625e-05, -0.7554597854614258, -1.71661376953125e-05, -0.0013619661331176758, -5.7220458984375e-06, -5.53131103515625e-05, -0.0005626678466796875, -0.0001163482666015625, -0.015527725219726562, 0.0, -0.0022878646850585938, 0.0, -0.0002117156982421875, 0.0, -5.7220458984375e-06, -0.001888275146484375, -2.86102294921875e-05, -1.1920928244535389e-07, -9.953480184776708e-05, -2.5526853278279305e-05, -3.576278118089249e-07, -0.001979231834411621, -1.1920928244535389e-07, -0.001392364501953125, -4.1961669921875e-05, -0.0006402730941772461, -1.9073486328125e-06], "choice_history": [97, 283, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Hound", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "BEAST", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "BEAST"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Hound", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score": -3.642133699749124, "score_history": [-7.62939453125e-06, -1.52587890625e-05, -0.0028867737855762243, -1.1920928244535389e-07, -9.715557098388672e-06, -9.775159924174659e-06, 0.0, -7.2479248046875e-05, -0.0007610321044921875, -1.378021240234375, -0.0001850128173828125, -1.9073486328125e-06, -2.503394853192731e-06, -5.7220458984375e-06, -3.063678741455078e-05, -1.9073486328125e-06, -0.7664070129394531, -2.47955322265625e-05, -8.7738037109375e-05, -5.960462772236497e-07, 0.0, -0.0002765655517578125, -2.6702880859375e-05, -0.01909278705716133, -3.814697265625e-06, -0.000141143798828125, -1.9073486328125e-06, -7.62939453125e-06, -4.38690185546875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0011823176173493266, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -1.1681785583496094, -4.38690185546875e-05, -0.021669387817382812, -4.9591064453125e-05, -0.0010547637939453125, -1.9073486328125e-06, -0.0004978179931640625, -9.5367431640625e-06, -0.00064849853515625, -4.38690185546875e-05, -0.0001049041748046875, 0.0, -0.003475189208984375, -7.62939453125e-06, -4.38690185546875e-05, 0.0, -0.23020076751708984, 0.0, -7.62939453125e-06, -0.04120159149169922, -0.00023651123046875, -6.318070973065915e-06, -9.417489309271332e-06, -0.00014072327758185565, -3.576278118089249e-07, -0.0031462907791137695, -1.1920928244535389e-07, -0.001251220703125, -4.00543212890625e-05, -0.0005944967269897461, 0.0], "choice_history": [97, 283, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Hound", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}]}], "hole0": "Hound", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            BEAST, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score": -3.6503067964424005, "score_history": [-7.62939453125e-06, -1.52587890625e-05, -0.0028867737855762243, -1.1920928244535389e-07, -9.715557098388672e-06, -9.775159924174659e-06, 0.0, -7.2479248046875e-05, -0.0007610321044921875, -0.29181861877441406, -5.340576171875e-05, 0.0, -3.4570680327306036e-06, -1.33514404296875e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.009563446044921875, -0.0003757476806640625, -2.288818359375e-05, -2.503394853192731e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -2.4556569769629277e-05, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.002591252326965332, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.91278076171875e-05, 0.0, -2.484607696533203, -1.52587890625e-05, -0.6379613876342773, -2.6702880859375e-05, -0.0035381317138671875, 0.0, -0.0012111663818359375, -2.1457672119140625e-06, -0.13088512420654297, -1.9073486328125e-06, -0.06830596923828125, -0.0010528564453125, -0.0005588531494140625, -0.004052400588989258, 0.0, -0.0020837783813476562, 0.0, -0.000423431396484375, 0.0, -3.814697265625e-06, -0.0025081634521484375, -3.0517578125e-05, -2.3841855067985307e-07, -3.099393507000059e-05, -6.190419662743807e-05, -2.3841855067985307e-07, -0.0016745328903198242, 0.0, -0.002227783203125, -4.1961669921875e-05, -0.000516057014465332, -1.9073486328125e-06], "choice_history": [97, 283, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Hound", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "BEAST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "BEAST"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "hole0": "Hound", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, True)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n", "score": -4.1411927047058015, "score_history": [-7.62939453125e-06, -1.52587890625e-05, -0.0028867737855762243, -1.1920928244535389e-07, -9.715557098388672e-06, -9.775159924174659e-06, 0.0, -7.2479248046875e-05, -0.0007610321044921875, -1.378021240234375, -0.0001850128173828125, -1.9073486328125e-06, -2.503394853192731e-06, -5.7220458984375e-06, -3.063678741455078e-05, -1.9073486328125e-06, -0.6304302215576172, -6.29425048828125e-05, -3.24249267578125e-05, -2.861022494471399e-06, -2.3841855067985307e-07, -0.000125885009765625, -3.814697265625e-06, -0.0005487885791808367, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.00856482982635498, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001220703125, 0.0, -1.9482316970825195, -2.86102294921875e-05, -0.03529548645019531, -7.2479248046875e-05, -0.00011444091796875, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.12766075134277344, 0.0, -2.288818359375e-05, -0.0031414031982421875, -0.000400543212890625, -1.3112923625158146e-05, -8.940656698541716e-06, -0.00034620374208316207, -1.1920928244535389e-07, -0.0021991729736328125, -2.3841855067985307e-07, -0.0009365081787109375, -6.4849853515625e-05, -0.0005568265914916992, -1.9073486328125e-06], "choice_history": [97, 283, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Hound", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Hound", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score": -4.263565741097565, "score_history": [-7.62939453125e-06, -1.52587890625e-05, -0.0028867737855762243, -1.1920928244535389e-07, -9.715557098388672e-06, -9.775159924174659e-06, 0.0, -7.2479248046875e-05, -0.0007610321044921875, -1.378021240234375, -0.0001850128173828125, -1.9073486328125e-06, -2.503394853192731e-06, -5.7220458984375e-06, -3.063678741455078e-05, -1.9073486328125e-06, -0.6304302215576172, -6.29425048828125e-05, -3.24249267578125e-05, -2.861022494471399e-06, -2.3841855067985307e-07, -0.000125885009765625, -3.814697265625e-06, -0.0005487885791808367, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.00856482982635498, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001220703125, 0.0, -0.9680805206298828, -1.9073486328125e-06, -0.007061004638671875, -0.0001049041748046875, -0.0001354217529296875, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -1.2606306076049805, 0.0, -5.7220458984375e-06, -0.001140594482421875, -0.0001010894775390625, -7.51015522837406e-06, -4.577531944960356e-05, -5.95578458160162e-05, -2.3841855067985307e-07, -0.0025823116302490234, -1.1920928244535389e-07, -0.0009288787841796875, -5.14984130859375e-05, -0.0005239248275756836, 0.0], "choice_history": [97, 283, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Hound", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Hound", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            BEAST, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score": -4.6082006687963, "score_history": [-7.62939453125e-06, -1.52587890625e-05, -0.0028867737855762243, -1.1920928244535389e-07, -9.715557098388672e-06, -9.775159924174659e-06, 0.0, -7.2479248046875e-05, -0.0007610321044921875, -1.378021240234375, -0.0001850128173828125, -1.9073486328125e-06, -2.503394853192731e-06, -5.7220458984375e-06, -3.063678741455078e-05, -1.9073486328125e-06, -0.6304302215576172, -6.29425048828125e-05, -3.24249267578125e-05, -2.861022494471399e-06, -2.3841855067985307e-07, -0.000125885009765625, -3.814697265625e-06, -0.0005487885791808367, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.00856482982635498, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001220703125, 0.0, -2.062411308288574, -1.52587890625e-05, -0.2814521789550781, -7.62939453125e-06, -0.00372314453125, 0.0, -0.0017604827880859375, -1.1920928244535389e-07, -0.18836498260498047, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.01975727081298828, 0.0, -1.9073486328125e-06, -0.021856307983398438, -4.9591064453125e-05, -2.145764938177308e-06, -2.253030106658116e-05, -7.068063132464886e-05, -2.3841855067985307e-07, -0.00456082820892334, 0.0, -0.0014781951904296875, -3.4332275390625e-05, -0.0005788803100585938, -1.9073486328125e-06], "choice_history": [97, 283, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Hound", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "BEAST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}]}], "hole0": "Hound", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n", "score": -4.630299613967949, "score_history": [-7.62939453125e-06, -1.52587890625e-05, -0.0028867737855762243, -1.1920928244535389e-07, -9.715557098388672e-06, -9.775159924174659e-06, 0.0, -7.2479248046875e-05, -0.0007610321044921875, -1.378021240234375, -0.0001850128173828125, -1.9073486328125e-06, -2.503394853192731e-06, -5.7220458984375e-06, -3.063678741455078e-05, -1.9073486328125e-06, -0.7664070129394531, -2.47955322265625e-05, -8.7738037109375e-05, -5.960462772236497e-07, 0.0, -0.0002765655517578125, -2.6702880859375e-05, -0.01909278705716133, -3.814697265625e-06, -0.000141143798828125, -1.9073486328125e-06, -7.62939453125e-06, -4.38690185546875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0011823176173493266, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.7187690734863281, -3.814697265625e-06, -0.01348114013671875, -4.00543212890625e-05, -0.0016345977783203125, -1.9073486328125e-06, -0.000347137451171875, -5.7220458984375e-06, -0.001781463623046875, -5.91278076171875e-05, -0.0001068115234375, 0.0, -0.0033321380615234375, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -1.686020851135254, 0.0, -1.33514404296875e-05, -0.030770301818847656, -0.00031280517578125, -4.5299411794985645e-06, -1.1086402082582936e-05, -5.352089647203684e-05, -3.576278118089249e-07, -0.001990795135498047, -1.1920928244535389e-07, -0.001331329345703125, -4.76837158203125e-05, -0.0006595849990844727, 0.0], "choice_history": [97, 283, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Hound", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}]}], "hole0": "Hound", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score": -4.977239253827214, "score_history": [-7.62939453125e-06, -1.52587890625e-05, -0.0028867737855762243, -1.1920928244535389e-07, -9.715557098388672e-06, -9.775159924174659e-06, 0.0, -7.2479248046875e-05, -0.0007610321044921875, -0.29181861877441406, -5.340576171875e-05, 0.0, -3.4570680327306036e-06, -1.33514404296875e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.009563446044921875, -0.0003757476806640625, -2.288818359375e-05, -2.503394853192731e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -2.4556569769629277e-05, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.002591252326965332, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.91278076171875e-05, 0.0, -4.613908767700195, -1.9073486328125e-06, -0.04142189025878906, -8.7738037109375e-05, -0.0005589723587036133, -1.9073486328125e-06, -5.53131103515625e-05, -0.0001583099365234375, -0.000125885009765625, -0.003776073455810547, 0.0, -0.0024318695068359375, 0.0, -0.000225067138671875, 0.0, -5.7220458984375e-06, -0.001796722412109375, -2.86102294921875e-05, -1.1920928244535389e-07, -9.178694017464295e-05, -2.8437236323952675e-05, -3.576278118089249e-07, -0.0019333362579345703, -1.1920928244535389e-07, -0.0014362335205078125, -4.1961669921875e-05, -0.0006383657455444336, -1.9073486328125e-06], "choice_history": [97, 283, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Hound", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "BEAST"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Hound", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, charge=True)\n", "score": -4.996869974971091, "score_history": [-7.62939453125e-06, -1.52587890625e-05, -0.0028867737855762243, -1.1920928244535389e-07, -9.715557098388672e-06, -9.775159924174659e-06, 0.0, -7.2479248046875e-05, -0.0007610321044921875, -1.378021240234375, -0.0001850128173828125, -1.9073486328125e-06, -2.503394853192731e-06, -5.7220458984375e-06, -3.063678741455078e-05, -1.9073486328125e-06, -0.7664070129394531, -2.47955322265625e-05, -8.7738037109375e-05, -5.960462772236497e-07, 0.0, -0.0002765655517578125, -2.6702880859375e-05, -0.01909278705716133, -3.814697265625e-06, -0.000141143798828125, -1.9073486328125e-06, -7.62939453125e-06, -4.38690185546875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0011823176173493266, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -1.1681785583496094, -4.38690185546875e-05, -0.021669387817382812, -4.9591064453125e-05, -0.0010547637939453125, -1.9073486328125e-06, -0.0004978179931640625, -9.5367431640625e-06, -0.00064849853515625, -4.38690185546875e-05, -0.0001049041748046875, 0.0, -0.003475189208984375, -7.62939453125e-06, -4.38690185546875e-05, 0.0, -1.596379280090332, 0.0, -2.09808349609375e-05, -0.030836105346679688, -0.00028228759765625, -4.529941634245915e-06, -5.960446742392378e-06, -0.00010025838855654001, -3.576278118089249e-07, -0.0019642114639282227, -1.1920928244535389e-07, -0.0012836456298828125, -4.76837158203125e-05, -0.0006463527679443359, 0.0], "choice_history": [97, 283, "Hound", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Hound", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "FREE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}]}], "hole0": "Hound", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}]}
{"gold_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "beams": [{"inferred_code": "class <UNK>Blademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(damage(7),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score": -3.4631714551597383, "score_history": [-0.3192310333251953, -1.52587890625e-05, -0.3162880837917328, -0.00021217043104115874, -4.768360213347478e-06, 0.0, -1.2993811651540454e-05, -3.576278118089249e-07, -3.4332275390625e-05, -0.021066665649414062, -1.333207130432129, -5.960462772236497e-07, -1.2159347534179688e-05, -4.768370445162873e-07, -1.919269561767578e-05, -0.005016684532165527, -7.62939453125e-06, -0.001789093017578125, -1.4066696166992188e-05, -0.2772504985332489, -0.007423396222293377, -0.24975109100341797, -0.11510086059570312, -5.91278076171875e-05, -0.6703266501426697, -4.76837158203125e-05, -0.05040299892425537, -3.635883331298828e-05, 0.0, -0.0014896392822265625, -0.0001735687255859375, -5.7220458984375e-06, -6.103515625e-05, -9.5367431640625e-06, -6.866455078125e-05, 0.0, -0.08637869358062744, -8.10622896096902e-06, -2.0265579223632812e-06, -3.814697265625e-05, -4.76837158203125e-05, -0.0017701387405395508, -1.9073486328125e-06, -0.0029659271240234375, 0.0, -0.000202178955078125, -7.700920104980469e-05, -3.576278118089249e-07, -0.00024199471226893365, 0.0, -0.0006341934204101562, 0.0, -1.33514404296875e-05, -9.34600830078125e-05, -2.86102294921875e-05, 0.0, -2.9802276912960224e-06, -0.0015251636505126953, 0.0], "choice_history": [97, 283, "<UNK>", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "damage", "<EOS>", 346, 52, 179, "7", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "CharacterSelector", "hole2": "RARE", "hole0": "Injured Blademaster", "_type": "Template15", "hole3": "damage", "hole1": 3, "hole4": [{"n": 7, "_type": "Num"}]}], "hole0": "<UNK>Blademaster", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), HeroSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score": -3.8108398808591915, "score_history": [-0.3192310333251953, -1.52587890625e-05, -0.3162880837917328, -0.00021217043104115874, -4.768360213347478e-06, 0.0, -1.2993811651540454e-05, -3.576278118089249e-07, -3.4332275390625e-05, -0.021066665649414062, -2.859907627105713, -1.0371154530730564e-05, -7.62939453125e-06, -2.074220174108632e-05, -4.172325134277344e-06, -0.0009843111038208008, -1.9073486328125e-06, -0.008594512939453125, -1.9073486328125e-06, -0.26178818941116333, -0.0002554361999500543, 0.0, -0.00022125244140625, -1.9073486328125e-06, -0.007607391104102135, -3.814697265625e-06, -0.00266265869140625, -2.622600959512056e-06, 0.0, -0.0018177032470703125, -9.72747802734375e-05, -1.9073486328125e-05, -0.007325028069317341, -0.0003752695338334888, 0.0, -0.0002460354589857161, 0.0, -0.0002809762954711914, 0.0, -1.71661376953125e-05, -7.82012939453125e-05, -2.6702880859375e-05, 0.0, -2.145764938177308e-06, -0.0016121864318847656, 0.0], "choice_history": [97, 283, "<UNK>", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 210, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "4", "<EOS>", "Hero", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 4}], "hole2": [{"hole5": "HeroSelector", "hole2": "RARE", "hole0": "Injured Blademaster", "_type": "Template15", "hole3": "Damage", "hole1": 3, "hole4": [{"n": 4, "_type": "Num"}], "hole6": [{"_type": "Template79", "hole0": "EnemyPlayer"}]}], "hole0": "<UNK>Blademaster", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(damage(damage()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score": -3.912975049894442, "score_history": [-0.3192310333251953, -1.52587890625e-05, -0.3162880837917328, -0.00021217043104115874, -4.768360213347478e-06, 0.0, -1.2993811651540454e-05, -3.576278118089249e-07, -3.4332275390625e-05, -0.021066665649414062, -1.1112818717956543, -9.536738616588991e-07, -7.748603820800781e-06, -3.6954863844584906e-06, -7.748603820800781e-06, -0.00080108642578125, -3.814697265625e-06, -0.0142822265625, 0.0, -0.3406168818473816, -0.000351013703038916, -0.061405181884765625, -0.44976806640625, -1.1444091796875e-05, -0.730719268321991, -0.01503572054207325, -0.5275508165359497, -1.0728830375228426e-06, -1.311301275563892e-06, -0.0012075859121978283, 0.0, -0.0015236134640872478, 0.0, -1.52587890625e-05, -0.0001049041748046875, -2.6702880859375e-05, 0.0, -2.0265558760002023e-06, -0.0013793706893920898, 0.0], "choice_history": [97, 283, "<UNK>", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "damage", "<EOS>", 346, 88, 325, "damage", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 4}], "hole2": [{"hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Injured Blademaster", "_type": "Template15", "hole3": "damage", "hole1": 3, "hole4": [{"_type": "Template79", "hole0": "damage"}]}], "hole0": "<UNK>Blademaster", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Damage(4), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score": -3.951837865183613, "score_history": [-1.3135900497436523, -0.0005283355712890625, -4.76837158203125e-05, -0.0001239776611328125, -3.0517578125e-05, -0.002723914571106434, -0.00037853704998269677, -4.291525328881107e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.704612805042416e-05, -0.00024569028755649924, -2.9802298740833066e-05, -0.0004825592041015625, -0.6216020584106445, -9.72747802734375e-05, -1.1920928244535389e-07, -3.1113624572753906e-05, -2.50339189733495e-06, -2.0265579223632812e-06, -0.0030241012573242188, 0.0, -2.968311309814453e-05, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -4.398822784423828e-05, 0.0, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, -9.655952453613281e-06, -0.9969158172607422, 0.0, -0.0006107091903686523, -1.9073486328125e-06, -0.09490299224853516, -0.5799312591552734, -0.08798539638519287, -0.0007210959447547793, -2.6702880859375e-05, -0.00182342529296875, -5.7220458984375e-06, -0.23433572053909302, 0.0, -0.0001392364501953125, -1.9073486328125e-06, 0.0, -0.005778312683105469, -0.0053195953369140625, -4.88758041683468e-06, -1.4305104514278355e-06, -0.00010180430399486795, 0.0], "choice_history": [96, 173, 358, 105, 152, "Injured", "Blademaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "battlecry", "<EOS>", 29, 265, "Damage", "<EOS>", 346, 52, 179, "4", "<EOS>", "Hero", "Selector", "<EOS>", 122, 213, "4", "<EOS>", "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Injured Blademaster", "_type": "Template4", "hole3": "RARE", "hole1": 3, "hole4": "minion_type", "hole6": "PIRATE", "hole8": {"hole1": [{"n": 4, "_type": "Num"}], "_type": "Template43", "hole0": "Damage", "hole2": "HeroSelector"}}, {"hole1": 7, "_type": "Template19", "hole0": 4}], "name": "InjuredBlademaster", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class <UNK>Blademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(damage(4), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score": -3.99075915277097, "score_history": [-0.3192310333251953, -1.52587890625e-05, -0.3162880837917328, -0.00021217043104115874, -4.768360213347478e-06, 0.0, -1.2993811651540454e-05, -3.576278118089249e-07, -3.4332275390625e-05, -0.021066665649414062, -1.1112818717956543, -9.536738616588991e-07, -7.748603820800781e-06, -3.6954863844584906e-06, -7.748603820800781e-06, -0.00080108642578125, -3.814697265625e-06, -0.0142822265625, 0.0, -0.3406168818473816, -0.000351013703038916, -0.061405181884765625, -1.0724906921386719, -1.71661376953125e-05, -0.7148152589797974, -1.9073486328125e-06, -0.012386322021484375, -2.145764938177308e-06, -4.768370445162873e-07, -0.001602250849828124, 0.0, -0.0014178657438606024, 0.0, -1.52587890625e-05, -0.000881195068359375, -2.6702880859375e-05, 0.0, -8.344646857949556e-07, -0.001473069190979004, -1.1920928244535389e-07], "choice_history": [97, 283, "<UNK>", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "damage", "<EOS>", 346, 52, 179, "4", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 4}], "hole2": [{"hole5": "HeroSelector", "hole2": "RARE", "hole0": "Injured Blademaster", "_type": "Template15", "hole3": "damage", "hole1": 3, "hole4": [{"n": 4, "_type": "Num"}]}], "hole0": "<UNK>Blademaster", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(damage(4),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score": -4.001395377411484, "score_history": [-0.3192310333251953, -1.52587890625e-05, -0.3162880837917328, -0.00021217043104115874, -4.768360213347478e-06, 0.0, -1.2993811651540454e-05, -3.576278118089249e-07, -3.4332275390625e-05, -0.021066665649414062, -1.333207130432129, -5.960462772236497e-07, -1.2159347534179688e-05, -4.768370445162873e-07, -1.919269561767578e-05, -0.005016684532165527, -7.62939453125e-06, -0.001789093017578125, -1.4066696166992188e-05, -0.2772504985332489, -0.007423396222293377, -0.24975109100341797, -0.11510086059570312, -5.91278076171875e-05, -1.1900054216384888, -3.814697265625e-06, -0.0886225700378418, -1.728534698486328e-05, 0.0, -0.001216888427734375, -0.000171661376953125, -5.7220458984375e-06, -7.05718994140625e-05, -5.7220458984375e-06, -6.67572021484375e-05, 0.0, -0.06759417057037354, -8.34464663057588e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -4.76837158203125e-05, -0.0017205476760864258, -1.9073486328125e-06, -0.002460479736328125, 0.0, -0.0002079010009765625, -6.937980651855469e-05, -3.576278118089249e-07, -0.00024640545598231256, 0.0, -0.0006341934204101562, 0.0, -1.33514404296875e-05, -8.96453857421875e-05, -2.86102294921875e-05, 0.0, -2.9802276912960224e-06, -0.0015270709991455078, 0.0], "choice_history": [97, 283, "<UNK>", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "damage", "<EOS>", 346, 52, 179, "4", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "CharacterSelector", "hole2": "RARE", "hole0": "Injured Blademaster", "_type": "Template15", "hole3": "damage", "hole1": 3, "hole4": [{"n": 4, "_type": "Num"}]}], "hole0": "<UNK>Blademaster", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score": -4.081871202971108, "score_history": [-0.3192310333251953, -1.52587890625e-05, -0.3162880837917328, -0.00021217043104115874, -4.768360213347478e-06, 0.0, -1.2993811651540454e-05, -3.576278118089249e-07, -3.4332275390625e-05, -0.021066665649414062, -1.1112818717956543, -9.536738616588991e-07, -7.748603820800781e-06, -3.6954863844584906e-06, -7.748603820800781e-06, -0.00080108642578125, -3.814697265625e-06, -0.0142822265625, 0.0, -2.1229166984558105, -0.0006767694721929729, -3.814697265625e-06, -0.000171661376953125, -1.9073486328125e-06, -0.15511450171470642, -9.5367431640625e-06, -0.01447296142578125, -1.311301275563892e-06, -3.576278118089249e-07, -0.0014115626690909266, 0.0, -0.0013923542574048042, 0.0, -1.33514404296875e-05, -0.0009441375732421875, -2.6702880859375e-05, 0.0, -8.344646857949556e-07, -0.001457810401916504, -1.1920928244535389e-07], "choice_history": [97, 283, "<UNK>", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "4", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 4}], "hole2": [{"hole5": "HeroSelector", "hole2": "RARE", "hole0": "Injured Blademaster", "_type": "Template15", "hole3": "Damage", "hole1": 3, "hole4": [{"n": 4, "_type": "Num"}]}], "hole0": "<UNK>Blademaster", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(damage(7), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score": -4.086741935308503, "score_history": [-0.3192310333251953, -1.52587890625e-05, -0.3162880837917328, -0.00021217043104115874, -4.768360213347478e-06, 0.0, -1.2993811651540454e-05, -3.576278118089249e-07, -3.4332275390625e-05, -0.021066665649414062, -1.1112818717956543, -9.536738616588991e-07, -7.748603820800781e-06, -3.6954863844584906e-06, -7.748603820800781e-06, -0.00080108642578125, -3.814697265625e-06, -0.0142822265625, 0.0, -0.3406168818473816, -0.000351013703038916, -0.061405181884765625, -1.0724906921386719, -1.71661376953125e-05, -0.774062991142273, -1.3709068298339844e-05, -0.04854583740234375, -5.722038622479886e-06, -5.960462772236497e-07, -0.0013852773699909449, 0.0, -0.0018876746762543917, 0.0, -1.52587890625e-05, -0.001209259033203125, -2.6702880859375e-05, 0.0, -9.536738616588991e-07, -0.0014520883560180664, -1.1920928244535389e-07], "choice_history": [97, 283, "<UNK>", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "damage", "<EOS>", 346, 52, 179, "7", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 4}], "hole2": [{"hole5": "HeroSelector", "hole2": "RARE", "hole0": "Injured Blademaster", "_type": "Template15", "hole3": "damage", "hole1": 3, "hole4": [{"n": 7, "_type": "Num"}]}], "hole0": "<UNK>Blademaster", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score": -4.100240995202967, "score_history": [-1.3135900497436523, -0.0005283355712890625, -4.76837158203125e-05, -0.0001239776611328125, -3.0517578125e-05, -0.002723914571106434, -0.00037853704998269677, -4.291525328881107e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.704612805042416e-05, -0.00024569028755649924, -2.9802298740833066e-05, -0.0004825592041015625, -0.7999029159545898, -1.1773786544799805, -0.0002324311062693596, -3.266334533691406e-05, -1.1920922133867862e-06, -5.960462772236497e-07, -0.044159889221191406, 0.0, -0.011368274688720703, -7.748586540401448e-06, -7.2479248046875e-05, -0.0002803802490234375, -6.103515625e-05, -0.011111664585769176, -5.7220458984375e-06, -0.14317989349365234, -5.7220458984375e-06, 0.0, -0.1319427490234375, -0.000957489013671875, -0.0001239776611328125, -0.0005859136581420898, -1.0251998901367188e-05, -7.82012939453125e-05, 0.0, -0.37856316566467285, -3.6835670471191406e-05, 0.0, -0.0046844482421875, -1.9073486328125e-06, -0.07689964771270752, -0.00014722342893946916, -3.576278118089249e-07, -9.5367431640625e-05, -3.4332275390625e-05, -1.2040129149681889e-05, -9.536738616588991e-07, -4.5299530029296875e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Injured", "Blademaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 113, 193, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "4", "<EOS>", "Minion", "Selector", "<EOS>", 348, 51, 176, "Null", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 88, 325, "Random", "Picker", "<EOS>", 122, 213, "4", "<EOS>", "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "EnemyPlayer"}, {"_type": "Template79", "hole0": "RandomPicker"}], "hole2": "Damage", "hole0": "Injured Blademaster", "_type": "Template1", "hole3": [{"n": 4, "_type": "Num"}], "hole1": 3, "hole4": "MinionSelector"}, {"hole1": 7, "_type": "Template19", "hole0": 4}], "name": "InjuredBlademaster", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class <UNK>Blademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score": -4.428240689531378, "score_history": [-0.3192310333251953, -1.52587890625e-05, -0.3162880837917328, -0.00021217043104115874, -4.768360213347478e-06, 0.0, -1.2993811651540454e-05, -3.576278118089249e-07, -3.4332275390625e-05, -0.021066665649414062, -1.333207130432129, -5.960462772236497e-07, -1.2159347534179688e-05, -4.768370445162873e-07, -1.919269561767578e-05, -0.005016684532165527, -7.62939453125e-06, -0.001789093017578125, -1.4066696166992188e-05, -0.2772504985332489, -0.007423396222293377, -0.24975109100341797, -0.11510086059570312, -5.91278076171875e-05, -1.7017968893051147, 0.0, -0.013368964195251465, -2.6941299438476562e-05, 0.0, -0.0017261505126953125, -0.0001621246337890625, -5.7220458984375e-06, -6.4849853515625e-05, -9.5367431640625e-06, -6.67572021484375e-05, 0.0, -0.0572504997253418, -7.987019671418238e-06, -2.0265579223632812e-06, -3.814697265625e-05, -4.76837158203125e-05, -0.0017625093460083008, -1.9073486328125e-06, -0.0025653839111328125, 0.0, -0.000217437744140625, -6.937980651855469e-05, -3.576278118089249e-07, -0.0002417562936898321, 0.0, -0.0006341934204101562, 0.0, -1.33514404296875e-05, -9.1552734375e-05, -2.86102294921875e-05, 0.0, -2.861018856492592e-06, -0.0015194416046142578, 0.0], "choice_history": [97, 283, "<UNK>", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "damage", "<EOS>", 346, 52, 179, "3", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "CharacterSelector", "hole2": "RARE", "hole0": "Injured Blademaster", "_type": "Template15", "hole3": "damage", "hole1": 3, "hole4": [{"n": 3, "_type": "Num"}]}], "hole0": "<UNK>Blademaster", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(damage(damage()),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score": -4.46313092144004, "score_history": [-0.3192310333251953, -1.52587890625e-05, -0.3162880837917328, -0.00021217043104115874, -4.768360213347478e-06, 0.0, -1.2993811651540454e-05, -3.576278118089249e-07, -3.4332275390625e-05, -0.021066665649414062, -1.1112818717956543, -9.536738616588991e-07, -7.748603820800781e-06, -3.6954863844584906e-06, -7.748603820800781e-06, -0.00080108642578125, -3.814697265625e-06, -0.0142822265625, 0.0, -0.3406168818473816, -0.000351013703038916, -0.061405181884765625, -0.44976806640625, -1.1444091796875e-05, -0.730719268321991, -0.01503572054207325, -1.0720044374465942, -3.6954863844584906e-06, -1.9073468138230965e-06, -0.003827801439911127, -1.9073486328125e-06, -0.004546997603029013, 0.0, -2.09808349609375e-05, -8.7738037109375e-05, -2.47955322265625e-05, 0.0, -2.145764938177308e-06, -0.0014461278915405273, 0.0], "choice_history": [97, 283, "<UNK>", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "damage", "<EOS>", 346, 88, 325, "damage", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 4}], "hole2": [{"hole5": "HeroSelector", "hole2": "RARE", "hole0": "Injured Blademaster", "_type": "Template15", "hole3": "damage", "hole1": 3, "hole4": [{"_type": "Template79", "hole0": "damage"}]}], "hole0": "<UNK>Blademaster", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Blademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Heal(4), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score": -4.463798246753292, "score_history": [-0.3192310333251953, -1.52587890625e-05, -0.3162880837917328, -0.00021217043104115874, -4.768360213347478e-06, 0.0, -1.2993811651540454e-05, -3.576278118089249e-07, -3.4332275390625e-05, -0.021066665649414062, -1.1112818717956543, -9.536738616588991e-07, -7.748603820800781e-06, -3.6954863844584906e-06, -7.748603820800781e-06, -0.00080108642578125, -3.814697265625e-06, -0.0142822265625, 0.0, -1.8798012733459473, -0.0006115185678936541, -1.9073486328125e-06, -0.0001277923583984375, -1.71661376953125e-05, -0.7786275744438171, -5.7220458984375e-06, -0.015535354614257812, -8.344646857949556e-07, -3.576278118089249e-07, -0.0017772915307432413, 0.0, -0.0015879663405939937, 0.0, -1.33514404296875e-05, -0.00092315673828125, -2.6702880859375e-05, 0.0, -8.344646857949556e-07, -0.001484513282775879, -1.1920928244535389e-07], "choice_history": [97, 283, "<UNK>", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "4", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 4}], "hole2": [{"hole5": "HeroSelector", "hole2": "RARE", "hole0": "Injured Blademaster", "_type": "Template15", "hole3": "Heal", "hole1": 3, "hole4": [{"n": 4, "_type": "Num"}]}], "hole0": "<UNK>Blademaster", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(damage(7),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score": -4.519002321258142, "score_history": [-0.3192310333251953, -1.52587890625e-05, -1.3721189498901367, -0.00021217043104115874, -4.768360213347478e-06, 0.0, -1.2993811651540454e-05, -3.576278118089249e-07, -3.4332275390625e-05, -0.021066665649414062, -1.333207130432129, -5.960462772236497e-07, -1.2159347534179688e-05, -4.768370445162873e-07, -1.919269561767578e-05, -0.005016684532165527, -7.62939453125e-06, -0.001789093017578125, -1.4066696166992188e-05, -0.2772504985332489, -0.007423396222293377, -0.24975109100341797, -0.11510086059570312, -5.91278076171875e-05, -0.6703266501426697, -4.76837158203125e-05, -0.05040299892425537, -3.635883331298828e-05, 0.0, -0.0014896392822265625, -0.0001735687255859375, -5.7220458984375e-06, -6.103515625e-05, -9.5367431640625e-06, -6.866455078125e-05, 0.0, -0.08637869358062744, -8.10622896096902e-06, -2.0265579223632812e-06, -3.814697265625e-05, -4.76837158203125e-05, -0.0017701387405395508, -1.9073486328125e-06, -0.0029659271240234375, 0.0, -0.000202178955078125, -7.700920104980469e-05, -3.576278118089249e-07, -0.00024199471226893365, 0.0, -0.0006341934204101562, 0.0, -1.33514404296875e-05, -9.34600830078125e-05, -2.86102294921875e-05, 0.0, -2.9802276912960224e-06, -0.0015251636505126953, 0.0], "choice_history": [97, 283, "Injured", "Blademaster", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "damage", "<EOS>", 346, 52, 179, "7", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "CharacterSelector", "hole2": "RARE", "hole0": "Injured Blademaster", "_type": "Template15", "hole3": "damage", "hole1": 3, "hole4": [{"n": 7, "_type": "Num"}]}], "hole0": "InjuredBlademaster", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, BothPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score": -4.928820897796442, "score_history": [-1.3135900497436523, -0.0005283355712890625, -4.76837158203125e-05, -0.0001239776611328125, -3.0517578125e-05, -0.002723914571106434, -0.00037853704998269677, -4.291525328881107e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.704612805042416e-05, -0.00024569028755649924, -2.9802298740833066e-05, -0.0004825592041015625, -0.7999029159545898, -1.1773786544799805, -0.0002324311062693596, -3.266334533691406e-05, -1.1920922133867862e-06, -5.960462772236497e-07, -0.044159889221191406, 0.0, -0.011368274688720703, -7.748586540401448e-06, -7.2479248046875e-05, -0.0002803802490234375, -6.103515625e-05, -0.011111664585769176, -5.7220458984375e-06, -0.14317989349365234, -5.7220458984375e-06, 0.0, -0.1319427490234375, -0.000957489013671875, -0.0001239776611328125, -0.0005859136581420898, -1.0251998901367188e-05, -7.82012939453125e-05, 0.0, -1.2297394275665283, -4.00543212890625e-05, -1.9311904907226562e-05, -0.0019702911376953125, 0.0, -0.057010769844055176, -0.00014007081335876137, -2.3841855067985307e-07, -9.5367431640625e-05, -3.4332275390625e-05, -7.390969585685525e-06, -9.536738616588991e-07, -4.3272972106933594e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Injured", "Blademaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 113, 193, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "Damage", "<EOS>", 346, 52, 179, "4", "<EOS>", "Minion", "Selector", "<EOS>", 348, 51, 176, "Null", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 88, 325, "Random", "Picker", "<EOS>", 122, 213, "4", "<EOS>", "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "BothPlayer"}, {"_type": "Template79", "hole0": "RandomPicker"}], "hole2": "Damage", "hole0": "Injured Blademaster", "_type": "Template1", "hole3": [{"n": 4, "_type": "Num"}], "hole1": 3, "hole4": "MinionSelector"}, {"hole1": 7, "_type": "Template19", "hole0": 4}], "name": "InjuredBlademaster", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(4), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score": -5.025495600689162, "score_history": [-1.3135900497436523, -0.0005283355712890625, -4.76837158203125e-05, -0.0001239776611328125, -3.0517578125e-05, -0.002723914571106434, -0.00037853704998269677, -4.291525328881107e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.704612805042416e-05, -0.00024569028755649924, -2.9802298740833066e-05, -0.0004825592041015625, -0.6216020584106445, -9.72747802734375e-05, -1.1920928244535389e-07, -3.1113624572753906e-05, -2.50339189733495e-06, -2.0265579223632812e-06, -0.0030241012573242188, 0.0, -2.968311309814453e-05, -1.52587890625e-05, -7.62939453125e-05, -1.9073486328125e-06, -4.398822784423828e-05, 0.0, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, -9.655952453613281e-06, -2.1507911682128906, -1.9073486328125e-06, -0.0002205371856689453, -1.9073486328125e-06, -0.033141136169433594, -0.4422273635864258, -0.15387676656246185, -0.0006284696864895523, -0.000110626220703125, -0.0005664825439453125, -3.814697265625e-06, -0.2894483208656311, 0.0, -0.0001659393310546875, -1.9073486328125e-06, 0.0, -0.005312919616699219, -0.005657196044921875, -4.649161837733118e-06, -1.4305104514278355e-06, -0.00010311556980013847, 0.0], "choice_history": [96, 173, 358, 105, 152, "Injured", "Blademaster", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 29, 265, "Damage", "<EOS>", 346, 52, 179, "4", "<EOS>", "Hero", "Selector", "<EOS>", 122, 213, "4", "<EOS>", "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Injured Blademaster", "_type": "Template4", "hole3": "RARE", "hole1": 3, "hole4": "minion_type", "hole6": "DEMON", "hole8": {"hole1": [{"n": 4, "_type": "Num"}], "_type": "Template43", "hole0": "Damage", "hole2": "HeroSelector"}}, {"hole1": 7, "_type": "Template19", "hole0": 4}], "name": "InjuredBlademaster", "_type": "ClassDef"}], "_type": "Module"}}]}
{"gold_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(AfterAdded(), ActionTag(Damage(\n            1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=None)))])\n", "beams": [{"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.PIRATE)), ActionTag(Damage(1), CharacterSelector(\n            Null, EnemyPlayer(), RandomPicker())))])\n", "score": -1.093081128286535, "score_history": [-0.000885009765625, -3.814697265625e-05, -0.004942708183079958, -1.0967213711410295e-05, -3.576278118089249e-07, -7.148482836782932e-07, -0.00013756752014160156, -8.344646857949556e-07, -1.52587890625e-05, -0.0005779266357421875, -6.29425048828125e-05, -1.9073486328125e-06, -4.4107433495810255e-05, -1.0728830375228426e-06, 0.0, -7.98713335825596e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -0.001651763916015625, -0.00051116943359375, -0.0018768310546875, -0.001094818115234375, -2.0265579223632812e-06, -7.390948667307384e-06, -4.220008850097656e-05, -1.764288026606664e-05, -0.18641197681427002, -0.021956801414489746, -0.0002184879849664867, -0.0001983642578125, -0.43739795684814453, -0.00145721435546875, -0.014386534690856934, -1.9431114196777344e-05, -5.7220458984375e-06, -0.006491661071777344, -0.11528587341308594, -0.0032016250770539045, -0.00042361716623418033, -9.5367431640625e-06, -0.006992340087890625, -2.288818359375e-05, -0.0006333515048027039, -4.589557647705078e-05, -0.057443857192993164, -0.0005542394355870783, 0.0, -0.00873565673828125, -0.0006351470947265625, -0.0018367767333984375, -0.0014774799346923828, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.010053143836557865, -2.562999725341797e-05, -1.1920928244535389e-07, -0.2032604217529297, -3.814697265625e-06, -0.001598954200744629, -4.3987758544972166e-05, -8.344646857949556e-07], "choice_history": [97, 283, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 74, 297, "PIRATE", "<EOS>", 346, 64, 272, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 348, 51, 176, "Null", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 88, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 3, "_type": "Template36", "hole3": [{"_type": "Template60", "hole0": "PIRATE"}], "hole1": 2, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": "CharacterSelector", "_type": "Template44", "hole0": "Damage", "hole4": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "EnemyPlayer"}, {"_type": "Template79", "hole0": "RandomPicker"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Knife Juggler", "hole2": "ALL"}], "hole0": "KnifeJuggler", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(Null, EnemyPlayer(), RandomPicker(\n            ))))])\n", "score": -3.0808556701938983, "score_history": [-0.000885009765625, -3.814697265625e-05, -0.004942708183079958, -1.0967213711410295e-05, -3.576278118089249e-07, -7.148482836782932e-07, -0.00013756752014160156, -8.344646857949556e-07, -1.52587890625e-05, -0.0005779266357421875, -6.29425048828125e-05, -1.9073486328125e-06, -4.4107433495810255e-05, -1.0728830375228426e-06, 0.0, -7.98713335825596e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -0.001651763916015625, -0.00051116943359375, -0.0018768310546875, -0.001094818115234375, -2.0265579223632812e-06, -7.390948667307384e-06, -4.220008850097656e-05, -1.764288026606664e-05, -1.8321994543075562, -0.013673476874828339, -0.0014628935605287552, -2.47955322265625e-05, -0.000736236572265625, -2.288818359375e-05, -0.015814252197742462, -0.64068603515625, -0.002531290054321289, -8.392333984375e-05, -0.0007038116455078125, -0.23917293548583984, -0.0020427657291293144, -0.00016282724391203374, -1.9073486328125e-06, -0.017316818237304688, -1.1444091796875e-05, -0.00010502338409423828, -1.9073486328125e-06, -0.01115687470883131, -0.00024807348381727934, 0.0, -0.00696563720703125, -0.0007991790771484375, -0.0014667510986328125, -0.001589655876159668, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.00858580507338047, -2.9325485229492188e-05, 0.0, -0.26915454864501953, -3.814697265625e-06, -0.0017745494842529297, -4.5895107177784666e-05, -4.768370445162873e-07], "choice_history": [97, 283, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 346, 88, 325, "Is", "Spell", "<EOS>", 346, 64, 272, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 348, 51, 176, "Null", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 88, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "CardUsed", "hole0": 3, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "IsSpell"}], "hole1": 2, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": "CharacterSelector", "_type": "Template44", "hole0": "Damage", "hole4": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "EnemyPlayer"}, {"_type": "Template79", "hole0": "RandomPicker"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Knife Juggler", "hole2": "ALL"}], "hole0": "KnifeJuggler", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsMinion()), ActionTag\n            (Damage(1), CharacterSelector(Null, EnemyPlayer(), RandomPicker\n            ())))])\n", "score": -3.1339823858559726, "score_history": [-0.000885009765625, -3.814697265625e-05, -0.004942708183079958, -1.0967213711410295e-05, -3.576278118089249e-07, -7.148482836782932e-07, -0.00013756752014160156, -8.344646857949556e-07, -1.52587890625e-05, -0.0005779266357421875, -6.29425048828125e-05, -1.9073486328125e-06, -4.4107433495810255e-05, -1.0728830375228426e-06, 0.0, -7.98713335825596e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -0.001651763916015625, -0.00051116943359375, -0.0018768310546875, -0.001094818115234375, -2.0265579223632812e-06, -7.390948667307384e-06, -4.220008850097656e-05, -1.764288026606664e-05, -1.8321994543075562, -0.013673476874828339, -0.0014628935605287552, -2.47955322265625e-05, -0.000736236572265625, -2.288818359375e-05, -0.015814252197742462, -0.7583928108215332, -0.0039446353912353516, -5.7220458984375e-06, -0.0005817413330078125, -0.17985153198242188, -0.002015151549130678, -0.00027748229331336915, -5.7220458984375e-06, -0.025676727294921875, -1.1444091796875e-05, -7.69495964050293e-05, -3.814697265625e-06, -0.010552431456744671, -0.000276324397418648, 0.0, -0.010473251342773438, -0.000865936279296875, -0.0014743804931640625, -0.0017807483673095703, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -0.008158319629728794, -2.7418136596679688e-05, 0.0, -0.2512493133544922, -3.814697265625e-06, -0.0020226240158081055, -4.875610102317296e-05, -4.768370445162873e-07], "choice_history": [97, 283, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 346, 88, 325, "Is", "Minion", "<EOS>", 346, 64, 272, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 348, 51, 176, "Null", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 88, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "CardUsed", "hole0": 3, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "IsMinion"}], "hole1": 2, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": "CharacterSelector", "_type": "Template44", "hole0": "Damage", "hole4": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "EnemyPlayer"}, {"_type": "Template79", "hole0": "RandomPicker"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Knife Juggler", "hole2": "ALL"}], "hole0": "KnifeJuggler", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(IsMinion()),\n            ActionTag(Damage(1), CharacterSelector(Null, EnemyPlayer(),\n            RandomPicker())))])\n", "score": -3.4778146768019838, "score_history": [-0.000885009765625, -3.814697265625e-05, -0.004942708183079958, -1.0967213711410295e-05, -3.576278118089249e-07, -7.148482836782932e-07, -0.00013756752014160156, -8.344646857949556e-07, -1.52587890625e-05, -0.0005779266357421875, -6.29425048828125e-05, -1.9073486328125e-06, -4.4107433495810255e-05, -1.0728830375228426e-06, 0.0, -7.98713335825596e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -0.001651763916015625, -0.00051116943359375, -0.0018768310546875, -0.001094818115234375, -2.0265579223632812e-06, -7.390948667307384e-06, -4.220008850097656e-05, -1.764288026606664e-05, -0.18641197681427002, -0.021956801414489746, -0.0002184879849664867, -0.0001983642578125, -2.372950553894043, -3.62396240234375e-05, -0.4095847010612488, -0.031572125852108, -0.006807684898376465, -5.7220458984375e-06, -0.0005645751953125, -0.11649894714355469, -0.002347670029848814, -0.00019846488430630416, -7.62939453125e-06, -0.05361366271972656, -1.71661376953125e-05, -8.049607276916504e-05, -3.814697265625e-06, -0.009978343732655048, -0.0002616606652736664, 0.0, -0.01427459716796875, -0.000835418701171875, -0.0016384124755859375, -0.0018097162246704102, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -0.007877579890191555, -2.7418136596679688e-05, 0.0, -0.22356700897216797, -3.814697265625e-06, -0.002142786979675293, -5.149782373337075e-05, -4.768370445162873e-07], "choice_history": [97, 283, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 88, 325, "Is", "Minion", "<EOS>", 346, 64, 272, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 348, 51, 176, "Null", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 88, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 3, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "IsMinion"}], "hole1": 2, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": "CharacterSelector", "_type": "Template44", "hole0": "Damage", "hole4": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "EnemyPlayer"}, {"_type": "Template79", "hole0": "RandomPicker"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Knife Juggler", "hole2": "ALL"}], "hole0": "KnifeJuggler", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.PIRATE)), ActionTag(Damage(1), CharacterSelector(\n            Null, EnemyPlayer(), RandomPicker(1))))])\n", "score": -3.6295461179105857, "score_history": [-0.000885009765625, -3.814697265625e-05, -0.004942708183079958, -1.0967213711410295e-05, -3.576278118089249e-07, -7.148482836782932e-07, -0.00013756752014160156, -8.344646857949556e-07, -1.52587890625e-05, -0.0005779266357421875, -6.29425048828125e-05, -1.9073486328125e-06, -4.4107433495810255e-05, -1.0728830375228426e-06, 0.0, -7.98713335825596e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -0.001651763916015625, -0.00051116943359375, -0.0018768310546875, -0.001094818115234375, -2.0265579223632812e-06, -7.390948667307384e-06, -4.220008850097656e-05, -1.764288026606664e-05, -0.18641197681427002, -0.021956801414489746, -0.0002184879849664867, -0.0001983642578125, -0.43739795684814453, -0.00145721435546875, -0.014386534690856934, -1.9431114196777344e-05, -5.7220458984375e-06, -0.006491661071777344, -0.11528587341308594, -0.0032016250770539045, -0.00042361716623418033, -9.5367431640625e-06, -0.006992340087890625, -2.288818359375e-05, -0.0006333515048027039, -4.589557647705078e-05, -0.057443857192993164, -0.0005542394355870783, 0.0, -0.00873565673828125, -0.0006351470947265625, -0.0018367767333984375, -0.0014774799346923828, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.010053143836557865, -2.562999725341797e-05, -1.1920928244535389e-07, -1.7540264129638672, -0.0008144378662109375, -0.02741265296936035, -0.0002919435501098633, -9.775130820344202e-06, -0.9588177800178528, 0.0], "choice_history": [97, 283, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 74, 297, "PIRATE", "<EOS>", 346, 64, 272, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 348, 51, 176, "Null", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 84, 315, "Random", "Picker", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 3, "_type": "Template36", "hole3": [{"_type": "Template60", "hole0": "PIRATE"}], "hole1": 2, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": "CharacterSelector", "_type": "Template44", "hole0": "Damage", "hole4": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "EnemyPlayer"}, {"hole1": 1, "_type": "Template74", "hole0": "RandomPicker"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Knife Juggler", "hole2": "ALL"}], "hole0": "KnifeJuggler", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.PIRATE)), ActionTag(Damage(1), CharacterSelector(\n            Null, EnemyPlayer(), RandomPicker(2))))])\n", "score": -3.816116225847445, "score_history": [-0.000885009765625, -3.814697265625e-05, -0.004942708183079958, -1.0967213711410295e-05, -3.576278118089249e-07, -7.148482836782932e-07, -0.00013756752014160156, -8.344646857949556e-07, -1.52587890625e-05, -0.0005779266357421875, -6.29425048828125e-05, -1.9073486328125e-06, -4.4107433495810255e-05, -1.0728830375228426e-06, 0.0, -7.98713335825596e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -0.001651763916015625, -0.00051116943359375, -0.0018768310546875, -0.001094818115234375, -2.0265579223632812e-06, -7.390948667307384e-06, -4.220008850097656e-05, -1.764288026606664e-05, -0.18641197681427002, -0.021956801414489746, -0.0002184879849664867, -0.0001983642578125, -0.43739795684814453, -0.00145721435546875, -0.014386534690856934, -1.9431114196777344e-05, -5.7220458984375e-06, -0.006491661071777344, -0.11528587341308594, -0.0032016250770539045, -0.00042361716623418033, -9.5367431640625e-06, -0.006992340087890625, -2.288818359375e-05, -0.0006333515048027039, -4.589557647705078e-05, -0.057443857192993164, -0.0005542394355870783, 0.0, -0.00873565673828125, -0.0006351470947265625, -0.0018367767333984375, -0.0014774799346923828, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.010053143836557865, -2.562999725341797e-05, -1.1920928244535389e-07, -1.7540264129638672, -0.0008144378662109375, -0.02741265296936035, -0.0002919435501098633, -9.775130820344202e-06, -1.145387887954712, 0.0], "choice_history": [97, 283, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 74, 297, "PIRATE", "<EOS>", 346, 64, 272, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 348, 51, 176, "Null", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 84, 315, "Random", "Picker", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 3, "_type": "Template36", "hole3": [{"_type": "Template60", "hole0": "PIRATE"}], "hole1": 2, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": "CharacterSelector", "_type": "Template44", "hole0": "Damage", "hole4": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "EnemyPlayer"}, {"hole1": 2, "_type": "Template74", "hole0": "RandomPicker"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Knife Juggler", "hole2": "ALL"}], "hole0": "KnifeJuggler", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.PIRATE)), ActionTag(Damage(1), CharacterSelector(\n            Null, EnemyPlayer(), RandomPicker(3))))])\n", "score": -3.8796020866720298, "score_history": [-0.000885009765625, -3.814697265625e-05, -0.004942708183079958, -1.0967213711410295e-05, -3.576278118089249e-07, -7.148482836782932e-07, -0.00013756752014160156, -8.344646857949556e-07, -1.52587890625e-05, -0.0005779266357421875, -6.29425048828125e-05, -1.9073486328125e-06, -4.4107433495810255e-05, -1.0728830375228426e-06, 0.0, -7.98713335825596e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -0.001651763916015625, -0.00051116943359375, -0.0018768310546875, -0.001094818115234375, -2.0265579223632812e-06, -7.390948667307384e-06, -4.220008850097656e-05, -1.764288026606664e-05, -0.18641197681427002, -0.021956801414489746, -0.0002184879849664867, -0.0001983642578125, -0.43739795684814453, -0.00145721435546875, -0.014386534690856934, -1.9431114196777344e-05, -5.7220458984375e-06, -0.006491661071777344, -0.11528587341308594, -0.0032016250770539045, -0.00042361716623418033, -9.5367431640625e-06, -0.006992340087890625, -2.288818359375e-05, -0.0006333515048027039, -4.589557647705078e-05, -0.057443857192993164, -0.0005542394355870783, 0.0, -0.00873565673828125, -0.0006351470947265625, -0.0018367767333984375, -0.0014774799346923828, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.010053143836557865, -2.562999725341797e-05, -1.1920928244535389e-07, -1.7540264129638672, -0.0008144378662109375, -0.02741265296936035, -0.0002919435501098633, -9.775130820344202e-06, -1.2088737487792969, 0.0], "choice_history": [97, 283, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 74, 297, "PIRATE", "<EOS>", 346, 64, 272, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 348, 51, 176, "Null", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 84, 315, "Random", "Picker", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 3, "_type": "Template36", "hole3": [{"_type": "Template60", "hole0": "PIRATE"}], "hole1": 2, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": "CharacterSelector", "_type": "Template44", "hole0": "Damage", "hole4": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "EnemyPlayer"}, {"hole1": 3, "_type": "Template74", "hole0": "RandomPicker"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Knife Juggler", "hole2": "ALL"}], "hole0": "KnifeJuggler", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.PIRATE)), ActionTag(Damage(1), MinionSelector(Null,\n            EnemyPlayer(), RandomPicker())))])\n", "score": -4.081892716928849, "score_history": [-0.000885009765625, -3.814697265625e-05, -0.004942708183079958, -1.0967213711410295e-05, -3.576278118089249e-07, -7.148482836782932e-07, -0.00013756752014160156, -8.344646857949556e-07, -1.52587890625e-05, -0.0005779266357421875, -6.29425048828125e-05, -1.9073486328125e-06, -4.4107433495810255e-05, -1.0728830375228426e-06, 0.0, -7.98713335825596e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -0.001651763916015625, -0.00051116943359375, -0.0018768310546875, -0.001094818115234375, -2.0265579223632812e-06, -7.390948667307384e-06, -4.220008850097656e-05, -1.764288026606664e-05, -0.18641197681427002, -0.021956801414489746, -0.0002184879849664867, -0.0001983642578125, -0.43739795684814453, -0.00145721435546875, -0.014386534690856934, -1.9431114196777344e-05, -5.7220458984375e-06, -0.006491661071777344, -0.11528587341308594, -0.0032016250770539045, -0.00042361716623418033, -9.5367431640625e-06, -0.006992340087890625, -2.288818359375e-05, -0.0006333515048027039, -4.589557647705078e-05, -2.9401376247406006, -1.943101960932836e-05, 0.0, -0.19495201110839844, -0.0030336380004882812, -0.0006580352783203125, -0.0010203123092651367, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.01888894848525524, -2.384185791015625e-05, 0.0, -0.11403560638427734, -1.9073486328125e-06, -0.0016751289367675781, -4.5656637666979805e-05, -9.536738616588991e-07], "choice_history": [97, 283, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 74, 297, "PIRATE", "<EOS>", 346, 64, 272, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>", 348, 51, 176, "Null", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 88, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 3, "_type": "Template36", "hole3": [{"_type": "Template60", "hole0": "PIRATE"}], "hole1": 2, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": "MinionSelector", "_type": "Template44", "hole0": "Damage", "hole4": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "EnemyPlayer"}, {"_type": "Template79", "hole0": "RandomPicker"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Knife Juggler", "hole2": "ALL"}], "hole0": "KnifeJuggler", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(ManaCost(1)),\n            ActionTag(Heal(1), MinionSelector()))])\n", "score": -4.341847644472921, "score_history": [-0.000885009765625, -3.814697265625e-05, -0.004942708183079958, -1.0967213711410295e-05, -3.576278118089249e-07, -7.148482836782932e-07, -0.00013756752014160156, -8.344646857949556e-07, -1.52587890625e-05, -0.0005779266357421875, -6.29425048828125e-05, -1.9073486328125e-06, -4.4107433495810255e-05, -1.0728830375228426e-06, 0.0, -7.98713335825596e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -0.001651763916015625, -0.00051116943359375, -0.0018768310546875, -0.001094818115234375, -2.0265579223632812e-06, -7.390948667307384e-06, -4.220008850097656e-05, -1.764288026606664e-05, -0.18641197681427002, -0.021956801414489746, -0.0002184879849664867, -0.0001983642578125, -1.3876886367797852, -0.0003509521484375, -0.6470786929130554, -0.0538640171289444, -6.687641143798828e-05, -0.0021402910351753235, -4.768370445162873e-07, -3.0517578125e-05, -0.39129066467285156, -0.06654644012451172, -1.558927297592163, -0.0001012044886010699, 0.0, -0.0028972625732421875, -0.0005931854248046875, -0.003437279025092721, -8.225440979003906e-06, -0.00573277473449707, -0.00010311591904610395, 0.0], "choice_history": [97, 283, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "1", "<EOS>", 346, 64, 270, "Heal", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 3, "_type": "Template36", "hole3": [{"hole1": 1, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 2, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": "MinionSelector", "_type": "Template44", "hole0": "Heal"}]}, "_type": "Return"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Knife Juggler", "hole2": "ALL"}], "hole0": "KnifeJuggler", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(ManaCost(1)),\n            ActionTag(Give(damage()), TargetSelector()))])\n", "score": -4.345883796382452, "score_history": [-0.000885009765625, -3.814697265625e-05, -0.004942708183079958, -1.0967213711410295e-05, -3.576278118089249e-07, -7.148482836782932e-07, -0.00013756752014160156, -8.344646857949556e-07, -1.52587890625e-05, -0.0005779266357421875, -6.29425048828125e-05, -1.9073486328125e-06, -4.4107433495810255e-05, -1.0728830375228426e-06, 0.0, -7.98713335825596e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -0.001651763916015625, -0.00051116943359375, -0.0018768310546875, -0.001094818115234375, -2.0265579223632812e-06, -7.390948667307384e-06, -4.220008850097656e-05, -1.764288026606664e-05, -0.18641197681427002, -0.021956801414489746, -0.0002184879849664867, -0.0001983642578125, -1.3876886367797852, -0.0003509521484375, -0.6470786929130554, -0.0538640171289444, -6.687641143798828e-05, -0.0021402910351753235, -4.768370445162873e-07, -3.0517578125e-05, -1.4651451110839844, -0.05071544647216797, -0.028141940012574196, -0.0022986228577792645, -0.037695884704589844, -0.00018310546875, -0.1960422843694687, -0.003651001723483205, -0.24977326393127441, -2.1219235350145027e-05, -5.7220458984375e-06], "choice_history": [97, 283, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "1", "<EOS>", 346, 60, 237, "Give", "<EOS>", 21, 174, "damage", "<EOS>", "Target", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 3, "_type": "Template36", "hole3": [{"hole1": 1, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 2, "hole4": [{"hole1": {"id": "damage", "_type": "Name"}, "hole3": "TargetSelector", "_type": "Template38", "hole0": "Give"}]}, "_type": "Return"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Knife Juggler", "hole2": "ALL"}], "hole0": "KnifeJuggler", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), MinionSelector(condition=Null, players=BothPlayer())))])\n", "score": -4.509762843927028, "score_history": [-0.000885009765625, -3.814697265625e-05, -0.004942708183079958, -1.0967213711410295e-05, -3.576278118089249e-07, -7.148482836782932e-07, -0.00013756752014160156, -8.344646857949556e-07, -1.52587890625e-05, -0.0005779266357421875, -6.29425048828125e-05, -1.9073486328125e-06, -4.4107433495810255e-05, -1.0728830375228426e-06, 0.0, -7.98713335825596e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -0.001651763916015625, -0.00051116943359375, -0.0018768310546875, -0.001094818115234375, -2.0265579223632812e-06, -7.390948667307384e-06, -4.220008850097656e-05, -1.764288026606664e-05, -1.8321994543075562, -0.013673476874828339, -0.0014628935605287552, -2.47955322265625e-05, -0.000736236572265625, -2.288818359375e-05, -0.015814252197742462, -0.64068603515625, -0.002531290054321289, -8.392333984375e-05, -0.0007038116455078125, -1.7881641387939453, -0.0025129285641014576, -0.0007124984404072165, 0.0, -2.09808349609375e-05, -1.1444091796875e-05, -9.414553642272949e-05, -2.0265579223632812e-06, -0.005927920341491699, -4.792213439941406e-05, 0.0, -0.12436199188232422, -0.0070552825927734375, -1.9073486328125e-06, -0.005799770355224609, -6.318092346191406e-06, -0.004504203796386719, -0.0002307891845703125, -0.00016641613910906017, -1.1920928244535389e-07, -0.004940032958984375, -0.0068359375, -0.031226396560668945, 0.0, -0.0005283355712890625, 0.0, -0.006410956382751465, -5.53131103515625e-05, -1.9073486328125e-06], "choice_history": [97, 283, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 346, 88, 325, "Is", "Spell", "<EOS>", 346, 64, 271, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>", 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "CardUsed", "hole0": 3, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "IsSpell"}], "hole1": 2, "hole4": [{"hole5": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}], "hole1": [{"n": 1, "_type": "Num"}], "hole3": "MinionSelector", "_type": "Template44", "hole0": "Damage"}]}, "_type": "Return"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Knife Juggler", "hole2": "ALL"}], "hole0": "KnifeJuggler", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(Null, EnemyPlayer(), RandomPicker(\n            2))))])\n", "score": -5.2703288227775715, "score_history": [-0.000885009765625, -3.814697265625e-05, -0.004942708183079958, -1.0967213711410295e-05, -3.576278118089249e-07, -7.148482836782932e-07, -0.00013756752014160156, -8.344646857949556e-07, -1.52587890625e-05, -0.0005779266357421875, -6.29425048828125e-05, -1.9073486328125e-06, -4.4107433495810255e-05, -1.0728830375228426e-06, 0.0, -7.98713335825596e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -0.001651763916015625, -0.00051116943359375, -0.0018768310546875, -0.001094818115234375, -2.0265579223632812e-06, -7.390948667307384e-06, -4.220008850097656e-05, -1.764288026606664e-05, -1.8321994543075562, -0.013673476874828339, -0.0014628935605287552, -2.47955322265625e-05, -0.000736236572265625, -2.288818359375e-05, -0.015814252197742462, -0.64068603515625, -0.002531290054321289, -8.392333984375e-05, -0.0007038116455078125, -0.23917293548583984, -0.0020427657291293144, -0.00016282724391203374, -1.9073486328125e-06, -0.017316818237304688, -1.1444091796875e-05, -0.00010502338409423828, -1.9073486328125e-06, -0.01115687470883131, -0.00024807348381727934, 0.0, -0.00696563720703125, -0.0007991790771484375, -0.0014667510986328125, -0.001589655876159668, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.00858580507338047, -2.9325485229492188e-05, 0.0, -1.4959077835083008, -0.00080108642578125, -0.021175742149353027, -0.0003033876419067383, -1.156325470219599e-05, -0.9422528743743896, 0.0], "choice_history": [97, 283, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 346, 88, 325, "Is", "Spell", "<EOS>", 346, 64, 272, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Character", "Selector", "<EOS>", 348, 51, 176, "Null", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 84, 315, "Random", "Picker", "<EOS>", "2", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "CardUsed", "hole0": 3, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "IsSpell"}], "hole1": 2, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": "CharacterSelector", "_type": "Template44", "hole0": "Damage", "hole4": [{"value": "Null", "_type": "NameConstant"}, {"_type": "Template79", "hole0": "EnemyPlayer"}, {"hole1": 2, "_type": "Template74", "hole0": "RandomPicker"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Knife Juggler", "hole2": "ALL"}], "hole0": "KnifeJuggler", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(\n            AttackGreaterThan(1)), ActionTag(Give(damage()), TargetSelector\n            ()))])\n", "score": -5.356963235919409, "score_history": [-0.000885009765625, -3.814697265625e-05, -0.004942708183079958, -1.0967213711410295e-05, -3.576278118089249e-07, -7.148482836782932e-07, -0.00013756752014160156, -8.344646857949556e-07, -1.52587890625e-05, -0.0005779266357421875, -6.29425048828125e-05, -1.9073486328125e-06, -4.4107433495810255e-05, -1.0728830375228426e-06, 0.0, -7.98713335825596e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -0.001651763916015625, -0.00051116943359375, -0.0018768310546875, -0.001094818115234375, -2.0265579223632812e-06, -7.390948667307384e-06, -4.220008850097656e-05, -1.764288026606664e-05, -0.18641197681427002, -0.021956801414489746, -0.0002184879849664867, -0.0001983642578125, -1.3876886367797852, -0.0003509521484375, -0.8767902255058289, -0.8520587682723999, -0.00283050537109375, -0.0010554790496826172, -0.0017666202038526535, -2.1457672119140625e-06, -3.0517578125e-05, -1.4485769271850586, -0.02191925048828125, -0.04020695388317108, -0.00102068146225065, -0.06470966339111328, -0.0002765655517578125, -0.21891017258167267, -0.003862554207444191, -0.21387921273708344, -2.9921506211394444e-05, -7.748603820800781e-06], "choice_history": [97, 283, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 84, 315, "Attack", "Greater", "Than", "<EOS>", "1", "<EOS>", 346, 60, 237, "Give", "<EOS>", 21, 174, "damage", "<EOS>", "Target", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 3, "_type": "Template36", "hole3": [{"hole1": 1, "_type": "Template74", "hole0": "AttackGreaterThan"}], "hole1": 2, "hole4": [{"hole1": {"id": "damage", "_type": "Name"}, "hole3": "TargetSelector", "_type": "Template38", "hole0": "Give"}]}, "_type": "Return"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Knife Juggler", "hole2": "ALL"}], "hole0": "KnifeJuggler", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(conditions=[ManaCost(2), IsMinion()\n            ])), MinionSelector()))])\n", "score": -5.652001244074029, "score_history": [-0.000885009765625, -3.814697265625e-05, -0.004942708183079958, -1.0967213711410295e-05, -3.576278118089249e-07, -7.148482836782932e-07, -0.00013756752014160156, -8.344646857949556e-07, -1.52587890625e-05, -0.0005779266357421875, -6.29425048828125e-05, -1.9073486328125e-06, -4.4107433495810255e-05, -1.0728830375228426e-06, 0.0, -7.98713335825596e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -0.001651763916015625, -0.00051116943359375, -0.0018768310546875, -0.001094818115234375, -2.0265579223632812e-06, -7.390948667307384e-06, -4.220008850097656e-05, -1.764288026606664e-05, -0.18641197681427002, -0.021956801414489746, -0.0002184879849664867, -0.0001983642578125, -1.3876886367797852, -0.0003509521484375, -0.6470786929130554, -0.0538640171289444, -6.687641143798828e-05, -0.0021402910351753235, -4.768370445162873e-07, -3.0517578125e-05, -0.39129066467285156, -0.06654644012451172, -0.4965798854827881, -0.000865339650772512, -1.931190308823716e-05, -3.814697265625e-06, -0.19320297241210938, -0.0001926422119140625, -0.000110626220703125, 0.0, -0.005135396961122751, -0.007645130157470703, -4.017353057861328e-05, -0.0001316070556640625, -0.000110626220703125, -7.82012939453125e-05, -0.14529764652252197, 0.0, -0.012993812561035156, -0.0007953643798828125, -0.1318511962890625, -0.2914886474609375, -0.0005359649658203125, -0.08129169046878815, -0.024447202682495117, -1.9073486328125e-06, -0.9686888456344604, 0.0, -0.15357685089111328, -0.0005245208740234375, -0.34608030319213867, -0.01665627583861351, -0.00010693073272705078, -0.0017664432525634766, -0.0017346139065921307, 0.0], "choice_history": [97, 283, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "1", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 84, 315, "Mana", "Cost", "<EOS>", "2", "<EOS>", 83, 314, "Is", "Minion", "<EOS>", "Minion", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 3, "_type": "Template36", "hole3": [{"hole1": 1, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 2, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": 2, "_type": "Template74", "hole0": "ManaCost"}, {"_type": "Template73_expr_seq", "hole0": "IsMinion"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "MinionSelector", "_type": "Template44", "hole0": "AddCard"}]}, "_type": "Return"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Knife Juggler", "hole2": "ALL"}], "hole0": "KnifeJuggler", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(conditions=[ManaCost(1), Damage()])\n            ), MinionSelector()))])\n", "score": -5.933282302052078, "score_history": [-0.000885009765625, -3.814697265625e-05, -0.004942708183079958, -1.0967213711410295e-05, -3.576278118089249e-07, -7.148482836782932e-07, -0.00013756752014160156, -8.344646857949556e-07, -1.52587890625e-05, -0.0005779266357421875, -6.29425048828125e-05, -1.9073486328125e-06, -4.4107433495810255e-05, -1.0728830375228426e-06, 0.0, -7.98713335825596e-06, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.9591064453125e-05, 0.0, -2.288818359375e-05, -0.001651763916015625, -0.00051116943359375, -0.0018768310546875, -0.001094818115234375, -2.0265579223632812e-06, -7.390948667307384e-06, -4.220008850097656e-05, -1.764288026606664e-05, -0.18641197681427002, -0.021956801414489746, -0.0002184879849664867, -0.0001983642578125, -1.3876886367797852, -0.0003509521484375, -0.6470786929130554, -0.0538640171289444, -6.687641143798828e-05, -0.0021402910351753235, -4.768370445162873e-07, -3.0517578125e-05, -0.39129066467285156, -0.06654644012451172, -0.4965798854827881, -0.000865339650772512, -1.931190308823716e-05, -3.814697265625e-06, -0.19320297241210938, -0.0001926422119140625, -0.000110626220703125, 0.0, -0.005135396961122751, -0.007645130157470703, -4.017353057861328e-05, -0.0001316070556640625, -0.000110626220703125, -7.82012939453125e-05, -0.14529764652252197, 0.0, -0.012993812561035156, -0.0007953643798828125, -0.1318511962890625, -0.2914886474609375, -0.0005359649658203125, -0.08129169046878815, -0.024447202682495117, -1.9073486328125e-06, -0.49310988187789917, 0.0, -0.1759929656982422, -0.0010805130004882812, -0.5527926087379456, -0.5458810925483704, -0.00124359130859375, -0.00031518912874162197, 0.0], "choice_history": [97, 283, "Knife", "Juggler", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "RARE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 84, 315, "Mana", "Cost", "<EOS>", "1", "<EOS>", 346, 64, 270, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 84, 315, "Mana", "Cost", "<EOS>", "1", "<EOS>", 83, 314, "Damage", "<EOS>", "Minion", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 3, "_type": "Template36", "hole3": [{"hole1": 1, "_type": "Template74", "hole0": "ManaCost"}], "hole1": 2, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": 1, "_type": "Template74", "hole0": "ManaCost"}, {"_type": "Template73_expr_seq", "hole0": "Damage"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "hole3": "MinionSelector", "_type": "Template44", "hole0": "AddCard"}]}, "_type": "Return"}], "hole2": [{"hole1": 2, "hole3": "RARE", "_type": "Template34", "hole0": "Knife Juggler", "hole2": "ALL"}], "hole0": "KnifeJuggler", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), CharacterSelector(condition=IsDamaged(), picker=RandomPicker\n            ())))])\n", "beams": [{"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            HeroSelector()))])\n", "score": -1.2502386376636352, "score_history": [-0.0023937225341796875, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -7.43865966796875e-05, -0.012602788396179676, -0.015999004244804382, 0.0, -9.5367431640625e-06, 0.0, -8.06911411928013e-05, -2.0384708477649838e-05, -7.283687591552734e-05, -7.05718994140625e-05, -0.16347694396972656, -0.004998207092285156, -0.002053178148344159, -0.0004178785311523825, -0.00012147425877628848, 0.0, -0.18442118167877197, -1.33514404296875e-05, -0.02755260467529297, 0.0, -0.0012664794921875, -0.6168079376220703, -3.695445047924295e-05, -1.1920928244535389e-07, -1.9073468138230965e-06, -0.00027370447060093284, -0.11053967475891113, -0.07649517059326172, -3.254413604736328e-05, -0.008967995643615723, -0.001293182373046875, -1.9073486328125e-06, -0.0036296844482421875, -0.000263214111328125, -0.0013072495348751545, -9.5367431640625e-06, -0.014871597290039062, -1.9073486328125e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Lightwell", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 117, 197, "Lightwell", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 112, 189, "0", "<EOS>", "5", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "RARE", "_type": "Template13", "hole0": "Lightwell", "hole2": "ROGUE"}, {"hole5": "HeroSelector", "hole2": "TurnEnded", "hole0": 0, "_type": "Template0", "hole3": "Heal", "hole1": 5, "hole4": [{"n": 3, "_type": "Num"}]}], "name": "Lightwell", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Kill(),\n            MinionSelector(condition=Null, players=BothPlayer())))])\n", "score": -2.1065499132773766, "score_history": [-0.0023937225341796875, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -7.43865966796875e-05, -0.012602788396179676, -0.015999004244804382, 0.0, -9.5367431640625e-06, 0.0, -8.06911411928013e-05, -2.0384708477649838e-05, -7.283687591552734e-05, -7.05718994140625e-05, -0.16347694396972656, -0.004998207092285156, -0.002053178148344159, -0.0004178785311523825, -0.00012147425877628848, 0.0, -0.18442118167877197, -1.33514404296875e-05, -0.02755260467529297, 0.0, -0.0012664794921875, -1.229222297668457, -0.0008475490030832589, -8.10622896096902e-06, -2.3841574147809297e-05, -2.9683074899367057e-05, -0.0077545554377138615, -0.3409205675125122, -0.0001888275146484375, -0.03026425838470459, -0.018596291542053223, -0.006093375384807587, -0.00360262393951416, 0.0, -0.028200149536132812, -0.000469207763671875, -3.814697265625e-06, -0.00115966796875, -7.05718994140625e-05, -0.0012683868408203125, -5.91278076171875e-05, -8.90493392944336e-05, -1.9073486328125e-06, -0.0013484954833984375, -2.6702880859375e-05, -0.008592605590820312, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.011719703674316406, -0.000225067138671875, 0.0], "choice_history": [96, 173, 358, 105, 152, "Lightwell", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 117, 197, "Lightwell", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 112, 187, "0", "<EOS>", "5", "<EOS>", "Turn", "Started", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>", 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "RARE", "_type": "Template13", "hole0": "Lightwell", "hole2": "ROGUE"}, {"hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "TurnStarted", "hole0": 0, "_type": "Template0", "hole3": "Kill", "hole1": 5}], "name": "Lightwell", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            MinionSelector(condition=Null)))])\n", "score": -3.511861535168464, "score_history": [-0.0023937225341796875, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -7.43865966796875e-05, -0.012602788396179676, -0.015999004244804382, 0.0, -9.5367431640625e-06, 0.0, -8.06911411928013e-05, -2.0384708477649838e-05, -7.283687591552734e-05, -7.05718994140625e-05, -2.8381872177124023, -0.000972747802734375, -4.1723224057932384e-06, -4.780292510986328e-05, -3.814697265625e-05, 0.0, -0.30761635303497314, -7.05718994140625e-05, -0.0023479461669921875, -0.15795612335205078, -0.0014305930817499757, -3.1947838579071686e-05, -3.290122185717337e-05, -5.900794712943025e-05, -0.011608004570007324, -0.0005971193313598633, 0.0, -0.008482694625854492, -3.933906555175781e-06, -5.91278076171875e-05, -0.001117706298828125, -1.9073486328125e-06, -0.02447509579360485, -2.300739288330078e-05, -0.06963729858398438, -4.76837158203125e-05, 0.0, -6.103515625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.05189990997314453, -0.00011658668518066406, -0.00299835205078125, -0.0001850128173828125, -0.0002863406843971461, -2.0265579223632812e-06], "choice_history": [96, 173, 358, 105, 152, "Lightwell", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 115, 195, "Lightwell", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 112, 190, "0", "<EOS>", "5", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "_type": "Template11", "hole0": "Lightwell", "hole2": "ROGUE"}, {"hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "TurnEnded", "hole0": 0, "_type": "Template0", "hole3": "Heal", "hole1": 5, "hole4": [{"n": 3, "_type": "Num"}]}], "name": "Lightwell", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(),\n            MinionSelector(condition=Null, players=BothPlayer())))])\n", "score": -3.5231248757145295, "score_history": [-0.0023937225341796875, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -7.43865966796875e-05, -0.012602788396179676, -0.015999004244804382, 0.0, -9.5367431640625e-06, 0.0, -8.06911411928013e-05, -2.0384708477649838e-05, -7.283687591552734e-05, -7.05718994140625e-05, -0.16347694396972656, -0.004998207092285156, -0.002053178148344159, -0.0004178785311523825, -0.00012147425877628848, 0.0, -0.18442118167877197, -1.33514404296875e-05, -0.02755260467529297, 0.0, -0.0012664794921875, -1.229222297668457, -0.0008475490030832589, -8.10622896096902e-06, -2.3841574147809297e-05, -2.9683074899367057e-05, -0.0077545554377138615, -1.2722378969192505, -7.474422454833984e-05, -0.387750506401062, -0.0001678466796875, -0.14843308925628662, -0.00244903564453125, 0.0, -0.03227710723876953, -0.000377655029296875, -3.814697265625e-06, -0.0017099380493164062, -4.57763671875e-05, -0.0013227462768554688, -5.91278076171875e-05, -0.00010609626770019531, -1.9073486328125e-06, -0.0014495849609375, -3.24249267578125e-05, -0.009634017944335938, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.011116981506347656, -0.000225067138671875, 0.0], "choice_history": [96, 173, 358, 105, 152, "Lightwell", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 117, 197, "Lightwell", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 112, 187, "0", "<EOS>", "5", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>", 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "RARE", "_type": "Template13", "hole0": "Lightwell", "hole2": "ROGUE"}, {"hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "TurnEnded", "hole0": 0, "_type": "Template0", "hole3": "Heal", "hole1": 5}], "name": "Lightwell", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), HeroSelector()))])\n", "score": -3.8425853836724784, "score_history": [-0.0023937225341796875, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -7.43865966796875e-05, -0.012602788396179676, -0.015999004244804382, 0.0, -9.5367431640625e-06, 0.0, -8.06911411928013e-05, -2.0384708477649838e-05, -7.283687591552734e-05, -7.05718994140625e-05, -0.16347694396972656, -0.004998207092285156, -0.002053178148344159, -0.0004178785311523825, -0.00012147425877628848, 0.0, -0.18442118167877197, -1.33514404296875e-05, -0.02755260467529297, 0.0, -0.0012664794921875, -0.6168079376220703, -3.695445047924295e-05, -1.1920928244535389e-07, -1.9073468138230965e-06, -0.00027370447060093284, -0.11053967475891113, -2.6714744567871094, -8.20159912109375e-05, -0.006009578704833984, -0.0025930404663085938, -1.9073486328125e-06, -0.0001964569091796875, -5.53131103515625e-05, -0.005706388503313065, -9.5367431640625e-06, -0.013090133666992188, -1.9073486328125e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Lightwell", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 117, 197, "Lightwell", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 112, 189, "0", "<EOS>", "5", "<EOS>", "Turn", "Started", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "RARE", "_type": "Template13", "hole0": "Lightwell", "hole2": "ROGUE"}, {"hole5": "HeroSelector", "hole2": "TurnStarted", "hole0": 0, "_type": "Template0", "hole3": "Heal", "hole1": 5, "hole4": [{"n": 3, "_type": "Num"}]}], "name": "Lightwell", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            HeroSelector()))])\n", "score": -4.019063064695722, "score_history": [-0.0023937225341796875, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -7.43865966796875e-05, -0.012602788396179676, -0.015999004244804382, 0.0, -9.5367431640625e-06, 0.0, -8.06911411928013e-05, -2.0384708477649838e-05, -7.283687591552734e-05, -7.05718994140625e-05, -0.16347694396972656, -0.004998207092285156, -0.002053178148344159, -0.0004178785311523825, -0.00012147425877628848, 0.0, -2.936877727508545, -1.33514404296875e-05, -0.024750709533691406, 0.0, -0.002269744873046875, -0.6199865341186523, -3.48087924066931e-05, -1.1920928244535389e-07, -1.9073468138230965e-06, -0.00033330911537632346, -0.11430764198303223, -0.0777597427368164, -4.017353057861328e-05, -0.011128067970275879, -0.0010042190551757812, -1.9073486328125e-06, -0.0033130645751953125, -0.000308990478515625, -0.0013994863256812096, -9.5367431640625e-06, -0.023069381713867188, -1.9073486328125e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Lightwell", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 117, 197, "Lightwell", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", 112, 189, "0", "<EOS>", "5", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "RARE", "_type": "Template13", "hole0": "Lightwell", "hole2": "WARRIOR"}, {"hole5": "HeroSelector", "hole2": "TurnEnded", "hole0": 0, "_type": "Template0", "hole3": "Heal", "hole1": 5, "hole4": [{"n": 3, "_type": "Num"}]}], "name": "Lightwell", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            MinionSelector(condition=Null)))])\n", "score": -4.293412999355482, "score_history": [-0.0023937225341796875, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -7.43865966796875e-05, -0.012602788396179676, -0.015999004244804382, 0.0, -9.5367431640625e-06, 0.0, -8.06911411928013e-05, -2.0384708477649838e-05, -7.283687591552734e-05, -7.05718994140625e-05, -0.16347694396972656, -0.004998207092285156, -0.002053178148344159, -0.0004178785311523825, -0.00012147425877628848, 0.0, -0.18442118167877197, -1.33514404296875e-05, -0.02755260467529297, 0.0, -0.0012664794921875, -3.536935329437256, -0.0005813625175505877, -6.44909159746021e-05, -3.611976353568025e-05, -9.047867206390947e-05, -0.0027523040771484375, -0.0025730133056640625, 0.0, -0.001876235008239746, -5.7220458984375e-06, -1.71661376953125e-05, -0.0077667236328125, -1.9073486328125e-06, -0.0523451566696167, -1.1920928244535389e-07, -0.2454308271408081, -8.20159912109375e-05, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.023840904235839844, -8.022785186767578e-05, -0.0026483535766601562, -0.0001926422119140625, -0.0002901553816627711, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Lightwell", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 117, 197, "Lightwell", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 112, 190, "0", "<EOS>", "5", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "RARE", "_type": "Template13", "hole0": "Lightwell", "hole2": "ROGUE"}, {"hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "TurnEnded", "hole0": 0, "_type": "Template0", "hole3": "Heal", "hole1": 5, "hole4": [{"n": 3, "_type": "Num"}]}], "name": "Lightwell", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Kill(),\n            MinionSelector(condition=Null, players=BothPlayer())))])\n", "score": -4.521935232197393, "score_history": [-0.0023937225341796875, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -7.43865966796875e-05, -0.012602788396179676, -0.015999004244804382, 0.0, -9.5367431640625e-06, 0.0, -8.06911411928013e-05, -2.0384708477649838e-05, -7.283687591552734e-05, -7.05718994140625e-05, -0.16347694396972656, -0.004998207092285156, -0.002053178148344159, -0.0004178785311523825, -0.00012147425877628848, 0.0, -0.18442118167877197, -1.33514404296875e-05, -0.02755260467529297, 0.0, -0.0012664794921875, -1.229222297668457, -0.0008475490030832589, -8.10622896096902e-06, -2.3841574147809297e-05, -2.9683074899367057e-05, -0.0077545554377138615, -1.2722378969192505, -7.474422454833984e-05, -1.5192631483078003, -0.01282954216003418, -0.012252872809767723, -0.001826167106628418, 0.0, -0.02621746063232422, -0.0003662109375, -5.7220458984375e-06, -0.0012359619140625, -4.76837158203125e-05, -0.0012445449829101562, -5.7220458984375e-05, -9.489059448242188e-05, -1.9073486328125e-06, -0.001293182373046875, -3.0517578125e-05, -0.0073947906494140625, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.011584281921386719, -0.0002269744873046875, 0.0], "choice_history": [96, 173, 358, 105, 152, "Lightwell", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 117, 197, "Lightwell", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 112, 187, "0", "<EOS>", "5", "<EOS>", "Turn", "Ended", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>", 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "RARE", "_type": "Template13", "hole0": "Lightwell", "hole2": "ROGUE"}, {"hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "TurnEnded", "hole0": 0, "_type": "Template0", "hole3": "Kill", "hole1": 5}], "name": "Lightwell", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            HeroSelector()))])\n", "score": -4.551913228288186, "score_history": [-0.0023937225341796875, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -7.43865966796875e-05, -0.012602788396179676, -0.015999004244804382, 0.0, -9.5367431640625e-06, 0.0, -8.06911411928013e-05, -2.0384708477649838e-05, -7.283687591552734e-05, -7.05718994140625e-05, -2.6508445739746094, -0.00060272216796875, -0.00029456615447998047, -1.1563301086425781e-05, -1.52587890625e-05, 0.0, -0.31036508083343506, -1.71661376953125e-05, -0.0008889436721801758, -1.9073486328125e-06, -0.000232696533203125, -0.0003566741943359375, -0.0001964569091796875, -0.26494598388671875, 0.0, -0.000545501708984375, -1.1234989166259766, -4.7086890845093876e-05, -5.364416665543104e-06, -2.7418097943154862e-06, -0.0004841088375542313, -0.02729320526123047, -0.07638108730316162, -5.841255187988281e-06, -0.011625170707702637, -0.0001659393310546875, -1.9073486328125e-06, -0.0006008148193359375, -8.7738037109375e-05, -0.004282071255147457, -1.33514404296875e-05, -0.046715736389160156, 0.0, 0.0], "choice_history": [96, 173, 358, 105, 152, "Lightwell", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Lightwell", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "TOTEM", "<EOS>", 112, 189, "0", "<EOS>", "5", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "TOTEM"}], "hole2": "ROGUE", "hole0": "Lightwell", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "HeroSelector", "hole2": "TurnEnded", "hole0": 0, "_type": "Template0", "hole3": "Heal", "hole1": 5, "hole4": [{"n": 3, "_type": "Num"}]}], "name": "Lightwell", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Kill(),\n            MinionSelector(condition=Null, players=BothPlayer())))])\n", "score": -4.886395096949855, "score_history": [-0.0023937225341796875, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -7.43865966796875e-05, -0.012602788396179676, -0.015999004244804382, 0.0, -9.5367431640625e-06, 0.0, -8.06911411928013e-05, -2.0384708477649838e-05, -7.283687591552734e-05, -7.05718994140625e-05, -0.16347694396972656, -0.004998207092285156, -0.002053178148344159, -0.0004178785311523825, -0.00012147425877628848, 0.0, -2.936877727508545, -1.33514404296875e-05, -0.024750709533691406, 0.0, -0.002269744873046875, -1.3042211532592773, -0.0011715085711330175, -7.6293927122605965e-06, -2.3603161025675945e-05, -3.242489765398204e-05, -0.006755458656698465, -0.29099953174591064, -0.00020599365234375, -0.028496861457824707, -0.026897192001342773, -0.005306952632963657, -0.0024417638778686523, 0.0, -0.02916431427001953, -0.0004673004150390625, -3.814697265625e-06, -0.0009708404541015625, -9.918212890625e-05, -0.0011968612670898438, -5.7220458984375e-05, -9.083747863769531e-05, -1.9073486328125e-06, -0.001316070556640625, -2.86102294921875e-05, -0.008159637451171875, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.011626243591308594, -0.0002307891845703125, 0.0], "choice_history": [96, 173, 358, 105, 152, "Lightwell", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 117, 197, "Lightwell", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", 112, 187, "0", "<EOS>", "5", "<EOS>", "Turn", "Started", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>", 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "RARE", "_type": "Template13", "hole0": "Lightwell", "hole2": "WARRIOR"}, {"hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "TurnStarted", "hole0": 0, "_type": "Template0", "hole3": "Kill", "hole1": 5}], "name": "Lightwell", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(SpellCast(), ActionTag(Heal(3),\n            HeroSelector()))])\n", "score": -4.930998344663742, "score_history": [-0.0023937225341796875, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -7.43865966796875e-05, -0.012602788396179676, -0.015999004244804382, 0.0, -9.5367431640625e-06, 0.0, -8.06911411928013e-05, -2.0384708477649838e-05, -7.283687591552734e-05, -7.05718994140625e-05, -0.16347694396972656, -0.004998207092285156, -0.002053178148344159, -0.0004178785311523825, -0.00012147425877628848, 0.0, -0.18442118167877197, -1.33514404296875e-05, -0.02755260467529297, 0.0, -0.0012664794921875, -0.6168079376220703, -3.695445047924295e-05, -1.1920928244535389e-07, -1.9073468138230965e-06, -0.00027370447060093284, -3.7922561168670654, -0.005016326904296875, -5.7220458984375e-06, -0.0433192253112793, -0.000293731689453125, -5.7220458984375e-06, -0.008775711059570312, -3.4332275390625e-05, -0.0026472005993127823, -1.9073486328125e-06, -0.045815467834472656, -1.9073486328125e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Lightwell", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 117, 197, "Lightwell", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 112, 189, "0", "<EOS>", "5", "<EOS>", "Spell", "Cast", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Hero", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "RARE", "_type": "Template13", "hole0": "Lightwell", "hole2": "ROGUE"}, {"hole5": "HeroSelector", "hole2": "SpellCast", "hole0": 0, "_type": "Template0", "hole3": "Heal", "hole1": 5, "hole4": [{"n": 3, "_type": "Num"}]}], "name": "Lightwell", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(MinionDied(), ActionTag(Draw(),\n            PlayerSelector()))])\n", "score": -5.149346836480163, "score_history": [-0.0023937225341796875, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -7.43865966796875e-05, -0.012602788396179676, -0.015999004244804382, 0.0, -9.5367431640625e-06, 0.0, -8.06911411928013e-05, -2.0384708477649838e-05, -7.283687591552734e-05, -7.05718994140625e-05, -2.6508445739746094, -0.00060272216796875, -0.00029456615447998047, -1.1563301086425781e-05, -1.52587890625e-05, 0.0, -0.31036508083343506, -1.71661376953125e-05, -0.0008889436721801758, -1.9073486328125e-06, -0.000232696533203125, -0.0003566741943359375, -0.0001964569091796875, -0.26494598388671875, 0.0, -0.000545501708984375, -0.8323049545288086, -3.3616728615015745e-05, -0.00016259061521850526, -3.4570634852570947e-06, -0.00224497402086854, -0.7039936780929565, -0.28398609161376953, -0.000338911748258397, -0.060145359486341476, -1.33514404296875e-05, -0.005415797233581543, -1.9073486328125e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Lightwell", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 118, 198, "Lightwell", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 353, 94, 316, "TOTEM", "<EOS>", 112, 186, "0", "<EOS>", "5", "<EOS>", "Minion", "Died", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole5": [{"_type": "Template75", "hole0": "TOTEM"}], "hole2": "ROGUE", "hole0": "Lightwell", "_type": "Template14", "hole3": "RARE", "hole1": 2}, {"hole5": "PlayerSelector", "hole2": "MinionDied", "hole0": 0, "_type": "Template0", "hole3": "Draw", "hole1": 5}], "name": "Lightwell", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            MinionSelector(condition=Null)))])\n", "score": -5.219137503220736, "score_history": [-0.0023937225341796875, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -7.43865966796875e-05, -0.012602788396179676, -0.015999004244804382, 0.0, -9.5367431640625e-06, 0.0, -8.06911411928013e-05, -2.0384708477649838e-05, -7.283687591552734e-05, -7.05718994140625e-05, -2.8381872177124023, -0.000972747802734375, -4.1723224057932384e-06, -4.780292510986328e-05, -3.814697265625e-05, 0.0, -2.0252113342285156, -0.000919342041015625, -0.0025463104248046875, -0.16807079315185547, -0.0007920896750874817, -4.0053913835436106e-05, -3.135155202471651e-05, -5.3047420806251466e-05, -0.013838052749633789, -0.0004998445510864258, 0.0, -0.007945656776428223, -3.814697265625e-06, -3.62396240234375e-05, -0.001255035400390625, -1.9073486328125e-06, -0.02844393067061901, -2.5033950805664062e-05, -0.0389556884765625, -4.38690185546875e-05, 0.0, -5.91278076171875e-05, -8.0108642578125e-05, -1.9073486328125e-06, -0.05611610412597656, -0.00011277198791503906, -0.0029649734497070312, -0.0001850128173828125, -0.00026893612812273204, -2.0265579223632812e-06], "choice_history": [96, 173, 358, 105, 152, "Lightwell", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 115, 195, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 112, 190, "0", "<EOS>", "5", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "_type": "Template11", "hole0": "Lightwell", "hole2": "PRIEST"}, {"hole7": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "TurnEnded", "hole0": 0, "_type": "Template0", "hole3": "Heal", "hole1": 5, "hole4": [{"n": 3, "_type": "Num"}]}], "name": "Lightwell", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            HeroSelector(EnemyPlayer())))])\n", "score": -5.5014638425491, "score_history": [-0.0023937225341796875, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -7.43865966796875e-05, -0.012602788396179676, -0.015999004244804382, 0.0, -9.5367431640625e-06, 0.0, -8.06911411928013e-05, -2.0384708477649838e-05, -7.283687591552734e-05, -7.05718994140625e-05, -0.16347694396972656, -0.004998207092285156, -0.002053178148344159, -0.0004178785311523825, -0.00012147425877628848, 0.0, -0.18442118167877197, -1.33514404296875e-05, -0.02755260467529297, 0.0, -0.0012664794921875, -3.969663143157959, -0.0014064210699871182, -3.6954646930098534e-05, -1.7523612768854946e-05, -9.417526598554105e-06, -0.023193001747131348, -0.0002766847610473633, -7.748603820800781e-06, -0.02467942237854004, -0.00034606456756591797, -1.9073486328125e-06, -0.00012969970703125, -1.52587890625e-05, -0.003650665283203125, -2.3841855067985307e-07, -0.9870778322219849, -0.00029027462005615234, 0.0, -0.049823760986328125, -0.0030965805053710938, -1.33514404296875e-05, -0.02039228193461895, -0.001631258986890316, 0.0], "choice_history": [96, 173, 358, 105, 152, "Lightwell", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 117, 197, "Lightwell", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 112, 191, "0", "<EOS>", "5", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Hero", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "RARE", "_type": "Template13", "hole0": "Lightwell", "hole2": "ROGUE"}, {"hole5": "HeroSelector", "hole2": "TurnEnded", "hole0": 0, "_type": "Template0", "hole3": "Heal", "hole1": 5, "hole4": [{"n": 3, "_type": "Num"}], "hole6": [{"_type": "Template79", "hole0": "EnemyPlayer"}]}], "name": "Lightwell", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            MinionSelector(Not(IsType(MINION_TYPE.MECH, True)), BothPlayer(\n            ), RandomPicker())))])\n", "score": -6.2069804423808534, "score_history": [-0.0023937225341796875, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -7.43865966796875e-05, -0.012602788396179676, -0.015999004244804382, 0.0, -9.5367431640625e-06, 0.0, -8.06911411928013e-05, -2.0384708477649838e-05, -7.283687591552734e-05, -7.05718994140625e-05, -0.16347694396972656, -0.004998207092285156, -0.002053178148344159, -0.0004178785311523825, -0.00012147425877628848, 0.0, -0.18442118167877197, -1.33514404296875e-05, -0.02755260467529297, 0.0, -0.0012664794921875, -3.969663143157959, -0.0014064210699871182, -3.6954646930098534e-05, -1.7523612768854946e-05, -9.417526598554105e-06, -0.023193001747131348, -0.0002766847610473633, -7.748603820800781e-06, -0.02467942237854004, -0.00034606456756591797, -1.9073486328125e-06, -0.00012969970703125, -1.52587890625e-05, -0.003650665283203125, -2.3841855067985307e-07, -0.467529296875, -0.0026531219482421875, 0.0, -0.0059814453125, -0.06163311004638672, -0.017803192138671875, -0.00198209285736084, -0.0004799424496013671, -5.340576171875e-05, -2.86102294921875e-05, -0.0543365478515625, -0.015350580215454102, 0.0, -0.029592514038085938, -0.0006198883056640625, -1.9073486328125e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.029079675674438477, -1.9073486328125e-06, -0.1783275604248047, -1.9073486328125e-06, -0.1193695068359375, -4.9591064453125e-05, -0.2437230348587036, 0.0, -0.0032281875610351562, -1.9073486328125e-06, -0.005911707412451506, -7.581709360238165e-05, -5.7220458984375e-06, -0.1651172637939453, -5.7220458984375e-06, -0.36470139026641846, -0.00016677379608154297, 0.0], "choice_history": [96, 173, 358, 105, 152, "Lightwell", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 117, 197, "Lightwell", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "RARE", "<EOS>", 112, 191, "0", "<EOS>", "5", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "3", "<EOS>", "Minion", "Selector", "<EOS>", 348, 77, 302, "Not", "<EOS>", 21, 174, "Is", "Type", "<EOS>", 347, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 51, 175, "True", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 88, 325, "Random", "Picker", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole1": 2, "hole3": "RARE", "_type": "Template13", "hole0": "Lightwell", "hole2": "ROGUE"}, {"hole5": "MinionSelector", "hole2": "TurnEnded", "hole0": 0, "_type": "Template0", "hole3": "Heal", "hole1": 5, "hole4": [{"n": 3, "_type": "Num"}], "hole6": [{"hole1": {"id": "IsType", "_type": "Name"}, "_type": "Template64", "hole0": "Not", "hole2": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MECH", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}, {"_type": "Template79", "hole0": "BothPlayer"}, {"_type": "Template79", "hole0": "RandomPicker"}]}], "name": "Lightwell", "_type": "ClassDef"}], "_type": "Module"}}]}
{"gold_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n", "beams": [{"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(Manaspell()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score": -1.3996930207390434, "score_history": [-0.0001697540283203125, -8.96453857421875e-05, -0.014397311955690384, -0.0001407806994393468, -9.179073458653875e-06, -6.680376827716827e-05, -1.621246337890625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.003459930419921875, -2.6702880859375e-05, -1.1920928244535389e-07, -0.001349637284874916, -2.6702880859375e-05, -2.47955322265625e-05, -0.00023532775230705738, 0.0, -0.000720977783203125, -2.288818359375e-05, -0.04541206359863281, 0.0, -5.352497100830078e-05, 0.0, -1.9073486328125e-06, -0.26198673248291016, -0.00017547607421875, -0.0001811981201171875, -0.0006694793701171875, -4.8875676839088555e-06, -4.303399327909574e-05, -0.0006233453750610352, -1.0848039892152883e-05, -0.0030327290296554565, -0.1280653476715088, -0.00010942854714812711, -1.33514404296875e-05, -0.041164398193359375, -8.7738037109375e-05, -0.44053223729133606, -0.24668824672698975, -0.00014423283573705703, -2.288818359375e-05, -0.1453075408935547, -0.04265117645263672, -5.1140610594302416e-05, -0.0001125323396991007, -0.0018110275268554688, -5.91278076171875e-05, -0.01445689331740141, -0.00013458551256917417, -1.7881377516459906e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0005950927734375, -7.62939453125e-06, -0.004706382751464844, -2.2649765014648438e-06, -5.7220458984375e-06], "choice_history": [97, 283, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 88, 325, "Mana", "spell", "<EOS>", 346, 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 1, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "Manaspell"}], "hole1": 3, "hole4": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Mana Wyrm", "hole2": "MAGE"}], "hole0": "ManaWyrm", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(ManaMana()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score": -3.383378884228698, "score_history": [-0.0001697540283203125, -8.96453857421875e-05, -0.014397311955690384, -0.0001407806994393468, -9.179073458653875e-06, -6.680376827716827e-05, -1.621246337890625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.003459930419921875, -2.6702880859375e-05, -1.1920928244535389e-07, -0.001349637284874916, -2.6702880859375e-05, -2.47955322265625e-05, -0.00023532775230705738, 0.0, -0.000720977783203125, -2.288818359375e-05, -0.04541206359863281, 0.0, -5.352497100830078e-05, 0.0, -1.9073486328125e-06, -0.26198673248291016, -0.00017547607421875, -0.0001811981201171875, -0.0006694793701171875, -4.8875676839088555e-06, -4.303399327909574e-05, -0.0006233453750610352, -1.0848039892152883e-05, -0.0030327290296554565, -0.1280653476715088, -0.00010942854714812711, -1.33514404296875e-05, -0.041164398193359375, -8.7738037109375e-05, -0.44053223729133606, -2.2001254558563232, -0.003043443663045764, -6.29425048828125e-05, -0.08940315246582031, -0.12642860412597656, -6.18695848970674e-05, -5.9961988881696016e-05, -0.003032684326171875, -0.0001506805419921875, -0.01020109374076128, -0.00011813297896878794, -3.814689989667386e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0004329681396484375, -7.62939453125e-06, -0.007303833961486816, -2.1457672119140625e-06, -5.7220458984375e-06], "choice_history": [97, 283, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 88, 325, "Mana", "Mana", "<EOS>", 346, 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 1, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "ManaMana"}], "hole1": 3, "hole4": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Mana Wyrm", "hole2": "MAGE"}], "hole0": "ManaWyrm", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(Hasspell()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score": -3.900202809159495, "score_history": [-0.0001697540283203125, -8.96453857421875e-05, -0.014397311955690384, -0.0001407806994393468, -9.179073458653875e-06, -6.680376827716827e-05, -1.621246337890625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.003459930419921875, -2.6702880859375e-05, -1.1920928244535389e-07, -0.001349637284874916, -2.6702880859375e-05, -2.47955322265625e-05, -0.00023532775230705738, 0.0, -0.000720977783203125, -2.288818359375e-05, -0.04541206359863281, 0.0, -5.352497100830078e-05, 0.0, -1.9073486328125e-06, -0.26198673248291016, -0.00017547607421875, -0.0001811981201171875, -0.0006694793701171875, -4.8875676839088555e-06, -4.303399327909574e-05, -0.0006233453750610352, -1.0848039892152883e-05, -0.0030327290296554565, -0.1280653476715088, -0.00010942854714812711, -1.33514404296875e-05, -0.041164398193359375, -8.7738037109375e-05, -2.1719233989715576, -1.064560055732727, -0.002123389160260558, -4.1961669921875e-05, -0.14660358428955078, -0.006352424621582031, -2.038477578025777e-05, -0.00011455814092187211, -0.0003070831298828125, -0.0001277923583984375, -0.0034880044404417276, -7.462480425601825e-05, -2.622600959512056e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0009593963040970266, -7.62939453125e-06, -0.0010874271392822266, -1.1920928244535389e-07, -7.748603820800781e-06], "choice_history": [97, 283, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 88, 325, "Has", "spell", "<EOS>", 346, 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 1, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "Hasspell"}], "hole1": 3, "hole4": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Mana Wyrm", "hole2": "MAGE"}], "hole0": "ManaWyrm", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score": -3.911459719819156, "score_history": [-0.0001697540283203125, -8.96453857421875e-05, -0.014397311955690384, -0.0001407806994393468, -9.179073458653875e-06, -6.680376827716827e-05, -1.621246337890625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.003459930419921875, -2.6702880859375e-05, -1.1920928244535389e-07, -0.001349637284874916, -2.6702880859375e-05, -2.47955322265625e-05, -0.00023532775230705738, 0.0, -0.000720977783203125, -2.288818359375e-05, -0.04541206359863281, 0.0, -5.352497100830078e-05, 0.0, -1.9073486328125e-06, -3.386500358581543, -2.47955322265625e-05, -4.9232188757741824e-05, -1.4305104514278355e-06, -0.00039987650234252214, 0.0, -0.006612062454223633, 0.0, -0.0001201629638671875, -0.0011463165283203125, -0.002872943878173828, 0.0, -0.0007038116455078125, -0.011381149291992188, -0.0011653900146484375, -5.7220458984375e-06, 0.0, -0.32167577743530273, -0.004221916198730469, 0.0, -0.0003795623779296875, -0.0001010894775390625, -3.814697265625e-06, -0.00030732154846191406, 0.0, -0.0001220703125, 0.0, -0.07086167484521866, -0.0025060176849365234, -4.0531158447265625e-06, -0.026966094970703125, -0.004639625549316406, -0.00010514259338378906, -0.00012373915524221957, -0.0007228851318359375, -0.0001316070556640625, -0.00029500597156584263, -0.00026833999436348677, -1.2516897186287679e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000537872314453125, -9.5367431640625e-06, -0.00024437904357910156, -1.9073486328125e-06, -1.9073486328125e-06], "choice_history": [97, 283, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 37, 321, "Effect", "<EOS>", 347, 45, 149, 21, 174, "Spell", "Cast", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "hole3": {"hole1": [{"func": {"id": "SpellCast", "_type": "Name"}, "keywords": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "arg": "player", "_type": "keyword"}], "_type": "Call"}, {"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}], "_type": "Template78", "hole0": "Effect"}, "_type": "Template50", "hole0": 1, "hole2": "effects"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Mana Wyrm", "hole2": "MAGE"}], "hole0": "ManaWyrm", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(CardPlayed(HasAttack()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector())), Effect(\n            CardPlayed(HasWyrm()), ActionTag(Give(ChangeHealth(1)),\n            SelfSelector()))])\n", "score": -3.9519627659189425, "score_history": [-0.0001697540283203125, -8.96453857421875e-05, -0.014397311955690384, -0.0001407806994393468, -9.179073458653875e-06, -6.680376827716827e-05, -1.621246337890625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.003459930419921875, -2.6702880859375e-05, -1.1920928244535389e-07, -0.001349637284874916, -2.6702880859375e-05, -2.47955322265625e-05, -0.00023532775230705738, 0.0, -0.000720977783203125, -2.288818359375e-05, -0.04541206359863281, 0.0, -5.352497100830078e-05, 0.0, -1.9073486328125e-06, -1.6566791534423828, -4.38690185546875e-05, -5.235662683844566e-06, 0.0, -2.658340054040309e-05, -2.622600959512056e-06, -0.00047928382991813123, -3.576278118089249e-07, -0.0015048980712890625, -0.03637409210205078, -0.2735004425048828, -0.2730220556259155, -0.02027308940887451, -2.861018856492592e-06, 0.0, -0.0027132034301757812, -1.71661376953125e-05, -0.21756082773208618, -0.27843546867370605, -2.0265558760002023e-06, -1.9073486328125e-06, -0.032927513122558594, -0.0012912750244140625, -0.00014889240264892578, -4.6610399294877425e-05, -0.000232696533203125, -0.0004100799560546875, -0.00014471658505499363, -0.00042188161751255393, -3.6954811548639555e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0008831024169921875, -5.7220458984375e-06, -0.0010700225830078125, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016345977783203125, -0.0014896392822265625, -0.0005832894239574671, -4.887569048150908e-06, -0.001911163330078125, -0.09928703308105469, -0.000244140625, -0.3086792230606079, -0.010667323134839535, -3.2543666748097166e-05, -0.02166358008980751, -0.5994493961334229, -1.3112935448589269e-05, -0.005082130432128906, -0.0007476806640625, -0.0002619028091430664, -0.0005083003197796643, -0.000518798828125, -8.96453857421875e-05, -0.0001031159918056801, -0.033292293548583984, -7.271502545336261e-05, -6.103515625e-05, -9.5367431640625e-06, 0.0, -0.0006389617919921875, -1.1444091796875e-05, -0.0004203319549560547, -3.814697265625e-06, -3.814697265625e-06], "choice_history": [97, 283, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 353, 93, 277, "Card", "Played", "<EOS>", 346, 88, 325, "Has", "Attack", "<EOS>", 346, 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>", 346, 87, 324, "Effect", "<EOS>", 347, 70, 292, "Card", "Played", "<EOS>", "Has", "Wyrm", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Health", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "HasAttack"}], "hole3": [{"hole1": [{"hole1": "HasWyrm", "_type": "Template55", "hole0": "CardPlayed"}, {"hole1": {"id": "ChangeHealth", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}], "_type": "Template78_expr_seq", "hole0": "Effect"}], "_type": "Template45", "hole0": "CardPlayed", "hole2": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}]}], "_type": "Template68", "hole0": "Minion", "hole2": 3}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Mana Wyrm", "hole2": "MAGE"}], "hole0": "ManaWyrm", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(HasAttack()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score": -4.274796162577978, "score_history": [-0.0001697540283203125, -8.96453857421875e-05, -0.014397311955690384, -0.0001407806994393468, -9.179073458653875e-06, -6.680376827716827e-05, -1.621246337890625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.003459930419921875, -2.6702880859375e-05, -1.1920928244535389e-07, -0.001349637284874916, -2.6702880859375e-05, -2.47955322265625e-05, -0.00023532775230705738, 0.0, -0.000720977783203125, -2.288818359375e-05, -0.04541206359863281, 0.0, -5.352497100830078e-05, 0.0, -1.9073486328125e-06, -0.26198673248291016, -0.00017547607421875, -0.0001811981201171875, -0.0006694793701171875, -4.8875676839088555e-06, -4.303399327909574e-05, -0.0006233453750610352, -1.0848039892152883e-05, -0.0030327290296554565, -0.1280653476715088, -0.00010942854714812711, -1.33514404296875e-05, -0.041164398193359375, -8.7738037109375e-05, -2.1719233989715576, -1.3677654266357422, -1.2755353964166716e-05, -8.7738037109375e-05, -0.12555980682373047, -0.10093879699707031, -3.385542368050665e-05, -6.163052603369579e-05, -0.0006351470947265625, -0.0002384185791015625, -0.002844401868060231, -7.104842370608822e-05, -4.410734163684538e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000820159912109375, -7.62939453125e-06, -0.0013848543167114258, -2.3841855067985307e-07, -5.841255187988281e-06], "choice_history": [97, 283, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 88, 325, "Has", "Attack", "<EOS>", 346, 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 1, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "HasAttack"}], "hole1": 3, "hole4": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Mana Wyrm", "hole2": "MAGE"}], "hole0": "ManaWyrm", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(<UNK>()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score": -4.451292633479163, "score_history": [-0.0001697540283203125, -8.96453857421875e-05, -0.014397311955690384, -0.0001407806994393468, -9.179073458653875e-06, -6.680376827716827e-05, -1.621246337890625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.003459930419921875, -2.6702880859375e-05, -1.1920928244535389e-07, -0.001349637284874916, -2.6702880859375e-05, -2.47955322265625e-05, -0.00023532775230705738, 0.0, -0.000720977783203125, -2.288818359375e-05, -0.04541206359863281, 0.0, -5.352497100830078e-05, 0.0, -1.9073486328125e-06, -0.26198673248291016, -0.00017547607421875, -0.0001811981201171875, -0.0006694793701171875, -4.8875676839088555e-06, -4.303399327909574e-05, -0.0006233453750610352, -1.0848039892152883e-05, -0.0030327290296554565, -0.1280653476715088, -0.00010942854714812711, -1.33514404296875e-05, -0.041164398193359375, -8.7738037109375e-05, -2.593040704727173, -0.7737871408462524, -5.7220458984375e-05, -0.523406982421875, -0.018686294555664062, -3.969667886849493e-05, -0.00016295668319799006, -0.0020084381103515625, -9.918212890625e-05, -0.023394744843244553, -0.00019430489919614047, -3.099436753473128e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0004366636567283422, -3.814697265625e-06, -0.013561129570007324, -2.0265579223632812e-06, -5.7220458984375e-06], "choice_history": [97, 283, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 88, 325, "<UNK>", "<EOS>", 346, 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 1, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "<UNK>"}], "hole1": 3, "hole4": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Mana Wyrm", "hole2": "MAGE"}], "hole0": "ManaWyrm", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(IsMinion()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(<UNK>())))])\n", "score": -4.59289802538477, "score_history": [-0.0001697540283203125, -8.96453857421875e-05, -0.014397311955690384, -0.0001407806994393468, -9.179073458653875e-06, -6.680376827716827e-05, -1.621246337890625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.003459930419921875, -2.6702880859375e-05, -1.1920928244535389e-07, -0.001349637284874916, -2.6702880859375e-05, -2.47955322265625e-05, -0.00023532775230705738, 0.0, -0.000720977783203125, -2.288818359375e-05, -0.04541206359863281, 0.0, -5.352497100830078e-05, 0.0, -1.9073486328125e-06, -0.26198673248291016, -0.00017547607421875, -0.0001811981201171875, -0.0006694793701171875, -4.8875676839088555e-06, -4.303399327909574e-05, -0.0006233453750610352, -1.0848039892152883e-05, -0.0030327290296554565, -0.1280653476715088, -0.00010942854714812711, -1.33514404296875e-05, -0.041164398193359375, -8.7738037109375e-05, -2.132209539413452, -0.030656151473522186, -0.016324281692504883, -0.000152587890625, -0.1161031723022461, -0.07513904571533203, -0.1273157149553299, -0.0015877769328653812, -0.00010060777276521549, -5.7220458984375e-06, -0.0058345794677734375, -0.020372390747070312, -1.52587890625e-05, 0.0, -0.0022444718051701784, -0.0013793706893920898, -6.0796710386057384e-06, -0.0001983642578125, -8.0108642578125e-05, -1.9073486328125e-05, -0.680336594581604, -2.0265558760002023e-06, -0.00469970703125, -3.814697265625e-06, -0.0071125030517578125, 0.0, -0.03643620014190674, -5.233286719885655e-05, -0.22554993629455566, -1.1920928244535389e-07, -0.10288453102111816, -0.0004616975784301758, 0.0, -0.0014667510986328125, -0.005217552185058594, -7.62939453125e-06, -0.01855589635670185, -0.47797155380249023], "choice_history": [97, 283, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 88, 325, "Is", "Minion", "<EOS>", 346, 64, 272, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "<UNK>", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 1, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "IsMinion"}], "hole1": 3, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "arg": "source", "_type": "keyword"}], "_type": "Call"}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard", "hole4": [{"_type": "Template79", "hole0": "<UNK>"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Mana Wyrm", "hole2": "MAGE"}], "hole0": "ManaWyrm", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionDied(IsType(MINION_TYPE.\n            PIRATE)), ActionTag(Give(spell()), SelfSelector()))])\n", "score": -4.845846946325068, "score_history": [-0.0001697540283203125, -8.96453857421875e-05, -0.014397311955690384, -0.0001407806994393468, -9.179073458653875e-06, -6.680376827716827e-05, -1.621246337890625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.003459930419921875, -2.6702880859375e-05, -1.1920928244535389e-07, -0.001349637284874916, -2.6702880859375e-05, -2.47955322265625e-05, -0.00023532775230705738, 0.0, -0.000720977783203125, -2.288818359375e-05, -0.04541206359863281, 0.0, -5.352497100830078e-05, 0.0, -1.9073486328125e-06, -0.26198673248291016, -0.00017547607421875, -0.0001811981201171875, -0.0006694793701171875, -4.8875676839088555e-06, -4.303399327909574e-05, -0.0006233453750610352, -1.0848039892152883e-05, -0.0030327290296554565, -2.881274461746216, -2.2649765014648438e-06, -2.288818359375e-05, -0.44158172607421875, -0.0005168914794921875, -0.10749542713165283, -2.2649765014648438e-06, -1.52587890625e-05, -0.2746267318725586, -0.06098175048828125, -0.00031372447847388685, -0.00014137585822027177, -0.000507354736328125, -2.09808349609375e-05, -0.05573180690407753, -0.46936842799186707, -0.22028326988220215, -5.602834789897315e-06, -1.1920928244535389e-07], "choice_history": [97, 283, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "1", "<EOS>", "3", "<EOS>", "Minion", "Died", "<EOS>", 346, 74, 297, "PIRATE", "<EOS>", 346, 60, 237, "Give", "<EOS>", 21, 174, "spell", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionDied", "hole0": 1, "_type": "Template36", "hole3": [{"_type": "Template60", "hole0": "PIRATE"}], "hole1": 3, "hole4": [{"hole1": {"id": "spell", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give"}]}, "_type": "Return"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Mana Wyrm", "hole2": "MAGE"}], "hole0": "ManaWyrm", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(CardPlayed(HasAttack()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector())), Effect(\n            CardPlayed(HasMana()), ActionTag(Give(ChangeHealth(1)),\n            SelfSelector()))])\n", "score": -5.002538961529972, "score_history": [-0.0001697540283203125, -8.96453857421875e-05, -0.014397311955690384, -0.0001407806994393468, -9.179073458653875e-06, -6.680376827716827e-05, -1.621246337890625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.003459930419921875, -2.6702880859375e-05, -1.1920928244535389e-07, -0.001349637284874916, -2.6702880859375e-05, -2.47955322265625e-05, -0.00023532775230705738, 0.0, -0.000720977783203125, -2.288818359375e-05, -0.04541206359863281, 0.0, -5.352497100830078e-05, 0.0, -1.9073486328125e-06, -1.6566791534423828, -4.38690185546875e-05, -5.235662683844566e-06, 0.0, -2.658340054040309e-05, -2.622600959512056e-06, -0.00047928382991813123, -3.576278118089249e-07, -0.0015048980712890625, -0.03637409210205078, -0.2735004425048828, -0.2730220556259155, -0.02027308940887451, -2.861018856492592e-06, 0.0, -0.0027132034301757812, -1.71661376953125e-05, -0.21756082773208618, -0.27843546867370605, -2.0265558760002023e-06, -1.9073486328125e-06, -0.032927513122558594, -0.0012912750244140625, -0.00014889240264892578, -4.6610399294877425e-05, -0.000232696533203125, -0.0004100799560546875, -0.00014471658505499363, -0.00042188161751255393, -3.6954811548639555e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0008831024169921875, -5.7220458984375e-06, -0.0010700225830078125, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016345977783203125, -0.0014896392822265625, -0.0005832894239574671, -4.887569048150908e-06, -0.001911163330078125, -0.09928703308105469, -0.000244140625, -0.3086792230606079, -0.010667323134839535, -3.2543666748097166e-05, -0.02166358008980751, -1.5927889347076416, -0.05006108805537224, -0.03035736083984375, -0.0010890960693359375, -8.678434824105352e-05, -0.00011169307981617749, -0.0004329681396484375, -4.57763671875e-05, -6.473062967415899e-05, -0.01565384864807129, -3.4450891689630225e-05, -5.53131103515625e-05, -1.71661376953125e-05, 0.0, -0.0005664825439453125, -7.62939453125e-06, -0.0004832744598388672, -3.814697265625e-06, -3.814697265625e-06], "choice_history": [97, 283, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 353, 93, 277, "Card", "Played", "<EOS>", 346, 88, 325, "Has", "Attack", "<EOS>", 346, 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>", 346, 87, 324, "Effect", "<EOS>", 347, 70, 292, "Card", "Played", "<EOS>", "Has", "Mana", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Health", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "HasAttack"}], "hole3": [{"hole1": [{"hole1": "HasMana", "_type": "Template55", "hole0": "CardPlayed"}, {"hole1": {"id": "ChangeHealth", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}], "_type": "Template78_expr_seq", "hole0": "Effect"}], "_type": "Template45", "hole0": "CardPlayed", "hole2": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}]}], "_type": "Template68", "hole0": "Minion", "hole2": 3}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Mana Wyrm", "hole2": "MAGE"}], "hole0": "ManaWyrm", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.PIRATE)), ActionTag(Give(spell()), SelfSelector()))])\n", "score": -5.040765136941658, "score_history": [-0.0001697540283203125, -8.96453857421875e-05, -0.014397311955690384, -0.0001407806994393468, -9.179073458653875e-06, -6.680376827716827e-05, -1.621246337890625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.003459930419921875, -2.6702880859375e-05, -1.1920928244535389e-07, -0.001349637284874916, -2.6702880859375e-05, -2.47955322265625e-05, -0.00023532775230705738, 0.0, -0.000720977783203125, -2.288818359375e-05, -0.04541206359863281, 0.0, -5.352497100830078e-05, 0.0, -1.9073486328125e-06, -0.26198673248291016, -0.00017547607421875, -0.0001811981201171875, -0.0006694793701171875, -4.8875676839088555e-06, -4.303399327909574e-05, -0.0006233453750610352, -1.0848039892152883e-05, -0.0030327290296554565, -0.1280653476715088, -0.00010942854714812711, -1.33514404296875e-05, -3.293246269226074, -0.000484466552734375, -0.09094858169555664, -2.1457672119140625e-06, -1.71661376953125e-05, -0.3841056823730469, -0.040968894958496094, -0.0004942687228322029, -0.00019119938951916993, -0.0006122589111328125, -2.09808349609375e-05, -0.04760085418820381, -0.5215775966644287, -0.19934797286987305, -3.933904736186378e-06, -1.1920928244535389e-07], "choice_history": [97, 283, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 74, 297, "PIRATE", "<EOS>", 346, 60, 237, "Give", "<EOS>", 21, 174, "spell", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 1, "_type": "Template36", "hole3": [{"_type": "Template60", "hole0": "PIRATE"}], "hole1": 3, "hole4": [{"hole1": {"id": "spell", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give"}]}, "_type": "Return"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Mana Wyrm", "hole2": "MAGE"}], "hole0": "ManaWyrm", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(CardPlayed(HasAttack()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector())), Effect(\n            CardPlayed(HasAttack()), ActionTag(Give(ChangeHealth(1)),\n            SelfSelector()))])\n", "score": -5.079509901783858, "score_history": [-0.0001697540283203125, -8.96453857421875e-05, -0.014397311955690384, -0.0001407806994393468, -9.179073458653875e-06, -6.680376827716827e-05, -1.621246337890625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.003459930419921875, -2.6702880859375e-05, -1.1920928244535389e-07, -0.001349637284874916, -2.6702880859375e-05, -2.47955322265625e-05, -0.00023532775230705738, 0.0, -0.000720977783203125, -2.288818359375e-05, -0.04541206359863281, 0.0, -5.352497100830078e-05, 0.0, -1.9073486328125e-06, -1.6566791534423828, -4.38690185546875e-05, -5.235662683844566e-06, 0.0, -2.658340054040309e-05, -2.622600959512056e-06, -0.00047928382991813123, -3.576278118089249e-07, -0.0015048980712890625, -0.03637409210205078, -0.2735004425048828, -0.2730220556259155, -0.02027308940887451, -2.861018856492592e-06, 0.0, -0.0027132034301757812, -1.71661376953125e-05, -0.21756082773208618, -0.27843546867370605, -2.0265558760002023e-06, -1.9073486328125e-06, -0.032927513122558594, -0.0012912750244140625, -0.00014889240264892578, -4.6610399294877425e-05, -0.000232696533203125, -0.0004100799560546875, -0.00014471658505499363, -0.00042188161751255393, -3.6954811548639555e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0008831024169921875, -5.7220458984375e-06, -0.0010700225830078125, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016345977783203125, -0.0014896392822265625, -0.0005832894239574671, -4.887569048150908e-06, -0.001911163330078125, -0.09928703308105469, -0.000244140625, -0.3086792230606079, -0.010667323134839535, -3.2543666748097166e-05, -0.02166358008980751, -1.7275422811508179, -6.198873961693607e-06, -0.025249481201171875, -0.001071929931640625, -0.00012803077697753906, -0.00019798740686383098, -0.00051116943359375, -6.103515625e-05, -0.00012314316700212657, -0.012716174125671387, -3.540453326422721e-05, -5.91278076171875e-05, -1.1444091796875e-05, 0.0, -0.0005950927734375, -5.7220458984375e-06, -0.0005133152008056641, -5.7220458984375e-06, -1.9073486328125e-06], "choice_history": [97, 283, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 353, 93, 277, "Card", "Played", "<EOS>", 346, 88, 325, "Has", "Attack", "<EOS>", 346, 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>", 346, 87, 324, "Effect", "<EOS>", 347, 70, 292, "Card", "Played", "<EOS>", "Has", "Attack", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Health", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "HasAttack"}], "hole3": [{"hole1": [{"hole1": "HasAttack", "_type": "Template55", "hole0": "CardPlayed"}, {"hole1": {"id": "ChangeHealth", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}], "_type": "Template78_expr_seq", "hole0": "Effect"}], "_type": "Template45", "hole0": "CardPlayed", "hole2": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}]}], "_type": "Template68", "hole0": "Minion", "hole2": 3}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Mana Wyrm", "hole2": "MAGE"}], "hole0": "ManaWyrm", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(CardPlayed(HasAttack()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector())), Effect(\n            TurnEnded(<UNK>()), ActionTag(Give(ChangeHealth(1)),\n            SelfSelector()))])\n", "score": -5.08964319854902, "score_history": [-0.0001697540283203125, -8.96453857421875e-05, -0.014397311955690384, -0.0001407806994393468, -9.179073458653875e-06, -6.680376827716827e-05, -1.621246337890625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.003459930419921875, -2.6702880859375e-05, -1.1920928244535389e-07, -0.001349637284874916, -2.6702880859375e-05, -2.47955322265625e-05, -0.00023532775230705738, 0.0, -0.000720977783203125, -2.288818359375e-05, -0.04541206359863281, 0.0, -5.352497100830078e-05, 0.0, -1.9073486328125e-06, -1.6566791534423828, -4.38690185546875e-05, -5.235662683844566e-06, 0.0, -2.658340054040309e-05, -2.622600959512056e-06, -0.00047928382991813123, -3.576278118089249e-07, -0.0015048980712890625, -0.03637409210205078, -0.2735004425048828, -0.2730220556259155, -0.02027308940887451, -2.861018856492592e-06, 0.0, -0.0027132034301757812, -1.71661376953125e-05, -0.21756082773208618, -0.27843546867370605, -2.0265558760002023e-06, -1.9073486328125e-06, -0.032927513122558594, -0.0012912750244140625, -0.00014889240264892578, -4.6610399294877425e-05, -0.000232696533203125, -0.0004100799560546875, -0.00014471658505499363, -0.00042188161751255393, -3.6954811548639555e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0008831024169921875, -5.7220458984375e-06, -0.0010700225830078125, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0016345977783203125, -0.0014896392822265625, -0.0005832894239574671, -4.887569048150908e-06, -0.001911163330078125, -0.09928703308105469, -0.000244140625, -1.4733206033706665, -0.03444933518767357, -3.218649908376392e-06, -0.5621801018714905, -0.0003611436695791781, -0.017728805541992188, -0.0014925003051757812, -0.00026345252990722656, -0.0007917175535112619, -0.0003910064697265625, -4.1961669921875e-05, -0.00012087814684491605, -0.027355074882507324, -5.352353764465079e-05, -5.91278076171875e-05, -1.1444091796875e-05, 0.0, -0.00064849853515625, -9.5367431640625e-06, -0.0007215738296508789, -3.814697265625e-06, -3.814697265625e-06], "choice_history": [97, 283, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 353, 93, 277, "Card", "Played", "<EOS>", 346, 88, 325, "Has", "Attack", "<EOS>", 346, 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>", 346, 87, 324, "Effect", "<EOS>", 347, 70, 292, "Turn", "Ended", "<EOS>", "<UNK>", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Health", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "HasAttack"}], "hole3": [{"hole1": [{"hole1": "<UNK>", "_type": "Template55", "hole0": "TurnEnded"}, {"hole1": {"id": "ChangeHealth", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}], "_type": "Template78_expr_seq", "hole0": "Effect"}], "_type": "Template45", "hole0": "CardPlayed", "hole2": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}]}], "_type": "Template68", "hole0": "Minion", "hole2": 3}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Mana Wyrm", "hole2": "MAGE"}], "hole0": "ManaWyrm", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(IsMinion()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(<UNK>Player())))])\n", "score": -5.168080105653175, "score_history": [-0.0001697540283203125, -8.96453857421875e-05, -0.014397311955690384, -0.0001407806994393468, -9.179073458653875e-06, -6.680376827716827e-05, -1.621246337890625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.003459930419921875, -2.6702880859375e-05, -1.1920928244535389e-07, -0.001349637284874916, -2.6702880859375e-05, -2.47955322265625e-05, -0.00023532775230705738, 0.0, -0.000720977783203125, -2.288818359375e-05, -0.04541206359863281, 0.0, -5.352497100830078e-05, 0.0, -1.9073486328125e-06, -0.26198673248291016, -0.00017547607421875, -0.0001811981201171875, -0.0006694793701171875, -4.8875676839088555e-06, -4.303399327909574e-05, -0.0006233453750610352, -1.0848039892152883e-05, -0.0030327290296554565, -0.1280653476715088, -0.00010942854714812711, -1.33514404296875e-05, -0.041164398193359375, -8.7738037109375e-05, -2.132209539413452, -0.030656151473522186, -0.016324281692504883, -0.000152587890625, -0.1161031723022461, -0.07513904571533203, -0.1273157149553299, -0.0015877769328653812, -0.00010060777276521549, -5.7220458984375e-06, -0.0058345794677734375, -0.020372390747070312, -1.52587890625e-05, 0.0, -0.0022444718051701784, -0.0013793706893920898, -6.0796710386057384e-06, -0.0001983642578125, -8.0108642578125e-05, -1.9073486328125e-05, -0.680336594581604, -2.0265558760002023e-06, -0.00469970703125, -3.814697265625e-06, -0.0071125030517578125, 0.0, -0.03643620014190674, -5.233286719885655e-05, -0.22554993629455566, -1.1920928244535389e-07, -0.10288453102111816, -0.0004616975784301758, 0.0, -0.0014667510986328125, -0.005217552185058594, -7.62939453125e-06, -0.01855589635670185, -1.0531506538391113, -2.9802317840221804e-06], "choice_history": [97, 283, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 346, 88, 325, "Is", "Minion", "<EOS>", 346, 64, 272, "Add", "Card", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "source", "<EOS>", 13, 143, 21, 174, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", "Player", "Selector", "<EOS>", 346, 88, 325, "<UNK>", "Player", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "MinionSummoned", "hole0": 1, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "IsMinion"}], "hole1": 3, "hole4": [{"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "<UNK>", "_type": "Attribute"}, "arg": "source", "_type": "keyword"}], "_type": "Call"}], "hole3": "PlayerSelector", "_type": "Template44", "hole0": "AddCard", "hole4": [{"_type": "Template79", "hole0": "<UNK>Player"}]}]}, "_type": "Return"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Mana Wyrm", "hole2": "MAGE"}], "hole0": "ManaWyrm", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_weapon(self, player):\n        return Minion(1, 3, effects=[Effect(CardPlayed(HasAttack()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector())), Effect(\n            CardPlayed(HasWyrm()), ActionTag(Give(ChangeHealth(1)),\n            SelfSelector()))])\n", "score": -5.371370229838178, "score_history": [-0.0001697540283203125, -8.96453857421875e-05, -0.014397311955690384, -0.0001407806994393468, -9.179073458653875e-06, -6.680376827716827e-05, -1.621246337890625e-05, -7.152555099310121e-07, -1.9073486328125e-06, -0.003459930419921875, -2.6702880859375e-05, -1.1920928244535389e-07, -0.001349637284874916, -2.6702880859375e-05, -2.47955322265625e-05, -0.00023532775230705738, 0.0, -0.000720977783203125, -2.288818359375e-05, -3.1402816772460938, 0.0, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -0.01631927490234375, -6.29425048828125e-05, -4.4049229472875595e-06, -1.1920928244535389e-07, -2.3245613192557357e-05, -2.622600959512056e-06, -0.0005069299368187785, -3.576278118089249e-07, -0.001026153564453125, -0.033806800842285156, -0.2810392379760742, -0.24425439536571503, -0.02031683921813965, -2.9802276912960224e-06, 0.0, -0.0024127960205078125, -1.71661376953125e-05, -0.20082783699035645, -0.28996944427490234, -2.145764938177308e-06, -1.9073486328125e-06, -0.03065204620361328, -0.0012187957763671875, -0.00014507770538330078, -4.613357305061072e-05, -0.00023651123046875, -0.000415802001953125, -0.0001444783410988748, -0.00042545789619907737, -3.6954811548639555e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0008869171142578125, -5.7220458984375e-06, -0.0010929107666015625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0016469955444335938, -0.0015344619750976562, -0.0005816204939037561, -4.887569048150908e-06, -0.00189971923828125, -0.09929561614990234, -0.000244140625, -0.3063685894012451, -0.010639785788953304, -3.2543666748097166e-05, -0.021721037104725838, -0.5987991094589233, -1.3112935448589269e-05, -0.0050792694091796875, -0.0007457733154296875, -0.0002619028091430664, -0.0005079429247416556, -0.000518798828125, -8.96453857421875e-05, -0.0001031159918056801, -0.0331120491027832, -7.271502545336261e-05, -6.103515625e-05, -9.5367431640625e-06, 0.0, -0.0006389617919921875, -1.1444091796875e-05, -0.0004203319549560547, -3.814697265625e-06, -3.814697265625e-06], "choice_history": [97, 283, "Mana", "Wyrm", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "1", "<EOS>", "3", "<EOS>", 353, 93, 277, "Card", "Played", "<EOS>", 346, 88, 325, "Has", "Attack", "<EOS>", 346, 60, 238, "Give", "<EOS>", 21, 174, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>", 346, 87, 324, "Effect", "<EOS>", 347, 70, 292, "Card", "Played", "<EOS>", "Has", "Wyrm", "<EOS>", 60, 238, "Give", "<EOS>", 21, 174, "Change", "Health", "<EOS>", 346, 52, 179, "1", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": [{"hole1": [{"_type": "Template79", "hole0": "HasAttack"}], "hole3": [{"hole1": [{"hole1": "HasWyrm", "_type": "Template55", "hole0": "CardPlayed"}, {"hole1": {"id": "ChangeHealth", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}], "_type": "Template78_expr_seq", "hole0": "Effect"}], "_type": "Template45", "hole0": "CardPlayed", "hole2": [{"hole1": {"id": "ChangeAttack", "_type": "Name"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"n": 1, "_type": "Num"}]}]}], "_type": "Template68", "hole0": "Minion", "hole2": 3}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Mana Wyrm", "hole2": "MAGE"}], "hole0": "ManaWyrm", "_type": "Template5", "hole3": "create_weapon", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class MogushanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "beams": [{"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score": -0.019877147219965252, "score_history": [-0.0001049041748046875, -2.288818359375e-05, -0.0010857118759304285, -4.9947539082495496e-05, -6.079655122448457e-06, -8.7738037109375e-05, -1.33514404296875e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -0.000560760498046875, -2.47955322265625e-05, -1.4305104514278355e-06, -3.4570690331747755e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.051707608392462e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.000446319580078125, 0.0, -1.9073486328125e-06, -0.0008831024169921875, -1.52587890625e-05, -5.960445378150325e-06, -1.3589766240329482e-05, -0.00010454653238411993, 0.0, -0.016123294830322266, 0.0, -5.14984130859375e-05, -2.288818359375e-05, -0.00011467933654785156, 0.0], "choice_history": [97, 283, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "taunt"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Mogu'shan Warden", "hole2": "ALL"}], "hole0": "Mogu'shanWarden", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, divine_shield=True)\n", "score": -4.452535342715571, "score_history": [-0.0001049041748046875, -2.288818359375e-05, -0.0010857118759304285, -4.9947539082495496e-05, -6.079655122448457e-06, -8.7738037109375e-05, -1.33514404296875e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -0.000560760498046875, -2.47955322265625e-05, -1.4305104514278355e-06, -3.4570690331747755e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.051707608392462e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.000446319580078125, 0.0, -1.9073486328125e-06, -0.0008831024169921875, -1.52587890625e-05, -5.960445378150325e-06, -1.3589766240329482e-05, -0.00010454653238411993, 0.0, -4.447986125946045, 0.0, -0.000408172607421875, -3.4332275390625e-05, -0.0005419254302978516, 0.0], "choice_history": [97, 283, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "7", "<EOS>", "divine_shield", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "divine_shield"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Mogu'shan Warden", "hole2": "ALL"}], "hole0": "Mogu'shanWarden", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, spell_targetable=True)\n", "score": -6.536259245417902, "score_history": [-0.0001049041748046875, -2.288818359375e-05, -0.0010857118759304285, -4.9947539082495496e-05, -6.079655122448457e-06, -8.7738037109375e-05, -1.33514404296875e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -0.000560760498046875, -2.47955322265625e-05, -1.4305104514278355e-06, -3.4570690331747755e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.051707608392462e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.000446319580078125, 0.0, -1.9073486328125e-06, -0.0008831024169921875, -1.52587890625e-05, -5.960445378150325e-06, -1.3589766240329482e-05, -0.00010454653238411993, 0.0, -6.282158374786377, 0.0, -0.0003757476806640625, -7.05718994140625e-05, -0.2500840425491333, -5.7220458984375e-06], "choice_history": [97, 283, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "7", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "False", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "spell_targetable"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Mogu'shan Warden", "hole2": "ALL"}], "hole0": "Mogu'shanWarden", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, windfury=True)\n", "score": -7.179917048953364, "score_history": [-0.0001049041748046875, -2.288818359375e-05, -0.0010857118759304285, -4.9947539082495496e-05, -6.079655122448457e-06, -8.7738037109375e-05, -1.33514404296875e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -0.000560760498046875, -2.47955322265625e-05, -1.4305104514278355e-06, -3.4570690331747755e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.051707608392462e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.000446319580078125, 0.0, -1.9073486328125e-06, -0.0008831024169921875, -1.52587890625e-05, -5.960445378150325e-06, -1.3589766240329482e-05, -0.00010454653238411993, 0.0, -7.175581455230713, -1.9073486328125e-06, -0.0001392364501953125, -4.76837158203125e-05, -0.0005819797515869141, 0.0], "choice_history": [97, 283, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "7", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "windfury"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Mogu'shan Warden", "hole2": "ALL"}], "hole0": "Mogu'shanWarden", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ForceWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score": -7.702690749824789, "score_history": [-0.0001049041748046875, -2.288818359375e-05, -7.403985977172852, -0.2793360650539398, -9.65590606938349e-06, -3.88026237487793e-05, -9.5367431640625e-06, -4.0531158447265625e-06, -1.9073486328125e-06, -0.000942230224609375, -1.9073486328125e-05, -3.576272320060525e-06, -3.504752748995088e-05, -1.1920928244535389e-07, 0.0, -2.5748853659024462e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.0004749298095703125, 0.0, -3.814697265625e-06, -0.000942230224609375, -1.33514404296875e-05, -5.960445378150325e-06, -1.3589766240329482e-05, -0.00010645388101693243, 0.0, -0.016336917877197266, 0.0, -5.14984130859375e-05, -2.288818359375e-05, -0.00011658668518066406, 0.0], "choice_history": [97, 283, "Force", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "taunt"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Mogu'shan Warden", "hole2": "ALL"}], "hole0": "ForceWarden", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, spell_targetable=True)\n", "score": -7.803104948542902, "score_history": [-0.0001049041748046875, -2.288818359375e-05, -0.0010857118759304285, -4.9947539082495496e-05, -6.079655122448457e-06, -8.7738037109375e-05, -1.33514404296875e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -0.000560760498046875, -2.47955322265625e-05, -1.4305104514278355e-06, -3.4570690331747755e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.051707608392462e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.000446319580078125, 0.0, -1.9073486328125e-06, -0.0008831024169921875, -1.52587890625e-05, -5.960445378150325e-06, -1.3589766240329482e-05, -0.00010454653238411993, 0.0, -6.282158374786377, 0.0, -0.0003757476806640625, -7.05718994140625e-05, -1.5169316530227661, -3.814697265625e-06], "choice_history": [97, 283, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "7", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "spell_targetable"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Mogu'shan Warden", "hole2": "ALL"}], "hole0": "Mogu'shanWarden", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(1, 7, taunt=True)\n", "score": -7.9018973823739245, "score_history": [-0.0001049041748046875, -2.288818359375e-05, -0.0010857118759304285, -4.9947539082495496e-05, -6.079655122448457e-06, -8.7738037109375e-05, -1.33514404296875e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -0.000560760498046875, -2.47955322265625e-05, -1.4305104514278355e-06, -3.4570690331747755e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.051707608392462e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -7.888459205627441, 0.0, -1.1444091796875e-05, -0.0017490386962890625, -9.5367431640625e-06, -4.410734163684538e-06, -3.576272320060525e-06, -5.185602276469581e-05, 0.0, -0.009325146675109863, 0.0, -5.53131103515625e-05, -2.288818359375e-05, -0.00011086463928222656, 0.0], "choice_history": [97, 283, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 130, 287, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "taunt"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Mogu'shan Warden", "hole2": "ALL"}], "hole0": "Mogu'shanWarden", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}, {"inferred_code": "class <UNK>Warden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score": -8.017348526103312, "score_history": [-0.0001049041748046875, -2.288818359375e-05, -7.998557090759277, -4.9947539082495496e-05, -6.079655122448457e-06, -8.7738037109375e-05, -1.33514404296875e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -0.000560760498046875, -2.47955322265625e-05, -1.4305104514278355e-06, -3.4570690331747755e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.051707608392462e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.000446319580078125, 0.0, -1.9073486328125e-06, -0.0008831024169921875, -1.52587890625e-05, -5.960445378150325e-06, -1.3589766240329482e-05, -0.00010454653238411993, 0.0, -0.016123294830322266, 0.0, -5.14984130859375e-05, -2.288818359375e-05, -0.00011467933654785156, 0.0], "choice_history": [97, 283, "<UNK>", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "taunt"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Mogu'shan Warden", "hole2": "ALL"}], "hole0": "<UNK>Warden", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, SHAMAN=True)\n", "score": -8.174840163729975, "score_history": [-0.0001049041748046875, -2.288818359375e-05, -0.0010857118759304285, -4.9947539082495496e-05, -6.079655122448457e-06, -8.7738037109375e-05, -1.33514404296875e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -0.000560760498046875, -2.47955322265625e-05, -1.4305104514278355e-06, -3.4570690331747755e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.051707608392462e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.000446319580078125, 0.0, -1.9073486328125e-06, -0.0008831024169921875, -1.52587890625e-05, -5.960445378150325e-06, -1.3589766240329482e-05, -0.00010454653238411993, 0.0, -8.17053508758545, 0.0, -0.0005054473876953125, -3.62396240234375e-05, -0.00019860267639160156, 0.0], "choice_history": [97, 283, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "7", "<EOS>", "SHAMAN", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "SHAMAN"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Mogu'shan Warden", "hole2": "ALL"}], "hole0": "Mogu'shanWarden", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True, taunt=True)\n", "score": -8.554121095707025, "score_history": [-0.0001049041748046875, -2.288818359375e-05, -0.0010857118759304285, -4.9947539082495496e-05, -6.079655122448457e-06, -8.7738037109375e-05, -1.33514404296875e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -0.000560760498046875, -2.47955322265625e-05, -1.4305104514278355e-06, -3.4570690331747755e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.051707608392462e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.000446319580078125, 0.0, -1.9073486328125e-06, -7.570036888122559, -0.0008268356323242188, -0.00027073174715042114, -3.24249267578125e-05, -6.079655122448457e-06, -1.1920928244535389e-07, -0.0003919597656931728, 0.0, -0.0036840438842773438, -0.007578849792480469, -6.103515625e-05, -0.2652245759963989, 0.0, -0.0001049041748046875, -2.6702880859375e-05, -0.00038254261016845703, 0.0, -0.25275707244873047, -0.0002765655517578125, -0.4493105411529541, 0.0, -0.0005035400390625, -2.47955322265625e-05, -7.843971252441406e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "1", "<EOS>", "7", "<EOS>", 354, 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "taunt", "_type": "keyword"}, {"value": {"value": true, "_type": "NameConstant"}, "arg": "taunt", "_type": "keyword"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Mogu'shan Warden", "hole2": "ALL"}], "hole0": "Mogu'shanWarden", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, charge=True)\n", "score": -8.567251395724604, "score_history": [-0.0001049041748046875, -2.288818359375e-05, -0.0010857118759304285, -4.9947539082495496e-05, -6.079655122448457e-06, -8.7738037109375e-05, -1.33514404296875e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -0.000560760498046875, -2.47955322265625e-05, -1.4305104514278355e-06, -3.4570690331747755e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.051707608392462e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.000446319580078125, 0.0, -1.9073486328125e-06, -0.0008831024169921875, -1.52587890625e-05, -5.960445378150325e-06, -1.3589766240329482e-05, -0.00010454653238411993, 0.0, -8.562982559204102, 0.0, -0.0002269744873046875, -5.14984130859375e-05, -0.00042366981506347656, -1.9073486328125e-06], "choice_history": [97, 283, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "7", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "charge"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Mogu'shan Warden", "hole2": "ALL"}], "hole0": "Mogu'shanWarden", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score": -8.775736403086277, "score_history": [-0.0001049041748046875, -2.288818359375e-05, -0.0010857118759304285, -4.9947539082495496e-05, -6.079655122448457e-06, -8.7738037109375e-05, -1.33514404296875e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -8.468502044677734, -0.05749702453613281, -1.9073486328125e-05, -0.0021953582763671875, -7.748603820800781e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.0016956329345703125, -0.0002288818359375, -5.53131103515625e-05, -4.29153169534402e-06, -5.0067901611328125e-05, -3.230536458431743e-05, -0.000141143798828125, -1.9073486328125e-06, -3.814697265625e-06, -2.1099893274367787e-05, -1.9073486328125e-06, -0.0001430511474609375, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.000751495361328125, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -0.13730430603027344, -3.814697265625e-06, -7.62939453125e-05, -9.5367431640625e-06, -2.47955322265625e-05, -2.86102294921875e-05, -0.0001201629638671875, -0.046268463134765625, -0.000621795654296875, -0.008570671081542969, 0.0, -3.814697265625e-06, 0.0, -0.04443168640136719, 0.0, -1.1444091796875e-05, -0.0006160736083984375, -3.62396240234375e-05, -1.311301275563892e-06, -7.986990567587782e-06, -3.099439709330909e-05, -1.1920928244535389e-07, -0.0044708251953125, 0.0, -4.76837158203125e-05, -1.71661376953125e-05, -7.069110870361328e-05, 0.0], "choice_history": [97, 283, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Mogu'shan", " ", "Warden", "<EOS>", 52, 179, "4", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "taunt"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "MECH"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Mogu'shan Warden", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Mogu'shanWarden", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, find_minion_spell_target=True)\n", "score": -9.03520877315838, "score_history": [-0.0001049041748046875, -2.288818359375e-05, -0.0010857118759304285, -4.9947539082495496e-05, -6.079655122448457e-06, -8.7738037109375e-05, -1.33514404296875e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -0.000560760498046875, -2.47955322265625e-05, -1.4305104514278355e-06, -3.4570690331747755e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.051707608392462e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.000446319580078125, 0.0, -1.9073486328125e-06, -0.0008831024169921875, -1.52587890625e-05, -5.960445378150325e-06, -1.3589766240329482e-05, -0.00010454653238411993, 0.0, -9.029767036437988, 0.0, -0.0004596710205078125, -4.9591064453125e-05, -0.0013657808303833008, -1.9073486328125e-06], "choice_history": [97, 283, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "1", "<EOS>", "7", "<EOS>", "find_minion_spell_target", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 1, "hole2": "find_minion_spell_target"}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Mogu'shan Warden", "hole2": "ALL"}], "hole0": "Mogu'shanWarden", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True, spell_targetable=True)\n", "score": -9.50553496556482, "score_history": [-0.0001049041748046875, -2.288818359375e-05, -0.0010857118759304285, -4.9947539082495496e-05, -6.079655122448457e-06, -8.7738037109375e-05, -1.33514404296875e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -0.000560760498046875, -2.47955322265625e-05, -1.4305104514278355e-06, -3.4570690331747755e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.051707608392462e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.000446319580078125, 0.0, -1.9073486328125e-06, -7.570036888122559, -0.0008268356323242188, -0.00027073174715042114, -3.24249267578125e-05, -6.079655122448457e-06, -1.1920928244535389e-07, -0.0003919597656931728, 0.0, -0.0036840438842773438, -0.007578849792480469, -6.103515625e-05, -0.2652245759963989, 0.0, -0.0001049041748046875, -2.6702880859375e-05, -0.00038254261016845703, 0.0, -0.25275707244873047, -0.0002765655517578125, -1.1079180240631104, -1.9073486328125e-06, -0.0014133453369140625, -3.814697265625e-05, -0.2919560670852661, -3.814697265625e-06], "choice_history": [97, 283, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "1", "<EOS>", "7", "<EOS>", 354, 95, 336, "taunt", "<EOS>", 22, 175, "True", "<EOS>", 95, 336, "spell_targetable", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "taunt", "_type": "keyword"}, {"value": {"value": true, "_type": "NameConstant"}, "arg": "spell_targetable", "_type": "keyword"}], "_type": "Template68", "hole0": "Minion", "hole2": 7}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Mogu'shan Warden", "hole2": "ALL"}], "hole0": "Mogu'shanWarden", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7)\n", "score": -9.84920454375446, "score_history": [-0.0001049041748046875, -2.288818359375e-05, -0.0010857118759304285, -4.9947539082495496e-05, -6.079655122448457e-06, -8.7738037109375e-05, -1.33514404296875e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -0.000560760498046875, -2.47955322265625e-05, -1.4305104514278355e-06, -3.4570690331747755e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -3.051707608392462e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.000446319580078125, 0.0, -1.9073486328125e-06, -9.836161613464355, -0.000614166259765625, -0.0009201106731779873, -4.768370445162873e-07, -0.00896584801375866, 0.0], "choice_history": [97, 283, "Mogu'shan", "Warden", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "7", "<EOS>"], "model_output": {"hole6": [{"hole1": 7, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": 4, "_type": "Template31", "hole0": "Mogu'shan Warden", "hole2": "ALL"}], "hole0": "Mogu'shanWarden", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n\n        class Gain2(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Gain 2 mana crystals', 0, CHARACTER_CLASS\n                    .DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                if player.max_mana < 8:\n                    player.max_mana += 2\n                    player.mana += 2\n                else:\n                    player.max_mana = 10\n                    player.mana += 2\n\n\n        class Draw3(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Draw three cards', 0, CHARACTER_CLASS.\n                    DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                player.draw()\n                player.draw()\n                player.draw()\n        option = player.agent.choose_option([Gain2(), Draw3()], player)\n        option.use(player, game)\n", "beams": [{"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            <UNK> = NourishJustice()\n            <UNK>.summon(player, game, len(player.minions))\n", "score": -4.549544545073516, "score_history": [-9.5367431640625e-06, -0.0041713714599609375, -0.0003567297535482794, -1.77621805050876e-05, -9.536736342852237e-07, -2.2411262762034312e-05, -6.318082796497038e-06, -3.0517578125e-05, -0.0043239593505859375, -3.0517578125e-05, -3.3378546504536644e-06, -1.9073486328125e-06, 0.0, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -0.0003032684326171875, -3.814697265625e-06, -4.208087921142578e-05, 0.0, -2.09808349609375e-05, -5.91278076171875e-05, -8.463848644169047e-06, -3.8266178307821974e-05, -1.0379610061645508, -0.000186920166015625, -0.0007762908935546875, -3.4332275390625e-05, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -2.777576446533203e-05, -3.814697265625e-05, -1.537799835205078e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.013623237609863281, -0.0012111663818359375, -0.0004024505615234375, -0.0001354217529296875, -0.011986494064331055, -3.814697265625e-06, -0.026441574096679688, -0.000484466552734375, -3.814697265625e-05, -1.9073486328125e-06, -0.0004761219024658203, 0.0, -2.86102294921875e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0005050897016189992, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.26651203632354736, -2.574920654296875e-05, -1.676198959350586, -0.000255584716796875, -5.340576171875e-05, -0.0006542205810546875, -0.000102996826171875, -0.000286102294921875, -0.003791450522840023, -2.360343569307588e-05, -0.37543487548828125, -7.82012939453125e-05, -0.2975333631038666, -0.2007715255022049, -0.03400515764951706, -0.0015087127685546875, -0.0007190704345703125, -0.0001850128173828125, -2.09808349609375e-05, -0.004259228706359863, -1.6689286894688848e-06, -0.009517669677734375, 0.0, -0.0004863739013671875, -4.76837158203125e-05, -3.814697265625e-06, -5.9723854064941406e-05, -2.3841855067985307e-07, -0.5697298049926758, -1.71661376953125e-05, -0.0003777742385864258, -1.1920928244535389e-07, -0.001445770263671875, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -0.0001462695508962497, -3.933906555175781e-06, -4.9591064453125e-05, -0.000110626220703125, -5.7220458984375e-06, -4.9591064453125e-05, -9.5367431640625e-06, -3.8743019104003906e-05, -1.1920928244535389e-07, -0.000408172607421875, -4.1961669921875e-05], "choice_history": [97, 285, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "5", "<EOS>", 359, 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 38, 325, "Nourish", "Justice", "<EOS>", 136, 318, 21, 174, "<UNK>", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 5, "hole3": "RARE", "_type": "Template34", "hole0": "Nourish", "hole2": "DRUID"}], "hole0": "Nourish", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"value": {"_type": "Template79", "hole0": "NourishJustice"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "summon", "_type": "Template77", "hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            <UNK> = NourishJustice()\n", "score": -4.555308393638143, "score_history": [-9.5367431640625e-06, -0.0041713714599609375, -0.0003567297535482794, -1.77621805050876e-05, -9.536736342852237e-07, -2.2411262762034312e-05, -6.318082796497038e-06, -3.0517578125e-05, -0.0043239593505859375, -3.0517578125e-05, -3.3378546504536644e-06, -1.9073486328125e-06, 0.0, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -0.0003032684326171875, -3.814697265625e-06, -4.208087921142578e-05, 0.0, -2.09808349609375e-05, -5.91278076171875e-05, -8.463848644169047e-06, -3.8266178307821974e-05, -1.0379610061645508, -0.000186920166015625, -0.0007762908935546875, -3.4332275390625e-05, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -2.777576446533203e-05, -3.814697265625e-05, -1.537799835205078e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.013623237609863281, -0.0012111663818359375, -0.0004024505615234375, -0.0001354217529296875, -0.011986494064331055, -3.814697265625e-06, -0.026441574096679688, -0.000484466552734375, -3.814697265625e-05, -1.9073486328125e-06, -0.0004761219024658203, 0.0, -2.86102294921875e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0005050897016189992, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.26651203632354736, -2.574920654296875e-05, -0.207427978515625, -2.385995864868164, -1.33514404296875e-05, -0.0003814697265625, -7.62939453125e-06, -8.392333984375e-05, -0.07859807461500168, -0.0002110004425048828, -0.0954122543334961, -1.52587890625e-05, -0.17432716488838196, -0.20077729225158691, -0.0409795381128788], "choice_history": [97, 285, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "5", "<EOS>", 358, 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 38, 325, "Nourish", "Justice", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 5, "hole3": "RARE", "_type": "Template34", "hole0": "Nourish", "hole2": "DRUID"}], "hole0": "Nourish", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"value": {"_type": "Template79", "hole0": "NourishJustice"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            if len(characters) is not Null:\n                player.draw()\n", "score": -4.6901233640126065, "score_history": [-9.5367431640625e-06, -0.0041713714599609375, -0.0003567297535482794, -1.77621805050876e-05, -9.536736342852237e-07, -2.2411262762034312e-05, -6.318082796497038e-06, -3.0517578125e-05, -0.0043239593505859375, -3.0517578125e-05, -3.3378546504536644e-06, -1.9073486328125e-06, 0.0, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -0.0003032684326171875, -3.814697265625e-06, -4.208087921142578e-05, 0.0, -2.09808349609375e-05, -5.91278076171875e-05, -8.463848644169047e-06, -3.8266178307821974e-05, -1.0379610061645508, -0.000186920166015625, -0.0007762908935546875, -3.4332275390625e-05, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -2.777576446533203e-05, -3.814697265625e-05, -1.537799835205078e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.013623237609863281, -0.0012111663818359375, -0.0004024505615234375, -0.0001354217529296875, -0.011986494064331055, -3.814697265625e-06, -0.026441574096679688, -0.000484466552734375, -3.814697265625e-05, -1.9073486328125e-06, -0.0004761219024658203, 0.0, -2.86102294921875e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0005050897016189992, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.26651203632354736, -2.574920654296875e-05, -0.207427978515625, -0.33484458923339844, -0.001216888427734375, -0.38480377197265625, -3.814697265625e-06, -0.008733749389648438, -2.09808349609375e-05, -0.0042247772216796875, -9.5367431640625e-06, -0.0014159635175019503, -0.0001705884642433375, 0.0, -0.010822296142578125, -1.1444091796875e-05, -1.4371415376663208, -7.617473602294922e-05, -1.33514404296875e-05, -0.8409433364868164, -1.1444091796875e-05, -0.00124359130859375, -0.0063762664794921875, -0.0018410682678222656, -4.601478576660156e-05, -0.03180503845214844, -0.03753471374511719, -1.71661376953125e-05, -0.0005626678466796875, -7.62939453125e-06, -0.0036449432373046875, 0.0, -0.0029271775856614113, -7.033323527139146e-06, -0.0009112358093261719, -0.00022900104522705078], "choice_history": [97, 285, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "5", "<EOS>", 358, 109, 160, 17, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 50, 174, "characters", "<EOS>", 343, 9, 346, 51, 176, "Null", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 5, "hole3": "RARE", "_type": "Template34", "hole0": "Nourish", "hole2": "DRUID"}], "hole0": "Nourish", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}], "test": {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"id": "characters", "_type": "Name"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "IsNot"}], "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If"}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            if len(targets) is not Null:\n                player.draw()\n", "score": -4.803227900578122, "score_history": [-9.5367431640625e-06, -0.0041713714599609375, -0.0003567297535482794, -1.77621805050876e-05, -9.536736342852237e-07, -2.2411262762034312e-05, -6.318082796497038e-06, -3.0517578125e-05, -0.0043239593505859375, -3.0517578125e-05, -3.3378546504536644e-06, -1.9073486328125e-06, 0.0, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -0.0003032684326171875, -3.814697265625e-06, -4.208087921142578e-05, 0.0, -2.09808349609375e-05, -5.91278076171875e-05, -8.463848644169047e-06, -3.8266178307821974e-05, -1.0379610061645508, -0.000186920166015625, -0.0007762908935546875, -3.4332275390625e-05, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -2.777576446533203e-05, -3.814697265625e-05, -1.537799835205078e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.013623237609863281, -0.0012111663818359375, -0.0004024505615234375, -0.0001354217529296875, -0.011986494064331055, -3.814697265625e-06, -0.026441574096679688, -0.000484466552734375, -3.814697265625e-05, -1.9073486328125e-06, -0.0004761219024658203, 0.0, -2.86102294921875e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0005050897016189992, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.26651203632354736, -2.574920654296875e-05, -0.207427978515625, -0.33484458923339844, -0.001216888427734375, -0.38480377197265625, -3.814697265625e-06, -0.008733749389648438, -2.09808349609375e-05, -0.0042247772216796875, -9.5367431640625e-06, -0.0014159635175019503, -0.0001705884642433375, 0.0, -0.010822296142578125, -1.1444091796875e-05, -1.3296071290969849, -1.9669434550451115e-05, -0.003108978271484375, -0.9432249069213867, -5.7220458984375e-06, -0.10951709747314453, -0.01178741455078125, -0.001517176628112793, -5.745887756347656e-05, -0.03746795654296875, -0.03501319885253906, -1.9073486328125e-05, -0.000659942626953125, -7.62939453125e-06, -0.002361297607421875, 0.0, -0.002875157166272402, -7.033323527139146e-06, -0.0009313821792602539, -0.0002557039260864258], "choice_history": [97, 285, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "5", "<EOS>", 358, 109, 160, 17, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 50, 174, "targets", "<EOS>", 343, 9, 346, 51, 176, "Null", "<EOS>", 358, 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 5, "hole3": "RARE", "_type": "Template34", "hole0": "Nourish", "hole2": "DRUID"}], "hole0": "Nourish", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}], "test": {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"id": "targets", "_type": "Name"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "IsNot"}], "comparators": [{"value": "Null", "_type": "NameConstant"}]}, "_type": "If"}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            <UNK> = NourishJustice()\n            <UNK>.summon(player, player.game, len(player.minions))\n", "score": -4.904812904505178, "score_history": [-9.5367431640625e-06, -0.0041713714599609375, -0.0003567297535482794, -1.77621805050876e-05, -9.536736342852237e-07, -2.2411262762034312e-05, -6.318082796497038e-06, -3.0517578125e-05, -0.0043239593505859375, -3.0517578125e-05, -3.3378546504536644e-06, -1.9073486328125e-06, 0.0, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -0.0003032684326171875, -3.814697265625e-06, -4.208087921142578e-05, 0.0, -2.09808349609375e-05, -5.91278076171875e-05, -8.463848644169047e-06, -3.8266178307821974e-05, -1.0379610061645508, -0.000186920166015625, -0.0007762908935546875, -3.4332275390625e-05, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -2.777576446533203e-05, -3.814697265625e-05, -1.537799835205078e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.013623237609863281, -0.0012111663818359375, -0.0004024505615234375, -0.0001354217529296875, -0.011986494064331055, -3.814697265625e-06, -0.026441574096679688, -0.000484466552734375, -3.814697265625e-05, -1.9073486328125e-06, -0.0004761219024658203, 0.0, -2.86102294921875e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0005050897016189992, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.26651203632354736, -2.574920654296875e-05, -1.676198959350586, -0.000255584716796875, -5.340576171875e-05, -0.0006542205810546875, -0.000102996826171875, -0.000286102294921875, -0.003791450522840023, -2.360343569307588e-05, -0.37543487548828125, -7.82012939453125e-05, -0.2975333631038666, -0.2007715255022049, -0.03400515764951706, -0.0015087127685546875, -0.0007190704345703125, -0.0001850128173828125, -2.09808349609375e-05, -0.004259228706359863, -1.6689286894688848e-06, -0.009517669677734375, 0.0, -0.0004863739013671875, -4.76837158203125e-05, -3.814697265625e-06, -5.9723854064941406e-05, -2.3841855067985307e-07, -0.8463335037231445, -0.000522613525390625, -9.1552734375e-05, 0.0, -0.07479500770568848, 0.0, -0.00328826904296875, 0.0, -0.0007915496826171875, -9.72747802734375e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.0009878873825073242, -7.62939453125e-06, -3.24249267578125e-05, -7.43865966796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -5.7220458984375e-06, -4.982948303222656e-05, 0.0, -0.000576019287109375, -1.52587890625e-05], "choice_history": [97, 285, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "5", "<EOS>", 359, 102, 142, 346, 50, 174, "<UNK>", "<EOS>", 38, 325, "Nourish", "Justice", "<EOS>", 136, 318, 21, 174, "<UNK>", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 5, "hole3": "RARE", "_type": "Template34", "hole0": "Nourish", "hole2": "DRUID"}], "hole0": "Nourish", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"value": {"_type": "Template79", "hole0": "NourishJustice"}, "_type": "Assign", "targets": [{"id": "<UNK>", "_type": "Name"}]}, {"hole1": "summon", "_type": "Template77", "hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            NourishManaMinion().summon(player, game, len(player.minions))\n", "score": -5.213617146275929, "score_history": [-9.5367431640625e-06, -0.0041713714599609375, -0.0003567297535482794, -1.77621805050876e-05, -9.536736342852237e-07, -2.2411262762034312e-05, -6.318082796497038e-06, -3.0517578125e-05, -0.0043239593505859375, -3.0517578125e-05, -3.3378546504536644e-06, -1.9073486328125e-06, 0.0, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -0.0003032684326171875, -3.814697265625e-06, -4.208087921142578e-05, 0.0, -2.09808349609375e-05, -5.91278076171875e-05, -8.463848644169047e-06, -3.8266178307821974e-05, -1.0379610061645508, -0.000186920166015625, -0.0007762908935546875, -3.4332275390625e-05, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -2.777576446533203e-05, -3.814697265625e-05, -1.537799835205078e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.013623237609863281, -0.0012111663818359375, -0.0004024505615234375, -0.0001354217529296875, -0.011986494064331055, -3.814697265625e-06, -0.026441574096679688, -0.000484466552734375, -3.814697265625e-05, -1.9073486328125e-06, -0.0004761219024658203, 0.0, -2.86102294921875e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0005050897016189992, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.26651203632354736, -2.574920654296875e-05, -0.207427978515625, -2.2019453048706055, -0.0004749298095703125, -0.021696090698242188, -0.0001430511474609375, -0.02385007217526436, -0.33414793014526367, -1.0092861652374268, -0.0034028291702270508, -0.009585515595972538, -7.62939453125e-06, -0.000301361083984375, -0.011792182922363281, -1.9073486328125e-06, -0.0003641843795776367, -2.3841855067985307e-07, -0.015750885009765625, -4.9591064453125e-05, -0.0003968477249145508, -1.1920928244535389e-07, -0.001068115234375, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -0.00010621530236676335, -3.933906555175781e-06, -8.58306884765625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, -6.508827209472656e-05, 0.0, -0.0003719329833984375, -2.86102294921875e-05], "choice_history": [97, 285, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "5", "<EOS>", 358, 136, 318, 38, 325, "Nourish", "Mana", "Minion", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 5, "hole3": "RARE", "_type": "Template34", "hole0": "Nourish", "hole2": "DRUID"}], "hole0": "Nourish", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "summon", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "NourishManaMinion"}, "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            if len(<UNK>) > 0:\n                hammer = game.random_choice(minions)\n                player.draw()\n                player.draw()\n                player.draw()\n", "score": -8.322312420054402, "score_history": [-9.5367431640625e-06, -0.0041713714599609375, -0.0003567297535482794, -1.77621805050876e-05, -9.536736342852237e-07, -2.2411262762034312e-05, -6.318082796497038e-06, -3.0517578125e-05, -0.0043239593505859375, -3.0517578125e-05, -3.3378546504536644e-06, -1.9073486328125e-06, 0.0, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -0.0003032684326171875, -3.814697265625e-06, -4.208087921142578e-05, 0.0, -2.09808349609375e-05, -5.91278076171875e-05, -8.463848644169047e-06, -3.8266178307821974e-05, -1.0379610061645508, -0.000186920166015625, -0.0007762908935546875, -3.4332275390625e-05, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -2.777576446533203e-05, -3.814697265625e-05, -1.537799835205078e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.013623237609863281, -0.0012111663818359375, -0.0004024505615234375, -0.0001354217529296875, -0.011986494064331055, -3.814697265625e-06, -0.026441574096679688, -0.000484466552734375, -3.814697265625e-05, -1.9073486328125e-06, -0.0004761219024658203, 0.0, -2.86102294921875e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0005050897016189992, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.26651203632354736, -2.574920654296875e-05, -0.207427978515625, -0.33484458923339844, -0.001216888427734375, -0.38480377197265625, -3.814697265625e-06, -0.008733749389648438, -2.09808349609375e-05, -0.0042247772216796875, -9.5367431640625e-06, -0.0014159635175019503, -0.0001705884642433375, 0.0, -0.010822296142578125, -1.1444091796875e-05, -1.3137093782424927, -8.678231824887916e-05, -0.0002155303955078125, -0.23436450958251953, -9.5367431640625e-06, -0.0009174346923828125, -1.9073486328125e-06, -0.005021092481911182, -7.62939453125e-06, -0.2584056854248047, -0.000125885009765625, -7.62939453125e-06, -0.0001010894775390625, -0.00011444091796875, -0.0001659393310546875, -1.347862720489502, -2.0265579223632812e-06, -0.004638671875, -4.38690185546875e-05, -4.38690185546875e-05, -5.7220458984375e-06, -1.1585874557495117, -3.62396240234375e-05, -0.12866592407226562, -1.9073486328125e-06, -0.07837128639221191, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004405975341796875, -9.5367431640625e-06, -0.7865381240844727, -8.892950427252799e-05, -0.10944843292236328, -6.4849853515625e-05, -0.4729957580566406, -3.0517578125e-05, -9.1552734375e-05, -1.9073486328125e-06, -0.07209396362304688, -3.576278118089249e-07, -0.004703521728515625, -2.09808349609375e-05, -0.001132965087890625, -0.0001316070556640625, -0.0017642974853515625, -1.71661376953125e-05, -0.001491546630859375, 0.0, -0.004693232011049986, -2.622600959512056e-06, -0.0014154911041259766, -7.43865966796875e-05, -0.00067901611328125, -0.000118255615234375, -0.0012645721435546875, -2.6702880859375e-05, -0.00274658203125, 0.0, -0.0025625801645219326, -3.933898824470816e-06, -0.0012305974960327148, -0.0001220703125], "choice_history": [97, 285, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "5", "<EOS>", 358, 109, 160, 17, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 343, 5, 346, 52, 179, "0", "<EOS>", 361, 102, 142, 346, 50, 174, "hammer", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 5, "hole3": "RARE", "_type": "Template34", "hole0": "Nourish", "hole2": "DRUID"}], "hole0": "Nourish", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "hammer", "_type": "Name"}]}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}], "test": {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Gt"}], "comparators": [{"n": 0, "_type": "Num"}]}, "_type": "If"}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            if len(<UNK>) > 0:\n                hammer = game.current_player.agent(minions)\n                player.draw()\n                player.draw()\n                player.draw()\n", "score": -8.867101835723105, "score_history": [-9.5367431640625e-06, -0.0041713714599609375, -0.0003567297535482794, -1.77621805050876e-05, -9.536736342852237e-07, -2.2411262762034312e-05, -6.318082796497038e-06, -3.0517578125e-05, -0.0043239593505859375, -3.0517578125e-05, -3.3378546504536644e-06, -1.9073486328125e-06, 0.0, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -0.0003032684326171875, -3.814697265625e-06, -4.208087921142578e-05, 0.0, -2.09808349609375e-05, -5.91278076171875e-05, -8.463848644169047e-06, -3.8266178307821974e-05, -1.0379610061645508, -0.000186920166015625, -0.0007762908935546875, -3.4332275390625e-05, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -2.777576446533203e-05, -3.814697265625e-05, -1.537799835205078e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.013623237609863281, -0.0012111663818359375, -0.0004024505615234375, -0.0001354217529296875, -0.011986494064331055, -3.814697265625e-06, -0.026441574096679688, -0.000484466552734375, -3.814697265625e-05, -1.9073486328125e-06, -0.0004761219024658203, 0.0, -2.86102294921875e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0005050897016189992, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.26651203632354736, -2.574920654296875e-05, -0.207427978515625, -0.33484458923339844, -0.001216888427734375, -0.38480377197265625, -3.814697265625e-06, -0.008733749389648438, -2.09808349609375e-05, -0.0042247772216796875, -9.5367431640625e-06, -0.0014159635175019503, -0.0001705884642433375, 0.0, -0.010822296142578125, -1.1444091796875e-05, -1.3137093782424927, -8.678231824887916e-05, -0.0002155303955078125, -0.23436450958251953, -9.5367431640625e-06, -0.0009174346923828125, -1.9073486328125e-06, -0.005021092481911182, -7.62939453125e-06, -0.2584056854248047, -0.000125885009765625, -7.62939453125e-06, -0.0001010894775390625, -0.00011444091796875, -0.0001659393310546875, -1.347862720489502, -2.0265579223632812e-06, -0.004638671875, -4.38690185546875e-05, -4.38690185546875e-05, -5.7220458984375e-06, -0.38336849212646484, 0.0, -0.003864288330078125, -8.7738037109375e-05, -0.3424050807952881, -5.7220458984375e-06, -0.10041213035583496, -1.9073486328125e-06, -0.03151559829711914, -0.00017964839935302734, -0.015763282775878906, -0.0006933212280273438, -1.1444091796875e-05, -1.9589728116989136, -1.7046884750016034e-05, -0.1521310806274414, -0.0001773834228515625, -0.1676483154296875, -1.52587890625e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.18812787532806396, -2.3841855067985307e-07, -0.006626129150390625, -2.09808349609375e-05, -0.0014209747314453125, -0.000133514404296875, -0.0019073486328125, -1.71661376953125e-05, -0.001033782958984375, 0.0, -0.00988017674535513, -1.7881377516459906e-06, -0.0013908147811889648, -6.103515625e-05, -0.0006313323974609375, -0.0001239776611328125, -0.001300811767578125, -2.86102294921875e-05, -0.002338409423828125, 0.0, -0.002735028276219964, -4.172316494077677e-06, -0.0012553930282592773, -0.0001125335693359375], "choice_history": [97, 285, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "5", "<EOS>", 358, 109, 160, 17, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 343, 5, 346, 52, 179, "0", "<EOS>", 361, 102, 142, 346, 50, 174, "hammer", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "agent", "<EOS>", 346, 50, 174, "minions", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 5, "hole3": "RARE", "_type": "Template34", "hole0": "Nourish", "hole2": "DRUID"}], "hole0": "Nourish", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"value": {"func": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "current_player", "_type": "Attribute"}, "attr": "agent", "_type": "Attribute"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "hammer", "_type": "Name"}]}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}], "test": {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Gt"}], "comparators": [{"n": 0, "_type": "Num"}]}, "_type": "If"}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            if len(<UNK>) > 0:\n                chosen_card = player.agent.choose_option(Draw, player)\n                player.hand.append(chosen_card)\n                player.hand[-1].player = player\n                player.trigger('card_drawn', chosen_card)\n", "score": -11.475153081033092, "score_history": [-9.5367431640625e-06, -0.0041713714599609375, -0.0003567297535482794, -1.77621805050876e-05, -9.536736342852237e-07, -2.2411262762034312e-05, -6.318082796497038e-06, -3.0517578125e-05, -0.0043239593505859375, -3.0517578125e-05, -3.3378546504536644e-06, -1.9073486328125e-06, 0.0, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -0.0003032684326171875, -3.814697265625e-06, -4.208087921142578e-05, 0.0, -2.09808349609375e-05, -5.91278076171875e-05, -8.463848644169047e-06, -3.8266178307821974e-05, -1.0379610061645508, -0.000186920166015625, -0.0007762908935546875, -3.4332275390625e-05, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -2.777576446533203e-05, -3.814697265625e-05, -1.537799835205078e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.013623237609863281, -0.0012111663818359375, -0.0004024505615234375, -0.0001354217529296875, -0.011986494064331055, -3.814697265625e-06, -0.026441574096679688, -0.000484466552734375, -3.814697265625e-05, -1.9073486328125e-06, -0.0004761219024658203, 0.0, -2.86102294921875e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0005050897016189992, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.26651203632354736, -2.574920654296875e-05, -0.207427978515625, -0.33484458923339844, -0.001216888427734375, -0.38480377197265625, -3.814697265625e-06, -0.008733749389648438, -2.09808349609375e-05, -0.0042247772216796875, -9.5367431640625e-06, -0.0014159635175019503, -0.0001705884642433375, 0.0, -0.010822296142578125, -1.1444091796875e-05, -1.3137093782424927, -8.678231824887916e-05, -0.0002155303955078125, -0.23436450958251953, -9.5367431640625e-06, -0.0009174346923828125, -1.9073486328125e-06, -0.005021092481911182, -7.62939453125e-06, -0.2584056854248047, -0.000125885009765625, -7.62939453125e-06, -0.0001010894775390625, -0.00011444091796875, -0.0001659393310546875, -2.24001145362854, -0.0013164281845092773, -0.8405666351318359, -0.0015544891357421875, -0.1863079071044922, -7.2479248046875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.4662719964981079, -1.1920928244535389e-07, -0.012869712896645069, 0.0, -0.06910437345504761, -1.2159273865108844e-05, -0.11732389032840729, -4.00543212890625e-05, -0.031071782112121582, -2.384185791015625e-06, -0.0014190673828125, -3.0517578125e-05, -0.04473590850830078, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.000438690185546875, 0.0, -0.40535998344421387, 0.0, -0.15813183784484863, -1.9073486328125e-06, -3.0517578125e-05, -0.002864837646484375, -3.814697265625e-06, -0.7325574159622192, -0.00012445449829101562, -0.015748023986816406, -3.814697265625e-06, -8.96453857421875e-05, -0.0012187957763671875, -2.09808349609375e-05, -0.6090087890625, -0.0027036666870117188, -0.0012035369873046875, -1.9073486328125e-06, -0.000743865966796875, -9.5367431640625e-06, -5.20944558957126e-05, -1.1920928244535389e-07, -0.00709688663482666, 0.0, -0.006810188293457031, -0.0008296966552734375, -0.11040401458740234, -0.0013332366943359375, -0.0002498626708984375, -0.000308990478515625, -9.5367431640625e-06, -0.0037723719142377377, -7.62939453125e-06, -0.0004291534423828125, 0.0, -0.0013065338134765625, 0.0, -0.002533435821533203, -7.152555099310121e-07, -0.2561531066894531, -0.0002079010009765625, -0.0045566558837890625, -3.814697265625e-06, -0.03282475471496582, -1.1920928244535389e-07, -0.04210400581359863, -1.9073486328125e-05, -0.0005321502685546875, -0.0006732940673828125, -0.000301361083984375, -0.0063304901123046875, -0.0005321502685546875, -0.048424720764160156, -0.0002269744873046875, -0.8656826019287109, -0.0001049041748046875], "choice_history": [97, 285, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "5", "<EOS>", 358, 109, 160, 17, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 343, 5, 346, 52, 179, "0", "<EOS>", 361, 102, 142, 346, 50, 174, "chosen_card", "<EOS>", 32, 300, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", "Draw", "<EOS>", "player", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", "append", "<EOS>", 346, 50, 174, "chosen_card", "<EOS>", 102, 142, 346, 42, 143, 24, 185, 13, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 100, 164, 41, 331, 139, 23, 179, "1", "<EOS>", "player", "<EOS>", 21, 174, "player", "<EOS>", 136, 318, 21, 174, "player", "<EOS>", "trigger", "<EOS>", 347, 53, 183, "card_drawn", "<EOS>", 50, 174, "chosen_card", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 5, "hole3": "RARE", "_type": "Template34", "hole0": "Nourish", "hole2": "DRUID"}], "hole0": "Nourish", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"value": {"hole1": "choose_option", "hole3": "player", "_type": "Template63", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "hole2": "Draw"}, "_type": "Assign", "targets": [{"id": "chosen_card", "_type": "Name"}]}, {"hole1": "append", "_type": "Template77", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}, "hole2": [{"id": "chosen_card", "_type": "Name"}]}, {"value": {"id": "player", "_type": "Name"}, "_type": "Assign", "targets": [{"value": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}, "slice": {"value": {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}, "_type": "Index"}, "_type": "Subscript"}, "attr": "player", "_type": "Attribute"}]}, {"hole1": "trigger", "_type": "Template77", "hole0": {"id": "player", "_type": "Name"}, "hole2": [{"s": "card_drawn", "_type": "Str"}, {"id": "chosen_card", "_type": "Name"}]}], "test": {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Gt"}], "comparators": [{"n": 0, "_type": "Num"}]}, "_type": "If"}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            if len(<UNK>) > 0:\n                hammer = player.agent.choose_option([Wisps5(), Nourish()],\n                    player)\n                super().use(player, game)\n                hammer = game.random_choice(minions)\n                player.draw()\n", "score": -12.24037218903549, "score_history": [-9.5367431640625e-06, -0.0041713714599609375, -0.0003567297535482794, -1.77621805050876e-05, -9.536736342852237e-07, -2.2411262762034312e-05, -6.318082796497038e-06, -3.0517578125e-05, -0.0043239593505859375, -3.0517578125e-05, -3.3378546504536644e-06, -1.9073486328125e-06, 0.0, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -0.0003032684326171875, -3.814697265625e-06, -4.208087921142578e-05, 0.0, -2.09808349609375e-05, -5.91278076171875e-05, -8.463848644169047e-06, -3.8266178307821974e-05, -1.0379610061645508, -0.000186920166015625, -0.0007762908935546875, -3.4332275390625e-05, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -2.777576446533203e-05, -3.814697265625e-05, -1.537799835205078e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.013623237609863281, -0.0012111663818359375, -0.0004024505615234375, -0.0001354217529296875, -0.011986494064331055, -3.814697265625e-06, -0.026441574096679688, -0.000484466552734375, -3.814697265625e-05, -1.9073486328125e-06, -0.0004761219024658203, 0.0, -2.86102294921875e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0005050897016189992, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.26651203632354736, -2.574920654296875e-05, -0.207427978515625, -0.33484458923339844, -0.001216888427734375, -0.38480377197265625, -3.814697265625e-06, -0.008733749389648438, -2.09808349609375e-05, -0.0042247772216796875, -9.5367431640625e-06, -0.0014159635175019503, -0.0001705884642433375, 0.0, -0.010822296142578125, -1.1444091796875e-05, -1.3137093782424927, -8.678231824887916e-05, -0.0002155303955078125, -0.23436450958251953, -9.5367431640625e-06, -0.0009174346923828125, -1.9073486328125e-06, -0.005021092481911182, -7.62939453125e-06, -0.2584056854248047, -0.000125885009765625, -7.62939453125e-06, -0.0001010894775390625, -0.00011444091796875, -0.0001659393310546875, -1.347862720489502, -2.0265579223632812e-06, -0.004638671875, -4.38690185546875e-05, -4.38690185546875e-05, -5.7220458984375e-06, -0.38336849212646484, 0.0, -0.003864288330078125, -8.7738037109375e-05, -1.2637650966644287, -7.05718994140625e-05, -0.014086365699768066, -7.62939453125e-06, -0.0608062744140625, -2.384185791015625e-06, -0.012171745300292969, -0.005038261413574219, -0.00214385986328125, -0.5222131013870239, -0.013986937701702118, -1.9073486328125e-05, -0.007267951965332031, -0.001007080078125, -0.5611434578895569, -0.0029629478231072426, -0.0016956329345703125, -0.0001392364501953125, -0.050037503242492676, -1.1920928244535389e-07, -0.12370872497558594, -0.0002193450927734375, -0.002780914306640625, -1.52587890625e-05, -0.1750202178955078, 0.0, -0.0006760358810424805, -0.0001239776611328125, -3.4332275390625e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -7.534027099609375e-05, -5.960462772236497e-07, -0.1352691650390625, -7.62939453125e-06, -3.4332275390625e-05, -9.5367431640625e-06, -3.814697265625e-05, -1.5921289920806885, -0.00012969970703125, -0.022596359252929688, -0.00156402587890625, -3.24249267578125e-05, -7.62939453125e-05, -0.08346748352050781, 0.0, -0.453413724899292, -3.933906555175781e-06, -0.08894729614257812, -9.5367431640625e-06, -5.7220458984375e-06, -0.00029754638671875, -2.09808349609375e-05, -0.3102094233036041, -0.00011312794231344014, -0.10154533386230469, -7.62939453125e-05, -0.5992612838745117, -3.814697265625e-05, -6.866455078125e-05, 0.0, -0.1438915729522705, -3.576278118089249e-07, -0.007905006408691406, -1.52587890625e-05], "choice_history": [97, 285, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "5", "<EOS>", 358, 109, 160, 17, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 343, 5, 346, 52, 179, "0", "<EOS>", 361, 102, 142, 346, 50, 174, "hammer", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 347, 86, 320, "Wisps5", "<EOS>", 346, 83, 314, "Nourish", "<EOS>", 50, 174, "player", "<EOS>", 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 102, 142, 346, 50, 174, "hammer", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 5, "hole3": "RARE", "_type": "Template34", "hole0": "Nourish", "hole2": "DRUID"}], "hole0": "Nourish", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"value": {"func": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "attr": "choose_option", "_type": "Attribute"}, "args": [{"hole2": [{"_type": "Template73_expr_seq", "hole0": "Nourish"}], "_type": "Template78", "hole0": "Wisps5"}, {"id": "player", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "hammer", "_type": "Name"}]}, {"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "hammer", "_type": "Name"}]}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}], "test": {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Gt"}], "comparators": [{"n": 0, "_type": "Num"}]}, "_type": "If"}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            if len(<UNK>) > 0:\n                chosen_card = player.agent.choose_option(Draw, player)\n                player.hand.append(chosen_card)\n                player.hand[-1].player = player\n                player.trigger('card_drawn', reduce_cost)\n", "score": -12.397139660928111, "score_history": [-9.5367431640625e-06, -0.0041713714599609375, -0.0003567297535482794, -1.77621805050876e-05, -9.536736342852237e-07, -2.2411262762034312e-05, -6.318082796497038e-06, -3.0517578125e-05, -0.0043239593505859375, -3.0517578125e-05, -3.3378546504536644e-06, -1.9073486328125e-06, 0.0, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -0.0003032684326171875, -3.814697265625e-06, -4.208087921142578e-05, 0.0, -2.09808349609375e-05, -5.91278076171875e-05, -8.463848644169047e-06, -3.8266178307821974e-05, -1.0379610061645508, -0.000186920166015625, -0.0007762908935546875, -3.4332275390625e-05, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -2.777576446533203e-05, -3.814697265625e-05, -1.537799835205078e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.013623237609863281, -0.0012111663818359375, -0.0004024505615234375, -0.0001354217529296875, -0.011986494064331055, -3.814697265625e-06, -0.026441574096679688, -0.000484466552734375, -3.814697265625e-05, -1.9073486328125e-06, -0.0004761219024658203, 0.0, -2.86102294921875e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0005050897016189992, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.26651203632354736, -2.574920654296875e-05, -0.207427978515625, -0.33484458923339844, -0.001216888427734375, -0.38480377197265625, -3.814697265625e-06, -0.008733749389648438, -2.09808349609375e-05, -0.0042247772216796875, -9.5367431640625e-06, -0.0014159635175019503, -0.0001705884642433375, 0.0, -0.010822296142578125, -1.1444091796875e-05, -1.3137093782424927, -8.678231824887916e-05, -0.0002155303955078125, -0.23436450958251953, -9.5367431640625e-06, -0.0009174346923828125, -1.9073486328125e-06, -0.005021092481911182, -7.62939453125e-06, -0.2584056854248047, -0.000125885009765625, -7.62939453125e-06, -0.0001010894775390625, -0.00011444091796875, -0.0001659393310546875, -2.24001145362854, -0.0013164281845092773, -0.8405666351318359, -0.0015544891357421875, -0.1863079071044922, -7.2479248046875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.4662719964981079, -1.1920928244535389e-07, -0.012869712896645069, 0.0, -0.06910437345504761, -1.2159273865108844e-05, -0.11732389032840729, -4.00543212890625e-05, -0.031071782112121582, -2.384185791015625e-06, -0.0014190673828125, -3.0517578125e-05, -0.04473590850830078, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.000438690185546875, 0.0, -0.40535998344421387, 0.0, -0.15813183784484863, -1.9073486328125e-06, -3.0517578125e-05, -0.002864837646484375, -3.814697265625e-06, -0.7325574159622192, -0.00012445449829101562, -0.015748023986816406, -3.814697265625e-06, -8.96453857421875e-05, -0.0012187957763671875, -2.09808349609375e-05, -0.6090087890625, -0.0027036666870117188, -0.0012035369873046875, -1.9073486328125e-06, -0.000743865966796875, -9.5367431640625e-06, -5.20944558957126e-05, -1.1920928244535389e-07, -0.00709688663482666, 0.0, -0.006810188293457031, -0.0008296966552734375, -0.11040401458740234, -0.0013332366943359375, -0.0002498626708984375, -0.000308990478515625, -9.5367431640625e-06, -0.0037723719142377377, -7.62939453125e-06, -0.0004291534423828125, 0.0, -0.0013065338134765625, 0.0, -0.002533435821533203, -7.152555099310121e-07, -0.2561531066894531, -0.0002079010009765625, -0.0045566558837890625, -3.814697265625e-06, -0.03282475471496582, -1.1920928244535389e-07, -0.04210400581359863, -1.9073486328125e-05, -0.0005321502685546875, -0.0006732940673828125, -0.000301361083984375, -0.0063304901123046875, -0.0005321502685546875, -0.048424720764160156, -0.0002269744873046875, -1.7877740859985352, 0.0], "choice_history": [97, 285, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "5", "<EOS>", 358, 109, 160, 17, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 343, 5, 346, 52, 179, "0", "<EOS>", 361, 102, 142, 346, 50, 174, "chosen_card", "<EOS>", 32, 300, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", "Draw", "<EOS>", "player", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", "append", "<EOS>", 346, 50, 174, "chosen_card", "<EOS>", 102, 142, 346, 42, 143, 24, 185, 13, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 100, 164, 41, 331, 139, 23, 179, "1", "<EOS>", "player", "<EOS>", 21, 174, "player", "<EOS>", 136, 318, 21, 174, "player", "<EOS>", "trigger", "<EOS>", 347, 53, 183, "card_drawn", "<EOS>", 50, 174, "reduce_cost", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 5, "hole3": "RARE", "_type": "Template34", "hole0": "Nourish", "hole2": "DRUID"}], "hole0": "Nourish", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"value": {"hole1": "choose_option", "hole3": "player", "_type": "Template63", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "hole2": "Draw"}, "_type": "Assign", "targets": [{"id": "chosen_card", "_type": "Name"}]}, {"hole1": "append", "_type": "Template77", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}, "hole2": [{"id": "chosen_card", "_type": "Name"}]}, {"value": {"id": "player", "_type": "Name"}, "_type": "Assign", "targets": [{"value": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}, "slice": {"value": {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}, "_type": "Index"}, "_type": "Subscript"}, "attr": "player", "_type": "Attribute"}]}, {"hole1": "trigger", "_type": "Template77", "hole0": {"id": "player", "_type": "Name"}, "hole2": [{"s": "card_drawn", "_type": "Str"}, {"id": "reduce_cost", "_type": "Name"}]}], "test": {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Gt"}], "comparators": [{"n": 0, "_type": "Num"}]}, "_type": "If"}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            if len(<UNK>) > 0:\n                hammer = game.current_player.agent(game)\n                card.summon(player, player.game, len(player.minions))\n                player.trigger('card_drawn', chosen_card)\n                player.draw()\n", "score": -12.794180673490892, "score_history": [-9.5367431640625e-06, -0.0041713714599609375, -0.0003567297535482794, -1.77621805050876e-05, -9.536736342852237e-07, -2.2411262762034312e-05, -6.318082796497038e-06, -3.0517578125e-05, -0.0043239593505859375, -3.0517578125e-05, -3.3378546504536644e-06, -1.9073486328125e-06, 0.0, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -0.0003032684326171875, -3.814697265625e-06, -4.208087921142578e-05, 0.0, -2.09808349609375e-05, -5.91278076171875e-05, -8.463848644169047e-06, -3.8266178307821974e-05, -1.0379610061645508, -0.000186920166015625, -0.0007762908935546875, -3.4332275390625e-05, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -2.777576446533203e-05, -3.814697265625e-05, -1.537799835205078e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.013623237609863281, -0.0012111663818359375, -0.0004024505615234375, -0.0001354217529296875, -0.011986494064331055, -3.814697265625e-06, -0.026441574096679688, -0.000484466552734375, -3.814697265625e-05, -1.9073486328125e-06, -0.0004761219024658203, 0.0, -2.86102294921875e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0005050897016189992, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.26651203632354736, -2.574920654296875e-05, -0.207427978515625, -0.33484458923339844, -0.001216888427734375, -0.38480377197265625, -3.814697265625e-06, -0.008733749389648438, -2.09808349609375e-05, -0.0042247772216796875, -9.5367431640625e-06, -0.0014159635175019503, -0.0001705884642433375, 0.0, -0.010822296142578125, -1.1444091796875e-05, -1.3137093782424927, -8.678231824887916e-05, -0.0002155303955078125, -0.23436450958251953, -9.5367431640625e-06, -0.0009174346923828125, -1.9073486328125e-06, -0.005021092481911182, -7.62939453125e-06, -0.2584056854248047, -0.000125885009765625, -7.62939453125e-06, -0.0001010894775390625, -0.00011444091796875, -0.0001659393310546875, -1.347862720489502, -2.0265579223632812e-06, -0.004638671875, -4.38690185546875e-05, -4.38690185546875e-05, -5.7220458984375e-06, -0.38336849212646484, 0.0, -0.003864288330078125, -8.7738037109375e-05, -0.3424050807952881, -5.7220458984375e-06, -0.10041213035583496, -1.9073486328125e-06, -0.03151559829711914, -0.00017964839935302734, -0.015763282775878906, -0.0006933212280273438, -1.1444091796875e-05, -0.28988492488861084, -4.29153169534402e-06, -1.2122087478637695, -8.0108642578125e-05, -0.0001316070556640625, -4.00543212890625e-05, -1.0261268615722656, -9.190614218823612e-05, -0.14015591144561768, -5.7220458984375e-06, -0.0070209503173828125, -0.0007381439208984375, -0.0002231597900390625, -0.00016713140939828008, -2.3841855067985307e-07, -0.5259361267089844, -0.0001621246337890625, -6.29425048828125e-05, 0.0, -0.015381336212158203, 0.0, -0.0034809112548828125, 0.0, -0.003597259521484375, -8.392333984375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0007086992263793945, -5.7220458984375e-06, -2.86102294921875e-05, -7.43865966796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -5.7220458984375e-06, -4.601478576660156e-05, 0.0, -0.0008230209350585938, -1.1444091796875e-05, -1.1916608810424805, -8.96453857421875e-05, -9.5367431640625e-05, -1.9073486328125e-06, -0.32811427116394043, -1.6689286894688848e-06, -0.3204997777938843, -0.0001697540283203125, -0.008147239685058594, -0.0028705596923828125, -0.0001888275146484375, -0.009349584579467773, -0.0008144378662109375, -0.055563926696777344, -0.0004062652587890625, -0.951134204864502, -2.47955322265625e-05, -0.2021503448486328, -0.0002498626708984375, -0.0957345962524414, -6.4849853515625e-05, -0.027576446533203125, 0.0, -0.0020189285278320312, -1.1920928244535389e-07, -0.00092315673828125, -3.0517578125e-05], "choice_history": [97, 285, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "5", "<EOS>", 358, 109, 160, 17, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 343, 5, 346, 52, 179, "0", "<EOS>", 361, 102, 142, 346, 50, 174, "hammer", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "agent", "<EOS>", 346, 50, 174, "game", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 136, 318, 21, 174, "player", "<EOS>", "trigger", "<EOS>", 347, 53, 183, "card_drawn", "<EOS>", 50, 174, "chosen_card", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 5, "hole3": "RARE", "_type": "Template34", "hole0": "Nourish", "hole2": "DRUID"}], "hole0": "Nourish", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"value": {"func": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "current_player", "_type": "Attribute"}, "attr": "agent", "_type": "Attribute"}, "args": [{"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "hammer", "_type": "Name"}]}, {"hole1": "summon", "_type": "Template77", "hole0": {"id": "card", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}, {"hole1": "trigger", "_type": "Template77", "hole0": {"id": "player", "_type": "Name"}, "hole2": [{"s": "card_drawn", "_type": "Str"}, {"id": "chosen_card", "_type": "Name"}]}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}], "test": {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Gt"}], "comparators": [{"n": 0, "_type": "Num"}]}, "_type": "If"}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            if len(<UNK>) > 0:\n                chosen_card = player.agent.choose_option(Draw, player)\n                player.hand.append(chosen_card)\n                player.hand[-1].player = player\n                player.trigger('card_drawn', game)\n", "score": -13.16118346891151, "score_history": [-9.5367431640625e-06, -0.0041713714599609375, -0.0003567297535482794, -1.77621805050876e-05, -9.536736342852237e-07, -2.2411262762034312e-05, -6.318082796497038e-06, -3.0517578125e-05, -0.0043239593505859375, -3.0517578125e-05, -3.3378546504536644e-06, -1.9073486328125e-06, 0.0, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -0.0003032684326171875, -3.814697265625e-06, -4.208087921142578e-05, 0.0, -2.09808349609375e-05, -5.91278076171875e-05, -8.463848644169047e-06, -3.8266178307821974e-05, -1.0379610061645508, -0.000186920166015625, -0.0007762908935546875, -3.4332275390625e-05, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -2.777576446533203e-05, -3.814697265625e-05, -1.537799835205078e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.013623237609863281, -0.0012111663818359375, -0.0004024505615234375, -0.0001354217529296875, -0.011986494064331055, -3.814697265625e-06, -0.026441574096679688, -0.000484466552734375, -3.814697265625e-05, -1.9073486328125e-06, -0.0004761219024658203, 0.0, -2.86102294921875e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0005050897016189992, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.26651203632354736, -2.574920654296875e-05, -0.207427978515625, -0.33484458923339844, -0.001216888427734375, -0.38480377197265625, -3.814697265625e-06, -0.008733749389648438, -2.09808349609375e-05, -0.0042247772216796875, -9.5367431640625e-06, -0.0014159635175019503, -0.0001705884642433375, 0.0, -0.010822296142578125, -1.1444091796875e-05, -1.3137093782424927, -8.678231824887916e-05, -0.0002155303955078125, -0.23436450958251953, -9.5367431640625e-06, -0.0009174346923828125, -1.9073486328125e-06, -0.005021092481911182, -7.62939453125e-06, -0.2584056854248047, -0.000125885009765625, -7.62939453125e-06, -0.0001010894775390625, -0.00011444091796875, -0.0001659393310546875, -2.24001145362854, -0.0013164281845092773, -0.8405666351318359, -0.0015544891357421875, -0.1863079071044922, -7.2479248046875e-05, -0.000194549560546875, -1.9073486328125e-06, -0.4662719964981079, -1.1920928244535389e-07, -0.012869712896645069, 0.0, -0.06910437345504761, -1.2159273865108844e-05, -0.11732389032840729, -4.00543212890625e-05, -0.031071782112121582, -2.384185791015625e-06, -0.0014190673828125, -3.0517578125e-05, -0.04473590850830078, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.000438690185546875, 0.0, -0.40535998344421387, 0.0, -0.15813183784484863, -1.9073486328125e-06, -3.0517578125e-05, -0.002864837646484375, -3.814697265625e-06, -0.7325574159622192, -0.00012445449829101562, -0.015748023986816406, -3.814697265625e-06, -8.96453857421875e-05, -0.0012187957763671875, -2.09808349609375e-05, -0.6090087890625, -0.0027036666870117188, -0.0012035369873046875, -1.9073486328125e-06, -0.000743865966796875, -9.5367431640625e-06, -5.20944558957126e-05, -1.1920928244535389e-07, -0.00709688663482666, 0.0, -0.006810188293457031, -0.0008296966552734375, -0.11040401458740234, -0.0013332366943359375, -0.0002498626708984375, -0.000308990478515625, -9.5367431640625e-06, -0.0037723719142377377, -7.62939453125e-06, -0.0004291534423828125, 0.0, -0.0013065338134765625, 0.0, -0.002533435821533203, -7.152555099310121e-07, -0.2561531066894531, -0.0002079010009765625, -0.0045566558837890625, -3.814697265625e-06, -0.03282475471496582, -1.1920928244535389e-07, -0.04210400581359863, -1.9073486328125e-05, -0.0005321502685546875, -0.0006732940673828125, -0.000301361083984375, -0.0063304901123046875, -0.0005321502685546875, -0.048424720764160156, -0.0002269744873046875, -2.5518178939819336, 0.0], "choice_history": [97, 285, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "5", "<EOS>", 358, 109, 160, 17, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 343, 5, 346, 52, 179, "0", "<EOS>", 361, 102, 142, 346, 50, 174, "chosen_card", "<EOS>", 32, 300, 13, 143, 21, 174, "player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", "Draw", "<EOS>", "player", "<EOS>", 136, 318, 13, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", "append", "<EOS>", 346, 50, 174, "chosen_card", "<EOS>", 102, 142, 346, 42, 143, 24, 185, 13, 143, 21, 174, "player", "<EOS>", "hand", "<EOS>", 100, 164, 41, 331, 139, 23, 179, "1", "<EOS>", "player", "<EOS>", 21, 174, "player", "<EOS>", 136, 318, 21, 174, "player", "<EOS>", "trigger", "<EOS>", 347, 53, 183, "card_drawn", "<EOS>", 50, 174, "game", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 5, "hole3": "RARE", "_type": "Template34", "hole0": "Nourish", "hole2": "DRUID"}], "hole0": "Nourish", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"value": {"hole1": "choose_option", "hole3": "player", "_type": "Template63", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "agent", "_type": "Attribute"}, "hole2": "Draw"}, "_type": "Assign", "targets": [{"id": "chosen_card", "_type": "Name"}]}, {"hole1": "append", "_type": "Template77", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}, "hole2": [{"id": "chosen_card", "_type": "Name"}]}, {"value": {"id": "player", "_type": "Name"}, "_type": "Assign", "targets": [{"value": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "hand", "_type": "Attribute"}, "slice": {"value": {"operand": {"n": 1, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}, "_type": "Index"}, "_type": "Subscript"}, "attr": "player", "_type": "Attribute"}]}, {"hole1": "trigger", "_type": "Template77", "hole0": {"id": "player", "_type": "Name"}, "hole2": [{"s": "card_drawn", "_type": "Str"}, {"id": "game", "_type": "Name"}]}], "test": {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Gt"}], "comparators": [{"n": 0, "_type": "Num"}]}, "_type": "If"}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            if len(<UNK>) > 0:\n                hammer = game.current_player.agent(game)\n                card.summon(player, player.game, len(player.minions))\n                justice = <UNK>Justice()\n                hammer = justice.create_weapon(player)\n", "score": -13.80373684484104, "score_history": [-9.5367431640625e-06, -0.0041713714599609375, -0.0003567297535482794, -1.77621805050876e-05, -9.536736342852237e-07, -2.2411262762034312e-05, -6.318082796497038e-06, -3.0517578125e-05, -0.0043239593505859375, -3.0517578125e-05, -3.3378546504536644e-06, -1.9073486328125e-06, 0.0, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -0.0003032684326171875, -3.814697265625e-06, -4.208087921142578e-05, 0.0, -2.09808349609375e-05, -5.91278076171875e-05, -8.463848644169047e-06, -3.8266178307821974e-05, -1.0379610061645508, -0.000186920166015625, -0.0007762908935546875, -3.4332275390625e-05, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -2.777576446533203e-05, -3.814697265625e-05, -1.537799835205078e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.013623237609863281, -0.0012111663818359375, -0.0004024505615234375, -0.0001354217529296875, -0.011986494064331055, -3.814697265625e-06, -0.026441574096679688, -0.000484466552734375, -3.814697265625e-05, -1.9073486328125e-06, -0.0004761219024658203, 0.0, -2.86102294921875e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0005050897016189992, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.26651203632354736, -2.574920654296875e-05, -0.207427978515625, -0.33484458923339844, -0.001216888427734375, -0.38480377197265625, -3.814697265625e-06, -0.008733749389648438, -2.09808349609375e-05, -0.0042247772216796875, -9.5367431640625e-06, -0.0014159635175019503, -0.0001705884642433375, 0.0, -0.010822296142578125, -1.1444091796875e-05, -1.3137093782424927, -8.678231824887916e-05, -0.0002155303955078125, -0.23436450958251953, -9.5367431640625e-06, -0.0009174346923828125, -1.9073486328125e-06, -0.005021092481911182, -7.62939453125e-06, -0.2584056854248047, -0.000125885009765625, -7.62939453125e-06, -0.0001010894775390625, -0.00011444091796875, -0.0001659393310546875, -1.347862720489502, -2.0265579223632812e-06, -0.004638671875, -4.38690185546875e-05, -4.38690185546875e-05, -5.7220458984375e-06, -0.38336849212646484, 0.0, -0.003864288330078125, -8.7738037109375e-05, -0.3424050807952881, -5.7220458984375e-06, -0.10041213035583496, -1.9073486328125e-06, -0.03151559829711914, -0.00017964839935302734, -0.015763282775878906, -0.0006933212280273438, -1.1444091796875e-05, -0.28988492488861084, -4.29153169534402e-06, -1.2122087478637695, -8.0108642578125e-05, -0.0001316070556640625, -4.00543212890625e-05, -1.0261268615722656, -9.190614218823612e-05, -0.14015591144561768, -5.7220458984375e-06, -0.0070209503173828125, -0.0007381439208984375, -0.0002231597900390625, -0.00016713140939828008, -2.3841855067985307e-07, -0.5259361267089844, -0.0001621246337890625, -6.29425048828125e-05, 0.0, -0.015381336212158203, 0.0, -0.0034809112548828125, 0.0, -0.003597259521484375, -8.392333984375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0007086992263793945, -5.7220458984375e-06, -2.86102294921875e-05, -7.43865966796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -5.7220458984375e-06, -4.601478576660156e-05, 0.0, -0.0008230209350585938, -1.1444091796875e-05, -0.4297046661376953, -5.7220458984375e-06, -0.000324249267578125, -0.000110626220703125, -3.0517578125e-05, -0.4182778596878052, -0.00020611286163330078, -0.03427410125732422, -0.004062652587890625, -0.278463214635849, -0.05420087277889252, -0.0009911478264257312, -0.7416772842407227, -7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.2564840316772461, -9.5367431640625e-06, -0.0007686614990234375, -0.0002193450927734375, -0.0016613006591796875, -3.814697265625e-06, -0.03424644470214844, -7.62939453125e-06, -0.9909521341323853, -0.00023663042520638555, -0.7091008424758911, -1.1444091796875e-05, -0.000339508056640625, -0.000583648681640625, -3.814697265625e-06, -0.2503514289855957, -2.9802276912960224e-06], "choice_history": [97, 285, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "5", "<EOS>", 358, 109, 160, 17, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 343, 5, 346, 52, 179, "0", "<EOS>", 361, 102, 142, 346, 50, 174, "hammer", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "agent", "<EOS>", 346, 50, 174, "game", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 102, 142, 346, 50, 174, "justice", "<EOS>", 38, 325, "<UNK>", "Justice", "<EOS>", 102, 142, 346, 50, 174, "hammer", "<EOS>", 16, 150, 13, 143, 21, 174, "justice", "<EOS>", "create_weapon", "<EOS>", 346, 50, 174, "player", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 5, "hole3": "RARE", "_type": "Template34", "hole0": "Nourish", "hole2": "DRUID"}], "hole0": "Nourish", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"value": {"func": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "current_player", "_type": "Attribute"}, "attr": "agent", "_type": "Attribute"}, "args": [{"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "hammer", "_type": "Name"}]}, {"hole1": "summon", "_type": "Template77", "hole0": {"id": "card", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}, {"value": {"_type": "Template79", "hole0": "<UNK>Justice"}, "_type": "Assign", "targets": [{"id": "justice", "_type": "Name"}]}, {"value": {"func": {"value": {"id": "justice", "_type": "Name"}, "attr": "create_weapon", "_type": "Attribute"}, "args": [{"id": "player", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "hammer", "_type": "Name"}]}], "test": {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Gt"}], "comparators": [{"n": 0, "_type": "Num"}]}, "_type": "If"}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            if len(<UNK>) > 0:\n                hammer = game.current_player.agent(game)\n                card.summon(player, player.game, len(player.minions))\n                justice = <UNK>Justice()\n                hammer = game.random_choice(minions)\n", "score": -13.913690545799625, "score_history": [-9.5367431640625e-06, -0.0041713714599609375, -0.0003567297535482794, -1.77621805050876e-05, -9.536736342852237e-07, -2.2411262762034312e-05, -6.318082796497038e-06, -3.0517578125e-05, -0.0043239593505859375, -3.0517578125e-05, -3.3378546504536644e-06, -1.9073486328125e-06, 0.0, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0002117156982421875, 0.0, -0.0003032684326171875, -3.814697265625e-06, -4.208087921142578e-05, 0.0, -2.09808349609375e-05, -5.91278076171875e-05, -8.463848644169047e-06, -3.8266178307821974e-05, -1.0379610061645508, -0.000186920166015625, -0.0007762908935546875, -3.4332275390625e-05, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -2.777576446533203e-05, -3.814697265625e-05, -1.537799835205078e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.013623237609863281, -0.0012111663818359375, -0.0004024505615234375, -0.0001354217529296875, -0.011986494064331055, -3.814697265625e-06, -0.026441574096679688, -0.000484466552734375, -3.814697265625e-05, -1.9073486328125e-06, -0.0004761219024658203, 0.0, -2.86102294921875e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0005050897016189992, -6.866455078125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.26651203632354736, -2.574920654296875e-05, -0.207427978515625, -0.33484458923339844, -0.001216888427734375, -0.38480377197265625, -3.814697265625e-06, -0.008733749389648438, -2.09808349609375e-05, -0.0042247772216796875, -9.5367431640625e-06, -0.0014159635175019503, -0.0001705884642433375, 0.0, -0.010822296142578125, -1.1444091796875e-05, -1.3137093782424927, -8.678231824887916e-05, -0.0002155303955078125, -0.23436450958251953, -9.5367431640625e-06, -0.0009174346923828125, -1.9073486328125e-06, -0.005021092481911182, -7.62939453125e-06, -0.2584056854248047, -0.000125885009765625, -7.62939453125e-06, -0.0001010894775390625, -0.00011444091796875, -0.0001659393310546875, -1.347862720489502, -2.0265579223632812e-06, -0.004638671875, -4.38690185546875e-05, -4.38690185546875e-05, -5.7220458984375e-06, -0.38336849212646484, 0.0, -0.003864288330078125, -8.7738037109375e-05, -0.3424050807952881, -5.7220458984375e-06, -0.10041213035583496, -1.9073486328125e-06, -0.03151559829711914, -0.00017964839935302734, -0.015763282775878906, -0.0006933212280273438, -1.1444091796875e-05, -0.28988492488861084, -4.29153169534402e-06, -1.2122087478637695, -8.0108642578125e-05, -0.0001316070556640625, -4.00543212890625e-05, -1.0261268615722656, -9.190614218823612e-05, -0.14015591144561768, -5.7220458984375e-06, -0.0070209503173828125, -0.0007381439208984375, -0.0002231597900390625, -0.00016713140939828008, -2.3841855067985307e-07, -0.5259361267089844, -0.0001621246337890625, -6.29425048828125e-05, 0.0, -0.015381336212158203, 0.0, -0.0034809112548828125, 0.0, -0.003597259521484375, -8.392333984375e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0007086992263793945, -5.7220458984375e-06, -2.86102294921875e-05, -7.43865966796875e-05, -1.9073486328125e-06, -5.340576171875e-05, -5.7220458984375e-06, -4.601478576660156e-05, 0.0, -0.0008230209350585938, -1.1444091796875e-05, -0.4297046661376953, -5.7220458984375e-06, -0.000324249267578125, -0.000110626220703125, -3.0517578125e-05, -0.4182778596878052, -0.00020611286163330078, -0.03427410125732422, -0.004062652587890625, -0.278463214635849, -0.05420087277889252, -0.0009911478264257312, -0.7416772842407227, -7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.2564840316772461, -9.5367431640625e-06, -0.0007686614990234375, -0.0002193450927734375, -0.0016613006591796875, -3.814697265625e-06, -0.03424644470214844, -7.62939453125e-06, -1.1685744524002075, -2.3841855067985307e-07, -0.16331219673156738, -5.7220458984375e-06, -5.7220458984375e-06, -0.00019073486328125, -1.1444091796875e-05, -0.7293888926506042, -4.6729484893148765e-05], "choice_history": [97, 285, "Nourish", "<EOS>", "Spell", "Card", "<EOS>", 358, 128, 233, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "5", "<EOS>", 358, 109, 160, 17, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>", 343, 5, 346, 52, 179, "0", "<EOS>", 361, 102, 142, 346, 50, 174, "hammer", "<EOS>", 16, 150, 13, 143, 13, 143, 21, 174, "game", "<EOS>", "current_player", "<EOS>", "agent", "<EOS>", 346, 50, 174, "game", "<EOS>", 136, 318, 21, 174, "card", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 102, 142, 346, 50, 174, "justice", "<EOS>", 38, 325, "<UNK>", "Justice", "<EOS>", 102, 142, 346, 50, 174, "hammer", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "minions", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 5, "hole3": "RARE", "_type": "Template34", "hole0": "Nourish", "hole2": "DRUID"}], "hole0": "Nourish", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"body": [{"value": {"func": {"value": {"value": {"id": "game", "_type": "Name"}, "attr": "current_player", "_type": "Attribute"}, "attr": "agent", "_type": "Attribute"}, "args": [{"id": "game", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "hammer", "_type": "Name"}]}, {"hole1": "summon", "_type": "Template77", "hole0": {"id": "card", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}, {"value": {"_type": "Template79", "hole0": "<UNK>Justice"}, "_type": "Assign", "targets": [{"id": "justice", "_type": "Name"}]}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "minions", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "hammer", "_type": "Name"}]}], "test": {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Gt"}], "comparators": [{"n": 0, "_type": "Num"}]}, "_type": "If"}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}]}}]}
{"gold_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.add_aura(AuraUntil(ManaChange(-3), CardSelector(condition=\n            IsSpell()), SpellCast()))\n", "beams": [{"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(GiveAura([AuraUntil(ManaChange(-3), CardSelector(\n            condition=IsType(MINION_TYPE.DRAGON)), CardPlayed(IsType(\n            MINION_TYPE.DRAGON)), True)]), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -4.594390774560445, "score_history": [-0.23993206024169922, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001850128173828125, -0.14840474724769592, -0.4054098427295685, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008325920440256596, -0.0002557039260864258, -9.477137791691348e-05, -1.33514404296875e-05, -0.03135871887207031, -0.0004711151123046875, -4.124556289752945e-05, -0.000118255615234375, -0.0017570257186889648, -8.225440979003906e-06, -0.2898811101913452, -2.09808349609375e-05, -0.010648727416992188, -7.62939453125e-06, -0.18341445922851562, -3.814697265625e-06, -0.0011997222900390625, 0.0, -0.005825042724609375, -1.1444091796875e-05, -0.7028684616088867, -0.0001316070556640625, -0.008485794067382812, -0.000621795654296875, -1.076115608215332, -0.08309555053710938, -0.006877416744828224, -0.002835150109604001, -0.004198551177978516, -7.62939453125e-05, -0.1190347671508789, -0.0044765472412109375, -0.00322878360748291, -0.003116607666015625, 0.0, -0.008646011352539062, -0.07323455810546875, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.001987934112548828, -7.688998448429629e-05, -0.007909774780273438, -0.0001506805419921875, -0.00030517578125, -0.000186920166015625, -0.0002079010009765625, -0.000347137451171875, -1.71661376953125e-05, -0.0023636221885681152, 0.0, -0.12319183349609375, -0.012612342834472656, -0.23659050464630127, -0.008032917976379395, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.0001964569091796875, -0.0001316070556640625, -0.031899452209472656, -3.4332275390625e-05, -0.15650367736816406, -0.00293731689453125, -1.9073486328125e-05, -8.58306884765625e-05, -0.16507720947265625, -0.008358001708984375, -1.33514404296875e-05, -0.0028514862060546875, -0.039740562438964844, -0.001499176025390625, -0.07700061798095703, -0.003653883934020996, -0.00138092041015625, -0.000156402587890625, -0.0001583099365234375, -1.1444091796875e-05, -0.25936126708984375, -0.0006561279296875, -0.0005084230797365308, -1.1920928244535389e-07, -0.02344685234129429, 0.0], "choice_history": [96, 173, 358, 105, 152, "Preparation", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 28, 261, "Give", "Aura", "<EOS>", 346, 86, 321, "Aura", "Until", "<EOS>", 349, 45, 150, 21, 174, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "3", "<EOS>", 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 45, 150, 21, 174, "Card", "Played", "<EOS>", 346, 74, 297, "DRAGON", "<EOS>", 51, 175, "False", "<EOS>", 122, 213, "3", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "PRIEST", "hole0": "Preparation", "_type": "Template4", "hole3": "EPIC", "hole1": 0, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"hole1": [{"hole1": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Call"}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}, {"func": {"id": "CardPlayed", "_type": "Name"}, "args": [{"_type": "Template60", "hole0": "DRAGON"}], "_type": "Call"}, {"value": true, "_type": "NameConstant"}], "_type": "Template78", "hole0": "AuraUntil"}], "_type": "Template42", "hole0": "GiveAura"}}, {"hole1": 3, "_type": "Template19", "hole0": 3}], "name": "Preparation", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(GiveAura([AuraUntil(ManaChange(-3), CardSelector(\n            condition=IsType(MINION_TYPE.DRAGON)), CardPlayed(IsType(\n            MINION_TYPE.DRAGON)), True)]), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -5.187817726990026, "score_history": [-0.23993206024169922, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001850128173828125, -0.14840474724769592, -0.4054098427295685, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008325920440256596, -0.0002557039260864258, -9.477137791691348e-05, -1.33514404296875e-05, -0.03135871887207031, -0.0004711151123046875, -4.124556289752945e-05, -0.000118255615234375, -0.0017570257186889648, -8.225440979003906e-06, -0.2898811101913452, -2.09808349609375e-05, -0.010648727416992188, -7.62939453125e-06, -0.18341445922851562, -3.814697265625e-06, -0.0011997222900390625, 0.0, -0.005825042724609375, -1.1444091796875e-05, -0.8973178863525391, -7.2479248046875e-05, -0.02732372283935547, -0.0023136138916015625, -1.5370969772338867, -0.06698036193847656, -0.009666023775935173, -0.002894757781177759, -0.0017998218536376953, -6.29425048828125e-05, -0.05544567108154297, -0.005272865295410156, -0.003980159759521484, -0.0030879974365234375, 0.0, -0.007891654968261719, -0.081207275390625, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -0.002013564109802246, -7.891654240665957e-05, -0.00818634033203125, -0.0001506805419921875, -0.000308990478515625, -0.00019073486328125, -0.0002002716064453125, -0.00034332275390625, -1.71661376953125e-05, -0.002352953888475895, 0.0, -0.1184682846069336, -0.012578964233398438, -0.2355414628982544, -0.008292317390441895, -1.9073486328125e-06, -5.7220458984375e-06, -0.000110626220703125, -1.9073486328125e-06, -7.82012939453125e-05, 0.0, -0.000194549560546875, -0.000133514404296875, -0.031693458557128906, -3.4332275390625e-05, -0.16137409210205078, -0.0027446746826171875, -1.9073486328125e-05, -8.58306884765625e-05, -0.16616058349609375, -0.008840560913085938, -1.33514404296875e-05, -0.0029697418212890625, -0.04075050354003906, -0.001468658447265625, -0.07668781280517578, -0.003585219383239746, -0.0012407302856445312, -0.000148773193359375, -0.0001544952392578125, -9.5367431640625e-06, -0.24578857421875, -0.0006542205810546875, -0.0004950716975145042, -1.1920928244535389e-07, -0.023739870637655258, 0.0], "choice_history": [96, 173, 358, 105, 152, "Preparation", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 28, 261, "Give", "Aura", "<EOS>", 346, 86, 321, "Aura", "Until", "<EOS>", 349, 45, 150, 21, 174, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "3", "<EOS>", 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 45, 150, 21, 174, "Card", "Played", "<EOS>", 346, 74, 297, "DRAGON", "<EOS>", 51, 175, "False", "<EOS>", 122, 213, "3", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "PRIEST", "hole0": "Preparation", "_type": "Template4", "hole3": "EPIC", "hole1": 0, "hole4": "minion_type", "hole6": "MECH", "hole8": {"hole1": [{"hole1": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Call"}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}, {"func": {"id": "CardPlayed", "_type": "Name"}, "args": [{"_type": "Template60", "hole0": "DRAGON"}], "_type": "Call"}, {"value": true, "_type": "NameConstant"}], "_type": "Template78", "hole0": "AuraUntil"}], "_type": "Template42", "hole0": "GiveAura"}}, {"hole1": 3, "_type": "Template19", "hole0": 3}], "name": "Preparation", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class PreparationPreparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(GiveAura([AuraUntil(ManaChange(-3), CardSelector(\n            condition=IsType(MINION_TYPE.DRAGON)), CardPlayed(IsType(\n            MINION_TYPE.DRAGON)), True)]), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -5.490231156210932, "score_history": [-0.23993206024169922, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001850128173828125, -0.14840474724769592, -1.1559041738510132, -0.10530191659927368, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0018717923667281866, -0.0002079010009765625, -0.00016891956329345703, -2.47955322265625e-05, -0.02197265625, -0.0004749298095703125, -4.482168878894299e-05, -0.0003452301025390625, -0.0014030933380126953, -8.344650268554688e-06, -0.2809615135192871, -2.6702880859375e-05, -0.017543792724609375, -5.7220458984375e-06, -0.21504878997802734, -1.9073486328125e-06, -0.001445770263671875, 0.0, -0.0044231414794921875, -9.5367431640625e-06, -0.6730537414550781, -0.0001220703125, -0.008150100708007812, -0.0005664825439453125, -1.1235580444335938, -0.09348106384277344, -0.006747134495526552, -0.002682681195437908, -0.004358053207397461, -6.4849853515625e-05, -0.11904335021972656, -0.004406929016113281, -0.003141045570373535, -0.003093719482421875, 0.0, -0.00855255126953125, -0.07436656951904297, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.0019832849502563477, -7.688998448429629e-05, -0.007932662963867188, -0.0001506805419921875, -0.00030517578125, -0.000186920166015625, -0.0002079010009765625, -0.0003490447998046875, -1.71661376953125e-05, -0.002276315353810787, 0.0, -0.12423896789550781, -0.012598037719726562, -0.22773373126983643, -0.007866978645324707, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.0001964569091796875, -0.0001316070556640625, -0.031871795654296875, -3.4332275390625e-05, -0.15673255920410156, -0.0029315948486328125, -1.9073486328125e-05, -8.58306884765625e-05, -0.1656780242919922, -0.008339881896972656, -1.33514404296875e-05, -0.002838134765625, -0.03983306884765625, -0.00150299072265625, -0.07696151733398438, -0.003642439842224121, -0.0013761520385742188, -0.000156402587890625, -0.0001583099365234375, -1.1444091796875e-05, -0.26584815979003906, -0.0006847381591796875, -0.0005104492302052677, -1.1920928244535389e-07, -0.023349573835730553, 0.0], "choice_history": [96, 173, 358, 105, 152, "Preparation", "Preparation", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 28, 261, "Give", "Aura", "<EOS>", 346, 86, 321, "Aura", "Until", "<EOS>", 349, 45, 150, 21, 174, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "3", "<EOS>", 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 45, 150, 21, 174, "Card", "Played", "<EOS>", 346, 74, 297, "DRAGON", "<EOS>", 51, 175, "False", "<EOS>", 122, 213, "3", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "PRIEST", "hole0": "Preparation", "_type": "Template4", "hole3": "EPIC", "hole1": 0, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"hole1": [{"hole1": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Call"}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}, {"func": {"id": "CardPlayed", "_type": "Name"}, "args": [{"_type": "Template60", "hole0": "DRAGON"}], "_type": "Call"}, {"value": true, "_type": "NameConstant"}], "_type": "Template78", "hole0": "AuraUntil"}], "_type": "Template42", "hole0": "GiveAura"}}, {"hole1": 3, "_type": "Template19", "hole0": 3}], "name": "PreparationPreparation", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DRAGON, battlecry=(\n            Battlecry(Kill(), MinionSelector(players=BothPlayer())),\n            ActionTag(Kill(), SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -5.642441703079385, "score_history": [-0.23993206024169922, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001850128173828125, -0.14840474724769592, -0.4054098427295685, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008325920440256596, -0.0002557039260864258, -9.477137791691348e-05, -1.33514404296875e-05, -0.03135871887207031, -0.0004711151123046875, -4.124556289752945e-05, -0.000118255615234375, -0.0017570257186889648, -8.225440979003906e-06, -0.2898811101913452, -2.09808349609375e-05, -0.010648727416992188, -7.62939453125e-06, -0.18341445922851562, -3.814697265625e-06, -0.0011997222900390625, 0.0, -0.005825042724609375, -1.1444091796875e-05, -0.7028684616088867, -0.0001316070556640625, -0.008485794067382812, -0.000621795654296875, -0.4622020721435547, -0.0002689361572265625, -0.00753021240234375, -0.00443267822265625, -0.9748563766479492, -0.49102818965911865, -0.0019714832305908203, -0.00015854835510253906, -0.0023728609085083008, 0.0, -0.0035381317138671875, -7.62939453125e-06, 0.0, -0.10689902305603027, -5.841255187988281e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.032736897468566895, -0.00016021728515625, 0.0, -0.7675209045410156, -0.012928009033203125, -0.6175657510757446, -0.00019872188568115234, -0.06107521057128906, 0.0, 0.0, -0.015069007873535156, -0.000698089599609375, -0.01928117871284485, 0.0, -0.02035331539809704, 0.0], "choice_history": [96, 173, 358, 105, 152, "Preparation", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 40, 329, 347, 63, 263, "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "3", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "PRIEST", "hole0": "Preparation", "_type": "Template4", "hole3": "EPIC", "hole1": 0, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"elts": [{"hole2": "MinionSelector", "_type": "Template43", "hole0": "Kill", "hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}]}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}], "_type": "Tuple"}}, {"hole1": 3, "_type": "Template19", "hole0": 3}], "name": "Preparation", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.MECH, battlecry=(\n            Battlecry(Kill(), MinionSelector(players=BothPlayer())),\n            ActionTag(Kill(), SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -5.9890720844996395, "score_history": [-0.23993206024169922, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001850128173828125, -0.14840474724769592, -0.4054098427295685, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008325920440256596, -0.0002557039260864258, -9.477137791691348e-05, -1.33514404296875e-05, -0.03135871887207031, -0.0004711151123046875, -4.124556289752945e-05, -0.000118255615234375, -0.0017570257186889648, -8.225440979003906e-06, -0.2898811101913452, -2.09808349609375e-05, -0.010648727416992188, -7.62939453125e-06, -0.18341445922851562, -3.814697265625e-06, -0.0011997222900390625, 0.0, -0.005825042724609375, -1.1444091796875e-05, -0.8973178863525391, -7.2479248046875e-05, -0.02732372283935547, -0.0023136138916015625, -0.28308773040771484, -0.000484466552734375, -0.0291595458984375, -0.018079757690429688, -1.127389907836914, -0.6636030673980713, -0.0018999576568603516, -9.191036224365234e-05, -0.0030728578567504883, 0.0, -0.0053806304931640625, -7.62939453125e-06, 0.0, -0.0967867374420166, -5.841255187988281e-06, -2.288818359375e-05, -3.814697265625e-06, -0.02420055866241455, -0.000148773193359375, 0.0, -0.7609586715698242, -0.013962745666503906, -0.5853079557418823, -0.00024080276489257812, -0.06611347198486328, 0.0, 0.0, -0.013955116271972656, -0.0006427764892578125, -0.01948721893131733, 0.0, -0.020507214590907097, 0.0], "choice_history": [96, 173, 358, 105, 152, "Preparation", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 40, 329, 347, 63, 263, "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "3", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "PRIEST", "hole0": "Preparation", "_type": "Template4", "hole3": "EPIC", "hole1": 0, "hole4": "minion_type", "hole6": "MECH", "hole8": {"elts": [{"hole2": "MinionSelector", "_type": "Template43", "hole0": "Kill", "hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}]}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}], "_type": "Tuple"}}, {"hole1": 3, "_type": "Template19", "hole0": 3}], "name": "Preparation", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DRAGON, battlecry=(\n            Battlecry(Kill(), MinionSelector(Adjacent())), Battlecry(Kill(),\n            MinionSelector(Adjacent()))))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -6.087947036852711, "score_history": [-0.23993206024169922, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001850128173828125, -0.14840474724769592, -0.4054098427295685, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008325920440256596, -0.0002557039260864258, -9.477137791691348e-05, -1.33514404296875e-05, -0.03135871887207031, -0.0004711151123046875, -4.124556289752945e-05, -0.000118255615234375, -0.0017570257186889648, -8.225440979003906e-06, -0.2898811101913452, -2.09808349609375e-05, -0.010648727416992188, -7.62939453125e-06, -0.18341445922851562, -3.814697265625e-06, -0.0011997222900390625, 0.0, -0.005825042724609375, -1.1444091796875e-05, -0.7028684616088867, -0.0001316070556640625, -0.008485794067382812, -0.000621795654296875, -0.4622020721435547, -0.0002689361572265625, -0.00753021240234375, -0.00443267822265625, -1.0460205078125, -0.04395449161529541, -0.00818479061126709, -0.001248002052307129, -0.00128173828125, 0.0, -0.7518320083618164, -0.017641067504882812, -1.33514404296875e-05, -0.40435221791267395, -0.019214842468500137, -0.5255775451660156, -0.08264923095703125, -0.05640631169080734, -0.0015653371810913086, -0.00016176694771274924, -4.57763671875e-05, 0.0, -0.2436513900756836, -0.000591278076171875, -4.1961669921875e-05, -0.351115345954895, -0.003740787273272872, -0.00031280517578125, -0.000225067138671875, -0.0022960156202316284, 0.0, -0.011839509010314941, 0.0], "choice_history": [96, 173, 358, 105, 152, "Preparation", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 40, 329, 347, 63, 264, "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 346, 88, 325, "Adjacent", "<EOS>", 63, 264, "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 346, 88, 325, "Adjacent", "<EOS>", 122, 213, "3", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "PRIEST", "hole0": "Preparation", "_type": "Template4", "hole3": "EPIC", "hole1": 0, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"elts": [{"hole2": "MinionSelector", "hole3": [{"_type": "Template79", "hole0": "Adjacent"}], "_type": "Template43", "hole0": "Kill"}, {"hole2": "MinionSelector", "hole3": [{"_type": "Template79", "hole0": "Adjacent"}], "_type": "Template43", "hole0": "Kill"}], "_type": "Tuple"}}, {"hole1": 3, "_type": "Template19", "hole0": 3}], "name": "Preparation", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.MECH, battlecry=(\n            Battlecry(Kill(), MinionSelector(Adjacent())), Battlecry(Kill(),\n            MinionSelector(Adjacent()))))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -6.1201456112612505, "score_history": [-0.23993206024169922, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001850128173828125, -0.14840474724769592, -0.4054098427295685, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008325920440256596, -0.0002557039260864258, -9.477137791691348e-05, -1.33514404296875e-05, -0.03135871887207031, -0.0004711151123046875, -4.124556289752945e-05, -0.000118255615234375, -0.0017570257186889648, -8.225440979003906e-06, -0.2898811101913452, -2.09808349609375e-05, -0.010648727416992188, -7.62939453125e-06, -0.18341445922851562, -3.814697265625e-06, -0.0011997222900390625, 0.0, -0.005825042724609375, -1.1444091796875e-05, -0.8973178863525391, -7.2479248046875e-05, -0.02732372283935547, -0.0023136138916015625, -0.28308773040771484, -0.000484466552734375, -0.0291595458984375, -0.018079757690429688, -1.1199016571044922, -0.048709988594055176, -0.007144927978515625, -0.0009046792984008789, -0.001445770263671875, 0.0, -0.6037473678588867, -0.009527206420898438, -2.09808349609375e-05, -0.40284061431884766, -0.020274851471185684, -0.6142063140869141, -0.091827392578125, -0.06176597252488136, -0.001890420913696289, -0.00016975398466456681, -4.1961669921875e-05, 0.0, -0.21779251098632812, -0.0006504058837890625, -3.814697265625e-05, -0.31351208686828613, -0.0032314059790223837, -0.0003108978271484375, -0.0002346038818359375, -0.002348393201828003, 0.0, -0.012325763702392578, 0.0], "choice_history": [96, 173, 358, 105, 152, "Preparation", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 40, 329, 347, 63, 264, "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 346, 88, 325, "Adjacent", "<EOS>", 63, 264, "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 346, 88, 325, "Adjacent", "<EOS>", 122, 213, "3", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "PRIEST", "hole0": "Preparation", "_type": "Template4", "hole3": "EPIC", "hole1": 0, "hole4": "minion_type", "hole6": "MECH", "hole8": {"elts": [{"hole2": "MinionSelector", "hole3": [{"_type": "Template79", "hole0": "Adjacent"}], "_type": "Template43", "hole0": "Kill"}, {"hole2": "MinionSelector", "hole3": [{"_type": "Template79", "hole0": "Adjacent"}], "_type": "Template43", "hole0": "Kill"}], "_type": "Tuple"}}, {"hole1": 3, "_type": "Template19", "hole0": 3}], "name": "Preparation", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DRAGON, battlecry=(\n            Battlecry(Kill(), MinionSelector(players=BothPlayer())),\n            Battlecry(TurnEnded(player=CurrentPlayer()), ActionTag(Kill(),\n            SelfSelector()))))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -7.015018468795461, "score_history": [-0.23993206024169922, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001850128173828125, -0.14840474724769592, -0.4054098427295685, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008325920440256596, -0.0002557039260864258, -9.477137791691348e-05, -1.33514404296875e-05, -0.03135871887207031, -0.0004711151123046875, -4.124556289752945e-05, -0.000118255615234375, -0.0017570257186889648, -8.225440979003906e-06, -0.2898811101913452, -2.09808349609375e-05, -0.010648727416992188, -7.62939453125e-06, -0.18341445922851562, -3.814697265625e-06, -0.0011997222900390625, 0.0, -0.005825042724609375, -1.1444091796875e-05, -0.7028684616088867, -0.0001316070556640625, -0.008485794067382812, -0.000621795654296875, -0.4622020721435547, -0.0002689361572265625, -0.00753021240234375, -0.00443267822265625, -0.9748563766479492, -0.49102818965911865, -0.0019714832305908203, -0.00015854835510253906, -0.0023728609085083008, 0.0, -0.0035381317138671875, -7.62939453125e-06, 0.0, -0.10689902305603027, -5.841255187988281e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.032736897468566895, -0.00016021728515625, 0.0, -1.2286310195922852, -0.0002269744873046875, -7.62939453125e-06, -5.7220458984375e-06, -0.05873513221740723, -0.0016614198684692383, -5.7220458984375e-06, -0.24285316467285156, -0.1006155014038086, -5.14984130859375e-05, -1.9073486328125e-06, -0.24403035640716553, -0.039870262145996094, -1.9073486328125e-06, -9.918212890625e-05, -0.00029754638671875, -0.0005359649658203125, -0.04995441436767578, 0.0, -2.288818359375e-05, 0.0, -0.07891690731048584, -0.004168987274169922, 0.0, -0.18939495086669922, -0.02148914337158203, -0.3570425510406494, -0.002263307571411133, -0.22019290924072266, 0.0, 0.0, -0.003818511962890625, -0.000995635986328125, -0.018486345186829567, 0.0, -0.02288949117064476, 0.0], "choice_history": [96, 173, 358, 105, 152, "Preparation", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 40, 329, 347, 63, 263, "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 45, 150, 21, 174, "Battlecry", "<EOS>", 347, 45, 149, 21, 174, "Turn", "Ended", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Current", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "3", "<EOS>", "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "PRIEST", "hole0": "Preparation", "_type": "Template4", "hole3": "EPIC", "hole1": 0, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"elts": [{"hole2": "MinionSelector", "_type": "Template43", "hole0": "Kill", "hole4": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}]}, {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"func": {"id": "TurnEnded", "_type": "Name"}, "keywords": [{"value": {"_type": "Template79", "hole0": "CurrentPlayer"}, "arg": "player", "_type": "keyword"}], "_type": "Call"}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}], "_type": "Call"}], "_type": "Tuple"}}, {"hole1": 3, "_type": "Template19", "hole0": 3}], "name": "Preparation", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda c: character.card.\n            minion_type == MINION_TYPE.DEMON and len(player.minions) < 7)\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -8.070439979503107, "score_history": [-0.23993206024169922, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001850128173828125, -0.14840474724769592, -0.4054098427295685, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008325920440256596, -0.0002557039260864258, -9.477137791691348e-05, -1.33514404296875e-05, -0.03135871887207031, -0.0004711151123046875, -4.124556289752945e-05, -0.000118255615234375, -0.0017570257186889648, -8.225440979003906e-06, -0.2898811101913452, -2.09808349609375e-05, -0.010648727416992188, -7.62939453125e-06, -2.013819694519043, -0.0014324188232421875, -0.0015134811401367188, 0.0, -5.7220458984375e-05, 0.0, -0.001636505126953125, -0.0002155303955078125, -0.000423431396484375, -7.05718994140625e-05, -0.1682291030883789, -1.9073486328125e-06, -0.25461578369140625, -7.2479248046875e-05, -0.21383094787597656, -0.0051422119140625, -0.0003414154052734375, -0.0003681182861328125, -0.09072792530059814, -0.000493168830871582, -0.0029878616333007812, -1.52587890625e-05, -0.00131988525390625, -0.0027589797973632812, -0.026782989501953125, -4.9591064453125e-05, -0.8431100845336914, -1.9073486328125e-06, -0.19184112548828125, -2.288818359375e-05, -0.0023670196533203125, -3.62396240234375e-05, -0.46300220489501953, -1.1920928244535389e-07, -0.006819367408752441, 0.0, -0.0023500919342041016, -1.1920928244535389e-07, -8.96453857421875e-05, -0.09130859375, -5.7220458984375e-06, -0.001827239990234375, -1.9073486328125e-06, -6.866455078125e-05, -8.7738037109375e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.1118917465209961, -1.52587890625e-05, -0.8273086547851562, -8.96453857421875e-05, -0.014678001403808594, -0.0001697540283203125, -1.1444091796875e-05, 0.0, -0.1603717803955078, -0.0003185272216796875, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0002613067626953125, -3.814697265625e-06, -0.0026311874389648438, 0.0, -0.09703540802001953, -0.00011444091796875, -0.000133514404296875, -0.0038738250732421875, -1.33514404296875e-05, -0.000232696533203125, -2.288818359375e-05, -0.2924206256866455, -1.9073486328125e-06, -0.2201528549194336, -0.00022125244140625, -0.00038909912109375, -0.00063323974609375, -0.011075973510742188, -0.0001773834228515625, -0.000762939453125, -1.9073486328125e-06, -0.00045013427734375, -1.1920928244535389e-07, -5.7220458984375e-06, -0.012854695320129395, -1.1920928244535389e-07, -3.62396240234375e-05, -5.841255187988281e-06, -6.699562072753906e-05, -0.1400918960571289, -0.3330564498901367, -8.20159912109375e-05, -0.1344776153564453, -0.0010356903076171875, -0.010206222534179688, -0.0008907318115234375, -0.0003509521484375, -0.0018329620361328125, -0.0001049041748046875, 0.0, -2.3841854272177443e-05, -7.43865966796875e-05, -0.00177764892578125, 0.0, -0.006312370300292969, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.1285381317138672, -3.4332275390625e-05, -0.001873016357421875, -8.0108642578125e-05, -0.000209808349609375, 0.0, -0.0006308555603027344, -0.00010526180267333984, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -0.000446319580078125, 0.0, -0.004422187805175781, -2.09808349609375e-05, -0.0003910064697265625, -0.0012540817260742188, -3.0517578125e-05, -8.392333984375e-05, -2.86102294921875e-05, -0.016476869583129883, -3.814697265625e-06], "choice_history": [96, 173, 358, 105, 152, "Preparation", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "c", "<EOS>", 15, 146, 2, 347, 46, 153, 13, 143, 13, 143, 21, 174, "character", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 343, 4, 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "filter_func", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "PRIEST", "hole0": "Preparation", "_type": "Template4", "hole3": "EPIC", "hole1": 0, "hole4": "target_func", "hole6": "find_minion_spell_target", "hole8": {"body": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"left": {"value": {"value": {"id": "character", "_type": "Name"}, "attr": "card", "_type": "Attribute"}, "attr": "minion_type", "_type": "Attribute"}, "_type": "Compare", "ops": [{"_type": "Eq"}], "comparators": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}]}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}], "comparators": [{"n": 7, "_type": "Num"}]}]}, "args": {"_type": "Template49", "hole0": "c"}, "_type": "Lambda"}}, {"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}], "comparators": [{"n": 7, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "Preparation", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda c: len(player.\n            minions) < 10 and len(player.minions) < 7)\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -8.14406542486347, "score_history": [-0.23993206024169922, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001850128173828125, -0.14840474724769592, -0.4054098427295685, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008325920440256596, -0.0002557039260864258, -9.477137791691348e-05, -1.33514404296875e-05, -0.03135871887207031, -0.0004711151123046875, -4.124556289752945e-05, -0.000118255615234375, -0.0017570257186889648, -8.225440979003906e-06, -0.2898811101913452, -2.09808349609375e-05, -0.010648727416992188, -7.62939453125e-06, -2.013819694519043, -0.0014324188232421875, -0.0015134811401367188, 0.0, -5.7220458984375e-05, 0.0, -0.001636505126953125, -0.0002155303955078125, -0.000423431396484375, -7.05718994140625e-05, -0.1682291030883789, -1.9073486328125e-06, -0.25461578369140625, -7.2479248046875e-05, -0.21383094787597656, -0.0051422119140625, -0.0003414154052734375, -0.0003681182861328125, -0.09072792530059814, -0.000493168830871582, -0.0029878616333007812, -1.52587890625e-05, -0.00131988525390625, -0.0027589797973632812, -0.026782989501953125, -4.9591064453125e-05, -1.0074434280395508, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.20227038860321045, -2.9325485229492188e-05, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -0.0001621246337890625, -5.7220458984375e-06, -8.487701416015625e-05, 0.0, -0.2620706558227539, -0.00035858154296875, -9.5367431640625e-06, -0.0028676986694335938, -7.62939453125e-05, -5.91278076171875e-05, -1.1444091796875e-05, -0.4725593328475952, -0.0001277923583984375, -0.2836875915527344, -0.0019168853759765625, -0.0008258819580078125, -0.00045013427734375, -0.0021381378173828125, -1.9073486328125e-06, -0.11898148059844971, -0.00319516658782959, -1.9073486328125e-06, -8.20159912109375e-05, -2.47955322265625e-05, -0.00119781494140625, -1.1444091796875e-05, -0.000545501708984375, 0.0, -0.046077728271484375, -0.0003681182861328125, -0.000209808349609375, -0.0022001266479492188, -2.86102294921875e-05, -7.62939453125e-05, -2.86102294921875e-05, -0.24838030338287354, -9.5367431640625e-06, -0.3368520736694336, -0.0008459091186523438, -0.0006084442138671875, -0.0006046295166015625, -0.014284133911132812, -0.0002288818359375, -0.0019664764404296875, -5.7220458984375e-06, -0.000675201416015625, -3.576278118089249e-07, -9.5367431640625e-06, -0.015562176704406738, -3.576278118089249e-07, -4.38690185546875e-05, -5.841255187988281e-06, -3.6716461181640625e-05, -0.4152965545654297, -0.36476898193359375, -7.62939453125e-05, -0.22315216064453125, -0.001361846923828125, -0.0116424560546875, -0.0011844635009765625, -0.000453948974609375, -0.0038280487060546875, -0.000179290771484375, 0.0, -2.3245802367455326e-05, -6.103515625e-05, -0.0016021728515625, 0.0, -0.00643157958984375, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.1335887908935547, -3.814697265625e-05, -0.00189971923828125, -7.05718994140625e-05, -0.00022125244140625, 0.0, -0.0006432533264160156, -0.00010144710540771484, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.00043964385986328125, 0.0, -0.004275321960449219, -2.47955322265625e-05, -0.0003910064697265625, -0.0012655258178710938, -2.86102294921875e-05, -8.0108642578125e-05, -3.0517578125e-05, -0.016450166702270508, -5.7220458984375e-06], "choice_history": [96, 173, 358, 105, 152, "Preparation", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "c", "<EOS>", 15, 146, 2, 347, 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "10", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "filter_func", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "PRIEST", "hole0": "Preparation", "_type": "Template4", "hole3": "EPIC", "hole1": 0, "hole4": "target_func", "hole6": "find_minion_spell_target", "hole8": {"body": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}], "comparators": [{"n": 10, "_type": "Num"}]}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}], "comparators": [{"n": 7, "_type": "Num"}]}]}, "args": {"_type": "Template49", "hole0": "c"}, "_type": "Lambda"}}, {"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}], "comparators": [{"n": 7, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "Preparation", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(GiveAura([AuraUntil(ManaChange(-3), CardSelector(\n            condition=IsType(MINION_TYPE.DRAGON)), CardPlayed(IsType(\n            MINION_TYPE.DRAGON)), True)]), PlayerSelector()))\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.opponent.append(3)\n", "score": -8.637565587945573, "score_history": [-0.23993206024169922, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001850128173828125, -0.14840474724769592, -0.4054098427295685, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008325920440256596, -0.0002557039260864258, -9.477137791691348e-05, -1.33514404296875e-05, -0.03135871887207031, -0.0004711151123046875, -4.124556289752945e-05, -0.000118255615234375, -0.0017570257186889648, -8.225440979003906e-06, -0.2898811101913452, -2.09808349609375e-05, -0.010648727416992188, -7.62939453125e-06, -0.18341445922851562, -3.814697265625e-06, -0.0011997222900390625, 0.0, -0.005825042724609375, -1.1444091796875e-05, -0.7028684616088867, -0.0001316070556640625, -0.008485794067382812, -0.000621795654296875, -1.076115608215332, -0.08309555053710938, -0.006877416744828224, -0.002835150109604001, -0.004198551177978516, -7.62939453125e-05, -0.1190347671508789, -0.0044765472412109375, -0.00322878360748291, -0.003116607666015625, 0.0, -0.008646011352539062, -0.07323455810546875, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.001987934112548828, -7.688998448429629e-05, -0.007909774780273438, -0.0001506805419921875, -0.00030517578125, -0.000186920166015625, -0.0002079010009765625, -0.000347137451171875, -1.71661376953125e-05, -0.0023636221885681152, 0.0, -0.12319183349609375, -0.012612342834472656, -0.23659050464630127, -0.008032917976379395, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.0001964569091796875, -0.0001316070556640625, -0.031899452209472656, -3.4332275390625e-05, -0.15650367736816406, -0.00293731689453125, -1.9073486328125e-05, -8.58306884765625e-05, -0.16507720947265625, -0.008358001708984375, -1.33514404296875e-05, -0.0028514862060546875, -0.039740562438964844, -0.001499176025390625, -0.07700061798095703, -0.003653883934020996, -0.00138092041015625, -0.000156402587890625, -0.0001583099365234375, -1.1444091796875e-05, -1.5467529296875, -0.8380908966064453, -5.91278076171875e-05, 0.0, -9.5367431640625e-05, 0.0, -0.4994983673095703, 0.0, -0.957917332649231, -1.9073486328125e-06, -0.4456653594970703, -0.0008755922317504883, 0.0, -0.03750419616699219, -2.86102294921875e-05, -0.0006579160690307617, 0.0], "choice_history": [96, 173, 358, 105, 152, "Preparation", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 28, 261, "Give", "Aura", "<EOS>", 346, 86, 321, "Aura", "Until", "<EOS>", 349, 45, 150, 21, 174, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "3", "<EOS>", 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 45, 150, 21, 174, "Card", "Played", "<EOS>", 346, 74, 297, "DRAGON", "<EOS>", 51, 175, "False", "<EOS>", 126, 225, 13, 143, 21, 174, "player", "<EOS>", "opponent", "<EOS>", "append", "<EOS>", 346, 52, 179, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "PRIEST", "hole0": "Preparation", "_type": "Template4", "hole3": "EPIC", "hole1": 0, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"hole1": [{"hole1": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Call"}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}, {"func": {"id": "CardPlayed", "_type": "Name"}, "args": [{"_type": "Template60", "hole0": "DRAGON"}], "_type": "Call"}, {"value": true, "_type": "NameConstant"}], "_type": "Template78", "hole0": "AuraUntil"}], "_type": "Template42", "hole0": "GiveAura"}}, {"hole1": "append", "_type": "Template3", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "opponent", "_type": "Attribute"}, "hole2": [{"n": 3, "_type": "Num"}]}], "name": "Preparation", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class PreparationPreparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda c: len(player.\n            minions) < 10 and len(player.minions) < 7)\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -8.746219453087065, "score_history": [-0.23993206024169922, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001850128173828125, -0.14840474724769592, -1.1559041738510132, -0.10530191659927368, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0018717923667281866, -0.0002079010009765625, -0.00016891956329345703, -2.47955322265625e-05, -0.02197265625, -0.0004749298095703125, -4.482168878894299e-05, -0.0003452301025390625, -0.0014030933380126953, -8.344650268554688e-06, -0.2809615135192871, -2.6702880859375e-05, -0.017543792724609375, -5.7220458984375e-06, -1.7714118957519531, -0.0007495880126953125, -0.0012950897216796875, 0.0, -6.29425048828125e-05, 0.0, -0.00135040283203125, -0.000225067138671875, -0.000339508056640625, -7.62939453125e-05, -0.16354084014892578, -1.9073486328125e-06, -0.24693584442138672, -7.05718994140625e-05, -0.20917034149169922, -0.005279541015625, -0.0003376007080078125, -0.00035858154296875, -0.09148025512695312, -0.0004807710647583008, -0.0030469894409179688, -1.52587890625e-05, -0.00131988525390625, -0.0026483535766601562, -0.026752471923828125, -4.9591064453125e-05, -1.0136528015136719, -1.1444091796875e-05, -1.9073486328125e-05, 0.0, -0.19698607921600342, -2.9325485229492188e-05, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -0.000164031982421875, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.26172733306884766, -0.000362396240234375, -9.5367431640625e-06, -0.00286865234375, -7.62939453125e-05, -5.91278076171875e-05, -1.1444091796875e-05, -0.47753584384918213, -0.0001277923583984375, -0.2855663299560547, -0.001911163330078125, -0.000827789306640625, -0.000453948974609375, -0.0021305084228515625, -1.9073486328125e-06, -0.11905968189239502, -0.0031856298446655273, -1.9073486328125e-06, -8.20159912109375e-05, -2.47955322265625e-05, -0.0011997222900390625, -1.1444091796875e-05, -0.0005483627319335938, 0.0, -0.04577445983886719, -0.0003662109375, -0.000209808349609375, -0.0021991729736328125, -2.86102294921875e-05, -7.62939453125e-05, -2.86102294921875e-05, -0.24902880191802979, -9.5367431640625e-06, -0.35769176483154297, -0.0007696151733398438, -0.0005664825439453125, -0.0006542205810546875, -0.013860702514648438, -0.0002193450927734375, -0.0019474029541015625, -5.7220458984375e-06, -0.000667572021484375, -3.576278118089249e-07, -9.5367431640625e-06, -0.016171574592590332, -3.576278118089249e-07, -4.38690185546875e-05, -5.841255187988281e-06, -3.6597251892089844e-05, -0.4137735366821289, -0.36360931396484375, -7.62939453125e-05, -0.2209177017211914, -0.0013599395751953125, -0.011576652526855469, -0.00118255615234375, -0.0004425048828125, -0.003662109375, -0.0001735687255859375, 0.0, -2.3245802367455326e-05, -6.103515625e-05, -0.00159454345703125, 0.0, -0.006373405456542969, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.13425064086914062, -3.814697265625e-05, -0.0019073486328125, -7.05718994140625e-05, -0.00022125244140625, 0.0, -0.0006422996520996094, -0.00010144710540771484, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.0004405975341796875, 0.0, -0.004271507263183594, -2.47955322265625e-05, -0.00038909912109375, -0.0012664794921875, -2.86102294921875e-05, -8.0108642578125e-05, -3.0517578125e-05, -0.01645684242248535, -5.7220458984375e-06], "choice_history": [96, 173, 358, 105, 152, "Preparation", "Preparation", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "target_func", "<EOS>", 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 18, 167, 0, 282, "c", "<EOS>", 15, 146, 2, 347, 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "10", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "filter_func", "hole5": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "hole2": "PRIEST", "hole0": "Preparation", "_type": "Template4", "hole3": "EPIC", "hole1": 0, "hole4": "target_func", "hole6": "find_minion_spell_target", "hole8": {"body": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}], "comparators": [{"n": 10, "_type": "Num"}]}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}], "comparators": [{"n": 7, "_type": "Num"}]}]}, "args": {"_type": "Template49", "hole0": "c"}, "_type": "Lambda"}}, {"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}], "comparators": [{"n": 7, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}], "name": "PreparationPreparation", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(GiveAura([AuraUntil(ManaChange(-3), CardSelector(\n            condition=IsType(MINION_TYPE.DRAGON)), CardPlayed(IsType(\n            MINION_TYPE.DRAGON)), True)]), PlayerSelector()))\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(3)\n", "score": -8.85853478807985, "score_history": [-0.23993206024169922, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001850128173828125, -0.14840474724769592, -0.4054098427295685, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008325920440256596, -0.0002557039260864258, -9.477137791691348e-05, -1.33514404296875e-05, -0.03135871887207031, -0.0004711151123046875, -4.124556289752945e-05, -0.000118255615234375, -0.0017570257186889648, -8.225440979003906e-06, -0.2898811101913452, -2.09808349609375e-05, -0.010648727416992188, -7.62939453125e-06, -0.18341445922851562, -3.814697265625e-06, -0.0011997222900390625, 0.0, -0.005825042724609375, -1.1444091796875e-05, -0.7028684616088867, -0.0001316070556640625, -0.008485794067382812, -0.000621795654296875, -1.076115608215332, -0.08309555053710938, -0.006877416744828224, -0.002835150109604001, -0.004198551177978516, -7.62939453125e-05, -0.1190347671508789, -0.0044765472412109375, -0.00322878360748291, -0.003116607666015625, 0.0, -0.008646011352539062, -0.07323455810546875, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.001987934112548828, -7.688998448429629e-05, -0.007909774780273438, -0.0001506805419921875, -0.00030517578125, -0.000186920166015625, -0.0002079010009765625, -0.000347137451171875, -1.71661376953125e-05, -0.0023636221885681152, 0.0, -0.12319183349609375, -0.012612342834472656, -0.23659050464630127, -0.008032917976379395, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.0001964569091796875, -0.0001316070556640625, -0.031899452209472656, -3.4332275390625e-05, -0.15650367736816406, -0.00293731689453125, -1.9073486328125e-05, -8.58306884765625e-05, -0.16507720947265625, -0.008358001708984375, -1.33514404296875e-05, -0.0028514862060546875, -0.039740562438964844, -0.001499176025390625, -0.07700061798095703, -0.003653883934020996, -0.00138092041015625, -0.000156402587890625, -0.0001583099365234375, -1.1444091796875e-05, -1.5467529296875, -0.8380908966064453, -5.91278076171875e-05, 0.0, -9.5367431640625e-05, 0.0, -0.4994983673095703, 0.0, -0.8751994371414185, 0.0, -0.6047437191009521, -3.814697265625e-06, -0.09931564331054688, -0.08387374877929688, -6.29425048828125e-05, -0.0004208087921142578, 0.0], "choice_history": [96, 173, 358, 105, 152, "Preparation", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 28, 261, "Give", "Aura", "<EOS>", 346, 86, 321, "Aura", "Until", "<EOS>", 349, 45, 150, 21, 174, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "3", "<EOS>", 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 45, 150, 21, 174, "Card", "Played", "<EOS>", 346, 74, 297, "DRAGON", "<EOS>", 51, 175, "False", "<EOS>", 126, 225, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 346, 52, 179, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "PRIEST", "hole0": "Preparation", "_type": "Template4", "hole3": "EPIC", "hole1": 0, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"hole1": [{"hole1": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Call"}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}, {"func": {"id": "CardPlayed", "_type": "Name"}, "args": [{"_type": "Template60", "hole0": "DRAGON"}], "_type": "Call"}, {"value": true, "_type": "NameConstant"}], "_type": "Template78", "hole0": "AuraUntil"}], "_type": "Template42", "hole0": "GiveAura"}}, {"hole1": "heal", "_type": "Template3", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": [{"n": 3, "_type": "Num"}]}], "name": "Preparation", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class PreparationPreparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(GiveAura([AuraUntil(ManaChange(-3), CardSelector(\n            condition=IsType(MINION_TYPE.DRAGON)), CardPlayed(IsType(\n            MINION_TYPE.DRAGON)), True)]), PlayerSelector()))\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(3)\n", "score": -9.731464340504317, "score_history": [-0.23993206024169922, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001850128173828125, -0.14840474724769592, -1.1559041738510132, -0.10530191659927368, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0018717923667281866, -0.0002079010009765625, -0.00016891956329345703, -2.47955322265625e-05, -0.02197265625, -0.0004749298095703125, -4.482168878894299e-05, -0.0003452301025390625, -0.0014030933380126953, -8.344650268554688e-06, -0.2809615135192871, -2.6702880859375e-05, -0.017543792724609375, -5.7220458984375e-06, -0.21504878997802734, -1.9073486328125e-06, -0.001445770263671875, 0.0, -0.0044231414794921875, -9.5367431640625e-06, -0.6730537414550781, -0.0001220703125, -0.008150100708007812, -0.0005664825439453125, -1.1235580444335938, -0.09348106384277344, -0.006747134495526552, -0.002682681195437908, -0.004358053207397461, -6.4849853515625e-05, -0.11904335021972656, -0.004406929016113281, -0.003141045570373535, -0.003093719482421875, 0.0, -0.00855255126953125, -0.07436656951904297, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.0019832849502563477, -7.688998448429629e-05, -0.007932662963867188, -0.0001506805419921875, -0.00030517578125, -0.000186920166015625, -0.0002079010009765625, -0.0003490447998046875, -1.71661376953125e-05, -0.002276315353810787, 0.0, -0.12423896789550781, -0.012598037719726562, -0.22773373126983643, -0.007866978645324707, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.0001964569091796875, -0.0001316070556640625, -0.031871795654296875, -3.4332275390625e-05, -0.15673255920410156, -0.0029315948486328125, -1.9073486328125e-05, -8.58306884765625e-05, -0.1656780242919922, -0.008339881896972656, -1.33514404296875e-05, -0.002838134765625, -0.03983306884765625, -0.00150299072265625, -0.07696151733398438, -0.003642439842224121, -0.0013761520385742188, -0.000156402587890625, -0.0001583099365234375, -1.1444091796875e-05, -1.528712272644043, -0.8387851715087891, -6.29425048828125e-05, 0.0, -9.5367431640625e-05, 0.0, -0.5115642547607422, 0.0, -0.8837262392044067, 0.0, -0.5993391275405884, -3.814697265625e-06, -0.08784675598144531, -0.0810089111328125, -6.103515625e-05, -0.0004203319549560547, 0.0], "choice_history": [96, 173, 358, 105, 152, "Preparation", "Preparation", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 28, 261, "Give", "Aura", "<EOS>", 346, 86, 321, "Aura", "Until", "<EOS>", 349, 45, 150, 21, 174, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "3", "<EOS>", 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 45, 150, 21, 174, "Card", "Played", "<EOS>", 346, 74, 297, "DRAGON", "<EOS>", 51, 175, "False", "<EOS>", 126, 225, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 346, 52, 179, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "PRIEST", "hole0": "Preparation", "_type": "Template4", "hole3": "EPIC", "hole1": 0, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"hole1": [{"hole1": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Call"}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}, {"func": {"id": "CardPlayed", "_type": "Name"}, "args": [{"_type": "Template60", "hole0": "DRAGON"}], "_type": "Call"}, {"value": true, "_type": "NameConstant"}], "_type": "Template78", "hole0": "AuraUntil"}], "_type": "Template42", "hole0": "GiveAura"}}, {"hole1": "heal", "_type": "Template3", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": [{"n": 3, "_type": "Num"}]}], "name": "PreparationPreparation", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(GiveAura([AuraUntil(ManaChange(-3), CardSelector(\n            condition=IsType(MINION_TYPE.DRAGON)), CardPlayed(IsType(\n            MINION_TYPE.DRAGON)), True)]), PlayerSelector()))\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.append(3)\n", "score": -10.148460571952455, "score_history": [-0.23993206024169922, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001850128173828125, -0.14840474724769592, -0.4054098427295685, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.008325920440256596, -0.0002557039260864258, -9.477137791691348e-05, -1.33514404296875e-05, -0.03135871887207031, -0.0004711151123046875, -4.124556289752945e-05, -0.000118255615234375, -0.0017570257186889648, -8.225440979003906e-06, -0.2898811101913452, -2.09808349609375e-05, -0.010648727416992188, -7.62939453125e-06, -0.18341445922851562, -3.814697265625e-06, -0.0011997222900390625, 0.0, -0.005825042724609375, -1.1444091796875e-05, -0.7028684616088867, -0.0001316070556640625, -0.008485794067382812, -0.000621795654296875, -1.076115608215332, -0.08309555053710938, -0.006877416744828224, -0.002835150109604001, -0.004198551177978516, -7.62939453125e-05, -0.1190347671508789, -0.0044765472412109375, -0.00322878360748291, -0.003116607666015625, 0.0, -0.008646011352539062, -0.07323455810546875, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.001987934112548828, -7.688998448429629e-05, -0.007909774780273438, -0.0001506805419921875, -0.00030517578125, -0.000186920166015625, -0.0002079010009765625, -0.000347137451171875, -1.71661376953125e-05, -0.0023636221885681152, 0.0, -0.12319183349609375, -0.012612342834472656, -0.23659050464630127, -0.008032917976379395, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -0.0001964569091796875, -0.0001316070556640625, -0.031899452209472656, -3.4332275390625e-05, -0.15650367736816406, -0.00293731689453125, -1.9073486328125e-05, -8.58306884765625e-05, -0.16507720947265625, -0.008358001708984375, -1.33514404296875e-05, -0.0028514862060546875, -0.039740562438964844, -0.001499176025390625, -0.07700061798095703, -0.003653883934020996, -0.00138092041015625, -0.000156402587890625, -0.0001583099365234375, -1.1444091796875e-05, -1.5467529296875, -0.8380908966064453, -5.91278076171875e-05, 0.0, -9.5367431640625e-05, 0.0, -0.4994983673095703, 0.0, -0.8751994371414185, 0.0, -1.657616376876831, -3.24249267578125e-05, 0.0, -0.4198904037475586, -3.62396240234375e-05, -0.0007710158824920654, 0.0], "choice_history": [96, 173, 358, 105, 152, "Preparation", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 129, 250, "Preparation", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 28, 261, "Give", "Aura", "<EOS>", 346, 86, 321, "Aura", "Until", "<EOS>", 349, 45, 150, 21, 174, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "3", "<EOS>", 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 45, 150, 21, 174, "Card", "Played", "<EOS>", 346, 74, 297, "DRAGON", "<EOS>", 51, 175, "False", "<EOS>", 126, 225, 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "append", "<EOS>", 346, 52, 179, "3", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "PRIEST", "hole0": "Preparation", "_type": "Template4", "hole3": "EPIC", "hole1": 0, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"hole1": [{"hole1": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Call"}, {"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}, {"func": {"id": "CardPlayed", "_type": "Name"}, "args": [{"_type": "Template60", "hole0": "DRAGON"}], "_type": "Call"}, {"value": true, "_type": "NameConstant"}], "_type": "Template78", "hole0": "AuraUntil"}], "_type": "Template42", "hole0": "GiveAura"}}, {"hole1": "append", "_type": "Template3", "hole0": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole2": [{"n": 3, "_type": "Num"}]}], "name": "Preparation", "_type": "ClassDef"}], "_type": "Module"}}]}
{"gold_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, minion):\n        minion.set_health_to(1)\n        super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n", "beams": [{"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        player.unbind('minion_died', self._reveal)\n", "score": -3.5999001327664857, "score_history": [-0.0049896240234375, -0.033367156982421875, -0.00021170999389141798, -3.504691630951129e-05, -0.00015306469867937267, -0.0001627198507776484, -5.1616654673125595e-05, -0.034847259521484375, -0.0040493011474609375, -8.0108642578125e-05, -8.416175842285156e-05, -6.103515625e-05, -1.2874157619080506e-05, -1.9073486328125e-06, -0.0005830526351928711, -5.7220458984375e-06, -0.08935260772705078, -1.9073486328125e-06, -0.008363127708435059, 0.0, -9.1552734375e-05, -0.000629425048828125, -0.000507354736328125, -0.01515960693359375, -6.103515625e-05, -0.007152557373046875, -1.9073486328125e-06, -0.000583648681640625, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0010063648223876953, 0.0, -0.0011752843856811523, 0.0, -0.03296661376953125, -0.0003147125244140625, -1.52587890625e-05, -0.0005550384521484375, -3.814697265625e-06, -0.2892642021179199, -0.00019073486328125, -4.76837158203125e-05, 0.0, -0.0003643035888671875, 0.0, -0.00041866302490234375, -1.9073486328125e-06, -0.0001468658447265625, -3.814697265625e-06, -0.0060882568359375, -0.0010089874267578125, -3.814697265625e-06, -0.007834434509277344, -9.5367431640625e-06, -2.09808349609375e-05, -0.000980377197265625, -0.00252532958984375, -1.9073486328125e-06, -1.33514404296875e-05, -7.152555099310121e-07, -0.0003681182861328125, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.000194549560546875, -3.4332275390625e-05, -0.032806396484375, -1.9073486328125e-05, -0.001194000244140625, -4.00543212890625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0024051666259765625, 0.0, -0.0006821155548095703, 0.0, -0.0025511980056762695, 0.0, -0.20287907123565674, -8.96453857421875e-05, -6.103515625e-05, -0.001556396484375, -3.814697265625e-06, -0.3279470205307007, -0.0002956390380859375, -3.62396240234375e-05, 0.0, -0.0007991790771484375, 0.0, -0.0005540847778320312, -1.9073486328125e-06, -0.000133514404296875, -3.814697265625e-06, -0.010822296142578125, -9.5367431640625e-06, -0.018831253051757812, 0.0, -0.00037384033203125, -0.000682830810546875, -0.8475494384765625, -3.814697265625e-06, -4.9591064453125e-05, -1.0728830375228426e-06, -0.0003376007080078125, -0.49038541316986084, -6.318092346191406e-06, -0.19843482971191406, -0.11251449584960938, -7.62939453125e-05, -0.05203723907470703, 0.0, -0.03741300106048584, -1.1920928244535389e-07, -0.5370095372200012, -2.0265579223632812e-06, -1.9073486328125e-05, -0.0011196136474609375, -5.7220458984375e-06, -0.16815800964832306, -7.62939453125e-06, -8.7738037109375e-05, 0.0, -0.00016021728515625, 0.0, -0.0029363632202148438, -1.9073486328125e-06, -0.0002346038818359375, -1.9073486328125e-06], "choice_history": [97, 284, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "minion", "<EOS>", 358, 136, 318, 21, 174, "player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_died", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"id": "player", "_type": "Name"}, "hole2": [{"s": "minion_died", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Repentance", "hole2": "PALADIN"}], "hole0": "Repentance", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n", "score": -3.795479765883158, "score_history": [-0.0049896240234375, -0.033367156982421875, -0.00021170999389141798, -3.504691630951129e-05, -0.00015306469867937267, -0.0001627198507776484, -5.1616654673125595e-05, -0.034847259521484375, -0.0040493011474609375, -8.0108642578125e-05, -8.416175842285156e-05, -6.103515625e-05, -1.2874157619080506e-05, -1.9073486328125e-06, -0.0005830526351928711, -5.7220458984375e-06, -0.08935260772705078, -1.9073486328125e-06, -0.008363127708435059, 0.0, -9.1552734375e-05, -0.000629425048828125, -0.000507354736328125, -0.01515960693359375, -6.103515625e-05, -0.007152557373046875, -1.9073486328125e-06, -0.000583648681640625, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0010063648223876953, 0.0, -0.0011752843856811523, 0.0, -0.03296661376953125, -0.0003147125244140625, -1.52587890625e-05, -0.0005550384521484375, -3.814697265625e-06, -0.2892642021179199, -0.00019073486328125, -4.76837158203125e-05, 0.0, -0.0003643035888671875, 0.0, -0.00041866302490234375, -1.9073486328125e-06, -0.0001468658447265625, -3.814697265625e-06, -0.0060882568359375, -0.0010089874267578125, -3.814697265625e-06, -0.007834434509277344, -9.5367431640625e-06, -2.09808349609375e-05, -0.000980377197265625, -0.00252532958984375, -1.9073486328125e-06, -1.33514404296875e-05, -7.152555099310121e-07, -0.0003681182861328125, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.000194549560546875, -3.4332275390625e-05, -0.032806396484375, -1.9073486328125e-05, -0.001194000244140625, -4.00543212890625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0024051666259765625, 0.0, -0.0006821155548095703, 0.0, -0.0025511980056762695, 0.0, -0.20287907123565674, -8.96453857421875e-05, -6.103515625e-05, -0.001556396484375, -3.814697265625e-06, -0.3279470205307007, -0.0002956390380859375, -3.62396240234375e-05, 0.0, -0.0007991790771484375, 0.0, -0.0005540847778320312, -1.9073486328125e-06, -0.000133514404296875, -3.814697265625e-06, -0.010822296142578125, -9.5367431640625e-06, -0.018831253051757812, 0.0, -0.00037384033203125, -0.000682830810546875, -0.8475494384765625, -3.814697265625e-06, -4.9591064453125e-05, -1.0728830375228426e-06, -0.0003376007080078125, -1.0141385793685913, -3.576278118089249e-07, -5.7220458984375e-05, -7.82012939453125e-05, -4.76837158203125e-05, -0.33084964752197266, -9.34600830078125e-05, -0.019863128662109375, -7.43865966796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.0009212493896484375, 0.0, -0.0017932653427124023, 0.0, -0.0032521486282348633, 0.0, -0.10652351379394531, -0.000141143798828125, -6.103515625e-05, -0.000789642333984375, -3.814697265625e-06, -0.3155205249786377, -0.0004253387451171875, -3.62396240234375e-05, 0.0, -0.0008544921875, 0.0, -0.00046825408935546875, -1.9073486328125e-06, -0.0001373291015625, -3.814697265625e-06], "choice_history": [97, 284, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Repentance", "hole2": "PALADIN"}], "hole0": "Repentance", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        player.bind('minion_died', self._reveal)\n", "score": -4.727290740957976, "score_history": [-0.0049896240234375, -0.033367156982421875, -0.00021170999389141798, -3.504691630951129e-05, -0.00015306469867937267, -0.0001627198507776484, -5.1616654673125595e-05, -0.034847259521484375, -0.0040493011474609375, -8.0108642578125e-05, -8.416175842285156e-05, -6.103515625e-05, -1.2874157619080506e-05, -1.9073486328125e-06, -0.0005830526351928711, -5.7220458984375e-06, -0.08935260772705078, -1.9073486328125e-06, -0.008363127708435059, 0.0, -9.1552734375e-05, -0.000629425048828125, -0.000507354736328125, -0.01515960693359375, -6.103515625e-05, -0.007152557373046875, -1.9073486328125e-06, -0.000583648681640625, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0010063648223876953, 0.0, -0.0011752843856811523, 0.0, -0.03296661376953125, -0.0003147125244140625, -1.52587890625e-05, -0.0005550384521484375, -3.814697265625e-06, -0.2892642021179199, -0.00019073486328125, -4.76837158203125e-05, 0.0, -0.0003643035888671875, 0.0, -0.00041866302490234375, -1.9073486328125e-06, -0.0001468658447265625, -3.814697265625e-06, -0.0060882568359375, -0.0010089874267578125, -3.814697265625e-06, -0.007834434509277344, -9.5367431640625e-06, -2.09808349609375e-05, -0.000980377197265625, -0.00252532958984375, -1.9073486328125e-06, -1.33514404296875e-05, -7.152555099310121e-07, -0.0003681182861328125, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.000194549560546875, -3.4332275390625e-05, -0.032806396484375, -1.9073486328125e-05, -0.001194000244140625, -4.00543212890625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0024051666259765625, 0.0, -0.0006821155548095703, 0.0, -0.0025511980056762695, 0.0, -0.20287907123565674, -8.96453857421875e-05, -6.103515625e-05, -0.001556396484375, -3.814697265625e-06, -0.3279470205307007, -0.0002956390380859375, -3.62396240234375e-05, 0.0, -0.0007991790771484375, 0.0, -0.0005540847778320312, -1.9073486328125e-06, -0.000133514404296875, -3.814697265625e-06, -0.010822296142578125, -9.5367431640625e-06, -0.018831253051757812, 0.0, -0.00037384033203125, -0.000682830810546875, -0.8475494384765625, -3.814697265625e-06, -4.9591064453125e-05, -1.0728830375228426e-06, -0.0003376007080078125, -0.49038541316986084, -6.318092346191406e-06, -0.19843482971191406, -0.11251449584960938, -7.62939453125e-05, -0.05203723907470703, 0.0, -0.03741300106048584, -1.1920928244535389e-07, -1.5100281238555908, -3.814697265625e-06, -1.1444091796875e-05, -0.00090789794921875, -5.7220458984375e-06, -0.3224900960922241, -1.33514404296875e-05, -6.4849853515625e-05, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0031213760375976562, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-06], "choice_history": [97, 284, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "minion", "<EOS>", 358, 136, 318, 21, 174, "player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_died", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "bind", "_type": "Template77", "hole0": {"id": "player", "_type": "Name"}, "hole2": [{"s": "minion_died", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Repentance", "hole2": "PALADIN"}], "hole0": "Repentance", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.unbind('minion_died', self._reveal)\n", "score": -5.018280497542094, "score_history": [-0.0049896240234375, -0.033367156982421875, -0.00021170999389141798, -3.504691630951129e-05, -0.00015306469867937267, -0.0001627198507776484, -5.1616654673125595e-05, -0.034847259521484375, -0.0040493011474609375, -8.0108642578125e-05, -8.416175842285156e-05, -6.103515625e-05, -1.2874157619080506e-05, -1.9073486328125e-06, -0.0005830526351928711, -5.7220458984375e-06, -0.08935260772705078, -1.9073486328125e-06, -0.008363127708435059, 0.0, -9.1552734375e-05, -0.000629425048828125, -0.000507354736328125, -0.01515960693359375, -6.103515625e-05, -0.007152557373046875, -1.9073486328125e-06, -0.000583648681640625, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0010063648223876953, 0.0, -0.0011752843856811523, 0.0, -0.03296661376953125, -0.0003147125244140625, -1.52587890625e-05, -0.0005550384521484375, -3.814697265625e-06, -0.2892642021179199, -0.00019073486328125, -4.76837158203125e-05, 0.0, -0.0003643035888671875, 0.0, -0.00041866302490234375, -1.9073486328125e-06, -0.0001468658447265625, -3.814697265625e-06, -0.0060882568359375, -0.0010089874267578125, -3.814697265625e-06, -0.007834434509277344, -9.5367431640625e-06, -2.09808349609375e-05, -0.000980377197265625, -0.00252532958984375, -1.9073486328125e-06, -1.33514404296875e-05, -7.152555099310121e-07, -0.0003681182861328125, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.000194549560546875, -3.4332275390625e-05, -0.032806396484375, -1.9073486328125e-05, -0.001194000244140625, -4.00543212890625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0024051666259765625, 0.0, -0.0006821155548095703, 0.0, -0.0025511980056762695, 0.0, -0.20287907123565674, -8.96453857421875e-05, -6.103515625e-05, -0.001556396484375, -3.814697265625e-06, -0.3279470205307007, -0.0002956390380859375, -3.62396240234375e-05, 0.0, -0.0007991790771484375, 0.0, -0.0005540847778320312, -1.9073486328125e-06, -0.000133514404296875, -3.814697265625e-06, -0.010822296142578125, -9.5367431640625e-06, -0.018831253051757812, 0.0, -0.00037384033203125, -0.000682830810546875, -0.8475494384765625, -3.814697265625e-06, -4.9591064453125e-05, -1.0728830375228426e-06, -0.0003376007080078125, -1.0141385793685913, -3.576278118089249e-07, -5.7220458984375e-05, -7.82012939453125e-05, -4.76837158203125e-05, -1.3507061004638672, -9.5367431640625e-06, -0.002358078956604004, 0.0, -0.5687497854232788, -7.62939453125e-06, -0.0002574920654296875, -0.0008449554443359375, -1.71661376953125e-05, -0.08088898658752441, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -7.2479248046875e-05, 0.0, -0.00035381317138671875, -3.814697265625e-06, -0.0003223419189453125, -1.9073486328125e-06], "choice_history": [97, 284, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 21, 174, "player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_died", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"id": "player", "_type": "Name"}, "hole2": [{"s": "minion_died", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Repentance", "hole2": "PALADIN"}], "hole0": "Repentance", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        player.unbind('minion_died', self._reveal)\n", "score": -5.1892456475406945, "score_history": [-0.0049896240234375, -0.033367156982421875, -0.00021170999389141798, -3.504691630951129e-05, -0.00015306469867937267, -0.0001627198507776484, -5.1616654673125595e-05, -0.034847259521484375, -0.0040493011474609375, -8.0108642578125e-05, -8.416175842285156e-05, -6.103515625e-05, -1.2874157619080506e-05, -1.9073486328125e-06, -0.0005830526351928711, -5.7220458984375e-06, -0.08935260772705078, -1.9073486328125e-06, -0.008363127708435059, 0.0, -9.1552734375e-05, -0.000629425048828125, -0.000507354736328125, -0.01515960693359375, -6.103515625e-05, -0.007152557373046875, -1.9073486328125e-06, -0.000583648681640625, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0010063648223876953, 0.0, -0.0011752843856811523, 0.0, -0.03296661376953125, -0.0003147125244140625, -1.52587890625e-05, -0.0005550384521484375, -3.814697265625e-06, -0.2892642021179199, -0.00019073486328125, -4.76837158203125e-05, 0.0, -0.0003643035888671875, 0.0, -0.00041866302490234375, -1.9073486328125e-06, -0.0001468658447265625, -3.814697265625e-06, -0.0060882568359375, -0.0010089874267578125, -3.814697265625e-06, -0.007834434509277344, -9.5367431640625e-06, -2.09808349609375e-05, -0.000980377197265625, -0.00252532958984375, -1.9073486328125e-06, -1.33514404296875e-05, -7.152555099310121e-07, -0.0003681182861328125, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.000194549560546875, -3.4332275390625e-05, -0.032806396484375, -1.9073486328125e-05, -0.001194000244140625, -4.00543212890625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0024051666259765625, 0.0, -0.0006821155548095703, 0.0, -0.0025511980056762695, 0.0, -1.726904034614563, -0.0001468658447265625, -1.52587890625e-05, -0.0008182525634765625, -5.7220458984375e-06, -0.3492295742034912, -0.00037384033203125, -2.6702880859375e-05, 0.0, -0.001003265380859375, 0.0, -0.00046634674072265625, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.011735916137695312, -9.5367431640625e-06, -0.017828941345214844, 0.0, -0.000392913818359375, -0.0005855560302734375, -0.8622961044311523, -1.9073486328125e-06, -5.340576171875e-05, -1.1920922133867862e-06, -0.000354766845703125, -0.511191725730896, -6.318092346191406e-06, -0.20317745208740234, -0.11320304870605469, -7.62939453125e-05, -0.05121040344238281, 0.0, -0.03950488567352295, -1.1920928244535389e-07, -0.5392216444015503, -2.0265579223632812e-06, -1.9073486328125e-05, -0.001132965087890625, -5.7220458984375e-06, -0.16838116943836212, -7.62939453125e-06, -8.58306884765625e-05, 0.0, -0.00016021728515625, 0.0, -0.0029697418212890625, -1.9073486328125e-06, -0.00023651123046875, -1.9073486328125e-06], "choice_history": [97, 284, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "minion", "<EOS>", 358, 136, 318, 21, 174, "player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_died", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"id": "player", "_type": "Name"}, "hole2": [{"s": "minion_died", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Repentance", "hole2": "PALADIN"}], "hole0": "Repentance", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.bind('minion_died', self._reveal)\n", "score": -5.290709844580363, "score_history": [-0.0049896240234375, -0.033367156982421875, -0.00021170999389141798, -3.504691630951129e-05, -0.00015306469867937267, -0.0001627198507776484, -5.1616654673125595e-05, -0.034847259521484375, -0.0040493011474609375, -8.0108642578125e-05, -8.416175842285156e-05, -6.103515625e-05, -1.2874157619080506e-05, -1.9073486328125e-06, -0.0005830526351928711, -5.7220458984375e-06, -0.08935260772705078, -1.9073486328125e-06, -0.008363127708435059, 0.0, -9.1552734375e-05, -0.000629425048828125, -0.000507354736328125, -0.01515960693359375, -6.103515625e-05, -0.007152557373046875, -1.9073486328125e-06, -0.000583648681640625, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0010063648223876953, 0.0, -0.0011752843856811523, 0.0, -0.03296661376953125, -0.0003147125244140625, -1.52587890625e-05, -0.0005550384521484375, -3.814697265625e-06, -0.2892642021179199, -0.00019073486328125, -4.76837158203125e-05, 0.0, -0.0003643035888671875, 0.0, -0.00041866302490234375, -1.9073486328125e-06, -0.0001468658447265625, -3.814697265625e-06, -0.0060882568359375, -0.0010089874267578125, -3.814697265625e-06, -0.007834434509277344, -9.5367431640625e-06, -2.09808349609375e-05, -0.000980377197265625, -0.00252532958984375, -1.9073486328125e-06, -1.33514404296875e-05, -7.152555099310121e-07, -0.0003681182861328125, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.000194549560546875, -3.4332275390625e-05, -0.032806396484375, -1.9073486328125e-05, -0.001194000244140625, -4.00543212890625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0024051666259765625, 0.0, -0.0006821155548095703, 0.0, -0.0025511980056762695, 0.0, -0.20287907123565674, -8.96453857421875e-05, -6.103515625e-05, -0.001556396484375, -3.814697265625e-06, -0.3279470205307007, -0.0002956390380859375, -3.62396240234375e-05, 0.0, -0.0007991790771484375, 0.0, -0.0005540847778320312, -1.9073486328125e-06, -0.000133514404296875, -3.814697265625e-06, -0.010822296142578125, -9.5367431640625e-06, -0.018831253051757812, 0.0, -0.00037384033203125, -0.000682830810546875, -0.8475494384765625, -3.814697265625e-06, -4.9591064453125e-05, -1.0728830375228426e-06, -0.0003376007080078125, -1.0141385793685913, -3.576278118089249e-07, -5.7220458984375e-05, -7.82012939453125e-05, -4.76837158203125e-05, -1.3507061004638672, -9.5367431640625e-06, -0.002358078956604004, 0.0, -0.8438152074813843, -8.20159912109375e-05, -5.7220458984375e-05, -0.00153350830078125, -1.9073486328125e-05, -0.07764542102813721, -7.62939453125e-06, -6.4849853515625e-05, 0.0, -7.2479248046875e-05, 0.0, -0.000408172607421875, -3.814697265625e-06, -0.0003147125244140625, -1.9073486328125e-06], "choice_history": [97, 284, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 21, 174, "player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_died", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "bind", "_type": "Template77", "hole0": {"id": "player", "_type": "Name"}, "hole2": [{"s": "minion_died", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Repentance", "hole2": "PALADIN"}], "hole0": "Repentance", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n", "score": -5.353431693068103, "score_history": [-0.0049896240234375, -0.033367156982421875, -0.00021170999389141798, -3.504691630951129e-05, -0.00015306469867937267, -0.0001627198507776484, -5.1616654673125595e-05, -0.034847259521484375, -0.0040493011474609375, -8.0108642578125e-05, -8.416175842285156e-05, -6.103515625e-05, -1.2874157619080506e-05, -1.9073486328125e-06, -0.0005830526351928711, -5.7220458984375e-06, -0.08935260772705078, -1.9073486328125e-06, -0.008363127708435059, 0.0, -9.1552734375e-05, -0.000629425048828125, -0.000507354736328125, -0.01515960693359375, -6.103515625e-05, -0.007152557373046875, -1.9073486328125e-06, -0.000583648681640625, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0010063648223876953, 0.0, -0.0011752843856811523, 0.0, -0.03296661376953125, -0.0003147125244140625, -1.52587890625e-05, -0.0005550384521484375, -3.814697265625e-06, -0.2892642021179199, -0.00019073486328125, -4.76837158203125e-05, 0.0, -0.0003643035888671875, 0.0, -0.00041866302490234375, -1.9073486328125e-06, -0.0001468658447265625, -3.814697265625e-06, -0.0060882568359375, -0.0010089874267578125, -3.814697265625e-06, -0.007834434509277344, -9.5367431640625e-06, -2.09808349609375e-05, -0.000980377197265625, -0.00252532958984375, -1.9073486328125e-06, -1.33514404296875e-05, -7.152555099310121e-07, -0.0003681182861328125, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.000194549560546875, -3.4332275390625e-05, -0.032806396484375, -1.9073486328125e-05, -0.001194000244140625, -4.00543212890625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0024051666259765625, 0.0, -0.0006821155548095703, 0.0, -0.0025511980056762695, 0.0, -1.726904034614563, -0.0001468658447265625, -1.52587890625e-05, -0.0008182525634765625, -5.7220458984375e-06, -0.3492295742034912, -0.00037384033203125, -2.6702880859375e-05, 0.0, -0.001003265380859375, 0.0, -0.00046634674072265625, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.011735916137695312, -9.5367431640625e-06, -0.017828941345214844, 0.0, -0.000392913818359375, -0.0005855560302734375, -0.8622961044311523, -1.9073486328125e-06, -5.340576171875e-05, -1.1920922133867862e-06, -0.000354766845703125, -0.985805869102478, -3.576278118089249e-07, -5.7220458984375e-05, -8.58306884765625e-05, -4.9591064453125e-05, -0.3570375442504883, -9.72747802734375e-05, -0.021083831787109375, -7.43865966796875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -0.0008487701416015625, 0.0, -0.0018333196640014648, 0.0, -0.0031949281692504883, 0.0, -0.10660362243652344, -0.0001392364501953125, -6.103515625e-05, -0.0007648468017578125, -3.814697265625e-06, -0.31505846977233887, -0.0004253387451171875, -3.62396240234375e-05, 0.0, -0.0008544921875, 0.0, -0.00046634674072265625, -1.9073486328125e-06, -0.0001373291015625, -3.814697265625e-06], "choice_history": [97, 284, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Repentance", "hole2": "PALADIN"}], "hole0": "Repentance", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        minion.1('minion_died', self._reveal)\n        self.player = Null\n", "score": -5.858547410717733, "score_history": [-0.0049896240234375, -0.033367156982421875, -0.00021170999389141798, -3.504691630951129e-05, -0.00015306469867937267, -0.0001627198507776484, -5.1616654673125595e-05, -0.034847259521484375, -0.0040493011474609375, -8.0108642578125e-05, -8.416175842285156e-05, -6.103515625e-05, -1.2874157619080506e-05, -1.9073486328125e-06, -0.0005830526351928711, -5.7220458984375e-06, -0.08935260772705078, -1.9073486328125e-06, -0.008363127708435059, 0.0, -9.1552734375e-05, -0.000629425048828125, -0.000507354736328125, -0.01515960693359375, -6.103515625e-05, -0.007152557373046875, -1.9073486328125e-06, -0.000583648681640625, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0010063648223876953, 0.0, -0.0011752843856811523, 0.0, -0.03296661376953125, -0.0003147125244140625, -1.52587890625e-05, -0.0005550384521484375, -3.814697265625e-06, -0.2892642021179199, -0.00019073486328125, -4.76837158203125e-05, 0.0, -0.0003643035888671875, 0.0, -0.00041866302490234375, -1.9073486328125e-06, -0.0001468658447265625, -3.814697265625e-06, -0.0060882568359375, -0.0010089874267578125, -3.814697265625e-06, -0.007834434509277344, -9.5367431640625e-06, -2.09808349609375e-05, -0.000980377197265625, -0.00252532958984375, -1.9073486328125e-06, -1.33514404296875e-05, -7.152555099310121e-07, -0.0003681182861328125, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.000194549560546875, -3.4332275390625e-05, -0.032806396484375, -1.9073486328125e-05, -0.001194000244140625, -4.00543212890625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0024051666259765625, 0.0, -0.0006821155548095703, 0.0, -0.0025511980056762695, 0.0, -0.20287907123565674, -8.96453857421875e-05, -6.103515625e-05, -0.001556396484375, -3.814697265625e-06, -0.3279470205307007, -0.0002956390380859375, -3.62396240234375e-05, 0.0, -0.0007991790771484375, 0.0, -0.0005540847778320312, -1.9073486328125e-06, -0.000133514404296875, -3.814697265625e-06, -0.010822296142578125, -9.5367431640625e-06, -0.018831253051757812, 0.0, -0.00037384033203125, -0.000682830810546875, -0.8475494384765625, -3.814697265625e-06, -4.9591064453125e-05, -1.0728830375228426e-06, -0.0003376007080078125, -0.49038541316986084, -6.318092346191406e-06, -1.7297563552856445, -0.0001964569091796875, -0.000164031982421875, -0.028118133544921875, -1.9073486328125e-06, -0.4261409044265747, 0.0, -0.6817280054092407, 0.0, -0.000484466552734375, -0.008525848388671875, -3.814697265625e-06, -0.22602137923240662, -7.62939453125e-06, -0.0004215240478515625, 0.0, -0.0003490447998046875, -1.9073486328125e-06, -0.000881195068359375, -1.9073486328125e-06, -0.0001983642578125, -1.9073486328125e-06, -0.0002346038818359375, -1.9073486328125e-06, -8.20159912109375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.000217437744140625, -1.9073486328125e-06, -0.0013189315795898438, -3.814697265625e-06, -9.918212890625e-05, 0.0, -0.2635526657104492, -0.000202178955078125, -0.0001367330551147461, -1.9073486328125e-06], "choice_history": [97, 284, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "minion", "<EOS>", 359, 136, 318, 21, 174, "minion", "<EOS>", "1", "<EOS>", 347, 53, 183, "minion_died", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "self", "<EOS>", "player", "<EOS>", 22, 176, "Null", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "1", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"s": "minion_died", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}, {"value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign", "targets": [{"value": {"id": "self", "_type": "Name"}, "attr": "player", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Repentance", "hole2": "PALADIN"}], "hole0": "Repentance", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n", "score": -6.014909497252177, "score_history": [-0.0049896240234375, -0.033367156982421875, -0.00021170999389141798, -3.504691630951129e-05, -0.00015306469867937267, -0.0001627198507776484, -5.1616654673125595e-05, -0.034847259521484375, -0.0040493011474609375, -8.0108642578125e-05, -8.416175842285156e-05, -6.103515625e-05, -1.2874157619080506e-05, -1.9073486328125e-06, -0.0005830526351928711, -5.7220458984375e-06, -0.08935260772705078, -1.9073486328125e-06, -0.008363127708435059, 0.0, -9.1552734375e-05, -0.000629425048828125, -0.000507354736328125, -0.01515960693359375, -6.103515625e-05, -0.007152557373046875, -1.9073486328125e-06, -0.000583648681640625, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0010063648223876953, 0.0, -0.0011752843856811523, 0.0, -0.03296661376953125, -0.0003147125244140625, -1.52587890625e-05, -0.0005550384521484375, -3.814697265625e-06, -0.2892642021179199, -0.00019073486328125, -4.76837158203125e-05, 0.0, -0.0003643035888671875, 0.0, -0.00041866302490234375, -1.9073486328125e-06, -0.0001468658447265625, -3.814697265625e-06, -0.0060882568359375, -0.0010089874267578125, -3.814697265625e-06, -0.007834434509277344, -9.5367431640625e-06, -2.09808349609375e-05, -0.000980377197265625, -0.00252532958984375, -1.9073486328125e-06, -1.33514404296875e-05, -7.152555099310121e-07, -0.0003681182861328125, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.000194549560546875, -3.4332275390625e-05, -0.032806396484375, -1.9073486328125e-05, -0.001194000244140625, -4.00543212890625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0024051666259765625, 0.0, -0.0006821155548095703, 0.0, -0.0025511980056762695, 0.0, -0.20287907123565674, -8.96453857421875e-05, -6.103515625e-05, -0.001556396484375, -3.814697265625e-06, -2.560753107070923, -0.00255584716796875, -0.000270843505859375, 0.0, -0.000179290771484375, 0.0, -0.0002593994140625, 0.0, -0.0001239776611328125, -3.814697265625e-06, -0.009206771850585938, -9.5367431640625e-06, -0.01801013946533203, 0.0, -0.0003681182861328125, -0.000644683837890625, -0.8740758895874023, -3.814697265625e-06, -5.14984130859375e-05, -1.0728830375228426e-06, -0.00034332275390625, -0.971615195274353, -3.576278118089249e-07, -5.7220458984375e-05, -7.82012939453125e-05, -4.9591064453125e-05, -0.3347320556640625, -9.1552734375e-05, -0.019315719604492188, -7.43865966796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.0009174346923828125, 0.0, -0.0018352270126342773, 0.0, -0.0032101869583129883, 0.0, -0.10651206970214844, -0.0001392364501953125, -6.103515625e-05, -0.00080108642578125, -3.814697265625e-06, -0.3157254457473755, -0.000423431396484375, -3.4332275390625e-05, 0.0, -0.0008544921875, 0.0, -0.00046253204345703125, -1.9073486328125e-06, -0.0001373291015625, -3.814697265625e-06], "choice_history": [97, 284, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Repentance", "hole2": "PALADIN"}], "hole0": "Repentance", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n", "score": -6.039131752005289, "score_history": [-0.0049896240234375, -0.033367156982421875, -0.00021170999389141798, -3.504691630951129e-05, -0.00015306469867937267, -0.0001627198507776484, -5.1616654673125595e-05, -0.034847259521484375, -0.0040493011474609375, -8.0108642578125e-05, -8.416175842285156e-05, -6.103515625e-05, -1.2874157619080506e-05, -1.9073486328125e-06, -0.0005830526351928711, -5.7220458984375e-06, -0.08935260772705078, -1.9073486328125e-06, -0.008363127708435059, 0.0, -9.1552734375e-05, -0.000629425048828125, -0.000507354736328125, -0.01515960693359375, -6.103515625e-05, -0.007152557373046875, -1.9073486328125e-06, -0.000583648681640625, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0010063648223876953, 0.0, -0.0011752843856811523, 0.0, -0.03296661376953125, -0.0003147125244140625, -1.52587890625e-05, -0.0005550384521484375, -3.814697265625e-06, -0.2892642021179199, -0.00019073486328125, -4.76837158203125e-05, 0.0, -0.0003643035888671875, 0.0, -0.00041866302490234375, -1.9073486328125e-06, -0.0001468658447265625, -3.814697265625e-06, -0.0060882568359375, -0.0010089874267578125, -3.814697265625e-06, -0.007834434509277344, -9.5367431640625e-06, -2.09808349609375e-05, -0.000980377197265625, -0.00252532958984375, -1.9073486328125e-06, -1.33514404296875e-05, -7.152555099310121e-07, -0.0003681182861328125, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.000194549560546875, -3.4332275390625e-05, -0.032806396484375, -1.9073486328125e-05, -0.001194000244140625, -4.00543212890625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0024051666259765625, 0.0, -0.0006821155548095703, 0.0, -0.0025511980056762695, 0.0, -0.20287907123565674, -8.96453857421875e-05, -6.103515625e-05, -0.001556396484375, -3.814697265625e-06, -0.3279470205307007, -0.0002956390380859375, -3.62396240234375e-05, 0.0, -0.0007991790771484375, 0.0, -0.0005540847778320312, -1.9073486328125e-06, -0.000133514404296875, -3.814697265625e-06, -0.010822296142578125, -9.5367431640625e-06, -0.018831253051757812, 0.0, -0.00037384033203125, -0.000682830810546875, -0.8475494384765625, -3.814697265625e-06, -4.9591064453125e-05, -1.0728830375228426e-06, -0.0003376007080078125, -1.0141385793685913, -3.576278118089249e-07, -5.7220458984375e-05, -7.82012939453125e-05, -4.76837158203125e-05, -0.33084964752197266, -9.34600830078125e-05, -0.019863128662109375, -7.43865966796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.0009212493896484375, 0.0, -0.0017932653427124023, 0.0, -0.0032521486282348633, 0.0, -2.329737663269043, -0.0003299713134765625, -1.1444091796875e-05, -0.0004367828369140625, -5.7220458984375e-06, -0.3359869718551636, -0.000461578369140625, -2.47955322265625e-05, 0.0, -0.0010585784912109375, 0.0, -0.00042629241943359375, -1.9073486328125e-06, -0.000133514404296875, -3.814697265625e-06], "choice_history": [97, 284, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Repentance", "hole2": "PALADIN"}], "hole0": "Repentance", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n", "score": -6.075344553938578, "score_history": [-0.0049896240234375, -0.033367156982421875, -0.00021170999389141798, -3.504691630951129e-05, -0.00015306469867937267, -0.0001627198507776484, -5.1616654673125595e-05, -0.034847259521484375, -0.0040493011474609375, -8.0108642578125e-05, -8.416175842285156e-05, -6.103515625e-05, -1.2874157619080506e-05, -1.9073486328125e-06, -0.0005830526351928711, -5.7220458984375e-06, -0.08935260772705078, -1.9073486328125e-06, -0.008363127708435059, 0.0, -9.1552734375e-05, -0.000629425048828125, -0.000507354736328125, -0.01515960693359375, -6.103515625e-05, -0.007152557373046875, -1.9073486328125e-06, -0.000583648681640625, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0010063648223876953, 0.0, -0.0011752843856811523, 0.0, -0.03296661376953125, -0.0003147125244140625, -1.52587890625e-05, -0.0005550384521484375, -3.814697265625e-06, -0.2892642021179199, -0.00019073486328125, -4.76837158203125e-05, 0.0, -0.0003643035888671875, 0.0, -0.00041866302490234375, -1.9073486328125e-06, -0.0001468658447265625, -3.814697265625e-06, -0.0060882568359375, -0.0010089874267578125, -3.814697265625e-06, -0.007834434509277344, -9.5367431640625e-06, -2.09808349609375e-05, -0.000980377197265625, -0.00252532958984375, -1.9073486328125e-06, -1.33514404296875e-05, -7.152555099310121e-07, -0.0003681182861328125, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.000194549560546875, -3.4332275390625e-05, -0.032806396484375, -1.9073486328125e-05, -0.001194000244140625, -4.00543212890625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0024051666259765625, 0.0, -0.0006821155548095703, 0.0, -0.0025511980056762695, 0.0, -0.20287907123565674, -8.96453857421875e-05, -6.103515625e-05, -0.001556396484375, -3.814697265625e-06, -0.3279470205307007, -0.0002956390380859375, -3.62396240234375e-05, 0.0, -0.0007991790771484375, 0.0, -0.0005540847778320312, -1.9073486328125e-06, -0.000133514404296875, -3.814697265625e-06, -0.010822296142578125, -9.5367431640625e-06, -0.018831253051757812, 0.0, -0.00037384033203125, -0.000682830810546875, -0.8475494384765625, -3.814697265625e-06, -4.9591064453125e-05, -1.0728830375228426e-06, -0.0003376007080078125, -1.0141385793685913, -3.576278118089249e-07, -5.7220458984375e-05, -7.82012939453125e-05, -4.76837158203125e-05, -0.33084964752197266, -9.34600830078125e-05, -0.019863128662109375, -7.43865966796875e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.0009212493896484375, 0.0, -0.0017932653427124023, 0.0, -0.0032521486282348633, 0.0, -0.10652351379394531, -0.000141143798828125, -6.103515625e-05, -0.000789642333984375, -3.814697265625e-06, -2.595975637435913, -0.0003643035888671875, -9.5367431640625e-05, 0.0, -0.0005340576171875, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -0.00014495849609375, -3.814697265625e-06], "choice_history": [97, 284, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "character_attack", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Repentance", "hole2": "PALADIN"}], "hole0": "Repentance", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, minion):\n        minion.1('minion_died', self._reveal)\n        self.player = player\n", "score": -7.066082796803244, "score_history": [-0.0049896240234375, -0.033367156982421875, -0.00021170999389141798, -3.504691630951129e-05, -0.00015306469867937267, -0.0001627198507776484, -5.1616654673125595e-05, -0.034847259521484375, -0.0040493011474609375, -8.0108642578125e-05, -8.416175842285156e-05, -6.103515625e-05, -1.2874157619080506e-05, -1.9073486328125e-06, -0.0005830526351928711, -5.7220458984375e-06, -0.08935260772705078, -1.9073486328125e-06, -0.008363127708435059, 0.0, -9.1552734375e-05, -0.000629425048828125, -0.000507354736328125, -0.01515960693359375, -6.103515625e-05, -0.007152557373046875, -1.9073486328125e-06, -0.000583648681640625, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0010063648223876953, 0.0, -0.0011752843856811523, 0.0, -0.03296661376953125, -0.0003147125244140625, -1.52587890625e-05, -0.0005550384521484375, -3.814697265625e-06, -0.2892642021179199, -0.00019073486328125, -4.76837158203125e-05, 0.0, -0.0003643035888671875, 0.0, -0.00041866302490234375, -1.9073486328125e-06, -0.0001468658447265625, -3.814697265625e-06, -0.0060882568359375, -0.0010089874267578125, -3.814697265625e-06, -0.007834434509277344, -9.5367431640625e-06, -2.09808349609375e-05, -0.000980377197265625, -0.00252532958984375, -1.9073486328125e-06, -1.33514404296875e-05, -7.152555099310121e-07, -0.0003681182861328125, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.000194549560546875, -3.4332275390625e-05, -0.032806396484375, -1.9073486328125e-05, -0.001194000244140625, -4.00543212890625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0024051666259765625, 0.0, -0.0006821155548095703, 0.0, -0.0025511980056762695, 0.0, -0.20287907123565674, -8.96453857421875e-05, -6.103515625e-05, -0.001556396484375, -3.814697265625e-06, -0.3279470205307007, -0.0002956390380859375, -3.62396240234375e-05, 0.0, -0.0007991790771484375, 0.0, -0.0005540847778320312, -1.9073486328125e-06, -0.000133514404296875, -3.814697265625e-06, -0.010822296142578125, -9.5367431640625e-06, -0.018831253051757812, 0.0, -0.00037384033203125, -0.000682830810546875, -0.8475494384765625, -3.814697265625e-06, -4.9591064453125e-05, -1.0728830375228426e-06, -0.0003376007080078125, -0.49038541316986084, -6.318092346191406e-06, -1.7297563552856445, -0.0001964569091796875, -0.000164031982421875, -0.028118133544921875, -1.9073486328125e-06, -0.4261409044265747, 0.0, -0.6817280054092407, 0.0, -0.000484466552734375, -0.008525848388671875, -3.814697265625e-06, -0.22602137923240662, -7.62939453125e-06, -0.0004215240478515625, 0.0, -0.0003490447998046875, -1.9073486328125e-06, -0.000881195068359375, -1.9073486328125e-06, -0.0001983642578125, -1.9073486328125e-06, -0.0002346038818359375, -1.9073486328125e-06, -8.20159912109375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.000217437744140625, -1.9073486328125e-06, -0.0013189315795898438, -3.814697265625e-06, -9.918212890625e-05, 0.0, -1.4710865020751953, 0.0, -0.00034236907958984375, 0.0], "choice_history": [97, 284, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "minion", "<EOS>", 359, 136, 318, 21, 174, "minion", "<EOS>", "1", "<EOS>", 347, 53, 183, "minion_died", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "self", "<EOS>", "player", "<EOS>", 21, 174, "player", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "1", "_type": "Template77", "hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"s": "minion_died", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}, {"value": {"id": "player", "_type": "Name"}, "_type": "Assign", "targets": [{"value": {"id": "self", "_type": "Name"}, "attr": "player", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Repentance", "hole2": "PALADIN"}], "hole0": "Repentance", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, attacker, target):\n        if isinstance(target, self):\n            minion_card = game.random_choice(<UNK>)\n", "score": -7.287173449846819, "score_history": [-0.0049896240234375, -0.033367156982421875, -0.00021170999389141798, -3.504691630951129e-05, -0.00015306469867937267, -0.0001627198507776484, -5.1616654673125595e-05, -0.034847259521484375, -0.0040493011474609375, -8.0108642578125e-05, -8.416175842285156e-05, -6.103515625e-05, -1.2874157619080506e-05, -1.9073486328125e-06, -0.0005830526351928711, -5.7220458984375e-06, -0.08935260772705078, -1.9073486328125e-06, -0.008363127708435059, 0.0, -9.1552734375e-05, -0.000629425048828125, -0.000507354736328125, -0.01515960693359375, -6.103515625e-05, -0.007152557373046875, -1.9073486328125e-06, -0.000583648681640625, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0010063648223876953, 0.0, -0.0011752843856811523, 0.0, -0.03296661376953125, -0.0003147125244140625, -1.52587890625e-05, -0.0005550384521484375, -3.814697265625e-06, -0.2892642021179199, -0.00019073486328125, -4.76837158203125e-05, 0.0, -0.0003643035888671875, 0.0, -0.00041866302490234375, -1.9073486328125e-06, -0.0001468658447265625, -3.814697265625e-06, -0.0060882568359375, -0.0010089874267578125, -3.814697265625e-06, -0.007834434509277344, -9.5367431640625e-06, -2.09808349609375e-05, -0.000980377197265625, -0.00252532958984375, -1.9073486328125e-06, -1.33514404296875e-05, -7.152555099310121e-07, -0.0003681182861328125, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.000194549560546875, -3.4332275390625e-05, -0.032806396484375, -1.9073486328125e-05, -0.001194000244140625, -4.00543212890625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0024051666259765625, 0.0, -0.0006821155548095703, 0.0, -0.0025511980056762695, 0.0, -0.20287907123565674, -8.96453857421875e-05, -6.103515625e-05, -0.001556396484375, -3.814697265625e-06, -0.3279470205307007, -0.0002956390380859375, -3.62396240234375e-05, 0.0, -0.0007991790771484375, 0.0, -0.0005540847778320312, -1.9073486328125e-06, -0.000133514404296875, -3.814697265625e-06, -0.010822296142578125, -9.5367431640625e-06, -0.018831253051757812, 0.0, -0.00037384033203125, -0.000682830810546875, -1.6622591018676758, -1.9073486328125e-06, -0.0002841949462890625, -4.768370445162873e-07, -6.103515625e-05, -0.2517789602279663, -2.264974000354414e-06, -1.1444091796875e-05, -0.08121180534362793, -7.510157047363464e-06, -2.86102294921875e-05, -0.0315093994140625, -0.0002040863037109375, -0.05718421936035156, -0.0007534027099609375, -4.76837158203125e-05, 0.0, -0.2295910269021988, -5.4834770708112046e-05, -0.00012969970703125, -0.018362045288085938, -3.814697265625e-06, -0.009183645248413086, -0.0003591130953282118, -0.039963722229003906, -5.7220458984375e-06, -0.5851352214813232, -1.7881377516459906e-06, -0.006389617919921875, -0.1365070343017578, 0.0, -1.33514404296875e-05, -0.000339508056640625, 0.0, -0.5007538795471191, -7.62939453125e-06, -0.11758613586425781, -0.0017986297607421875, -0.000225067138671875, -4.9591064453125e-05, -0.022481918334960938, 0.0, -2.0839483737945557, 0.0, -0.024146437644958496, -9.5367431640625e-06, -3.814697265625e-05, -0.18847274780273438, 0.0, -0.08491265773773193, -9.894339200400282e-06], "choice_history": [97, 284, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "attacker", "<EOS>", 333, "target", "<EOS>", 358, 109, 160, 16, 150, 21, 174, "isinstance", "<EOS>", 347, 50, 174, "target", "<EOS>", 50, 174, "self", "<EOS>", 358, 102, 142, 346, 50, 174, "minion_card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion_card", "_type": "Name"}]}], "test": {"func": {"id": "isinstance", "_type": "Name"}, "args": [{"id": "target", "_type": "Name"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "If"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Repentance", "hole2": "PALADIN"}], "hole0": "Repentance", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, attacker, target):\n        if isinstance(target, self):\n            minion_card = minion.copy(self.player)\n", "score": -7.300612509132975, "score_history": [-0.0049896240234375, -0.033367156982421875, -0.00021170999389141798, -3.504691630951129e-05, -0.00015306469867937267, -0.0001627198507776484, -5.1616654673125595e-05, -0.034847259521484375, -0.0040493011474609375, -8.0108642578125e-05, -8.416175842285156e-05, -6.103515625e-05, -1.2874157619080506e-05, -1.9073486328125e-06, -0.0005830526351928711, -5.7220458984375e-06, -0.08935260772705078, -1.9073486328125e-06, -0.008363127708435059, 0.0, -9.1552734375e-05, -0.000629425048828125, -0.000507354736328125, -0.01515960693359375, -6.103515625e-05, -0.007152557373046875, -1.9073486328125e-06, -0.000583648681640625, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0010063648223876953, 0.0, -0.0011752843856811523, 0.0, -0.03296661376953125, -0.0003147125244140625, -1.52587890625e-05, -0.0005550384521484375, -3.814697265625e-06, -0.2892642021179199, -0.00019073486328125, -4.76837158203125e-05, 0.0, -0.0003643035888671875, 0.0, -0.00041866302490234375, -1.9073486328125e-06, -0.0001468658447265625, -3.814697265625e-06, -0.0060882568359375, -0.0010089874267578125, -3.814697265625e-06, -0.007834434509277344, -9.5367431640625e-06, -2.09808349609375e-05, -0.000980377197265625, -0.00252532958984375, -1.9073486328125e-06, -1.33514404296875e-05, -7.152555099310121e-07, -0.0003681182861328125, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.000194549560546875, -3.4332275390625e-05, -0.032806396484375, -1.9073486328125e-05, -0.001194000244140625, -4.00543212890625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0024051666259765625, 0.0, -0.0006821155548095703, 0.0, -0.0025511980056762695, 0.0, -0.20287907123565674, -8.96453857421875e-05, -6.103515625e-05, -0.001556396484375, -3.814697265625e-06, -0.3279470205307007, -0.0002956390380859375, -3.62396240234375e-05, 0.0, -0.0007991790771484375, 0.0, -0.0005540847778320312, -1.9073486328125e-06, -0.000133514404296875, -3.814697265625e-06, -0.010822296142578125, -9.5367431640625e-06, -0.018831253051757812, 0.0, -0.00037384033203125, -0.000682830810546875, -1.6622591018676758, -1.9073486328125e-06, -0.0002841949462890625, -4.768370445162873e-07, -6.103515625e-05, -0.2517789602279663, -2.264974000354414e-06, -1.1444091796875e-05, -0.08121180534362793, -7.510157047363464e-06, -2.86102294921875e-05, -0.0315093994140625, -0.0002040863037109375, -0.05718421936035156, -0.0007534027099609375, -4.76837158203125e-05, 0.0, -0.2295910269021988, -5.4834770708112046e-05, -0.00012969970703125, -0.018362045288085938, -3.814697265625e-06, -0.009183645248413086, -0.0003591130953282118, -0.039963722229003906, -5.7220458984375e-06, -0.5851352214813232, -1.7881377516459906e-06, -0.006389617919921875, -0.1365070343017578, 0.0, -1.33514404296875e-05, -0.000339508056640625, 0.0, -0.5007538795471191, -7.62939453125e-06, -0.11758613586425781, -0.0017986297607421875, -0.000225067138671875, -4.9591064453125e-05, -0.022481918334960938, 0.0, -1.3183318376541138, -1.9073486328125e-06, -0.05639505386352539, 0.0, -6.4849853515625e-05, -0.3285074234008789, -1.9073486328125e-06, -0.6693840026855469, 0.0, -0.017246246337890625, -4.41074053014745e-06, -0.005039215087890625, 0.0], "choice_history": [97, 284, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "attacker", "<EOS>", 333, "target", "<EOS>", 358, 109, 160, 16, 150, 21, 174, "isinstance", "<EOS>", 347, 50, 174, "target", "<EOS>", 50, 174, "self", "<EOS>", 358, 102, 142, 346, 50, 174, "minion_card", "<EOS>", 16, 150, 13, 143, 21, 174, "minion", "<EOS>", "copy", "<EOS>", 346, 42, 143, 21, 174, "self", "<EOS>", "player", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"id": "self", "_type": "Name"}, "attr": "player", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion_card", "_type": "Name"}]}], "test": {"func": {"id": "isinstance", "_type": "Name"}, "args": [{"id": "target", "_type": "Name"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "If"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Repentance", "hole2": "PALADIN"}], "hole0": "Repentance", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def _reveal(self, attacker, target):\n        if isinstance(target, self):\n            minion_card = minion.copy(self.player.minions)\n", "score": -7.354371845607716, "score_history": [-0.0049896240234375, -0.033367156982421875, -0.00021170999389141798, -3.504691630951129e-05, -0.00015306469867937267, -0.0001627198507776484, -5.1616654673125595e-05, -0.034847259521484375, -0.0040493011474609375, -8.0108642578125e-05, -8.416175842285156e-05, -6.103515625e-05, -1.2874157619080506e-05, -1.9073486328125e-06, -0.0005830526351928711, -5.7220458984375e-06, -0.08935260772705078, -1.9073486328125e-06, -0.008363127708435059, 0.0, -9.1552734375e-05, -0.000629425048828125, -0.000507354736328125, -0.01515960693359375, -6.103515625e-05, -0.007152557373046875, -1.9073486328125e-06, -0.000583648681640625, -3.814697265625e-06, -0.00016415119171142578, 0.0, -0.0010063648223876953, 0.0, -0.0011752843856811523, 0.0, -0.03296661376953125, -0.0003147125244140625, -1.52587890625e-05, -0.0005550384521484375, -3.814697265625e-06, -0.2892642021179199, -0.00019073486328125, -4.76837158203125e-05, 0.0, -0.0003643035888671875, 0.0, -0.00041866302490234375, -1.9073486328125e-06, -0.0001468658447265625, -3.814697265625e-06, -0.0060882568359375, -0.0010089874267578125, -3.814697265625e-06, -0.007834434509277344, -9.5367431640625e-06, -2.09808349609375e-05, -0.000980377197265625, -0.00252532958984375, -1.9073486328125e-06, -1.33514404296875e-05, -7.152555099310121e-07, -0.0003681182861328125, -7.62939453125e-06, 0.0, -0.00012969970703125, -0.000194549560546875, -3.4332275390625e-05, -0.032806396484375, -1.9073486328125e-05, -0.001194000244140625, -4.00543212890625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.0024051666259765625, 0.0, -0.0006821155548095703, 0.0, -0.0025511980056762695, 0.0, -0.20287907123565674, -8.96453857421875e-05, -6.103515625e-05, -0.001556396484375, -3.814697265625e-06, -0.3279470205307007, -0.0002956390380859375, -3.62396240234375e-05, 0.0, -0.0007991790771484375, 0.0, -0.0005540847778320312, -1.9073486328125e-06, -0.000133514404296875, -3.814697265625e-06, -0.010822296142578125, -9.5367431640625e-06, -0.018831253051757812, 0.0, -0.00037384033203125, -0.000682830810546875, -1.6622591018676758, -1.9073486328125e-06, -0.0002841949462890625, -4.768370445162873e-07, -6.103515625e-05, -0.2517789602279663, -2.264974000354414e-06, -1.1444091796875e-05, -0.08121180534362793, -7.510157047363464e-06, -2.86102294921875e-05, -0.0315093994140625, -0.0002040863037109375, -0.05718421936035156, -0.0007534027099609375, -4.76837158203125e-05, 0.0, -0.2295910269021988, -5.4834770708112046e-05, -0.00012969970703125, -0.018362045288085938, -3.814697265625e-06, -0.009183645248413086, -0.0003591130953282118, -0.039963722229003906, -5.7220458984375e-06, -0.5851352214813232, -1.7881377516459906e-06, -0.006389617919921875, -0.1365070343017578, 0.0, -1.33514404296875e-05, -0.000339508056640625, 0.0, -0.5007538795471191, -7.62939453125e-06, -0.11758613586425781, -0.0017986297607421875, -0.000225067138671875, -4.9591064453125e-05, -0.022481918334960938, 0.0, -1.3183318376541138, -1.9073486328125e-06, -0.05639505386352539, 0.0, -6.4849853515625e-05, -0.3285074234008789, -1.9073486328125e-06, -0.7179775238037109, 0.0, -0.0001735687255859375, 0.0, -0.0002536773681640625, -1.9073486328125e-06, -0.00182342529296875, 0.0, -0.025166869163513184, -3.62396240234375e-05], "choice_history": [97, 284, "Repentance", "<EOS>", "Secret", "Card", "<EOS>", 358, 127, 230, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "attacker", "<EOS>", 333, "target", "<EOS>", 358, 109, 160, 16, 150, 21, 174, "isinstance", "<EOS>", 347, 50, 174, "target", "<EOS>", 50, 174, "self", "<EOS>", 358, 102, 142, 346, 50, 174, "minion_card", "<EOS>", 16, 150, 13, 143, 21, 174, "minion", "<EOS>", "copy", "<EOS>", 346, 42, 143, 13, 143, 21, 174, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "attr": "copy", "_type": "Attribute"}, "args": [{"value": {"value": {"id": "self", "_type": "Name"}, "attr": "player", "_type": "Attribute"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion_card", "_type": "Name"}]}], "test": {"func": {"id": "isinstance", "_type": "Name"}, "args": [{"id": "target", "_type": "Name"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "If"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Repentance", "hole2": "PALADIN"}], "hole0": "Repentance", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}]}
{"gold_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, False)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n", "beams": [{"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>Deathrattle(), PlayerSelector())])\n", "score": -3.5255483676164587, "score_history": [-4.1961669921875e-05, -0.0009975433349609375, -0.0002523341972846538, -0.0001747591159073636, -0.21009168028831482, -0.0005413368344306946, -1.1919473763555288e-07, -1.0848044439626392e-05, -1.573553163325414e-05, -0.00016021728515625, -1.0961456298828125, -9.72747802734375e-05, -4.172325134277344e-06, -0.0017017126083374023, -0.00055382662685588, -5.91278076171875e-05, -0.001063227653503418, -0.0003414154052734375, -4.90434467792511e-06, -3.814697265625e-06, -0.02421283721923828, -7.62939453125e-06, -0.0003110170364379883, 0.0, -0.06947612762451172, 0.0, -0.0001811981201171875, 0.0, -1.9073486328125e-06, -0.5579433441162109, -3.24249267578125e-05, -1.1920928244535389e-07, -1.7523612768854946e-05, -1.1086463018727954e-05, -4.887569048150908e-06, -0.003842577338218689, 0.0, -0.0003261566162109375, -0.07855510711669922, -0.03434231877326965, -6.4849853515625e-05, -6.103515625e-05, -0.007771492004394531, -5.7220458984375e-06, -0.06316109001636505, -1.3523621559143066, -0.003323078155517578, -0.009877204895019531, -1.9073486328125e-06, -0.007243514060974121, -0.0001484140520915389, 0.0], "choice_history": [97, 283, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 88, 325, "<UNK>", "Deathrattle", "<EOS>", 88, 325, "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"hole1": [{"_type": "Template79", "hole0": "<UNK>Deathrattle"}, {"_type": "Template79", "hole0": "PlayerSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 0, "hole2": "auras"}], "hole2": [{"hole1": 0, "hole3": "EPIC", "_type": "Template34", "hole0": "Shadow of Nothing", "hole2": "PRIEST"}], "hole0": "ShadowOfNothing", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellTarget(), PlayerSelector())])\n", "score": -3.5316902386703006, "score_history": [-4.1961669921875e-05, -0.0009975433349609375, -0.0002523341972846538, -0.0001747591159073636, -0.21009168028831482, -0.0005413368344306946, -1.1919473763555288e-07, -1.0848044439626392e-05, -1.573553163325414e-05, -0.00016021728515625, -1.0961456298828125, -9.72747802734375e-05, -4.172325134277344e-06, -0.0017017126083374023, -0.00055382662685588, -5.91278076171875e-05, -0.001063227653503418, -0.0003414154052734375, -4.90434467792511e-06, -3.814697265625e-06, -0.02421283721923828, -7.62939453125e-06, -0.0003110170364379883, 0.0, -0.06947612762451172, 0.0, -0.0001811981201171875, 0.0, -1.9073486328125e-06, -0.5579433441162109, -3.24249267578125e-05, -1.1920928244535389e-07, -1.7523612768854946e-05, -1.1086463018727954e-05, -4.887569048150908e-06, -0.003842577338218689, 0.0, -0.0003261566162109375, -0.07855510711669922, -0.03434231877326965, -6.4849853515625e-05, -6.103515625e-05, -0.007771492004394531, -5.7220458984375e-06, -0.06316109001636505, -0.3660111129283905, -0.000674128532409668, -0.001863718032836914, -0.9635410308837891, -1.9073486328125e-06, -0.04693317413330078, -7.307362102437764e-05, 0.0], "choice_history": [97, 283, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 88, 325, "<UNK>", "Spell", "Target", "<EOS>", 88, 325, "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"hole1": [{"_type": "Template79", "hole0": "<UNK>SpellTarget"}, {"_type": "Template79", "hole0": "PlayerSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 0, "hole2": "auras"}], "hole2": [{"hole1": 0, "hole3": "EPIC", "_type": "Template34", "hole0": "Shadow of Nothing", "hole2": "PRIEST"}], "hole0": "ShadowOfNothing", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellTarget(), MinionSelector(\n            MinionSelector()))])\n", "score": -3.7475142492630695, "score_history": [-4.1961669921875e-05, -0.0009975433349609375, -0.0002523341972846538, -0.0001747591159073636, -0.21009168028831482, -0.0005413368344306946, -1.1919473763555288e-07, -1.0848044439626392e-05, -1.573553163325414e-05, -0.00016021728515625, -1.0961456298828125, -9.72747802734375e-05, -4.172325134277344e-06, -0.0017017126083374023, -0.00055382662685588, -5.91278076171875e-05, -0.001063227653503418, -0.0003414154052734375, -4.90434467792511e-06, -3.814697265625e-06, -0.02421283721923828, -7.62939453125e-06, -0.0003110170364379883, 0.0, -0.06947612762451172, 0.0, -0.0001811981201171875, 0.0, -1.9073486328125e-06, -0.5579433441162109, -3.24249267578125e-05, -1.1920928244535389e-07, -1.7523612768854946e-05, -1.1086463018727954e-05, -4.887569048150908e-06, -0.003842577338218689, 0.0, -0.0003261566162109375, -0.07855510711669922, -0.03434231877326965, -6.4849853515625e-05, -6.103515625e-05, -0.007771492004394531, -5.7220458984375e-06, -0.06316109001636505, -0.3660111129283905, -0.000674128532409668, -0.001863718032836914, -0.5686511993408203, -0.00012969970703125, -0.0004323730245232582, -9.655952453613281e-06, 0.0, -0.6565582752227783, -0.0005919933319091797, 0.0], "choice_history": [97, 283, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 88, 325, "<UNK>", "Spell", "Target", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Minion", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"hole1": [{"_type": "Template79", "hole0": "<UNK>SpellTarget"}, {"hole1": "MinionSelector", "_type": "Template55", "hole0": "MinionSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 0, "hole2": "auras"}], "hole2": [{"hole1": 0, "hole3": "EPIC", "_type": "Template34", "hole0": "Shadow of Nothing", "hole2": "PRIEST"}], "hole0": "ShadowOfNothing", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, True, MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1)\n", "score": -3.8629096438498607, "score_history": [-4.1961669921875e-05, -0.0009975433349609375, -0.0002523341972846538, -0.0001747591159073636, -0.21009168028831482, -0.0005413368344306946, -1.1919473763555288e-07, -1.0848044439626392e-05, -1.573553163325414e-05, -0.00016021728515625, -0.40694618225097656, -0.3951396942138672, -0.0012531280517578125, -3.814697265625e-06, -2.968294757010881e-05, -1.3470649719238281e-05, -0.0004087686538696289, 0.0, -0.695225715637207, -1.9073486328125e-05, -5.7220458984375e-06, -2.1695930627174675e-05, -0.00052642822265625, -0.0015592891722917557, -5.53131103515625e-05, -0.006757369264960289, -0.7650442123413086, -8.96453857421875e-05, -7.43865966796875e-05, -0.007988575845956802, -5.543231964111328e-05, -1.52587890625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.24249267578125e-05, -0.02210521697998047, -1.9073486328125e-06, -1.9073486328125e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -8.0108642578125e-05, -1.33514404296875e-05, -0.00347900390625, -7.62939453125e-06, -0.11316967010498047, -0.0008182525634765625, -0.00015270709991455078, 0.0, -7.2479248046875e-05, 0.0, -0.001251220703125, 0.0, -0.033566951751708984, -3.814697265625e-06, -0.31928157806396484, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.4044020175933838, 0.0, -1.9073486328125e-06, -0.4706554412841797, -5.340576171875e-05, -1.3470558769768104e-05, -2.3841855067985307e-07, -9.20291495276615e-05, 0.0], "choice_history": [97, 283, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "0", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 0}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}]}], "hole0": "ShadowOfNothing", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing Nothing', 0, CHARACTER_CLASS.\n            PRIEST, CARD_RARITY.EPIC, True, MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1)\n", "score": -4.12069738504303, "score_history": [-4.1961669921875e-05, -0.0009975433349609375, -0.0002523341972846538, -0.0001747591159073636, -0.21009168028831482, -0.0005413368344306946, -1.1919473763555288e-07, -1.0848044439626392e-05, -1.573553163325414e-05, -0.00016021728515625, -0.40694618225097656, -0.3951396942138672, -0.0012531280517578125, -3.814697265625e-06, -2.968294757010881e-05, -1.3470649719238281e-05, -0.0004087686538696289, 0.0, -0.695225715637207, -1.9073486328125e-05, -5.7220458984375e-06, -2.1695930627174675e-05, -0.00052642822265625, -0.0015592891722917557, -5.53131103515625e-05, -0.006757369264960289, -0.6393098831176758, -0.004685706924647093, -0.0061492919921875, -4.9591064453125e-05, -5.340576171875e-05, -0.005528423935174942, -3.826618194580078e-05, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.86102294921875e-05, -0.031719207763671875, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -9.5367431640625e-06, 0.0, -9.34600830078125e-05, -1.1444091796875e-05, -0.0016727447509765625, -9.5367431640625e-06, -0.2779664993286133, -0.000736236572265625, -0.00013554096221923828, 0.0, -8.392333984375e-05, 0.0, -0.000942230224609375, 0.0, -0.02995622158050537, -3.814697265625e-06, -0.36183643341064453, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.42150425910949707, 0.0, -1.9073486328125e-06, -0.6175966262817383, -5.7220458984375e-05, -1.5735502529423684e-05, -2.3841855067985307e-07, -9.310200402978808e-05, 0.0], "choice_history": [97, 283, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Shadow", " ", "of", " ", "Nothing", " ", "Nothing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "0", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 0}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Shadow of Nothing Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}]}], "hole0": "ShadowOfNothing", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, True, MINION_TYPE.DEMON)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n", "score": -4.279422252263373, "score_history": [-4.1961669921875e-05, -0.0009975433349609375, -0.0002523341972846538, -0.0001747591159073636, -0.21009168028831482, -0.0005413368344306946, -1.1919473763555288e-07, -1.0848044439626392e-05, -1.573553163325414e-05, -0.00016021728515625, -0.40694618225097656, -0.3951396942138672, -0.0012531280517578125, -3.814697265625e-06, -2.968294757010881e-05, -1.3470649719238281e-05, -0.0004087686538696289, 0.0, -0.695225715637207, -1.9073486328125e-05, -5.7220458984375e-06, -2.1695930627174675e-05, -0.00052642822265625, -0.0015592891722917557, -5.53131103515625e-05, -0.006757369264960289, -0.7650442123413086, -8.96453857421875e-05, -7.43865966796875e-05, -0.007988575845956802, -5.543231964111328e-05, -1.52587890625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.24249267578125e-05, -0.02210521697998047, -1.9073486328125e-06, -1.9073486328125e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -8.0108642578125e-05, -1.33514404296875e-05, -0.00347900390625, -7.62939453125e-06, -0.11316967010498047, -0.0008182525634765625, -0.00015270709991455078, 0.0, -7.2479248046875e-05, 0.0, -0.001251220703125, 0.0, -0.033566951751708984, -3.814697265625e-06, -0.31928157806396484, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.180786371231079, -1.1444091796875e-05, -1.52587890625e-05, -0.11078357696533203, -4.38690185546875e-05, -2.47952248173533e-05, -3.576278118089249e-07, -6.544557982124388e-05, 0.0], "choice_history": [97, 283, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 132, 299, "0", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 0}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}]}], "hole0": "ShadowOfNothing", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing Nothing', 0, CHARACTER_CLASS.\n            PRIEST, CARD_RARITY.EPIC, True, MINION_TYPE.DEMON)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n", "score": -4.40244877910385, "score_history": [-4.1961669921875e-05, -0.0009975433349609375, -0.0002523341972846538, -0.0001747591159073636, -0.21009168028831482, -0.0005413368344306946, -1.1919473763555288e-07, -1.0848044439626392e-05, -1.573553163325414e-05, -0.00016021728515625, -0.40694618225097656, -0.3951396942138672, -0.0012531280517578125, -3.814697265625e-06, -2.968294757010881e-05, -1.3470649719238281e-05, -0.0004087686538696289, 0.0, -0.695225715637207, -1.9073486328125e-05, -5.7220458984375e-06, -2.1695930627174675e-05, -0.00052642822265625, -0.0015592891722917557, -5.53131103515625e-05, -0.006757369264960289, -0.6393098831176758, -0.004685706924647093, -0.0061492919921875, -4.9591064453125e-05, -5.340576171875e-05, -0.005528423935174942, -3.826618194580078e-05, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.86102294921875e-05, -0.031719207763671875, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -9.5367431640625e-06, 0.0, -9.34600830078125e-05, -1.1444091796875e-05, -0.0016727447509765625, -9.5367431640625e-06, -0.2779664993286133, -0.000736236572265625, -0.00013554096221923828, 0.0, -8.392333984375e-05, 0.0, -0.000942230224609375, 0.0, -0.02995622158050537, -3.814697265625e-06, -0.36183643341064453, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.146205186843872, -1.1444091796875e-05, -1.52587890625e-05, -0.17464637756347656, -4.57763671875e-05, -2.932505594799295e-05, -3.576278118089249e-07, -6.67568456265144e-05, 0.0], "choice_history": [97, 283, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Shadow", " ", "of", " ", "Nothing", " ", "Nothing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 132, 299, "0", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 0}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Shadow of Nothing Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}]}], "hole0": "ShadowOfNothing", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellTarget(), MinionSelector(\n            Shadow()))])\n", "score": -4.4539678110459064, "score_history": [-4.1961669921875e-05, -0.0009975433349609375, -0.0002523341972846538, -0.0001747591159073636, -0.21009168028831482, -0.0005413368344306946, -1.1919473763555288e-07, -1.0848044439626392e-05, -1.573553163325414e-05, -0.00016021728515625, -1.0961456298828125, -9.72747802734375e-05, -4.172325134277344e-06, -0.0017017126083374023, -0.00055382662685588, -5.91278076171875e-05, -0.001063227653503418, -0.0003414154052734375, -4.90434467792511e-06, -3.814697265625e-06, -0.02421283721923828, -7.62939453125e-06, -0.0003110170364379883, 0.0, -0.06947612762451172, 0.0, -0.0001811981201171875, 0.0, -1.9073486328125e-06, -0.5579433441162109, -3.24249267578125e-05, -1.1920928244535389e-07, -1.7523612768854946e-05, -1.1086463018727954e-05, -4.887569048150908e-06, -0.003842577338218689, 0.0, -0.0003261566162109375, -0.07855510711669922, -0.03434231877326965, -6.4849853515625e-05, -6.103515625e-05, -0.007771492004394531, -5.7220458984375e-06, -0.06316109001636505, -0.3660111129283905, -0.000674128532409668, -0.001863718032836914, -0.5686511993408203, -0.00012969970703125, -0.0004323730245232582, -9.655952453613281e-06, 0.0, -1.3571070432662964, -0.006496787071228027], "choice_history": [97, 283, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 358, 128, 233, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 37, 321, "Aura", "<EOS>", 347, 88, 325, "<UNK>", "Spell", "Target", "<EOS>", 70, 292, "Minion", "Selector", "<EOS>", "Shadow", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"hole1": [{"_type": "Template79", "hole0": "<UNK>SpellTarget"}, {"hole1": "Shadow", "_type": "Template55", "hole0": "MinionSelector"}], "_type": "Template78", "hole0": "Aura"}, "_type": "Template50", "hole0": 0, "hole2": "auras"}], "hole2": [{"hole1": 0, "hole3": "EPIC", "_type": "Template34", "hole0": "Shadow of Nothing", "hole2": "PRIEST"}], "hole0": "ShadowOfNothing", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing Nothing', 0, CHARACTER_CLASS.\n            PRIEST, CARD_RARITY.EPIC, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 1)\n", "score": -4.530142074805497, "score_history": [-4.1961669921875e-05, -0.0009975433349609375, -0.0002523341972846538, -0.0001747591159073636, -0.21009168028831482, -0.0005413368344306946, -1.1919473763555288e-07, -1.0848044439626392e-05, -1.573553163325414e-05, -0.00016021728515625, -0.40694618225097656, -0.3951396942138672, -0.0012531280517578125, -3.814697265625e-06, -2.968294757010881e-05, -1.3470649719238281e-05, -0.0004087686538696289, 0.0, -0.695225715637207, -1.9073486328125e-05, -5.7220458984375e-06, -2.1695930627174675e-05, -0.00052642822265625, -0.0015592891722917557, -5.53131103515625e-05, -0.006757369264960289, -0.6393098831176758, -0.004685706924647093, -0.0061492919921875, -4.9591064453125e-05, -5.340576171875e-05, -0.005528423935174942, -3.826618194580078e-05, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.86102294921875e-05, -0.031719207763671875, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -9.5367431640625e-06, 0.0, -9.34600830078125e-05, -1.1444091796875e-05, -0.0016727447509765625, -9.5367431640625e-06, -0.2779664993286133, -0.000736236572265625, -0.00013554096221923828, 0.0, -8.392333984375e-05, 0.0, -0.000942230224609375, 0.0, -0.02995622158050537, -3.814697265625e-06, -1.3559999465942383, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.023543953895568848, 0.0, -1.9073486328125e-06, -0.4308605194091797, -4.76837158203125e-05, -1.0371154530730564e-05, -3.576278118089249e-07, -9.679743379820138e-05, 0.0], "choice_history": [97, 283, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Shadow", " ", "of", " ", "Nothing", " ", "Nothing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "0", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 0}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Shadow of Nothing Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "TOTEM", "_type": "Attribute"}]}], "hole0": "ShadowOfNothing", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 1)\n", "score": -4.533368675859435, "score_history": [-4.1961669921875e-05, -0.0009975433349609375, -0.0002523341972846538, -0.0001747591159073636, -0.21009168028831482, -0.0005413368344306946, -1.1919473763555288e-07, -1.0848044439626392e-05, -1.573553163325414e-05, -0.00016021728515625, -0.40694618225097656, -0.3951396942138672, -0.0012531280517578125, -3.814697265625e-06, -2.968294757010881e-05, -1.3470649719238281e-05, -0.0004087686538696289, 0.0, -0.695225715637207, -1.9073486328125e-05, -5.7220458984375e-06, -2.1695930627174675e-05, -0.00052642822265625, -0.0015592891722917557, -5.53131103515625e-05, -0.006757369264960289, -0.7650442123413086, -8.96453857421875e-05, -7.43865966796875e-05, -0.007988575845956802, -5.543231964111328e-05, -1.52587890625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -3.24249267578125e-05, -0.02210521697998047, -1.9073486328125e-06, -1.9073486328125e-05, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -8.0108642578125e-05, -1.33514404296875e-05, -0.00347900390625, -7.62939453125e-06, -0.11316967010498047, -0.0008182525634765625, -0.00015270709991455078, 0.0, -7.2479248046875e-05, 0.0, -0.001251220703125, 0.0, -0.033566951751708984, -3.814697265625e-06, -1.498178482055664, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.02401602268218994, 0.0, -1.9073486328125e-06, -0.3426170349121094, -4.76837158203125e-05, -1.0251946150674485e-05, -3.576278118089249e-07, -9.679743379820138e-05, 0.0], "choice_history": [97, 283, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "0", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 0}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "TOTEM", "_type": "Attribute"}]}], "hole0": "ShadowOfNothing", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, True)\n\n    def create_minion(self, player):\n        return Minion(0, 1, effects=[Effect(Attack(IsMinion()), ActionTag(\n            Damage(Attribute('attack', SelfSelector())), MinionSelector(\n            TargetAdjacent(), EnemyPlayer())))])\n", "score": -5.601103464106018, "score_history": [-4.1961669921875e-05, -0.0009975433349609375, -0.0002523341972846538, -0.0001747591159073636, -0.21009168028831482, -0.0005413368344306946, -1.1919473763555288e-07, -1.0848044439626392e-05, -1.573553163325414e-05, -0.00016021728515625, -0.40694618225097656, -0.3951396942138672, -0.0012531280517578125, -3.814697265625e-06, -2.968294757010881e-05, -1.3470649719238281e-05, -0.0004087686538696289, 0.0, -0.7700090408325195, -9.34600830078125e-05, -2.09808349609375e-05, -7.748573807475623e-06, -0.00036644935607910156, -0.00043110051774419844, -4.9591064453125e-05, -0.005287707783281803, -0.3101387023925781, -9.5367431640625e-06, -2.47955322265625e-05, -0.00016732513904571533, -1.71661376953125e-05, -7.62939453125e-06, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.02901935577392578, 0.0, -1.52587890625e-05, -3.0517578125e-05, -1.9073486328125e-05, 0.0, -9.918212890625e-05, -1.52587890625e-05, -0.001628875732421875, -2.09808349609375e-05, -0.015874862670898438, -0.001285552978515625, -5.340576171875e-05, 0.0, -0.0006296634674072266, 0.0, -0.04323732852935791, 0.0, -3.814697265625e-06, -0.07570838928222656, -9.72747802734375e-05, -0.001567840576171875, -0.007788658142089844, -1.26361273942166e-05, -0.00015234944294206798, -0.00025784462923184037, 0.0, -0.26550137996673584, -0.03307175636291504, -0.0028934478759765625, -0.0021381378173828125, -0.000652313232421875, -0.01690763607621193, -0.007079961244016886, -0.007761836051940918, -7.43865966796875e-05, -1.442561149597168, -0.12912273406982422, -0.08025995641946793, -0.0003114679711870849, -0.0006351470947265625, -0.007843017578125, -0.000209808349609375, -0.000308990478515625, -3.814697265625e-06, -0.04906606674194336, -1.9073486328125e-05, -3.814697265625e-05, -0.0013675689697265625, -0.0003490447998046875, -0.1348109245300293, 0.0, -0.1515979766845703, -0.0001220703125, -0.3023340106010437, -0.0003262262907810509, 0.0, -0.022656021639704704, -0.00030362606048583984, 0.0, -0.00048828125, -0.0018310546875, -1.9073486328125e-06, -0.5159123539924622, -0.06300803273916245, -8.570843056077138e-05, -0.0013065338134765625, 0.0, -0.07777297496795654, -6.961821054574102e-05, -1.9073486328125e-06], "choice_history": [97, 283, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "0", "<EOS>", "1", "<EOS>", "Attack", "<EOS>", 346, 88, 325, "Is", "Minion", "<EOS>", 346, 64, 272, "Damage", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", "Minion", "Selector", "<EOS>", 347, 88, 325, "Target", "Adjacent", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "Attack", "hole0": 0, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "IsMinion"}], "hole1": 1, "hole4": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Call"}], "hole3": "MinionSelector", "_type": "Template44", "hole0": "Damage", "hole4": [{"_type": "Template79", "hole0": "TargetAdjacent"}, {"_type": "Template79", "hole0": "EnemyPlayer"}]}]}, "_type": "Return"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "ShadowOfNothing", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, True)\n\n    def create_minion(self, player):\n        return Minion(0, 1, effects=[Effect(Attack(IsMinion()), ActionTag(\n            Give((1)(Attribute('attack', SelfSelector()))), SelfSelector()))])\n", "score": -7.073179331114261, "score_history": [-4.1961669921875e-05, -0.0009975433349609375, -0.0002523341972846538, -0.0001747591159073636, -0.21009168028831482, -0.0005413368344306946, -1.1919473763555288e-07, -1.0848044439626392e-05, -1.573553163325414e-05, -0.00016021728515625, -0.40694618225097656, -0.3951396942138672, -0.0012531280517578125, -3.814697265625e-06, -2.968294757010881e-05, -1.3470649719238281e-05, -0.0004087686538696289, 0.0, -0.7700090408325195, -9.34600830078125e-05, -2.09808349609375e-05, -7.748573807475623e-06, -0.00036644935607910156, -0.00043110051774419844, -4.9591064453125e-05, -0.005287707783281803, -0.3101387023925781, -9.5367431640625e-06, -2.47955322265625e-05, -0.00016732513904571533, -1.71661376953125e-05, -7.62939453125e-06, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.02901935577392578, 0.0, -1.52587890625e-05, -3.0517578125e-05, -1.9073486328125e-05, 0.0, -9.918212890625e-05, -1.52587890625e-05, -0.001628875732421875, -2.09808349609375e-05, -0.015874862670898438, -0.001285552978515625, -5.340576171875e-05, 0.0, -0.0006296634674072266, 0.0, -0.04323732852935791, 0.0, -3.814697265625e-06, -0.07570838928222656, -9.72747802734375e-05, -0.001567840576171875, -0.007788658142089844, -1.26361273942166e-05, -0.00015234944294206798, -0.00025784462923184037, 0.0, -0.26550137996673584, -0.03307175636291504, -0.0028934478759765625, -0.0021381378173828125, -0.000652313232421875, -0.01690763607621193, -0.007079961244016886, -0.007761836051940918, -7.43865966796875e-05, -0.32703399658203125, -0.5354709625244141, -0.006838440895080566, -0.0006197629845701158, -0.6726369857788086, -0.0015583038330078125, -1.0518996715545654, -1.52587890625e-05, -0.012908935546875, -0.048839569091796875, -0.00060272216796875, -3.62396240234375e-05, -2.09808349609375e-05, -0.9801161289215088, -7.62939453125e-05, -8.20159912109375e-05, -0.002460479736328125, -0.000148773193359375, -0.40707215666770935, -1.1444091796875e-05, -0.1214456558227539, -0.0008220672607421875, -0.1674180030822754, -0.00024280211073346436, 0.0, -0.11842140555381775, -2.0265579223632812e-06, 0.0], "choice_history": [97, 283, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "0", "<EOS>", "1", "<EOS>", "Attack", "<EOS>", 346, 88, 325, "Is", "Minion", "<EOS>", 346, 60, 238, "Give", "<EOS>", 23, 179, "1", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "Attack", "hole0": 0, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "IsMinion"}], "hole1": 1, "hole4": [{"hole1": {"n": 1, "_type": "Num"}, "hole3": "SelfSelector", "_type": "Template38", "hole0": "Give", "hole2": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Call"}]}]}, "_type": "Return"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "ShadowOfNothing", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, True)\n\n    def create_minion(self, player):\n        return Minion(0, 1, effects=[Effect(Attack(IsMinion()), ActionTag(\n            Damage(Attribute('attack', SelfSelector())), MinionSelector(\n            Has!(), PlayerSelector())))])\n", "score": -7.425176281715714, "score_history": [-4.1961669921875e-05, -0.0009975433349609375, -0.0002523341972846538, -0.0001747591159073636, -0.21009168028831482, -0.0005413368344306946, -1.1919473763555288e-07, -1.0848044439626392e-05, -1.573553163325414e-05, -0.00016021728515625, -0.40694618225097656, -0.3951396942138672, -0.0012531280517578125, -3.814697265625e-06, -2.968294757010881e-05, -1.3470649719238281e-05, -0.0004087686538696289, 0.0, -0.7700090408325195, -9.34600830078125e-05, -2.09808349609375e-05, -7.748573807475623e-06, -0.00036644935607910156, -0.00043110051774419844, -4.9591064453125e-05, -0.005287707783281803, -0.3101387023925781, -9.5367431640625e-06, -2.47955322265625e-05, -0.00016732513904571533, -1.71661376953125e-05, -7.62939453125e-06, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.02901935577392578, 0.0, -1.52587890625e-05, -3.0517578125e-05, -1.9073486328125e-05, 0.0, -9.918212890625e-05, -1.52587890625e-05, -0.001628875732421875, -2.09808349609375e-05, -0.015874862670898438, -0.001285552978515625, -5.340576171875e-05, 0.0, -0.0006296634674072266, 0.0, -0.04323732852935791, 0.0, -3.814697265625e-06, -0.07570838928222656, -9.72747802734375e-05, -0.001567840576171875, -0.007788658142089844, -1.26361273942166e-05, -0.00015234944294206798, -0.00025784462923184037, 0.0, -0.26550137996673584, -0.03307175636291504, -0.0028934478759765625, -0.0021381378173828125, -0.000652313232421875, -0.01690763607621193, -0.007079961244016886, -0.007761836051940918, -7.43865966796875e-05, -1.442561149597168, -0.12912273406982422, -0.08025995641946793, -0.0003114679711870849, -0.0006351470947265625, -0.007843017578125, -0.000209808349609375, -0.000308990478515625, -3.814697265625e-06, -0.04906606674194336, -1.9073486328125e-05, -3.814697265625e-05, -0.0013675689697265625, -0.0003490447998046875, -0.1348109245300293, 0.0, -0.1515979766845703, -0.0001220703125, -0.3023340106010437, -0.0003262262907810509, 0.0, -0.022656021639704704, -0.00030362606048583984, 0.0, -0.00048828125, -0.0018310546875, -1.9073486328125e-06, -1.6873682737350464, -0.5512569546699524, -0.2207748144865036, -0.004757881164550781, 0.0, -0.011181959882378578, -0.006889943964779377, -1.1920928244535389e-07], "choice_history": [97, 283, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "0", "<EOS>", "1", "<EOS>", "Attack", "<EOS>", 346, 88, 325, "Is", "Minion", "<EOS>", 346, 64, 272, "Damage", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", "Minion", "Selector", "<EOS>", 347, 88, 325, "Has", "!", "<EOS>", 88, 325, "Player", "Selector", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "Attack", "hole0": 0, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "IsMinion"}], "hole1": 1, "hole4": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Call"}], "hole3": "MinionSelector", "_type": "Template44", "hole0": "Damage", "hole4": [{"_type": "Template79", "hole0": "Has!"}, {"_type": "Template79", "hole0": "PlayerSelector"}]}]}, "_type": "Return"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "ShadowOfNothing", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, True)\n\n    def create_minion(self, player):\n        return Minion(0, 1, effects=[Effect(Attack(IsMinion()), ActionTag(\n            Damage(Attribute('attack', HeroSelector())), MinionSelector(\n            TargetAdjacent(), EnemyPlayer())))])\n", "score": -7.616087493232953, "score_history": [-4.1961669921875e-05, -0.0009975433349609375, -0.0002523341972846538, -0.0001747591159073636, -0.21009168028831482, -0.0005413368344306946, -1.1919473763555288e-07, -1.0848044439626392e-05, -1.573553163325414e-05, -0.00016021728515625, -0.40694618225097656, -0.3951396942138672, -0.0012531280517578125, -3.814697265625e-06, -2.968294757010881e-05, -1.3470649719238281e-05, -0.0004087686538696289, 0.0, -0.7700090408325195, -9.34600830078125e-05, -2.09808349609375e-05, -7.748573807475623e-06, -0.00036644935607910156, -0.00043110051774419844, -4.9591064453125e-05, -0.005287707783281803, -0.3101387023925781, -9.5367431640625e-06, -2.47955322265625e-05, -0.00016732513904571533, -1.71661376953125e-05, -7.62939453125e-06, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.02901935577392578, 0.0, -1.52587890625e-05, -3.0517578125e-05, -1.9073486328125e-05, 0.0, -9.918212890625e-05, -1.52587890625e-05, -0.001628875732421875, -2.09808349609375e-05, -0.015874862670898438, -0.001285552978515625, -5.340576171875e-05, 0.0, -0.0006296634674072266, 0.0, -0.04323732852935791, 0.0, -3.814697265625e-06, -0.07570838928222656, -9.72747802734375e-05, -0.001567840576171875, -0.007788658142089844, -1.26361273942166e-05, -0.00015234944294206798, -0.00025784462923184037, 0.0, -0.26550137996673584, -0.03307175636291504, -0.0028934478759765625, -0.0021381378173828125, -0.000652313232421875, -0.01690763607621193, -0.007079961244016886, -0.007761836051940918, -7.43865966796875e-05, -1.442561149597168, -0.12912273406982422, -0.08025995641946793, -0.0003114679711870849, -0.0006351470947265625, -0.007843017578125, -0.000209808349609375, -0.000308990478515625, -3.814697265625e-06, -0.04906606674194336, -1.9073486328125e-05, -3.814697265625e-05, -0.0013675689697265625, -0.0003490447998046875, -0.1348109245300293, 0.0, -0.1515979766845703, -0.0001220703125, -2.2837603092193604, -8.237280417233706e-05, 0.0, -0.12046459317207336, -0.00010800361633300781, 0.0, -0.000553131103515625, -0.0017156600952148438, -1.9073486328125e-06, -0.46141767501831055, -0.05813642218708992, -8.201336459023878e-05, -0.001178741455078125, 0.0, -0.07351124286651611, -6.830690836068243e-05, -1.9073486328125e-06], "choice_history": [97, 283, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "0", "<EOS>", "1", "<EOS>", "Attack", "<EOS>", 346, 88, 325, "Is", "Minion", "<EOS>", 346, 64, 272, "Damage", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Hero", "Selector", "<EOS>", "Minion", "Selector", "<EOS>", 347, 88, 325, "Target", "Adjacent", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "Attack", "hole0": 0, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "IsMinion"}], "hole1": 1, "hole4": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "HeroSelector"}], "_type": "Call"}], "hole3": "MinionSelector", "_type": "Template44", "hole0": "Damage", "hole4": [{"_type": "Template79", "hole0": "TargetAdjacent"}, {"_type": "Template79", "hole0": "EnemyPlayer"}]}]}, "_type": "Return"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "ShadowOfNothing", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, True)\n\n    def create_minion(self, player):\n        return Minion(0, 1, effects=[Effect(Attack(IsMinion()), ActionTag(\n            Damage(Attribute('attack', SelfSelector())), MinionSelector(\n            Adjacent(), EnemyPlayer())))])\n", "score": -8.628719688612364, "score_history": [-4.1961669921875e-05, -0.0009975433349609375, -0.0002523341972846538, -0.0001747591159073636, -0.21009168028831482, -0.0005413368344306946, -1.1919473763555288e-07, -1.0848044439626392e-05, -1.573553163325414e-05, -0.00016021728515625, -0.40694618225097656, -0.3951396942138672, -0.0012531280517578125, -3.814697265625e-06, -2.968294757010881e-05, -1.3470649719238281e-05, -0.0004087686538696289, 0.0, -0.7700090408325195, -9.34600830078125e-05, -2.09808349609375e-05, -7.748573807475623e-06, -0.00036644935607910156, -0.00043110051774419844, -4.9591064453125e-05, -0.005287707783281803, -0.3101387023925781, -9.5367431640625e-06, -2.47955322265625e-05, -0.00016732513904571533, -1.71661376953125e-05, -7.62939453125e-06, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.02901935577392578, 0.0, -1.52587890625e-05, -3.0517578125e-05, -1.9073486328125e-05, 0.0, -9.918212890625e-05, -1.52587890625e-05, -0.001628875732421875, -2.09808349609375e-05, -0.015874862670898438, -0.001285552978515625, -5.340576171875e-05, 0.0, -0.0006296634674072266, 0.0, -0.04323732852935791, 0.0, -3.814697265625e-06, -0.07570838928222656, -9.72747802734375e-05, -0.001567840576171875, -0.007788658142089844, -1.26361273942166e-05, -0.00015234944294206798, -0.00025784462923184037, 0.0, -0.26550137996673584, -0.03307175636291504, -0.0028934478759765625, -0.0021381378173828125, -0.000652313232421875, -0.01690763607621193, -0.007079961244016886, -0.007761836051940918, -7.43865966796875e-05, -1.442561149597168, -0.12912273406982422, -0.08025995641946793, -0.0003114679711870849, -0.0006351470947265625, -0.007843017578125, -0.000209808349609375, -0.000308990478515625, -3.814697265625e-06, -0.04906606674194336, -1.9073486328125e-05, -3.814697265625e-05, -0.0013675689697265625, -0.0003490447998046875, -0.1348109245300293, 0.0, -0.1515979766845703, -0.0001220703125, -0.3023340106010437, -0.0003262262907810509, 0.0, -0.022656021639704704, -0.00030362606048583984, 0.0, -0.00048828125, -0.0018310546875, -1.9073486328125e-06, -2.8379032611846924, -0.03765152022242546, -0.000446319580078125, 0.0, -0.8095347881317139, -0.00023365019296761602, -3.814697265625e-06], "choice_history": [97, 283, "Shadow", "Of", "Nothing", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 52, 179, "0", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 111, 181, 25, 235, "0", "<EOS>", "1", "<EOS>", "Attack", "<EOS>", 346, 88, 325, "Is", "Minion", "<EOS>", 346, 64, 272, "Damage", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "attack", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", "Minion", "Selector", "<EOS>", 347, 88, 325, "Adjacent", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>"], "model_output": {"hole6": [{"value": {"hole2": "Attack", "hole0": 0, "_type": "Template36", "hole3": [{"_type": "Template79", "hole0": "IsMinion"}], "hole1": 1, "hole4": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Call"}], "hole3": "MinionSelector", "_type": "Template44", "hole0": "Damage", "hole4": [{"_type": "Template79", "hole0": "Adjacent"}, {"_type": "Template79", "hole0": "EnemyPlayer"}]}]}, "_type": "Return"}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PRIEST", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "ShadowOfNothing", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health > player.effective_spell_damage(2\n            ) or self.target.divine_shield:\n            self.target.damage(player.effective_spell_damage(2), self)\n            player.draw()\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n", "beams": [{"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -1.3022579024136505, "score_history": [-0.36690521240234375, -0.0004138946533203125, -0.001987150404602289, -6.556489552167477e-06, -1.4424216715269722e-05, -1.7523756469017826e-05, -2.6702733521233313e-05, -0.000274658203125, -0.0046787261962890625, -6.67572021484375e-05, -7.152543730626348e-06, -4.291534423828125e-06, -1.1920928244535389e-07, 0.0, -0.09523618221282959, -1.9073486328125e-06, -0.002579212188720703, -1.52587890625e-05, -9.918212890625e-05, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -0.0003337860107421875, 0.0, -0.0001424551010131836, -2.5510787963867188e-05, -4.971027374267578e-05, -0.000125885009765625, -0.03443120792508125, -5.960462772236497e-07, -1.823902130126953e-05, 0.0, -2.491474151611328e-05, 0.0, -0.000499725341796875, -5.7220458984375e-06, -1.39474832394626e-05, -7.152555099310121e-07, -0.00212860107421875, -2.288818359375e-05, -9.5367431640625e-05, -0.0003833770751953125, -0.0001087188720703125, -1.71661376953125e-05, 0.0, -1.1682510375976562e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -2.574920654296875e-05, -2.3841855067985307e-07, -0.0130767822265625, -4.1961669921875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.00010883808135986328, -6.079673767089844e-06, -0.0005995035171508789, -2.3841855067985307e-07, -0.0008723150240257382, 0.0, -9.34600830078125e-05, -0.00782012939453125, -3.814697265625e-05, -0.00039559658034704626, -0.00018809456378221512, -1.33514404296875e-05, -1.1444091796875e-05, -0.0015333729097619653, -0.0002760886854957789, -0.018877029418945312, -0.0032596588134765625, -0.5881919860839844, -0.0058040618896484375, -0.14936590194702148, -7.78436369728297e-05], "choice_history": [97, 285, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole2": "WARRIOR", "hole0": "Slam", "_type": "Template27", "hole3": "target_func", "hole1": 2, "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}}], "hole0": "Slam", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 2}, {"id": "self", "_type": "Name"}]}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n", "score": -1.4243751834024962, "score_history": [-0.36690521240234375, -0.0004138946533203125, -0.001987150404602289, -6.556489552167477e-06, -1.4424216715269722e-05, -1.7523756469017826e-05, -2.6702733521233313e-05, -0.000274658203125, -0.0046787261962890625, -6.67572021484375e-05, -7.152543730626348e-06, -4.291534423828125e-06, -1.1920928244535389e-07, 0.0, -0.09523618221282959, -1.9073486328125e-06, -0.002579212188720703, -1.52587890625e-05, -9.918212890625e-05, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -0.0003337860107421875, 0.0, -0.0001424551010131836, -2.5510787963867188e-05, -4.971027374267578e-05, -0.000125885009765625, -0.03443120792508125, -5.960462772236497e-07, -1.823902130126953e-05, 0.0, -2.491474151611328e-05, 0.0, -0.000499725341796875, -5.7220458984375e-06, -1.39474832394626e-05, -7.152555099310121e-07, -0.00212860107421875, -2.288818359375e-05, -9.5367431640625e-05, -0.0003833770751953125, -0.0001087188720703125, -1.71661376953125e-05, 0.0, -1.1682510375976562e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -2.574920654296875e-05, -2.3841855067985307e-07, -0.0130767822265625, -4.1961669921875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.00010883808135986328, -6.079673767089844e-06, -0.0005995035171508789, -2.3841855067985307e-07, -0.0008723150240257382, 0.0, -9.34600830078125e-05, -0.00782012939453125, -3.814697265625e-05, -0.00039559658034704626, -0.00018809456378221512, -1.33514404296875e-05, -1.1444091796875e-05, -0.0015333729097619653, -0.0002760886854957789, -0.018877029418945312, -0.0032596588134765625, -0.8428812026977539, -0.0005321502685546875, -0.020320892333984375, -1.9073486328125e-06, -0.00037038326263427734, -8.344646857949556e-07, -0.0014363527297973633, -1.33514404296875e-05], "choice_history": [97, 285, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole2": "WARRIOR", "hole0": "Slam", "_type": "Template27", "hole3": "target_func", "hole1": 2, "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}}], "hole0": "Slam", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 2}, {"id": "self", "_type": "Name"}]}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(2, self)\n        self.target.increase_health(2)\n", "score": -1.914079879743241, "score_history": [-1.188246726989746, -3.0517578125e-05, -1.9073486328125e-06, -5.53131103515625e-05, -8.7738037109375e-05, -5.006785613659304e-06, -0.0023148709442466497, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.5762514016823843e-07, -0.00014293163258116692, -1.8358217857894488e-05, -3.24249267578125e-05, -0.03318500518798828, -0.000225067138671875, -4.3033709516748786e-05, -3.814697265625e-06, -8.344612069777213e-06, 0.0, -0.007990241050720215, 0.0, -0.12032413482666016, -0.0037221908569335938, -0.0001468658447265625, -9.5367431640625e-06, -0.0002524571609683335, -5.7220458984375e-06, -0.015146732330322266, -4.482269287109375e-05, -0.0002803802490234375, -0.0031137466430664062, -0.0001163482666015625, -0.002514719497412443, -2.50339189733495e-06, -0.00012969970703125, -9.5367431640625e-06, -0.0006395578384399414, -5.960462772236497e-07, -0.000499725341796875, 0.0, -4.9591064453125e-05, 0.0, -0.04250979423522949, -4.41074053014745e-06, -0.0018192528514191508, -1.3828182090946939e-05, -0.024143502116203308, 0.0, -0.058452606201171875, -0.0203399658203125, -3.814697265625e-06, -1.6526260878890753e-05, -2.3841855067985307e-07, -0.014101982116699219, -1.52587890625e-05, -0.00018310542509425431, -0.0007489919662475586, -7.05718994140625e-05, 0.0, -0.000514984130859375, 0.0, -0.05324196815490723, -8.70227722771233e-06, -0.002562403678894043, -1.0847986231965479e-05, -0.3147454559803009, -1.9073486328125e-06, -0.000152587890625, -5.340576171875e-05, -1.9073486328125e-06, -0.0009459545835852623, -3.933906555175781e-06], "choice_history": [96, 173, 358, 105, 152, "Slam", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "2", "<EOS>", 50, 174, "self", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "_type": "Template2", "hole0": "Slam", "hole2": "WARRIOR"}, {"hole7": "increase_health", "hole5": [{"n": 2, "_type": "Num"}, {"id": "self", "_type": "Name"}], "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole3": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole1": "use", "hole4": "damage", "hole6": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole8": [{"n": 2, "_type": "Num"}]}], "name": "Slam", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(2, self)\n        self.target.change_attack(2)\n", "score": -2.9720856047768223, "score_history": [-1.188246726989746, -3.0517578125e-05, -1.9073486328125e-06, -5.53131103515625e-05, -8.7738037109375e-05, -5.006785613659304e-06, -0.0023148709442466497, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.5762514016823843e-07, -0.00014293163258116692, -1.8358217857894488e-05, -3.24249267578125e-05, -0.03318500518798828, -0.000225067138671875, -4.3033709516748786e-05, -3.814697265625e-06, -8.344612069777213e-06, 0.0, -0.007990241050720215, 0.0, -0.12032413482666016, -0.0037221908569335938, -0.0001468658447265625, -9.5367431640625e-06, -0.0002524571609683335, -5.7220458984375e-06, -0.015146732330322266, -4.482269287109375e-05, -0.0002803802490234375, -0.0031137466430664062, -0.0001163482666015625, -0.002514719497412443, -2.50339189733495e-06, -0.00012969970703125, -9.5367431640625e-06, -0.0006395578384399414, -5.960462772236497e-07, -0.000499725341796875, 0.0, -4.9591064453125e-05, 0.0, -0.04250979423522949, -4.41074053014745e-06, -0.0018192528514191508, -1.3828182090946939e-05, -0.024143502116203308, 0.0, -0.058452606201171875, -0.0203399658203125, -3.814697265625e-06, -1.6526260878890753e-05, -2.3841855067985307e-07, -0.014101982116699219, -1.52587890625e-05, -0.00018310542509425431, -0.0007489919662475586, -7.05718994140625e-05, 0.0, -0.000514984130859375, 0.0, -0.05324196815490723, -8.70227722771233e-06, -0.002562403678894043, -1.0847986231965479e-05, -1.369102954864502, -1.9073486328125e-06, -3.814697265625e-06, -5.53131103515625e-05, -5.340576171875e-05, -0.00469348207116127, 0.0], "choice_history": [96, 173, 358, 105, 152, "Slam", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "2", "<EOS>", 50, 174, "self", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 346, 52, 179, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "_type": "Template2", "hole0": "Slam", "hole2": "WARRIOR"}, {"hole7": "change_attack", "hole5": [{"n": 2, "_type": "Num"}, {"id": "self", "_type": "Name"}], "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole3": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole1": "use", "hole4": "damage", "hole6": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole8": [{"n": 2, "_type": "Num"}]}], "name": "Slam", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -4.275167263015639, "score_history": [-0.36690521240234375, -0.0004138946533203125, -0.001987150404602289, -6.556489552167477e-06, -1.4424216715269722e-05, -1.7523756469017826e-05, -2.6702733521233313e-05, -0.000274658203125, -0.0046787261962890625, -6.67572021484375e-05, -7.152543730626348e-06, -4.291534423828125e-06, -1.1920928244535389e-07, 0.0, -3.077436685562134, 0.0, -0.00041472911834716797, -1.1444091796875e-05, -5.91278076171875e-05, -5.7220458984375e-06, -4.1961669921875e-05, 0.0, -9.918212890625e-05, 0.0, -0.00011169910430908203, -2.3484230041503906e-05, -4.398822784423828e-05, -0.0002040863037109375, -0.030673734843730927, -5.960462772236497e-07, -2.4199485778808594e-05, 0.0, -2.491474151611328e-05, 0.0, -0.0005817413330078125, -9.5367431640625e-06, -1.740455445542466e-05, -7.152555099310121e-07, -0.0020751953125, -2.288818359375e-05, -0.0001068115234375, -0.000392913818359375, -0.0001068115234375, -1.71661376953125e-05, 0.0, -1.1682510375976562e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -2.574920654296875e-05, -2.3841855067985307e-07, -0.013788223266601562, -4.1961669921875e-05, -0.00041961669921875, -1.9073486328125e-06, -0.0002956390380859375, 0.0, -0.00011265277862548828, -6.079673767089844e-06, -0.0005918741226196289, -2.3841855067985307e-07, -0.0008456374634988606, 0.0, -9.34600830078125e-05, -0.007860183715820312, -3.814697265625e-05, -0.0003988152020610869, -0.00018737945356406271, -1.33514404296875e-05, -1.1444091796875e-05, -0.0015314656775444746, -0.0002760886854957789, -0.018726348876953125, -0.0032253265380859375, -0.5835971832275391, -0.005768775939941406, -0.15027189254760742, -7.78436369728297e-05], "choice_history": [97, 285, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Slam", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole2": "DRUID", "hole0": "Slam", "_type": "Template27", "hole3": "target_func", "hole1": 2, "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}}], "hole0": "Slam", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 2}, {"id": "self", "_type": "Name"}]}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n", "score": -4.407055891050383, "score_history": [-0.36690521240234375, -0.0004138946533203125, -0.001987150404602289, -6.556489552167477e-06, -1.4424216715269722e-05, -1.7523756469017826e-05, -2.6702733521233313e-05, -0.000274658203125, -0.0046787261962890625, -6.67572021484375e-05, -7.152543730626348e-06, -4.291534423828125e-06, -1.1920928244535389e-07, 0.0, -3.077436685562134, 0.0, -0.00041472911834716797, -1.1444091796875e-05, -5.91278076171875e-05, -5.7220458984375e-06, -4.1961669921875e-05, 0.0, -9.918212890625e-05, 0.0, -0.00011169910430908203, -2.3484230041503906e-05, -4.398822784423828e-05, -0.0002040863037109375, -0.030673734843730927, -5.960462772236497e-07, -2.4199485778808594e-05, 0.0, -2.491474151611328e-05, 0.0, -0.0005817413330078125, -9.5367431640625e-06, -1.740455445542466e-05, -7.152555099310121e-07, -0.0020751953125, -2.288818359375e-05, -0.0001068115234375, -0.000392913818359375, -0.0001068115234375, -1.71661376953125e-05, 0.0, -1.1682510375976562e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -2.574920654296875e-05, -2.3841855067985307e-07, -0.013788223266601562, -4.1961669921875e-05, -0.00041961669921875, -1.9073486328125e-06, -0.0002956390380859375, 0.0, -0.00011265277862548828, -6.079673767089844e-06, -0.0005918741226196289, -2.3841855067985307e-07, -0.0008456374634988606, 0.0, -9.34600830078125e-05, -0.007860183715820312, -3.814697265625e-05, -0.0003988152020610869, -0.00018737945356406271, -1.33514404296875e-05, -1.1444091796875e-05, -0.0015314656775444746, -0.0002760886854957789, -0.018726348876953125, -0.0032253265380859375, -0.848780632019043, -0.000537872314453125, -0.020463943481445312, -1.9073486328125e-06, -0.00036466121673583984, -8.344646857949556e-07, -0.0014411211013793945, -1.33514404296875e-05], "choice_history": [97, 285, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Slam", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole2": "DRUID", "hole0": "Slam", "_type": "Template27", "hole3": "target_func", "hole1": 2, "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}}], "hole0": "Slam", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 2}, {"id": "self", "_type": "Name"}]}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -4.523850284388622, "score_history": [-0.36690521240234375, -0.0004138946533203125, -0.001987150404602289, -6.556489552167477e-06, -1.4424216715269722e-05, -1.7523756469017826e-05, -2.6702733521233313e-05, -0.000274658203125, -0.0046787261962890625, -6.67572021484375e-05, -7.152543730626348e-06, -4.291534423828125e-06, -1.1920928244535389e-07, 0.0, -3.323279619216919, -1.9073486328125e-06, -0.0015566349029541016, -1.1444091796875e-05, -6.4849853515625e-05, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -0.0008831024169921875, 0.0, -0.00010633468627929688, -3.170967102050781e-05, -5.364418029785156e-05, -0.0001659393310546875, -0.030277123674750328, -4.768370445162873e-07, -2.014636993408203e-05, 0.0, -2.491474151611328e-05, 0.0, -0.000560760498046875, -1.1444091796875e-05, -1.609325045137666e-05, -7.152555099310121e-07, -0.002040863037109375, -2.288818359375e-05, -0.000110626220703125, -0.00038909912109375, -0.0001049041748046875, -1.71661376953125e-05, 0.0, -9.775161743164062e-06, -1.9073486328125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -2.574920654296875e-05, -2.3841855067985307e-07, -0.013851165771484375, -4.1961669921875e-05, -0.0004253387451171875, -1.9073486328125e-06, -0.000286102294921875, 0.0, -9.930133819580078e-05, -6.079673767089844e-06, -0.0005975961685180664, -2.3841855067985307e-07, -0.0008574272505939007, 0.0, -9.1552734375e-05, -0.0077190399169921875, -3.814697265625e-05, -0.0003926759527530521, -0.0001879753835964948, -1.33514404296875e-05, -1.1444091796875e-05, -0.0015328960726037621, -0.0002760886854957789, -0.018625259399414062, -0.0032100677490234375, -0.5849037170410156, -0.005761146545410156, -0.15055513381958008, -7.796284626238048e-05], "choice_history": [97, 285, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Slam", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Frozen", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole2": "ROGUE", "hole0": "Slam", "_type": "Template27", "hole3": "target_func", "hole1": 2, "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}}], "hole0": "Slam", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 2}, {"id": "self", "_type": "Name"}]}, {"value": {"_type": "Template37", "hole0": "Frozen"}, "_type": "Expr"}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n", "score": -4.652530632813686, "score_history": [-0.36690521240234375, -0.0004138946533203125, -0.001987150404602289, -6.556489552167477e-06, -1.4424216715269722e-05, -1.7523756469017826e-05, -2.6702733521233313e-05, -0.000274658203125, -0.0046787261962890625, -6.67572021484375e-05, -7.152543730626348e-06, -4.291534423828125e-06, -1.1920928244535389e-07, 0.0, -3.323279619216919, -1.9073486328125e-06, -0.0015566349029541016, -1.1444091796875e-05, -6.4849853515625e-05, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -0.0008831024169921875, 0.0, -0.00010633468627929688, -3.170967102050781e-05, -5.364418029785156e-05, -0.0001659393310546875, -0.030277123674750328, -4.768370445162873e-07, -2.014636993408203e-05, 0.0, -2.491474151611328e-05, 0.0, -0.000560760498046875, -1.1444091796875e-05, -1.609325045137666e-05, -7.152555099310121e-07, -0.002040863037109375, -2.288818359375e-05, -0.000110626220703125, -0.00038909912109375, -0.0001049041748046875, -1.71661376953125e-05, 0.0, -9.775161743164062e-06, -1.9073486328125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -2.574920654296875e-05, -2.3841855067985307e-07, -0.013851165771484375, -4.1961669921875e-05, -0.0004253387451171875, -1.9073486328125e-06, -0.000286102294921875, 0.0, -9.930133819580078e-05, -6.079673767089844e-06, -0.0005975961685180664, -2.3841855067985307e-07, -0.0008574272505939007, 0.0, -9.1552734375e-05, -0.0077190399169921875, -3.814697265625e-05, -0.0003926759527530521, -0.0001879753835964948, -1.33514404296875e-05, -1.1444091796875e-05, -0.0015328960726037621, -0.0002760886854957789, -0.018625259399414062, -0.0032100677490234375, -0.8470869064331055, -0.0005435943603515625, -0.020526885986328125, -1.9073486328125e-06, -0.00036275386810302734, -8.344646857949556e-07, -0.0014420747756958008, -1.33514404296875e-05], "choice_history": [97, 285, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Slam", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 36, 317, 21, 174, "player", "<EOS>", "draw", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole2": "ROGUE", "hole0": "Slam", "_type": "Template27", "hole3": "target_func", "hole1": 2, "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}}], "hole0": "Slam", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 2}, {"id": "self", "_type": "Name"}]}, {"value": {"hole1": "draw", "_type": "Template76", "hole0": {"id": "player", "_type": "Name"}}, "_type": "Expr"}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(2)\n        self.target.increase_health(2)\n", "score": -4.885798118627264, "score_history": [-1.188246726989746, -3.0517578125e-05, -1.9073486328125e-06, -5.53131103515625e-05, -8.7738037109375e-05, -5.006785613659304e-06, -0.0023148709442466497, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.5762514016823843e-07, -0.00014293163258116692, -1.8358217857894488e-05, -3.24249267578125e-05, -0.03318500518798828, -0.000225067138671875, -4.3033709516748786e-05, -3.814697265625e-06, -8.344612069777213e-06, 0.0, -0.007990241050720215, 0.0, -0.12032413482666016, -0.0037221908569335938, -0.0001468658447265625, -9.5367431640625e-06, -0.0002524571609683335, -5.7220458984375e-06, -0.015146732330322266, -4.482269287109375e-05, -0.0002803802490234375, -0.0031137466430664062, -0.0001163482666015625, -0.002514719497412443, -2.50339189733495e-06, -0.00012969970703125, -9.5367431640625e-06, -0.0006395578384399414, -5.960462772236497e-07, -0.000499725341796875, 0.0, -4.9591064453125e-05, 0.0, -0.04250979423522949, -4.41074053014745e-06, -0.0018192528514191508, -1.3828182090946939e-05, -0.024143502116203308, 0.0, -2.880133628845215, -8.96453857421875e-05, -3.814697265625e-06, -0.00021306663984432817, -2.3841855067985307e-07, -0.0004425048828125, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -0.4027940034866333, -2.0265579223632812e-06, -0.004306197166442871, -2.3841830625315197e-06, -0.14675641059875488, -1.9073486328125e-06, -0.0001277923583984375, -5.14984130859375e-05, 0.0, -0.0029090861789882183, -2.0265579223632812e-06], "choice_history": [96, 173, 358, 105, 152, "Slam", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 346, 52, 179, "2", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "_type": "Template2", "hole0": "Slam", "hole2": "WARRIOR"}, {"hole7": "increase_health", "hole5": [{"n": 2, "_type": "Num"}], "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole3": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole1": "use", "hole4": "damage", "hole6": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole8": [{"n": 2, "_type": "Num"}]}], "name": "Slam", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.add_buff(Buff(Kill()))\n", "score": -5.046887164028696, "score_history": [-0.36690521240234375, -0.0004138946533203125, -0.001987150404602289, -6.556489552167477e-06, -1.4424216715269722e-05, -1.7523756469017826e-05, -2.6702733521233313e-05, -0.000274658203125, -0.0046787261962890625, -6.67572021484375e-05, -7.152543730626348e-06, -4.291534423828125e-06, -1.1920928244535389e-07, 0.0, -0.09523618221282959, -1.9073486328125e-06, -0.002579212188720703, -1.52587890625e-05, -9.918212890625e-05, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -0.0003337860107421875, 0.0, -0.0001424551010131836, -2.5510787963867188e-05, -4.971027374267578e-05, -0.000125885009765625, -0.03443120792508125, -5.960462772236497e-07, -1.823902130126953e-05, 0.0, -2.491474151611328e-05, 0.0, -0.000499725341796875, -5.7220458984375e-06, -1.39474832394626e-05, -7.152555099310121e-07, -0.00212860107421875, -2.288818359375e-05, -9.5367431640625e-05, -0.0003833770751953125, -0.0001087188720703125, -1.71661376953125e-05, 0.0, -1.1682510375976562e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -2.574920654296875e-05, -2.3841855067985307e-07, -0.0130767822265625, -4.1961669921875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.00010883808135986328, -6.079673767089844e-06, -0.0005995035171508789, -2.3841855067985307e-07, -0.0008723150240257382, 0.0, -9.34600830078125e-05, -0.00782012939453125, -3.814697265625e-05, -0.00039559658034704626, -0.00018809456378221512, -1.33514404296875e-05, -1.1444091796875e-05, -0.0015333729097619653, -0.0002760886854957789, -0.018877029418945312, -0.0032596588134765625, -0.5881919860839844, -0.0058040618896484375, -3.8939919471740723, -8.106002496788278e-05], "choice_history": [97, 285, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Kill", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole2": "WARRIOR", "hole0": "Slam", "_type": "Template27", "hole3": "target_func", "hole1": 2, "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}}], "hole0": "Slam", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 2}, {"id": "self", "_type": "Name"}]}, {"value": {"_type": "Template37", "hole0": "Kill"}, "_type": "Expr"}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.add_buff(Buff(Battlecry()))\n", "score": -5.19992960196668, "score_history": [-0.36690521240234375, -0.0004138946533203125, -0.001987150404602289, -6.556489552167477e-06, -1.4424216715269722e-05, -1.7523756469017826e-05, -2.6702733521233313e-05, -0.000274658203125, -0.0046787261962890625, -6.67572021484375e-05, -7.152543730626348e-06, -4.291534423828125e-06, -1.1920928244535389e-07, 0.0, -0.09523618221282959, -1.9073486328125e-06, -0.002579212188720703, -1.52587890625e-05, -9.918212890625e-05, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -0.0003337860107421875, 0.0, -0.0001424551010131836, -2.5510787963867188e-05, -4.971027374267578e-05, -0.000125885009765625, -0.03443120792508125, -5.960462772236497e-07, -1.823902130126953e-05, 0.0, -2.491474151611328e-05, 0.0, -0.000499725341796875, -5.7220458984375e-06, -1.39474832394626e-05, -7.152555099310121e-07, -0.00212860107421875, -2.288818359375e-05, -9.5367431640625e-05, -0.0003833770751953125, -0.0001087188720703125, -1.71661376953125e-05, 0.0, -1.1682510375976562e-05, -1.9073486328125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -2.574920654296875e-05, -2.3841855067985307e-07, -0.0130767822265625, -4.1961669921875e-05, -0.0004215240478515625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.00010883808135986328, -6.079673767089844e-06, -0.0005995035171508789, -2.3841855067985307e-07, -0.0008723150240257382, 0.0, -9.34600830078125e-05, -0.00782012939453125, -3.814697265625e-05, -0.00039559658034704626, -0.00018809456378221512, -1.33514404296875e-05, -1.1444091796875e-05, -0.0015333729097619653, -0.0002760886854957789, -0.018877029418945312, -0.0032596588134765625, -0.5881919860839844, -0.0058040618896484375, -4.0471038818359375, -1.1563301086425781e-05], "choice_history": [97, 285, "Slam", "<EOS>", "Spell", "Card", "<EOS>", 358, 125, 223, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 360, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 136, 318, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 75, 298, "2", "<EOS>", 50, 174, "self", "<EOS>", 106, 155, 26, 236, "Battlecry", "<EOS>"], "model_output": {"hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole2": "WARRIOR", "hole0": "Slam", "_type": "Template27", "hole3": "target_func", "hole1": 2, "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}}], "hole0": "Slam", "_type": "Template5", "hole3": "use", "hole1": "SpellCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"hole1": "damage", "_type": "Template77", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"_type": "Template61", "hole0": 2}, {"id": "self", "_type": "Name"}]}, {"value": {"_type": "Template37", "hole0": "Battlecry"}, "_type": "Expr"}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(2, self)\n        player.hero.increase_armor(2)\n", "score": -5.557872235236346, "score_history": [-1.188246726989746, -3.0517578125e-05, -1.9073486328125e-06, -5.53131103515625e-05, -8.7738037109375e-05, -5.006785613659304e-06, -0.0023148709442466497, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.5762514016823843e-07, -0.00014293163258116692, -1.8358217857894488e-05, -3.24249267578125e-05, -0.03318500518798828, -0.000225067138671875, -4.3033709516748786e-05, -3.814697265625e-06, -8.344612069777213e-06, 0.0, -0.007990241050720215, 0.0, -0.12032413482666016, -0.0037221908569335938, -0.0001468658447265625, -9.5367431640625e-06, -0.0002524571609683335, -5.7220458984375e-06, -0.015146732330322266, -4.482269287109375e-05, -0.0002803802490234375, -0.0031137466430664062, -0.0001163482666015625, -0.002514719497412443, -2.50339189733495e-06, -0.00012969970703125, -9.5367431640625e-06, -0.0006395578384399414, -5.960462772236497e-07, -0.000499725341796875, 0.0, -4.9591064453125e-05, 0.0, -0.04250979423522949, -4.41074053014745e-06, -0.0018192528514191508, -1.3828182090946939e-05, -0.024143502116203308, 0.0, -0.058452606201171875, -0.0203399658203125, -3.814697265625e-06, -1.6526260878890753e-05, -2.3841855067985307e-07, -0.014101982116699219, -1.52587890625e-05, -0.00018310542509425431, -0.0007489919662475586, -7.05718994140625e-05, 0.0, -0.000514984130859375, 0.0, -3.018132448196411, 0.0, -0.11527454853057861, 0.0, -0.8808472156524658, -2.3841855067985307e-07, -0.00095367431640625, -0.00025177001953125, -2.86102294921875e-05, -3.077927976846695e-05, -2.1457672119140625e-06], "choice_history": [96, 173, 358, 105, 152, "Slam", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "2", "<EOS>", 50, 174, "self", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 346, 52, 179, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "_type": "Template2", "hole0": "Slam", "hole2": "WARRIOR"}, {"hole7": "increase_armor", "hole5": [{"n": 2, "_type": "Num"}, {"id": "self", "_type": "Name"}], "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole3": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole1": "use", "hole4": "damage", "hole6": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole8": [{"n": 2, "_type": "Num"}]}], "name": "Slam", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(2, self)\n        player.hero.change_temp_attack(2)\n", "score": -6.105954239537617, "score_history": [-1.188246726989746, -3.0517578125e-05, -1.9073486328125e-06, -5.53131103515625e-05, -8.7738037109375e-05, -5.006785613659304e-06, -0.0023148709442466497, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.5762514016823843e-07, -0.00014293163258116692, -1.8358217857894488e-05, -3.24249267578125e-05, -0.03318500518798828, -0.000225067138671875, -4.3033709516748786e-05, -3.814697265625e-06, -8.344612069777213e-06, 0.0, -0.007990241050720215, 0.0, -0.12032413482666016, -0.0037221908569335938, -0.0001468658447265625, -9.5367431640625e-06, -0.0002524571609683335, -5.7220458984375e-06, -0.015146732330322266, -4.482269287109375e-05, -0.0002803802490234375, -0.0031137466430664062, -0.0001163482666015625, -0.002514719497412443, -2.50339189733495e-06, -0.00012969970703125, -9.5367431640625e-06, -0.0006395578384399414, -5.960462772236497e-07, -0.000499725341796875, 0.0, -4.9591064453125e-05, 0.0, -0.04250979423522949, -4.41074053014745e-06, -0.0018192528514191508, -1.3828182090946939e-05, -0.024143502116203308, 0.0, -0.058452606201171875, -0.0203399658203125, -3.814697265625e-06, -1.6526260878890753e-05, -2.3841855067985307e-07, -0.014101982116699219, -1.52587890625e-05, -0.00018310542509425431, -0.0007489919662475586, -7.05718994140625e-05, 0.0, -0.000514984130859375, 0.0, -3.018132448196411, 0.0, -0.11527454853057861, 0.0, -1.429140329360962, 0.0, -8.392333984375e-05, -0.0003070831298828125, -0.000499725341796875, -0.00016525760293006897, -1.1920928244535389e-07], "choice_history": [96, 173, 358, 105, 152, "Slam", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 123, 214, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 135, 309, 38, 325, "super", "<EOS>", "use", "<EOS>", 347, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 347, 52, 179, "2", "<EOS>", 50, 174, "self", "<EOS>", 13, 143, 21, 174, "player", "<EOS>", "hero", "<EOS>", "change_temp_attack", "<EOS>", 346, 52, 179, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole1": 2, "_type": "Template2", "hole0": "Slam", "hole2": "WARRIOR"}, {"hole7": "change_temp_attack", "hole5": [{"n": 2, "_type": "Num"}, {"id": "self", "_type": "Name"}], "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "hole0": {"_type": "Template79", "hole0": "super"}, "_type": "Template7", "hole3": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole1": "use", "hole4": "damage", "hole6": {"value": {"id": "player", "_type": "Name"}, "attr": "hero", "_type": "Attribute"}, "hole8": [{"n": 2, "_type": "Num"}]}], "name": "Slam", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(2)\n", "score": -6.6463933553528705, "score_history": [-1.188246726989746, -3.0517578125e-05, -1.9073486328125e-06, -5.53131103515625e-05, -8.7738037109375e-05, -5.006785613659304e-06, -0.0023148709442466497, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.5762514016823843e-07, -0.00014293163258116692, -1.8358217857894488e-05, -3.24249267578125e-05, -3.9412498474121094, -0.0031280517578125, -1.0848044439626392e-05, -3.933906555175781e-06, 0.0, 0.0, -0.0011050701141357422, -1.1444091796875e-05, -0.009511947631835938, -2.6702880859375e-05, -0.0012359619140625, 0.0, -0.0050106048583984375, 0.0, -1.52587890625e-05, 0.0, -0.0002923011779785156, -2.110004425048828e-05, -1.9073486328125e-05, -4.76837158203125e-05, -0.37824511528015137, -2.0265579223632812e-06, -0.0016918182373046875, -0.000152587890625, -2.6702880859375e-05, 0.0, -0.000827789306640625, 0.0, -0.00018405914306640625, -4.768370445162873e-07, -0.001498579978942871, -7.152555099310121e-07, -1.017667531967163, -1.311301275563892e-06, 0.0, -0.09061717987060547, -5.7220458984375e-06, -0.0028343116864562035, 0.0], "choice_history": [96, 173, 358, 105, 152, "Slam", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 346, 52, 179, "2", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole2": "WARRIOR", "hole0": "Slam", "_type": "Template8", "hole3": "target_func", "hole1": 2, "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}}, {"hole1": "increase_health", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"n": 2, "_type": "Num"}]}], "name": "Slam", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -6.679087429911817, "score_history": [-1.188246726989746, -3.0517578125e-05, -1.9073486328125e-06, -5.53131103515625e-05, -8.7738037109375e-05, -5.006785613659304e-06, -0.0023148709442466497, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.5762514016823843e-07, -0.00014293163258116692, -1.8358217857894488e-05, -3.24249267578125e-05, -3.9412498474121094, -0.0031280517578125, -1.0848044439626392e-05, -3.933906555175781e-06, 0.0, 0.0, -0.0011050701141357422, -1.1444091796875e-05, -0.009511947631835938, -2.6702880859375e-05, -0.0012359619140625, 0.0, -0.0050106048583984375, 0.0, -1.52587890625e-05, 0.0, -0.0002923011779785156, -2.110004425048828e-05, -1.9073486328125e-05, -4.76837158203125e-05, -0.37824511528015137, -2.0265579223632812e-06, -0.0016918182373046875, -0.000152587890625, -2.6702880859375e-05, 0.0, -0.000827789306640625, 0.0, -0.00018405914306640625, -4.768370445162873e-07, -0.001498579978942871, -7.152555099310121e-07, -1.0607755184173584, -3.576278118089249e-07, -1.9073486328125e-06, -0.06131267547607422, -1.9073486328125e-06, -0.021642295643687248, -8.546956814825535e-05], "choice_history": [96, 173, 358, 105, 152, "Slam", "<EOS>", 346, 50, 174, "Spell", "Card", "<EOS>", 359, 137, 326, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 13, 143, 13, 143, 21, 174, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 126, 225, 13, 143, 21, 174, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 346, 50, 174, "self", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "SpellCard", "_type": "Name"}], "body": [{"hole2": "WARRIOR", "hole0": "Slam", "_type": "Template8", "hole3": "target_func", "hole1": 2, "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "attr": "targeting", "_type": "Attribute"}, "attr": "find_spell_target", "_type": "Attribute"}}, {"hole1": "die", "_type": "Template3", "hole0": {"value": {"id": "self", "_type": "Name"}, "attr": "target", "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}]}], "name": "Slam", "_type": "ClassDef"}], "_type": "Module"}}]}
{"gold_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.NONE, battlecry=\n            Battlecry(Silence(), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "beams": [{"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(Frozen()),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -1.432060929376064, "score_history": [-0.000141143798828125, -1.9073486328125e-05, -0.00020489977032411844, -2.1457663024193607e-05, -1.1827796697616577e-07, -8.118152618408203e-05, -3.576278118089249e-07, -0.0008602142333984375, -0.0007572174072265625, -0.4025917053222656, -3.8146954466355965e-06, -0.14719915390014648, -1.3113070963299833e-05, -5.14984130859375e-05, -0.2556290626525879, -3.099436753473128e-06, -0.029622100293636322, -0.0003570028638932854, -0.010207176208496094, -0.16776466369628906, -2.09808349609375e-05, -0.24472135305404663, -0.007215321995317936, -0.03007650375366211, -4.9948692321777344e-05, 0.0, -0.00531005859375, -2.47955322265625e-05, -9.5367431640625e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.05755901336669922, -5.316734313964844e-05, -4.971027374267578e-05, -5.340576171875e-05, -0.0001697540283203125, -0.0018510818481445312, -1.1563293810468167e-05, -0.00058746337890625, -1.1444091796875e-05, -0.0001475811004638672, -8.416175842285156e-05, 0.0, -6.35385513305664e-05, 0.0, -0.0002340078353881836, 0.0, -0.0002536773681640625, -0.0002536773681640625, -3.24249267578125e-05, 0.0, 0.0, -0.06757426261901855, 0.0], "choice_history": [97, 283, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Spellbreaker", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Silence", "<EOS>", 346, 88, 325, "Frozen", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "CharacterSelector", "hole2": "COMMON", "hole0": "Spellbreaker", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "Frozen"}]}], "hole0": "Spellbreaker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(Silence()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -2.5148469636182256, "score_history": [-0.000141143798828125, -1.9073486328125e-05, -0.00020489977032411844, -2.1457663024193607e-05, -1.1827796697616577e-07, -8.118152618408203e-05, -3.576278118089249e-07, -0.0008602142333984375, -0.0007572174072265625, -2.2352094650268555, -0.00021040314459241927, -0.00032341480255126953, -1.3709082850255072e-05, -4.38690185546875e-05, -0.10507678985595703, -2.3841855067985307e-07, -0.0019231970654800534, -0.00019775607506744564, -0.0003604888916015625, -0.0008525848388671875, -9.5367431640625e-06, -0.076240174472332, -0.011942122131586075, -0.041258811950683594, -3.4570634852570947e-06, -6.341745029203594e-05, -0.0003711628960445523, 0.0, -0.002130683045834303, 0.0, -0.0002765655517578125, -0.0001049041748046875, -4.57763671875e-05, 0.0, 0.0, -0.0361027717590332, 0.0], "choice_history": [97, 283, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Spellbreaker", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Silence", "<EOS>", 346, 88, 325, "Silence", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 4}], "hole2": [{"hole5": "PlayerSelector", "hole2": "COMMON", "hole0": "Spellbreaker", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "Silence"}]}], "hole0": "Spellbreaker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(Frozen()),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -3.0613728746984066, "score_history": [-0.000141143798828125, -1.9073486328125e-05, -0.00020489977032411844, -2.1457663024193607e-05, -1.1827796697616577e-07, -8.118152618408203e-05, -3.576278118089249e-07, -0.0008602142333984375, -0.0007572174072265625, -0.4025917053222656, -3.8146954466355965e-06, -0.14719915390014648, -1.3113070963299833e-05, -5.14984130859375e-05, -1.7412590980529785, -0.0007650410407222807, -0.00013935391325503588, -0.002486824756488204, -0.03290081024169922, -0.30029773712158203, -2.288818359375e-05, -0.25269436836242676, -0.007126278709620237, -0.03651785850524902, -4.6253204345703125e-05, 0.0, -0.005829811096191406, -2.47955322265625e-05, -9.5367431640625e-06, -5.53131103515625e-05, -9.5367431640625e-06, -6.29425048828125e-05, -3.814697265625e-06, -0.05710792541503906, -5.900859832763672e-05, -5.161762237548828e-05, -5.340576171875e-05, -0.00017547607421875, -0.0017786026000976562, -1.1682502190524247e-05, -0.0005893707275390625, -1.33514404296875e-05, -0.0001513957977294922, -8.594989776611328e-05, 0.0, -6.151199340820312e-05, 0.0, -0.0002281665802001953, 0.0, -0.0002536773681640625, -0.000255584716796875, -3.24249267578125e-05, 0.0, 0.0, -0.06826651096343994, 0.0], "choice_history": [97, 283, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Spellbreaker", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 346, 88, 325, "Frozen", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "CharacterSelector", "hole2": "RARE", "hole0": "Spellbreaker", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "Frozen"}]}], "hole0": "Spellbreaker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(Silence()),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -3.315998001384912, "score_history": [-0.000141143798828125, -1.9073486328125e-05, -0.00020489977032411844, -2.1457663024193607e-05, -1.1827796697616577e-07, -8.118152618408203e-05, -3.576278118089249e-07, -0.0008602142333984375, -0.0007572174072265625, -0.4025917053222656, -3.8146954466355965e-06, -0.14719915390014648, -1.3113070963299833e-05, -5.14984130859375e-05, -0.2556290626525879, -3.099436753473128e-06, -0.029622100293636322, -0.0003570028638932854, -0.010207176208496094, -0.16776466369628906, -2.09808349609375e-05, -2.0193324089050293, -0.007422921247780323, -0.13994832336902618, -7.092952728271484e-05, 0.0, -0.0044269561767578125, -2.86102294921875e-05, -7.62939453125e-06, -5.91278076171875e-05, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.057479143142700195, -6.473064422607422e-05, -5.161762237548828e-05, -4.9591064453125e-05, -0.000164031982421875, -0.001868128776550293, -9.536735888104886e-06, -0.000598907470703125, -1.1444091796875e-05, -0.0001475811004638672, -9.167194366455078e-05, 0.0, -6.35385513305664e-05, 0.0, -0.0002340078353881836, 0.0, -0.00025177001953125, -0.000255584716796875, -3.24249267578125e-05, 0.0, 0.0, -0.06771731376647949, 0.0], "choice_history": [97, 283, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Spellbreaker", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Silence", "<EOS>", 346, 88, 325, "Silence", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "CharacterSelector", "hole2": "COMMON", "hole0": "Spellbreaker", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "Silence"}]}], "hole0": "Spellbreaker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(Frozen()),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n", "score": -4.092703553277431, "score_history": [-0.000141143798828125, -1.9073486328125e-05, -0.00020489977032411844, -2.1457663024193607e-05, -1.1827796697616577e-07, -8.118152618408203e-05, -3.576278118089249e-07, -0.0008602142333984375, -0.0007572174072265625, -0.4025917053222656, -3.8146954466355965e-06, -0.14719915390014648, -1.3113070963299833e-05, -5.14984130859375e-05, -0.2556290626525879, -3.099436753473128e-06, -0.029622100293636322, -0.0003570028638932854, -0.010207176208496094, -0.16776466369628906, -2.09808349609375e-05, -0.24472135305404663, -0.007215321995317936, -0.03007650375366211, -4.9948692321777344e-05, 0.0, -0.00531005859375, -2.47955322265625e-05, -9.5367431640625e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.9591064453125e-05, -3.814697265625e-06, -0.05755901336669922, -5.316734313964844e-05, -4.971027374267578e-05, -5.340576171875e-05, -0.0001697540283203125, -0.0018510818481445312, -1.1563293810468167e-05, -0.00058746337890625, -1.1444091796875e-05, -0.0001475811004638672, -8.416175842285156e-05, 0.0, -6.35385513305664e-05, 0.0, -0.0002340078353881836, 0.0, -0.0002536773681640625, -0.0002536773681640625, -3.24249267578125e-05, 0.0, 0.0, -2.7282168865203857, 0.0], "choice_history": [97, 283, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Spellbreaker", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Silence", "<EOS>", 346, 88, 325, "Frozen", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "CharacterSelector", "hole2": "COMMON", "hole0": "Spellbreaker", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "Frozen"}]}], "hole0": "Spellbreaker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence([Buff(\n            ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.152457656564074, "score_history": [-0.000141143798828125, -1.9073486328125e-05, -0.00020489977032411844, -2.1457663024193607e-05, -1.1827796697616577e-07, -8.118152618408203e-05, -3.576278118089249e-07, -0.0008602142333984375, -0.0007572174072265625, -0.4025917053222656, -3.8146954466355965e-06, -0.14719915390014648, -1.3113070963299833e-05, -5.14984130859375e-05, -0.2556290626525879, -3.099436753473128e-06, -0.029622100293636322, -0.0003570028638932854, -0.010207176208496094, -2.8438873291015625, -0.07181549072265625, -0.0017465449636802077, -0.0006206035614013672, -2.1457672119140625e-06, 0.0, -7.62939453125e-05, -0.00011444091796875, -0.08324787020683289, 0.0, -0.0032813549041748047, -0.0002155303955078125, -5.006789251638111e-06, -0.001604666467756033, -1.9073486328125e-06, -0.002868891693651676, -1.9073486328125e-06, 0.0, -0.18830299377441406, -9.72747802734375e-05, -3.814697265625e-06, -0.022925734519958496, -5.841255187988281e-06, -0.0001068115234375, -3.814697265625e-06, -0.0007853507995605469, -7.462501525878906e-05, -1.1920928244535389e-07, -2.8014157578581944e-05, 0.0, -0.00018894672393798828, 0.0, -0.000274658203125, -0.00031280517578125, -3.24249267578125e-05, 0.0, 0.0, -0.0820610523223877, 0.0], "choice_history": [97, 283, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Spellbreaker", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Silence", "<EOS>", 346, 58, 231, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "COMMON", "hole0": "Spellbreaker", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": 1, "_type": "Template32", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}]}], "hole0": "Spellbreaker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(Frozen()),\n            CharacterSelector(players=EnemyPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.422175141403102, "score_history": [-0.000141143798828125, -1.9073486328125e-05, -0.00020489977032411844, -2.1457663024193607e-05, -1.1827796697616577e-07, -8.118152618408203e-05, -3.576278118089249e-07, -0.0008602142333984375, -0.0007572174072265625, -0.4025917053222656, -3.8146954466355965e-06, -0.14719915390014648, -1.3113070963299833e-05, -5.14984130859375e-05, -0.2556290626525879, -3.099436753473128e-06, -0.029622100293636322, -0.0003570028638932854, -0.010207176208496094, -0.16776466369628906, -2.09808349609375e-05, -0.24472135305404663, -0.007215321995317936, -0.03007650375366211, -4.9948692321777344e-05, 0.0, -0.00531005859375, -2.47955322265625e-05, -9.5367431640625e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.9591064453125e-05, -3.814697265625e-06, -3.049053192138672, -0.0001176595687866211, -1.9073486328125e-06, -6.4849853515625e-05, -0.0001201629638671875, -0.0015902519226074219, -1.2636171959456988e-05, -0.0006275177001953125, -1.1444091796875e-05, -0.0001513957977294922, -8.785724639892578e-05, 0.0, -5.578994387178682e-05, 0.0, -0.0002416372299194336, 0.0, -0.00025177001953125, -0.000240325927734375, -3.24249267578125e-05, 0.0, 0.0, -0.06644332408905029, 0.0], "choice_history": [97, 283, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Spellbreaker", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Silence", "<EOS>", 346, 88, 325, "Frozen", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "CharacterSelector", "hole2": "COMMON", "hole0": "Spellbreaker", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "Frozen"}]}], "hole0": "Spellbreaker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker Spellbreaker', 4, CHARACTER_CLASS.\n            ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Silence(Frozen()),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.856273348020238, "score_history": [-0.000141143798828125, -1.9073486328125e-05, -0.00020489977032411844, -2.1457663024193607e-05, -1.1827796697616577e-07, -8.118152618408203e-05, -3.576278118089249e-07, -0.0008602142333984375, -0.0007572174072265625, -0.4025917053222656, -3.8146954466355965e-06, -2.02217435836792, -0.7977262735366821, -1.3589859008789062e-05, -1.3232252968009561e-05, -2.09808349609375e-05, -0.001956939697265625, -3.933906555175781e-06, -1.0820063352584839, -0.00026332223205827177, -0.000652313232421875, -0.24710845947265625, -2.288818359375e-05, -0.13793757557868958, -0.008323607966303825, -0.018132686614990234, -3.8504600524902344e-05, 0.0, -0.005150794982910156, -2.288818359375e-05, -9.5367431640625e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.057473063468933105, -4.565715789794922e-05, -4.398822784423828e-05, -5.340576171875e-05, -0.00017547607421875, -0.0019102096557617188, -1.1682502190524247e-05, -0.0005931854248046875, -1.1444091796875e-05, -0.0001646280288696289, -7.653236389160156e-05, 0.0, -5.97238504269626e-05, 0.0, -0.00023221969604492188, 0.0, -0.0002460479736328125, -0.000263214111328125, -3.24249267578125e-05, 0.0, 0.0, -0.06851232051849365, 0.0], "choice_history": [97, 283, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Spellbreaker", " ", "Spellbreaker", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Silence", "<EOS>", 346, 88, 325, "Frozen", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "CharacterSelector", "hole2": "COMMON", "hole0": "Spellbreaker Spellbreaker", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "Frozen"}]}], "hole0": "Spellbreaker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker Spellbreaker', 4, CHARACTER_CLASS.\n            ALL, CARD_RARITY.COMMON, battlecry=Battlecry(Give(Silence(1)),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.90792692214648, "score_history": [-0.000141143798828125, -1.9073486328125e-05, -0.00020489977032411844, -2.1457663024193607e-05, -1.1827796697616577e-07, -8.118152618408203e-05, -3.576278118089249e-07, -0.0008602142333984375, -0.0007572174072265625, -0.4025917053222656, -3.8146954466355965e-06, -2.02217435836792, -0.7977262735366821, -1.3589859008789062e-05, -1.3232252968009561e-05, -2.09808349609375e-05, -0.001956939697265625, -3.933906555175781e-06, -0.42337819933891296, -0.014181248843669891, -1.9073486328125e-06, -0.41675662994384766, -0.0015325546264648438, -0.008946520276367664, -0.20803533494472504, -0.04712682217359543, -1.1920928244535389e-07, -4.760921001434326e-05, -9.21487808227539e-05, -2.2649765014648438e-06, -0.3478994369506836, -9.918212890625e-05, -3.814697265625e-06, -0.0004960298538208008, 0.0, -3.0517578125e-05, -1.33514404296875e-05, -0.14013028144836426, -7.581710815429688e-05, -7.748603820800781e-06, -6.103515625e-05, -9.72747802734375e-05, -0.003399968147277832, -1.2516963579400908e-05, -0.000499725341796875, -5.7220458984375e-06, -0.0001723766326904297, -5.936622619628906e-05, 0.0, -6.580352055607364e-05, 0.0, -0.00023066997528076172, 0.0, -0.0002689361572265625, -0.0002117156982421875, -3.24249267578125e-05, 0.0, 0.0, -0.06736135482788086, 0.0], "choice_history": [97, 283, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Spellbreaker", " ", "Spellbreaker", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Give", "<EOS>", 346, 84, 315, "Silence", "<EOS>", "1", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "COMMON", "hole0": "Spellbreaker Spellbreaker", "_type": "Template15", "hole3": "Give", "hole1": 4, "hole4": [{"hole1": 1, "_type": "Template74", "hole0": "Silence"}]}], "hole0": "Spellbreaker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker Silence', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(Frozen()),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -4.981572818038266, "score_history": [-0.000141143798828125, -1.9073486328125e-05, -0.00020489977032411844, -2.1457663024193607e-05, -1.1827796697616577e-07, -8.118152618408203e-05, -3.576278118089249e-07, -0.0008602142333984375, -0.0007572174072265625, -0.4025917053222656, -3.8146954466355965e-06, -2.02217435836792, -1.3985010385513306, -1.1920928244535389e-07, -1.4781986465095542e-05, -1.33514404296875e-05, -0.006732940673828125, -2.2649765014648438e-06, -0.6579575538635254, -0.0003073043772019446, -0.00113677978515625, -0.20873737335205078, -2.09808349609375e-05, -0.11797135323286057, -0.008006392046809196, -0.019369959831237793, -3.8504600524902344e-05, 0.0, -0.0051784515380859375, -2.288818359375e-05, -7.62939453125e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.57763671875e-05, -3.814697265625e-06, -0.058231234550476074, -4.756450653076172e-05, -4.589557647705078e-05, -5.53131103515625e-05, -0.0001735687255859375, -0.0019102096557617188, -1.1563293810468167e-05, -0.0005931854248046875, -1.1444091796875e-05, -0.0001665353775024414, -7.843971252441406e-05, 0.0, -5.97238504269626e-05, 0.0, -0.0002340078353881836, 0.0, -0.000247955322265625, -0.0002613067626953125, -3.24249267578125e-05, 0.0, 0.0, -0.06842660903930664, 0.0], "choice_history": [97, 283, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Spellbreaker", " ", "Silence", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Silence", "<EOS>", 346, 88, 325, "Frozen", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "CharacterSelector", "hole2": "COMMON", "hole0": "Spellbreaker Silence", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "Frozen"}]}], "hole0": "Spellbreaker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Silence(Frozen()),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -5.122957324392644, "score_history": [-0.000141143798828125, -1.9073486328125e-05, -0.00020489977032411844, -2.1457663024193607e-05, -1.1827796697616577e-07, -8.118152618408203e-05, -3.576278118089249e-07, -0.0008602142333984375, -0.0007572174072265625, -0.4025917053222656, -3.8146954466355965e-06, -0.14719915390014648, -1.3113070963299833e-05, -5.14984130859375e-05, -3.721259593963623, -0.00041526640416122973, -0.0005217617144808173, -4.9591064453125e-05, -0.00677490234375, -0.3875265121459961, -7.62939453125e-06, -0.2697201669216156, -0.004199846647679806, -0.04449009895324707, -4.220008850097656e-05, 0.0, -0.005484580993652344, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-05, -7.62939453125e-06, -5.7220458984375e-05, -5.7220458984375e-06, -0.058666229248046875, -5.698204040527344e-05, -5.352497100830078e-05, -5.340576171875e-05, -0.0001678466796875, -0.0018547773361206055, -1.1563293810468167e-05, -0.0005931854248046875, -1.33514404296875e-05, -0.0001494884490966797, -8.785724639892578e-05, 0.0, -6.16312026977539e-05, 0.0, -0.0002321004867553711, 0.0, -0.00025177001953125, -0.000255584716796875, -3.24249267578125e-05, 0.0, 0.0, -0.06781637668609619, 0.0], "choice_history": [97, 283, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Spellbreaker", "<EOS>", "4", "<EOS>", "EPIC", "<EOS>", "Silence", "<EOS>", 346, 88, 325, "Frozen", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "CharacterSelector", "hole2": "EPIC", "hole0": "Spellbreaker", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "Frozen"}]}], "hole0": "Spellbreaker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(Silence()),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -5.133862381730012, "score_history": [-0.000141143798828125, -1.9073486328125e-05, -0.00020489977032411844, -2.1457663024193607e-05, -1.1827796697616577e-07, -8.118152618408203e-05, -3.576278118089249e-07, -0.0008602142333984375, -0.0007572174072265625, -0.4025917053222656, -3.8146954466355965e-06, -0.14719915390014648, -1.3113070963299833e-05, -5.14984130859375e-05, -1.7412590980529785, -0.0007650410407222807, -0.00013935391325503588, -0.002486824756488204, -0.03290081024169922, -0.30029773712158203, -2.288818359375e-05, -2.1753673553466797, -0.007596730254590511, -0.1872599869966507, -5.9485435485839844e-05, 0.0, -0.0046367645263671875, -2.6702880859375e-05, -7.62939453125e-06, -6.29425048828125e-05, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.05669903755187988, -7.2479248046875e-05, -5.543231964111328e-05, -5.340576171875e-05, -0.000164031982421875, -0.0018280744552612305, -1.1444084520917386e-05, -0.00060272216796875, -1.33514404296875e-05, -0.0001494884490966797, -9.357929229736328e-05, 0.0, -6.16312026977539e-05, 0.0, -0.0002281665802001953, 0.0, -0.0002536773681640625, -0.0002593994140625, -3.24249267578125e-05, 0.0, 0.0, -0.06837153434753418, 0.0], "choice_history": [97, 283, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Spellbreaker", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 346, 88, 325, "Silence", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "CharacterSelector", "hole2": "RARE", "hole0": "Spellbreaker", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "Silence"}]}], "hole0": "Spellbreaker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker 4', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(Silence(1)),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -5.428540187341177, "score_history": [-0.000141143798828125, -1.9073486328125e-05, -0.00020489977032411844, -2.1457663024193607e-05, -1.1827796697616577e-07, -8.118152618408203e-05, -3.576278118089249e-07, -0.0008602142333984375, -0.0007572174072265625, -0.4025917053222656, -3.8146954466355965e-06, -2.02217435836792, -1.3086719512939453, 0.0, -1.740454899845645e-05, -2.6702880859375e-05, -0.011348724365234375, -2.0265579223632812e-06, -0.4671862721443176, -0.011968176811933517, 0.0, -0.41024208068847656, -0.0016574859619140625, -0.01090850867331028, -0.181504487991333, -0.039779651910066605, -1.1920928244535389e-07, -4.6834349632263184e-05, -9.40561294555664e-05, -2.2649765014648438e-06, -0.3412036895751953, -9.918212890625e-05, -3.814697265625e-06, -0.0004788637161254883, 0.0, -3.0517578125e-05, -1.33514404296875e-05, -0.14407265186309814, -7.581710815429688e-05, -7.748603820800781e-06, -6.103515625e-05, -9.72747802734375e-05, -0.0034285783767700195, -1.2516963579400908e-05, -0.0004940032958984375, -5.7220458984375e-06, -0.0001723766326904297, -5.936622619628906e-05, 0.0, -6.568431126652285e-05, 0.0, -0.00023245811462402344, 0.0, -0.000270843505859375, -0.000209808349609375, -3.24249267578125e-05, 0.0, 0.0, -0.0671001672744751, 0.0], "choice_history": [97, 283, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Spellbreaker", " ", "4", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Give", "<EOS>", 346, 84, 315, "Silence", "<EOS>", "1", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "COMMON", "hole0": "Spellbreaker 4", "_type": "Template15", "hole3": "Give", "hole1": 4, "hole4": [{"hole1": 1, "_type": "Template74", "hole0": "Silence"}]}], "hole0": "Spellbreaker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(Frozen()),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n", "score": -5.7114601120565, "score_history": [-0.000141143798828125, -1.9073486328125e-05, -0.00020489977032411844, -2.1457663024193607e-05, -1.1827796697616577e-07, -8.118152618408203e-05, -3.576278118089249e-07, -0.0008602142333984375, -0.0007572174072265625, -0.4025917053222656, -3.8146954466355965e-06, -0.14719915390014648, -1.3113070963299833e-05, -5.14984130859375e-05, -1.7412590980529785, -0.0007650410407222807, -0.00013935391325503588, -0.002486824756488204, -0.03290081024169922, -0.30029773712158203, -2.288818359375e-05, -0.25269436836242676, -0.007126278709620237, -0.03651785850524902, -4.6253204345703125e-05, 0.0, -0.005829811096191406, -2.47955322265625e-05, -9.5367431640625e-06, -5.53131103515625e-05, -9.5367431640625e-06, -6.29425048828125e-05, -3.814697265625e-06, -0.05710792541503906, -5.900859832763672e-05, -5.161762237548828e-05, -5.340576171875e-05, -0.00017547607421875, -0.0017786026000976562, -1.1682502190524247e-05, -0.0005893707275390625, -1.33514404296875e-05, -0.0001513957977294922, -8.594989776611328e-05, 0.0, -6.151199340820312e-05, 0.0, -0.0002281665802001953, 0.0, -0.0002536773681640625, -0.000255584716796875, -3.24249267578125e-05, 0.0, 0.0, -2.718353748321533, 0.0], "choice_history": [97, 283, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Spellbreaker", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 346, 88, 325, "Frozen", "<EOS>", "Character", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 4}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "CharacterSelector", "hole2": "RARE", "hole0": "Spellbreaker", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "Frozen"}]}], "hole0": "Spellbreaker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(Silence()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n", "score": -5.81822769138617, "score_history": [-0.000141143798828125, -1.9073486328125e-05, -0.00020489977032411844, -2.1457663024193607e-05, -1.1827796697616577e-07, -8.118152618408203e-05, -3.576278118089249e-07, -0.0008602142333984375, -0.0007572174072265625, -2.2352094650268555, -0.00021040314459241927, -0.00032341480255126953, -1.3709082850255072e-05, -4.38690185546875e-05, -0.10507678985595703, -2.3841855067985307e-07, -0.0019231970654800534, -0.00019775607506744564, -0.0003604888916015625, -0.0008525848388671875, -9.5367431640625e-06, -0.076240174472332, -0.011942122131586075, -0.041258811950683594, -3.4570634852570947e-06, -6.341745029203594e-05, -0.0003711628960445523, 0.0, -0.002130683045834303, 0.0, -0.0002765655517578125, -0.0001049041748046875, -4.57763671875e-05, 0.0, 0.0, -3.3394834995269775, 0.0], "choice_history": [97, 283, "Spellbreaker", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Spellbreaker", "<EOS>", "4", "<EOS>", "COMMON", "<EOS>", "Silence", "<EOS>", 346, 88, 325, "Silence", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "4", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 4}], "hole2": [{"hole5": "PlayerSelector", "hole2": "COMMON", "hole0": "Spellbreaker", "_type": "Template15", "hole3": "Silence", "hole1": 4, "hole4": [{"_type": "Template79", "hole0": "Silence"}]}], "hole0": "Spellbreaker", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Buff(Taunt())),\n            MinionSelector(Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "beams": [{"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(Give(2)),\n            MinionSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -2.527316803981236, "score_history": [-7.82012939453125e-05, -1.52587890625e-05, -0.01331479474902153, -0.0004525412223301828, -4.4941134547116235e-05, -9.424984455108643e-07, -4.5299530029296875e-06, -1.1920922133867862e-06, -2.09808349609375e-05, -0.0015020370483398438, -0.03602409362792969, -1.7881377516459906e-06, -1.251697449333733e-05, -1.1920922133867862e-06, -0.00055694580078125, -2.6464462280273438e-05, -1.9073486328125e-06, -0.0031987428665161133, -4.768359940499067e-05, -0.06543706357479095, -0.05328581854701042, -0.020406058058142662, -0.10097789764404297, -1.249903678894043, -0.000316619873046875, -0.043832410126924515, -0.001568673993460834, -0.05212222412228584, -1.1920928244535389e-07, -0.000942903570830822, -9.667869016993791e-05, -1.1920928244535389e-07, -0.6570014953613281, -0.0005321502685546875, -1.9073486328125e-06, -0.15198779106140137, -3.087520235567354e-05, -0.00542449951171875, -1.71661376953125e-05, -0.06699248403310776, -0.00040709972381591797, -3.504753112792969e-05, -1.9073486328125e-06, -0.000303268083371222, 0.0, -1.33514404296875e-05, -5.7220458984375e-05, -4.9591064453125e-05, -1.0728830375228426e-06, -3.576278118089249e-07, -0.0002624988555908203, 0.0], "choice_history": [97, 283, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 84, 315, "Give", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "RARE", "hole0": "Sunfury Protector", "_type": "Template15", "hole3": "GiveAura", "hole1": 2, "hole4": [{"hole1": 2, "_type": "Template74", "hole0": "Give"}]}], "hole0": "SunfuryProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura('health',\n            'attack', True), MinionSelector(players=BothPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -3.229041774145003, "score_history": [-7.82012939453125e-05, -1.52587890625e-05, -0.01331479474902153, -0.0004525412223301828, -4.4941134547116235e-05, -9.424984455108643e-07, -4.5299530029296875e-06, -1.1920922133867862e-06, -2.09808349609375e-05, -0.0015020370483398438, -0.03602409362792969, -1.7881377516459906e-06, -1.251697449333733e-05, -1.1920922133867862e-06, -0.00055694580078125, -2.6464462280273438e-05, -1.9073486328125e-06, -0.0031987428665161133, -4.768359940499067e-05, -0.06543706357479095, -0.05328581854701042, -0.020406058058142662, -2.4428606033325195, -0.41590118408203125, -1.52587890625e-05, -0.04988747090101242, -3.4332275390625e-05, -0.0020580291748046875, -8.58306884765625e-05, -0.0468825064599514, -1.9073486328125e-06, -0.051039695739746094, -0.0004749298095703125, -0.00015938271826598793, -1.9073486328125e-06, -0.0006487881764769554, -0.0007698535919189453, 0.0, -0.0032672882080078125, -0.000209808349609375, -1.52587890625e-05, -0.002559661865234375, 0.0, -4.1961669921875e-05, 0.0, -0.0087432861328125, -0.00017166136240120977, -2.1457672119140625e-06, -3.0517578125e-05, -4.76837158203125e-05, -0.006655216217041016, -5.841255187988281e-06, -0.0011272430419921875, 0.0, -0.0001544952392578125, -5.638599395751953e-05, 0.0, -1.0251998901367188e-05, 0.0, -0.0004413127899169922, 0.0, -1.1444091796875e-05, -7.43865966796875e-05, -2.47955322265625e-05, -1.1920922133867862e-06, -4.768370445162873e-07, -0.0001320838782703504, 0.0], "choice_history": [97, 283, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 348, 53, 183, "health", "<EOS>", 53, 183, "attack", "<EOS>", 51, 175, "False", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "RARE", "hole0": "Sunfury Protector", "_type": "Template15", "hole3": "GiveAura", "hole1": 2, "hole4": [{"s": "health", "_type": "Str"}, {"s": "attack", "_type": "Str"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "SunfuryProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(Give(2)),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -3.241349968385272, "score_history": [-7.82012939453125e-05, -1.52587890625e-05, -0.01331479474902153, -0.0004525412223301828, -4.4941134547116235e-05, -9.424984455108643e-07, -4.5299530029296875e-06, -1.1920922133867862e-06, -2.09808349609375e-05, -0.0015020370483398438, -0.03602409362792969, -1.7881377516459906e-06, -1.251697449333733e-05, -1.1920922133867862e-06, -0.00055694580078125, -2.6464462280273438e-05, -1.9073486328125e-06, -0.0031987428665161133, -4.768359940499067e-05, -0.06543706357479095, -0.05328581854701042, -0.020406058058142662, -0.10097789764404297, -1.249903678894043, -0.000316619873046875, -0.043832410126924515, -0.001568673993460834, -0.05212222412228584, -1.1920928244535389e-07, -0.000942903570830822, -9.667869016993791e-05, -1.1920928244535389e-07, -1.4938764572143555, -0.0001850128173828125, -9.5367431640625e-06, -0.007701873779296875, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.08768630027770996, -0.00010466574167367071, -3.933906555175781e-06, -2.6702880859375e-05, -0.00011444091796875, -0.005622506141662598, -2.5033950805664062e-05, -0.0008296966552734375, 0.0, -0.0002574920654296875, -3.6358829675009474e-05, -1.1920928244535389e-07, -8.463859558105469e-06, 0.0, -0.00042045116424560547, 0.0, -1.52587890625e-05, -4.76837158203125e-05, -2.288818359375e-05, -1.0728830375228426e-06, -4.768370445162873e-07, -0.00012600420450326055, 0.0], "choice_history": [97, 283, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 84, 315, "Give", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "RARE", "hole0": "Sunfury Protector", "_type": "Template15", "hole3": "GiveAura", "hole1": 2, "hole4": [{"hole1": 2, "_type": "Template74", "hole0": "Give"}]}], "hole0": "SunfuryProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(Give(2)),\n            MinionSelector(players=BothPlayer(), picker=UserPicker(),\n            condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.196186456013791, "score_history": [-7.82012939453125e-05, -1.52587890625e-05, -0.01331479474902153, -0.0004525412223301828, -4.4941134547116235e-05, -9.424984455108643e-07, -4.5299530029296875e-06, -1.1920922133867862e-06, -2.09808349609375e-05, -0.0015020370483398438, -0.03602409362792969, -1.7881377516459906e-06, -1.251697449333733e-05, -1.1920922133867862e-06, -0.00055694580078125, -2.6464462280273438e-05, -1.9073486328125e-06, -0.0031987428665161133, -4.768359940499067e-05, -0.06543706357479095, -0.05328581854701042, -0.020406058058142662, -0.10097789764404297, -1.249903678894043, -0.000316619873046875, -0.043832410126924515, -0.001568673993460834, -0.05212222412228584, -1.1920928244535389e-07, -0.000942903570830822, -9.667869016993791e-05, -1.1920928244535389e-07, -1.7558107376098633, -0.0056324005126953125, -1.1444091796875e-05, -0.0063152313232421875, -7.05718994140625e-05, -4.57763671875e-05, 0.0, -0.1954631805419922, -0.0006711483001708984, -1.728534698486328e-05, -0.0010156631469726562, -8.392333984375e-05, -0.04795050621032715, -4.589557647705078e-05, -0.0017757415771484375, 0.0, -0.0003452301025390625, -6.16312026977539e-05, 0.0, -0.0029039382934570312, -7.62939453125e-05, -0.5247117280960083, -0.0002288818359375, -0.004391670227050781, -0.0017719268798828125, -0.0010826587677001953, -3.814697265625e-06, -0.00023925304412841797, 0.0, -0.0007915495079942048, 0.0, -2.288818359375e-05, -0.0001926422119140625, -2.47955322265625e-05, -2.3841855067985307e-07, -8.344646857949556e-07, -0.00022995471954345703, 0.0], "choice_history": [97, 283, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 84, 315, "Give", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 355, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", 95, 336, "condition", "<EOS>", 22, 176, "Null", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "RARE", "hole0": "Sunfury Protector", "_type": "Template15", "hole3": "GiveAura", "hole1": 2, "hole4": [{"hole1": 2, "_type": "Template74", "hole0": "Give"}]}], "hole0": "SunfuryProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Give(2)),\n            MinionSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.251774813111339, "score_history": [-7.82012939453125e-05, -1.52587890625e-05, -0.01331479474902153, -0.0004525412223301828, -4.4941134547116235e-05, -9.424984455108643e-07, -4.5299530029296875e-06, -1.1920922133867862e-06, -2.09808349609375e-05, -0.0015020370483398438, -0.03602409362792969, -1.7881377516459906e-06, -1.251697449333733e-05, -1.1920922133867862e-06, -0.00055694580078125, -2.6464462280273438e-05, -1.9073486328125e-06, -0.0031987428665161133, -4.768359940499067e-05, -0.06543706357479095, -3.0163424015045166, -0.000152587890625, -0.17511749267578125, -0.0002117156982421875, -0.05277971923351288, -0.01643514260649681, -0.03906140848994255, -1.1920928244535389e-07, -0.00103079155087471, -0.00010406967339804396, -1.1920928244535389e-07, -0.6270914077758789, -0.0005788803100585938, -1.9073486328125e-06, -0.12778925895690918, -2.694129761948716e-05, -0.005817413330078125, -1.71661376953125e-05, -0.06738562136888504, -0.00036704540252685547, -3.504753112792969e-05, -1.9073486328125e-06, -0.00029683078173547983, 0.0, -1.33514404296875e-05, -5.7220458984375e-05, -4.9591064453125e-05, -1.0728830375228426e-06, -3.576278118089249e-07, -0.0002644062042236328, 0.0], "choice_history": [97, 283, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 346, 84, 315, "Give", "<EOS>", "2", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "RARE", "hole0": "Sunfury Protector", "_type": "Template15", "hole3": "Give", "hole1": 2, "hole4": [{"hole1": 2, "_type": "Template74", "hole0": "Give"}]}], "hole0": "SunfuryProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(2), CardSelector(condition=Adjacent()), MinionPlaced\n            ())), PlayerSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.255594360366388, "score_history": [-7.82012939453125e-05, -1.52587890625e-05, -0.01331479474902153, -0.0004525412223301828, -4.4941134547116235e-05, -9.424984455108643e-07, -4.5299530029296875e-06, -1.1920922133867862e-06, -2.09808349609375e-05, -0.0015020370483398438, -0.03602409362792969, -1.7881377516459906e-06, -1.251697449333733e-05, -1.1920922133867862e-06, -0.00055694580078125, -2.6464462280273438e-05, -1.9073486328125e-06, -0.0031987428665161133, -4.768359940499067e-05, -0.06543706357479095, -0.05328581854701042, -0.020406058058142662, -0.10097789764404297, -0.3870697021484375, -0.0776205062866211, -0.03319406509399414, -0.0031228065490722656, -1.9073486328125e-06, -0.006290078163146973, -0.00046276854118332267, -5.7220458984375e-05, -4.38690185546875e-05, -0.13283824920654297, -5.53131103515625e-05, -0.5230324268341064, 0.0, -0.010670304298400879, -0.00044357776641845703, 0.0, -0.016752243041992188, -8.96453857421875e-05, -4.57763671875e-05, -0.05136573314666748, -2.1457601178553887e-05, -0.0015411376953125, 0.0, -0.7099364995956421, -0.0017738251481205225, -0.01698589324951172, -0.777819037437439, -0.0002690553665161133, -0.04762382060289383, -0.002241243841126561, -1.33514404296875e-05, -0.09633350372314453, -0.0001888275146484375, -3.814697265625e-06, -0.962540864944458, -4.88758041683468e-06, -0.009114265441894531, -7.62939453125e-06, -0.0891321524977684, -0.00021266935800667852, -6.16312026977539e-05, -3.814697265625e-06, -0.00027680385392159224, 0.0, -5.7220458984375e-06, -0.00043487548828125, -5.53131103515625e-05, -5.960462772236497e-07, -7.152555099310121e-07, -0.00042116641998291016, 0.0], "choice_history": [97, 283, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "2", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Sunfury Protector", "_type": "Template15", "hole3": "GiveAura", "hole1": 2, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "SunfuryProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(2), CardSelector(condition=IsMinion()), MinionPlaced\n            ())), PlayerSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.36356797647079, "score_history": [-7.82012939453125e-05, -1.52587890625e-05, -0.01331479474902153, -0.0004525412223301828, -4.4941134547116235e-05, -9.424984455108643e-07, -4.5299530029296875e-06, -1.1920922133867862e-06, -2.09808349609375e-05, -0.0015020370483398438, -0.03602409362792969, -1.7881377516459906e-06, -1.251697449333733e-05, -1.1920922133867862e-06, -0.00055694580078125, -2.6464462280273438e-05, -1.9073486328125e-06, -0.0031987428665161133, -4.768359940499067e-05, -0.06543706357479095, -0.05328581854701042, -0.020406058058142662, -0.10097789764404297, -0.3870697021484375, -0.0776205062866211, -0.03319406509399414, -0.0031228065490722656, -1.9073486328125e-06, -0.006290078163146973, -0.00046276854118332267, -5.7220458984375e-05, -4.38690185546875e-05, -0.13283824920654297, -5.53131103515625e-05, -0.5230324268341064, 0.0, -0.010670304298400879, -0.00044357776641845703, 0.0, -0.016752243041992188, -8.96453857421875e-05, -4.57763671875e-05, -0.05136573314666748, -2.1457601178553887e-05, -0.0015411376953125, 0.0, -0.8849023580551147, -0.10531452298164368, -1.71661376953125e-05, -0.0032272350508719683, -0.6281684637069702, -0.000244140625, -0.03177913278341293, -0.0013160386588424444, -1.71661376953125e-05, -0.08132743835449219, -0.0001678466796875, -3.814697265625e-06, -0.989111065864563, -4.88758041683468e-06, -0.0095367431640625, -9.5367431640625e-06, -0.08723840117454529, -0.00020825861429329962, -5.5909156799316406e-05, -3.814697265625e-06, -0.0002472399501129985, 0.0, -7.62939453125e-06, -0.000141143798828125, -4.76837158203125e-05, -9.536738616588991e-07, -4.768370445162873e-07, -0.00033652782440185547, 0.0], "choice_history": [97, 283, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "2", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Sunfury Protector", "_type": "Template15", "hole3": "GiveAura", "hole1": 2, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "IsMinion"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "SunfuryProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(2), CardSelector(condition=Adjacent()), MinionPlaced\n            ())), PlayerSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.513984466754941, "score_history": [-7.82012939453125e-05, -1.52587890625e-05, -0.01331479474902153, -0.0004525412223301828, -4.4941134547116235e-05, -9.424984455108643e-07, -4.5299530029296875e-06, -1.1920922133867862e-06, -2.09808349609375e-05, -0.0015020370483398438, -0.03602409362792969, -1.7881377516459906e-06, -1.251697449333733e-05, -1.1920922133867862e-06, -0.00055694580078125, -2.6464462280273438e-05, -1.9073486328125e-06, -0.0031987428665161133, -4.768359940499067e-05, -0.06543706357479095, -0.05328581854701042, -0.020406058058142662, -0.10097789764404297, -0.3870697021484375, -0.0776205062866211, -0.03319406509399414, -0.0031228065490722656, -1.9073486328125e-06, -0.006290078163146973, -0.00046276854118332267, -5.7220458984375e-05, -4.38690185546875e-05, -0.13283824920654297, -5.53131103515625e-05, -0.5230324268341064, 0.0, -0.010670304298400879, -0.00044357776641845703, 0.0, -0.016752243041992188, -8.96453857421875e-05, -4.57763671875e-05, -0.05136573314666748, -2.1457601178553887e-05, -0.0015411376953125, 0.0, -0.7099364995956421, -0.0017738251481205225, -0.01698589324951172, -0.777819037437439, -0.0002690553665161133, -0.04762382060289383, -0.002241243841126561, -1.33514404296875e-05, -0.09633350372314453, -0.0001888275146484375, -3.814697265625e-06, -1.3125708103179932, -1.9073486328125e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.007375955581665039, -2.372264862060547e-05, -1.1920928244535389e-07, -2.72989236691501e-05, 0.0, -0.00025463104248046875, 0.0, -7.62939453125e-06, -0.0001544952392578125, -2.288818359375e-05, -7.152555099310121e-07, -5.960462772236497e-07, -0.0001480579376220703, 0.0], "choice_history": [97, 283, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "2", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Sunfury Protector", "_type": "Template15", "hole3": "GiveAura", "hole1": 2, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "SunfuryProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(2), CardSelector(condition=IsMinion()), MinionPlaced\n            ())), PlayerSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.535476027376028, "score_history": [-7.82012939453125e-05, -1.52587890625e-05, -0.01331479474902153, -0.0004525412223301828, -4.4941134547116235e-05, -9.424984455108643e-07, -4.5299530029296875e-06, -1.1920922133867862e-06, -2.09808349609375e-05, -0.0015020370483398438, -0.03602409362792969, -1.7881377516459906e-06, -1.251697449333733e-05, -1.1920922133867862e-06, -0.00055694580078125, -2.6464462280273438e-05, -1.9073486328125e-06, -0.0031987428665161133, -4.768359940499067e-05, -0.06543706357479095, -0.05328581854701042, -0.020406058058142662, -0.10097789764404297, -0.3870697021484375, -0.0776205062866211, -0.03319406509399414, -0.0031228065490722656, -1.9073486328125e-06, -0.006290078163146973, -0.00046276854118332267, -5.7220458984375e-05, -4.38690185546875e-05, -0.13283824920654297, -5.53131103515625e-05, -0.5230324268341064, 0.0, -0.010670304298400879, -0.00044357776641845703, 0.0, -0.016752243041992188, -8.96453857421875e-05, -4.57763671875e-05, -0.05136573314666748, -2.1457601178553887e-05, -0.0015411376953125, 0.0, -0.8849023580551147, -0.10531452298164368, -1.71661376953125e-05, -0.0032272350508719683, -0.6281684637069702, -0.000244140625, -0.03177913278341293, -0.0013160386588424444, -1.71661376953125e-05, -0.08132743835449219, -0.0001678466796875, -3.814697265625e-06, -1.250764012336731, -1.9073486328125e-06, -7.43865966796875e-05, -3.814697265625e-06, -0.007463693618774414, -2.3603439331054688e-05, -1.1920928244535389e-07, -2.694129761948716e-05, 0.0, -0.00026416778564453125, 0.0, -1.1444091796875e-05, -6.4849853515625e-05, -2.09808349609375e-05, -8.344646857949556e-07, -4.768370445162873e-07, -0.00013709068298339844, 0.0], "choice_history": [97, 283, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "2", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Sunfury Protector", "_type": "Template15", "hole3": "GiveAura", "hole1": 2, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "IsMinion"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "SunfuryProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(0), CardSelector(condition=Adjacent()), MinionPlaced\n            ())), PlayerSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.622075413676441, "score_history": [-7.82012939453125e-05, -1.52587890625e-05, -0.01331479474902153, -0.0004525412223301828, -4.4941134547116235e-05, -9.424984455108643e-07, -4.5299530029296875e-06, -1.1920922133867862e-06, -2.09808349609375e-05, -0.0015020370483398438, -0.03602409362792969, -1.7881377516459906e-06, -1.251697449333733e-05, -1.1920922133867862e-06, -0.00055694580078125, -2.6464462280273438e-05, -1.9073486328125e-06, -0.0031987428665161133, -4.768359940499067e-05, -0.06543706357479095, -0.05328581854701042, -0.020406058058142662, -0.10097789764404297, -0.3870697021484375, -0.0776205062866211, -0.03319406509399414, -0.0031228065490722656, -1.9073486328125e-06, -0.006290078163146973, -0.00046276854118332267, -5.7220458984375e-05, -4.38690185546875e-05, -0.13283824920654297, -5.53131103515625e-05, -0.8995077610015869, -3.445148468017578e-05, -0.011643648147583008, -0.0006153583526611328, 0.0, -0.01565265655517578, -0.0001087188720703125, -4.1961669921875e-05, -0.04372823238372803, -2.0027106074849144e-05, -0.0022830963134765625, 0.0, -0.7475715279579163, -0.001525155850686133, -0.016878128051757812, -0.7448514699935913, -0.0002576112747192383, -0.0533299595117569, -0.0020353333093225956, -1.1444091796875e-05, -0.10132598876953125, -0.000186920166015625, -3.814697265625e-06, -0.9442503452301025, -4.88758041683468e-06, -0.009106636047363281, -7.62939453125e-06, -0.08942637592554092, -0.00020885466074105352, -5.9723854064941406e-05, -3.814697265625e-06, -0.00028061855118721724, 0.0, -5.7220458984375e-06, -0.0004596710205078125, -5.7220458984375e-05, -5.960462772236497e-07, -7.152555099310121e-07, -0.00041925907135009766, 0.0], "choice_history": [97, 283, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "Taunt", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Sunfury Protector", "_type": "Template15", "hole3": "GiveAura", "hole1": 2, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 0, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "SunfuryProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(2), CardSelector(condition=Adjacent()),\n            MinionSelector())), MinionSelector(players=BothPlayer(), picker\n            =UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.669412819269482, "score_history": [-7.82012939453125e-05, -1.52587890625e-05, -0.01331479474902153, -0.0004525412223301828, -4.4941134547116235e-05, -9.424984455108643e-07, -4.5299530029296875e-06, -1.1920922133867862e-06, -2.09808349609375e-05, -0.0015020370483398438, -0.03602409362792969, -1.7881377516459906e-06, -1.251697449333733e-05, -1.1920922133867862e-06, -0.00055694580078125, -2.6464462280273438e-05, -1.9073486328125e-06, -0.0031987428665161133, -4.768359940499067e-05, -0.06543706357479095, -0.05328581854701042, -0.020406058058142662, -0.10097789764404297, -0.3870697021484375, -0.0776205062866211, -0.03319406509399414, -0.0031228065490722656, -1.9073486328125e-06, -0.006290078163146973, -0.00046276854118332267, -5.7220458984375e-05, -4.38690185546875e-05, -0.13283824920654297, -5.53131103515625e-05, -0.5230324268341064, 0.0, -0.010670304298400879, -0.00044357776641845703, 0.0, -0.016752243041992188, -8.96453857421875e-05, -4.57763671875e-05, -0.05136573314666748, -2.1457601178553887e-05, -0.0015411376953125, 0.0, -0.7099364995956421, -0.0017738251481205225, -0.01698589324951172, -0.9399398565292358, 0.0, -1.1129833459854126, -8.463859558105469e-06, -1.1920928244535389e-07, -0.18033409118652344, -9.918212890625e-05, -2.288818359375e-05, -0.0052204132080078125, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.1576704978942871, -4.220008122501895e-05, -2.2649765014648438e-06, -3.0517578125e-05, -7.62939453125e-05, -0.002634286880493164, -8.225440979003906e-06, -0.0006351470947265625, 0.0, -0.00020599365234375, -3.981590270996094e-05, -1.1920928244535389e-07, -1.2278556823730469e-05, 0.0, -0.0003230571746826172, 0.0, -1.1444091796875e-05, -8.392333984375e-05, -2.47955322265625e-05, -9.536738616588991e-07, -4.768370445162873e-07, -0.00013542173837777227, 0.0], "choice_history": [97, 283, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "2", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "Minion", "Selector", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "RARE", "hole0": "Sunfury Protector", "_type": "Template15", "hole3": "GiveAura", "hole1": 2, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionSelector"}]}], "hole0": "SunfuryProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(0), CardSelector(condition=IsMinion()), MinionPlaced\n            ())), PlayerSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -4.742720966200636, "score_history": [-7.82012939453125e-05, -1.52587890625e-05, -0.01331479474902153, -0.0004525412223301828, -4.4941134547116235e-05, -9.424984455108643e-07, -4.5299530029296875e-06, -1.1920922133867862e-06, -2.09808349609375e-05, -0.0015020370483398438, -0.03602409362792969, -1.7881377516459906e-06, -1.251697449333733e-05, -1.1920922133867862e-06, -0.00055694580078125, -2.6464462280273438e-05, -1.9073486328125e-06, -0.0031987428665161133, -4.768359940499067e-05, -0.06543706357479095, -0.05328581854701042, -0.020406058058142662, -0.10097789764404297, -0.3870697021484375, -0.0776205062866211, -0.03319406509399414, -0.0031228065490722656, -1.9073486328125e-06, -0.006290078163146973, -0.00046276854118332267, -5.7220458984375e-05, -4.38690185546875e-05, -0.13283824920654297, -5.53131103515625e-05, -0.8995077610015869, -3.445148468017578e-05, -0.011643648147583008, -0.0006153583526611328, 0.0, -0.01565265655517578, -0.0001087188720703125, -4.1961669921875e-05, -0.04372823238372803, -2.0027106074849144e-05, -0.0022830963134765625, 0.0, -0.9022260308265686, -0.10857665538787842, -1.71661376953125e-05, -0.0031541595235466957, -0.6269325017929077, -0.00022125244140625, -0.03904309123754501, -0.0012350797187536955, -1.52587890625e-05, -0.08388233184814453, -0.0001659393310546875, -3.814697265625e-06, -0.9695597887039185, -4.88758041683468e-06, -0.009464263916015625, -9.5367431640625e-06, -0.08734976500272751, -0.00020635126566048712, -5.5909156799316406e-05, -3.814697265625e-06, -0.00024735915940254927, 0.0, -7.62939453125e-06, -0.0001506805419921875, -4.76837158203125e-05, -9.536738616588991e-07, -4.768370445162873e-07, -0.0003325939178466797, 0.0], "choice_history": [97, 283, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "Taunt", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Sunfury Protector", "_type": "Template15", "hole3": "GiveAura", "hole1": 2, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "IsMinion"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 0, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "SunfuryProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(2), CardSelector(condition=Adjacent()), MinionPlaced\n            ())), PlayerSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -5.088698672772011, "score_history": [-7.82012939453125e-05, -1.52587890625e-05, -0.01331479474902153, -0.0004525412223301828, -4.4941134547116235e-05, -9.424984455108643e-07, -4.5299530029296875e-06, -1.1920922133867862e-06, -2.09808349609375e-05, -0.0015020370483398438, -0.03602409362792969, -1.7881377516459906e-06, -1.251697449333733e-05, -1.1920922133867862e-06, -0.00055694580078125, -2.6464462280273438e-05, -1.9073486328125e-06, -0.0031987428665161133, -4.768359940499067e-05, -0.06543706357479095, -0.05328581854701042, -0.020406058058142662, -0.10097789764404297, -0.3870697021484375, -0.0776205062866211, -0.03319406509399414, -0.0031228065490722656, -1.9073486328125e-06, -0.006290078163146973, -0.00046276854118332267, -5.7220458984375e-05, -4.38690185546875e-05, -0.13283824920654297, -5.53131103515625e-05, -0.5230324268341064, 0.0, -0.010670304298400879, -0.00044357776641845703, 0.0, -0.016752243041992188, -8.96453857421875e-05, -4.57763671875e-05, -0.05136573314666748, -2.1457601178553887e-05, -0.0015411376953125, 0.0, -0.7099364995956421, -0.0017738251481205225, -0.01698589324951172, -0.777819037437439, -0.0002690553665161133, -0.04762382060289383, -0.002241243841126561, -1.33514404296875e-05, -0.09633350372314453, -0.0001888275146484375, -3.814697265625e-06, -1.2511532306671143, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.642562747001648, -0.00025451183319091797, -1.9073486328125e-06, -0.0004689915804192424, -9.5367431640625e-06, -0.00016164776752702892, 0.0, -5.7220458984375e-06, -0.000522613525390625, -2.09808349609375e-05, -9.536738616588991e-07, -4.768370445162873e-07, -0.00018930435180664062, 0.0], "choice_history": [97, 283, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "2", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "arg": "players", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Sunfury Protector", "_type": "Template15", "hole3": "GiveAura", "hole1": 2, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "SunfuryProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(2), CardSelector(condition=IsMinion()), MinionPlaced\n            ())), PlayerSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -5.173130245239861, "score_history": [-7.82012939453125e-05, -1.52587890625e-05, -0.01331479474902153, -0.0004525412223301828, -4.4941134547116235e-05, -9.424984455108643e-07, -4.5299530029296875e-06, -1.1920922133867862e-06, -2.09808349609375e-05, -0.0015020370483398438, -0.03602409362792969, -1.7881377516459906e-06, -1.251697449333733e-05, -1.1920922133867862e-06, -0.00055694580078125, -2.6464462280273438e-05, -1.9073486328125e-06, -0.0031987428665161133, -4.768359940499067e-05, -0.06543706357479095, -0.05328581854701042, -0.020406058058142662, -0.10097789764404297, -0.3870697021484375, -0.0776205062866211, -0.03319406509399414, -0.0031228065490722656, -1.9073486328125e-06, -0.006290078163146973, -0.00046276854118332267, -5.7220458984375e-05, -4.38690185546875e-05, -0.13283824920654297, -5.53131103515625e-05, -0.5230324268341064, 0.0, -0.010670304298400879, -0.00044357776641845703, 0.0, -0.016752243041992188, -8.96453857421875e-05, -4.57763671875e-05, -0.05136573314666748, -2.1457601178553887e-05, -0.0015411376953125, 0.0, -0.8849023580551147, -0.10531452298164368, -1.71661376953125e-05, -0.0032272350508719683, -0.6281684637069702, -0.000244140625, -0.03177913278341293, -0.0013160386588424444, -1.71661376953125e-05, -0.08132743835449219, -0.0001678466796875, -3.814697265625e-06, -1.2637873888015747, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.631413459777832, -0.00026035308837890625, -3.814697265625e-06, -0.0004448024556040764, -1.1444091796875e-05, -0.0001693963713478297, 0.0, -7.62939453125e-06, -0.0001964569091796875, -2.09808349609375e-05, -1.1920922133867862e-06, -3.576278118089249e-07, -0.0001723766326904297, 0.0], "choice_history": [97, 283, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "2", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Is", "Minion", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "EnemyPlayer"}, "arg": "players", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Sunfury Protector", "_type": "Template15", "hole3": "GiveAura", "hole1": 2, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "IsMinion"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "SunfuryProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(2), CardSelector(condition=Adjacent()), MinionPlaced\n            ())), PlayerSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score": -5.343179091550326, "score_history": [-7.82012939453125e-05, -1.52587890625e-05, -0.01331479474902153, -0.0004525412223301828, -4.4941134547116235e-05, -9.424984455108643e-07, -4.5299530029296875e-06, -1.1920922133867862e-06, -2.09808349609375e-05, -0.0015020370483398438, -0.03602409362792969, -1.7881377516459906e-06, -1.251697449333733e-05, -1.1920922133867862e-06, -0.00055694580078125, -2.6464462280273438e-05, -1.9073486328125e-06, -0.0031987428665161133, -4.768359940499067e-05, -0.06543706357479095, -0.05328581854701042, -0.020406058058142662, -0.10097789764404297, -0.3870697021484375, -0.0776205062866211, -0.03319406509399414, -0.0031228065490722656, -1.9073486328125e-06, -0.006290078163146973, -0.00046276854118332267, -5.7220458984375e-05, -4.38690185546875e-05, -0.13283824920654297, -5.53131103515625e-05, -0.5230324268341064, 0.0, -0.010670304298400879, -0.00044357776641845703, 0.0, -0.016752243041992188, -8.96453857421875e-05, -4.57763671875e-05, -0.05136573314666748, -2.1457601178553887e-05, -0.0015411376953125, 0.0, -0.7099364995956421, -0.0017738251481205225, -0.01698589324951172, -0.777819037437439, -0.0002690553665161133, -0.04762382060289383, -0.002241243841126561, -1.33514404296875e-05, -0.09633350372314453, -0.0001888275146484375, -3.814697265625e-06, -1.2511532306671143, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.89751136302948, -0.00013041494821663946, -4.0411949157714844e-05, -0.0002940493868663907, -5.7220458984375e-06, -0.0001885888777906075, 0.0, -5.7220458984375e-06, -0.000301361083984375, -2.288818359375e-05, -9.536738616588991e-07, -3.576278118089249e-07, -0.0001779794692993164, 0.0], "choice_history": [97, 283, "Sunfury", "Protector", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "Aura", "<EOS>", 346, 61, 248, "Aura", "Until", "<EOS>", "Mana", "Change", "<EOS>", 346, 52, 179, "2", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "condition", "<EOS>", 38, 325, "Adjacent", "<EOS>", "Minion", "Placed", "<EOS>", "Player", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 2}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}], "hole5": "PlayerSelector", "hole2": "RARE", "hole0": "Sunfury Protector", "_type": "Template15", "hole3": "GiveAura", "hole1": 2, "hole4": [{"hole5": [{"value": {"_type": "Template79", "hole0": "Adjacent"}, "arg": "condition", "_type": "keyword"}], "hole2": [{"n": 2, "_type": "Num"}], "hole0": "AuraUntil", "_type": "Template39", "hole3": "CardSelector", "hole1": "ManaChange", "hole6": "MinionPlaced"}]}], "hole0": "SunfuryProtector", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=[Devilsaur(), Squirrel()])\n            ), MinionSelector(players=BothPlayer(), picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "beams": [{"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(5/5()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -3.2153091662968336, "score_history": [-0.000194549560546875, -6.4849853515625e-05, -0.009377765469253063, -0.0002885703870560974, -6.9141146923357155e-06, -1.1827796697616577e-07, -4.88758041683468e-06, -2.622604142743512e-06, -0.0028839111328125, -0.0006771087646484375, -0.8791780471801758, -7.629378160345368e-06, -9.894371032714844e-06, -1.609325408935547e-05, -1.9073486328125e-06, 1.5497195136049413e-06, -8.392333984375e-05, -0.19820594787597656, -0.0003376007080078125, -1.0037364959716797, -0.4585222899913788, -0.000217437744140625, -0.07805061340332031, -1.71661376953125e-05, -0.11988721042871475, -0.4426291882991791, -0.020421620458364487, -3.2186455882765586e-06, -6.079665126890177e-06, -0.00021646266395691782, -1.9073486328125e-06, -0.00011956674279645085, 0.0, -8.96453857421875e-05, -2.6702880859375e-05, -1.52587890625e-05, -1.1920922133867862e-06, 0.0, -6.318166924756952e-06, 0.0], "choice_history": [97, 283, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "5/5", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 3}], "hole2": [{"hole5": "PlayerSelector", "hole2": "LEGENDARY", "hole0": "Tinkmaster Overspark", "_type": "Template15", "hole3": "Transform", "hole1": 3, "hole4": [{"_type": "Template79", "hole0": "5/5"}]}], "hole0": "TinkmasterOverspark", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Replace(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -3.4156048774290184, "score_history": [-0.000194549560546875, -6.4849853515625e-05, -0.009377765469253063, -0.0002885703870560974, -6.9141146923357155e-06, -1.1827796697616577e-07, -4.88758041683468e-06, -2.622604142743512e-06, -0.0028839111328125, -0.0006771087646484375, -2.4066014289855957, -2.276871418871451e-05, -1.728534698486328e-05, -4.5299530029296875e-06, -9.5367431640625e-06, -1.7881566236610524e-06, -8.0108642578125e-05, -0.14092350006103516, -0.00011837482452392578, -0.5347139835357666, -0.17287559807300568, -0.033381544053554535, -6.163059151731431e-05, -1.6689286894688848e-06, -0.08530426025390625, -7.82012939453125e-05, -3.814697265625e-06, -0.001033782958984375, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.01432812213897705, -2.0265566490706988e-05, -4.649161837733118e-06, -8.7738037109375e-05, -6.67572021484375e-05, -0.011054396629333496, -7.6293927122605965e-06, -0.0005397796630859375, -1.9073486328125e-06, -0.00026702880859375, -0.00012087821960449219, 0.0, -1.7523765563964844e-05, 0.0, -0.00016641616821289062, 0.0, -5.53131103515625e-05, -6.67572021484375e-05, -1.71661376953125e-05, -1.4305104514278355e-06, 0.0, -7.867834028729703e-06, 0.0], "choice_history": [97, 283, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 202, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Replace", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 3}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "LEGENDARY", "hole0": "Tinkmaster Overspark", "_type": "Template15", "hole3": "Replace", "hole1": 3}], "hole0": "TinkmasterOverspark", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaSquirrel(Attribute('mana', SelfSelector())),\n            IsMinion()])), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -3.900731182977175, "score_history": [-0.000194549560546875, -6.4849853515625e-05, -0.009377765469253063, -0.0002885703870560974, -6.9141146923357155e-06, -1.1827796697616577e-07, -4.88758041683468e-06, -2.622604142743512e-06, -0.0028839111328125, -0.0006771087646484375, -3.0067272186279297, -2.3841855067985307e-07, -1.811981201171875e-05, -4.410743713378906e-06, -0.00010311603546142578, -1.0729385166996508e-06, -0.0002002716064453125, -0.004011273384094238, -0.003633737564086914, -0.020163537934422493, -0.0891464501619339, -0.06801605224609375, -0.09452247619628906, -0.031133651733398438, -1.71661376953125e-05, 0.0, -0.00027942605083808303, -0.0013505220413208008, -0.0001646280288696289, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -0.0008068084716796875, 0.0, -0.010402679443359375, -0.0002384185791015625, -0.0002880096435546875, -0.006896018981933594, -0.0016126632690429688, -0.03343382105231285, -0.027962327003479004, -0.044052764773368835, -0.0051670074462890625, -1.9073486328125e-06, -0.04242217168211937, -2.9087066650390625e-05, 0.0, -0.000431060791015625, -2.09808349609375e-05, -0.18476417660713196, -1.9073486328125e-06, -0.011740684509277344, -3.814697265625e-06, -0.024985790252685547, -0.00013934672460891306, 0.0, -0.007848739624023438, -0.0014514923095703125, -0.0010288491612300277, -0.0008291378617286682, -0.0005933046340942383, -3.1997449696063995e-05, -0.00012195108865853399, -2.9802317840221804e-06, -0.007672309875488281, -1.71661376953125e-05, -1.9073486328125e-06, -0.14575111865997314, -1.5735626220703125e-05, -1.33514404296875e-05, 0.0, -0.006416678428649902, -0.00014698505401611328, -1.1920928244535389e-07, -4.6491612010868266e-05, 0.0, -0.0001323223114013672, 0.0, -7.82012939453125e-05, -7.82012939453125e-05, -1.52587890625e-05, -1.1920922133867862e-06, 0.0, -7.152582838898525e-06, 0.0], "choice_history": [97, 283, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Transform", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 77, 302, "Mana", "Squirrel", "<EOS>", 21, 174, "Attribute", "<EOS>", 347, 53, 183, "mana", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 83, 314, "Is", "Minion", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 3}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "LEGENDARY", "hole0": "Tinkmaster Overspark", "_type": "Template15", "hole3": "Transform", "hole1": 3, "hole4": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": {"id": "Attribute", "_type": "Name"}, "_type": "Template64", "hole0": "ManaSquirrel", "hole2": [{"s": "mana", "_type": "Str"}, {"_type": "Template79", "hole0": "SelfSelector"}]}, {"_type": "Template73_expr_seq", "hole0": "IsMinion"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}]}], "hole0": "TinkmasterOverspark", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(\n            5/5Overspark()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -3.950235380852007, "score_history": [-0.000194549560546875, -6.4849853515625e-05, -0.009377765469253063, -0.0002885703870560974, -6.9141146923357155e-06, -1.1827796697616577e-07, -4.88758041683468e-06, -2.622604142743512e-06, -0.0028839111328125, -0.0006771087646484375, -0.8791780471801758, -7.629378160345368e-06, -9.894371032714844e-06, -1.609325408935547e-05, -1.9073486328125e-06, 1.5497195136049413e-06, -8.392333984375e-05, -0.19820594787597656, -0.0003376007080078125, -1.0037364959716797, -0.4585222899913788, -0.000217437744140625, -0.07805061340332031, -1.71661376953125e-05, -0.11988721042871475, -1.19413161277771, -0.00018262278172187507, -0.003701639361679554, -5.960462772236497e-07, -4.52994936495088e-06, -0.00015806076407898217, -1.9073486328125e-06, -0.00010633447527652606, 0.0, -0.0001239776611328125, -3.0517578125e-05, -1.33514404296875e-05, -1.311301275563892e-06, 0.0, -6.914207915542647e-06, 0.0], "choice_history": [97, 283, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Transform", "<EOS>", 346, 88, 325, "5/5", "Overspark", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 3}], "hole2": [{"hole5": "PlayerSelector", "hole2": "LEGENDARY", "hole0": "Tinkmaster Overspark", "_type": "Template15", "hole3": "Transform", "hole1": 3, "hole4": [{"_type": "Template79", "hole0": "5/5Overspark"}]}], "hole0": "TinkmasterOverspark", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Kill(),\n            MinionSelector(Has<UNK>('attack'), EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -3.9662901321164483, "score_history": [-0.000194549560546875, -6.4849853515625e-05, -0.009377765469253063, -0.0002885703870560974, -6.9141146923357155e-06, -1.1827796697616577e-07, -4.88758041683468e-06, -2.622604142743512e-06, -0.0028839111328125, -0.0006771087646484375, -2.2504453659057617, -2.3841574147809297e-05, -1.2874602361989673e-05, -5.7220440794480965e-06, -0.000263214111328125, -4.053117208968615e-06, -0.0001010894775390625, -0.021490097045898438, -0.0003243684768676758, -0.031341105699539185, -0.007883824408054352, -3.5509467124938965e-05, -0.000435222580563277, -1.1920928244535389e-07, -0.14422225952148438, -0.0015306472778320312, -0.000194549560546875, -0.000164031982421875, -1.9073486328125e-06, -0.39190003275871277, -0.011559718288481236, -3.457022103248164e-05, -0.000156402587890625, -0.0041065216064453125, -0.00055694580078125, -0.8084549903869629, 0.0, -0.001346588134765625, -1.9073486328125e-06, -0.24550855159759521, -8.58306884765625e-06, -1.9073486328125e-06, -0.0045185089111328125, -7.2479248046875e-05, -0.0258331298828125, -4.2438507080078125e-05, 0.0, -2.3365020751953125e-05, -1.9073486328125e-06, -5.733966827392578e-05, 0.0, -4.1961669921875e-05, -5.7220458984375e-05, -1.33514404296875e-05, -1.9073468138230965e-06, 0.0, -8.702309060026892e-06, 0.0], "choice_history": [97, 283, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 204, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 348, 45, 150, 21, 174, "Has", "<UNK>", "<EOS>", 346, 53, 183, "attack", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 88, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 3}], "hole2": [{"hole5": "MinionSelector", "hole2": "LEGENDARY", "hole0": "Tinkmaster Overspark", "_type": "Template15", "hole3": "Kill", "hole1": 3, "hole6": [{"func": {"id": "Has<UNK>", "_type": "Name"}, "args": [{"s": "attack", "_type": "Str"}], "_type": "Call"}, {"_type": "Template79", "hole0": "EnemyPlayer"}, {"_type": "Template79", "hole0": "UserPicker"}]}], "hole0": "TinkmasterOverspark", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Kill(),\n            MinionSelector(IsType(MINION_TYPE.MECH), players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -4.09819600780429, "score_history": [-0.000194549560546875, -6.4849853515625e-05, -0.009377765469253063, -0.0002885703870560974, -6.9141146923357155e-06, -1.1827796697616577e-07, -4.88758041683468e-06, -2.622604142743512e-06, -0.0028839111328125, -0.0006771087646484375, -3.35849666595459, -3.1947951356414706e-05, -4.1961669921875e-05, -5.125998541188892e-06, -3.647804260253906e-05, -2.503395990061108e-06, -0.0003681182861328125, -0.005283713340759277, -0.0021860599517822266, -0.01948324777185917, -0.0488957017660141, -1.281779259443283e-05, -0.0006152387941256166, -7.152555099310121e-07, -0.3609590530395508, -0.018967628479003906, -9.34600830078125e-05, -0.10760307312011719, 0.0, -0.11317253112792969, -0.0001544952392578125, -5.7220458984375e-06, -0.000820159912109375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -0.04350996017456055, -2.2292111680144444e-05, -2.9802317840221804e-06, -0.000118255615234375, -6.67572021484375e-05, -0.002354264259338379, -1.4543528777721804e-05, -0.000537872314453125, -1.9073486328125e-06, -0.000335693359375, -0.0001112222671508789, 0.0, -2.1338462829589844e-05, 0.0, -0.00014352798461914062, 0.0, -4.00543212890625e-05, -0.0001010894775390625, -1.71661376953125e-05, -1.311301275563892e-06, 0.0, -8.463877747999504e-06, 0.0], "choice_history": [97, 283, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 206, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 346, 74, 297, "MECH", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 3}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "LEGENDARY", "hole0": "Tinkmaster Overspark", "_type": "Template15", "hole3": "Kill", "hole1": 3, "hole6": [{"_type": "Template60", "hole0": "MECH"}]}], "hole0": "TinkmasterOverspark", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Kill(),\n            MinionSelector(Has<UNK>('taunt'), EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -4.136817828720488, "score_history": [-0.000194549560546875, -6.4849853515625e-05, -0.009377765469253063, -0.0002885703870560974, -6.9141146923357155e-06, -1.1827796697616577e-07, -4.88758041683468e-06, -2.622604142743512e-06, -0.0028839111328125, -0.0006771087646484375, -2.2504453659057617, -2.3841574147809297e-05, -1.2874602361989673e-05, -5.7220440794480965e-06, -0.000263214111328125, -4.053117208968615e-06, -0.0001010894775390625, -0.021490097045898438, -0.0003243684768676758, -0.031341105699539185, -0.007883824408054352, -3.5509467124938965e-05, -0.000435222580563277, -1.1920928244535389e-07, -0.14422225952148438, -0.0015306472778320312, -0.000194549560546875, -0.000164031982421875, -1.9073486328125e-06, -0.39190003275871277, -0.011559718288481236, -3.457022103248164e-05, -0.000156402587890625, -0.0041065216064453125, -0.00055694580078125, -1.220475673675537, -3.62396240234375e-05, -0.000102996826171875, -5.7220458984375e-06, -0.014444708824157715, -9.298318218498025e-06, -1.9073486328125e-06, -0.004764556884765625, -8.58306884765625e-05, -0.016344070434570312, -4.8160552978515625e-05, 0.0, -2.5153160095214844e-05, -1.9073486328125e-06, -5.924701690673828e-05, 0.0, -3.814697265625e-05, -5.340576171875e-05, -1.52587890625e-05, -1.9073468138230965e-06, 0.0, -8.34468210086925e-06, 0.0], "choice_history": [97, 283, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 204, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 348, 45, 150, 21, 174, "Has", "<UNK>", "<EOS>", 346, 53, 183, "taunt", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", 88, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 3}], "hole2": [{"hole5": "MinionSelector", "hole2": "LEGENDARY", "hole0": "Tinkmaster Overspark", "_type": "Template15", "hole3": "Kill", "hole1": 3, "hole6": [{"func": {"id": "Has<UNK>", "_type": "Name"}, "args": [{"s": "taunt", "_type": "Str"}], "_type": "Call"}, {"_type": "Template79", "hole0": "EnemyPlayer"}, {"_type": "Template79", "hole0": "UserPicker"}]}], "hole0": "TinkmasterOverspark", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Bounce(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -4.339541914342362, "score_history": [-0.000194549560546875, -6.4849853515625e-05, -0.009377765469253063, -0.0002885703870560974, -6.9141146923357155e-06, -1.1827796697616577e-07, -4.88758041683468e-06, -2.622604142743512e-06, -0.0028839111328125, -0.0006771087646484375, -2.4066014289855957, -2.276871418871451e-05, -1.728534698486328e-05, -4.5299530029296875e-06, -9.5367431640625e-06, -1.7881566236610524e-06, -8.0108642578125e-05, -0.14092350006103516, -0.00011837482452392578, -1.3820459842681885, -0.00032484071562066674, -0.05446147546172142, -0.0001316066482104361, -1.5497195136049413e-06, -0.314208984375, -5.91278076171875e-05, -3.814697265625e-06, -0.0008087158203125, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.016158223152160645, -2.0861609300482087e-05, -4.768371127283899e-06, -9.5367431640625e-05, -6.103515625e-05, -0.00861811637878418, -1.001357759378152e-05, -0.0004711151123046875, -1.9073486328125e-06, -0.0002880096435546875, -0.0001227855682373047, 0.0, -1.7523765563964844e-05, 0.0, -0.00016832351684570312, 0.0, -5.53131103515625e-05, -6.866455078125e-05, -1.71661376953125e-05, -1.4305104514278355e-06, 0.0, -7.867834028729703e-06, 0.0], "choice_history": [97, 283, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 202, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Bounce", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 3}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "LEGENDARY", "hole0": "Tinkmaster Overspark", "_type": "Template15", "hole3": "Bounce", "hole1": 3}], "hole0": "TinkmasterOverspark", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(GiveAura([Buff(\n            ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -5.383004226069488, "score_history": [-0.000194549560546875, -6.4849853515625e-05, -0.009377765469253063, -0.0002885703870560974, -6.9141146923357155e-06, -1.1827796697616577e-07, -4.88758041683468e-06, -2.622604142743512e-06, -0.0028839111328125, -0.0006771087646484375, -3.028334140777588, -2.038461752817966e-05, -3.0994415283203125e-05, -4.0531158447265625e-06, -3.0517578125e-05, 4.7682806325610727e-07, -8.392333984375e-05, -0.0030364990234375, -0.0005035400390625, -0.04974058270454407, -0.011034776456654072, -0.00497838482260704, -8.58306884765625e-05, -0.25867462158203125, -0.0038776397705078125, -0.00011658544826786965, -0.006363868713378906, -6.031990051269531e-05, -0.0001468658447265625, -0.000705718994140625, -9.5367431640625e-06, -0.035226933658123016, -1.9073486328125e-06, -0.0011720656184479594, -0.000649571418762207, -0.0001486517721787095, -0.0004643525753635913, -1.9073486328125e-06, -0.453963041305542, -2.2649765014648438e-06, 0.0, -0.05750274658203125, -0.2584514617919922, -0.050708770751953125, -3.62396240234375e-05, 0.0, -0.03689035028219223, -0.001883712480776012, -2.8491003831732087e-05, -0.0001811981201171875, -0.0067424774169921875, -0.000331878662109375, -1.71661376953125e-05, -9.5367431640625e-06, -0.0009777545928955078, -4.5299530029296875e-06, -0.0005588531494140625, -0.4502401351928711, -0.0068035125732421875, -0.00015044209430925548, -0.0016875267028808594, -3.0517578125e-05, -6.67572021484375e-05, -0.0030841827392578125, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -5.53131103515625e-05, -0.0003643035888671875, -0.3672800064086914, -1.77621805050876e-05, -4.1961669921875e-05, -0.00034332275390625, 0.0, -0.14899778366088867, -4.184244608040899e-05, -0.009348869323730469, -4.57763671875e-05, -0.1065397560596466, -1.52587890625e-05, -3.695487976074219e-05, 0.0, -0.0002762075746431947, 0.0, -3.0517578125e-05, -0.0001506805419921875, -1.71661376953125e-05, -1.9073468138230965e-06, 0.0, -1.9311926735099405e-05, 0.0], "choice_history": [97, 283, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 208, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Give", "Aura", "<EOS>", 346, 58, 231, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", "Minion", "Selector", "<EOS>", 346, 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 3}], "hole2": [{"hole5": "MinionSelector", "hole2": "LEGENDARY", "hole0": "Tinkmaster Overspark", "_type": "Template15", "hole3": "GiveAura", "hole1": 3, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": 1, "_type": "Template32", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}], "hole8": [{"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}]}], "hole0": "TinkmasterOverspark", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(GiveAura([Buff(\n            ChangeAttack(1)), Buff(ChangeHealth(1))]), SelfSelector(),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -5.54784269766855, "score_history": [-0.000194549560546875, -6.4849853515625e-05, -0.009377765469253063, -0.0002885703870560974, -6.9141146923357155e-06, -1.1827796697616577e-07, -4.88758041683468e-06, -2.622604142743512e-06, -0.0028839111328125, -0.0006771087646484375, -3.028334140777588, -2.038461752817966e-05, -3.0994415283203125e-05, -4.0531158447265625e-06, -3.0517578125e-05, 4.7682806325610727e-07, -8.392333984375e-05, -0.0030364990234375, -0.0005035400390625, -0.04974058270454407, -0.011034776456654072, -0.00497838482260704, -8.58306884765625e-05, -0.25867462158203125, -0.0038776397705078125, -0.00011658544826786965, -0.006363868713378906, -6.031990051269531e-05, -0.0001468658447265625, -0.000705718994140625, -9.5367431640625e-06, -0.035226933658123016, -1.9073486328125e-06, -0.0011720656184479594, -0.000649571418762207, -0.0001486517721787095, -0.0004643525753635913, -1.9073486328125e-06, -1.0250811576843262, -1.1920928244535389e-07, 0.0, -0.00146484375, -0.02790546417236328, -0.010441780090332031, -2.09808349609375e-05, -1.9073486328125e-06, -0.051198359578847885, -0.002390855923295021, -2.765654426184483e-05, -0.0001983642578125, -0.0053920745849609375, -0.000225067138671875, -1.33514404296875e-05, -9.5367431640625e-06, -0.0009608268737792969, -4.410743713378906e-06, -0.0008373260498046875, -0.46038246154785156, -0.006482124328613281, -0.0001484155363868922, -0.001644730567932129, -2.86102294921875e-05, -6.67572021484375e-05, -0.00289154052734375, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.14984130859375e-05, -0.000354766845703125, -0.33753490447998047, -1.561641511216294e-05, -4.1961669921875e-05, -0.0002231597900390625, 0.0, -0.1020040512084961, -4.374979471322149e-05, -0.0070858001708984375, -4.00543212890625e-05, -0.08307410031557083, -1.71661376953125e-05, -3.3020973205566406e-05, 0.0, -0.0002641674655023962, 0.0, -3.0517578125e-05, -0.000148773193359375, -1.71661376953125e-05, -1.9073468138230965e-06, 0.0, -1.943113238667138e-05, 0.0], "choice_history": [97, 283, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 208, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Give", "Aura", "<EOS>", 346, 58, 231, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", "Self", "Selector", "<EOS>", 346, 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 3}], "hole2": [{"hole5": "SelfSelector", "hole2": "LEGENDARY", "hole0": "Tinkmaster Overspark", "_type": "Template15", "hole3": "GiveAura", "hole1": 3, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": 1, "_type": "Template32", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}], "hole8": [{"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}]}], "hole0": "TinkmasterOverspark", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(MinionSelector(And(\n            5/5Attack(), TurnEnded()), SelfSelector(), EnemyPlayer()),\n            MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -5.56185827339732, "score_history": [-0.000194549560546875, -6.4849853515625e-05, -0.009377765469253063, -0.0002885703870560974, -6.9141146923357155e-06, -1.1827796697616577e-07, -4.88758041683468e-06, -2.622604142743512e-06, -0.0028839111328125, -0.0006771087646484375, -0.8791780471801758, -7.629378160345368e-06, -9.894371032714844e-06, -1.609325408935547e-05, -1.9073486328125e-06, 1.5497195136049413e-06, -8.392333984375e-05, -0.19820594787597656, -0.0003376007080078125, -0.5122124552726746, -0.00996313989162445, -9.536738616588991e-07, -0.018148422241210938, -0.008378982543945312, -0.0018291473388671875, -0.0001468658447265625, 0.0, -0.5068764090538025, -0.0061577558517456055, -2.09808349609375e-05, -0.014903068542480469, -9.5367431640625e-06, -0.2872503399848938, -1.3128561973571777, -0.008351802825927734, -0.0026922225952148438, -1.52587890625e-05, -0.23665904998779297, -0.1828850507736206, -1.9073486328125e-06, -0.02336883544921875, -0.0003452301025390625, -0.8607926368713379, -0.0006730554741807282, 0.0, -0.040741920471191406, -0.0006999969482421875, -0.25922322273254395, -0.00044918060302734375, 0.0, -0.17173545062541962, -0.0027664899826049805, -8.344646857949556e-07, -0.00010633071360643953, -1.9073486328125e-06, -0.00013196436339057982, 0.0, -6.4849853515625e-05, -2.6702880859375e-05, -1.9073486328125e-05, -1.1920922133867862e-06, 0.0, -9.059956937562674e-06, 0.0], "choice_history": [97, 283, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Minion", "Selector", "<EOS>", 348, 45, 150, 21, 174, "And", "<EOS>", 347, 88, 325, "5/5", "Attack", "<EOS>", 88, 325, "Turn", "Ended", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 88, 325, "Enemy", "Player", "<EOS>", "Minion", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 3}], "hole2": [{"hole5": "MinionSelector", "hole2": "LEGENDARY", "hole0": "Tinkmaster Overspark", "_type": "Template15", "hole3": "MinionSelector", "hole1": 3, "hole4": [{"func": {"id": "And", "_type": "Name"}, "args": [{"_type": "Template79", "hole0": "5/5Attack"}, {"_type": "Template79", "hole0": "TurnEnded"}], "_type": "Call"}, {"_type": "Template79", "hole0": "SelfSelector"}, {"_type": "Template79", "hole0": "EnemyPlayer"}]}], "hole0": "TinkmasterOverspark", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaSquirrel(Attribute('mana', SelfSelector())),\n            IsMinion()])), MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -5.834318949730033, "score_history": [-0.000194549560546875, -6.4849853515625e-05, -0.009377765469253063, -0.0002885703870560974, -6.9141146923357155e-06, -1.1827796697616577e-07, -4.88758041683468e-06, -2.622604142743512e-06, -0.0028839111328125, -0.0006771087646484375, -3.0067272186279297, -2.3841855067985307e-07, -1.811981201171875e-05, -4.410743713378906e-06, -0.00010311603546142578, -1.0729385166996508e-06, -0.0002002716064453125, -0.004011273384094238, -0.003633737564086914, -0.020163537934422493, -0.0891464501619339, -0.06801605224609375, -0.09452247619628906, -0.031133651733398438, -1.71661376953125e-05, 0.0, -0.00027942605083808303, -0.0013505220413208008, -0.0001646280288696289, -2.86102294921875e-05, -3.814697265625e-06, 0.0, -0.0008068084716796875, 0.0, -0.010402679443359375, -0.0002384185791015625, -0.0002880096435546875, -0.006896018981933594, -0.0016126632690429688, -0.03343382105231285, -0.027962327003479004, -0.044052764773368835, -0.0051670074462890625, -1.9073486328125e-06, -0.04242217168211937, -2.9087066650390625e-05, 0.0, -0.000431060791015625, -2.09808349609375e-05, -0.18476417660713196, -1.9073486328125e-06, -0.011740684509277344, -3.814697265625e-06, -0.024985790252685547, -0.00013934672460891306, 0.0, -0.007848739624023438, -0.0014514923095703125, -0.0010288491612300277, -0.0008291378617286682, -0.0005933046340942383, -3.1997449696063995e-05, -0.00012195108865853399, -2.9802317840221804e-06, -0.007672309875488281, -1.71661376953125e-05, -1.9073486328125e-06, -2.057419776916504, -5.960462772236497e-07, -7.62939453125e-06, 0.0, -0.028166770935058594, -2.2649721358902752e-05, -8.344646857949556e-07, -0.0003086100914515555, -1.9073486328125e-06, -0.00016248226165771484, 0.0, -2.09808349609375e-05, -0.000156402587890625, -1.33514404296875e-05, -1.311301275563892e-06, 0.0, -7.271802132891025e-06, 0.0], "choice_history": [97, 283, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 209, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Transform", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 19, 169, 347, 77, 302, "Mana", "Squirrel", "<EOS>", 21, 174, "Attribute", "<EOS>", 347, 53, 183, "mana", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 83, 314, "Is", "Minion", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 3}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "LEGENDARY", "hole0": "Tinkmaster Overspark", "_type": "Template15", "hole3": "Transform", "hole1": 3, "hole4": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"elts": [{"hole1": {"id": "Attribute", "_type": "Name"}, "_type": "Template64", "hole0": "ManaSquirrel", "hole2": [{"s": "mana", "_type": "Str"}, {"_type": "Template79", "hole0": "SelfSelector"}]}, {"_type": "Template73_expr_seq", "hole0": "IsMinion"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}]}], "hole0": "TinkmasterOverspark", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(GiveAura([Buff(\n            ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(),\n            IsType(MINION_TYPE.MECH)))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -6.050029713064532, "score_history": [-0.000194549560546875, -6.4849853515625e-05, -0.009377765469253063, -0.0002885703870560974, -6.9141146923357155e-06, -1.1827796697616577e-07, -4.88758041683468e-06, -2.622604142743512e-06, -0.0028839111328125, -0.0006771087646484375, -3.028334140777588, -2.038461752817966e-05, -3.0994415283203125e-05, -4.0531158447265625e-06, -3.0517578125e-05, 4.7682806325610727e-07, -8.392333984375e-05, -0.0030364990234375, -0.0005035400390625, -0.04974058270454407, -0.011034776456654072, -0.00497838482260704, -8.58306884765625e-05, -0.25867462158203125, -0.0038776397705078125, -0.00011658544826786965, -0.006363868713378906, -6.031990051269531e-05, -0.0001468658447265625, -0.000705718994140625, -9.5367431640625e-06, -0.035226933658123016, -1.9073486328125e-06, -0.0011720656184479594, -0.000649571418762207, -0.0001486517721787095, -0.0004643525753635913, -1.9073486328125e-06, -0.453963041305542, -2.2649765014648438e-06, 0.0, -0.05750274658203125, -1.9631471633911133, -0.00014495849609375, -0.1557523012161255, -5.340576171875e-05, -5.9604644775390625e-06, -3.814697265625e-06, -2.300739288330078e-05, 0.0, -1.71661376953125e-05, -0.0003414154052734375, -1.52587890625e-05, -1.2516897186287679e-05, 0.0, -3.9696318708593026e-05, 0.0], "choice_history": [97, 283, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 208, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Give", "Aura", "<EOS>", 346, 58, 231, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", "Minion", "Selector", "<EOS>", 346, 74, 297, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 3}], "hole2": [{"hole5": "MinionSelector", "hole2": "LEGENDARY", "hole0": "Tinkmaster Overspark", "_type": "Template15", "hole3": "GiveAura", "hole1": 3, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": 1, "_type": "Template32", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}], "hole8": [{"_type": "Template60", "hole0": "MECH"}]}], "hole0": "TinkmasterOverspark", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(GiveAura([Buff(\n            ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            BEAST))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -6.263570212204968, "score_history": [-0.000194549560546875, -6.4849853515625e-05, -0.009377765469253063, -0.0002885703870560974, -6.9141146923357155e-06, -1.1827796697616577e-07, -4.88758041683468e-06, -2.622604142743512e-06, -0.0028839111328125, -0.0006771087646484375, -3.028334140777588, -2.038461752817966e-05, -3.0994415283203125e-05, -4.0531158447265625e-06, -3.0517578125e-05, 4.7682806325610727e-07, -8.392333984375e-05, -0.0030364990234375, -0.0005035400390625, -0.04974058270454407, -0.011034776456654072, -0.00497838482260704, -8.58306884765625e-05, -0.25867462158203125, -0.0038776397705078125, -0.00011658544826786965, -0.006363868713378906, -6.031990051269531e-05, -0.0001468658447265625, -0.000705718994140625, -9.5367431640625e-06, -0.035226933658123016, -1.9073486328125e-06, -0.0011720656184479594, -0.000649571418762207, -0.0001486517721787095, -0.0004643525753635913, -1.9073486328125e-06, -0.453963041305542, -2.2649765014648438e-06, 0.0, -0.05750274658203125, -0.2584514617919922, -0.050708770751953125, -3.62396240234375e-05, 0.0, -0.03689035028219223, -0.001883712480776012, -2.8491003831732087e-05, -0.0001811981201171875, -0.0067424774169921875, -0.000331878662109375, -1.71661376953125e-05, -9.5367431640625e-06, -0.0009777545928955078, -4.5299530029296875e-06, -0.0005588531494140625, -0.4502401351928711, -0.0068035125732421875, -0.00015044209430925548, -0.0016875267028808594, -3.0517578125e-05, -6.67572021484375e-05, -0.0030841827392578125, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -5.53131103515625e-05, -0.0003643035888671875, -1.3547906875610352, -1.9073486328125e-06, -0.0001201629638671875, -0.0006961822509765625, 0.0, -0.05449795722961426, -0.00010144707630388439, -0.0051784515380859375, -3.62396240234375e-05, -0.09780754148960114, -9.5367431640625e-06, -5.125999450683594e-05, 0.0, -0.0002481935080140829, 0.0, -3.0517578125e-05, -0.0001621246337890625, -1.71661376953125e-05, -1.9073468138230965e-06, 0.0, -1.9788756617344916e-05, 0.0], "choice_history": [97, 283, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 208, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Give", "Aura", "<EOS>", 346, 58, 231, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", "Minion", "Selector", "<EOS>", 346, 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 3}], "hole2": [{"hole5": "MinionSelector", "hole2": "LEGENDARY", "hole0": "Tinkmaster Overspark", "_type": "Template15", "hole3": "GiveAura", "hole1": 3, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": 1, "_type": "Template32", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}], "hole8": [{"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}]}], "hole0": "TinkmasterOverspark", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(GiveAura([Buff(\n            ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(),\n            GreaterThan(Count(MinionSelector(IsType(MINION_TYPE.BEAST))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score": -6.423060294247648, "score_history": [-0.000194549560546875, -6.4849853515625e-05, -0.009377765469253063, -0.0002885703870560974, -6.9141146923357155e-06, -1.1827796697616577e-07, -4.88758041683468e-06, -2.622604142743512e-06, -0.0028839111328125, -0.0006771087646484375, -3.028334140777588, -2.038461752817966e-05, -3.0994415283203125e-05, -4.0531158447265625e-06, -3.0517578125e-05, 4.7682806325610727e-07, -8.392333984375e-05, -0.0030364990234375, -0.0005035400390625, -0.04974058270454407, -0.011034776456654072, -0.00497838482260704, -8.58306884765625e-05, -0.25867462158203125, -0.0038776397705078125, -0.00011658544826786965, -0.006363868713378906, -6.031990051269531e-05, -0.0001468658447265625, -0.000705718994140625, -9.5367431640625e-06, -0.035226933658123016, -1.9073486328125e-06, -0.0011720656184479594, -0.000649571418762207, -0.0001486517721787095, -0.0004643525753635913, -1.9073486328125e-06, -0.453963041305542, -2.2649765014648438e-06, 0.0, -0.05750274658203125, -0.2584514617919922, -0.050708770751953125, -3.62396240234375e-05, 0.0, -0.03689035028219223, -0.001883712480776012, -2.8491003831732087e-05, -0.0001811981201171875, -0.0067424774169921875, -0.000331878662109375, -1.71661376953125e-05, -9.5367431640625e-06, -0.0009777545928955078, -4.5299530029296875e-06, -0.0005588531494140625, -1.63519287109375, -0.0015697479248046875, -0.005346405785530806, -0.006173610687255859, -5.7220458984375e-06, -0.008157730102539062, -0.000240325927734375, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00023353099822998047, -7.43865966796875e-05, -0.2911491394042969, 0.0, -0.0001468658447265625, -0.0003681182861328125, 0.0, -0.019518017768859863, -0.0001451968855690211, -0.003108978271484375, -7.62939453125e-05, -0.1637331247329712, -7.62939453125e-06, -4.0173526940634474e-05, 0.0, -0.00018811208428815007, 0.0, -2.86102294921875e-05, -0.0002040863037109375, -1.71661376953125e-05, -1.4305104514278355e-06, 0.0, -1.6570116713410243e-05, 0.0], "choice_history": [97, 283, "Tinkmaster", "Overspark", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 208, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Give", "Aura", "<EOS>", 346, 58, 231, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", "Minion", "Selector", "<EOS>", 346, 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "3", "<EOS>", "3", "<EOS>"], "model_output": {"hole6": [{"hole1": 3, "_type": "Template62", "hole0": 3}], "hole2": [{"hole5": "MinionSelector", "hole2": "LEGENDARY", "hole0": "Tinkmaster Overspark", "_type": "Template15", "hole3": "GiveAura", "hole1": 3, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": 1, "_type": "Template32", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}], "hole8": [{"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}]}], "hole0": "TinkmasterOverspark", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.hero and attacker.is_minion(\n            ) and not attacker.removed:\n            attacker.die(self)\n            attacker.game.check_delayed()\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "beams": [{"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def can_use(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "score": -5.327622671822148, "score_history": [-0.010079383850097656, -0.642695426940918, -0.009383167140185833, -7.7841330494266e-05, -4.076914774486795e-05, -0.0011337954783812165, -0.00022706834715791047, -0.26442718505859375, -0.0027675628662109375, -0.000225067138671875, -4.923231608700007e-05, 0.0, -3.814689534920035e-06, 0.0, -0.0002899169921875, -0.000579833984375, -0.00148773193359375, -5.7220458984375e-06, -0.7530460357666016, -3.814697265625e-06, -0.0015351641923189163, 0.0, -0.0002288818359375, -0.001850128173828125, -3.814697265625e-05, -0.03972816467285156, -0.00101470947265625, -0.0006465911865234375, -1.9073486328125e-06, -0.004001617431640625, -1.9073486328125e-06, -3.2901763916015625e-05, 0.0, -0.014642472378909588, 0.0, -0.0020880699157714844, 0.0, -0.03289484977722168, -0.0001544952392578125, -6.29425048828125e-05, -0.000156402587890625, 0.0, -0.6297392845153809, -0.007480621337890625, -0.00026702880859375, 0.0, -2.6702880859375e-05, 0.0, -6.866455078125e-05, 0.0, -0.000377655029296875, 0.0, -0.004711151123046875, -0.000762939453125, -3.814697265625e-06, -0.010399818420410156, 0.0, -1.52587890625e-05, -0.0002574920654296875, -0.00037384033203125, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -4.00543212890625e-05, -3.62396240234375e-05, 0.0, -0.000492095947265625, -0.0001697540283203125, -6.67572021484375e-05, -0.02768707275390625, -8.7738037109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012912750244140625, -1.9073486328125e-06, -0.00028264522552490234, 0.0, -0.009696588851511478, -1.9073486328125e-06, -0.0011358261108398438, -1.9073486328125e-06, -0.4361149072647095, -4.57763671875e-05, -3.814697265625e-05, -0.0001678466796875, -1.9073486328125e-06, -0.4185352325439453, -0.005042076110839844, -0.0002269744873046875, 0.0, -6.67572021484375e-05, 0.0, -7.05718994140625e-05, 0.0, -0.0004215240478515625, 0.0, -0.0036182403564453125, -1.9073486328125e-05, -0.0658111572265625, 0.0, -0.00022125244140625, -0.0001373291015625, -0.9287509918212891, -2.86102294921875e-05, -4.76837158203125e-05, 0.0, -7.05718994140625e-05, -0.0530778169631958, -1.1920928244535389e-07, -0.0001430511474609375, -0.000118255615234375, -8.96453857421875e-05, -0.24823379516601562, -0.0001544952392578125, -2.6702880859375e-05, -1.9073486328125e-06, -0.000209808349609375, 0.0, -0.00018513202667236328, 0.0, -0.022577643394470215, -1.9073486328125e-06, -0.001334547996520996, 0.0, -0.2479865550994873, -6.67572021484375e-05, -3.62396240234375e-05, -0.0001811981201171875, -3.814697265625e-06, -0.4069310426712036, -0.0049076080322265625, -0.0002193450927734375, 0.0, -8.58306884765625e-05, 0.0, -5.91278076171875e-05, 0.0, -0.00038909912109375, 0.0], "choice_history": [97, 284, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 358, 128, 233, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Vaporize", "hole2": "MAGE"}], "hole0": "Vaporize", "_type": "Template5", "hole3": "can_use", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "score": -5.387979329308557, "score_history": [-0.010079383850097656, -0.642695426940918, -0.009383167140185833, -7.7841330494266e-05, -4.076914774486795e-05, -0.0011337954783812165, -0.00022706834715791047, -0.26442718505859375, -0.0027675628662109375, -0.000225067138671875, -4.923231608700007e-05, 0.0, -3.814689534920035e-06, 0.0, -0.0002899169921875, -0.000579833984375, -0.00148773193359375, -5.7220458984375e-06, -0.7904043197631836, -3.24249267578125e-05, -0.002036720048636198, 0.0, -0.0004634857177734375, -0.000423431396484375, -0.00018310546875, -0.04059791564941406, -0.0018405914306640625, -0.0001316070556640625, -1.9073486328125e-06, -0.04250526428222656, -1.9073486328125e-06, -2.7418136596679688e-05, 0.0, -0.01757013238966465, -1.9073486328125e-06, -0.0018510818481445312, 0.0, -0.02526867389678955, -0.0003757476806640625, -3.24249267578125e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.6079349517822266, -0.0074977874755859375, -0.0002803802490234375, 0.0, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, 0.0, -0.0003604888916015625, 0.0, -0.004669189453125, -0.000743865966796875, -3.814697265625e-06, -0.010831832885742188, 0.0, -1.52587890625e-05, -0.000278472900390625, -0.0003795623779296875, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -4.00543212890625e-05, -3.62396240234375e-05, 0.0, -0.0004863739013671875, -0.0001697540283203125, -6.67572021484375e-05, -0.027606964111328125, -8.96453857421875e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.001308441162109375, -1.9073486328125e-06, -0.00028264522552490234, 0.0, -0.009711846709251404, -1.9073486328125e-06, -0.0011359453201293945, -1.9073486328125e-06, -0.44220125675201416, -4.38690185546875e-05, -3.814697265625e-05, -0.0001678466796875, -1.9073486328125e-06, -0.419156551361084, -0.005043983459472656, -0.0002269744873046875, 0.0, -6.67572021484375e-05, 0.0, -7.05718994140625e-05, 0.0, -0.000423431396484375, 0.0, -0.0036182403564453125, -1.9073486328125e-05, -0.06612682342529297, 0.0, -0.00022125244140625, -0.0001392364501953125, -0.9321880340576172, -2.86102294921875e-05, -4.76837158203125e-05, 0.0, -7.05718994140625e-05, -0.052951931953430176, -1.1920928244535389e-07, -0.000141143798828125, -0.000118255615234375, -8.96453857421875e-05, -0.24779415130615234, -0.0001544952392578125, -2.6702880859375e-05, -1.9073486328125e-06, -0.000209808349609375, 0.0, -0.00018513202667236328, 0.0, -0.022541403770446777, -1.9073486328125e-06, -0.001334547996520996, 0.0, -0.248213529586792, -6.67572021484375e-05, -3.62396240234375e-05, -0.0001811981201171875, -3.814697265625e-06, -0.40693533420562744, -0.004906654357910156, -0.0002193450927734375, 0.0, -8.58306884765625e-05, 0.0, -5.91278076171875e-05, 0.0, -0.00038909912109375, 0.0], "choice_history": [97, 284, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 358, 128, 233, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Vaporize", "hole2": "MAGE"}], "hole0": "Vaporize", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def can_use(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "score": -6.035330792168217, "score_history": [-0.010079383850097656, -0.642695426940918, -0.009383167140185833, -7.7841330494266e-05, -4.076914774486795e-05, -0.0011337954783812165, -0.00022706834715791047, -0.26442718505859375, -0.0027675628662109375, -0.000225067138671875, -4.923231608700007e-05, 0.0, -3.814689534920035e-06, 0.0, -0.0002899169921875, -0.000579833984375, -0.00148773193359375, -5.7220458984375e-06, -0.7530460357666016, -3.814697265625e-06, -0.0015351641923189163, 0.0, -0.0002288818359375, -0.001850128173828125, -3.814697265625e-05, -0.03972816467285156, -0.00101470947265625, -0.0006465911865234375, -1.9073486328125e-06, -0.004001617431640625, -1.9073486328125e-06, -3.2901763916015625e-05, 0.0, -0.014642472378909588, 0.0, -0.0020880699157714844, 0.0, -0.03289484977722168, -0.0001544952392578125, -6.29425048828125e-05, -0.000156402587890625, 0.0, -0.6297392845153809, -0.007480621337890625, -0.00026702880859375, 0.0, -2.6702880859375e-05, 0.0, -6.866455078125e-05, 0.0, -0.000377655029296875, 0.0, -0.004711151123046875, -0.000762939453125, -3.814697265625e-06, -0.010399818420410156, 0.0, -1.52587890625e-05, -0.0002574920654296875, -0.00037384033203125, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -4.00543212890625e-05, -3.62396240234375e-05, 0.0, -0.000492095947265625, -0.0001697540283203125, -6.67572021484375e-05, -0.02768707275390625, -8.7738037109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012912750244140625, -1.9073486328125e-06, -0.00028264522552490234, 0.0, -0.009696588851511478, -1.9073486328125e-06, -0.0011358261108398438, -1.9073486328125e-06, -1.0498710870742798, -0.0002193450927734375, -2.47955322265625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -0.4061739444732666, -0.004429817199707031, -0.0001316070556640625, 0.0, -5.340576171875e-05, 0.0, -7.82012939453125e-05, 0.0, -0.0004138946533203125, 0.0, -0.003849029541015625, -1.9073486328125e-05, -0.06487751007080078, 0.0, -0.0002231597900390625, -0.00014495849609375, -1.0304203033447266, -2.86102294921875e-05, -4.76837158203125e-05, 0.0, -7.2479248046875e-05, -0.05596458911895752, -1.1920928244535389e-07, -0.0001430511474609375, -0.000118255615234375, -8.96453857421875e-05, -0.2526721954345703, -0.000156402587890625, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002079010009765625, 0.0, -0.00018703937530517578, 0.0, -0.022774577140808105, -1.9073486328125e-06, -0.0013364553451538086, 0.0, -0.24617457389831543, -6.866455078125e-05, -3.62396240234375e-05, -0.0001811981201171875, -3.814697265625e-06, -0.4072037935256958, -0.004895210266113281, -0.0002193450927734375, 0.0, -8.58306884765625e-05, 0.0, -5.91278076171875e-05, 0.0, -0.00038909912109375, 0.0], "choice_history": [97, 284, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 358, 128, 233, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Vaporize", "hole2": "MAGE"}], "hole0": "Vaporize", "_type": "Template5", "hole3": "can_use", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def can_use(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "score": -6.053604144813555, "score_history": [-0.010079383850097656, -0.642695426940918, -0.009383167140185833, -7.7841330494266e-05, -4.076914774486795e-05, -0.0011337954783812165, -0.00022706834715791047, -0.26442718505859375, -0.0027675628662109375, -0.000225067138671875, -4.923231608700007e-05, 0.0, -3.814689534920035e-06, 0.0, -0.0002899169921875, -0.000579833984375, -0.00148773193359375, -5.7220458984375e-06, -0.7530460357666016, -3.814697265625e-06, -0.0015351641923189163, 0.0, -0.0002288818359375, -0.001850128173828125, -3.814697265625e-05, -0.03972816467285156, -0.00101470947265625, -0.0006465911865234375, -1.9073486328125e-06, -0.004001617431640625, -1.9073486328125e-06, -3.2901763916015625e-05, 0.0, -0.014642472378909588, 0.0, -0.0020880699157714844, 0.0, -0.03289484977722168, -0.0001544952392578125, -6.29425048828125e-05, -0.000156402587890625, 0.0, -1.333284854888916, -0.000469207763671875, -4.00543212890625e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0002613067626953125, 0.0, -0.0004482269287109375, 0.0, -0.005442619323730469, -0.0009002685546875, -3.814697265625e-06, -0.010936737060546875, 0.0, -1.52587890625e-05, -0.0002727508544921875, -0.000370025634765625, -1.9073486328125e-06, -6.103515625e-05, 0.0, -3.814697265625e-05, -3.62396240234375e-05, 0.0, -0.0004673004150390625, -0.000164031982421875, -6.866455078125e-05, -0.027486801147460938, -9.1552734375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0012760162353515625, -1.9073486328125e-06, -0.00029218196868896484, 0.0, -0.009557470679283142, -1.9073486328125e-06, -0.0011246204376220703, -1.9073486328125e-06, -0.440646767616272, -4.38690185546875e-05, -3.814697265625e-05, -0.0001697540283203125, -1.9073486328125e-06, -0.4215735197067261, -0.005016326904296875, -0.0002307891845703125, 0.0, -6.67572021484375e-05, 0.0, -7.05718994140625e-05, 0.0, -0.000423431396484375, 0.0, -0.0040874481201171875, -1.9073486328125e-05, -0.06551361083984375, 0.0, -0.0002193450927734375, -0.0001392364501953125, -0.9508581161499023, -2.86102294921875e-05, -4.76837158203125e-05, 0.0, -7.05718994140625e-05, -0.05307590961456299, -1.1920928244535389e-07, -0.0001430511474609375, -0.000118255615234375, -8.96453857421875e-05, -0.2470989227294922, -0.0001544952392578125, -2.6702880859375e-05, -1.9073486328125e-06, -0.000209808349609375, 0.0, -0.00018703937530517578, 0.0, -0.02260911464691162, -1.9073486328125e-06, -0.0013364553451538086, 0.0, -0.24724650382995605, -6.67572021484375e-05, -3.62396240234375e-05, -0.0001811981201171875, -3.814697265625e-06, -0.40731966495513916, -0.004906654357910156, -0.0002193450927734375, 0.0, -8.58306884765625e-05, 0.0, -5.91278076171875e-05, 0.0, -0.00038909912109375, 0.0], "choice_history": [97, 284, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 358, 128, 233, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Vaporize", "hole2": "MAGE"}], "hole0": "Vaporize", "_type": "Template5", "hole3": "can_use", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "score": -6.079079211434411, "score_history": [-0.010079383850097656, -0.642695426940918, -0.009383167140185833, -7.7841330494266e-05, -4.076914774486795e-05, -0.0011337954783812165, -0.00022706834715791047, -0.26442718505859375, -0.0027675628662109375, -0.000225067138671875, -4.923231608700007e-05, 0.0, -3.814689534920035e-06, 0.0, -0.0002899169921875, -0.000579833984375, -0.00148773193359375, -5.7220458984375e-06, -0.7904043197631836, -3.24249267578125e-05, -0.002036720048636198, 0.0, -0.0004634857177734375, -0.000423431396484375, -0.00018310546875, -0.04059791564941406, -0.0018405914306640625, -0.0001316070556640625, -1.9073486328125e-06, -0.04250526428222656, -1.9073486328125e-06, -2.7418136596679688e-05, 0.0, -0.01757013238966465, -1.9073486328125e-06, -0.0018510818481445312, 0.0, -0.02526867389678955, -0.0003757476806640625, -3.24249267578125e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.6079349517822266, -0.0074977874755859375, -0.0002803802490234375, 0.0, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, 0.0, -0.0003604888916015625, 0.0, -0.004669189453125, -0.000743865966796875, -3.814697265625e-06, -0.010831832885742188, 0.0, -1.52587890625e-05, -0.000278472900390625, -0.0003795623779296875, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -4.00543212890625e-05, -3.62396240234375e-05, 0.0, -0.0004863739013671875, -0.0001697540283203125, -6.67572021484375e-05, -0.027606964111328125, -8.96453857421875e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.001308441162109375, -1.9073486328125e-06, -0.00028264522552490234, 0.0, -0.009711846709251404, -1.9073486328125e-06, -0.0011359453201293945, -1.9073486328125e-06, -1.038779854774475, -0.0002193450927734375, -2.288818359375e-05, -8.7738037109375e-05, -1.9073486328125e-06, -0.40660834312438965, -0.004437446594238281, -0.0001316070556640625, 0.0, -5.340576171875e-05, 0.0, -7.82012939453125e-05, 0.0, -0.000415802001953125, 0.0, -0.0038471221923828125, -1.9073486328125e-05, -0.06514835357666016, 0.0, -0.0002231597900390625, -0.00014495849609375, -1.034754753112793, -2.86102294921875e-05, -4.76837158203125e-05, 0.0, -7.2479248046875e-05, -0.05582630634307861, -1.1920928244535389e-07, -0.0001430511474609375, -0.0001163482666015625, -8.96453857421875e-05, -0.25215816497802734, -0.000156402587890625, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002079010009765625, 0.0, -0.00018703937530517578, 0.0, -0.02273738384246826, -1.9073486328125e-06, -0.0013364553451538086, 0.0, -0.24640345573425293, -6.67572021484375e-05, -3.62396240234375e-05, -0.0001811981201171875, -3.814697265625e-06, -0.40719854831695557, -0.004893302917480469, -0.0002193450927734375, 0.0, -8.58306884765625e-05, 0.0, -5.91278076171875e-05, 0.0, -0.00038909912109375, 0.0], "choice_history": [97, 284, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 358, 128, 233, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Vaporize", "hole2": "MAGE"}], "hole0": "Vaporize", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def can_use(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n", "score": -6.770650644997197, "score_history": [-0.010079383850097656, -0.642695426940918, -0.009383167140185833, -7.7841330494266e-05, -4.076914774486795e-05, -0.0011337954783812165, -0.00022706834715791047, -0.26442718505859375, -0.0027675628662109375, -0.000225067138671875, -4.923231608700007e-05, 0.0, -3.814689534920035e-06, 0.0, -0.0002899169921875, -0.000579833984375, -0.00148773193359375, -5.7220458984375e-06, -0.7530460357666016, -3.814697265625e-06, -0.0015351641923189163, 0.0, -0.0002288818359375, -0.001850128173828125, -3.814697265625e-05, -0.03972816467285156, -0.00101470947265625, -0.0006465911865234375, -1.9073486328125e-06, -0.004001617431640625, -1.9073486328125e-06, -3.2901763916015625e-05, 0.0, -0.014642472378909588, 0.0, -0.0020880699157714844, 0.0, -0.03289484977722168, -0.0001544952392578125, -6.29425048828125e-05, -0.000156402587890625, 0.0, -0.6297392845153809, -0.007480621337890625, -0.00026702880859375, 0.0, -2.6702880859375e-05, 0.0, -6.866455078125e-05, 0.0, -0.000377655029296875, 0.0, -0.004711151123046875, -0.000762939453125, -3.814697265625e-06, -0.010399818420410156, 0.0, -1.52587890625e-05, -0.0002574920654296875, -0.00037384033203125, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -4.00543212890625e-05, -3.62396240234375e-05, 0.0, -0.000492095947265625, -0.0001697540283203125, -6.67572021484375e-05, -0.02768707275390625, -8.7738037109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012912750244140625, -1.9073486328125e-06, -0.00028264522552490234, 0.0, -0.009696588851511478, -1.9073486328125e-06, -0.0011358261108398438, -1.9073486328125e-06, -0.4361149072647095, -4.57763671875e-05, -3.814697265625e-05, -0.0001678466796875, -1.9073486328125e-06, -0.4185352325439453, -0.005042076110839844, -0.0002269744873046875, 0.0, -6.67572021484375e-05, 0.0, -7.05718994140625e-05, 0.0, -0.0004215240478515625, 0.0, -0.0036182403564453125, -1.9073486328125e-05, -0.0658111572265625, 0.0, -0.00022125244140625, -0.0001373291015625, -0.9287509918212891, -2.86102294921875e-05, -4.76837158203125e-05, 0.0, -7.05718994140625e-05, -0.0530778169631958, -1.1920928244535389e-07, -0.0001430511474609375, -0.000118255615234375, -8.96453857421875e-05, -0.24823379516601562, -0.0001544952392578125, -2.6702880859375e-05, -1.9073486328125e-06, -0.000209808349609375, 0.0, -0.00018513202667236328, 0.0, -0.022577643394470215, -1.9073486328125e-06, -0.001334547996520996, 0.0, -0.2479865550994873, -6.67572021484375e-05, -3.62396240234375e-05, -0.0001811981201171875, -3.814697265625e-06, -1.8543421030044556, -0.0004024505615234375, -2.86102294921875e-05, 0.0, -0.000171661376953125, 0.0, -0.000240325927734375, 0.0, -0.00043487548828125, 0.0], "choice_history": [97, 284, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 358, 128, 233, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Vaporize", "hole2": "MAGE"}], "hole0": "Vaporize", "_type": "Template5", "hole3": "can_use", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n", "score": -6.830977261742639, "score_history": [-0.010079383850097656, -0.642695426940918, -0.009383167140185833, -7.7841330494266e-05, -4.076914774486795e-05, -0.0011337954783812165, -0.00022706834715791047, -0.26442718505859375, -0.0027675628662109375, -0.000225067138671875, -4.923231608700007e-05, 0.0, -3.814689534920035e-06, 0.0, -0.0002899169921875, -0.000579833984375, -0.00148773193359375, -5.7220458984375e-06, -0.7904043197631836, -3.24249267578125e-05, -0.002036720048636198, 0.0, -0.0004634857177734375, -0.000423431396484375, -0.00018310546875, -0.04059791564941406, -0.0018405914306640625, -0.0001316070556640625, -1.9073486328125e-06, -0.04250526428222656, -1.9073486328125e-06, -2.7418136596679688e-05, 0.0, -0.01757013238966465, -1.9073486328125e-06, -0.0018510818481445312, 0.0, -0.02526867389678955, -0.0003757476806640625, -3.24249267578125e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.6079349517822266, -0.0074977874755859375, -0.0002803802490234375, 0.0, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, 0.0, -0.0003604888916015625, 0.0, -0.004669189453125, -0.000743865966796875, -3.814697265625e-06, -0.010831832885742188, 0.0, -1.52587890625e-05, -0.000278472900390625, -0.0003795623779296875, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -4.00543212890625e-05, -3.62396240234375e-05, 0.0, -0.0004863739013671875, -0.0001697540283203125, -6.67572021484375e-05, -0.027606964111328125, -8.96453857421875e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.001308441162109375, -1.9073486328125e-06, -0.00028264522552490234, 0.0, -0.009711846709251404, -1.9073486328125e-06, -0.0011359453201293945, -1.9073486328125e-06, -0.44220125675201416, -4.38690185546875e-05, -3.814697265625e-05, -0.0001678466796875, -1.9073486328125e-06, -0.419156551361084, -0.005043983459472656, -0.0002269744873046875, 0.0, -6.67572021484375e-05, 0.0, -7.05718994140625e-05, 0.0, -0.000423431396484375, 0.0, -0.0036182403564453125, -1.9073486328125e-05, -0.06612682342529297, 0.0, -0.00022125244140625, -0.0001392364501953125, -0.9321880340576172, -2.86102294921875e-05, -4.76837158203125e-05, 0.0, -7.05718994140625e-05, -0.052951931953430176, -1.1920928244535389e-07, -0.000141143798828125, -0.000118255615234375, -8.96453857421875e-05, -0.24779415130615234, -0.0001544952392578125, -2.6702880859375e-05, -1.9073486328125e-06, -0.000209808349609375, 0.0, -0.00018513202667236328, 0.0, -0.022541403770446777, -1.9073486328125e-06, -0.001334547996520996, 0.0, -0.248213529586792, -6.67572021484375e-05, -3.62396240234375e-05, -0.0001811981201171875, -3.814697265625e-06, -1.8543154001235962, -0.0004024505615234375, -2.86102294921875e-05, 0.0, -0.000171661376953125, 0.0, -0.000240325927734375, 0.0, -0.00043487548828125, 0.0], "choice_history": [97, 284, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 358, 128, 233, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "minion_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "minion_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Vaporize", "hole2": "MAGE"}], "hole0": "Vaporize", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n        self.player = Null\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def _reveal(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "score": -6.909608032006979, "score_history": [-0.010079383850097656, -0.642695426940918, -0.009383167140185833, -7.7841330494266e-05, -4.076914774486795e-05, -0.0011337954783812165, -0.00022706834715791047, -1.914383888244629, -0.07282447814941406, -0.0003795623779296875, -6.079665126890177e-06, 0.0, -8.344646857949556e-07, -1.9073486328125e-06, -0.0002346038818359375, -0.000453948974609375, -0.0010929107666015625, -5.7220458984375e-06, -0.10684967041015625, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-05, -4.00543212890625e-05, -0.000110626220703125, 0.0, -0.01830291748046875, 0.0, -0.0001850128173828125, 0.0, -0.01428985595703125, -8.20159912109375e-05, -0.00021231173013802618, -2.384185791015625e-06, -0.18837547302246094, -3.814697265625e-06, -0.23915456235408783, 0.0, -0.10580635070800781, -0.0012664794921875, -4.00543212890625e-05, -0.01285552978515625, -0.000568389892578125, -0.002338409423828125, -1.9073486328125e-06, -0.0004119873046875, 0.0, -0.00011456012725830078, 0.0, -0.02002739906311035, 0.0, -0.001957416534423828, 0.0, -0.06649792194366455, -0.00057220458984375, -0.0001392364501953125, -9.1552734375e-05, -1.9073486328125e-06, -0.6722933053970337, -0.009051322937011719, -0.000370025634765625, 0.0, -3.0517578125e-05, 0.0, -4.38690185546875e-05, 0.0, -0.000335693359375, 0.0, -0.004549980163574219, -0.000850677490234375, -5.7220458984375e-06, -0.009004592895507812, 0.0, -9.5367431640625e-06, -0.000141143798828125, -0.000335693359375, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -3.62396240234375e-05, -4.38690185546875e-05, 0.0, -0.000522613525390625, -0.00017547607421875, -6.67572021484375e-05, -0.027223587036132812, -8.7738037109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0011997222900390625, -1.9073486328125e-06, -0.00029027462005615234, 0.0, -0.009704816155135632, -1.9073486328125e-06, -0.001139521598815918, -1.9073486328125e-06, -0.42980337142944336, -4.57763671875e-05, -3.814697265625e-05, -0.0001678466796875, -1.9073486328125e-06, -0.4158473014831543, -0.005059242248535156, -0.0002288818359375, 0.0, -6.866455078125e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0004119873046875, 0.0, -0.0036754608154296875, -1.71661376953125e-05, -0.06583213806152344, 0.0, -0.0002079010009765625, -0.0001163482666015625, -0.8304557800292969, -2.86102294921875e-05, -4.76837158203125e-05, 0.0, -6.67572021484375e-05, -0.052288174629211426, -1.1920928244535389e-07, -0.0001430511474609375, -0.0001201629638671875, -8.96453857421875e-05, -0.2491283416748047, -0.000152587890625, -2.6702880859375e-05, -1.9073486328125e-06, -0.000209808349609375, 0.0, -0.00018513202667236328, 0.0, -0.02279043197631836, -1.9073486328125e-06, -0.0013364553451538086, 0.0, -0.2477424144744873, -6.67572021484375e-05, -3.62396240234375e-05, -0.0001811981201171875, -3.814697265625e-06, -0.4062601327896118, -0.00492095947265625, -0.0002193450927734375, 0.0, -8.58306884765625e-05, 0.0, -5.7220458984375e-05, 0.0, -0.00038909912109375, 0.0], "choice_history": [97, 284, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 359, 128, 233, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", 102, 142, 346, 42, 143, 21, 174, "self", "<EOS>", "player", "<EOS>", 22, 176, "Null", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Vaporize", "hole2": "MAGE"}, {"value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign", "targets": [{"value": {"id": "self", "_type": "Name"}, "attr": "player", "_type": "Attribute"}]}], "hole0": "Vaporize", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 3):\n            <UNK>.summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        super().use(player, game)\n", "score": -8.041260698904331, "score_history": [-0.010079383850097656, -0.7783432006835938, -0.0007334641413763165, -0.0008276972221210599, -0.0006836633547209203, -0.0004191398620605469, -4.649158654501662e-06, -0.5359992980957031, -0.0002117156982421875, -0.0001697540283203125, -0.00014351795834954828, -1.9073486328125e-06, -8.344646857949556e-07, 0.0, -0.000244140625, -0.0005054473876953125, -0.0003452301025390625, -3.814697265625e-06, -0.0818643569946289, -1.9073486328125e-06, -0.0005483627319335938, 0.0, -6.4849853515625e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -0.02766132354736328, -0.027576446533203125, -2.6702880859375e-05, -0.000835418701171875, -0.000110626220703125, -0.000179290771484375, 0.0, -9.775161743164062e-06, 0.0, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.00164794921875, -0.005745887756347656, -4.9591064453125e-05, -0.11124718189239502, 0.0, -0.007633209228515625, -2.47955322265625e-05, -0.0002346038818359375, -1.1444091796875e-05, -7.2479248046875e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.7881706953048706, -5.960462772236497e-07, -1.1444091796875e-05, -0.018064022064208984, -5.6028297876764555e-06, -0.000263214111328125, -0.6263694763183594, -0.0005016326904296875, -0.007424354553222656, -0.0001068115234375, -4.00543212890625e-05, -0.001857757568359375, -0.0017948150634765625, -0.0038089752197265625, -0.0004596710205078125, 0.0, -6.675719760096399e-06, -5.7220458984375e-06, -0.0062389373779296875, 0.0, -0.000118255615234375, -1.9073486328125e-06, -1.3470649719238281e-05, -4.768370445162873e-07, -0.017559051513671875, -3.814697265625e-05, -0.0001583099365234375, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -0.0002652406692504883, -4.291534423828125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.032009124755859375, 0.0, -0.0029888153076171875, 0.0, -0.0018559694290161133, -1.33514404296875e-05, -7.62939453125e-06, -0.0007915496826171875, -0.00026702880859375, -4.57763671875e-05, -0.00037384033203125, -0.005557417869567871, -3.814697265625e-06, -0.05196380615234375, -0.0008716583251953125, -0.8371181488037109, -1.33514404296875e-05, -0.0008983612060546875, -0.0004634857177734375, -0.003345489501953125, -1.9073486328125e-06, -9.72747802734375e-05, -4.768370445162873e-07, -1.9073486328125e-06, -0.07234525680541992, -1.0728830375228426e-06, -3.814697265625e-06, -0.00769352912902832, -6.318082796497038e-06, -0.5959863662719727, -0.0003414154052734375, -0.0004100799560546875, -1.52587890625e-05, -0.0001201629638671875, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.867813110351562e-06, -1.9073486328125e-06, -1.430511474609375e-05, -1.1920928244535389e-07, -0.014003753662109375, -0.0004825592041015625, -6.29425048828125e-05, -9.5367431640625e-06, -0.05655395984649658, -5.7220458984375e-06, -0.10733604431152344, -0.000133514404296875, -0.0005855560302734375, -3.814697265625e-06, -0.0024033784866333008, 0.0, -0.0002956390380859375, -0.000152587890625, -1.9073486328125e-06, -0.0002454519271850586, -5.7220458984375e-06, -0.0006465911865234375, -1.9073486328125e-06, -0.03199601173400879, -1.9073486328125e-06, -0.024370193481445312, -0.44297122955322266, -0.0001392364501953125, -0.017442703247070312, -9.5367431640625e-06, -0.2707843780517578, -8.392329618800431e-05, -0.0025784920435398817, -2.6702880859375e-05, -0.0006389617919921875, -0.0003299713134765625, 0.0, -0.0027066469192504883, 0.0, -0.30356788635253906, -5.7220458984375e-06, -0.00019073486328125, 0.0, -0.011569976806640625, -2.288818359375e-05, -1.33514404296875e-05, -0.000102996826171875, -0.0002593994140625, -3.814697265625e-06, -1.52587890625e-05, -0.0005645751953125, -1.9073486328125e-06, -0.001804351806640625, 0.0, -0.00666046142578125, 0.0, -0.00014495849609375, -3.814697265625e-05, -0.5337343215942383, -6.866455078125e-05, -0.2044086456298828, 0.0, -0.0001316070556640625, -1.71661376953125e-05, -0.003063201904296875, 0.0, -3.0517578125e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0389254093170166, 0.0, -7.62939453125e-06, -0.0003070831298828125, -3.933906555175781e-06, -6.866455078125e-05, -0.27282238006591797, -0.0009784698486328125, -0.00080108642578125, -5.340576171875e-05, -0.0003871917724609375, 0.0, -2.5510787963867188e-05, 0.0, -3.62396240234375e-05, 0.0, -1.1801719665527344e-05, 0.0, -1.2278556823730469e-05, -2.3841855067985307e-07], "choice_history": [97, 286, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 358, 128, 233, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 358, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 360, 108, 157, "_reveal", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 358, 136, 318, 21, 174, "<UNK>", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}], "comparators": [{"n": 7, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "summon", "_type": "Template77", "hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Vaporize", "hole2": "MAGE"}], "hole0": "Vaporize", "_type": "Template5", "hole3": "use", "hole1": "SecretCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}]}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def can_use(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def _reveal(self, attacker, target):\n        if isinstance(target, self):\n            minion_card = game.random_choice(<UNK>)\n", "score": -8.157325256593225, "score_history": [-0.010079383850097656, -0.642695426940918, -0.009383167140185833, -7.7841330494266e-05, -4.076914774486795e-05, -0.0011337954783812165, -0.00022706834715791047, -0.26442718505859375, -0.0027675628662109375, -0.000225067138671875, -4.923231608700007e-05, 0.0, -3.814689534920035e-06, 0.0, -0.0002899169921875, -0.000579833984375, -0.00148773193359375, -5.7220458984375e-06, -0.7530460357666016, -3.814697265625e-06, -0.0015351641923189163, 0.0, -0.0002288818359375, -0.001850128173828125, -3.814697265625e-05, -0.03972816467285156, -0.00101470947265625, -0.0006465911865234375, -1.9073486328125e-06, -0.004001617431640625, -1.9073486328125e-06, -3.2901763916015625e-05, 0.0, -0.014642472378909588, 0.0, -0.0020880699157714844, 0.0, -0.03289484977722168, -0.0001544952392578125, -6.29425048828125e-05, -0.000156402587890625, 0.0, -0.6297392845153809, -0.007480621337890625, -0.00026702880859375, 0.0, -2.6702880859375e-05, 0.0, -6.866455078125e-05, 0.0, -0.000377655029296875, 0.0, -0.004711151123046875, -0.000762939453125, -3.814697265625e-06, -0.010399818420410156, 0.0, -1.52587890625e-05, -0.0002574920654296875, -0.00037384033203125, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -4.00543212890625e-05, -3.62396240234375e-05, 0.0, -0.000492095947265625, -0.0001697540283203125, -6.67572021484375e-05, -0.02768707275390625, -8.7738037109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012912750244140625, -1.9073486328125e-06, -0.00028264522552490234, 0.0, -0.009696588851511478, -1.9073486328125e-06, -0.0011358261108398438, -1.9073486328125e-06, -0.4361149072647095, -4.57763671875e-05, -3.814697265625e-05, -0.0001678466796875, -1.9073486328125e-06, -0.4185352325439453, -0.005042076110839844, -0.0002269744873046875, 0.0, -6.67572021484375e-05, 0.0, -7.05718994140625e-05, 0.0, -0.0004215240478515625, 0.0, -0.0036182403564453125, -1.9073486328125e-05, -0.0658111572265625, 0.0, -0.00022125244140625, -0.0001373291015625, -0.6147394180297852, -3.814697265625e-06, -0.00034999847412109375, 0.0, -1.52587890625e-05, -0.1905198097229004, -8.344646857949556e-07, -2.6702880859375e-05, -0.1364959478378296, -5.364403477869928e-06, -0.0002422332763671875, -0.00699615478515625, -0.00026702880859375, -0.10892295837402344, -0.000244140625, -6.4849853515625e-05, 0.0, -0.1008053719997406, -1.8000440832111053e-05, -0.0025615692138671875, -0.01784229278564453, -1.9073486328125e-06, -0.5692750215530396, -3.755022044060752e-05, -0.02168750762939453, -5.7220458984375e-06, -1.0346921682357788, -2.3841855067985307e-07, -0.003231048583984375, -0.40442562103271484, 0.0, -5.7220458984375e-06, -0.0002651214599609375, 0.0, -0.22581541538238525, 0.0, -0.1397867202758789, -0.0001983642578125, -0.0002193450927734375, -9.5367431640625e-06, -0.0027141571044921875, 0.0, -0.6209101676940918, 0.0, -0.16475462913513184, -1.33514404296875e-05, -1.52587890625e-05, -0.022497177124023438, 0.0, -0.35491466522216797, -2.372236667724792e-05], "choice_history": [97, 284, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 358, 128, 233, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "attacker", "<EOS>", 333, "target", "<EOS>", 358, 109, 160, 16, 150, 21, 174, "isinstance", "<EOS>", 347, 50, 174, "target", "<EOS>", 50, 174, "self", "<EOS>", 358, 102, 142, 346, 50, 174, "minion_card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion_card", "_type": "Name"}]}], "test": {"func": {"id": "isinstance", "_type": "Name"}, "args": [{"id": "target", "_type": "Name"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "If"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Vaporize", "hole2": "MAGE"}], "hole0": "Vaporize", "_type": "Template5", "hole3": "can_use", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def _reveal(self, attacker, target):\n        if isinstance(target, self):\n            minion_card = game.random_choice(<UNK>)\n", "score": -8.21161392282292, "score_history": [-0.010079383850097656, -0.642695426940918, -0.009383167140185833, -7.7841330494266e-05, -4.076914774486795e-05, -0.0011337954783812165, -0.00022706834715791047, -0.26442718505859375, -0.0027675628662109375, -0.000225067138671875, -4.923231608700007e-05, 0.0, -3.814689534920035e-06, 0.0, -0.0002899169921875, -0.000579833984375, -0.00148773193359375, -5.7220458984375e-06, -0.7904043197631836, -3.24249267578125e-05, -0.002036720048636198, 0.0, -0.0004634857177734375, -0.000423431396484375, -0.00018310546875, -0.04059791564941406, -0.0018405914306640625, -0.0001316070556640625, -1.9073486328125e-06, -0.04250526428222656, -1.9073486328125e-06, -2.7418136596679688e-05, 0.0, -0.01757013238966465, -1.9073486328125e-06, -0.0018510818481445312, 0.0, -0.02526867389678955, -0.0003757476806640625, -3.24249267578125e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.6079349517822266, -0.0074977874755859375, -0.0002803802490234375, 0.0, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, 0.0, -0.0003604888916015625, 0.0, -0.004669189453125, -0.000743865966796875, -3.814697265625e-06, -0.010831832885742188, 0.0, -1.52587890625e-05, -0.000278472900390625, -0.0003795623779296875, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -4.00543212890625e-05, -3.62396240234375e-05, 0.0, -0.0004863739013671875, -0.0001697540283203125, -6.67572021484375e-05, -0.027606964111328125, -8.96453857421875e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.001308441162109375, -1.9073486328125e-06, -0.00028264522552490234, 0.0, -0.009711846709251404, -1.9073486328125e-06, -0.0011359453201293945, -1.9073486328125e-06, -0.44220125675201416, -4.38690185546875e-05, -3.814697265625e-05, -0.0001678466796875, -1.9073486328125e-06, -0.419156551361084, -0.005043983459472656, -0.0002269744873046875, 0.0, -6.67572021484375e-05, 0.0, -7.05718994140625e-05, 0.0, -0.000423431396484375, 0.0, -0.0036182403564453125, -1.9073486328125e-05, -0.06612682342529297, 0.0, -0.00022125244140625, -0.0001392364501953125, -0.6112327575683594, -3.814697265625e-06, -0.0003490447998046875, 0.0, -1.52587890625e-05, -0.19062280654907227, -8.344646857949556e-07, -2.6702880859375e-05, -0.13671433925628662, -5.364403477869928e-06, -0.0002422332763671875, -0.00702667236328125, -0.00026702880859375, -0.10895061492919922, -0.0002460479736328125, -6.4849853515625e-05, 0.0, -0.10082659125328064, -1.8000440832111053e-05, -0.0025653839111328125, -0.01784229278564453, -1.9073486328125e-06, -0.5693250894546509, -3.755022044060752e-05, -0.021677017211914062, -5.7220458984375e-06, -1.034802794456482, -2.3841855067985307e-07, -0.0032329559326171875, -0.4044532775878906, 0.0, -5.7220458984375e-06, -0.0002651214599609375, 0.0, -0.2257930040359497, 0.0, -0.13978958129882812, -0.0001983642578125, -0.0002193450927734375, -9.5367431640625e-06, -0.0027141571044921875, 0.0, -0.6208705902099609, 0.0, -0.16475462913513184, -1.33514404296875e-05, -1.52587890625e-05, -0.02249908447265625, 0.0, -0.354888916015625, -2.372236667724792e-05], "choice_history": [97, 284, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 358, 128, 233, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "attacker", "<EOS>", 333, "target", "<EOS>", 358, 109, 160, 16, 150, 21, 174, "isinstance", "<EOS>", 347, 50, 174, "target", "<EOS>", 50, 174, "self", "<EOS>", 358, 102, 142, 346, 50, 174, "minion_card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "unbind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion_card", "_type": "Name"}]}], "test": {"func": {"id": "isinstance", "_type": "Name"}, "args": [{"id": "target", "_type": "Name"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "If"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Vaporize", "hole2": "MAGE"}], "hole0": "Vaporize", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def can_use(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def _reveal(self, attacker, target):\n        if isinstance(target, self):\n            minion_card = game.random_choice(<UNK>)\n", "score": -8.680970538379341, "score_history": [-0.010079383850097656, -0.642695426940918, -0.009383167140185833, -7.7841330494266e-05, -4.076914774486795e-05, -0.0011337954783812165, -0.00022706834715791047, -0.26442718505859375, -0.0027675628662109375, -0.000225067138671875, -4.923231608700007e-05, 0.0, -3.814689534920035e-06, 0.0, -0.0002899169921875, -0.000579833984375, -0.00148773193359375, -5.7220458984375e-06, -0.7530460357666016, -3.814697265625e-06, -0.0015351641923189163, 0.0, -0.0002288818359375, -0.001850128173828125, -3.814697265625e-05, -0.03972816467285156, -0.00101470947265625, -0.0006465911865234375, -1.9073486328125e-06, -0.004001617431640625, -1.9073486328125e-06, -3.2901763916015625e-05, 0.0, -0.014642472378909588, 0.0, -0.0020880699157714844, 0.0, -0.03289484977722168, -0.0001544952392578125, -6.29425048828125e-05, -0.000156402587890625, 0.0, -0.6297392845153809, -0.007480621337890625, -0.00026702880859375, 0.0, -2.6702880859375e-05, 0.0, -6.866455078125e-05, 0.0, -0.000377655029296875, 0.0, -0.004711151123046875, -0.000762939453125, -3.814697265625e-06, -0.010399818420410156, 0.0, -1.52587890625e-05, -0.0002574920654296875, -0.00037384033203125, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -4.00543212890625e-05, -3.62396240234375e-05, 0.0, -0.000492095947265625, -0.0001697540283203125, -6.67572021484375e-05, -0.02768707275390625, -8.7738037109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0012912750244140625, -1.9073486328125e-06, -0.00028264522552490234, 0.0, -0.009696588851511478, -1.9073486328125e-06, -0.0011358261108398438, -1.9073486328125e-06, -1.0498710870742798, -0.0002193450927734375, -2.47955322265625e-05, -8.7738037109375e-05, -1.9073486328125e-06, -0.4061739444732666, -0.004429817199707031, -0.0001316070556640625, 0.0, -5.340576171875e-05, 0.0, -7.82012939453125e-05, 0.0, -0.0004138946533203125, 0.0, -0.003849029541015625, -1.9073486328125e-05, -0.06487751007080078, 0.0, -0.0002231597900390625, -0.00014495849609375, -0.5389280319213867, -1.9073486328125e-06, -0.00033855438232421875, 0.0, -1.52587890625e-05, -0.19221735000610352, -9.536738616588991e-07, -2.47955322265625e-05, -0.1330627202987671, -5.364403477869928e-06, -0.000240325927734375, -0.0071468353271484375, -0.0002613067626953125, -0.10674381256103516, -0.000247955322265625, -6.4849853515625e-05, 0.0, -0.10054275393486023, -1.7881233361549675e-05, -0.0025386810302734375, -0.01798248291015625, -1.9073486328125e-06, -0.5680404901504517, -3.7788631743751466e-05, -0.021485328674316406, -5.7220458984375e-06, -1.0438746213912964, -2.3841855067985307e-07, -0.003269195556640625, -0.40087890625, 0.0, -5.7220458984375e-06, -0.0002651214599609375, 0.0, -0.22545850276947021, 0.0, -0.13987255096435547, -0.0002002716064453125, -0.0002193450927734375, -9.5367431640625e-06, -0.0027141571044921875, 0.0, -0.6204919815063477, 0.0, -0.1647193431854248, -1.33514404296875e-05, -1.52587890625e-05, -0.022502899169921875, 0.0, -0.3547186851501465, -2.372236667724792e-05], "choice_history": [97, 284, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 358, 128, 233, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "attacker", "<EOS>", 333, "target", "<EOS>", 358, 109, 160, 16, 150, 21, 174, "isinstance", "<EOS>", 347, 50, 174, "target", "<EOS>", 50, 174, "self", "<EOS>", 358, 102, 142, 346, 50, 174, "minion_card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion_card", "_type": "Name"}]}], "test": {"func": {"id": "isinstance", "_type": "Name"}, "args": [{"id": "target", "_type": "Name"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "If"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Vaporize", "hole2": "MAGE"}], "hole0": "Vaporize", "_type": "Template5", "hole3": "can_use", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def _reveal(self, attacker, target):\n        if isinstance(target, self):\n            minion_card = game.random_choice(<UNK>)\n", "score": -8.717813997966886, "score_history": [-0.010079383850097656, -0.642695426940918, -0.009383167140185833, -7.7841330494266e-05, -4.076914774486795e-05, -0.0011337954783812165, -0.00022706834715791047, -0.26442718505859375, -0.0027675628662109375, -0.000225067138671875, -4.923231608700007e-05, 0.0, -3.814689534920035e-06, 0.0, -0.0002899169921875, -0.000579833984375, -0.00148773193359375, -5.7220458984375e-06, -0.7904043197631836, -3.24249267578125e-05, -0.002036720048636198, 0.0, -0.0004634857177734375, -0.000423431396484375, -0.00018310546875, -0.04059791564941406, -0.0018405914306640625, -0.0001316070556640625, -1.9073486328125e-06, -0.04250526428222656, -1.9073486328125e-06, -2.7418136596679688e-05, 0.0, -0.01757013238966465, -1.9073486328125e-06, -0.0018510818481445312, 0.0, -0.02526867389678955, -0.0003757476806640625, -3.24249267578125e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.6079349517822266, -0.0074977874755859375, -0.0002803802490234375, 0.0, -2.86102294921875e-05, 0.0, -5.7220458984375e-05, 0.0, -0.0003604888916015625, 0.0, -0.004669189453125, -0.000743865966796875, -3.814697265625e-06, -0.010831832885742188, 0.0, -1.52587890625e-05, -0.000278472900390625, -0.0003795623779296875, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -4.00543212890625e-05, -3.62396240234375e-05, 0.0, -0.0004863739013671875, -0.0001697540283203125, -6.67572021484375e-05, -0.027606964111328125, -8.96453857421875e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.001308441162109375, -1.9073486328125e-06, -0.00028264522552490234, 0.0, -0.009711846709251404, -1.9073486328125e-06, -0.0011359453201293945, -1.9073486328125e-06, -1.038779854774475, -0.0002193450927734375, -2.288818359375e-05, -8.7738037109375e-05, -1.9073486328125e-06, -0.40660834312438965, -0.004437446594238281, -0.0001316070556640625, 0.0, -5.340576171875e-05, 0.0, -7.82012939453125e-05, 0.0, -0.000415802001953125, 0.0, -0.0038471221923828125, -1.9073486328125e-05, -0.06514835357666016, 0.0, -0.0002231597900390625, -0.00014495849609375, -0.5353498458862305, -1.9073486328125e-06, -0.00033855438232421875, 0.0, -1.52587890625e-05, -0.19233083724975586, -9.536738616588991e-07, -2.47955322265625e-05, -0.13327538967132568, -5.364403477869928e-06, -0.000240325927734375, -0.0071773529052734375, -0.0002613067626953125, -0.10678672790527344, -0.000247955322265625, -6.4849853515625e-05, 0.0, -0.1005609929561615, -1.7881233361549675e-05, -0.0025424957275390625, -0.01798248291015625, -1.9073486328125e-06, -0.5681077241897583, -3.7788631743751466e-05, -0.021475791931152344, -5.7220458984375e-06, -1.0439614057540894, -2.3841855067985307e-07, -0.0032711029052734375, -0.4009275436401367, 0.0, -5.7220458984375e-06, -0.0002651214599609375, 0.0, -0.22543799877166748, 0.0, -0.1398754119873047, -0.0002002716064453125, -0.0002193450927734375, -9.5367431640625e-06, -0.0027141571044921875, 0.0, -0.6204509735107422, 0.0, -0.1647202968597412, -1.33514404296875e-05, -1.52587890625e-05, -0.022504806518554688, 0.0, -0.3546938896179199, -2.372236667724792e-05], "choice_history": [97, 284, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 358, 128, 233, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "activate", "<EOS>", "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 359, 108, 157, "deactivate", "<EOS>", 1, 334, 341, 333, "self", "<EOS>", 333, "player", "<EOS>", 358, 136, 318, 13, 143, 13, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 347, 53, 183, "card_played", "<EOS>", 42, 143, 21, 174, "self", "<EOS>", "_reveal", "<EOS>", 108, 157, "_reveal", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "attacker", "<EOS>", 333, "target", "<EOS>", 358, 109, 160, 16, 150, 21, 174, "isinstance", "<EOS>", 347, 50, 174, "target", "<EOS>", 50, 174, "self", "<EOS>", 358, 102, 142, 346, 50, 174, "minion_card", "<EOS>", 16, 150, 13, 143, 21, 174, "game", "<EOS>", "random_choice", "<EOS>", 346, 50, 174, "<UNK>", "<EOS>"], "model_output": {"hole7": [{"body": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "name": "deactivate", "_type": "FunctionDef"}, {"body": [{"body": [{"value": {"func": {"value": {"id": "game", "_type": "Name"}, "attr": "random_choice", "_type": "Attribute"}, "args": [{"id": "<UNK>", "_type": "Name"}], "_type": "Call"}, "_type": "Assign", "targets": [{"id": "minion_card", "_type": "Name"}]}], "test": {"func": {"id": "isinstance", "_type": "Name"}, "args": [{"id": "target", "_type": "Name"}, {"id": "self", "_type": "Name"}], "_type": "Call"}, "_type": "If"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}], "hole6": [{"hole1": "bind", "_type": "Template77", "hole0": {"value": {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, "attr": "current_player", "_type": "Attribute"}, "hole2": [{"s": "card_played", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "attr": "_reveal", "_type": "Attribute"}]}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Vaporize", "hole2": "MAGE"}], "hole0": "Vaporize", "_type": "Template5", "hole3": "activate", "hole1": "SecretCard", "hole4": "player"}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 3):\n            <UNK>.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        super().use(player, game)\n", "score": -9.289634564985569, "score_history": [-0.010079383850097656, -0.7783432006835938, -0.0007334641413763165, -0.0008276972221210599, -0.0006836633547209203, -0.0004191398620605469, -4.649158654501662e-06, -0.5359992980957031, -0.0002117156982421875, -0.0001697540283203125, -0.00014351795834954828, -1.9073486328125e-06, -8.344646857949556e-07, 0.0, -0.000244140625, -0.0005054473876953125, -0.0003452301025390625, -3.814697265625e-06, -0.0818643569946289, -1.9073486328125e-06, -0.0005483627319335938, 0.0, -6.4849853515625e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -0.02766132354736328, -0.027576446533203125, -2.6702880859375e-05, -0.000835418701171875, -0.000110626220703125, -0.000179290771484375, 0.0, -9.775161743164062e-06, 0.0, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.00164794921875, -0.005745887756347656, -4.9591064453125e-05, -0.11124718189239502, 0.0, -0.007633209228515625, -2.47955322265625e-05, -0.0002346038818359375, -1.1444091796875e-05, -7.2479248046875e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.7881706953048706, -5.960462772236497e-07, -1.1444091796875e-05, -0.018064022064208984, -5.6028297876764555e-06, -0.000263214111328125, -0.6263694763183594, -0.0005016326904296875, -0.007424354553222656, -0.0001068115234375, -4.00543212890625e-05, -0.001857757568359375, -0.0017948150634765625, -0.0038089752197265625, -0.0004596710205078125, 0.0, -6.675719760096399e-06, -5.7220458984375e-06, -0.0062389373779296875, 0.0, -0.000118255615234375, -1.9073486328125e-06, -1.3470649719238281e-05, -4.768370445162873e-07, -0.017559051513671875, -3.814697265625e-05, -0.0001583099365234375, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -0.0002652406692504883, -4.291534423828125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.032009124755859375, 0.0, -0.0029888153076171875, 0.0, -0.0018559694290161133, -1.33514404296875e-05, -7.62939453125e-06, -0.0007915496826171875, -0.00026702880859375, -4.57763671875e-05, -0.00037384033203125, -0.005557417869567871, -3.814697265625e-06, -0.05196380615234375, -0.0008716583251953125, -0.8371181488037109, -1.33514404296875e-05, -0.0008983612060546875, -0.0004634857177734375, -0.003345489501953125, -1.9073486328125e-06, -9.72747802734375e-05, -4.768370445162873e-07, -1.9073486328125e-06, -0.07234525680541992, -1.0728830375228426e-06, -3.814697265625e-06, -0.00769352912902832, -6.318082796497038e-06, -0.5959863662719727, -0.0003414154052734375, -0.0004100799560546875, -1.52587890625e-05, -0.0001201629638671875, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.867813110351562e-06, -1.9073486328125e-06, -1.430511474609375e-05, -1.1920928244535389e-07, -0.014003753662109375, -0.0004825592041015625, -6.29425048828125e-05, -9.5367431640625e-06, -0.05655395984649658, -5.7220458984375e-06, -0.10733604431152344, -0.000133514404296875, -0.0005855560302734375, -3.814697265625e-06, -0.0024033784866333008, 0.0, -0.0002956390380859375, -0.000152587890625, -1.9073486328125e-06, -0.0002454519271850586, -5.7220458984375e-06, -0.0006465911865234375, -1.9073486328125e-06, -0.03199601173400879, -1.9073486328125e-06, -0.024370193481445312, -0.44297122955322266, -0.0001392364501953125, -0.017442703247070312, -9.5367431640625e-06, -0.2707843780517578, -8.392329618800431e-05, -0.0025784920435398817, -2.6702880859375e-05, -0.0006389617919921875, -0.0003299713134765625, 0.0, -0.0027066469192504883, 0.0, -1.352773666381836, -0.0001373291015625, -0.01346588134765625, 0.0, -0.0014057159423828125, 0.0, -0.0003871917724609375, 0.0, -0.0002269744873046875, -6.67572021484375e-05, -1.33514404296875e-05, -0.0001430511474609375, -0.00011539459228515625, -5.7220458984375e-06, -2.86102294921875e-05, -0.0005435943603515625, -1.9073486328125e-06, -0.05469703674316406, -1.9073486328125e-06, -0.018253326416015625, 0.0, -0.00017547607421875, -6.866455078125e-05, -0.4429950714111328, -5.7220458984375e-05, -0.45305347442626953, 0.0, -0.0001983642578125, -1.71661376953125e-05, -0.0018444061279296875, -1.9073486328125e-06, -3.4332275390625e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.04927265644073486, 0.0, -7.62939453125e-06, -0.00032138824462890625, -3.933906555175781e-06, -9.34600830078125e-05, -0.23638916015625, -0.0010738372802734375, -0.0008697509765625, -2.86102294921875e-05, -0.0003814697265625, 0.0, -2.3603439331054688e-05, 0.0, -3.4332275390625e-05, 0.0, -1.1801719665527344e-05, 0.0, -1.0371208190917969e-05, -2.3841855067985307e-07], "choice_history": [97, 286, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 358, 128, 233, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 358, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 360, 108, 157, "_reveal", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 358, 136, 318, 21, 174, "<UNK>", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 42, 143, 21, 174, "player", "<EOS>", "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}], "comparators": [{"n": 7, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "summon", "_type": "Template77", "hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"value": {"id": "player", "_type": "Name"}, "attr": "game", "_type": "Attribute"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Vaporize", "hole2": "MAGE"}], "hole0": "Vaporize", "_type": "Template5", "hole3": "use", "hole1": "SecretCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}]}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 3):\n            <UNK>.summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -9.420479515660539, "score_history": [-0.010079383850097656, -0.7783432006835938, -0.0007334641413763165, -0.0008276972221210599, -0.0006836633547209203, -0.0004191398620605469, -4.649158654501662e-06, -0.5359992980957031, -0.0002117156982421875, -0.0001697540283203125, -0.00014351795834954828, -1.9073486328125e-06, -8.344646857949556e-07, 0.0, -0.000244140625, -0.0005054473876953125, -0.0003452301025390625, -3.814697265625e-06, -0.0818643569946289, -1.9073486328125e-06, -0.0005483627319335938, 0.0, -6.4849853515625e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.3841855067985307e-07, -0.02766132354736328, -0.027576446533203125, -2.6702880859375e-05, -0.000835418701171875, -0.000110626220703125, -0.000179290771484375, 0.0, -9.775161743164062e-06, 0.0, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.00164794921875, -0.005745887756347656, -4.9591064453125e-05, -0.11124718189239502, 0.0, -0.007633209228515625, -2.47955322265625e-05, -0.0002346038818359375, -1.1444091796875e-05, -7.2479248046875e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.7881706953048706, -5.960462772236497e-07, -1.1444091796875e-05, -0.018064022064208984, -5.6028297876764555e-06, -0.000263214111328125, -0.6263694763183594, -0.0005016326904296875, -0.007424354553222656, -0.0001068115234375, -4.00543212890625e-05, -0.001857757568359375, -0.0017948150634765625, -0.0038089752197265625, -0.0004596710205078125, 0.0, -6.675719760096399e-06, -5.7220458984375e-06, -0.0062389373779296875, 0.0, -0.000118255615234375, -1.9073486328125e-06, -1.3470649719238281e-05, -4.768370445162873e-07, -0.017559051513671875, -3.814697265625e-05, -0.0001583099365234375, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -0.0002652406692504883, -4.291534423828125e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.032009124755859375, 0.0, -0.0029888153076171875, 0.0, -0.0018559694290161133, -1.33514404296875e-05, -7.62939453125e-06, -0.0007915496826171875, -0.00026702880859375, -4.57763671875e-05, -0.00037384033203125, -0.005557417869567871, -3.814697265625e-06, -0.05196380615234375, -0.0008716583251953125, -0.8371181488037109, -1.33514404296875e-05, -0.0008983612060546875, -0.0004634857177734375, -0.003345489501953125, -1.9073486328125e-06, -9.72747802734375e-05, -4.768370445162873e-07, -1.9073486328125e-06, -0.07234525680541992, -1.0728830375228426e-06, -3.814697265625e-06, -0.00769352912902832, -6.318082796497038e-06, -0.5959863662719727, -0.0003414154052734375, -0.0004100799560546875, -1.52587890625e-05, -0.0001201629638671875, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.867813110351562e-06, -1.9073486328125e-06, -1.430511474609375e-05, -1.1920928244535389e-07, -0.014003753662109375, -0.0004825592041015625, -6.29425048828125e-05, -9.5367431640625e-06, -0.05655395984649658, -5.7220458984375e-06, -0.10733604431152344, -0.000133514404296875, -0.0005855560302734375, -3.814697265625e-06, -0.0024033784866333008, 0.0, -0.0002956390380859375, -0.000152587890625, -1.9073486328125e-06, -0.0002454519271850586, -5.7220458984375e-06, -0.0006465911865234375, -1.9073486328125e-06, -0.03199601173400879, -1.9073486328125e-06, -0.024370193481445312, -0.44297122955322266, -0.0001392364501953125, -0.017442703247070312, -9.5367431640625e-06, -0.2707843780517578, -8.392329618800431e-05, -0.0025784920435398817, -2.6702880859375e-05, -0.0006389617919921875, -0.0003299713134765625, 0.0, -0.0027066469192504883, 0.0, -0.30356788635253906, -5.7220458984375e-06, -0.00019073486328125, 0.0, -0.011569976806640625, -2.288818359375e-05, -1.33514404296875e-05, -0.000102996826171875, -0.0002593994140625, -3.814697265625e-06, -1.52587890625e-05, -0.0005645751953125, -1.9073486328125e-06, -0.001804351806640625, 0.0, -0.00666046142578125, 0.0, -0.00014495849609375, -3.814697265625e-05, -0.5337343215942383, -6.866455078125e-05, -0.2044086456298828, 0.0, -0.0001316070556640625, -1.71661376953125e-05, -0.003063201904296875, 0.0, -3.0517578125e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0389254093170166, 0.0, -7.62939453125e-06, -0.0003070831298828125, -3.933906555175781e-06, -6.866455078125e-05, -1.568368911743164, -0.0003147125244140625, -0.010128021240234375, -3.62396240234375e-05, -5.53131103515625e-05, -0.001476287841796875, -0.0019922256469726562, -0.00237274169921875, -0.000217437744140625, 0.0, -6.914137884450611e-06, -7.62939453125e-06, -0.004039764404296875, 0.0, -0.0001068115234375, 0.0, -1.3470649719238281e-05, -4.768370445162873e-07, -0.018503189086914062, -3.24249267578125e-05, -0.0001583099365234375, -1.1444091796875e-05, -2.86102294921875e-05, 0.0, -0.00024044513702392578, -4.291534423828125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.03427696228027344, 0.0, -0.0032777786254882812, 0.0, -0.0018597841262817383, -1.33514404296875e-05, -5.7220458984375e-06, -0.0008373260498046875, -0.0002727508544921875, -4.1961669921875e-05, -0.000431060791015625, -0.00518643856048584, -3.814697265625e-06], "choice_history": [97, 286, "Vaporize", "<EOS>", "Secret", "Card", "<EOS>", 358, 128, 233, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 340, 333, "game", "<EOS>", 358, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 360, 108, 157, "_reveal", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>", 108, 157, "use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 359, 106, 155, 32, 300, 38, 325, "super", "<EOS>", "use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 107, 156, 21, 174, "i", "<EOS>", 16, 150, 21, 174, "range", "<EOS>", 347, 52, 179, "0", "<EOS>", 52, 179, "3", "<EOS>", 358, 136, 318, 21, 174, "<UNK>", "<EOS>", "summon", "<EOS>", 348, 50, 174, "player", "<EOS>", 50, 174, "game", "<EOS>", 45, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 108, 157, "can_use", "<EOS>", 1, 334, 342, 333, "self", "<EOS>", 333, "player", "<EOS>", 333, "game", "<EOS>", 358, 111, 181, 15, 146, 2, 347, 76, 300, 38, 325, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 46, 153, 16, 150, 21, 174, "len", "<EOS>", 346, 42, 143, 21, 174, "player", "<EOS>", "minions", "<EOS>", 343, 10, 346, 52, 179, "7", "<EOS>"], "model_output": {"hole7": [{"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}], "comparators": [{"n": 7, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "_reveal", "_type": "FunctionDef"}, {"body": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}, {"body": [{"hole1": "summon", "_type": "Template77", "hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}]}], "iter": {"func": {"id": "range", "_type": "Name"}, "args": [{"n": 0, "_type": "Num"}, {"n": 3, "_type": "Num"}], "_type": "Call"}, "_type": "For", "target": {"id": "i", "_type": "Name"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "use", "_type": "FunctionDef"}, {"body": [{"value": {"op": {"_type": "And"}, "_type": "BoolOp", "values": [{"hole1": "can_use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, {"left": {"func": {"id": "len", "_type": "Name"}, "args": [{"value": {"id": "player", "_type": "Name"}, "attr": "minions", "_type": "Attribute"}], "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}], "comparators": [{"n": 7, "_type": "Num"}]}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "name": "can_use", "_type": "FunctionDef"}], "hole5": [{"arg": "game", "_type": "arg"}], "hole2": [{"hole1": 3, "hole3": "RARE", "_type": "Template34", "hole0": "Vaporize", "hole2": "MAGE"}], "hole0": "Vaporize", "_type": "Template5", "hole3": "use", "hole1": "SecretCard", "hole4": "player", "hole6": [{"value": {"hole1": "use", "hole3": "game", "_type": "Template63", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": "player"}, "_type": "Expr"}]}}]}
{"gold_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "beams": [{"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score": -0.006305948996214283, "score_history": [-9.5367431640625e-06, -5.7220458984375e-06, -0.0008199444273486733, -1.871574750111904e-05, -7.986990567587782e-06, -1.4258548617362976e-06, -9.5367431640625e-06, 0.0, 0.0, -0.000812530517578125, -9.5367431640625e-06, -2.1457672119140625e-06, -3.087520235567354e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.418585452483967e-05, 0.0, -2.3126602172851562e-05, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, 0.0, -0.0004787445068359375, -7.62939453125e-06, -2.741813204920618e-06, -1.1920922133867862e-06, -0.00010263874719385058, -7.152555099310121e-07, -0.0023998005781322718, -3.814697265625e-06, -0.001308441162109375, -1.33514404296875e-05, -0.00016248226165771484, 0.0], "choice_history": [97, 283, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "stealth"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Worgen Infiltrator", "hole2": "ALL"}], "hole0": "WorgenInfiltrator", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, create_minion=True)\n", "score": -7.253350633128775, "score_history": [-9.5367431640625e-06, -5.7220458984375e-06, -0.0008199444273486733, -1.871574750111904e-05, -7.986990567587782e-06, -1.4258548617362976e-06, -9.5367431640625e-06, 0.0, 0.0, -0.000812530517578125, -9.5367431640625e-06, -2.1457672119140625e-06, -3.087520235567354e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.418585452483967e-05, 0.0, -2.3126602172851562e-05, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, 0.0, -0.0004787445068359375, -7.62939453125e-06, -2.741813204920618e-06, -1.1920922133867862e-06, -0.00010263874719385058, -7.152555099310121e-07, -7.226593494415283, -1.9073486328125e-06, -0.02401256561279297, -2.47955322265625e-05, -0.00029981136322021484, 0.0], "choice_history": [97, 283, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "create_minion", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "create_minion"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Worgen Infiltrator", "hole2": "ALL"}], "hole0": "WorgenInfiltrator", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class <UNK>Infiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score": -7.627025120474627, "score_history": [-9.5367431640625e-06, -5.7220458984375e-06, -7.621539115905762, -1.871574750111904e-05, -7.986990567587782e-06, -1.4258548617362976e-06, -9.5367431640625e-06, 0.0, 0.0, -0.000812530517578125, -9.5367431640625e-06, -2.1457672119140625e-06, -3.087520235567354e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.418585452483967e-05, 0.0, -2.3126602172851562e-05, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, 0.0, -0.0004787445068359375, -7.62939453125e-06, -2.741813204920618e-06, -1.1920922133867862e-06, -0.00010263874719385058, -7.152555099310121e-07, -0.0023998005781322718, -3.814697265625e-06, -0.001308441162109375, -1.33514404296875e-05, -0.00016248226165771484, 0.0], "choice_history": [97, 283, "<UNK>", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "stealth"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Worgen Infiltrator", "hole2": "ALL"}], "hole0": "<UNK>Infiltrator", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, windfury=True)\n", "score": -7.690238374217643, "score_history": [-9.5367431640625e-06, -5.7220458984375e-06, -0.0008199444273486733, -1.871574750111904e-05, -7.986990567587782e-06, -1.4258548617362976e-06, -9.5367431640625e-06, 0.0, 0.0, -0.000812530517578125, -9.5367431640625e-06, -2.1457672119140625e-06, -3.087520235567354e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.418585452483967e-05, 0.0, -2.3126602172851562e-05, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, 0.0, -0.0004787445068359375, -7.62939453125e-06, -2.741813204920618e-06, -1.1920922133867862e-06, -0.00010263874719385058, -7.152555099310121e-07, -7.686978816986084, -2.6702880859375e-05, -0.0004673004150390625, -3.24249267578125e-05, -0.00031507015228271484, 0.0], "choice_history": [97, 283, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "windfury", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "windfury"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Worgen Infiltrator", "hole2": "ALL"}], "hole0": "WorgenInfiltrator", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class ForceInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score": -8.192936130063117, "score_history": [-9.5367431640625e-06, -5.7220458984375e-06, -8.139333724975586, -0.04788763448596001, -5.1616480050142854e-05, -3.5692937672138214e-07, -5.7220458984375e-06, 0.0, 0.0, -0.000965118408203125, -7.62939453125e-06, -2.384185791015625e-06, -3.1590458092978224e-05, 0.0, -1.9073486328125e-06, -1.2516935385065153e-05, 0.0, -2.1219253540039062e-05, 0.0, -3.62396240234375e-05, 0.0, -1.9073486328125e-05, 0.0, 0.0, -0.0004940032958984375, -7.62939453125e-06, -2.741813204920618e-06, -1.1920922133867862e-06, -0.00010359239240642637, -7.152555099310121e-07, -0.0023411500733345747, -5.7220458984375e-06, -0.001407623291015625, -1.33514404296875e-05, -0.00016641616821289062, 0.0], "choice_history": [97, 283, "Force", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "stealth"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Worgen Infiltrator", "hole2": "ALL"}], "hole0": "ForceInfiltrator", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score": -8.35214247083239, "score_history": [-9.5367431640625e-06, -5.7220458984375e-06, -0.0008199444273486733, -1.871574750111904e-05, -7.986990567587782e-06, -1.4258548617362976e-06, -9.5367431640625e-06, 0.0, 0.0, -8.008788108825684, -0.0001239776611328125, -1.1920928244535389e-07, -3.8743019104003906e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.933906555175781e-06, 0.0, -0.003906369209289551, 0.0, -0.28301823139190674, -1.1920928244535389e-07, -0.03415393829345703, -1.9073486328125e-05, -0.000965118408203125, -1.9073486328125e-06, -0.0002537965774536133, -5.7220458984375e-06, -0.009546279907226562, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.003391265869140625, 0.0, -1.9073486328125e-06, -0.001995086669921875, -5.7220458984375e-06, -3.933906555175781e-06, -8.34461570775602e-06, -9.95395312202163e-05, -2.3841830625315197e-06, -0.0030322072561830282, -5.7220458984375e-06, -0.001678466796875, -9.5367431640625e-06, -0.00019288063049316406, 0.0], "choice_history": [97, 283, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "stealth"}], "hole2": [{"hole2": "ALL", "hole0": "Worgen Infiltrator", "_type": "Template27", "hole3": "minion_type", "hole1": 1, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST", "_type": "Attribute"}}], "hole0": "WorgenInfiltrator", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -8.748224156840934, "score_history": [-9.5367431640625e-06, -5.7220458984375e-06, -0.0008199444273486733, -1.871574750111904e-05, -7.986990567587782e-06, -1.4258548617362976e-06, -9.5367431640625e-06, 0.0, 0.0, -0.000812530517578125, -9.5367431640625e-06, -2.1457672119140625e-06, -3.087520235567354e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.418585452483967e-05, 0.0, -2.3126602172851562e-05, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, 0.0, -0.0004787445068359375, -7.62939453125e-06, -2.741813204920618e-06, -1.1920922133867862e-06, -0.00010263874719385058, -7.152555099310121e-07, -8.745101928710938, -1.9073486328125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.00033795833587646484, 0.0], "choice_history": [97, 283, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "charge"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Worgen Infiltrator", "hole2": "ALL"}], "hole0": "WorgenInfiltrator", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, condition=True)\n", "score": -8.776394980891837, "score_history": [-9.5367431640625e-06, -5.7220458984375e-06, -0.0008199444273486733, -1.871574750111904e-05, -7.986990567587782e-06, -1.4258548617362976e-06, -9.5367431640625e-06, 0.0, 0.0, -0.000812530517578125, -9.5367431640625e-06, -2.1457672119140625e-06, -3.087520235567354e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.418585452483967e-05, 0.0, -2.3126602172851562e-05, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, 0.0, -0.0004787445068359375, -7.62939453125e-06, -2.741813204920618e-06, -1.1920922133867862e-06, -0.00010263874719385058, -7.152555099310121e-07, -8.762945175170898, -7.987022399902344e-06, -0.010812759399414062, -1.52587890625e-05, -0.0001957416534423828, 0.0], "choice_history": [97, 283, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "condition", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "condition"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Worgen Infiltrator", "hole2": "ALL"}], "hole0": "WorgenInfiltrator", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, 4=True)\n", "score": -8.832738774760855, "score_history": [-9.5367431640625e-06, -5.7220458984375e-06, -0.0008199444273486733, -1.871574750111904e-05, -7.986990567587782e-06, -1.4258548617362976e-06, -9.5367431640625e-06, 0.0, 0.0, -0.000812530517578125, -9.5367431640625e-06, -2.1457672119140625e-06, -3.087520235567354e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.418585452483967e-05, 0.0, -2.3126602172851562e-05, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, 0.0, -0.0004787445068359375, -7.62939453125e-06, -2.741813204920618e-06, -1.1920922133867862e-06, -0.00010263874719385058, -7.152555099310121e-07, -8.825201034545898, 0.0, -0.0048618316650390625, -5.7220458984375e-06, -0.00025212764739990234, 0.0], "choice_history": [97, 283, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "4", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "4"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Worgen Infiltrator", "hole2": "ALL"}], "hole0": "WorgenInfiltrator", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, spell_targetable=True)\n", "score": -8.876779931529654, "score_history": [-9.5367431640625e-06, -5.7220458984375e-06, -0.0008199444273486733, -1.871574750111904e-05, -7.986990567587782e-06, -1.4258548617362976e-06, -9.5367431640625e-06, 0.0, 0.0, -0.000812530517578125, -9.5367431640625e-06, -2.1457672119140625e-06, -3.087520235567354e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.418585452483967e-05, 0.0, -2.3126602172851562e-05, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, 0.0, -0.0004787445068359375, -7.62939453125e-06, -2.741813204920618e-06, -1.1920922133867862e-06, -0.00010263874719385058, -7.152555099310121e-07, -8.867809295654297, -1.9073486328125e-06, -0.0004405975341796875, -7.62939453125e-06, -0.006102442741394043, 0.0], "choice_history": [97, 283, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "spell_targetable", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "spell_targetable"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Worgen Infiltrator", "hole2": "ALL"}], "hole0": "WorgenInfiltrator", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score": -9.163613337243987, "score_history": [-9.5367431640625e-06, -5.7220458984375e-06, -0.0008199444273486733, -1.871574750111904e-05, -7.986990567587782e-06, -1.4258548617362976e-06, -9.5367431640625e-06, 0.0, 0.0, -8.744370460510254, -0.0023326873779296875, -2.288818359375e-05, -5.7220458984375e-05, -4.172325134277344e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.001430511474609375, -0.0001544952392578125, -1.52587890625e-05, -9.536738616588991e-07, -5.745887756347656e-05, -1.1086422091466375e-05, -2.8848648071289062e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.98702058091294e-06, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -7.832050323486328e-05, -7.62939453125e-05, -9.5367431640625e-06, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, -4.00543212890625e-05, -0.15448570251464844, -4.38690185546875e-05, -0.000247955322265625, -2.47955322265625e-05, -2.110004425048828e-05, -3.814697265625e-06, -0.009641647338867188, -0.01026153564453125, -0.00052642822265625, -0.2298450469970703, 0.0, -3.814697265625e-06, 0.0, -0.0002117156982421875, 0.0, -7.62939453125e-06, -0.0006561279296875, -1.9073486328125e-05, -2.0265579223632812e-06, -4.410734163684538e-06, -5.555130337597802e-05, -4.0531076592742465e-06, -0.004914045333862305, -3.814697265625e-06, -0.0017871856689453125, -9.5367431640625e-06, -0.001026749610900879, 0.0], "choice_history": [97, 283, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Worgen", " ", "Infiltrator", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 22, 175, "True", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template50", "hole0": 2, "hole2": "stealth"}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "MECH"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Worgen Infiltrator", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "WorgenInfiltrator", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True, effects=[Effect(Attack(),\n            IsMinion())])\n", "score": -9.699281743638778, "score_history": [-9.5367431640625e-06, -5.7220458984375e-06, -0.0008199444273486733, -1.871574750111904e-05, -7.986990567587782e-06, -1.4258548617362976e-06, -9.5367431640625e-06, 0.0, 0.0, -0.000812530517578125, -9.5367431640625e-06, -2.1457672119140625e-06, -3.087520235567354e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.418585452483967e-05, 0.0, -2.3126602172851562e-05, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, 0.0, -8.165802001953125, -0.000102996826171875, -3.5723205655813217e-06, 0.0, -2.861022494471399e-06, -4.768370445162873e-07, -5.245184729574248e-05, -3.576278118089249e-07, -0.001377105712890625, -0.00028228759765625, -5.340576171875e-05, -0.0275115966796875, -7.62939453125e-06, -0.000225067138671875, -2.288818359375e-05, -0.0019767284393310547, 0.0, -1.014460563659668, -0.0033321380615234375, -0.06387794017791748, -0.0002269744873046875, -1.33514404296875e-05, -0.09739017486572266, -7.62939453125e-06, -0.07342589646577835, -0.24706652760505676, -0.00023472309112548828], "choice_history": [97, 283, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 354, 95, 336, "stealth", "<EOS>", 22, 175, "True", "<EOS>", 93, 274, "Attack", "<EOS>", 346, 88, 325, "Is", "Minion", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "stealth", "_type": "keyword"}, {"hole2": [{"_type": "Template79", "hole0": "IsMinion"}], "_type": "Template45", "hole0": "Attack"}], "_type": "Template68", "hole0": "Minion", "hole2": 1}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Worgen Infiltrator", "hole2": "ALL"}], "hole0": "WorgenInfiltrator", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -10.796378508885937, "score_history": [-9.5367431640625e-06, -5.7220458984375e-06, -0.0008199444273486733, -1.871574750111904e-05, -7.986990567587782e-06, -1.4258548617362976e-06, -9.5367431640625e-06, 0.0, 0.0, -0.000812530517578125, -9.5367431640625e-06, -2.1457672119140625e-06, -3.087520235567354e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.418585452483967e-05, 0.0, -2.3126602172851562e-05, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, 0.0, -10.794184684753418, -0.000194549560546875, -7.247688336065039e-05, 0.0, -0.00010240064148092642, 0.0], "choice_history": [97, 283, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 2}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Worgen Infiltrator", "hole2": "ALL"}], "hole0": "WorgenInfiltrator", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True, effects=[Effect(DidDamage(),\n            ActionTag(Kill(), SelfSelector(IsMinion())))])\n", "score": -10.840626879506374, "score_history": [-9.5367431640625e-06, -5.7220458984375e-06, -0.0008199444273486733, -1.871574750111904e-05, -7.986990567587782e-06, -1.4258548617362976e-06, -9.5367431640625e-06, 0.0, 0.0, -0.000812530517578125, -9.5367431640625e-06, -2.1457672119140625e-06, -3.087520235567354e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.418585452483967e-05, 0.0, -2.3126602172851562e-05, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, 0.0, -8.165802001953125, -0.000102996826171875, -3.5723205655813217e-06, 0.0, -2.861022494471399e-06, -4.768370445162873e-07, -5.245184729574248e-05, -3.576278118089249e-07, -0.001377105712890625, -0.00028228759765625, -5.340576171875e-05, -0.0275115966796875, -7.62939453125e-06, -0.000225067138671875, -2.288818359375e-05, -0.0019767284393310547, 0.0, -0.9581308364868164, -0.677638053894043, -0.11353826522827148, -0.022492408752441406, -0.0033626556396484375, -0.09718990325927734, -0.0161362886428833, -0.3377953767776489, 0.0, 0.0, -0.000499725341796875, -0.00388336181640625, -1.9073486328125e-06, -0.3066006898880005, -0.10373380780220032, -0.0003777742385864258], "choice_history": [97, 283, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 354, 95, 336, "stealth", "<EOS>", 22, 175, "True", "<EOS>", 90, 218, "Did", "Damage", "<EOS>", "Kill", "<EOS>", "Self", "Selector", "<EOS>", 346, 88, 325, "Is", "Minion", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "stealth", "_type": "keyword"}, {"hole1": "Kill", "hole3": "SelfSelector", "_type": "Template25", "hole0": "DidDamage", "hole4": [{"_type": "Template79", "hole0": "IsMinion"}]}], "_type": "Template68", "hole0": "Minion", "hole2": 1}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Worgen Infiltrator", "hole2": "ALL"}], "hole0": "WorgenInfiltrator", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(MinionSelector())))\n", "score": -11.13557972321496, "score_history": [-9.5367431640625e-06, -5.7220458984375e-06, -0.0008199444273486733, -1.871574750111904e-05, -7.986990567587782e-06, -1.4258548617362976e-06, -9.5367431640625e-06, 0.0, 0.0, -0.000812530517578125, -9.5367431640625e-06, -2.1457672119140625e-06, -3.087520235567354e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.418585452483967e-05, 0.0, -2.3126602172851562e-05, 0.0, -3.814697265625e-05, 0.0, -1.71661376953125e-05, 0.0, 0.0, -0.0004787445068359375, -7.62939453125e-06, -2.741813204920618e-06, -1.1920922133867862e-06, -0.00010263874719385058, -7.152555099310121e-07, -0.0023998005781322718, -3.814697265625e-06, -8.588207244873047, -0.01741790771484375, -0.0452347993850708, -7.62939453125e-06, -0.3643074035644531, -1.1563301086425781e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.36125054955482483, -0.0004448016406968236, -0.46047496795654297, 0.0, 0.0, -0.004533886909484863, -0.008082389831542969, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010251998901367188, -3.814697265625e-06, -0.5563995838165283, -0.7233315110206604, -1.9073486328125e-06], "choice_history": [97, 283, "Worgen", "Infiltrator", "<EOS>", "Minion", "Card", "<EOS>", 358, 127, 230, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 130, 287, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 27, 246, "Deathrattle", "<EOS>", "Summon", "<EOS>", 346, 88, 325, "Thaddius", "<EOS>", "Player", "Selector", "<EOS>", "In", "Graveyard", "<EOS>", 346, 88, 325, "Minion", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "hole3": {"hole7": [{"_type": "Template79", "hole0": "MinionSelector"}], "hole6": "InGraveyard", "hole2": [{"_type": "Template79", "hole0": "Thaddius"}], "hole0": "Deathrattle", "_type": "Template39", "hole3": "PlayerSelector", "hole1": "Summon"}, "_type": "Template50", "hole0": 2, "hole2": "stealth"}], "hole2": [{"hole1": 1, "_type": "Template31", "hole0": "Worgen Infiltrator", "hole2": "ALL"}], "hole0": "WorgenInfiltrator", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "beams": [{"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(5), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score": -2.98437847997954, "score_history": [-9.918212890625e-05, -1.52587890625e-05, -0.0032476403284817934, -7.867811291362159e-06, -1.2159273865108844e-05, -7.050111889839172e-07, -3.647804260253906e-05, 0.0, -5.7220458984375e-06, -0.0016527175903320312, -1.06144380569458, -3.576272320060525e-06, -7.867813110351562e-06, -4.410743713378906e-06, -5.53131103515625e-05, -0.013937723822891712, -4.38690185546875e-05, -0.0008602142333984375, -7.43865966796875e-05, -1.294502854347229, -0.00023162344587035477, -1.9073486328125e-06, -0.0001125335693359375, -2.47955322265625e-05, -0.5987581014633179, -2.6702880859375e-05, -0.007168173789978027, 0.0, 0.0, -3.683535032905638e-05, 0.0, -0.00017023086547851562, 0.0, -9.5367431640625e-06, -0.0015430450439453125, -0.000164031982421875, -1.5974044799804688e-05, -2.3841855067985307e-07, -0.000102996826171875, 0.0], "choice_history": [97, 283, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "5", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "HeroSelector", "hole2": "COMMON", "hole0": "Blackwing Corruptor", "_type": "Template15", "hole3": "Heal", "hole1": 5, "hole4": [{"n": 5, "_type": "Num"}]}], "hole0": "BlackwingCorruptor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Bounce(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score": -3.043661693424184, "score_history": [-9.918212890625e-05, -1.52587890625e-05, -0.0032476403284817934, -7.867811291362159e-06, -1.2159273865108844e-05, -7.050111889839172e-07, -3.647804260253906e-05, 0.0, -5.7220458984375e-06, -0.0016527175903320312, -2.8091464042663574, -5.602820692729438e-06, -1.3828277587890625e-05, -5.960462772236497e-07, -1.33514404296875e-05, -0.033412933349609375, -1.33514404296875e-05, -0.00347137451171875, -2.47955322265625e-05, -0.1422361433506012, -0.0001273078960366547, -0.0016022383933886886, -4.136561983614229e-05, -1.9073468138230965e-06, -0.037253379821777344, -0.00014495849609375, -5.7220458984375e-06, -6.67572021484375e-05, 0.0, -0.0001773834228515625, -1.9073486328125e-06, -0.0014830827713012695, -7.748603820800781e-06, 0.0, -2.6702880859375e-05, -5.340576171875e-05, -0.0017491579055786133, 0.0, -0.006374359130859375, -1.9073486328125e-06, -0.000293731689453125, -0.00016033649444580078, 0.0, -0.0001100301742553711, 0.0, -0.0002593994140625, 0.0, -1.1444091796875e-05, -0.000125885009765625, -9.918212890625e-05, -1.263618378288811e-05, -2.3841855067985307e-07, -5.340576535672881e-05, 0.0], "choice_history": [97, 283, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 202, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "Bounce", "<EOS>", "Minion", "Selector", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 5}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "COMMON", "hole0": "Blackwing Corruptor", "_type": "Template15", "hole3": "Bounce", "hole1": 5}], "hole0": "BlackwingCorruptor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(1))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score": -3.1148684862981426, "score_history": [-9.918212890625e-05, -1.52587890625e-05, -0.0032476403284817934, -7.867811291362159e-06, -1.2159273865108844e-05, -7.050111889839172e-07, -3.647804260253906e-05, 0.0, -5.7220458984375e-06, -0.0016527175903320312, -2.172699451446533, -8.22540732769994e-06, -2.753734588623047e-05, -2.3841855067985307e-07, -0.0001659393310546875, -0.002156140049919486, -9.5367431640625e-06, -0.001224517822265625, -1.9073486328125e-06, -0.03707186132669449, -0.01302097737789154, -1.9073486328125e-06, -0.11211299896240234, -0.0047454833984375, -0.0013202273985370994, -0.006042003631591797, -9.655952453613281e-06, -3.814697265625e-06, -0.0001239776611328125, -1.9073486328125e-06, -0.5928361415863037, -5.7220458984375e-06, -0.0004687309265136719, -0.00046563148498535156, -4.768370445162873e-07, -0.006374998949468136, -2.0265579223632812e-06, -0.04705977439880371, 0.0, 0.0, -0.0001621246337890625, -0.0037240982055664062, -0.011775016784667969, -4.1961669921875e-05, 0.0, -0.0027910470962524414, -0.0028694868087768555, -2.872943878173828e-05, -0.00093841552734375, -0.000385284423828125, -0.017683982849121094, -2.47955322265625e-05, -7.62939453125e-06, -0.006522178649902344, -2.47955322265625e-05, -1.71661376953125e-05, -0.026230812072753906, -0.008022308349609375, -0.0005761384963989258, -0.0004063844680786133, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -0.000400543212890625, -4.76837158203125e-05, -0.02421283721923828, -9.655952453613281e-06, -0.000141143798828125, -1.1444091796875e-05, 0.0, -0.000598907470703125, -1.239776611328125e-05, -0.002208709716796875, -1.52587890625e-05, -0.000603219261392951, -3.62396240234375e-05, -0.000102996826171875, 0.0, -0.00020992755889892578, 0.0, -3.814697265625e-06, -0.000728607177734375, -4.9591064453125e-05, -1.657007851463277e-05, -1.1920928244535389e-07, -5.722046262235381e-05, 0.0], "choice_history": [97, 283, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 208, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "Give", "<EOS>", 346, 58, 231, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", "Self", "Selector", "<EOS>", 346, 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "SelfSelector", "hole2": "COMMON", "hole0": "Blackwing Corruptor", "_type": "Template15", "hole3": "Give", "hole1": 5, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": 1, "_type": "Template32", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}], "hole8": [{"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}]}], "hole0": "BlackwingCorruptor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(\n            BothPlayer()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score": -3.174363141418283, "score_history": [-9.918212890625e-05, -1.52587890625e-05, -0.0032476403284817934, -7.867811291362159e-06, -1.2159273865108844e-05, -7.050111889839172e-07, -3.647804260253906e-05, 0.0, -5.7220458984375e-06, -0.0016527175903320312, -1.06144380569458, -3.576272320060525e-06, -7.867813110351562e-06, -4.410743713378906e-06, -5.53131103515625e-05, -0.013937723822891712, -4.38690185546875e-05, -0.0008602142333984375, -7.43865966796875e-05, -0.5174428224563599, -0.004767775535583496, -1.1920928244535389e-07, -0.21300983428955078, -0.27788448333740234, -9.5367431640625e-06, -0.8484207987785339, -0.0002843125257641077, -1.9073486328125e-06, -0.230249285697937, -3.3378591979271732e-06, -2.3841855067985307e-07, -0.00041155339567922056, 0.0, -0.0001461505889892578, 0.0, -9.5367431640625e-06, -6.103515625e-05, -7.05718994140625e-05, -1.2159347534179688e-05, -1.1920928244535389e-07, -6.866455078125e-05, 0.0], "choice_history": [97, 283, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "Minion", "Selector", "<EOS>", 346, 88, 325, "Both", "Player", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "PlayerSelector", "hole2": "COMMON", "hole0": "Blackwing Corruptor", "_type": "Template15", "hole3": "MinionSelector", "hole1": 5, "hole4": [{"_type": "Template79", "hole0": "BothPlayer"}]}], "hole0": "BlackwingCorruptor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(4), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score": -3.2196701987904532, "score_history": [-9.918212890625e-05, -1.52587890625e-05, -0.0032476403284817934, -7.867811291362159e-06, -1.2159273865108844e-05, -7.050111889839172e-07, -3.647804260253906e-05, 0.0, -5.7220458984375e-06, -0.0016527175903320312, -1.06144380569458, -3.576272320060525e-06, -7.867813110351562e-06, -4.410743713378906e-06, -5.53131103515625e-05, -0.013937723822891712, -4.38690185546875e-05, -0.0008602142333984375, -7.43865966796875e-05, -1.294502854347229, -0.00023162344587035477, -1.9073486328125e-06, -0.0001125335693359375, -2.47955322265625e-05, -0.8189659118652344, -7.05718994140625e-05, -0.02220916748046875, 0.0, 0.0, -5.495453660842031e-05, 0.0, -0.0001875162124633789, 0.0, -1.1444091796875e-05, -0.001529693603515625, -0.0001506805419921875, -1.5854835510253906e-05, -2.3841855067985307e-07, -9.1552734375e-05, 0.0], "choice_history": [97, 283, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "4", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "HeroSelector", "hole2": "COMMON", "hole0": "Blackwing Corruptor", "_type": "Template15", "hole3": "Heal", "hole1": 5, "hole4": [{"n": 4, "_type": "Num"}]}], "hole0": "BlackwingCorruptor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(ChangeHealth(1))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score": -3.3400473428669883, "score_history": [-9.918212890625e-05, -1.52587890625e-05, -0.0032476403284817934, -7.867811291362159e-06, -1.2159273865108844e-05, -7.050111889839172e-07, -3.647804260253906e-05, 0.0, -5.7220458984375e-06, -0.0016527175903320312, -2.172699451446533, -8.22540732769994e-06, -2.753734588623047e-05, -2.3841855067985307e-07, -0.0001659393310546875, -0.002156140049919486, -9.5367431640625e-06, -0.001224517822265625, -1.9073486328125e-06, -0.03707186132669449, -0.01302097737789154, -1.9073486328125e-06, -0.11211299896240234, -0.0047454833984375, -0.0013202273985370994, -0.006042003631591797, -9.655952453613281e-06, -3.814697265625e-06, -0.0001239776611328125, -1.9073486328125e-06, -0.8081401586532593, -1.1444091796875e-05, -0.0007367134094238281, -0.0007212162017822266, -1.5497195136049413e-06, -0.009307083673775196, -2.0265579223632812e-06, -0.05594027042388916, 0.0, 0.0, -0.000152587890625, -0.003973960876464844, -0.010072708129882812, -4.00543212890625e-05, 0.0, -0.0028357505798339844, -0.0029821395874023438, -2.682209014892578e-05, -0.000946044921875, -0.0003814697265625, -0.018674850463867188, -2.47955322265625e-05, -7.62939453125e-06, -0.006510734558105469, -2.47955322265625e-05, -1.71661376953125e-05, -0.02561664581298828, -0.007941246032714844, -0.000583648681640625, -0.0004044771194458008, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -0.000400543212890625, -4.57763671875e-05, -0.022690773010253906, -9.655952453613281e-06, -0.000152587890625, -1.1444091796875e-05, 0.0, -0.000591278076171875, -1.239776611328125e-05, -0.0022830963134765625, -1.52587890625e-05, -0.0005919001414440572, -3.814697265625e-05, -0.0001049041748046875, 0.0, -0.00020802021026611328, 0.0, -3.814697265625e-06, -0.0007305145263671875, -4.9591064453125e-05, -1.657007851463277e-05, -1.1920928244535389e-07, -5.722045534639619e-05, 0.0], "choice_history": [97, 283, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 208, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "Give", "<EOS>", 346, 58, 231, "Change", "Attack", "<EOS>", 346, 52, 179, "3", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", "Self", "Selector", "<EOS>", 346, 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "SelfSelector", "hole2": "COMMON", "hole0": "Blackwing Corruptor", "_type": "Template15", "hole3": "Give", "hole1": 5, "hole4": [{"hole1": [{"n": 3, "_type": "Num"}], "hole3": 1, "_type": "Template32", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}], "hole8": [{"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}]}], "hole0": "BlackwingCorruptor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(4), HeroSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score": -4.03411763763134, "score_history": [-9.918212890625e-05, -1.52587890625e-05, -0.0032476403284817934, -7.867811291362159e-06, -1.2159273865108844e-05, -7.050111889839172e-07, -3.647804260253906e-05, 0.0, -5.7220458984375e-06, -0.0016527175903320312, -3.1914610862731934, -5.817244164063595e-05, -7.748603820800781e-06, -2.193440741393715e-05, -3.254413604736328e-05, -0.0028743071015924215, -7.62939453125e-06, -0.3416709899902344, -1.1444091796875e-05, -0.13300657272338867, -1.4185905456542969e-05, 0.0, -2.288818359375e-05, -2.09808349609375e-05, -0.34334754943847656, -5.7220458984375e-06, -0.000888824462890625, -2.3841855067985307e-07, -1.9073486328125e-06, -0.0001544952392578125, -0.00904083251953125, -3.24249267578125e-05, -0.005803941283375025, -5.924701690673828e-05, 0.0, -0.00016844083438627422, 0.0, -5.7220458984375e-05, 0.0, -1.71661376953125e-05, -0.000133514404296875, -5.91278076171875e-05, -1.263618378288811e-05, -3.576278118089249e-07, -4.57763671875e-05, 0.0], "choice_history": [97, 283, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 210, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "Heal", "<EOS>", 346, 52, 179, "4", "<EOS>", "Hero", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "HeroSelector", "hole2": "COMMON", "hole0": "Blackwing Corruptor", "_type": "Template15", "hole3": "Heal", "hole1": 5, "hole4": [{"n": 4, "_type": "Num"}], "hole6": [{"_type": "Template79", "hole0": "EnemyPlayer"}]}], "hole0": "BlackwingCorruptor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(\n            EnemyPlayer()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score": -4.536978563517003, "score_history": [-9.918212890625e-05, -1.52587890625e-05, -0.0032476403284817934, -7.867811291362159e-06, -1.2159273865108844e-05, -7.050111889839172e-07, -3.647804260253906e-05, 0.0, -5.7220458984375e-06, -0.0016527175903320312, -1.06144380569458, -3.576272320060525e-06, -7.867813110351562e-06, -4.410743713378906e-06, -5.53131103515625e-05, -0.013937723822891712, -4.38690185546875e-05, -0.0008602142333984375, -7.43865966796875e-05, -0.5174428224563599, -0.004767775535583496, -1.1920928244535389e-07, -0.21300983428955078, -0.27788448333740234, -9.5367431640625e-06, -2.301649808883667, -0.0001612901542102918, 0.0, -0.13973012566566467, -2.861022494471399e-06, -3.576278118089249e-07, -0.0004501613730099052, 0.0, -0.00013649463653564453, 0.0, -9.5367431640625e-06, -6.103515625e-05, -7.2479248046875e-05, -1.2040138244628906e-05, -2.3841855067985307e-07, -6.866455078125e-05, 0.0], "choice_history": [97, 283, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "Minion", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "PlayerSelector", "hole2": "COMMON", "hole0": "Blackwing Corruptor", "_type": "Template15", "hole3": "MinionSelector", "hole1": 5, "hole4": [{"_type": "Template79", "hole0": "EnemyPlayer"}]}], "hole0": "BlackwingCorruptor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(damage(5), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score": -4.601808317120195, "score_history": [-9.918212890625e-05, -1.52587890625e-05, -0.0032476403284817934, -7.867811291362159e-06, -1.2159273865108844e-05, -7.050111889839172e-07, -3.647804260253906e-05, 0.0, -5.7220458984375e-06, -0.0016527175903320312, -1.06144380569458, -3.576272320060525e-06, -7.867813110351562e-06, -4.410743713378906e-06, -5.53131103515625e-05, -0.013937723822891712, -4.38690185546875e-05, -0.0008602142333984375, -7.43865966796875e-05, -2.783693313598633, -0.00010919509804807603, -0.018621444702148438, -0.5362443923950195, -1.71661376953125e-05, -0.1667994111776352, -2.86102294921875e-05, -0.01335763931274414, -1.1920928244535389e-07, 0.0, -3.8146616134326905e-05, 0.0, -0.00016641616821289062, 0.0, -7.62939453125e-06, -0.00095367431640625, -0.0001392364501953125, -1.5974044799804688e-05, -2.3841855067985307e-07, -0.0001068115234375, 0.0], "choice_history": [97, 283, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "damage", "<EOS>", 346, 52, 179, "5", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "HeroSelector", "hole2": "COMMON", "hole0": "Blackwing Corruptor", "_type": "Template15", "hole3": "damage", "hole1": 5, "hole4": [{"n": 5, "_type": "Num"}]}], "hole0": "BlackwingCorruptor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector([Buff(\n            ChangeAttack(3)), Buff(ChangeHealth(1))]), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score": -4.645526573838062, "score_history": [-9.918212890625e-05, -1.52587890625e-05, -0.0032476403284817934, -7.867811291362159e-06, -1.2159273865108844e-05, -7.050111889839172e-07, -3.647804260253906e-05, 0.0, -5.7220458984375e-06, -0.0016527175903320312, -1.06144380569458, -3.576272320060525e-06, -7.867813110351562e-06, -4.410743713378906e-06, -5.53131103515625e-05, -0.013937723822891712, -4.38690185546875e-05, -0.0008602142333984375, -7.43865966796875e-05, -0.5174428224563599, -0.004767775535583496, -1.1920928244535389e-07, -0.21300983428955078, -2.1359424591064453, -0.02627849578857422, -0.14807181060314178, -0.015842648223042488, 0.0, -5.7220458984375e-06, -4.00543212890625e-05, -7.62939453125e-06, -0.18040214478969574, -5.7220458984375e-06, -0.002467632293701172, -0.0025159120559692383, -1.0728830375228426e-06, -0.012484213337302208, -1.1920928244535389e-07, -0.303291916847229, -5.7220458984375e-06, 0.0, -7.224052387755364e-05, 0.0, -0.0009387731552124023, 0.0, -5.7220458984375e-06, -0.0001373291015625, -0.000125885009765625, -1.6450881958007812e-05, -1.1920928244535389e-07, -0.0001373291015625, 0.0], "choice_history": [97, 283, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "Minion", "Selector", "<EOS>", 346, 58, 231, "Change", "Attack", "<EOS>", 346, 52, 179, "3", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", "Minion", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "MinionSelector", "hole2": "COMMON", "hole0": "Blackwing Corruptor", "_type": "Template15", "hole3": "MinionSelector", "hole1": 5, "hole4": [{"hole1": [{"n": 3, "_type": "Num"}], "hole3": 1, "_type": "Template32", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}]}], "hole0": "BlackwingCorruptor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(\n            BothPlayer()), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score": -4.9463491908436055, "score_history": [-9.918212890625e-05, -1.52587890625e-05, -0.0032476403284817934, -7.867811291362159e-06, -1.2159273865108844e-05, -7.050111889839172e-07, -3.647804260253906e-05, 0.0, -5.7220458984375e-06, -0.0016527175903320312, -1.06144380569458, -3.576272320060525e-06, -7.867813110351562e-06, -4.410743713378906e-06, -5.53131103515625e-05, -0.013937723822891712, -4.38690185546875e-05, -0.0008602142333984375, -7.43865966796875e-05, -0.5174428224563599, -0.004767775535583496, -1.1920928244535389e-07, -0.21300983428955078, -0.27788448333740234, -9.5367431640625e-06, -0.8484207987785339, -0.0002843125257641077, -1.9073486328125e-06, -2.0015366077423096, -0.000823974609375, -2.3841855067985307e-07, -0.000279988074908033, 0.0, -0.00019347667694091797, 0.0, -1.1444091796875e-05, -5.7220458984375e-05, -3.814697265625e-05, -1.263618378288811e-05, -1.1920928244535389e-07, -6.4849853515625e-05, 0.0], "choice_history": [97, 283, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "Minion", "Selector", "<EOS>", 346, 88, 325, "Both", "Player", "<EOS>", "Minion", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "MinionSelector", "hole2": "COMMON", "hole0": "Blackwing Corruptor", "_type": "Template15", "hole3": "MinionSelector", "hole1": 5, "hole4": [{"_type": "Template79", "hole0": "BothPlayer"}]}], "hole0": "BlackwingCorruptor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(),\n            damage(AttackGreaterThan(6), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score": -5.005805759899772, "score_history": [-9.918212890625e-05, -1.52587890625e-05, -0.0032476403284817934, -7.867811291362159e-06, -1.2159273865108844e-05, -7.050111889839172e-07, -3.647804260253906e-05, 0.0, -5.7220458984375e-06, -0.0016527175903320312, -2.8149147033691406, -2.706014311115723e-05, -1.4185905456542969e-05, -4.0531158447265625e-06, -0.03925895690917969, -0.008354187943041325, -3.0517578125e-05, -0.0028477907180786133, -3.814697265625e-06, -0.046515244990587234, -0.0002461671829223633, 0.0, -1.0389381647109985, -1.060962586052483e-05, -0.35740184783935547, -0.04393291473388672, -0.0011043548583984375, -0.339221715927124, -0.031096696853637695, -8.785724639892578e-05, -4.52994936495088e-06, -0.24033451080322266, -1.9073486328125e-06, -0.03414154052734375, -3.814697265625e-06, -0.0016251802444458008, -3.5762786865234375e-05, 0.0, -0.00013947342813480645, 0.0, -0.000152587890625, 0.0, -1.33514404296875e-05, -7.05718994140625e-05, -8.96453857421875e-05, -1.2278556823730469e-05, -4.768370445162873e-07, -9.1552734375e-05, 0.0], "choice_history": [97, 283, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 204, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "Minion", "Selector", "<EOS>", "damage", "<EOS>", 347, 84, 315, "Attack", "Greater", "Than", "<EOS>", "6", "<EOS>", 88, 325, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "damage", "hole2": "COMMON", "hole0": "Blackwing Corruptor", "_type": "Template15", "hole3": "MinionSelector", "hole1": 5, "hole6": [{"hole1": 6, "_type": "Template74", "hole0": "AttackGreaterThan"}, {"_type": "Template79", "hole0": "BothPlayer"}]}], "hole0": "BlackwingCorruptor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            IsType(MINION_TYPE.PIRATE), players=BothPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score": -5.195333904192175, "score_history": [-9.918212890625e-05, -1.52587890625e-05, -0.0032476403284817934, -7.867811291362159e-06, -1.2159273865108844e-05, -7.050111889839172e-07, -3.647804260253906e-05, 0.0, -5.7220458984375e-06, -0.0016527175903320312, -3.542346477508545, -4.529942543740617e-06, -2.6464460461284034e-05, -7.152555099310121e-07, -0.00016999244689941406, -0.007604361977428198, -3.62396240234375e-05, -0.1252213716506958, -0.0016326904296875, -0.2659256160259247, -0.00019073013390880078, -0.00012156181037425995, -6.246566772460938e-05, -1.1920928244535389e-07, -0.030099868774414062, -0.008844375610351562, -0.0001678466796875, -1.0960578918457031, -2.1457672119140625e-06, -0.09555721282958984, -0.0002117156982421875, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -0.0006542205810546875, -1.9073486328125e-06, -0.0022951364517211914, -3.814697265625e-06, 0.0, -5.91278076171875e-05, -3.24249267578125e-05, -0.003145456314086914, 0.0, -0.008327484130859375, -1.9073486328125e-06, -0.0003795623779296875, -0.00024819374084472656, -2.3841855067985307e-07, -0.00017058849334716797, 0.0, -0.0002079010009765625, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -0.0001010894775390625, -1.251697449333733e-05, -2.3841855067985307e-07, -4.9591064453125e-05, 0.0], "choice_history": [97, 283, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 206, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 346, 74, 297, "PIRATE", "<EOS>", 354, 95, 336, "players", "<EOS>", 38, 325, "Both", "Player", "<EOS>", 95, 336, "picker", "<EOS>", 38, 325, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 5}], "hole2": [{"hole7": [{"value": {"_type": "Template79", "hole0": "BothPlayer"}, "arg": "players", "_type": "keyword"}, {"value": {"_type": "Template79", "hole0": "UserPicker"}, "arg": "picker", "_type": "keyword"}], "hole5": "MinionSelector", "hole2": "COMMON", "hole0": "Blackwing Corruptor", "_type": "Template15", "hole3": "Kill", "hole1": 5, "hole6": [{"_type": "Template60", "hole0": "PIRATE"}]}], "hole0": "BlackwingCorruptor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            And(MinionIsNotTarget(), Is<UNK>(CARD_RARITY.Player)),\n            BothPlayer(), UserPicker()), GreaterThan(Count(CardSelector(\n            condition=IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score": -5.2120929423721805, "score_history": [-9.918212890625e-05, -1.52587890625e-05, -0.0032476403284817934, -7.867811291362159e-06, -1.2159273865108844e-05, -7.050111889839172e-07, -3.647804260253906e-05, 0.0, -5.7220458984375e-06, -0.0016527175903320312, -2.912808418273926, -3.3378546504536644e-06, -1.6450869225081988e-05, -4.172325134277344e-06, -9.1552734375e-05, -0.007919075898826122, -1.33514404296875e-05, -0.0069255828857421875, -0.000339508056640625, -0.17938479781150818, -3.266307612648234e-05, -0.0020866007544100285, -0.00013566017150878906, -3.576278118089249e-07, -0.007083892822265625, -0.03311347961425781, -0.00179290771484375, -0.001140594482421875, 0.0, -0.048100460320711136, -0.0007483959197998047, -4.76837158203125e-05, -0.0156402587890625, -1.52587890625e-05, -0.7435979843139648, -0.007467149756848812, -0.049961477518081665, -0.0009087299113161862, -0.016796112060546875, -0.13567066192626953, -0.00249481201171875, -0.0011749267578125, -0.000110626220703125, -0.009323358535766602, -0.00027406163280829787, -1.6689286894688848e-06, -0.000823974609375, -0.013874053955078125, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.17857754230499268, -7.62939453125e-06, -0.3629179000854492, -0.15320587158203125, -0.00238037109375, -0.0005054473876953125, -0.002316594123840332, -2.6464455004315823e-05, 0.0, -0.005650520324707031, -6.67572021484375e-05, -0.02307891845703125, -2.1457672119140625e-05, 0.0, -3.0517578125e-05, -0.18502235412597656, -0.014996528625488281, -0.0001373291015625, 0.0, -0.0003790853952523321, -0.0008348226547241211, -0.00013756752014160156, -4.76837158203125e-05, -0.000453948974609375, -0.00983428955078125, -1.52587890625e-05, -3.814697265625e-06, -0.00494384765625, -3.826618194580078e-05, -9.5367431640625e-06, -0.02227783203125, -0.007319450378417969, -7.832050323486328e-05, -0.0002804994583129883, -3.814697265625e-06, -7.62939453125e-06, -0.0001125335693359375, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.0003795623779296875, -4.00543212890625e-05, -0.025321006774902344, -3.933906555175781e-06, -0.0001316070556640625, -1.33514404296875e-05, 0.0, -0.00066375732421875, -1.430511474609375e-05, -0.0026578903198242188, -1.9073486328125e-05, -0.0009831058559939265, -3.814697265625e-05, -0.0001125335693359375, 0.0, -0.00018131732940673828, 0.0, -3.814697265625e-06, -0.00060272216796875, -4.9591064453125e-05, -1.764295666362159e-05, 0.0, -6.103515625e-05, 0.0], "choice_history": [97, 283, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 205, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 348, 45, 150, 21, 174, "And", "<EOS>", 347, 88, 325, "Minion", "Is", "Not", "Target", "<EOS>", 45, 150, 21, 174, "Is", "<UNK>", "<EOS>", 346, 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "Player", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 88, 325, "User", "Picker", "<EOS>", 346, 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "MinionSelector", "hole2": "COMMON", "hole0": "Blackwing Corruptor", "_type": "Template15", "hole3": "Kill", "hole1": 5, "hole8": [{"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}], "hole6": [{"func": {"id": "And", "_type": "Name"}, "args": [{"_type": "Template79", "hole0": "MinionIsNotTarget"}, {"func": {"id": "Is<UNK>", "_type": "Name"}, "args": [{"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "Player", "_type": "Attribute"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template79", "hole0": "BothPlayer"}, {"_type": "Template79", "hole0": "UserPicker"}]}], "hole0": "BlackwingCorruptor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), MinionSelector(\n            And(damageTarget(), Is<UNK>(CARD_RARITY.Player)), BothPlayer(),\n            UserPicker()), GreaterThan(Count(CardSelector(condition=IsType(\n            MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score": -6.23608963856978, "score_history": [-9.918212890625e-05, -1.52587890625e-05, -0.0032476403284817934, -7.867811291362159e-06, -1.2159273865108844e-05, -7.050111889839172e-07, -3.647804260253906e-05, 0.0, -5.7220458984375e-06, -0.0016527175903320312, -2.912808418273926, -3.3378546504536644e-06, -1.6450869225081988e-05, -4.172325134277344e-06, -9.1552734375e-05, -0.007919075898826122, -1.33514404296875e-05, -0.0069255828857421875, -0.000339508056640625, -0.17938479781150818, -3.266307612648234e-05, -0.0020866007544100285, -0.00013566017150878906, -3.576278118089249e-07, -0.007083892822265625, -0.03311347961425781, -0.00179290771484375, -0.001140594482421875, 0.0, -0.048100460320711136, -0.0007483959197998047, -4.76837158203125e-05, -0.0156402587890625, -1.52587890625e-05, -0.649611234664917, -0.7261278629302979, -0.0394444465637207, -0.026177406311035156, -0.02095508575439453, -0.00077056884765625, -3.814697265625e-06, -0.017814993858337402, -0.00042843815754167736, -2.3841855067985307e-07, -0.00026702880859375, -0.045477867126464844, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.2442094087600708, -5.7220458984375e-06, -0.8803672790527344, -0.038021087646484375, -0.00254058837890625, -0.0007381439208984375, -0.00512242317199707, -2.1100036974530667e-05, 0.0, -0.0055980682373046875, -5.53131103515625e-05, -0.023004531860351562, -1.9550323486328125e-05, 0.0, -2.86102294921875e-05, -0.19835662841796875, -0.0137481689453125, -0.000133514404296875, 0.0, -0.00038576111546717584, -0.0008252859115600586, -0.00012993812561035156, -4.57763671875e-05, -0.0004673004150390625, -0.009429931640625, -1.52587890625e-05, -3.814697265625e-06, -0.00467681884765625, -2.682209014892578e-05, -1.1444091796875e-05, -0.017030715942382812, -0.007273674011230469, -7.450580596923828e-05, -0.0002728700637817383, -3.814697265625e-06, -7.62939453125e-06, -0.000110626220703125, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.000370025634765625, -3.62396240234375e-05, -0.02765655517578125, -3.933906555175781e-06, -0.0001239776611328125, -1.33514404296875e-05, 0.0, -0.000667572021484375, -1.430511474609375e-05, -0.0026836395263671875, -1.9073486328125e-05, -0.000969884917140007, -3.62396240234375e-05, -0.0001163482666015625, 0.0, -0.00018513202667236328, 0.0, -3.814697265625e-06, -0.0006313323974609375, -4.76837158203125e-05, -1.7523747374070808e-05, 0.0, -6.103515625e-05, 0.0], "choice_history": [97, 283, "Blackwing", "Corruptor", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 205, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "COMMON", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 348, 45, 150, 21, 174, "And", "<EOS>", 347, 88, 325, "damage", "Target", "<EOS>", 45, 150, 21, 174, "Is", "<UNK>", "<EOS>", 346, 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "Player", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 88, 325, "User", "Picker", "<EOS>", 346, 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "5", "<EOS>", "4", "<EOS>"], "model_output": {"hole6": [{"hole1": 4, "_type": "Template62", "hole0": 5}], "hole2": [{"hole5": "MinionSelector", "hole2": "COMMON", "hole0": "Blackwing Corruptor", "_type": "Template15", "hole3": "Kill", "hole1": 5, "hole8": [{"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}], "hole6": [{"func": {"id": "And", "_type": "Name"}, "args": [{"_type": "Template79", "hole0": "damageTarget"}, {"func": {"id": "Is<UNK>", "_type": "Name"}, "args": [{"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "Player", "_type": "Attribute"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template79", "hole0": "BothPlayer"}, {"_type": "Template79", "hole0": "UserPicker"}]}], "hole0": "BlackwingCorruptor", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector(), Not(GreaterThan(Attribute('health',\n            HeroSelector(EnemyPlayer())), value=15))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "beams": [{"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Count(CardSelector())))),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -2.680924964138626, "score_history": [-0.0013580322265625, -0.0001468658447265625, -4.38690185546875e-05, -0.0002918243408203125, -3.814697265625e-05, -0.30697381496429443, -0.004879471380263567, -0.00018964435730595142, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.7864746041595936e-05, -5.257119482848793e-05, -1.9788742065429688e-05, -0.0001354217529296875, -0.00031280517578125, -0.0001983642578125, -3.8146954466355965e-06, -2.491474151611328e-05, -9.179073458653875e-06, -1.239776611328125e-05, -4.398750024847686e-05, -1.71661376953125e-05, -2.622604188218247e-05, -3.814697265625e-06, -0.025920867919921875, 0.0, -7.62939453125e-06, 0.0, -0.00040435791015625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.1467123031616211, -1.764288026606664e-05, -8.96453857421875e-05, -3.4332275390625e-05, -0.28492259979248047, -0.5219507217407227, -0.0017909996677190065, -2.9802322387695312e-05, -0.0065898895263671875, -0.535858154296875, -0.0005035400390625, -0.00022196768259163946, -0.0016829967498779297, -3.4570634852570947e-06, -0.0012798309326171875, -0.8240575790405273, -6.866455078125e-05, -0.0010099411010742188, -0.00015342229744419456, -0.0005959252011962235, -0.00011599012941587716, -4.768370445162873e-07, -0.011775493621826172, -7.748603820800781e-06, -1.33514404296875e-05, -3.814697265625e-05, -0.000118255615234375, -0.00010609064338495955, 0.0, -1.2636135579668917e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Drakonid", "Crusher", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 70, 292, "Count", "<EOS>", "Card", "Selector", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Drakonid Crusher", "_type": "Template4", "hole3": "COMMON", "hole1": 6, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"hole1": [{"hole1": [{"hole1": "CardSelector", "_type": "Template55", "hole0": "Count"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 6, "_type": "Template19", "hole0": 6}], "name": "DrakonidCrusher", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector(), Not(GreaterThan(Count(CardSelector()), value=0))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -3.3366821539107647, "score_history": [-0.0013580322265625, -0.0001468658447265625, -4.38690185546875e-05, -0.0002918243408203125, -3.814697265625e-05, -0.30697381496429443, -0.004879471380263567, -0.00018964435730595142, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.7864746041595936e-05, -5.257119482848793e-05, -1.9788742065429688e-05, -0.0001354217529296875, -0.00031280517578125, -0.0001983642578125, -3.8146954466355965e-06, -2.491474151611328e-05, -9.179073458653875e-06, -1.239776611328125e-05, -4.398750024847686e-05, -1.71661376953125e-05, -2.622604188218247e-05, -3.814697265625e-06, -0.025920867919921875, 0.0, -7.62939453125e-06, 0.0, -0.00040435791015625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.1467123031616211, -1.764288026606664e-05, -8.96453857421875e-05, -3.4332275390625e-05, -1.5896120071411133, -0.0007686614990234375, -0.006237030029296875, -5.7220458984375e-06, -0.0024484191089868546, -2.0742414562846534e-05, -0.7696695327758789, -0.03964710235595703, -0.007246971130371094, -0.00014340877532958984, -0.0842134952545166, -8.344646857949556e-07, -0.049950480461120605, -7.62939453125e-06, -0.00054931640625, -0.0013217926025390625, -2.086153835989535e-05, -0.1235516369342804, -1.537799835205078e-05, -0.0011072158813476562, -8.0108642578125e-05, -0.013427376747131348, -1.1920928244535389e-07, 0.0, -0.01483917236328125, -0.03173351287841797, -0.020303726196289062, -0.011661887168884277, -0.000896453857421875, 0.0, -0.011385321617126465, -0.0004267692565917969, -1.8477414414519444e-05, -0.000850677490234375, -0.053112030029296875, -2.288818359375e-05, -0.0009862184524536133, -0.00010323512833565474, -0.00020444238907657564, -2.574919562903233e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -4.00543212890625e-05, 0.0, -0.0015659332275390625, -7.987022399902344e-06, -0.004085540771484375, -3.814697265625e-05, -0.0035822242498397827, -0.0001068115234375, -0.0023899078369140625, -0.0001392364501953125, -1.7881264284369536e-05, -2.3841855067985307e-07, -3.4212545870104805e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Drakonid", "Crusher", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 348, 55, 215, "Change", "Attack", "<EOS>", "3", "<EOS>", "Change", "Health", "<EOS>", "3", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 77, 303, "Not", "<EOS>", 21, 174, "Greater", "Than", "<EOS>", 346, 70, 292, "Count", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Drakonid Crusher", "_type": "Template4", "hole3": "COMMON", "hole1": 6, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": 3, "hole3": 3, "_type": "Template21", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}, {"_type": "Template79", "hole0": "SelfSelector"}, {"hole1": {"id": "GreaterThan", "_type": "Name"}, "hole3": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "_type": "Template64", "hole0": "Not", "hole2": [{"hole1": "CardSelector", "_type": "Template55", "hole0": "Count"}]}], "_type": "Call"}}, {"hole1": 6, "_type": "Template19", "hole0": 6}], "name": "DrakonidCrusher", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class <UNK>Crusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Count(CardSelector())))),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -3.7045534374204863, "score_history": [-0.0013580322265625, -0.0001468658447265625, -4.38690185546875e-05, -0.0002918243408203125, -3.814697265625e-05, -1.3306022882461548, -0.004879471380263567, -0.00018964435730595142, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.7864746041595936e-05, -5.257119482848793e-05, -1.9788742065429688e-05, -0.0001354217529296875, -0.00031280517578125, -0.0001983642578125, -3.8146954466355965e-06, -2.491474151611328e-05, -9.179073458653875e-06, -1.239776611328125e-05, -4.398750024847686e-05, -1.71661376953125e-05, -2.622604188218247e-05, -3.814697265625e-06, -0.025920867919921875, 0.0, -7.62939453125e-06, 0.0, -0.00040435791015625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.1467123031616211, -1.764288026606664e-05, -8.96453857421875e-05, -3.4332275390625e-05, -0.28492259979248047, -0.5219507217407227, -0.0017909996677190065, -2.9802322387695312e-05, -0.0065898895263671875, -0.535858154296875, -0.0005035400390625, -0.00022196768259163946, -0.0016829967498779297, -3.4570634852570947e-06, -0.0012798309326171875, -0.8240575790405273, -6.866455078125e-05, -0.0010099411010742188, -0.00015342229744419456, -0.0005959252011962235, -0.00011599012941587716, -4.768370445162873e-07, -0.011775493621826172, -7.748603820800781e-06, -1.33514404296875e-05, -3.814697265625e-05, -0.000118255615234375, -0.00010609064338495955, 0.0, -1.2636135579668917e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Crusher", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 70, 292, "Count", "<EOS>", "Card", "Selector", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Drakonid Crusher", "_type": "Template4", "hole3": "COMMON", "hole1": 6, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"hole1": [{"hole1": [{"hole1": "CardSelector", "_type": "Template55", "hole0": "Count"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 6, "_type": "Template19", "hole0": 6}], "name": "<UNK>Crusher", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Count(MinionSelector(IsType(\n            MINION_TYPE.DRAGON)))))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -3.742942531217068, "score_history": [-0.0013580322265625, -0.0001468658447265625, -4.38690185546875e-05, -0.0002918243408203125, -3.814697265625e-05, -0.30697381496429443, -0.004879471380263567, -0.00018964435730595142, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.7864746041595936e-05, -5.257119482848793e-05, -1.9788742065429688e-05, -0.0001354217529296875, -0.00031280517578125, -0.0001983642578125, -3.8146954466355965e-06, -2.491474151611328e-05, -9.179073458653875e-06, -1.239776611328125e-05, -4.398750024847686e-05, -1.71661376953125e-05, -2.622604188218247e-05, -3.814697265625e-06, -0.025920867919921875, 0.0, -7.62939453125e-06, 0.0, -0.00040435791015625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.1467123031616211, -1.764288026606664e-05, -8.96453857421875e-05, -3.4332275390625e-05, -0.28492259979248047, -0.5219507217407227, -0.0017909996677190065, -2.9802322387695312e-05, -0.0065898895263671875, -0.535858154296875, -0.0005035400390625, -0.00022196768259163946, -0.0016829967498779297, -3.4570634852570947e-06, -0.0012798309326171875, -0.5914640426635742, -0.0001583099365234375, -5.7220458984375e-06, -3.814697265625e-06, -0.6997928619384766, -0.0003001689910888672, -2.09808349609375e-05, -0.34226036071777344, -0.000888824462890625, -0.0004616975784301758, -0.0004425048828125, -3.814697265625e-06, -0.000274658203125, -0.0003108978271484375, -3.814697265625e-06, -3.814697265625e-05, 0.0, -7.43865966796875e-05, -9.72747802734375e-05, -0.007852554321289062, -2.0265579223632812e-06, -0.2525463104248047, 0.0, 0.0, -0.0029144287109375, -0.0001163482666015625, -4.8993817472364753e-05, 0.0, -8.344645721081179e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Drakonid", "Crusher", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Drakonid Crusher", "_type": "Template4", "hole3": "COMMON", "hole1": 6, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 6, "_type": "Template19", "hole0": 6}], "name": "DrakonidCrusher", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry([IncreaseWeaponAttack(1), IncreaseDurability()],\n            WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -3.7808552935821282, "score_history": [-0.0013580322265625, -0.0001468658447265625, -4.38690185546875e-05, -0.0002918243408203125, -3.814697265625e-05, -0.30697381496429443, -0.004879471380263567, -0.00018964435730595142, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.7864746041595936e-05, -5.257119482848793e-05, -1.9788742065429688e-05, -0.0001354217529296875, -0.00031280517578125, -0.0001983642578125, -3.8146954466355965e-06, -2.491474151611328e-05, -9.179073458653875e-06, -1.239776611328125e-05, -4.398750024847686e-05, -1.71661376953125e-05, -2.622604188218247e-05, -3.814697265625e-06, -0.025920867919921875, 0.0, -7.62939453125e-06, 0.0, -0.00040435791015625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.1467123031616211, -1.764288026606664e-05, -8.96453857421875e-05, -3.4332275390625e-05, -1.5896120071411133, -0.0007686614990234375, -0.006237030029296875, -5.7220458984375e-06, -0.0024484191089868546, -2.0742414562846534e-05, -0.6248273849487305, -0.0533905029296875, -0.0006198883056640625, -0.006247520446777344, -0.3022012710571289, -0.000446319580078125, -0.08999311923980713, -0.013182886876165867, -0.012019157409667969, -5.14984130859375e-05, -0.09136033058166504, 0.0, -0.0034046173095703125, -0.00018310546875, -0.06029210984706879, -0.0549052394926548, -0.000865936279296875, -0.3384571075439453, -1.33514404296875e-05, -0.04056823253631592, -1.3589859008789062e-05, 0.0, -0.00019073486328125, -0.0004291534423828125, -6.651657167822123e-05, -1.1920928244535389e-07, -1.573555709910579e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Drakonid", "Crusher", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 48, 169, 347, 84, 315, "Increase", "Weapon", "Attack", "<EOS>", "1", "<EOS>", 83, 314, "Increase", "Durability", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Drakonid Crusher", "_type": "Template4", "hole3": "COMMON", "hole1": 6, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"elts": [{"hole1": 1, "_type": "Template74", "hole0": "IncreaseWeaponAttack"}, {"_type": "Template73_expr_seq", "hole0": "IncreaseDurability"}], "_type": "List"}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Call"}}, {"hole1": 6, "_type": "Template19", "hole0": 6}], "name": "DrakonidCrusher", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class <UNK>Crusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector(), Not(GreaterThan(Count(CardSelector()), value=0))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -4.360310627192625, "score_history": [-0.0013580322265625, -0.0001468658447265625, -4.38690185546875e-05, -0.0002918243408203125, -3.814697265625e-05, -1.3306022882461548, -0.004879471380263567, -0.00018964435730595142, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.7864746041595936e-05, -5.257119482848793e-05, -1.9788742065429688e-05, -0.0001354217529296875, -0.00031280517578125, -0.0001983642578125, -3.8146954466355965e-06, -2.491474151611328e-05, -9.179073458653875e-06, -1.239776611328125e-05, -4.398750024847686e-05, -1.71661376953125e-05, -2.622604188218247e-05, -3.814697265625e-06, -0.025920867919921875, 0.0, -7.62939453125e-06, 0.0, -0.00040435791015625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.1467123031616211, -1.764288026606664e-05, -8.96453857421875e-05, -3.4332275390625e-05, -1.5896120071411133, -0.0007686614990234375, -0.006237030029296875, -5.7220458984375e-06, -0.0024484191089868546, -2.0742414562846534e-05, -0.7696695327758789, -0.03964710235595703, -0.007246971130371094, -0.00014340877532958984, -0.0842134952545166, -8.344646857949556e-07, -0.049950480461120605, -7.62939453125e-06, -0.00054931640625, -0.0013217926025390625, -2.086153835989535e-05, -0.1235516369342804, -1.537799835205078e-05, -0.0011072158813476562, -8.0108642578125e-05, -0.013427376747131348, -1.1920928244535389e-07, 0.0, -0.01483917236328125, -0.03173351287841797, -0.020303726196289062, -0.011661887168884277, -0.000896453857421875, 0.0, -0.011385321617126465, -0.0004267692565917969, -1.8477414414519444e-05, -0.000850677490234375, -0.053112030029296875, -2.288818359375e-05, -0.0009862184524536133, -0.00010323512833565474, -0.00020444238907657564, -2.574919562903233e-05, -2.3841855067985307e-07, -4.00543212890625e-05, -4.00543212890625e-05, 0.0, -0.0015659332275390625, -7.987022399902344e-06, -0.004085540771484375, -3.814697265625e-05, -0.0035822242498397827, -0.0001068115234375, -0.0023899078369140625, -0.0001392364501953125, -1.7881264284369536e-05, -2.3841855067985307e-07, -3.4212545870104805e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Crusher", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 348, 55, 215, "Change", "Attack", "<EOS>", "3", "<EOS>", "Change", "Health", "<EOS>", "3", "<EOS>", 88, 325, "Self", "Selector", "<EOS>", 77, 303, "Not", "<EOS>", 21, 174, "Greater", "Than", "<EOS>", 346, 70, 292, "Count", "<EOS>", "Card", "Selector", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Drakonid Crusher", "_type": "Template4", "hole3": "COMMON", "hole1": 6, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"hole1": 3, "hole3": 3, "_type": "Template21", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}, {"_type": "Template79", "hole0": "SelfSelector"}, {"hole1": {"id": "GreaterThan", "_type": "Name"}, "hole3": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "_type": "Template64", "hole0": "Not", "hole2": [{"hole1": "CardSelector", "_type": "Template55", "hole0": "Count"}]}], "_type": "Call"}}, {"hole1": 6, "_type": "Template19", "hole0": 6}], "name": "<UNK>Crusher", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Kill(), WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -4.562113308208147, "score_history": [-0.0013580322265625, -0.0001468658447265625, -4.38690185546875e-05, -0.0002918243408203125, -3.814697265625e-05, -0.30697381496429443, -0.004879471380263567, -0.00018964435730595142, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.7864746041595936e-05, -5.257119482848793e-05, -1.9788742065429688e-05, -0.0001354217529296875, -0.00031280517578125, -0.0001983642578125, -3.8146954466355965e-06, -2.491474151611328e-05, -9.179073458653875e-06, -1.239776611328125e-05, -4.398750024847686e-05, -1.71661376953125e-05, -2.622604188218247e-05, -3.814697265625e-06, -0.025920867919921875, 0.0, -7.62939453125e-06, 0.0, -0.00040435791015625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.1467123031616211, -1.764288026606664e-05, -8.96453857421875e-05, -3.4332275390625e-05, -0.28492259979248047, -2.156963348388672, -0.7707927227020264, -0.014268558472394943, -0.5858126282691956, -4.768371127283899e-06, -2.3841830625315197e-06, -4.38690185546875e-05, -0.01614093780517578, -8.7738037109375e-05, -0.24330544471740723, -6.496906280517578e-05, 0.0, -8.20159912109375e-05, -9.34600830078125e-05, -0.0014906733995303512, -1.1920928244535389e-07, -1.9788571080425754e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Drakonid", "Crusher", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 29, 264, "Kill", "<EOS>", "Weapon", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Drakonid Crusher", "_type": "Template4", "hole3": "COMMON", "hole1": 6, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"hole2": "WeaponSelector", "hole3": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "_type": "Template43", "hole0": "Kill"}}, {"hole1": 6, "_type": "Template19", "hole0": 6}], "name": "DrakonidCrusher", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(ChangeHealth(6)), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -4.580280618225508, "score_history": [-0.0013580322265625, -0.0001468658447265625, -4.38690185546875e-05, -0.0002918243408203125, -3.814697265625e-05, -0.30697381496429443, -0.004879471380263567, -0.00018964435730595142, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.7864746041595936e-05, -5.257119482848793e-05, -1.9788742065429688e-05, -0.0001354217529296875, -0.00031280517578125, -0.0001983642578125, -3.8146954466355965e-06, -2.491474151611328e-05, -9.179073458653875e-06, -1.239776611328125e-05, -4.398750024847686e-05, -1.71661376953125e-05, -2.622604188218247e-05, -3.814697265625e-06, -0.025920867919921875, 0.0, -7.62939453125e-06, 0.0, -0.00040435791015625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.1467123031616211, -1.764288026606664e-05, -8.96453857421875e-05, -3.4332275390625e-05, -0.28492259979248047, -0.5219507217407227, -0.0017909996677190065, -2.9802322387695312e-05, -0.0065898895263671875, -3.162215232849121, -0.05598163604736328, -0.04955112561583519, -0.0001474618911743164, -0.008779644966125488, -4.971027374267578e-05, 0.0, -0.0001316070556640625, -8.58306884765625e-05, -2.8609820219571702e-05, -1.1920928244535389e-07, -8.344624802703038e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Drakonid", "Crusher", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 81, 311, "6", "<EOS>", "Hero", "Selector", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Drakonid Crusher", "_type": "Template4", "hole3": "COMMON", "hole1": 6, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"hole1": [{"_type": "Template71", "hole0": 6}], "_type": "Template43", "hole0": "Give", "hole2": "HeroSelector"}}, {"hole1": 6, "_type": "Template19", "hole0": 6}], "name": "DrakonidCrusher", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Attribute('<UNK>',\n            WeaponSelector(EnemyPlayer()))))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -4.621604852649398, "score_history": [-0.0013580322265625, -0.0001468658447265625, -4.38690185546875e-05, -0.0002918243408203125, -3.814697265625e-05, -0.30697381496429443, -0.004879471380263567, -0.00018964435730595142, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.7864746041595936e-05, -5.257119482848793e-05, -1.9788742065429688e-05, -0.0001354217529296875, -0.00031280517578125, -0.0001983642578125, -3.8146954466355965e-06, -2.491474151611328e-05, -9.179073458653875e-06, -1.239776611328125e-05, -4.398750024847686e-05, -1.71661376953125e-05, -2.622604188218247e-05, -3.814697265625e-06, -0.025920867919921875, 0.0, -7.62939453125e-06, 0.0, -0.00040435791015625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.1467123031616211, -1.764288026606664e-05, -8.96453857421875e-05, -3.4332275390625e-05, -0.28492259979248047, -0.5219507217407227, -0.0017909996677190065, -2.9802322387695312e-05, -0.0065898895263671875, -0.535858154296875, -0.0005035400390625, -0.00022196768259163946, -0.0016829967498779297, -3.4570634852570947e-06, -0.0012798309326171875, -0.5914640426635742, -0.0001583099365234375, -5.7220458984375e-06, -3.814697265625e-06, -0.7447195053100586, -4.1961669921875e-05, -1.71661376953125e-05, -0.006084442138671875, -0.000217437744140625, -0.5814881324768066, -0.000148773193359375, -0.09003353118896484, -0.0002765655517578125, -0.6998357772827148, -1.9073486328125e-05, 0.0, -0.018019910901784897, -0.0020123720169067383, -1.9073486328125e-06, -0.04405234009027481, -2.0265579223632812e-06, 0.0, -4.9591064453125e-05, -4.00543212890625e-05, -5.447716102935374e-05, 0.0, -6.67571521262289e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Drakonid", "Crusher", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "<UNK>", "<EOS>", 70, 292, "Weapon", "Selector", "<EOS>", "Enemy", "Player", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Drakonid Crusher", "_type": "Template4", "hole3": "COMMON", "hole1": 6, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "<UNK>", "_type": "Str"}, {"hole1": "EnemyPlayer", "_type": "Template55", "hole0": "WeaponSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 6, "_type": "Template19", "hole0": 6}], "name": "DrakonidCrusher", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class <UNK>Crusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Count(MinionSelector(IsType(\n            MINION_TYPE.DRAGON)))))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -4.766571004498928, "score_history": [-0.0013580322265625, -0.0001468658447265625, -4.38690185546875e-05, -0.0002918243408203125, -3.814697265625e-05, -1.3306022882461548, -0.004879471380263567, -0.00018964435730595142, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.7864746041595936e-05, -5.257119482848793e-05, -1.9788742065429688e-05, -0.0001354217529296875, -0.00031280517578125, -0.0001983642578125, -3.8146954466355965e-06, -2.491474151611328e-05, -9.179073458653875e-06, -1.239776611328125e-05, -4.398750024847686e-05, -1.71661376953125e-05, -2.622604188218247e-05, -3.814697265625e-06, -0.025920867919921875, 0.0, -7.62939453125e-06, 0.0, -0.00040435791015625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.1467123031616211, -1.764288026606664e-05, -8.96453857421875e-05, -3.4332275390625e-05, -0.28492259979248047, -0.5219507217407227, -0.0017909996677190065, -2.9802322387695312e-05, -0.0065898895263671875, -0.535858154296875, -0.0005035400390625, -0.00022196768259163946, -0.0016829967498779297, -3.4570634852570947e-06, -0.0012798309326171875, -0.5914640426635742, -0.0001583099365234375, -5.7220458984375e-06, -3.814697265625e-06, -0.6997928619384766, -0.0003001689910888672, -2.09808349609375e-05, -0.34226036071777344, -0.000888824462890625, -0.0004616975784301758, -0.0004425048828125, -3.814697265625e-06, -0.000274658203125, -0.0003108978271484375, -3.814697265625e-06, -3.814697265625e-05, 0.0, -7.43865966796875e-05, -9.72747802734375e-05, -0.007852554321289062, -2.0265579223632812e-06, -0.2525463104248047, 0.0, 0.0, -0.0029144287109375, -0.0001163482666015625, -4.8993817472364753e-05, 0.0, -8.344645721081179e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Crusher", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Drakonid Crusher", "_type": "Template4", "hole3": "COMMON", "hole1": 6, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 6, "_type": "Template19", "hole0": 6}], "name": "<UNK>Crusher", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Attribute('<UNK>',\n            HeroSelector(EnemyPlayer()))))), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -4.801130714036844, "score_history": [-0.0013580322265625, -0.0001468658447265625, -4.38690185546875e-05, -0.0002918243408203125, -3.814697265625e-05, -0.30697381496429443, -0.004879471380263567, -0.00018964435730595142, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.7864746041595936e-05, -5.257119482848793e-05, -1.9788742065429688e-05, -0.0001354217529296875, -0.00031280517578125, -0.0001983642578125, -3.8146954466355965e-06, -2.491474151611328e-05, -9.179073458653875e-06, -1.239776611328125e-05, -4.398750024847686e-05, -1.71661376953125e-05, -2.622604188218247e-05, -3.814697265625e-06, -0.025920867919921875, 0.0, -7.62939453125e-06, 0.0, -0.00040435791015625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.1467123031616211, -1.764288026606664e-05, -8.96453857421875e-05, -3.4332275390625e-05, -0.28492259979248047, -0.5219507217407227, -0.0017909996677190065, -2.9802322387695312e-05, -0.0065898895263671875, -0.535858154296875, -0.0005035400390625, -0.00022196768259163946, -0.0016829967498779297, -3.4570634852570947e-06, -0.0012798309326171875, -0.5914640426635742, -0.0001583099365234375, -5.7220458984375e-06, -3.814697265625e-06, -0.7447195053100586, -4.1961669921875e-05, -1.71661376953125e-05, -0.006084442138671875, -0.000217437744140625, -0.5814881324768066, -0.000148773193359375, -0.09003353118896484, -0.0002765655517578125, -0.8700370788574219, -0.0013805627822875977, 0.0, -0.02687673456966877, -0.001768350601196289, 0.0, -0.04340439662337303, -2.0265579223632812e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-05, -5.686121585313231e-05, 0.0, -6.31808916295995e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Drakonid", "Crusher", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 45, 150, 21, 174, "Attribute", "<EOS>", 347, 53, 183, "<UNK>", "<EOS>", 70, 292, "Hero", "Selector", "<EOS>", "Enemy", "Player", "<EOS>", "Self", "Selector", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Drakonid Crusher", "_type": "Template4", "hole3": "COMMON", "hole1": 6, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Attribute", "_type": "Name"}, "args": [{"s": "<UNK>", "_type": "Str"}, {"hole1": "EnemyPlayer", "_type": "Template55", "hole0": "HeroSelector"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "SelfSelector"}}, {"hole1": 6, "_type": "Template19", "hole0": 6}], "name": "DrakonidCrusher", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class <UNK>Crusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry([IncreaseWeaponAttack(1), IncreaseDurability()],\n            WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -4.804483766863989, "score_history": [-0.0013580322265625, -0.0001468658447265625, -4.38690185546875e-05, -0.0002918243408203125, -3.814697265625e-05, -1.3306022882461548, -0.004879471380263567, -0.00018964435730595142, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.7864746041595936e-05, -5.257119482848793e-05, -1.9788742065429688e-05, -0.0001354217529296875, -0.00031280517578125, -0.0001983642578125, -3.8146954466355965e-06, -2.491474151611328e-05, -9.179073458653875e-06, -1.239776611328125e-05, -4.398750024847686e-05, -1.71661376953125e-05, -2.622604188218247e-05, -3.814697265625e-06, -0.025920867919921875, 0.0, -7.62939453125e-06, 0.0, -0.00040435791015625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.1467123031616211, -1.764288026606664e-05, -8.96453857421875e-05, -3.4332275390625e-05, -1.5896120071411133, -0.0007686614990234375, -0.006237030029296875, -5.7220458984375e-06, -0.0024484191089868546, -2.0742414562846534e-05, -0.6248273849487305, -0.0533905029296875, -0.0006198883056640625, -0.006247520446777344, -0.3022012710571289, -0.000446319580078125, -0.08999311923980713, -0.013182886876165867, -0.012019157409667969, -5.14984130859375e-05, -0.09136033058166504, 0.0, -0.0034046173095703125, -0.00018310546875, -0.06029210984706879, -0.0549052394926548, -0.000865936279296875, -0.3384571075439453, -1.33514404296875e-05, -0.04056823253631592, -1.3589859008789062e-05, 0.0, -0.00019073486328125, -0.0004291534423828125, -6.651657167822123e-05, -1.1920928244535389e-07, -1.573555709910579e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "<UNK>", "Crusher", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 48, 169, 347, 84, 315, "Increase", "Weapon", "Attack", "<EOS>", "1", "<EOS>", 83, 314, "Increase", "Durability", "<EOS>", 88, 325, "Weapon", "Selector", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Drakonid Crusher", "_type": "Template4", "hole3": "COMMON", "hole1": 6, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"elts": [{"hole1": 1, "_type": "Template74", "hole0": "IncreaseWeaponAttack"}, {"_type": "Template73_expr_seq", "hole0": "IncreaseDurability"}], "_type": "List"}, {"_type": "Template79", "hole0": "WeaponSelector"}], "_type": "Call"}}, {"hole1": 6, "_type": "Template19", "hole0": 6}], "name": "<UNK>Crusher", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry([IncreaseWeaponAttack(1), IncreaseDurability()], 6))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -4.905276101408134, "score_history": [-0.0013580322265625, -0.0001468658447265625, -4.38690185546875e-05, -0.0002918243408203125, -3.814697265625e-05, -0.30697381496429443, -0.004879471380263567, -0.00018964435730595142, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.7864746041595936e-05, -5.257119482848793e-05, -1.9788742065429688e-05, -0.0001354217529296875, -0.00031280517578125, -0.0001983642578125, -3.8146954466355965e-06, -2.491474151611328e-05, -9.179073458653875e-06, -1.239776611328125e-05, -4.398750024847686e-05, -1.71661376953125e-05, -2.622604188218247e-05, -3.814697265625e-06, -0.025920867919921875, 0.0, -7.62939453125e-06, 0.0, -0.00040435791015625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.1467123031616211, -1.764288026606664e-05, -8.96453857421875e-05, -3.4332275390625e-05, -1.5896120071411133, -0.0007686614990234375, -0.006237030029296875, -5.7220458984375e-06, -0.0024484191089868546, -2.0742414562846534e-05, -0.6248273849487305, -0.0533905029296875, -0.0006198883056640625, -0.006247520446777344, -0.3022012710571289, -0.000446319580078125, -0.08999311923980713, -0.013182886876165867, -0.012019157409667969, -5.14984130859375e-05, -0.09136033058166504, 0.0, -0.0034046173095703125, -0.00018310546875, -0.06029210984706879, -0.0549052394926548, -0.000865936279296875, -1.3057479858398438, -6.4849853515625e-05, -0.178209587931633, -1.9073486328125e-06, -0.01988697052001953, -0.0001983642578125, -4.756337511935271e-05, -2.3841855067985307e-07, -1.7881304302136414e-05, 0.0], "choice_history": [96, 173, 358, 105, 152, "Drakonid", "Crusher", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 16, 150, 21, 174, "Battlecry", "<EOS>", 347, 48, 169, 347, 84, 315, "Increase", "Weapon", "Attack", "<EOS>", "1", "<EOS>", 83, 314, "Increase", "Durability", "<EOS>", 52, 179, "6", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Drakonid Crusher", "_type": "Template4", "hole3": "COMMON", "hole1": 6, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"elts": [{"hole1": 1, "_type": "Template74", "hole0": "IncreaseWeaponAttack"}, {"_type": "Template73_expr_seq", "hole0": "IncreaseDurability"}], "_type": "List"}, {"n": 6, "_type": "Num"}], "_type": "Call"}}, {"hole1": 6, "_type": "Template19", "hole0": 6}], "name": "DrakonidCrusher", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Count(MinionSelector(IsType(\n            MINION_TYPE.DRAGON)))))), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -5.055670813016604, "score_history": [-0.0013580322265625, -0.0001468658447265625, -4.38690185546875e-05, -0.0002918243408203125, -3.814697265625e-05, -0.30697381496429443, -0.004879471380263567, -0.00018964435730595142, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.7864746041595936e-05, -5.257119482848793e-05, -1.9788742065429688e-05, -0.0001354217529296875, -0.00031280517578125, -0.0001983642578125, -3.8146954466355965e-06, -2.491474151611328e-05, -9.179073458653875e-06, -1.239776611328125e-05, -4.398750024847686e-05, -1.71661376953125e-05, -2.622604188218247e-05, -3.814697265625e-06, -0.025920867919921875, 0.0, -7.62939453125e-06, 0.0, -0.00040435791015625, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.1467123031616211, -1.764288026606664e-05, -8.96453857421875e-05, -3.4332275390625e-05, -0.28492259979248047, -0.5219507217407227, -0.0017909996677190065, -2.9802322387695312e-05, -0.0065898895263671875, -0.535858154296875, -0.0005035400390625, -0.00022196768259163946, -0.0016829967498779297, -3.4570634852570947e-06, -0.0012798309326171875, -0.5914640426635742, -0.0001583099365234375, -5.7220458984375e-06, -3.814697265625e-06, -0.6997928619384766, -0.0003001689910888672, -2.09808349609375e-05, -0.34226036071777344, -0.000888824462890625, -0.0004616975784301758, -0.0004425048828125, -3.814697265625e-06, -0.000274658203125, -0.0003108978271484375, -3.814697265625e-06, -3.814697265625e-05, 0.0, -7.43865966796875e-05, -9.72747802734375e-05, -0.007852554321289062, -2.0265579223632812e-06, -1.5648927688598633, -3.814697265625e-06, 0.0, -0.0032939910888671875, -6.103515625e-05, -0.00010168035078095272, 0.0, -9.417512046638876e-06, 0.0], "choice_history": [96, 173, 358, 105, 152, "Drakonid", "Crusher", "<EOS>", 346, 50, 174, "Minion", "Card", "<EOS>", 359, 129, 250, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 29, 265, "Give", "<EOS>", 346, 69, 291, "Change", "Health", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 73, 296, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "Hero", "Selector", "<EOS>", 122, 213, "6", "<EOS>", "6", "<EOS>"], "model_output": {"body": [{"bases": [{"id": "MinionCard", "_type": "Name"}], "body": [{"hole7": "battlecry", "hole5": {"id": "MINION_TYPE", "_type": "Name"}, "hole2": "ALL", "hole0": "Drakonid Crusher", "_type": "Template4", "hole3": "COMMON", "hole1": 6, "hole4": "minion_type", "hole6": "DRAGON", "hole8": {"hole1": [{"hole1": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template59", "hole0": "IsType"}], "_type": "Call"}], "_type": "Template54", "hole0": "ChangeHealth"}], "_type": "Template43", "hole0": "Give", "hole2": "HeroSelector"}}, {"hole1": 6, "_type": "Template19", "hole0": 6}], "name": "DrakonidCrusher", "_type": "ClassDef"}], "_type": "Module"}}, {"inferred_code": "break\n", "score": -14.218546867370605, "score_history": [-0.0013580322265625, -0.0001468658447265625, -4.38690185546875e-05, -14.216998100280762], "choice_history": [96, 173, 358, 104], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}}]}
{"gold_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "beams": [{"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -0.04916822276427979, "score_history": [-4.00543212890625e-05, -0.00017547607421875, -1.537788011773955e-05, -4.410734163684538e-06, 0.0, -2.3245811462402344e-05, 0.0, -9.1552734375e-05, -3.814697265625e-05, -0.0011615753173828125, -3.62396240234375e-05, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -0.0007877349853515625, -0.000110626220703125, -2.6702880859375e-05, -3.3378546504536644e-06, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, -0.00011002353858202696, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.780292510986328e-05, -3.814697265625e-06, -0.03930091857910156, -5.7220458984375e-06, -1.9073486328125e-05, -9.5367431640625e-06, -0.000102996826171875, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.001407623291015625, -5.7220458984375e-06, -6.4849853515625e-05, -4.00543212890625e-05, -3.6597251892089844e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.000232696533203125, -0.0002117156982421875, -0.0025216341018676758, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.0006927251815795898, 0.0, -0.001316070556640625, -0.0001068115234375, -5.7220458984375e-06, -1.215934844367439e-05, -3.576278118089249e-07, 3.5719858715310693e-07, -2.3841855067985307e-07], "choice_history": [97, 283, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Imp", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Imp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            RARE, True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -3.3592618640599596, "score_history": [-4.00543212890625e-05, -0.00017547607421875, -1.537788011773955e-05, -4.410734163684538e-06, 0.0, -2.3245811462402344e-05, 0.0, -9.1552734375e-05, -3.814697265625e-05, -0.0011615753173828125, -3.62396240234375e-05, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -0.0007877349853515625, -0.000110626220703125, -2.6702880859375e-05, -3.3378546504536644e-06, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, -0.00011002353858202696, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.780292510986328e-05, -3.814697265625e-06, -3.3484601974487305, -1.1444091796875e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -6.306171417236328e-05, -3.814697265625e-06, -0.00212860107421875, -7.62939453125e-06, -8.392333984375e-05, -4.76837158203125e-05, -4.2557716369628906e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0002460479736328125, -0.0002117156982421875, -0.0025635957717895508, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0006622076034545898, 0.0, -0.0013408660888671875, -0.0001049041748046875, -5.7220458984375e-06, -1.215934844367439e-05, -3.576278118089249e-07, -1.0733274393714964e-06, -2.3841855067985307e-07], "choice_history": [97, 283, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Imp", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Imp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.RARE, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -6.654177659375279, "score_history": [-4.00543212890625e-05, -0.00017547607421875, -1.537788011773955e-05, -4.410734163684538e-06, 0.0, -2.3245811462402344e-05, 0.0, -9.1552734375e-05, -3.814697265625e-05, -0.0011615753173828125, -3.62396240234375e-05, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -0.0007877349853515625, -0.000110626220703125, -2.6702880859375e-05, -3.3378546504536644e-06, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, -0.00011002353858202696, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.780292510986328e-05, -3.814697265625e-06, -6.6418609619140625, 0.0, -0.0015392303466796875, 0.0, -0.0002689361572265625, 0.0, -0.00013935565948486328, -3.814697265625e-06, -0.00183868408203125, -7.62939453125e-06, -0.00011444091796875, -8.392333984375e-05, -4.458427429199219e-05, -1.9073486328125e-06, -7.82012939453125e-05, -0.0002803802490234375, -0.000270843505859375, -0.002485513687133789, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.0007499456405639648, 0.0, -0.00131988525390625, -0.0001068115234375, -5.7220458984375e-06, -1.215934844367439e-05, -3.576278118089249e-07, 4.764042387250811e-07, -2.3841855067985307e-07], "choice_history": [97, 283, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Imp", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "RARE", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Imp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -6.696261280692305, "score_history": [-4.00543212890625e-05, -0.00017547607421875, -1.537788011773955e-05, -4.410734163684538e-06, 0.0, -2.3245811462402344e-05, 0.0, -9.1552734375e-05, -3.814697265625e-05, -0.0011615753173828125, -3.62396240234375e-05, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -0.0007877349853515625, -0.000110626220703125, -2.6702880859375e-05, -3.3378546504536644e-06, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, -0.00011002353858202696, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.780292510986328e-05, -3.814697265625e-06, -0.03930091857910156, -5.7220458984375e-06, -1.9073486328125e-05, -9.5367431640625e-06, -0.000102996826171875, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.001407623291015625, -5.7220458984375e-06, -6.4849853515625e-05, -4.00543212890625e-05, -3.6597251892089844e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.000232696533203125, -0.0002117156982421875, -6.647754669189453, -1.1920928244535389e-07, -3.0517578125e-05, 0.0, -0.00011467933654785156, 0.0, -0.003742218017578125, -0.00011444091796875, -3.814697265625e-06, -1.1801721484516747e-05, -3.576278118089249e-07, -3.58351826434955e-07, -2.3841855067985307e-07], "choice_history": [97, 283, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Imp", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DRAGON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Imp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.Hero, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -6.721286886524837, "score_history": [-4.00543212890625e-05, -0.00017547607421875, -1.537788011773955e-05, -4.410734163684538e-06, 0.0, -2.3245811462402344e-05, 0.0, -9.1552734375e-05, -3.814697265625e-05, -0.0011615753173828125, -3.62396240234375e-05, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -0.0007877349853515625, -0.000110626220703125, -2.6702880859375e-05, -3.3378546504536644e-06, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, -0.00011002353858202696, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.780292510986328e-05, -3.814697265625e-06, -6.708026885986328, -2.288818359375e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.000392913818359375, 0.0, -0.0028115510940551758, -3.814697265625e-06, -0.001514434814453125, -5.7220458984375e-06, -7.05718994140625e-05, -5.14984130859375e-05, -3.4928321838378906e-05, -1.9073486328125e-06, -7.05718994140625e-05, -0.0002536773681640625, -0.000270843505859375, -0.002512216567993164, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.0007882118225097656, 0.0, -0.0012836456298828125, -0.000110626220703125, -5.7220458984375e-06, -1.215934844367439e-05, -3.576278118089249e-07, -5.964484444120899e-07, -2.3841855067985307e-07], "choice_history": [97, 283, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Imp", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "Hero", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "Hero", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Imp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE, True)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "score": -7.184697482443369, "score_history": [-4.00543212890625e-05, -0.00017547607421875, -1.537788011773955e-05, -4.410734163684538e-06, 0.0, -2.3245811462402344e-05, 0.0, -9.1552734375e-05, -3.814697265625e-05, -7.015332221984863, -9.5367431640625e-05, -1.9073486328125e-06, -2.384185791015625e-06, -1.9073486328125e-06, -0.000723719596862793, 0.0, -0.07381057739257812, -7.2479248046875e-05, -0.0001010894775390625, -4.732496745418757e-05, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -0.00011466373689472675, 0.0, -5.91278076171875e-05, -1.1444091796875e-05, -5.7220458984375e-05, -3.814697265625e-06, -4.017353057861328e-05, -3.814697265625e-06, -0.0494232177734375, -3.814697265625e-06, -2.288818359375e-05, -7.62939453125e-06, -0.00011444091796875, 0.0, -7.259845733642578e-05, -3.814697265625e-06, -0.00153350830078125, -7.62939453125e-06, -9.918212890625e-05, -4.00543212890625e-05, -3.504753112792969e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.03998279571533203, 0.0, -0.0002727508544921875, -0.0015430450439453125, -0.0004367828369140625, -0.0001579418167239055, -3.576278118089249e-07, -2.253152706543915e-05, -2.2649765014648438e-06], "choice_history": [97, 283, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 318, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Imp", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": "__init__", "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Imp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "score": -7.449358934919466, "score_history": [-4.00543212890625e-05, -0.00017547607421875, -1.537788011773955e-05, -4.410734163684538e-06, 0.0, -2.3245811462402344e-05, 0.0, -9.1552734375e-05, -3.814697265625e-05, -0.0011615753173828125, -3.62396240234375e-05, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -0.0007877349853515625, -0.000110626220703125, -2.6702880859375e-05, -3.3378546504536644e-06, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, -0.00011002353858202696, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.780292510986328e-05, -3.814697265625e-06, -0.03930091857910156, -5.7220458984375e-06, -1.9073486328125e-05, -9.5367431640625e-06, -0.000102996826171875, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.001407623291015625, -5.7220458984375e-06, -6.4849853515625e-05, -4.00543212890625e-05, -3.6597251892089844e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.000232696533203125, -0.0002117156982421875, -0.0025216341018676758, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -7.400633335113525, -1.9073486328125e-06, -0.0013980865478515625, -0.0002689361572265625, -1.71661376953125e-05, -3.814697265625e-06, -9.536738616588991e-07, -1.2077362043783069e-07, -1.1920928244535389e-07], "choice_history": [97, 283, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Imp", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Imp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "p"}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        from <UNK> import spare_part_list\n        return Minion(1, 1, deathrattle=Deathrattle(Damage(1), HeroSelector\n            (EnemyPlayer())))\n", "score": -7.975528819003976, "score_history": [-4.00543212890625e-05, -0.00017547607421875, -1.537788011773955e-05, -4.410734163684538e-06, 0.0, -2.3245811462402344e-05, 0.0, -9.1552734375e-05, -3.814697265625e-05, -0.0011615753173828125, -3.62396240234375e-05, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -0.0007877349853515625, -0.000110626220703125, -2.6702880859375e-05, -3.3378546504536644e-06, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, -0.00011002353858202696, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.780292510986328e-05, -3.814697265625e-06, -0.03930091857910156, -5.7220458984375e-06, -1.9073486328125e-05, -9.5367431640625e-06, -0.000102996826171875, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.001407623291015625, -5.7220458984375e-06, -6.4849853515625e-05, -4.00543212890625e-05, -3.6597251892089844e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.000232696533203125, -0.0002117156982421875, -0.0025216341018676758, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.0006927251815795898, 0.0, -6.673654556274414, -0.07251739501953125, -0.00064849853515625, -0.0007359965238720179, 0.0, -0.022161483764648438, -0.000759124755859375, -0.024174204096198082, -0.001834869384765625, -0.0017856358317658305, 0.0, -0.0615692138671875, -0.06807708740234375, -0.010014417581260204, -4.00543212890625e-05, -0.0033934747334569693, -2.3841855067985307e-07, -0.0006777348462492228, -1.1920928244535389e-07, -0.06265449523925781, -0.021508216857910156, -0.11376667022705078, -0.7362490892410278, -0.0009443756425753236, -0.0003452301025390625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0026937220245599747, -9.894371032714844e-06, -0.01999664306640625, -5.841255187988281e-06, -1.9073486328125e-06, -0.000400543212890625, -0.0034379959106445312, -2.47955322265625e-05, -0.007373049855232239, -0.016249656677246094, -6.103515625e-05], "choice_history": [97, 283, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Imp", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 359, 110, 162, "<UNK>", "<EOS>", 337, 332, "spare_part_list", "<EOS>", "0", "<EOS>", 134, 307, "Minion", "<EOS>", "1", "<EOS>", "1", "<EOS>", 353, 92, 259, "Damage", "<EOS>", 346, 52, 179, "1", "<EOS>", "Hero", "Selector", "<EOS>", 346, 88, 325, "Enemy", "Player", "<EOS>"], "model_output": {"hole6": [{"names": [{"name": "spare_part_list", "_type": "alias"}], "_type": "ImportFrom", "level": 0, "module": "<UNK>"}, {"hole1": 1, "hole3": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": [{"_type": "Template79", "hole0": "EnemyPlayer"}], "_type": "Template41", "hole0": "Damage", "hole2": "HeroSelector"}], "_type": "Template68", "hole0": "Minion", "hole2": 1}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Imp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.Hero,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.132052534434898, "score_history": [-4.00543212890625e-05, -0.00017547607421875, -1.537788011773955e-05, -4.410734163684538e-06, 0.0, -2.3245811462402344e-05, 0.0, -9.1552734375e-05, -3.814697265625e-05, -0.0011615753173828125, -3.62396240234375e-05, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -0.0007877349853515625, -0.000110626220703125, -2.6702880859375e-05, -3.3378546504536644e-06, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, -0.00011002353858202696, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.780292510986328e-05, -3.814697265625e-06, -0.03930091857910156, -5.7220458984375e-06, -1.9073486328125e-05, -9.5367431640625e-06, -0.000102996826171875, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -8.072027206420898, -0.0125579833984375, -3.814697265625e-05, -8.58306884765625e-05, -3.886222839355469e-05, 0.0, -5.91278076171875e-05, -0.0002613067626953125, -0.000225067138671875, -0.0021632909774780273, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -0.0006831884384155273, 0.0, -0.001323699951171875, -0.000102996826171875, -5.7220458984375e-06, -1.0132790521311108e-05, -2.3841855067985307e-07, 1.1878546501975507e-07, -1.1920928244535389e-07], "choice_history": [97, 283, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Imp", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "Hero", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "Hero", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Imp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.WARLOCK)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.153190725721657, "score_history": [-4.00543212890625e-05, -0.00017547607421875, -1.537788011773955e-05, -4.410734163684538e-06, 0.0, -2.3245811462402344e-05, 0.0, -9.1552734375e-05, -3.814697265625e-05, -0.0011615753173828125, -3.62396240234375e-05, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -0.0007877349853515625, -0.000110626220703125, -2.6702880859375e-05, -3.3378546504536644e-06, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, -0.00011002353858202696, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.780292510986328e-05, -3.814697265625e-06, -0.03930091857910156, -5.7220458984375e-06, -1.9073486328125e-05, -9.5367431640625e-06, -0.000102996826171875, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.001407623291015625, -5.7220458984375e-06, -6.4849853515625e-05, -4.00543212890625e-05, -3.6597251892089844e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.000232696533203125, -0.0002117156982421875, -8.10634994506836, 0.0, -3.814697265625e-06, 0.0, -0.0009462833404541016, 0.0, -0.001277923583984375, -0.000110626220703125, -3.814697265625e-06, -1.0013581231760327e-05, -3.576278118089249e-07, 3.5714037949219346e-07, -2.3841855067985307e-07], "choice_history": [97, 283, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Imp", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "WARLOCK", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "WARLOCK"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Imp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, MINION_TYPE.DEMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.182247797670556, "score_history": [-4.00543212890625e-05, -0.00017547607421875, -1.537788011773955e-05, -4.410734163684538e-06, 0.0, -2.3245811462402344e-05, 0.0, -9.1552734375e-05, -3.814697265625e-05, -0.0011615753173828125, -3.62396240234375e-05, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -8.011021614074707, -0.0002079010009765625, -1.33514404296875e-05, -1.2516897186287679e-05, 0.0, -7.62939453125e-06, -2.288818359375e-05, -0.00027445898740552366, 0.0, -0.00254058837890625, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.647804260253906e-05, -1.9073486328125e-06, -0.07546424865722656, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000110626220703125, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -0.001438140869140625, -7.62939453125e-06, -0.000392913818359375, -2.47955322265625e-05, -5.8531761169433594e-05, 0.0, -0.0039463043212890625, 0.0, -0.000244140625, 0.0, -0.0010625123977661133, 0.0, -0.01966094970703125, -3.814697265625e-06, -0.0057849884033203125, -0.05194664001464844, -0.000331878662109375, -0.0037616491317749023, 0.0, -1.52587890625e-05, 0.0, -0.0006660223007202148, 0.0, -0.0013370513916015625, -5.14984130859375e-05, -5.7220458984375e-06, -9.894372851704247e-06, -4.768370445162873e-07, 4.7607682063244283e-07, -2.3841855067985307e-07], "choice_history": [97, 283, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 351, 53, 183, "Imp", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DEMON", "_type": "Attribute"}]}], "hole0": "Imp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.DREAM, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.476975673080624, "score_history": [-4.00543212890625e-05, -0.00017547607421875, -1.537788011773955e-05, -4.410734163684538e-06, 0.0, -2.3245811462402344e-05, 0.0, -9.1552734375e-05, -3.814697265625e-05, -0.0011615753173828125, -3.62396240234375e-05, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -0.0007877349853515625, -0.000110626220703125, -2.6702880859375e-05, -3.3378546504536644e-06, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, -0.00011002353858202696, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.780292510986328e-05, -3.814697265625e-06, -8.465502738952637, -1.1444091796875e-05, -1.52587890625e-05, -5.7220458984375e-06, -0.000148773193359375, 0.0, -0.00019299983978271484, -1.9073486328125e-06, -0.0027713775634765625, -5.7220458984375e-06, -6.29425048828125e-05, -4.57763671875e-05, -3.3020973205566406e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.000240325927734375, -0.000186920166015625, -0.0025769472122192383, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.0006850957870483398, 0.0, -0.001346588134765625, -0.0001049041748046875, -5.7220458984375e-06, -1.215934844367439e-05, -3.576278118089249e-07, -8.349161362275481e-07, -1.1920928244535389e-07], "choice_history": [97, 283, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Imp", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "DREAM", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Imp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.508763903076584, "score_history": [-4.00543212890625e-05, -0.00017547607421875, -1.537788011773955e-05, -4.410734163684538e-06, 0.0, -2.3245811462402344e-05, 0.0, -9.1552734375e-05, -3.814697265625e-05, -0.0011615753173828125, -3.62396240234375e-05, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -0.0007877349853515625, -0.000110626220703125, -2.6702880859375e-05, -3.3378546504536644e-06, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, -0.00011002353858202696, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.780292510986328e-05, -3.814697265625e-06, -0.03930091857910156, -5.7220458984375e-06, -1.9073486328125e-05, -9.5367431640625e-06, -0.000102996826171875, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -0.001407623291015625, -5.7220458984375e-06, -6.4849853515625e-05, -4.00543212890625e-05, -3.6597251892089844e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.000232696533203125, -0.0002117156982421875, -8.459529876708984, 0.0, -3.814697265625e-06, 0.0, -0.0033419132232666016, 0.0, -0.0012226104736328125, -0.000152587890625, -3.814697265625e-06, -1.9788742065429688e-05, -3.576278118089249e-07, -8.349707059096545e-07, -2.3841855067985307e-07], "choice_history": [97, 283, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Imp", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "MECH"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "RARE", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Imp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.Player,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.606719606723765, "score_history": [-4.00543212890625e-05, -0.00017547607421875, -1.537788011773955e-05, -4.410734163684538e-06, 0.0, -2.3245811462402344e-05, 0.0, -9.1552734375e-05, -3.814697265625e-05, -0.0011615753173828125, -3.62396240234375e-05, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -0.0007877349853515625, -0.000110626220703125, -2.6702880859375e-05, -3.3378546504536644e-06, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, -0.00011002353858202696, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.780292510986328e-05, -3.814697265625e-06, -0.03930091857910156, -5.7220458984375e-06, -1.9073486328125e-05, -9.5367431640625e-06, -0.000102996826171875, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -8.542465209960938, -0.016674041748046875, -7.62939453125e-05, -0.000110626220703125, -2.765655517578125e-05, 0.0, -6.67572021484375e-05, -0.0002079010009765625, -0.000255584716796875, -0.0024760961532592773, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0005477666854858398, 0.0, -0.0012149810791015625, -0.000110626220703125, -5.7220458984375e-06, -1.2040139154123608e-05, -2.3841855067985307e-07, -1.1962583812419325e-07, -1.1920928244535389e-07], "choice_history": [97, 283, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Imp", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "Player", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "Player", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Imp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -8.652739995303328, "score_history": [-4.00543212890625e-05, -0.00017547607421875, -1.537788011773955e-05, -4.410734163684538e-06, 0.0, -2.3245811462402344e-05, 0.0, -9.1552734375e-05, -3.814697265625e-05, -0.0011615753173828125, -3.62396240234375e-05, 0.0, -7.987022399902344e-06, -1.9073486328125e-06, -0.00011074542999267578, 0.0, -0.0007877349853515625, -0.000110626220703125, -2.6702880859375e-05, -3.3378546504536644e-06, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, -0.00011002353858202696, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -5.53131103515625e-05, -5.7220458984375e-06, -4.780292510986328e-05, -3.814697265625e-06, -0.03930091857910156, -5.7220458984375e-06, -1.9073486328125e-05, -9.5367431640625e-06, -0.000102996826171875, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -8.60564136505127, -3.814697265625e-06, -2.86102294921875e-05, -0.000156402587890625, -3.516674041748047e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0003261566162109375, -0.00032806396484375, -0.002533435821533203, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.0005782842636108398, 0.0, -0.000469207763671875, -0.0001068115234375, -5.7220458984375e-06, -1.0132790521311108e-05, -2.3841855067985307e-07, -9.54067218117416e-07, -1.1920928244535389e-07], "choice_history": [97, 283, "Imp", "<EOS>", "Minion", "Card", "<EOS>", 358, 136, 319, 38, 325, "super", "<EOS>", "__init__", "<EOS>", 350, 53, 183, "Imp", "<EOS>", 52, 179, "1", "<EOS>", 42, 143, 21, 174, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 51, 175, "False", "<EOS>", 353, 94, 316, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "1", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 1}], "hole2": [{"hole1": "__init__", "hole3": [{"_type": "Template75", "hole0": "DEMON"}], "_type": "Template77", "hole0": {"_type": "Template79", "hole0": "super"}, "hole2": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "ALL", "_type": "Attribute"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "COMMON", "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}]}], "hole0": "Imp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
{"gold_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(2))), SelfSelector(),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "beams": [{"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(IsType(\n            MINION_TYPE.MECH)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -2.941018830868302, "score_history": [-0.0052585601806640625, -1.71661376953125e-05, -0.004716817755252123, -1.4901076610840391e-05, 0.0, -5.844980478286743e-06, -1.919269561767578e-05, 0.0, -0.000873565673828125, -0.41252803802490234, -0.001956939697265625, -2.145764938177308e-06, -2.110004425048828e-05, -5.9604644775390625e-06, 0.0, -3.5762730021815514e-07, 0.0, -0.5437383651733398, -0.016448974609375, -0.1197892427444458, -0.000179290771484375, -0.3588380813598633, -0.0023365020751953125, -0.16611157357692719, -0.02417778968811035, 0.0, -0.0016422271728515625, -1.0547494888305664, -0.00026702880859375, -0.19275569915771484, -0.0002651214599609375, -4.1961669921875e-05, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.0001087188720703125, -0.0012111663818359375, -8.20159912109375e-05, -0.03257643058896065, 0.0, -0.0002461368858348578, 0.0], "choice_history": [97, 283, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 28, 261, "Minion", "Selector", "<EOS>", 346, 74, 297, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "PRIEST", "hole0": "Twilight Whelp", "_type": "Template27", "hole3": "battlecry", "hole1": 1, "hole4": {"hole1": [{"_type": "Template60", "hole0": "MECH"}], "_type": "Template42", "hole0": "MinionSelector"}}], "hole0": "TwilightWhelp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(IsType(\n            MINION_TYPE.MECH)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -3.1761463849105667, "score_history": [-0.0052585601806640625, -1.71661376953125e-05, -0.004716817755252123, -1.4901076610840391e-05, 0.0, -5.844980478286743e-06, -1.919269561767578e-05, 0.0, -0.000873565673828125, -0.41252803802490234, -0.001956939697265625, -2.145764938177308e-06, -2.110004425048828e-05, -5.9604644775390625e-06, 0.0, -3.5762730021815514e-07, 0.0, -0.9243288040161133, -3.814697265625e-06, -0.015695691108703613, -8.58306884765625e-05, -0.31693077087402344, -0.0023174285888671875, -0.25400468707084656, -0.01478111743927002, 0.0, -0.003314971923828125, -1.015028953552246, -0.0002536773681640625, -0.16849327087402344, -0.0002460479736328125, -4.38690185546875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.0001049041748046875, -0.00151824951171875, -8.0108642578125e-05, -0.03321598842740059, 0.0, -0.00024327656137757003, 0.0], "choice_history": [97, 283, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "battlecry", "<EOS>", 28, 261, "Minion", "Selector", "<EOS>", 346, 74, 297, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "ROGUE", "hole0": "Twilight Whelp", "_type": "Template27", "hole3": "battlecry", "hole1": 1, "hole4": {"hole1": [{"_type": "Template60", "hole0": "MECH"}], "_type": "Template42", "hole0": "MinionSelector"}}], "hole0": "TwilightWhelp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(GiveEffect(1),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -3.748632184795035, "score_history": [-0.0052585601806640625, -1.71661376953125e-05, -0.004716817755252123, -1.4901076610840391e-05, 0.0, -5.844980478286743e-06, -1.919269561767578e-05, 0.0, -0.000873565673828125, -1.1321649551391602, -1.511587142944336, -4.529942543740617e-06, -9.655952453613281e-06, -3.218649908376392e-06, 0.0, -3.933900188712869e-06, -1.9073486328125e-06, -0.12450504302978516, -0.000171661376953125, -0.14498795568943024, -0.1560327261686325, -0.0026161852292716503, -9.5367431640625e-06, -0.3988189697265625, -0.00032806396484375, -0.009476271457970142, -1.9073486328125e-06, -0.21879971027374268, -2.0265579223632812e-06, -1.1920928244535389e-07, -2.038477578025777e-05, -1.9073486328125e-06, -0.00011098384857177734, 0.0, -2.86102294921875e-05, -8.58306884765625e-05, -3.0517578125e-05, -0.03787374496459961, 0.0, -4.8636207793606445e-05, 0.0], "choice_history": [97, 283, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 207, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Give", "Effect", "<EOS>", 346, 52, 179, "1", "<EOS>", "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "HeroSelector", "hole2": "COMMON", "hole0": "Twilight Whelp", "_type": "Template15", "hole3": "GiveEffect", "hole1": 1, "hole4": [{"n": 1, "_type": "Num"}]}], "hole0": "TwilightWhelp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON)))),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -3.85457687711083, "score_history": [-0.0052585601806640625, -1.71661376953125e-05, -0.004716817755252123, -1.4901076610840391e-05, 0.0, -5.844980478286743e-06, -1.919269561767578e-05, 0.0, -0.000873565673828125, -0.41252803802490234, -0.001956939697265625, -2.145764938177308e-06, -2.110004425048828e-05, -5.9604644775390625e-06, 0.0, -3.5762730021815514e-07, 0.0, -0.5437383651733398, -0.016448974609375, -0.1197892427444458, -0.000179290771484375, -0.3588380813598633, -0.0023365020751953125, -0.16611157357692719, -0.02417778968811035, 0.0, -0.0016422271728515625, -0.5046195983886719, -0.70623779296875, -7.62939453125e-06, -2.6702880859375e-05, -0.6618150472640991, -2.6941299438476562e-05, -0.0001392364501953125, -0.1755237579345703, -0.011340141296386719, -0.012647628784179688, -0.0009059906005859375, -1.71661376953125e-05, -2.288818359375e-05, -0.000354766845703125, -7.62939453125e-06, -9.918212890625e-05, 0.0, -0.0005016326904296875, -0.000362396240234375, -0.013723373413085938, -3.635883331298828e-05, -0.000110626220703125, 0.0, -9.72747802734375e-05, 0.0, -7.82012939453125e-05, -0.07638168334960938, -0.0002803802490234375, -0.03047490119934082, -1.1920928244535389e-07, -5.507317473529838e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 28, 261, "Minion", "Selector", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "PRIEST", "hole0": "Twilight Whelp", "_type": "Template27", "hole3": "battlecry", "hole1": 1, "hole4": {"hole1": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Call"}], "_type": "Template42", "hole0": "MinionSelector"}}], "hole0": "TwilightWhelp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(1))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -3.9195462954512195, "score_history": [-0.0052585601806640625, -1.71661376953125e-05, -0.004716817755252123, -1.4901076610840391e-05, 0.0, -5.844980478286743e-06, -1.919269561767578e-05, 0.0, -0.000873565673828125, -1.1321649551391602, -1.9647231101989746, -6.6756979322235566e-06, -2.765655517578125e-05, -2.3841855067985307e-07, 0.0, -2.0265601961000357e-06, -1.9073486328125e-06, -0.22423171997070312, -1.1444091796875e-05, -0.012073636054992676, -0.2916445732116699, 0.0, -0.07515907287597656, -0.0011129379272460938, -0.00010371165262768045, -0.0751185417175293, -5.7220458984375e-06, -9.5367431640625e-06, -0.0001773834228515625, -9.5367431640625e-06, -0.0072603072039783, -1.52587890625e-05, -0.0012781620025634766, -0.0004596710205078125, -1.1920928244535389e-07, -0.016791699454188347, -1.71661376953125e-05, -0.005471467971801758, 0.0, 0.0, -8.58306884765625e-05, -0.000751495361328125, -0.0066776275634765625, -3.62396240234375e-05, -1.9073486328125e-06, -0.002636432647705078, -0.0004181861877441406, -7.867813110351562e-06, -0.00122833251953125, -0.0041828155517578125, -0.008783340454101562, -5.7220458984375e-06, -5.7220458984375e-05, -0.003185272216796875, -4.38690185546875e-05, -3.62396240234375e-05, -0.017760276794433594, -0.00643157958984375, -0.0010404586791992188, -0.0004025697708129883, -1.1444091796875e-05, -7.62939453125e-06, -0.0001773834228515625, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -0.000293731689453125, -0.0002040863037109375, -0.011506080627441406, -8.20159912109375e-05, -8.7738037109375e-05, -6.67572021484375e-05, 0.0, -0.0006084442138671875, -7.30752944946289e-05, -0.000301361083984375, -8.20159912109375e-05, -0.0038137431256473064, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -6.29425048828125e-05, -0.000102996826171875, -7.43865966796875e-05, -0.029262661933898926, 0.0, -2.7179348762729205e-05, 0.0], "choice_history": [97, 283, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 208, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "COMMON", "<EOS>", "Give", "<EOS>", 346, 58, 231, "Change", "Attack", "<EOS>", 346, 52, 179, "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", "Self", "Selector", "<EOS>", 346, 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "SelfSelector", "hole2": "COMMON", "hole0": "Twilight Whelp", "_type": "Template15", "hole3": "Give", "hole1": 1, "hole4": [{"hole1": [{"n": 1, "_type": "Num"}], "hole3": 1, "_type": "Template32", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}], "hole8": [{"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}]}], "hole0": "TwilightWhelp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -4.06400709464458, "score_history": [-0.0052585601806640625, -1.71661376953125e-05, -0.004716817755252123, -1.4901076610840391e-05, 0.0, -5.844980478286743e-06, -1.919269561767578e-05, 0.0, -0.000873565673828125, -0.41252803802490234, -0.001956939697265625, -2.145764938177308e-06, -2.110004425048828e-05, -5.9604644775390625e-06, 0.0, -3.5762730021815514e-07, 0.0, -0.5437383651733398, -0.016448974609375, -0.1197892427444458, -0.000179290771484375, -0.3588380813598633, -0.0023365020751953125, -0.16611157357692719, -0.02417778968811035, 0.0, -0.0016422271728515625, -0.5046195983886719, -1.6050958633422852, -3.4332275390625e-05, 0.0, -0.18511652946472168, -0.0005018711090087891, -2.2649765014648438e-06, -0.000354766845703125, -0.021735191345214844, -0.004116058349609375, -5.7220458984375e-06, -0.0004253387451171875, -0.0022106170654296875, -5.7220458984375e-05, -3.24249267578125e-05, -0.019809722900390625, -0.006206512451171875, -0.0002422332763671875, -0.0002442598342895508, -9.5367431640625e-06, -7.62939453125e-06, -0.0003566741943359375, -1.9073486328125e-06, -6.103515625e-05, 0.0, -0.000278472900390625, -0.000194549560546875, -0.016321182250976562, -7.62939453125e-05, -9.72747802734375e-05, -8.96453857421875e-05, 0.0, -0.0006866455078125, -8.094310760498047e-05, -0.000335693359375, -6.103515625e-05, -0.00400268891826272, -7.62939453125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -7.05718994140625e-05, -0.0001049041748046875, -7.2479248046875e-05, -0.03146660327911377, 0.0, -2.5629668016335927e-05, 0.0], "choice_history": [97, 283, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 28, 261, "Minion", "Selector", "<EOS>", 346, 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "PRIEST", "hole0": "Twilight Whelp", "_type": "Template27", "hole3": "battlecry", "hole1": 1, "hole4": {"hole1": [{"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}], "_type": "Template42", "hole0": "MinionSelector"}}], "hole0": "TwilightWhelp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(\n            ManaChange(-3)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -4.252472909712992, "score_history": [-0.0052585601806640625, -1.71661376953125e-05, -0.004716817755252123, -1.4901076610840391e-05, 0.0, -5.844980478286743e-06, -1.919269561767578e-05, 0.0, -0.000873565673828125, -0.41252803802490234, -0.001956939697265625, -2.145764938177308e-06, -2.110004425048828e-05, -5.9604644775390625e-06, 0.0, -3.5762730021815514e-07, 0.0, -0.5437383651733398, -0.016448974609375, -0.1197892427444458, -0.000179290771484375, -0.3588380813598633, -0.0023365020751953125, -0.16611157357692719, -0.02417778968811035, 0.0, -0.0016422271728515625, -0.5046195983886719, -0.70623779296875, -7.62939453125e-06, -2.6702880859375e-05, -0.8590091466903687, -0.0005716042360290885, -7.62939453125e-05, -1.52587890625e-05, -0.20269489288330078, -0.0017518997192382812, -7.82012939453125e-05, -0.0003070831298828125, -3.814697265625e-06, -0.2008054107427597, -3.814697265625e-06, -0.0004100799560546875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -1.52587890625e-05, -0.007648468017578125, -3.4332275390625e-05, -0.10939908027648926, 0.0, -4.7205765440594405e-05, 0.0], "choice_history": [97, 283, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 28, 261, "Minion", "Selector", "<EOS>", 346, 45, 150, 21, 174, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "3", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "PRIEST", "hole0": "Twilight Whelp", "_type": "Template27", "hole3": "battlecry", "hole1": 1, "hole4": {"hole1": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Call"}], "_type": "Template42", "hole0": "MinionSelector"}}], "hole0": "TwilightWhelp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(\n            ManaChange(-3)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -4.28003345618697, "score_history": [-0.0052585601806640625, -1.71661376953125e-05, -0.004716817755252123, -1.4901076610840391e-05, 0.0, -5.844980478286743e-06, -1.919269561767578e-05, 0.0, -0.000873565673828125, -0.41252803802490234, -0.001956939697265625, -2.145764938177308e-06, -2.110004425048828e-05, -5.9604644775390625e-06, 0.0, -3.5762730021815514e-07, 0.0, -0.9243288040161133, -3.814697265625e-06, -0.015695691108703613, -8.58306884765625e-05, -0.31693077087402344, -0.0023174285888671875, -0.25400468707084656, -0.01478111743927002, 0.0, -0.003314971923828125, -0.519256591796875, -0.6583642959594727, -7.62939453125e-06, -2.6702880859375e-05, -0.6357274055480957, -0.0005605171900242567, -5.91278076171875e-05, -1.33514404296875e-05, -0.1840667724609375, -0.0014028549194335938, -6.4849853515625e-05, -0.000286102294921875, -3.814697265625e-06, -0.20213063061237335, -3.814697265625e-06, -0.000415802001953125, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -1.52587890625e-05, -0.0090789794921875, -3.4332275390625e-05, -0.11156213283538818, 0.0, -4.589452510117553e-05, 0.0], "choice_history": [97, 283, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "battlecry", "<EOS>", 28, 261, "Minion", "Selector", "<EOS>", 346, 45, 150, 21, 174, "Mana", "Change", "<EOS>", 346, 89, 331, 139, 23, 179, "3", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "ROGUE", "hole0": "Twilight Whelp", "_type": "Template27", "hole3": "battlecry", "hole1": 1, "hole4": {"hole1": [{"func": {"id": "ManaChange", "_type": "Name"}, "args": [{"operand": {"n": 3, "_type": "Num"}, "op": {"_type": "USub"}, "_type": "UnaryOp"}], "_type": "Call"}], "_type": "Template42", "hole0": "MinionSelector"}}], "hole0": "TwilightWhelp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON)))),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -4.372784650869889, "score_history": [-0.0052585601806640625, -1.71661376953125e-05, -0.004716817755252123, -1.4901076610840391e-05, 0.0, -5.844980478286743e-06, -1.919269561767578e-05, 0.0, -0.000873565673828125, -0.41252803802490234, -0.001956939697265625, -2.145764938177308e-06, -2.110004425048828e-05, -5.9604644775390625e-06, 0.0, -3.5762730021815514e-07, 0.0, -0.9243288040161133, -3.814697265625e-06, -0.015695691108703613, -8.58306884765625e-05, -0.31693077087402344, -0.0023174285888671875, -0.25400468707084656, -0.01478111743927002, 0.0, -0.003314971923828125, -0.519256591796875, -0.6583642959594727, -7.62939453125e-06, -2.6702880859375e-05, -0.9036736488342285, -2.5033950805664062e-05, -0.0001373291015625, -0.17699241638183594, -0.011408805847167969, -0.009119033813476562, -0.000827789306640625, -1.52587890625e-05, -2.288818359375e-05, -0.000347137451171875, -5.7220458984375e-06, -0.0001010894775390625, 0.0, -0.0004520416259765625, -0.000400543212890625, -0.013545036315917969, -3.635883331298828e-05, -0.0001220703125, 0.0, -9.5367431640625e-05, 0.0, -8.96453857421875e-05, -0.08841609954833984, -0.0002727508544921875, -0.03208792209625244, -1.1920928244535389e-07, -5.149708886165172e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "battlecry", "<EOS>", 28, 261, "Minion", "Selector", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "ROGUE", "hole0": "Twilight Whelp", "_type": "Template27", "hole3": "battlecry", "hole1": 1, "hole4": {"hole1": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Call"}], "_type": "Template42", "hole0": "MinionSelector"}}], "hole0": "TwilightWhelp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -4.412345087677636, "score_history": [-0.0052585601806640625, -1.71661376953125e-05, -0.004716817755252123, -1.4901076610840391e-05, 0.0, -5.844980478286743e-06, -1.919269561767578e-05, 0.0, -0.000873565673828125, -0.41252803802490234, -0.001956939697265625, -2.145764938177308e-06, -2.110004425048828e-05, -5.9604644775390625e-06, 0.0, -3.5762730021815514e-07, 0.0, -0.9243288040161133, -3.814697265625e-06, -0.015695691108703613, -8.58306884765625e-05, -0.31693077087402344, -0.0023174285888671875, -0.25400468707084656, -0.01478111743927002, 0.0, -0.003314971923828125, -0.519256591796875, -1.6234617233276367, -3.814697265625e-05, 0.0, -0.20416736602783203, -0.0005133152008056641, -2.2649765014648438e-06, -0.0003795623779296875, -0.021338462829589844, -0.0032825469970703125, -5.7220458984375e-06, -0.000324249267578125, -0.0022029876708984375, -5.340576171875e-05, -3.24249267578125e-05, -0.019455909729003906, -0.005978584289550781, -0.000232696533203125, -0.00023663043975830078, -9.5367431640625e-06, -7.62939453125e-06, -0.0003376007080078125, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.000263214111328125, -0.0001983642578125, -0.016094207763671875, -7.43865966796875e-05, -9.34600830078125e-05, -8.96453857421875e-05, 0.0, -0.000705718994140625, -8.094310760498047e-05, -0.000339508056640625, -6.103515625e-05, -0.003982542548328638, -7.62939453125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -7.05718994140625e-05, -0.0001049041748046875, -7.2479248046875e-05, -0.031715989112854004, 0.0, -2.539125671319198e-05, 0.0], "choice_history": [97, 283, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "battlecry", "<EOS>", 28, 261, "Minion", "Selector", "<EOS>", 346, 45, 151, 21, 174, "Greater", "Than", "<EOS>", 346, 45, 150, 21, 174, "Count", "<EOS>", 346, 67, 281, "Is", "Type", "<EOS>", 346, 42, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 353, 95, 336, "value", "<EOS>", 23, 179, "0", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "ROGUE", "hole0": "Twilight Whelp", "_type": "Template27", "hole3": "battlecry", "hole1": 1, "hole4": {"hole1": [{"func": {"id": "GreaterThan", "_type": "Name"}, "args": [{"func": {"id": "Count", "_type": "Name"}, "args": [{"hole1": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}], "_type": "Template48", "hole0": "IsType"}], "_type": "Call"}], "_type": "Call", "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}]}], "_type": "Template42", "hole0": "MinionSelector"}}], "hole0": "TwilightWhelp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(\n            CardQuery(conditions=[IsWeapon()])), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -4.544946364996399, "score_history": [-0.0052585601806640625, -1.71661376953125e-05, -0.004716817755252123, -1.4901076610840391e-05, 0.0, -5.844980478286743e-06, -1.919269561767578e-05, 0.0, -0.000873565673828125, -0.41252803802490234, -0.001956939697265625, -2.145764938177308e-06, -2.110004425048828e-05, -5.9604644775390625e-06, 0.0, -3.5762730021815514e-07, 0.0, -0.5437383651733398, -0.016448974609375, -0.1197892427444458, -0.000179290771484375, -0.3588380813598633, -0.0023365020751953125, -0.16611157357692719, -0.02417778968811035, 0.0, -0.0016422271728515625, -0.5046195983886719, -1.3703298568725586, -1.9073486328125e-05, 0.0, -0.009551167488098145, -0.0021196603775024414, -1.9073486328125e-06, -6.103515625e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.060423851013183594, 0.0, -0.78955078125, -0.017493247985839844, -0.00032639503479003906, -0.054787278175354004, -0.0004596710205078125, -0.0001087188720703125, -1.9073486328125e-06, -0.0003892183303833008, 0.0, -0.000667572021484375, -0.0002117156982421875, -7.43865966796875e-05, -0.07500410079956055, -3.576278118089249e-07, -2.9682672902708873e-05, -1.1920928244535389e-07], "choice_history": [97, 283, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 28, 261, "Minion", "Selector", "<EOS>", 346, 45, 149, 21, 174, "Card", "Query", "<EOS>", 353, 95, 336, "conditions", "<EOS>", 34, 313, "Is", "Weapon", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 2}], "hole2": [{"hole2": "PRIEST", "hole0": "Twilight Whelp", "_type": "Template27", "hole3": "battlecry", "hole1": 1, "hole4": {"hole1": [{"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"value": {"_type": "Template73", "hole0": "IsWeapon"}, "arg": "conditions", "_type": "keyword"}], "_type": "Call"}], "_type": "Template42", "hole0": "MinionSelector"}}], "hole0": "TwilightWhelp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True, effects=[Effect(Attack(),\n            ActionTag(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            SelfSelector()))])\n", "score": -5.0379659432491835, "score_history": [-0.0052585601806640625, -1.71661376953125e-05, -0.004716817755252123, -1.4901076610840391e-05, 0.0, -5.844980478286743e-06, -1.919269561767578e-05, 0.0, -0.000873565673828125, -0.41252803802490234, -0.001956939697265625, -2.145764938177308e-06, -2.110004425048828e-05, -5.9604644775390625e-06, 0.0, -3.5762730021815514e-07, 0.0, -0.5437383651733398, -0.016448974609375, -2.189474105834961, 0.0, -0.0019998550415039062, 0.0, -3.62396240234375e-05, 0.0, -0.0003414154052734375, 0.0, -0.07166576385498047, -3.457069396972656e-05, -6.866455078125e-05, 0.0, -1.33514404296875e-05, 0.0, -6.103515625e-05, -0.07930278778076172, -0.000820159912109375, -9.476207196712494e-07, -1.919269561767578e-05, -0.014253854751586914, -1.4305104514278355e-06, -0.0009769194293767214, -1.1920922133867862e-06, -0.04915428161621094, -0.001064300537109375, -3.814697265625e-06, -0.13919448852539062, -5.7220458984375e-06, -6.4849853515625e-05, -0.0005550384521484375, -0.0032072067260742188, 0.0, -0.6940183639526367, -0.0054759979248046875, -0.35454654693603516, -0.0017414093017578125, -3.814697265625e-06, -0.03600502014160156, -0.0003719329833984375, -0.00014495849609375, -3.814697265625e-06, -0.061777710914611816, -0.0004143714904785156, -2.3841855067985307e-07, -0.0002460479736328125, -0.0022335052490234375, -0.0012464523315429688, -5.53131103515625e-05, -0.04042625427246094, -3.814697265625e-06, -0.2562030553817749, 0.0, -0.0004788637161254883, -0.000400543212890625, 0.0, -0.03684614971280098, -3.814697265625e-06, -0.0023746490478515625, -2.288818359375e-05, -0.004987120628356934, -4.0531158447265625e-06, -1.1920928244535389e-07], "choice_history": [97, 283, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 354, 95, 336, "stealth", "<EOS>", 22, 175, "True", "<EOS>", 93, 274, "Attack", "<EOS>", 346, 45, 150, 21, 174, "Action", "Tag", "<EOS>", 347, 55, 215, "Change", "Attack", "<EOS>", "2", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "stealth", "_type": "keyword"}, {"hole2": [{"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 2, "hole3": 2, "_type": "Template21", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Call"}], "_type": "Template45", "hole0": "Attack"}], "_type": "Template68", "hole0": "Minion", "hole2": 1}], "hole2": [{"hole2": "PRIEST", "hole0": "Twilight Whelp", "_type": "Template27", "hole3": "minion_type", "hole1": 1, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}}], "hole0": "TwilightWhelp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True, effects=[Effect(TurnEnded(),\n            ActionTag(Give(ChangeHealth(1)), MinionSelector(picker=\n            RandomPicker())))])\n", "score": -5.986405462584514, "score_history": [-0.0052585601806640625, -1.71661376953125e-05, -0.004716817755252123, -1.4901076610840391e-05, 0.0, -5.844980478286743e-06, -1.919269561767578e-05, 0.0, -0.000873565673828125, -0.41252803802490234, -0.001956939697265625, -2.145764938177308e-06, -2.110004425048828e-05, -5.9604644775390625e-06, 0.0, -3.5762730021815514e-07, 0.0, -0.5437383651733398, -0.016448974609375, -2.189474105834961, 0.0, -0.0019998550415039062, 0.0, -3.62396240234375e-05, 0.0, -0.0003414154052734375, 0.0, -0.07166576385498047, -3.457069396972656e-05, -6.866455078125e-05, 0.0, -1.33514404296875e-05, 0.0, -6.103515625e-05, -0.07930278778076172, -0.000820159912109375, -9.476207196712494e-07, -1.919269561767578e-05, -0.014253854751586914, -1.4305104514278355e-06, -0.0009769194293767214, -1.1920922133867862e-06, -0.04915428161621094, -0.001064300537109375, -3.814697265625e-06, -0.13919448852539062, -5.7220458984375e-06, -6.4849853515625e-05, -0.0005550384521484375, -0.0032072067260742188, 0.0, -1.2162914276123047, -0.45122814178466797, -0.03563496097922325, -0.0009105205535888672, -4.9591064453125e-05, -0.000763535441365093, -0.4563697576522827, 0.0, -0.147918701171875, -0.0037994384765625, -0.03733283653855324, -3.564313010429032e-05, -0.00032806396484375, -7.2479248046875e-05, -3.576278118089249e-07, -0.0004291534423828125, -0.000179290771484375, 0.0, -0.09048962593078613, -4.1723224057932384e-06, -5.340576171875e-05, -5.7220458984375e-06, -0.0065593719482421875, -1.5974044799804688e-05, -4.172316494077677e-06], "choice_history": [97, 283, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 354, 95, 336, "stealth", "<EOS>", 22, 175, "True", "<EOS>", 90, 221, "Turn", "Ended", "<EOS>", "Give", "<EOS>", 346, 81, 311, "1", "<EOS>", "Minion", "Selector", "<EOS>", 353, 95, 336, "picker", "<EOS>", 38, 325, "Random", "Picker", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "stealth", "_type": "keyword"}, {"hole5": [{"value": {"_type": "Template79", "hole0": "RandomPicker"}, "arg": "picker", "_type": "keyword"}], "hole2": [{"_type": "Template71", "hole0": 1}], "hole0": "TurnEnded", "_type": "Template25", "hole3": "MinionSelector", "hole1": "Give"}], "_type": "Template68", "hole0": "Minion", "hole2": 1}], "hole2": [{"hole2": "PRIEST", "hole0": "Twilight Whelp", "_type": "Template27", "hole3": "minion_type", "hole1": 1, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}}], "hole0": "TwilightWhelp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True, effects=[Effect(Attack(),\n            ActionTag(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(2))]),\n            SelfSelector()))])\n", "score": -6.591401637675482, "score_history": [-0.0052585601806640625, -1.71661376953125e-05, -0.004716817755252123, -1.4901076610840391e-05, 0.0, -5.844980478286743e-06, -1.919269561767578e-05, 0.0, -0.000873565673828125, -0.41252803802490234, -0.001956939697265625, -2.145764938177308e-06, -2.110004425048828e-05, -5.9604644775390625e-06, 0.0, -3.5762730021815514e-07, 0.0, -0.5437383651733398, -0.016448974609375, -2.189474105834961, 0.0, -0.0019998550415039062, 0.0, -3.62396240234375e-05, 0.0, -0.0003414154052734375, 0.0, -0.07166576385498047, -3.457069396972656e-05, -6.866455078125e-05, 0.0, -1.33514404296875e-05, 0.0, -6.103515625e-05, -0.07930278778076172, -0.000820159912109375, -9.476207196712494e-07, -1.919269561767578e-05, -0.014253854751586914, -1.4305104514278355e-06, -0.0009769194293767214, -1.1920922133867862e-06, -0.04915428161621094, -0.001064300537109375, -3.814697265625e-06, -0.13919448852539062, -5.7220458984375e-06, -6.4849853515625e-05, -0.0005550384521484375, -0.0032072067260742188, 0.0, -0.6940183639526367, -0.0054759979248046875, -0.35454654693603516, -0.0017414093017578125, -3.814697265625e-06, -0.03600502014160156, -0.0003719329833984375, -0.00014495849609375, -3.814697265625e-06, -0.061777710914611816, -0.0004143714904785156, -2.3841855067985307e-07, -0.0002460479736328125, -0.0022335052490234375, -0.0012464523315429688, -5.53131103515625e-05, -0.04042625427246094, -3.814697265625e-06, -1.511355996131897, -9.5367431640625e-06, -0.00012969970703125, -0.0001049041748046875, 0.0, -0.33836495876312256, -1.9073486328125e-06, -0.001415252685546875, -2.47955322265625e-05, -0.00334775447845459, -2.0265579223632812e-06, -1.1920928244535389e-07], "choice_history": [97, 283, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 358, 125, 223, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "minion_type", "<EOS>", 13, 143, 21, 174, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 134, 307, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 354, 95, 336, "stealth", "<EOS>", 22, 175, "True", "<EOS>", 93, 274, "Attack", "<EOS>", 346, 45, 150, 21, 174, "Action", "Tag", "<EOS>", 347, 55, 215, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 88, 325, "Self", "Selector", "<EOS>"], "model_output": {"hole6": [{"hole1": 2, "hole3": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "stealth", "_type": "keyword"}, {"hole2": [{"func": {"id": "ActionTag", "_type": "Name"}, "args": [{"hole1": 1, "hole3": 2, "_type": "Template21", "hole0": "ChangeAttack", "hole2": "ChangeHealth"}, {"_type": "Template79", "hole0": "SelfSelector"}], "_type": "Call"}], "_type": "Template45", "hole0": "Attack"}], "_type": "Template68", "hole0": "Minion", "hole2": 1}], "hole2": [{"hole2": "PRIEST", "hole0": "Twilight Whelp", "_type": "Template27", "hole3": "minion_type", "hole1": 1, "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "DRAGON", "_type": "Attribute"}}], "hole0": "TwilightWhelp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            And(MinionIsNotTarget(), Is<UNK>(CARD_RARITY.LEGENDARY)),\n            BothPlayer(), Battlecry(TurnStarted(player=CurrentPlayer()),\n            ActionTag(Kill(), SelfSelector()))), Effect(TurnEnded(),\n            ActionTag(Duplicate(CurrentPlayer()), PlayerSelector()))))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -10.687995188079377, "score_history": [-0.0052585601806640625, -1.71661376953125e-05, -0.004716817755252123, -1.4901076610840391e-05, 0.0, -5.844980478286743e-06, -1.919269561767578e-05, 0.0, -0.000873565673828125, -1.1321649551391602, -2.6799545288085938, -7.986990567587782e-06, -1.7285345165873878e-05, -7.152555099310121e-07, 0.0, -8.344638331436727e-07, 0.0, -0.09215080738067627, -0.000606536865234375, -0.014117608778178692, -0.0007107257260940969, -0.004067657515406609, -0.0003299713134765625, -1.1920928244535389e-07, -0.3963279724121094, -0.0025129318237304688, -0.0003604888916015625, -1.1444091796875e-05, 0.0, -0.03259551525115967, -0.003584146499633789, -8.392333984375e-05, -0.26828479766845703, -1.1444091796875e-05, -0.004689783323556185, -0.03748781606554985, -0.012357563711702824, -0.0014272924745455384, -0.02201366424560547, -0.012364387512207031, -0.0003833770751953125, -6.103515625e-05, -0.0006771087646484375, -0.005367398262023926, -0.001573920133523643, -1.9073468138230965e-06, -0.000335693359375, -0.0915384292602539, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.12401211261749268, -0.0006103515625, -0.07444572448730469, 0.0, -0.5627431869506836, -0.0013256072998046875, -0.027950286865234375, -2.5153160095214844e-05, 0.0, -0.16626644134521484, -0.0001659393310546875, -1.1444091796875e-05, 0.0, -0.09336745738983154, -0.0014867782592773438, -0.002216339111328125, -0.2312459945678711, -0.059586524963378906, -9.5367431640625e-06, 0.0, -0.11999928951263428, -0.3195962905883789, -1.33514404296875e-05, -0.0001659393310546875, -7.43865966796875e-05, -1.52587890625e-05, -0.0049610137939453125, 0.0, -6.103515625e-05, 0.0, -0.007089972496032715, -7.855844160076231e-05, 0.0, -0.12816429138183594, -0.15977859497070312, -0.19617480039596558, -2.658360608620569e-05, -0.08280658721923828, 0.0, 0.0, -0.0028095245361328125, -1.590064525604248, -1.0204458236694336, -0.001079081674106419, -0.0027157068252563477, -7.033347174001392e-06, -0.4944760799407959, -0.00118278618901968, -5.7220458984375e-06, -0.019815444946289062, -3.814697265625e-06, -0.2633450925350189, -0.007504927925765514, 0.0, -0.02482404001057148, -2.944469451904297e-05, -5.960462772236497e-07, -0.000728249317035079, 0.0, -0.0001219510959344916, 0.0, -9.34600830078125e-05, -4.57763671875e-05, -5.14984130859375e-05, -0.06494832038879395, -2.3841855067985307e-07, -2.8490614567999728e-05, 0.0], "choice_history": [97, 283, "Twilight", "Whelp", "<EOS>", "Minion", "Card", "<EOS>", 358, 119, 205, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "EPIC", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 348, 45, 150, 21, 174, "And", "<EOS>", 347, 88, 325, "Minion", "Is", "Not", "Target", "<EOS>", 45, 150, 21, 174, "Is", "<UNK>", "<EOS>", 346, 42, 143, 21, 174, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 88, 325, "Both", "Player", "<EOS>", 45, 150, 21, 174, "Battlecry", "<EOS>", 347, 45, 149, 21, 174, "Turn", "Started", "<EOS>", 353, 95, 336, "player", "<EOS>", 38, 325, "Current", "Player", "<EOS>", 64, 269, "Kill", "<EOS>", "Self", "Selector", "<EOS>", 346, 57, 228, "Turn", "Ended", "<EOS>", "Duplicate", "<EOS>", 346, 88, 325, "Current", "Player", "<EOS>", "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 358, 132, 299, "2", "<EOS>", "1", "<EOS>"], "model_output": {"hole6": [{"hole1": 1, "_type": "Template62", "hole0": 2}], "hole2": [{"hole5": "MinionSelector", "hole2": "EPIC", "hole0": "Twilight Whelp", "_type": "Template15", "hole3": "Kill", "hole1": 1, "hole8": [{"hole4": "PlayerSelector", "hole1": "Duplicate", "_type": "Template30", "hole0": "TurnEnded", "hole2": [{"_type": "Template79", "hole0": "CurrentPlayer"}]}], "hole6": [{"func": {"id": "And", "_type": "Name"}, "args": [{"_type": "Template79", "hole0": "MinionIsNotTarget"}, {"func": {"id": "Is<UNK>", "_type": "Name"}, "args": [{"value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "LEGENDARY", "_type": "Attribute"}], "_type": "Call"}], "_type": "Call"}, {"_type": "Template79", "hole0": "BothPlayer"}, {"func": {"id": "Battlecry", "_type": "Name"}, "args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"value": {"_type": "Template79", "hole0": "CurrentPlayer"}, "arg": "player", "_type": "keyword"}], "_type": "Call"}, {"hole3": "SelfSelector", "_type": "Template44", "hole0": "Kill"}], "_type": "Call"}]}], "hole0": "TwilightWhelp", "_type": "Template5", "hole3": "create_minion", "hole1": "MinionCard", "hole4": "player"}}]}
